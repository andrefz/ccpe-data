; ModuleID = 'llvm-link'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%class.ProgramChecker = type { i32, i32, i64 }
%class.Random = type <{ %class.Array, i32, [4 x i8] }>
%class.Array = type { i32, i32, i8*, i32* }
%class.Buf = type { %class.Array.0 }
%class.Array.0 = type { i32, i32, i8*, i8* }
%class.Stretch = type { %class.Array.1 }
%class.Array.1 = type { i32, i32, i8*, i16* }
%class.SmallStationaryContextMap = type { %class.Array.1, i32, i16* }
%class.StateMap = type { i32, i32, %class.Array }
%class.ContextMap = type <{ i32, [4 x i8], %class.Array.5, %class.Array.6, %class.Array.6, %class.Array, %class.Array.6, %class.StateMap*, i32, [4 x i8] }>
%class.Array.5 = type { i32, i32, i8*, %"class.ContextMap::E"* }
%"class.ContextMap::E" = type { [7 x i16], i8, [7 x [7 x i8]] }
%class.Array.6 = type { i32, i32, i8*, i8** }
%class.Array.7 = type { i32, i32, i8*, %struct.HUF* }
%struct.HUF = type { i32, i32, i32 }
%class.IntBuf = type { %class.Array }
%class.BH = type <{ %class.Array.0, i32, [4 x i8] }>
%class.Mixer = type { i32, i32, i32, %class.Array.1, %class.Array.1, %class.Array, i32, i32, i32, %class.Array, %class.Mixer* }
%class.APM = type { %class.StateMap }
%class.Array.9 = type { i32, i32, i8*, %struct.DMCNode* }
%struct.DMCNode = type { [2 x i32], i8, [3 x i8] }
%class.RunContextMap = type { %class.BH, i8* }
%class.APM1 = type { i32, i32, %class.Array.1 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%class.Predictor = type { i32 }
%class.Encoder = type { %class.Predictor, i32, %struct._IO_FILE*, i32, i32, i32, %struct._IO_FILE* }
%class.Array.14 = type { i32, i32, i8*, i64* }

$_ZN7StretchD2Ev = comdat any

$_ZN5ArrayIsLi0EED2Ev = comdat any

$_ZN14ProgramChecker5allocEi = comdat any

$__clang_call_terminate = comdat any

$_ZN5ArrayIsLi0EEC2Ei = comdat any

$_ZN5ArrayIsLi0EEixEi = comdat any

$_ZN5ArrayIsLi0EE6createEi = comdat any

$_ZN4IlogD2Ev = comdat any

$_ZN5ArrayIhLi0EED2Ev = comdat any

$_ZN5ArrayIhLi0EEC2Ei = comdat any

$_ZN5ArrayIhLi0EEixEi = comdat any

$_ZN5ArrayIhLi0EE6createEi = comdat any

$_ZN3BufC2Ei = comdat any

$_ZN3BufD2Ev = comdat any

$_ZN6RandomC2Ev = comdat any

$_ZN6RandomD2Ev = comdat any

$_ZN5ArrayIjLi0EED2Ev = comdat any

$_ZN5ArrayIjLi0EEC2Ei = comdat any

$_ZN5ArrayIjLi0EEixEi = comdat any

$_ZN5ArrayIjLi0EE6createEi = comdat any

$_ZN14ProgramCheckerC2Ev = comdat any

$_ZN5ArrayIiLi0EED2Ev = comdat any

$_ZN5ArrayIsLi16EED2Ev = comdat any

$_ZN5ArrayIsLi16EEC2Ei = comdat any

$_ZN5ArrayIiLi0EEC2Ei = comdat any

$_ZN5ArrayIiLi0EEixEi = comdat any

$_ZN5ArrayIsLi16EEixEi = comdat any

$_ZN5ArrayIiLi0EE6createEi = comdat any

$_ZN5ArrayIsLi16EE6createEi = comdat any

$_ZN5ArrayItLi0EEC2Ei = comdat any

$_ZN5ArrayItLi0EEixEi = comdat any

$_ZN5ArrayItLi0EED2Ev = comdat any

$_ZN5ArrayItLi0EE6createEi = comdat any

$_ZN8StateMapD2Ev = comdat any

$_ZN5ArrayIN10ContextMap1EELi64EEC2Ei = comdat any

$_ZN5ArrayIPhLi0EEC2Ei = comdat any

$_ZN5ArrayIN10ContextMap1EELi64EEixEi = comdat any

$_ZN5ArrayIPhLi0EEixEi = comdat any

$_ZN5ArrayIPhLi0EED2Ev = comdat any

$_ZN5ArrayIN10ContextMap1EELi64EED2Ev = comdat any

$_ZN5ArrayIPhLi0EE6createEi = comdat any

$_ZN5ArrayIN10ContextMap1EELi64EE6createEi = comdat any

$_ZN6RandomclEv = comdat any

$_ZNK5ArrayIN10ContextMap1EELi64EE4sizeEv = comdat any

$_ZN10ContextMap1E3getEt = comdat any

$_ZNK4IlogclEt = comdat any

$_ZN5Mixer3addEi = comdat any

$_Z4mix2R5MixeriR8StateMap = comdat any

$_ZN8StateMap1pEii = comdat any

$_ZNK7StretchclEi = comdat any

$_ZNK5ArrayIsLi0EEixEi = comdat any

$_ZN8StateMap6updateEi = comdat any

$_ZNK5ArrayIhLi0EEixEi = comdat any

$_ZN25SmallStationaryContextMapC2Ei = comdat any

$_ZN25SmallStationaryContextMapD2Ev = comdat any

$_ZNK3BufclEi = comdat any

$_ZNK5ArrayIiLi0EE4sizeEv = comdat any

$_ZNK3Buf4sizeEv = comdat any

$_ZN3BufixEi = comdat any

$_ZN25SmallStationaryContextMap3setEj = comdat any

$_Z3minii = comdat any

$_ZN25SmallStationaryContextMap3mixER5Mixeri = comdat any

$_ZNK5ArrayItLi0EE4sizeEv = comdat any

$_ZNK5ArrayIhLi0EE4sizeEv = comdat any

$_ZN10ContextMap3setEji = comdat any

$_ZN10ContextMap3mixER5Mixer = comdat any

$_Z4llogj = comdat any

$_Z2i4i = comdat any

$_Z2i2i = comdat any

$_Z6sqrbufi = comdat any

$_Z4hashjjjjj = comdat any

$_ZN5Mixer3setEii = comdat any

$_ZN5ArrayI3HUFLi0EEC2Ei = comdat any

$_ZN5ArrayI3HUFLi0EED2Ev = comdat any

$_ZN6IntBufC2Ei = comdat any

$_ZN6IntBufD2Ev = comdat any

$_ZN5ArrayI3HUFLi0EEixEi = comdat any

$_ZNK5ArrayI3HUFLi0EE4sizeEv = comdat any

$_ZN6IntBufixEi = comdat any

$_ZN2BHILi9EEC2Ei = comdat any

$_ZN2BHILi9EED2Ev = comdat any

$_ZN3APMD2Ev = comdat any

$_ZN5Mixer6updateEv = comdat any

$_ZN2BHILi9EEixEj = comdat any

$_ZN5Mixer1pEv = comdat any

$_ZN3APM1pEiii = comdat any

$_ZN5ArrayIhLi64EEixEi = comdat any

$_ZN5ArrayIhLi64EED2Ev = comdat any

$_ZN5ArrayIhLi64EEC2Ei = comdat any

$_ZN5ArrayIhLi64EE6createEi = comdat any

$_ZN5ArrayI3HUFLi0EE6createEi = comdat any

$_Z1Xii = comdat any

$_Z2s2i = comdat any

$_Z1ciiiii = comdat any

$_ZN5ArrayI7DMCNodeLi0EEC2Ei = comdat any

$_ZN5ArrayI7DMCNodeLi0EED2Ev = comdat any

$_ZNK5ArrayI7DMCNodeLi0EE4sizeEv = comdat any

$_ZN5ArrayI7DMCNodeLi0EEixEi = comdat any

$_ZN5ArrayI7DMCNodeLi0EE6createEi = comdat any

$_ZN13RunContextMapC2Ei = comdat any

$_ZN13RunContextMapD2Ev = comdat any

$_ZN13RunContextMap3setEj = comdat any

$_ZN13RunContextMap3mixER5Mixer = comdat any

$_ZN13RunContextMap1pEv = comdat any

$_ZN2BHILi4EEixEj = comdat any

$_ZN2BHILi4EED2Ev = comdat any

$_ZN2BHILi4EEC2Ei = comdat any

$_ZN4APM1D2Ev = comdat any

$_ZN4APM11pEiii = comdat any

$_ZN7Encoder10decompressEv = comdat any

$_ZN7Encoder4codeEi = comdat any

$_ZNK9Predictor1pEv = comdat any

$_ZNK7Encoder4sizeEv = comdat any

$_ZN7Encoder7setFileEP8_IO_FILE = comdat any

$_ZN7Encoder8compressEi = comdat any

$_ZN6StringC2EPKc = comdat any

$_ZN5ArrayIcLi0EEixEi = comdat any

$_ZNK6String5c_strEv = comdat any

$_ZN6StringD2Ev = comdat any

$_ZN5ArrayIcLi0EED2Ev = comdat any

$_ZNK5ArrayIcLi0EEixEi = comdat any

$_ZN5ArrayIcLi0EEC2Ei = comdat any

$_ZN6StringpLEPKc = comdat any

$_ZN5ArrayIcLi0EE8pop_backEv = comdat any

$_ZN5ArrayIcLi0EE9push_backERKc = comdat any

$_Z3maxii = comdat any

$_ZN5ArrayIcLi0EE6resizeEi = comdat any

$_ZN5ArrayIcLi0EE6createEi = comdat any

$_ZNK5ArrayIcLi0EE4sizeEv = comdat any

$_ZN5ArrayIPcLi0EEC2Ei = comdat any

$_ZN5ArrayIlLi0EEC2Ei = comdat any

$_ZN5ArrayIPcLi0EE6resizeEi = comdat any

$_ZN5ArrayIlLi0EE6resizeEi = comdat any

$_ZN5ArrayIlLi0EEixEi = comdat any

$_ZN5ArrayIPcLi0EEixEi = comdat any

$_ZN3Buf7setsizeEi = comdat any

$_ZN6StringaSEPKc = comdat any

$_ZNK14ProgramChecker5printEv = comdat any

$_ZN5ArrayIlLi0EED2Ev = comdat any

$_ZN5ArrayIPcLi0EED2Ev = comdat any

$_ZN5ArrayIhLi0EE6resizeEi = comdat any

$_ZN5ArrayIlLi0EE6createEi = comdat any

$_ZN5ArrayIPcLi0EE6createEi = comdat any

$_ZZN2BHILi9EEixEjE3tmp = comdat any

$_ZZN2BHILi4EEixEjE3tmp = comdat any

@programChecker = dso_local global %class.ProgramChecker zeroinitializer, align 8
@rnd = dso_local global %class.Random zeroinitializer, align 8
@pos = dso_local global i32 0, align 4
@level = dso_local global i32 5, align 4
@y = dso_local global i32 0, align 4
@c0 = dso_local global i32 1, align 4
@c4 = dso_local global i32 0, align 4
@bpos = dso_local global i32 0, align 4
@buf = dso_local global %class.Buf zeroinitializer, align 8
@ilog = dso_local global %class.Buf zeroinitializer, align 8
@stretch = dso_local global %class.Stretch zeroinitializer, align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_paq8p.cpp, i8* null }]
@__dso_handle = external hidden global i8
@_ZZ6squashiE1t = internal constant [33 x i32] [i32 1, i32 2, i32 3, i32 6, i32 10, i32 16, i32 27, i32 45, i32 73, i32 120, i32 194, i32 310, i32 488, i32 747, i32 1101, i32 1546, i32 2047, i32 2549, i32 2994, i32 3348, i32 3607, i32 3785, i32 3901, i32 3975, i32 4022, i32 4050, i32 4068, i32 4079, i32 4085, i32 4089, i32 4092, i32 4093, i32 4094], align 16
@.str.59 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1
@_ZTIPKc = external dso_local constant i8*
@_ZL11State_table = internal constant [256 x [4 x i8]] [[4 x i8] c"\01\02\00\00", [4 x i8] c"\03\05\01\00", [4 x i8] c"\04\06\00\01", [4 x i8] c"\07\0A\02\00", [4 x i8] c"\08\0C\01\01", [4 x i8] c"\09\0D\01\01", [4 x i8] c"\0B\0E\00\02", [4 x i8] c"\0F\13\03\00", [4 x i8] c"\10\17\02\01", [4 x i8] c"\11\18\02\01", [4 x i8] c"\12\19\02\01", [4 x i8] c"\14\1B\01\02", [4 x i8] c"\15\1C\01\02", [4 x i8] c"\16\1D\01\02", [4 x i8] c"\1A\1E\00\03", [4 x i8] c"\1F!\04\00", [4 x i8] c" #\03\01", [4 x i8] c" #\03\01", [4 x i8] c" #\03\01", [4 x i8] c" #\03\01", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"$'\01\03", [4 x i8] c"$'\01\03", [4 x i8] c"$'\01\03", [4 x i8] c"$'\01\03", [4 x i8] c"&(\00\04", [4 x i8] c")+\05\00", [4 x i8] c"*-\04\01", [4 x i8] c"*-\04\01", [4 x i8] c",/\03\02", [4 x i8] c",/\03\02", [4 x i8] c".1\02\03", [4 x i8] c".1\02\03", [4 x i8] c"03\01\04", [4 x i8] c"03\01\04", [4 x i8] c"24\00\05", [4 x i8] c"5+\06\00", [4 x i8] c"69\05\01", [4 x i8] c"69\05\01", [4 x i8] c"8;\04\02", [4 x i8] c"8;\04\02", [4 x i8] c":=\03\03", [4 x i8] c":=\03\03", [4 x i8] c"<?\02\04", [4 x i8] c"<?\02\04", [4 x i8] c">A\01\05", [4 x i8] c">A\01\05", [4 x i8] c"2B\00\06", [4 x i8] c"C7\07\00", [4 x i8] c"D9\06\01", [4 x i8] c"D9\06\01", [4 x i8] c"FI\05\02", [4 x i8] c"FI\05\02", [4 x i8] c"HK\04\03", [4 x i8] c"HK\04\03", [4 x i8] c"JM\03\04", [4 x i8] c"JM\03\04", [4 x i8] c"LO\02\05", [4 x i8] c"LO\02\05", [4 x i8] c">Q\01\06", [4 x i8] c">Q\01\06", [4 x i8] c"@R\00\07", [4 x i8] c"SE\08\00", [4 x i8] c"TG\07\01", [4 x i8] c"TG\07\01", [4 x i8] c"VI\06\02", [4 x i8] c"VI\06\02", [4 x i8] c",;\05\03", [4 x i8] c",;\05\03", [4 x i8] c":=\04\04", [4 x i8] c":=\04\04", [4 x i8] c"<1\03\05", [4 x i8] c"<1\03\05", [4 x i8] c"LY\02\06", [4 x i8] c"LY\02\06", [4 x i8] c"N[\01\07", [4 x i8] c"N[\01\07", [4 x i8] c"P\\\00\08", [4 x i8] c"]E\09\00", [4 x i8] c"^W\08\01", [4 x i8] c"^W\08\01", [4 x i8] c"`-\07\02", [4 x i8] c"`-\07\02", [4 x i8] c"0c\02\07", [4 x i8] c"0c\02\07", [4 x i8] c"Xe\01\08", [4 x i8] c"Xe\01\08", [4 x i8] c"Pf\00\09", [4 x i8] c"gE\0A\00", [4 x i8] c"hW\09\01", [4 x i8] c"hW\09\01", [4 x i8] c"j9\08\02", [4 x i8] c"j9\08\02", [4 x i8] c">m\02\08", [4 x i8] c">m\02\08", [4 x i8] c"Xo\01\09", [4 x i8] c"Xo\01\09", [4 x i8] c"Pp\00\0A", [4 x i8] c"qU\0B\00", [4 x i8] c"rW\0A\01", [4 x i8] c"rW\0A\01", [4 x i8] c"t9\09\02", [4 x i8] c"t9\09\02", [4 x i8] c">w\02\09", [4 x i8] c">w\02\09", [4 x i8] c"Xy\01\0A", [4 x i8] c"Xy\01\0A", [4 x i8] c"Zz\00\0B", [4 x i8] c"{U\0C\00", [4 x i8] c"|a\0B\01", [4 x i8] c"|a\0B\01", [4 x i8] c"~9\0A\02", [4 x i8] c"~9\0A\02", [4 x i8] c">\81\02\0A", [4 x i8] c">\81\02\0A", [4 x i8] c"b\83\01\0B", [4 x i8] c"b\83\01\0B", [4 x i8] c"Z\84\00\0C", [4 x i8] c"\85U\0D\00", [4 x i8] c"\86a\0C\01", [4 x i8] c"\86a\0C\01", [4 x i8] c"\889\0B\02", [4 x i8] c"\889\0B\02", [4 x i8] c">\8B\02\0B", [4 x i8] c">\8B\02\0B", [4 x i8] c"b\8D\01\0C", [4 x i8] c"b\8D\01\0C", [4 x i8] c"Z\8E\00\0D", [4 x i8] c"\8F_\0E\00", [4 x i8] c"\90a\0D\01", [4 x i8] c"\90a\0D\01", [4 x i8] c"D9\0C\02", [4 x i8] c"D9\0C\02", [4 x i8] c">Q\02\0C", [4 x i8] c">Q\02\0C", [4 x i8] c"b\93\01\0D", [4 x i8] c"b\93\01\0D", [4 x i8] c"d\94\00\0E", [4 x i8] c"\95_\0F\00", [4 x i8] c"\96k\0E\01", [4 x i8] c"\96k\0E\01", [4 x i8] c"l\97\01\0E", [4 x i8] c"l\97\01\0E", [4 x i8] c"d\98\00\0F", [4 x i8] c"\99_\10\00", [4 x i8] c"\9Ak\0F\01", [4 x i8] c"l\9B\01\0F", [4 x i8] c"d\9C\00\10", [4 x i8] c"\9D_\11\00", [4 x i8] c"\9Ek\10\01", [4 x i8] c"l\9F\01\10", [4 x i8] c"d\A0\00\11", [4 x i8] c"\A1i\12\00", [4 x i8] c"\A2k\11\01", [4 x i8] c"l\A3\01\11", [4 x i8] c"n\A4\00\12", [4 x i8] c"\A5i\13\00", [4 x i8] c"\A6u\12\01", [4 x i8] c"v\A7\01\12", [4 x i8] c"n\A8\00\13", [4 x i8] c"\A9i\14\00", [4 x i8] c"\AAu\13\01", [4 x i8] c"v\AB\01\13", [4 x i8] c"n\AC\00\14", [4 x i8] c"\ADi\15\00", [4 x i8] c"\AEu\14\01", [4 x i8] c"v\AF\01\14", [4 x i8] c"n\B0\00\15", [4 x i8] c"\B1i\16\00", [4 x i8] c"\B2u\15\01", [4 x i8] c"v\B3\01\15", [4 x i8] c"n\B4\00\16", [4 x i8] c"\B5s\17\00", [4 x i8] c"\B6u\16\01", [4 x i8] c"v\B7\01\16", [4 x i8] c"x\B8\00\17", [4 x i8] c"\B9s\18\00", [4 x i8] c"\BA\7F\17\01", [4 x i8] c"\80\BB\01\17", [4 x i8] c"x\BC\00\18", [4 x i8] c"\BDs\19\00", [4 x i8] c"\BE\7F\18\01", [4 x i8] c"\80\BF\01\18", [4 x i8] c"x\C0\00\19", [4 x i8] c"\C1s\1A\00", [4 x i8] c"\C2\7F\19\01", [4 x i8] c"\80\C3\01\19", [4 x i8] c"x\C4\00\1A", [4 x i8] c"\C5s\1B\00", [4 x i8] c"\C6\7F\1A\01", [4 x i8] c"\80\C7\01\1A", [4 x i8] c"x\C8\00\1B", [4 x i8] c"\C9s\1C\00", [4 x i8] c"\CA\7F\1B\01", [4 x i8] c"\80\CB\01\1B", [4 x i8] c"x\CC\00\1C", [4 x i8] c"\CDs\1D\00", [4 x i8] c"\CE\7F\1C\01", [4 x i8] c"\80\CF\01\1C", [4 x i8] c"x\D0\00\1D", [4 x i8] c"\D1}\1E\00", [4 x i8] c"\D2\7F\1D\01", [4 x i8] c"\80\D3\01\1D", [4 x i8] c"\82\D4\00\1E", [4 x i8] c"\D5}\1F\00", [4 x i8] c"\D6\89\1E\01", [4 x i8] c"\8A\D7\01\1E", [4 x i8] c"\82\D8\00\1F", [4 x i8] c"\D9} \00", [4 x i8] c"\DA\89\1F\01", [4 x i8] c"\8A\DB\01\1F", [4 x i8] c"\82\DC\00 ", [4 x i8] c"\DD}!\00", [4 x i8] c"\DE\89 \01", [4 x i8] c"\8A\DF\01 ", [4 x i8] c"\82\E0\00!", [4 x i8] c"\E1}\22\00", [4 x i8] c"\E2\89!\01", [4 x i8] c"\8A\E3\01!", [4 x i8] c"\82\E4\00\22", [4 x i8] c"\E5}#\00", [4 x i8] c"\E6\89\22\01", [4 x i8] c"\8A\E7\01\22", [4 x i8] c"\82\E8\00#", [4 x i8] c"\E9}$\00", [4 x i8] c"\EA\89#\01", [4 x i8] c"\8A\EB\01#", [4 x i8] c"\82\EC\00$", [4 x i8] c"\ED}%\00", [4 x i8] c"\EE\89$\01", [4 x i8] c"\8A\EF\01$", [4 x i8] c"\82\F0\00%", [4 x i8] c"\F1}&\00", [4 x i8] c"\F2\89%\01", [4 x i8] c"\8A\F3\01%", [4 x i8] c"\82\F4\00&", [4 x i8] c"\F5\87'\00", [4 x i8] c"\F6\89&\01", [4 x i8] c"\8A\F7\01&", [4 x i8] c"\8C\F8\00'", [4 x i8] c"\F9\87(\00", [4 x i8] c"\FAE'\01", [4 x i8] c"P\FB\01'", [4 x i8] c"\8C\FC\00(", [4 x i8] c"\F9\87)\00", [4 x i8] c"\FAE(\01", [4 x i8] c"P\FB\01(", [4 x i8] c"\8C\FC\00)", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], align 16
@_ZL2dt = internal global [1024 x i32] zeroinitializer, align 16
@_ZGVZ10matchModelR5MixerE1t = internal global i64 0, align 8
@_ZZ10matchModelR5MixerE1t = internal global %class.Array zeroinitializer, align 8
@_ZGVZ10matchModelR5MixerE4scm1 = internal global i64 0, align 8
@_ZZ10matchModelR5MixerE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZZ10matchModelR5MixerE1h = internal global i32 0, align 4
@_ZZ10matchModelR5MixerE3len = internal global i32 0, align 4
@_ZZ10matchModelR5MixerE3ptr = internal global i32 0, align 4
@_ZZ10matchModelR5MixerE6result = internal global i32 0, align 4
@_ZGVZ8picModelR5MixerE1t = internal global i64 0, align 8
@_ZZ8picModelR5MixerE1t = internal global %class.Array.0 zeroinitializer, align 8
@_ZGVZ8picModelR5MixerE2sm = internal global i64 0, align 8
@_ZZ8picModelR5MixerE2sm = internal global [3 x %class.StateMap] zeroinitializer, align 16
@_ZZ8picModelR5MixerE3cxt = internal global [3 x i32] zeroinitializer, align 4
@_ZZ8picModelR5MixerE2r0 = internal global i32 0, align 4
@_ZZ8picModelR5MixerE2r1 = internal global i32 0, align 4
@_ZZ8picModelR5MixerE2r2 = internal global i32 0, align 4
@_ZZ8picModelR5MixerE2r3 = internal global i32 0, align 4
@_ZGVZ9wordModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ9wordModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZZ9wordModelR5MixerE5word0 = internal global i32 0, align 4
@_ZZ9wordModelR5MixerE5text0 = internal global i32 0, align 4
@_ZZ9wordModelR5MixerE5word4 = internal global i32 0, align 4
@_ZZ9wordModelR5MixerE5word5 = internal global i32 0, align 4
@_ZZ9wordModelR5MixerE5word3 = internal global i32 0, align 4
@_ZZ9wordModelR5MixerE5word2 = internal global i32 0, align 4
@_ZZ9wordModelR5MixerE5word1 = internal global i32 0, align 4
@_ZZ9wordModelR5MixerE2nl = internal global i32 -2, align 4
@_ZZ9wordModelR5MixerE3nl1 = internal global i32 -3, align 4
@_ZGVZ11recordModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ11recordModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2cn = internal global i64 0, align 8
@_ZZ11recordModelR5MixerE2cn = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2co = internal global i64 0, align 8
@_ZZ11recordModelR5MixerE2co = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2cp = internal global i64 0, align 8
@_ZZ11recordModelR5MixerE2cp = internal global %class.ContextMap zeroinitializer, align 8
@_ZZ11recordModelR5MixerE5cpos1 = internal global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5cpos2 = internal global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5cpos3 = internal global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5cpos4 = internal global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5rlen1 = internal global i32 3, align 4
@_ZZ11recordModelR5MixerE7rcount1 = internal global i32 0, align 4
@_ZZ11recordModelR5MixerE5rlen2 = internal global i32 4, align 4
@_ZZ11recordModelR5MixerE7rcount2 = internal global i32 0, align 4
@_ZZ11recordModelR5MixerE4rlen = internal global i32 2, align 4
@_ZZ11recordModelR5MixerE5wpos1 = internal global [65536 x i32] zeroinitializer, align 16
@_ZGVZ11sparseModelR5MixeriiE2cm = internal global i64 0, align 8
@_ZZ11sparseModelR5MixeriiE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZZ11sparseModelR5MixeriiE4mask = internal global i32 0, align 4
@_ZGVZ13distanceModelR5MixerE2cr = internal global i64 0, align 8
@_ZZ13distanceModelR5MixerE2cr = internal global %class.ContextMap zeroinitializer, align 8
@_ZZ13distanceModelR5MixerE5pos00 = internal global i32 0, align 4
@_ZZ13distanceModelR5MixerE5pos20 = internal global i32 0, align 4
@_ZZ13distanceModelR5MixerE5posnl = internal global i32 0, align 4
@_ZGVZ8bmpModelR5MixerE4scm1 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm2 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm2 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm3 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm3 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm4 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm4 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm5 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm5 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm6 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm6 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm7 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm7 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm8 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm8 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm9 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm9 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE5scm10 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE5scm10 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZZ8bmpModelR5MixerE1w = internal global i32 0, align 4
@_ZZ8bmpModelR5MixerE3eoi = internal global i32 0, align 4
@.str = private unnamed_addr constant [11 x i8] c"BMP %dx%d \00", align 1
@_ZZ8bmpModelR5MixerE4tiff = internal global i32 0, align 4
@.str.5 = private unnamed_addr constant [15 x i8] c"TIFF %dx%dx%d \00", align 1
@_ZGVZ9model8bitR5MixeriE4scm1 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm2 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm2 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm3 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm3 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm4 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm4 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm5 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm5 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm6 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm6 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm7 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm7 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE2cm = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZZ8pgmModelR5MixerE3pgm = internal global i32 0, align 4
@_ZZ8pgmModelR5MixerE7pgm_ptr = internal global i32 0, align 4
@_ZZ8pgmModelR5MixerE1w = internal global i32 0, align 4
@_ZZ8pgmModelR5MixerE7pgm_hdr = internal global [3 x i32] zeroinitializer, align 4
@_ZZ8pgmModelR5MixerE1h = internal global i32 0, align 4
@_ZZ8pgmModelR5MixerE3eoi = internal global i32 0, align 4
@.str.6 = private unnamed_addr constant [10 x i8] c"PGM %dx%d\00", align 1
@_ZZ8pgmModelR5MixerE3col = internal global i32 0, align 4
@_ZZ9bmpModel8R5MixerE2w1 = internal global i32 0, align 4
@_ZZ9bmpModel8R5MixerE1h = internal global i32 0, align 4
@_ZZ9bmpModel8R5MixerE4ibmp = internal global i32 0, align 4
@_ZZ9bmpModel8R5MixerE1w = internal global i32 0, align 4
@_ZZ9bmpModel8R5MixerE3eoi = internal global i32 0, align 4
@.str.7 = private unnamed_addr constant [17 x i8] c"BMP(8-bit) %dx%d\00", align 1
@_ZZ9bmpModel8R5MixerE3col = internal global i32 0, align 4
@_ZZ9rgbModel8R5MixerE1w = internal global i32 0, align 4
@_ZZ9rgbModel8R5MixerE3eoi = internal global i32 0, align 4
@.str.8 = private unnamed_addr constant [17 x i8] c"RGB(8-bit) %dx%d\00", align 1
@_ZZ9rgbModel8R5MixerE3col = internal global i32 0, align 4
@.str.9 = private unnamed_addr constant [4 x i8] c"%s:\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c" %02X\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@_ZGVZ9jpegModelR5MixerE2ht = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2ht = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE3huf = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE3huf = internal global %class.Array.7 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4hbuf = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4hbuf = internal global %class.Array.0 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE5color = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE5color = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4pred = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4pred = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4cbuf = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4cbuf = internal global %class.Buf zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE5cbuf2 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE5cbuf2 = internal global %class.IntBuf zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE8adv_pred = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE8adv_pred = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4sumu = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4sumu = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4sumv = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4sumv = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2ls = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2ls = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE3lcp = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE3lcp = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4zpos = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4zpos = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4qtab = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4qtab = internal global %class.Array.0 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4qmap = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4qmap = internal global %class.Array zeroinitializer, align 8
@_ZZ9jpegModelR5MixerE4jpeg = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE9next_jpeg = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE3app = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE8linesize = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE7mcusize = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE4data = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE6htsize = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE3sof = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE3sos = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE4cpos = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE6mcupos = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE8huffsize = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE8huffbits = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE8huffcode = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE2rs = internal global i32 -1, align 4
@_ZZ9jpegModelR5MixerE7dqt_end = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE9dqt_state = internal global i32 -1, align 4
@_ZZ9jpegModelR5MixerE4qnum = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE6hufsel = internal global [2 x [10 x i32]] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE3zzu = internal constant [64 x i8] c"\00\01\00\00\01\02\03\02\01\00\00\01\02\03\04\05\04\03\02\01\00\00\01\02\03\04\05\06\07\06\05\04\03\02\01\00\01\02\03\04\05\06\07\07\06\05\04\03\02\03\04\05\06\07\07\06\05\04\05\06\07\07\06\07", align 16
@_ZZ9jpegModelR5MixerE3zzv = internal constant [64 x i8] c"\00\00\01\02\01\00\00\01\02\03\04\03\02\01\00\00\01\02\03\04\05\06\05\04\03\02\01\00\00\01\02\03\04\05\06\07\07\06\05\04\03\02\01\02\03\04\05\06\07\07\06\05\04\03\04\05\06\07\07\06\05\06\07\07", align 16
@_ZZ9jpegModelR5MixerE5width = internal global i32 0, align 4
@.str.12 = private unnamed_addr constant [12 x i8] c"JPEG %dx%d \00", align 1
@_ZZ9jpegModelR5MixerE6column = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE3row = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE5huff3 = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE5huff4 = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE5huff2 = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE5huff1 = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE3rs3 = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE3rs4 = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE3rs2 = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE3rs1 = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE4ssum = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE2dc = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE5ssum3 = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE5ssum4 = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE5ssum2 = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE5ssum1 = internal global i32 0, align 4
@_ZZ9jpegModelR5MixerE5sumv2 = internal global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE5sumv3 = internal global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE2kx = internal global [32 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE5sumu2 = internal global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE5sumu3 = internal global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE2we = internal constant [8 x i32] [i32 181, i32 282, i32 353, i32 456, i32 568, i32 671, i32 742, i32 767], align 16
@_ZGVZ9jpegModelR5MixerE1t = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE1t = internal global %class.BH zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE3cxt = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE3cxt = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2cp = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2cp = internal global %class.Array.6 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2sm = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2sm = internal global [28 x %class.StateMap] zeroinitializer, align 16
@_ZGVZ9jpegModelR5MixerE2m1 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2m1 = internal global %class.Mixer zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2a1 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2a1 = internal global %class.APM zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2a2 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2a2 = internal global %class.APM zeroinitializer, align 8
@_ZZ9jpegModelR5MixerE7hbcount = internal global i32 2, align 4
@_ZZN2BHILi9EEixEjE3tmp = linkonce_odr dso_local global [9 x i8] zeroinitializer, comdat, align 1
@_ZGVZ8wavModelR5MixerE1K = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE1K = internal global i32 0, align 4
@_ZGVZ8wavModelR5MixerE4scm1 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm2 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm2 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm3 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm3 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm4 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm4 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm5 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm5 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm6 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm6 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm7 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm7 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm8 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm8 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZZ8wavModelR5MixerE4bits = internal global i32 0, align 4
@_ZZ8wavModelR5MixerE5bytes = internal global i32 0, align 4
@_ZZ8wavModelR5MixerE8channels = internal global i32 0, align 4
@_ZZ8wavModelR5MixerE1w = internal global i32 0, align 4
@_ZZ8wavModelR5MixerE1s = internal global i32 0, align 4
@_ZZ8wavModelR5MixerE3eof = internal global i32 0, align 4
@_ZL1S = internal global i32 0, align 4
@_ZL1D = internal global i32 0, align 4
@_ZZ8wavModelR5MixerE7counter = internal global [2 x i32] zeroinitializer, align 4
@_ZZ8wavModelR5MixerE1n = internal global [2 x i32] zeroinitializer, align 4
@_ZL5wmode = internal global i32 0, align 4
@.str.14 = private unnamed_addr constant [12 x i8] c"WAV %ibits/\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"mono \00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"stereo \00", align 1
@_ZZ8wavModelR5MixerE2pr = internal global [4 x [2 x i32]] zeroinitializer, align 16
@_ZGVZ8exeModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ8exeModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ13indirectModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ13indirectModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZZ13indirectModelR5MixerE2t1 = internal global [256 x i32] zeroinitializer, align 16
@_ZZ13indirectModelR5MixerE2t2 = internal global [65536 x i16] zeroinitializer, align 16
@_ZGVZ8dmcModelR5MixerE1t = internal global i64 0, align 8
@_ZZ8dmcModelR5MixerE1t = internal global %class.Array.9 zeroinitializer, align 8
@_ZGVZ8dmcModelR5MixerE2sm = internal global i64 0, align 8
@_ZZ8dmcModelR5MixerE2sm = internal global %class.StateMap zeroinitializer, align 8
@_ZZ8dmcModelR5MixerE3top = internal global i32 0, align 4
@_ZZ8dmcModelR5MixerE4curr = internal global i32 0, align 4
@_ZZ8dmcModelR5MixerE9threshold = internal global i32 256, align 4
@_ZGVZ13contextModel2vE2cm = internal global i64 0, align 8
@_ZZ13contextModel2vE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE4rcm7 = internal global i64 0, align 8
@_ZZ13contextModel2vE4rcm7 = internal global %class.RunContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE4rcm9 = internal global i64 0, align 8
@_ZZ13contextModel2vE4rcm9 = internal global %class.RunContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE5rcm10 = internal global i64 0, align 8
@_ZZ13contextModel2vE5rcm10 = internal global %class.RunContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE1m = internal global i64 0, align 8
@_ZZ13contextModel2vE1m = internal global %class.Mixer zeroinitializer, align 8
@_ZZ13contextModel2vE4size = internal global i32 0, align 4
@_ZZ13contextModel2vE8filetype = internal global i32 0, align 4
@_ZZ13contextModel2vE3col = internal global i32 0, align 4
@_ZZ13contextModel2vE3col_0 = internal global i32 0, align 4
@_ZZ13contextModel2vE3cxt = internal global [16 x i32] zeroinitializer, align 16
@_ZZN2BHILi4EEixEjE3tmp = linkonce_odr dso_local global [4 x i8] zeroinitializer, comdat, align 1
@_ZGVZN9Predictor6updateEvE1a = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE1a = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a1 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a1 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a2 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a2 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a3 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a3 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a4 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a4 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a5 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a5 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a6 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a6 = internal global %class.APM1 zeroinitializer, align 8
@.str.17 = private unnamed_addr constant [9 x i8] c"%c%c%c%c\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"encode_exe read error\00", align 1
@_ZZ10decode_exeR7EncoderE6offset = internal global i32 0, align 4
@_ZZ10decode_exeR7EncoderE4size = internal global i32 0, align 4
@_ZZ10decode_exeR7EncoderE1q = internal global i32 0, align 4
@_ZZ10decode_exeR7EncoderE5begin = internal global i32 0, align 4
@_ZZ10decode_exeR7EncoderE1c = internal global [5 x i8] zeroinitializer, align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"%c%c%c%c%c\00", align 1
@_ZZ6decodeR7EncoderE3len = internal global i32 0, align 4
@_ZZ6decodeR7EncoderE4type = internal global i32 0, align 4
@.str.20 = private unnamed_addr constant [17 x i8] c"%12d\08\08\08\08\08\08\08\08\08\08\08\08\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.21 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"%s %ld -> \00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"tmpfile\00", align 1
@.str.24 = private unnamed_addr constant [58 x i8] c"Transform fails at %ld, input=%d decoded=%d, skipping...\0A\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"%-12ld\0A\00", align 1
@.str.26 = private unnamed_addr constant [21 x i8] c"Comparing %s %ld -> \00", align 1
@.str.27 = private unnamed_addr constant [34 x i8] c"differ at %d: file=%d archive=%d\0A\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"file is longer\0A\00", align 1
@.str.29 = private unnamed_addr constant [14 x i8] c"identical   \0A\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.31 = private unnamed_addr constant [22 x i8] c"Created directory %s\0A\00", align 1
@.str.32 = private unnamed_addr constant [22 x i8] c"Extracting %s %ld -> \00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"done        \0A\00", align 1
@.str.34 = private unnamed_addr constant [20 x i8] c"Skipping %s %ld -> \00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"not extracted\0A\00", align 1
@_ZGVZ7getlineP8_IO_FILEE1s = internal global i64 0, align 8
@_ZZ7getlineP8_IO_FILEE1s = internal global %class.Buf zeroinitializer, align 8
@.str.36 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZZ7putsizeR6StringS0_PKciE3blk = internal global [24 x i8] zeroinitializer, align 16
@.str.37 = private unnamed_addr constant [5 x i8] c"%ld\09\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.39 = private unnamed_addr constant [39 x i8] c"Valid options are -0 through -9 or -d\0A\00", align 1
@.str.40 = private unnamed_addr constant [645 x i8] c"paq8p archiver (C) 2008, Matt Mahoney et al.\0AFree under GPL, http://www.gnu.org/licenses/gpl.txt\0A\0ATo compress:\0A  paq8p -level file               (compresses to file.paq8p)\0A  paq8p -level archive files...   (creates archive.paq8p)\0A  paq8p file                      (level -%d, pause when done)\0Alevel: -0 = store, -1 -2 -3 = faster (uses 35, 48, 59 MB)\0A-4 -5 -6 -7 -8 = smaller (uses 133, 233, 435, 837, 1643 MB)\0A\0ATo extract or compare:\0A  paq8p -d dir1/archive.paq8p      (extract to dir1)\0A  paq8p -d dir1/archive.paq8p dir2 (extract to dir2)\0A  paq8p archive.paq8p              (extract, pause when done)\0A\0ATo view contents: more < archive.paq8p\0A\0A\00", align 1
@.str.41 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.42 = private unnamed_addr constant [28 x i8] c"%s: not found, skipping...\0A\00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"Nothing to compress\0A\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"wb+\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"paq8p -%d\0D\0A%s\1A\00", align 1
@.str.46 = private unnamed_addr constant [37 x i8] c"Creating archive with %d file(s)...\0A\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"rb+\00", align 1
@.str.48 = private unnamed_addr constant [8 x i8] c"paq8p -\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"%s: not a %s file\0A\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"paq8p\00", align 1
@.str.51 = private unnamed_addr constant [40 x i8] c"Extracting %d file(s) from archive -%d\0A\00", align 1
@.str.52 = private unnamed_addr constant [29 x i8] c"%s: header corrupted at %ld\0A\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"%ld -> %ld\0A\00", align 1
@.str.54 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.56 = private unnamed_addr constant [50 x i8] c"\0AClose this window or press ENTER to continue...\0A\00", align 1
@.str.57 = private unnamed_addr constant [14 x i8] c"fork() failed\00", align 1
@.str.58 = private unnamed_addr constant [3 x i8] c"-d\00", align 1

@_ZN7StretchC1Ev = dso_local unnamed_addr alias void (%class.Stretch*), void (%class.Stretch*)* @_ZN7StretchC2Ev
@_ZN4IlogC1Ev = dso_local unnamed_addr alias void (%class.Buf*), void (%class.Buf*)* @_ZN4IlogC2Ev
@_ZN5MixerD1Ev = dso_local unnamed_addr alias void (%class.Mixer*), void (%class.Mixer*)* @_ZN5MixerD2Ev
@_ZN5MixerC1Eiiii = dso_local unnamed_addr alias void (%class.Mixer*, i32, i32, i32, i32), void (%class.Mixer*, i32, i32, i32, i32)* @_ZN5MixerC2Eiiii
@_ZN8StateMapC1Ei = dso_local unnamed_addr alias void (%class.StateMap*, i32), void (%class.StateMap*, i32)* @_ZN8StateMapC2Ei
@_ZN10ContextMapC1Eii = dso_local unnamed_addr alias void (%class.ContextMap*, i32, i32), void (%class.ContextMap*, i32, i32)* @_ZN10ContextMapC2Eii
@_ZN10ContextMapD1Ev = dso_local unnamed_addr alias void (%class.ContextMap*), void (%class.ContextMap*)* @_ZN10ContextMapD2Ev
@_ZN3APMC1Ei = dso_local unnamed_addr alias void (%class.APM*, i32), void (%class.APM*, i32)* @_ZN3APMC2Ei
@_ZN4APM1C1Ei = dso_local unnamed_addr alias void (%class.APM1*, i32), void (%class.APM1*, i32)* @_ZN4APM1C2Ei
@_ZN9PredictorC1Ev = dso_local unnamed_addr alias void (%class.Predictor*), void (%class.Predictor*)* @_ZN9PredictorC2Ev
@_ZN7EncoderC1E4ModeP8_IO_FILE = dso_local unnamed_addr alias void (%class.Encoder*, i32, %struct._IO_FILE*), void (%class.Encoder*, i32, %struct._IO_FILE*)* @_ZN7EncoderC2E4ModeP8_IO_FILE

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_paq8p.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.1()
  call void @__cxx_global_var_init.2()
  call void @__cxx_global_var_init.3()
  call void @__cxx_global_var_init.4()
  ret void
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZN14ProgramCheckerC2Ev(%class.ProgramChecker* @programChecker)
  ret void
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.1() #0 section ".text.startup" {
  call void @_ZN6RandomC2Ev(%class.Random* @rnd)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Random*)* @_ZN6RandomD2Ev to void (i8*)*), i8* bitcast (%class.Random* @rnd to i8*), i8* @__dso_handle) #2
  ret void
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.2() #0 section ".text.startup" {
  call void @_ZN3BufC2Ei(%class.Buf* @buf, i32 0)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Buf*)* @_ZN3BufD2Ev to void (i8*)*), i8* bitcast (%class.Buf* @buf to i8*), i8* @__dso_handle) #2
  ret void
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.3() #0 section ".text.startup" {
  call void @_ZN4IlogC1Ev(%class.Buf* @ilog)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Buf*)* @_ZN4IlogD2Ev to void (i8*)*), i8* bitcast (%class.Buf* @ilog to i8*), i8* @__dso_handle) #2
  ret void
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.4() #0 section ".text.startup" {
  call void @_ZN7StretchC1Ev(%class.Stretch* @stretch)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Stretch*)* @_ZN7StretchD2Ev to void (i8*)*), i8* bitcast (%class.Stretch* @stretch to i8*), i8* @__dso_handle) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN7StretchD2Ev(%class.Stretch* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.Stretch*, align 8
  store %class.Stretch* %0, %class.Stretch** %2, align 8
  %3 = load %class.Stretch*, %class.Stretch** %2, align 8
  %4 = getelementptr inbounds %class.Stretch, %class.Stretch* %3, i32 0, i32 0
  call void @_ZN5ArrayIsLi0EED2Ev(%class.Array.1* %4) #2
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIsLi0EED2Ev(%class.Array.1* %0) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Array.1*, align 8
  store %class.Array.1* %0, %class.Array.1** %2, align 8
  %3 = load %class.Array.1*, %class.Array.1** %2, align 8
  %4 = getelementptr inbounds %class.Array.1, %class.Array.1* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = mul i64 %6, 2
  %8 = sub i64 0, %7
  %9 = trunc i64 %8 to i32
  invoke void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %9)
          to label %10 unwind label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.Array.1, %class.Array.1* %3, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  call void @free(i8* %12) #2
  ret void

13:                                               ; preds = %1
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  call void @__clang_call_terminate(i8* %15) #15
  unreachable
}

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.ProgramChecker*, align 8
  %4 = alloca i32, align 4
  store %class.ProgramChecker* %0, %class.ProgramChecker** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.ProgramChecker*, %class.ProgramChecker** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = getelementptr inbounds %class.ProgramChecker, %class.ProgramChecker* %5, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, %6
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %class.ProgramChecker, %class.ProgramChecker* %5, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %class.ProgramChecker, %class.ProgramChecker* %5, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %11, %13
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.ProgramChecker, %class.ProgramChecker* %5, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %class.ProgramChecker, %class.ProgramChecker* %5, i32 0, i32 1
  store i32 %17, i32* %18, align 4
  br label %19

19:                                               ; preds = %15, %2
  ret void
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #3

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) #4 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #2
  call void @_ZSt9terminatev() #15
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*)

declare dso_local void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define dso_local void @_ZN7StretchC2Ev(%class.Stretch* %0) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Stretch*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca i32, align 4
  store %class.Stretch* %0, %class.Stretch** %2, align 8
  %9 = load %class.Stretch*, %class.Stretch** %2, align 8
  %10 = getelementptr inbounds %class.Stretch, %class.Stretch* %9, i32 0, i32 0
  call void @_ZN5ArrayIsLi0EEC2Ei(%class.Array.1* %10, i32 4096)
  store i32 0, i32* %3, align 4
  store i32 -2047, i32* %4, align 4
  br label %11

11:                                               ; preds = %40, %1
  %12 = load i32, i32* %4, align 4
  %13 = icmp sle i32 %12, 2047
  br i1 %13, label %14, label %43

14:                                               ; preds = %11
  %15 = load i32, i32* %4, align 4
  %16 = invoke i32 @_Z6squashi(i32 %15)
          to label %17 unwind label %33

17:                                               ; preds = %14
  store i32 %16, i32* %5, align 4
  %18 = load i32, i32* %3, align 4
  store i32 %18, i32* %8, align 4
  br label %19

19:                                               ; preds = %30, %17
  %20 = load i32, i32* %8, align 4
  %21 = load i32, i32* %5, align 4
  %22 = icmp sle i32 %20, %21
  br i1 %22, label %23, label %37

23:                                               ; preds = %19
  %24 = load i32, i32* %4, align 4
  %25 = trunc i32 %24 to i16
  %26 = getelementptr inbounds %class.Stretch, %class.Stretch* %9, i32 0, i32 0
  %27 = load i32, i32* %8, align 4
  %28 = invoke dereferenceable(2) i16* @_ZN5ArrayIsLi0EEixEi(%class.Array.1* %26, i32 %27)
          to label %29 unwind label %33

29:                                               ; preds = %23
  store i16 %25, i16* %28, align 2
  br label %30

30:                                               ; preds = %29
  %31 = load i32, i32* %8, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %8, align 4
  br label %19

33:                                               ; preds = %43, %23, %14
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %6, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %7, align 4
  call void @_ZN5ArrayIsLi0EED2Ev(%class.Array.1* %10) #2
  br label %47

37:                                               ; preds = %19
  %38 = load i32, i32* %5, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %3, align 4
  br label %40

40:                                               ; preds = %37
  %41 = load i32, i32* %4, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %4, align 4
  br label %11

43:                                               ; preds = %11
  %44 = getelementptr inbounds %class.Stretch, %class.Stretch* %9, i32 0, i32 0
  %45 = invoke dereferenceable(2) i16* @_ZN5ArrayIsLi0EEixEi(%class.Array.1* %44, i32 4095)
          to label %46 unwind label %33

46:                                               ; preds = %43
  store i16 2047, i16* %45, align 2
  ret void

47:                                               ; preds = %33
  %48 = load i8*, i8** %6, align 8
  %49 = load i32, i32* %7, align 4
  %50 = insertvalue { i8*, i32 } undef, i8* %48, 0
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1
  resume { i8*, i32 } %51
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIsLi0EEC2Ei(%class.Array.1* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Array.1*, align 8
  %4 = alloca i32, align 4
  store %class.Array.1* %0, %class.Array.1** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.1*, %class.Array.1** %3, align 8
  %6 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIsLi0EE6createEi(%class.Array.1* %5, i32 %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @_Z6squashi(i32 %0) #1 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %5 = load i32, i32* %3, align 4
  %6 = icmp sgt i32 %5, 2047
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 4095, i32* %2, align 4
  br label %35

8:                                                ; preds = %1
  %9 = load i32, i32* %3, align 4
  %10 = icmp slt i32 %9, -2047
  br i1 %10, label %11, label %12

11:                                               ; preds = %8
  store i32 0, i32* %2, align 4
  br label %35

12:                                               ; preds = %8
  %13 = load i32, i32* %3, align 4
  %14 = and i32 %13, 127
  store i32 %14, i32* %4, align 4
  %15 = load i32, i32* %3, align 4
  %16 = ashr i32 %15, 7
  %17 = add nsw i32 %16, 16
  store i32 %17, i32* %3, align 4
  %18 = load i32, i32* %3, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [33 x i32], [33 x i32]* @_ZZ6squashiE1t, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = load i32, i32* %4, align 4
  %23 = sub nsw i32 128, %22
  %24 = mul nsw i32 %21, %23
  %25 = load i32, i32* %3, align 4
  %26 = add nsw i32 %25, 1
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [33 x i32], [33 x i32]* @_ZZ6squashiE1t, i64 0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = load i32, i32* %4, align 4
  %31 = mul nsw i32 %29, %30
  %32 = add nsw i32 %24, %31
  %33 = add nsw i32 %32, 64
  %34 = ashr i32 %33, 7
  store i32 %34, i32* %2, align 4
  br label %35

35:                                               ; preds = %12, %11, %7
  %36 = load i32, i32* %2, align 4
  ret i32 %36
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(2) i16* @_ZN5ArrayIsLi0EEixEi(%class.Array.1* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array.1*, align 8
  %4 = alloca i32, align 4
  store %class.Array.1* %0, %class.Array.1** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.1*, %class.Array.1** %3, align 8
  %6 = getelementptr inbounds %class.Array.1, %class.Array.1* %5, i32 0, i32 3
  %7 = load i16*, i16** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i16, i16* %7, i64 %9
  ret i16* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIsLi0EE6createEi(%class.Array.1* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array.1*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.Array.1* %0, %class.Array.1** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.Array.1*, %class.Array.1** %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 0
  store i32 %7, i32* %9, align 8
  %10 = load i32, i32* %4, align 4
  %11 = icmp sle i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 3
  store i16* null, i16** %13, align 8
  %14 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 2
  store i8* null, i8** %14, align 8
  br label %36

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 2
  %20 = add i64 0, %19
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* %5, align 4
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %22)
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = call noalias i8* @calloc(i64 %24, i64 1) #2
  %26 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 2
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %15
  call void @_Z4quitPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0))
  br label %31

31:                                               ; preds = %30, %15
  %32 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast i8* %33 to i16*
  %35 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 3
  store i16* %34, i16** %35, align 8
  br label %36

36:                                               ; preds = %31, %12
  ret void
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #3

; Function Attrs: noinline uwtable
define dso_local void @_Z4quitPKc(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = call i8* @__cxa_allocate_exception(i64 8) #2
  %4 = bitcast i8* %3 to i8**
  %5 = load i8*, i8** %2, align 8
  store i8* %5, i8** %4, align 16
  call void @__cxa_throw(i8* %3, i8* bitcast (i8** @_ZTIPKc to i8*), i8* null) #16
  unreachable
}

declare dso_local i8* @__cxa_allocate_exception(i64)

declare dso_local void @__cxa_throw(i8*, i8*, i8*)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN4IlogD2Ev(%class.Buf* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.Buf*, align 8
  store %class.Buf* %0, %class.Buf** %2, align 8
  %3 = load %class.Buf*, %class.Buf** %2, align 8
  %4 = getelementptr inbounds %class.Buf, %class.Buf* %3, i32 0, i32 0
  call void @_ZN5ArrayIhLi0EED2Ev(%class.Array.0* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIhLi0EED2Ev(%class.Array.0* %0) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Array.0*, align 8
  store %class.Array.0* %0, %class.Array.0** %2, align 8
  %3 = load %class.Array.0*, %class.Array.0** %2, align 8
  %4 = getelementptr inbounds %class.Array.0, %class.Array.0* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = mul i64 %6, 1
  %8 = sub i64 0, %7
  %9 = trunc i64 %8 to i32
  invoke void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %9)
          to label %10 unwind label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.Array.0, %class.Array.0* %3, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  call void @free(i8* %12) #2
  ret void

13:                                               ; preds = %1
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  call void @__clang_call_terminate(i8* %15) #15
  unreachable
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN4IlogC2Ev(%class.Buf* %0) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Buf*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*
  %6 = alloca i32
  store %class.Buf* %0, %class.Buf** %2, align 8
  %7 = load %class.Buf*, %class.Buf** %2, align 8
  %8 = getelementptr inbounds %class.Buf, %class.Buf* %7, i32 0, i32 0
  call void @_ZN5ArrayIhLi0EEC2Ei(%class.Array.0* %8, i32 65536)
  store i32 14155776, i32* %3, align 4
  store i32 2, i32* %4, align 4
  br label %9

9:                                                ; preds = %26, %1
  %10 = load i32, i32* %4, align 4
  %11 = icmp slt i32 %10, 65536
  br i1 %11, label %12, label %33

12:                                               ; preds = %9
  %13 = load i32, i32* %4, align 4
  %14 = mul nsw i32 %13, 2
  %15 = sub nsw i32 %14, 1
  %16 = sdiv i32 774541002, %15
  %17 = load i32, i32* %3, align 4
  %18 = add i32 %17, %16
  store i32 %18, i32* %3, align 4
  %19 = load i32, i32* %3, align 4
  %20 = lshr i32 %19, 24
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %class.Buf, %class.Buf* %7, i32 0, i32 0
  %23 = load i32, i32* %4, align 4
  %24 = invoke dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %22, i32 %23)
          to label %25 unwind label %29

25:                                               ; preds = %12
  store i8 %21, i8* %24, align 1
  br label %26

26:                                               ; preds = %25
  %27 = load i32, i32* %4, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %4, align 4
  br label %9

29:                                               ; preds = %12
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %5, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %6, align 4
  call void @_ZN5ArrayIhLi0EED2Ev(%class.Array.0* %8) #2
  br label %34

33:                                               ; preds = %9
  ret void

34:                                               ; preds = %29
  %35 = load i8*, i8** %5, align 8
  %36 = load i32, i32* %6, align 4
  %37 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIhLi0EEC2Ei(%class.Array.0* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Array.0*, align 8
  %4 = alloca i32, align 4
  store %class.Array.0* %0, %class.Array.0** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.0*, %class.Array.0** %3, align 8
  %6 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIhLi0EE6createEi(%class.Array.0* %5, i32 %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array.0*, align 8
  %4 = alloca i32, align 4
  store %class.Array.0* %0, %class.Array.0** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.0*, %class.Array.0** %3, align 8
  %6 = getelementptr inbounds %class.Array.0, %class.Array.0* %5, i32 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %7, i64 %9
  ret i8* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIhLi0EE6createEi(%class.Array.0* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array.0*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.Array.0* %0, %class.Array.0** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.Array.0*, %class.Array.0** %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 0
  store i32 %7, i32* %9, align 8
  %10 = load i32, i32* %4, align 4
  %11 = icmp sle i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 3
  store i8* null, i8** %13, align 8
  %14 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 2
  store i8* null, i8** %14, align 8
  br label %35

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 1
  %20 = add i64 0, %19
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* %5, align 4
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %22)
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = call noalias i8* @calloc(i64 %24, i64 1) #2
  %26 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 2
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %15
  call void @_Z4quitPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0))
  br label %31

31:                                               ; preds = %30, %15
  %32 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 3
  store i8* %33, i8** %34, align 8
  br label %35

35:                                               ; preds = %31, %12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN3BufC2Ei(%class.Buf* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Buf*, align 8
  %4 = alloca i32, align 4
  store %class.Buf* %0, %class.Buf** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Buf*, %class.Buf** %3, align 8
  %6 = getelementptr inbounds %class.Buf, %class.Buf* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIhLi0EEC2Ei(%class.Array.0* %6, i32 %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN3BufD2Ev(%class.Buf* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.Buf*, align 8
  store %class.Buf* %0, %class.Buf** %2, align 8
  %3 = load %class.Buf*, %class.Buf** %2, align 8
  %4 = getelementptr inbounds %class.Buf, %class.Buf* %3, i32 0, i32 0
  call void @_ZN5ArrayIhLi0EED2Ev(%class.Array.0* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN6RandomC2Ev(%class.Random* %0) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Random*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  %5 = alloca i32, align 4
  store %class.Random* %0, %class.Random** %2, align 8
  %6 = load %class.Random*, %class.Random** %2, align 8
  %7 = getelementptr inbounds %class.Random, %class.Random* %6, i32 0, i32 0
  call void @_ZN5ArrayIjLi0EEC2Ei(%class.Array* %7, i32 64)
  %8 = getelementptr inbounds %class.Random, %class.Random* %6, i32 0, i32 0
  %9 = invoke dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %8, i32 0)
          to label %10 unwind label %41

10:                                               ; preds = %1
  store i32 123456789, i32* %9, align 4
  %11 = getelementptr inbounds %class.Random, %class.Random* %6, i32 0, i32 0
  %12 = invoke dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %11, i32 1)
          to label %13 unwind label %41

13:                                               ; preds = %10
  store i32 987654321, i32* %12, align 4
  store i32 0, i32* %5, align 4
  br label %14

14:                                               ; preds = %38, %13
  %15 = load i32, i32* %5, align 4
  %16 = icmp slt i32 %15, 62
  br i1 %16, label %17, label %45

17:                                               ; preds = %14
  %18 = getelementptr inbounds %class.Random, %class.Random* %6, i32 0, i32 0
  %19 = load i32, i32* %5, align 4
  %20 = add nsw i32 %19, 1
  %21 = invoke dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %18, i32 %20)
          to label %22 unwind label %41

22:                                               ; preds = %17
  %23 = load i32, i32* %21, align 4
  %24 = mul i32 %23, 11
  %25 = getelementptr inbounds %class.Random, %class.Random* %6, i32 0, i32 0
  %26 = load i32, i32* %5, align 4
  %27 = invoke dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %25, i32 %26)
          to label %28 unwind label %41

28:                                               ; preds = %22
  %29 = load i32, i32* %27, align 4
  %30 = mul i32 %29, 23
  %31 = udiv i32 %30, 16
  %32 = add i32 %24, %31
  %33 = getelementptr inbounds %class.Random, %class.Random* %6, i32 0, i32 0
  %34 = load i32, i32* %5, align 4
  %35 = add nsw i32 %34, 2
  %36 = invoke dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %33, i32 %35)
          to label %37 unwind label %41

37:                                               ; preds = %28
  store i32 %32, i32* %36, align 4
  br label %38

38:                                               ; preds = %37
  %39 = load i32, i32* %5, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %5, align 4
  br label %14

41:                                               ; preds = %28, %22, %17, %10, %1
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %3, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %4, align 4
  call void @_ZN5ArrayIjLi0EED2Ev(%class.Array* %7) #2
  br label %47

45:                                               ; preds = %14
  %46 = getelementptr inbounds %class.Random, %class.Random* %6, i32 0, i32 1
  store i32 0, i32* %46, align 8
  ret void

47:                                               ; preds = %41
  %48 = load i8*, i8** %3, align 8
  %49 = load i32, i32* %4, align 4
  %50 = insertvalue { i8*, i32 } undef, i8* %48, 0
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1
  resume { i8*, i32 } %51
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN6RandomD2Ev(%class.Random* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.Random*, align 8
  store %class.Random* %0, %class.Random** %2, align 8
  %3 = load %class.Random*, %class.Random** %2, align 8
  %4 = getelementptr inbounds %class.Random, %class.Random* %3, i32 0, i32 0
  call void @_ZN5ArrayIjLi0EED2Ev(%class.Array* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIjLi0EED2Ev(%class.Array* %0) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Array*, align 8
  store %class.Array* %0, %class.Array** %2, align 8
  %3 = load %class.Array*, %class.Array** %2, align 8
  %4 = getelementptr inbounds %class.Array, %class.Array* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = mul i64 %6, 4
  %8 = sub i64 0, %7
  %9 = trunc i64 %8 to i32
  invoke void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %9)
          to label %10 unwind label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.Array, %class.Array* %3, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  call void @free(i8* %12) #2
  ret void

13:                                               ; preds = %1
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  call void @__clang_call_terminate(i8* %15) #15
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIjLi0EEC2Ei(%class.Array* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Array*, align 8
  %4 = alloca i32, align 4
  store %class.Array* %0, %class.Array** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array*, %class.Array** %3, align 8
  %6 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIjLi0EE6createEi(%class.Array* %5, i32 %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array*, align 8
  %4 = alloca i32, align 4
  store %class.Array* %0, %class.Array** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array*, %class.Array** %3, align 8
  %6 = getelementptr inbounds %class.Array, %class.Array* %5, i32 0, i32 3
  %7 = load i32*, i32** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i32, i32* %7, i64 %9
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIjLi0EE6createEi(%class.Array* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.Array* %0, %class.Array** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.Array*, %class.Array** %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 0
  store i32 %7, i32* %9, align 8
  %10 = load i32, i32* %4, align 4
  %11 = icmp sle i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 3
  store i32* null, i32** %13, align 8
  %14 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 2
  store i8* null, i8** %14, align 8
  br label %36

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 4
  %20 = add i64 0, %19
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* %5, align 4
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %22)
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = call noalias i8* @calloc(i64 %24, i64 1) #2
  %26 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 2
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %15
  call void @_Z4quitPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0))
  br label %31

31:                                               ; preds = %30, %15
  %32 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 3
  store i32* %34, i32** %35, align 8
  br label %36

36:                                               ; preds = %31, %12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN14ProgramCheckerC2Ev(%class.ProgramChecker* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.ProgramChecker*, align 8
  store %class.ProgramChecker* %0, %class.ProgramChecker** %2, align 8
  %3 = load %class.ProgramChecker*, %class.ProgramChecker** %2, align 8
  %4 = getelementptr inbounds %class.ProgramChecker, %class.ProgramChecker* %3, i32 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %class.ProgramChecker, %class.ProgramChecker* %3, i32 0, i32 1
  store i32 0, i32* %5, align 4
  %6 = call i64 @clock() #2
  %7 = getelementptr inbounds %class.ProgramChecker, %class.ProgramChecker* %3, i32 0, i32 2
  store i64 %6, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind
declare dso_local i64 @clock() #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @_Z6equalsPKcS0_(i8* %0, i8* %1) #1 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  br label %8

8:                                                ; preds = %47, %2
  %9 = load i8*, i8** %4, align 8
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = load i8*, i8** %5, align 8
  %14 = load i8, i8* %13, align 1
  %15 = icmp ne i8 %14, 0
  br label %16

16:                                               ; preds = %12, %8
  %17 = phi i1 [ false, %8 ], [ %15, %12 ]
  br i1 %17, label %18, label %52

18:                                               ; preds = %16
  %19 = load i8*, i8** %4, align 8
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  store i32 %21, i32* %6, align 4
  %22 = load i32, i32* %6, align 4
  %23 = icmp sge i32 %22, 65
  br i1 %23, label %24, label %30

24:                                               ; preds = %18
  %25 = load i32, i32* %6, align 4
  %26 = icmp sle i32 %25, 90
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i32, i32* %6, align 4
  %29 = add nsw i32 %28, 32
  store i32 %29, i32* %6, align 4
  br label %30

30:                                               ; preds = %27, %24, %18
  %31 = load i8*, i8** %5, align 8
  %32 = load i8, i8* %31, align 1
  %33 = sext i8 %32 to i32
  store i32 %33, i32* %7, align 4
  %34 = load i32, i32* %7, align 4
  %35 = icmp sge i32 %34, 65
  br i1 %35, label %36, label %42

36:                                               ; preds = %30
  %37 = load i32, i32* %7, align 4
  %38 = icmp sle i32 %37, 90
  br i1 %38, label %39, label %42

39:                                               ; preds = %36
  %40 = load i32, i32* %7, align 4
  %41 = add nsw i32 %40, 32
  store i32 %41, i32* %7, align 4
  br label %42

42:                                               ; preds = %39, %36, %30
  %43 = load i32, i32* %6, align 4
  %44 = load i32, i32* %7, align 4
  %45 = icmp ne i32 %43, %44
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  store i32 0, i32* %3, align 4
  br label %61

47:                                               ; preds = %42
  %48 = load i8*, i8** %4, align 8
  %49 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %49, i8** %4, align 8
  %50 = load i8*, i8** %5, align 8
  %51 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %51, i8** %5, align 8
  br label %8

52:                                               ; preds = %16
  %53 = load i8*, i8** %4, align 8
  %54 = load i8, i8* %53, align 1
  %55 = sext i8 %54 to i32
  %56 = load i8*, i8** %5, align 8
  %57 = load i8, i8* %56, align 1
  %58 = sext i8 %57 to i32
  %59 = icmp eq i32 %55, %58
  %60 = zext i1 %59 to i32
  store i32 %60, i32* %3, align 4
  br label %61

61:                                               ; preds = %52, %46
  %62 = load i32, i32* %3, align 4
  ret i32 %62
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @_Z11dot_productPsS_i(i16* %0, i16* %1, i32 %2) #1 {
  %4 = alloca i16*, align 8
  %5 = alloca i16*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i16* %0, i16** %4, align 8
  store i16* %1, i16** %5, align 8
  store i32 %2, i32* %6, align 4
  store i32 0, i32* %7, align 4
  %9 = load i32, i32* %6, align 4
  %10 = add nsw i32 %9, 7
  %11 = and i32 %10, -8
  store i32 %11, i32* %6, align 4
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %49, %3
  %13 = load i32, i32* %8, align 4
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %13, %14
  br i1 %15, label %16, label %52

16:                                               ; preds = %12
  %17 = load i16*, i16** %4, align 8
  %18 = load i32, i32* %8, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i16, i16* %17, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = sext i16 %21 to i32
  %23 = load i16*, i16** %5, align 8
  %24 = load i32, i32* %8, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i16, i16* %23, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = sext i16 %27 to i32
  %29 = mul nsw i32 %22, %28
  %30 = load i16*, i16** %4, align 8
  %31 = load i32, i32* %8, align 4
  %32 = add nsw i32 %31, 1
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i16, i16* %30, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = sext i16 %35 to i32
  %37 = load i16*, i16** %5, align 8
  %38 = load i32, i32* %8, align 4
  %39 = add nsw i32 %38, 1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i16, i16* %37, i64 %40
  %42 = load i16, i16* %41, align 2
  %43 = sext i16 %42 to i32
  %44 = mul nsw i32 %36, %43
  %45 = add nsw i32 %29, %44
  %46 = ashr i32 %45, 8
  %47 = load i32, i32* %7, align 4
  %48 = add nsw i32 %47, %46
  store i32 %48, i32* %7, align 4
  br label %49

49:                                               ; preds = %16
  %50 = load i32, i32* %8, align 4
  %51 = add nsw i32 %50, 2
  store i32 %51, i32* %8, align 4
  br label %12

52:                                               ; preds = %12
  %53 = load i32, i32* %7, align 4
  ret i32 %53
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @_Z5trainPsS_ii(i16* %0, i16* %1, i32 %2, i32 %3) #1 {
  %5 = alloca i16*, align 8
  %6 = alloca i16*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i16* %0, i16** %5, align 8
  store i16* %1, i16** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %11 = load i32, i32* %7, align 4
  %12 = add nsw i32 %11, 7
  %13 = and i32 %12, -8
  store i32 %13, i32* %7, align 4
  store i32 0, i32* %9, align 4
  br label %14

14:                                               ; preds = %52, %4
  %15 = load i32, i32* %9, align 4
  %16 = load i32, i32* %7, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %55

18:                                               ; preds = %14
  %19 = load i16*, i16** %6, align 8
  %20 = load i32, i32* %9, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i16, i16* %19, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = sext i16 %23 to i32
  %25 = load i16*, i16** %5, align 8
  %26 = load i32, i32* %9, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i16, i16* %25, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = sext i16 %29 to i32
  %31 = load i32, i32* %8, align 4
  %32 = mul nsw i32 %30, %31
  %33 = mul nsw i32 %32, 2
  %34 = ashr i32 %33, 16
  %35 = add nsw i32 %34, 1
  %36 = ashr i32 %35, 1
  %37 = add nsw i32 %24, %36
  store i32 %37, i32* %10, align 4
  %38 = load i32, i32* %10, align 4
  %39 = icmp slt i32 %38, -32768
  br i1 %39, label %40, label %41

40:                                               ; preds = %18
  store i32 -32768, i32* %10, align 4
  br label %41

41:                                               ; preds = %40, %18
  %42 = load i32, i32* %10, align 4
  %43 = icmp sgt i32 %42, 32767
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  store i32 32767, i32* %10, align 4
  br label %45

45:                                               ; preds = %44, %41
  %46 = load i32, i32* %10, align 4
  %47 = trunc i32 %46 to i16
  %48 = load i16*, i16** %6, align 8
  %49 = load i32, i32* %9, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i16, i16* %48, i64 %50
  store i16 %47, i16* %51, align 2
  br label %52

52:                                               ; preds = %45
  %53 = load i32, i32* %9, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %9, align 4
  br label %14

55:                                               ; preds = %14
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN5MixerD2Ev(%class.Mixer* %0) unnamed_addr #1 align 2 {
  %2 = alloca %class.Mixer*, align 8
  store %class.Mixer* %0, %class.Mixer** %2, align 8
  %3 = load %class.Mixer*, %class.Mixer** %2, align 8
  %4 = getelementptr inbounds %class.Mixer, %class.Mixer* %3, i32 0, i32 10
  %5 = load %class.Mixer*, %class.Mixer** %4, align 8
  %6 = icmp eq %class.Mixer* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  call void @_ZN5MixerD1Ev(%class.Mixer* %5) #2
  %8 = bitcast %class.Mixer* %5 to i8*
  call void @_ZdlPv(i8* %8) #17
  br label %9

9:                                                ; preds = %7, %1
  %10 = getelementptr inbounds %class.Mixer, %class.Mixer* %3, i32 0, i32 9
  call void @_ZN5ArrayIiLi0EED2Ev(%class.Array* %10) #2
  %11 = getelementptr inbounds %class.Mixer, %class.Mixer* %3, i32 0, i32 5
  call void @_ZN5ArrayIiLi0EED2Ev(%class.Array* %11) #2
  %12 = getelementptr inbounds %class.Mixer, %class.Mixer* %3, i32 0, i32 4
  call void @_ZN5ArrayIsLi16EED2Ev(%class.Array.1* %12) #2
  %13 = getelementptr inbounds %class.Mixer, %class.Mixer* %3, i32 0, i32 3
  call void @_ZN5ArrayIsLi16EED2Ev(%class.Array.1* %13) #2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIiLi0EED2Ev(%class.Array* %0) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Array*, align 8
  store %class.Array* %0, %class.Array** %2, align 8
  %3 = load %class.Array*, %class.Array** %2, align 8
  %4 = getelementptr inbounds %class.Array, %class.Array* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = mul i64 %6, 4
  %8 = sub i64 0, %7
  %9 = trunc i64 %8 to i32
  invoke void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %9)
          to label %10 unwind label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.Array, %class.Array* %3, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  call void @free(i8* %12) #2
  ret void

13:                                               ; preds = %1
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  call void @__clang_call_terminate(i8* %15) #15
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIsLi16EED2Ev(%class.Array.1* %0) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Array.1*, align 8
  store %class.Array.1* %0, %class.Array.1** %2, align 8
  %3 = load %class.Array.1*, %class.Array.1** %2, align 8
  %4 = getelementptr inbounds %class.Array.1, %class.Array.1* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = mul i64 %6, 2
  %8 = sub i64 -16, %7
  %9 = trunc i64 %8 to i32
  invoke void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %9)
          to label %10 unwind label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.Array.1, %class.Array.1* %3, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  call void @free(i8* %12) #2
  ret void

13:                                               ; preds = %1
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  call void @__clang_call_terminate(i8* %15) #15
  unreachable
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN5MixerC2Eiiii(%class.Mixer* %0, i32 %1, i32 %2, i32 %3, i32 %4) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %class.Mixer*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*
  %12 = alloca i32
  %13 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %14 = load %class.Mixer*, %class.Mixer** %6, align 8
  %15 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 0
  %16 = load i32, i32* %7, align 4
  %17 = add nsw i32 %16, 7
  %18 = and i32 %17, -8
  store i32 %18, i32* %15, align 8
  %19 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 1
  %20 = load i32, i32* %8, align 4
  store i32 %20, i32* %19, align 4
  %21 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 2
  %22 = load i32, i32* %9, align 4
  store i32 %22, i32* %21, align 8
  %23 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 3
  %24 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  call void @_ZN5ArrayIsLi16EEC2Ei(%class.Array.1* %23, i32 %25)
  %26 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 4
  %27 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = mul nsw i32 %28, %30
  invoke void @_ZN5ArrayIsLi16EEC2Ei(%class.Array.1* %26, i32 %31)
          to label %32 unwind label %58

32:                                               ; preds = %5
  %33 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 5
  %34 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 2
  %35 = load i32, i32* %34, align 8
  invoke void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* %33, i32 %35)
          to label %36 unwind label %62

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 6
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 7
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 8
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 9
  %41 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 2
  %42 = load i32, i32* %41, align 8
  invoke void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* %40, i32 %42)
          to label %43 unwind label %66

43:                                               ; preds = %36
  %44 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 10
  store %class.Mixer* null, %class.Mixer** %44, align 8
  store i32 0, i32* %13, align 4
  br label %45

45:                                               ; preds = %55, %43
  %46 = load i32, i32* %13, align 4
  %47 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp slt i32 %46, %48
  br i1 %49, label %50, label %74

50:                                               ; preds = %45
  %51 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 9
  %52 = load i32, i32* %13, align 4
  %53 = invoke dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %51, i32 %52)
          to label %54 unwind label %70

54:                                               ; preds = %50
  store i32 2048, i32* %53, align 4
  br label %55

55:                                               ; preds = %54
  %56 = load i32, i32* %13, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %13, align 4
  br label %45

58:                                               ; preds = %5
  %59 = landingpad { i8*, i32 }
          cleanup
  %60 = extractvalue { i8*, i32 } %59, 0
  store i8* %60, i8** %11, align 8
  %61 = extractvalue { i8*, i32 } %59, 1
  store i32 %61, i32* %12, align 4
  br label %113

62:                                               ; preds = %32
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %11, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %12, align 4
  br label %112

66:                                               ; preds = %36
  %67 = landingpad { i8*, i32 }
          cleanup
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %11, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %12, align 4
  br label %111

70:                                               ; preds = %97, %83, %50
  %71 = landingpad { i8*, i32 }
          cleanup
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %11, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %12, align 4
  br label %110

74:                                               ; preds = %45
  store i32 0, i32* %13, align 4
  br label %75

75:                                               ; preds = %90, %74
  %76 = load i32, i32* %13, align 4
  %77 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = mul nsw i32 %78, %80
  %82 = icmp slt i32 %76, %81
  br i1 %82, label %83, label %93

83:                                               ; preds = %75
  %84 = load i32, i32* %10, align 4
  %85 = trunc i32 %84 to i16
  %86 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 4
  %87 = load i32, i32* %13, align 4
  %88 = invoke dereferenceable(2) i16* @_ZN5ArrayIsLi16EEixEi(%class.Array.1* %86, i32 %87)
          to label %89 unwind label %70

89:                                               ; preds = %83
  store i16 %85, i16* %88, align 2
  br label %90

90:                                               ; preds = %89
  %91 = load i32, i32* %13, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %13, align 4
  br label %75

93:                                               ; preds = %75
  %94 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 2
  %95 = load i32, i32* %94, align 8
  %96 = icmp sgt i32 %95, 1
  br i1 %96, label %97, label %109

97:                                               ; preds = %93
  %98 = invoke i8* @_Znwm(i64 136) #18
          to label %99 unwind label %70

99:                                               ; preds = %97
  %100 = bitcast i8* %98 to %class.Mixer*
  %101 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 2
  %102 = load i32, i32* %101, align 8
  invoke void @_ZN5MixerC1Eiiii(%class.Mixer* %100, i32 %102, i32 1, i32 1, i32 32767)
          to label %103 unwind label %105

103:                                              ; preds = %99
  %104 = getelementptr inbounds %class.Mixer, %class.Mixer* %14, i32 0, i32 10
  store %class.Mixer* %100, %class.Mixer** %104, align 8
  br label %109

105:                                              ; preds = %99
  %106 = landingpad { i8*, i32 }
          cleanup
  %107 = extractvalue { i8*, i32 } %106, 0
  store i8* %107, i8** %11, align 8
  %108 = extractvalue { i8*, i32 } %106, 1
  store i32 %108, i32* %12, align 4
  call void @_ZdlPv(i8* %98) #17
  br label %110

109:                                              ; preds = %103, %93
  ret void

110:                                              ; preds = %105, %70
  call void @_ZN5ArrayIiLi0EED2Ev(%class.Array* %40) #2
  br label %111

111:                                              ; preds = %110, %66
  call void @_ZN5ArrayIiLi0EED2Ev(%class.Array* %33) #2
  br label %112

112:                                              ; preds = %111, %62
  call void @_ZN5ArrayIsLi16EED2Ev(%class.Array.1* %26) #2
  br label %113

113:                                              ; preds = %112, %58
  call void @_ZN5ArrayIsLi16EED2Ev(%class.Array.1* %23) #2
  br label %114

114:                                              ; preds = %113
  %115 = load i8*, i8** %11, align 8
  %116 = load i32, i32* %12, align 4
  %117 = insertvalue { i8*, i32 } undef, i8* %115, 0
  %118 = insertvalue { i8*, i32 } %117, i32 %116, 1
  resume { i8*, i32 } %118
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIsLi16EEC2Ei(%class.Array.1* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Array.1*, align 8
  %4 = alloca i32, align 4
  store %class.Array.1* %0, %class.Array.1** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.1*, %class.Array.1** %3, align 8
  %6 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIsLi16EE6createEi(%class.Array.1* %5, i32 %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Array*, align 8
  %4 = alloca i32, align 4
  store %class.Array* %0, %class.Array** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array*, %class.Array** %3, align 8
  %6 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIiLi0EE6createEi(%class.Array* %5, i32 %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array*, align 8
  %4 = alloca i32, align 4
  store %class.Array* %0, %class.Array** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array*, %class.Array** %3, align 8
  %6 = getelementptr inbounds %class.Array, %class.Array* %5, i32 0, i32 3
  %7 = load i32*, i32** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i32, i32* %7, i64 %9
  ret i32* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(2) i16* @_ZN5ArrayIsLi16EEixEi(%class.Array.1* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array.1*, align 8
  %4 = alloca i32, align 4
  store %class.Array.1* %0, %class.Array.1** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.1*, %class.Array.1** %3, align 8
  %6 = getelementptr inbounds %class.Array.1, %class.Array.1* %5, i32 0, i32 3
  %7 = load i16*, i16** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i16, i16* %7, i64 %9
  ret i16* %10
}

; Function Attrs: nobuiltin
declare dso_local noalias i8* @_Znwm(i64) #6

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIiLi0EE6createEi(%class.Array* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.Array* %0, %class.Array** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.Array*, %class.Array** %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 0
  store i32 %7, i32* %9, align 8
  %10 = load i32, i32* %4, align 4
  %11 = icmp sle i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 3
  store i32* null, i32** %13, align 8
  %14 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 2
  store i8* null, i8** %14, align 8
  br label %36

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 4
  %20 = add i64 0, %19
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* %5, align 4
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %22)
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = call noalias i8* @calloc(i64 %24, i64 1) #2
  %26 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 2
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %15
  call void @_Z4quitPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0))
  br label %31

31:                                               ; preds = %30, %15
  %32 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds %class.Array, %class.Array* %6, i32 0, i32 3
  store i32* %34, i32** %35, align 8
  br label %36

36:                                               ; preds = %31, %12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIsLi16EE6createEi(%class.Array.1* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array.1*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.Array.1* %0, %class.Array.1** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.Array.1*, %class.Array.1** %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 0
  store i32 %7, i32* %9, align 8
  %10 = load i32, i32* %4, align 4
  %11 = icmp sle i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 3
  store i16* null, i16** %13, align 8
  %14 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 2
  store i8* null, i8** %14, align 8
  br label %43

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 2
  %20 = add i64 16, %19
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* %5, align 4
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %22)
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = call noalias i8* @calloc(i64 %24, i64 1) #2
  %26 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 2
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %15
  call void @_Z4quitPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0))
  br label %31

31:                                               ; preds = %30, %15
  %32 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 16
  %35 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 2
  %36 = load i8*, i8** %35, align 8
  %37 = ptrtoint i8* %36 to i64
  %38 = and i64 %37, 15
  %39 = sub i64 0, %38
  %40 = getelementptr inbounds i8, i8* %34, i64 %39
  %41 = bitcast i8* %40 to i16*
  %42 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 3
  store i16* %41, i16** %42, align 8
  br label %43

43:                                               ; preds = %31, %12
  ret void
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN4APM1C2Ei(%class.APM1* %0, i32 %1) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.APM1*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*
  %8 = alloca i32
  store %class.APM1* %0, %class.APM1** %3, align 8
  store i32 %1, i32* %4, align 4
  %9 = load %class.APM1*, %class.APM1** %3, align 8
  %10 = getelementptr inbounds %class.APM1, %class.APM1* %9, i32 0, i32 0
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %class.APM1, %class.APM1* %9, i32 0, i32 1
  %12 = load i32, i32* %4, align 4
  store i32 %12, i32* %11, align 4
  %13 = getelementptr inbounds %class.APM1, %class.APM1* %9, i32 0, i32 2
  %14 = load i32, i32* %4, align 4
  %15 = mul nsw i32 %14, 33
  call void @_ZN5ArrayItLi0EEC2Ei(%class.Array.1* %13, i32 %15)
  store i32 0, i32* %5, align 4
  br label %16

16:                                               ; preds = %60, %2
  %17 = load i32, i32* %5, align 4
  %18 = getelementptr inbounds %class.APM1, %class.APM1* %9, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %17, %19
  br i1 %20, label %21, label %63

21:                                               ; preds = %16
  store i32 0, i32* %6, align 4
  br label %22

22:                                               ; preds = %52, %21
  %23 = load i32, i32* %6, align 4
  %24 = icmp slt i32 %23, 33
  br i1 %24, label %25, label %59

25:                                               ; preds = %22
  %26 = load i32, i32* %5, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %35

28:                                               ; preds = %25
  %29 = load i32, i32* %6, align 4
  %30 = sub nsw i32 %29, 16
  %31 = mul nsw i32 %30, 128
  %32 = invoke i32 @_Z6squashi(i32 %31)
          to label %33 unwind label %55

33:                                               ; preds = %28
  %34 = mul nsw i32 %32, 16
  br label %42

35:                                               ; preds = %25
  %36 = getelementptr inbounds %class.APM1, %class.APM1* %9, i32 0, i32 2
  %37 = load i32, i32* %6, align 4
  %38 = invoke dereferenceable(2) i16* @_ZN5ArrayItLi0EEixEi(%class.Array.1* %36, i32 %37)
          to label %39 unwind label %55

39:                                               ; preds = %35
  %40 = load i16, i16* %38, align 2
  %41 = zext i16 %40 to i32
  br label %42

42:                                               ; preds = %39, %33
  %43 = phi i32 [ %34, %33 ], [ %41, %39 ]
  %44 = trunc i32 %43 to i16
  %45 = getelementptr inbounds %class.APM1, %class.APM1* %9, i32 0, i32 2
  %46 = load i32, i32* %5, align 4
  %47 = mul nsw i32 %46, 33
  %48 = load i32, i32* %6, align 4
  %49 = add nsw i32 %47, %48
  %50 = invoke dereferenceable(2) i16* @_ZN5ArrayItLi0EEixEi(%class.Array.1* %45, i32 %49)
          to label %51 unwind label %55

51:                                               ; preds = %42
  store i16 %44, i16* %50, align 2
  br label %52

52:                                               ; preds = %51
  %53 = load i32, i32* %6, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %6, align 4
  br label %22

55:                                               ; preds = %42, %35, %28
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %7, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %8, align 4
  call void @_ZN5ArrayItLi0EED2Ev(%class.Array.1* %13) #2
  br label %64

59:                                               ; preds = %22
  br label %60

60:                                               ; preds = %59
  %61 = load i32, i32* %5, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %5, align 4
  br label %16

63:                                               ; preds = %16
  ret void

64:                                               ; preds = %55
  %65 = load i8*, i8** %7, align 8
  %66 = load i32, i32* %8, align 4
  %67 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %68 = insertvalue { i8*, i32 } %67, i32 %66, 1
  resume { i8*, i32 } %68
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayItLi0EEC2Ei(%class.Array.1* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Array.1*, align 8
  %4 = alloca i32, align 4
  store %class.Array.1* %0, %class.Array.1** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.1*, %class.Array.1** %3, align 8
  %6 = load i32, i32* %4, align 4
  call void @_ZN5ArrayItLi0EE6createEi(%class.Array.1* %5, i32 %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(2) i16* @_ZN5ArrayItLi0EEixEi(%class.Array.1* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array.1*, align 8
  %4 = alloca i32, align 4
  store %class.Array.1* %0, %class.Array.1** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.1*, %class.Array.1** %3, align 8
  %6 = getelementptr inbounds %class.Array.1, %class.Array.1* %5, i32 0, i32 3
  %7 = load i16*, i16** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i16, i16* %7, i64 %9
  ret i16* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayItLi0EED2Ev(%class.Array.1* %0) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Array.1*, align 8
  store %class.Array.1* %0, %class.Array.1** %2, align 8
  %3 = load %class.Array.1*, %class.Array.1** %2, align 8
  %4 = getelementptr inbounds %class.Array.1, %class.Array.1* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = mul i64 %6, 2
  %8 = sub i64 0, %7
  %9 = trunc i64 %8 to i32
  invoke void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %9)
          to label %10 unwind label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.Array.1, %class.Array.1* %3, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  call void @free(i8* %12) #2
  ret void

13:                                               ; preds = %1
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  call void @__clang_call_terminate(i8* %15) #15
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayItLi0EE6createEi(%class.Array.1* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array.1*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.Array.1* %0, %class.Array.1** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.Array.1*, %class.Array.1** %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 0
  store i32 %7, i32* %9, align 8
  %10 = load i32, i32* %4, align 4
  %11 = icmp sle i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 3
  store i16* null, i16** %13, align 8
  %14 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 2
  store i8* null, i8** %14, align 8
  br label %36

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 2
  %20 = add i64 0, %19
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* %5, align 4
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %22)
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = call noalias i8* @calloc(i64 %24, i64 1) #2
  %26 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 2
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %15
  call void @_Z4quitPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0))
  br label %31

31:                                               ; preds = %30, %15
  %32 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast i8* %33 to i16*
  %35 = getelementptr inbounds %class.Array.1, %class.Array.1* %6, i32 0, i32 3
  store i16* %34, i16** %35, align 8
  br label %36

36:                                               ; preds = %31, %12
  ret void
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN8StateMapC2Ei(%class.StateMap* %0, i32 %1) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.StateMap*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*
  %7 = alloca i32
  store %class.StateMap* %0, %class.StateMap** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load %class.StateMap*, %class.StateMap** %3, align 8
  %9 = getelementptr inbounds %class.StateMap, %class.StateMap* %8, i32 0, i32 0
  %10 = load i32, i32* %4, align 4
  store i32 %10, i32* %9, align 8
  %11 = getelementptr inbounds %class.StateMap, %class.StateMap* %8, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %class.StateMap, %class.StateMap* %8, i32 0, i32 2
  %13 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIjLi0EEC2Ei(%class.Array* %12, i32 %13)
  store i32 0, i32* %5, align 4
  br label %14

14:                                               ; preds = %24, %2
  %15 = load i32, i32* %5, align 4
  %16 = getelementptr inbounds %class.StateMap, %class.StateMap* %8, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp slt i32 %15, %17
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.StateMap, %class.StateMap* %8, i32 0, i32 2
  %21 = load i32, i32* %5, align 4
  %22 = invoke dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %20, i32 %21)
          to label %23 unwind label %27

23:                                               ; preds = %19
  store i32 -2147483648, i32* %22, align 4
  br label %24

24:                                               ; preds = %23
  %25 = load i32, i32* %5, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %5, align 4
  br label %14

27:                                               ; preds = %19
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  store i8* %29, i8** %6, align 8
  %30 = extractvalue { i8*, i32 } %28, 1
  store i32 %30, i32* %7, align 4
  call void @_ZN5ArrayIjLi0EED2Ev(%class.Array* %12) #2
  br label %32

31:                                               ; preds = %14
  ret void

32:                                               ; preds = %27
  %33 = load i8*, i8** %6, align 8
  %34 = load i32, i32* %7, align 4
  %35 = insertvalue { i8*, i32 } undef, i8* %33, 0
  %36 = insertvalue { i8*, i32 } %35, i32 %34, 1
  resume { i8*, i32 } %36
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN3APMC2Ei(%class.APM* %0, i32 %1) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.APM*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*
  %8 = alloca i32
  store %class.APM* %0, %class.APM** %3, align 8
  store i32 %1, i32* %4, align 4
  %9 = load %class.APM*, %class.APM** %3, align 8
  %10 = bitcast %class.APM* %9 to %class.StateMap*
  %11 = load i32, i32* %4, align 4
  %12 = mul nsw i32 %11, 24
  call void @_ZN8StateMapC2Ei(%class.StateMap* %10, i32 %12)
  store i32 0, i32* %5, align 4
  br label %13

13:                                               ; preds = %37, %2
  %14 = load i32, i32* %5, align 4
  %15 = bitcast %class.APM* %9 to %class.StateMap*
  %16 = getelementptr inbounds %class.StateMap, %class.StateMap* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp slt i32 %14, %17
  br i1 %18, label %19, label %45

19:                                               ; preds = %13
  %20 = load i32, i32* %5, align 4
  %21 = srem i32 %20, 24
  %22 = mul nsw i32 %21, 2
  %23 = add nsw i32 %22, 1
  %24 = mul nsw i32 %23, 4096
  %25 = sdiv i32 %24, 48
  %26 = sub nsw i32 %25, 2048
  store i32 %26, i32* %6, align 4
  %27 = load i32, i32* %6, align 4
  %28 = invoke i32 @_Z6squashi(i32 %27)
          to label %29 unwind label %40

29:                                               ; preds = %19
  %30 = shl i32 %28, 20
  %31 = add i32 %30, 6
  %32 = bitcast %class.APM* %9 to %class.StateMap*
  %33 = getelementptr inbounds %class.StateMap, %class.StateMap* %32, i32 0, i32 2
  %34 = load i32, i32* %5, align 4
  %35 = invoke dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %33, i32 %34)
          to label %36 unwind label %40

36:                                               ; preds = %29
  store i32 %31, i32* %35, align 4
  br label %37

37:                                               ; preds = %36
  %38 = load i32, i32* %5, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %5, align 4
  br label %13

40:                                               ; preds = %29, %19
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %7, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %8, align 4
  %44 = bitcast %class.APM* %9 to %class.StateMap*
  call void @_ZN8StateMapD2Ev(%class.StateMap* %44) #2
  br label %46

45:                                               ; preds = %13
  ret void

46:                                               ; preds = %40
  %47 = load i8*, i8** %7, align 8
  %48 = load i32, i32* %8, align 4
  %49 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1
  resume { i8*, i32 } %50
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN8StateMapD2Ev(%class.StateMap* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.StateMap*, align 8
  store %class.StateMap* %0, %class.StateMap** %2, align 8
  %3 = load %class.StateMap*, %class.StateMap** %2, align 8
  %4 = getelementptr inbounds %class.StateMap, %class.StateMap* %3, i32 0, i32 2
  call void @_ZN5ArrayIjLi0EED2Ev(%class.Array* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN10ContextMapC2Eii(%class.ContextMap* %0, i32 %1, i32 %2) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.ContextMap*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca i32, align 4
  store %class.ContextMap* %0, %class.ContextMap** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %10 = load %class.ContextMap*, %class.ContextMap** %4, align 8
  %11 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %10, i32 0, i32 0
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 8
  %13 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %10, i32 0, i32 2
  %14 = load i32, i32* %5, align 4
  %15 = ashr i32 %14, 6
  call void @_ZN5ArrayIN10ContextMap1EELi64EEC2Ei(%class.Array.5* %13, i32 %15)
  %16 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %10, i32 0, i32 3
  %17 = load i32, i32* %6, align 4
  invoke void @_ZN5ArrayIPhLi0EEC2Ei(%class.Array.6* %16, i32 %17)
          to label %18 unwind label %88

18:                                               ; preds = %3
  %19 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %10, i32 0, i32 4
  %20 = load i32, i32* %6, align 4
  invoke void @_ZN5ArrayIPhLi0EEC2Ei(%class.Array.6* %19, i32 %20)
          to label %21 unwind label %92

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %10, i32 0, i32 5
  %23 = load i32, i32* %6, align 4
  invoke void @_ZN5ArrayIjLi0EEC2Ei(%class.Array* %22, i32 %23)
          to label %24 unwind label %96

24:                                               ; preds = %21
  %25 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %10, i32 0, i32 6
  %26 = load i32, i32* %6, align 4
  invoke void @_ZN5ArrayIPhLi0EEC2Ei(%class.Array.6* %25, i32 %26)
          to label %27 unwind label %100

27:                                               ; preds = %24
  %28 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %10, i32 0, i32 8
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %10, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = sext i32 %30 to i64
  %32 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %31, i64 32)
  %33 = extractvalue { i64, i1 } %32, 1
  %34 = extractvalue { i64, i1 } %32, 0
  %35 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %34, i64 8)
  %36 = extractvalue { i64, i1 } %35, 1
  %37 = or i1 %33, %36
  %38 = extractvalue { i64, i1 } %35, 0
  %39 = select i1 %37, i64 -1, i64 %38
  %40 = invoke i8* @_Znam(i64 %39) #18
          to label %41 unwind label %104

41:                                               ; preds = %27
  %42 = bitcast i8* %40 to i64*
  store i64 %31, i64* %42, align 16
  %43 = getelementptr inbounds i8, i8* %40, i64 8
  %44 = bitcast i8* %43 to %class.StateMap*
  %45 = icmp eq i64 %31, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %class.StateMap, %class.StateMap* %44, i64 %31
  br label %48

48:                                               ; preds = %50, %46
  %49 = phi %class.StateMap* [ %44, %46 ], [ %51, %50 ]
  invoke void @_ZN8StateMapC1Ei(%class.StateMap* %49, i32 256)
          to label %50 unwind label %108

50:                                               ; preds = %48
  %51 = getelementptr inbounds %class.StateMap, %class.StateMap* %49, i64 1
  %52 = icmp eq %class.StateMap* %51, %47
  br i1 %52, label %53, label %48

53:                                               ; preds = %50, %41
  %54 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %10, i32 0, i32 7
  store %class.StateMap* %44, %class.StateMap** %54, align 8
  store i32 0, i32* %9, align 4
  br label %55

55:                                               ; preds = %85, %53
  %56 = load i32, i32* %9, align 4
  %57 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %10, i32 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp slt i32 %56, %58
  br i1 %59, label %60, label %118

60:                                               ; preds = %55
  %61 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %10, i32 0, i32 2
  %62 = invoke dereferenceable(64) %"class.ContextMap::E"* @_ZN5ArrayIN10ContextMap1EELi64EEixEi(%class.Array.5* %61, i32 0)
          to label %63 unwind label %104

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.ContextMap::E", %"class.ContextMap::E"* %62, i32 0, i32 2
  %65 = getelementptr inbounds [7 x [7 x i8]], [7 x [7 x i8]]* %64, i64 0, i64 0
  %66 = getelementptr inbounds [7 x i8], [7 x i8]* %65, i64 0, i64 0
  %67 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %10, i32 0, i32 3
  %68 = load i32, i32* %9, align 4
  %69 = invoke dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %67, i32 %68)
          to label %70 unwind label %104

70:                                               ; preds = %63
  store i8* %66, i8** %69, align 8
  %71 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %10, i32 0, i32 4
  %72 = load i32, i32* %9, align 4
  %73 = invoke dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %71, i32 %72)
          to label %74 unwind label %104

74:                                               ; preds = %70
  store i8* %66, i8** %73, align 8
  %75 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %10, i32 0, i32 3
  %76 = load i32, i32* %9, align 4
  %77 = invoke dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %75, i32 %76)
          to label %78 unwind label %104

78:                                               ; preds = %74
  %79 = load i8*, i8** %77, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 3
  %81 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %10, i32 0, i32 6
  %82 = load i32, i32* %9, align 4
  %83 = invoke dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %81, i32 %82)
          to label %84 unwind label %104

84:                                               ; preds = %78
  store i8* %80, i8** %83, align 8
  br label %85

85:                                               ; preds = %84
  %86 = load i32, i32* %9, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %9, align 4
  br label %55

88:                                               ; preds = %3
  %89 = landingpad { i8*, i32 }
          cleanup
  %90 = extractvalue { i8*, i32 } %89, 0
  store i8* %90, i8** %7, align 8
  %91 = extractvalue { i8*, i32 } %89, 1
  store i32 %91, i32* %8, align 4
  br label %123

92:                                               ; preds = %18
  %93 = landingpad { i8*, i32 }
          cleanup
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %7, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %8, align 4
  br label %122

96:                                               ; preds = %21
  %97 = landingpad { i8*, i32 }
          cleanup
  %98 = extractvalue { i8*, i32 } %97, 0
  store i8* %98, i8** %7, align 8
  %99 = extractvalue { i8*, i32 } %97, 1
  store i32 %99, i32* %8, align 4
  br label %121

100:                                              ; preds = %24
  %101 = landingpad { i8*, i32 }
          cleanup
  %102 = extractvalue { i8*, i32 } %101, 0
  store i8* %102, i8** %7, align 8
  %103 = extractvalue { i8*, i32 } %101, 1
  store i32 %103, i32* %8, align 4
  br label %120

104:                                              ; preds = %78, %74, %70, %63, %60, %27
  %105 = landingpad { i8*, i32 }
          cleanup
  %106 = extractvalue { i8*, i32 } %105, 0
  store i8* %106, i8** %7, align 8
  %107 = extractvalue { i8*, i32 } %105, 1
  store i32 %107, i32* %8, align 4
  br label %119

108:                                              ; preds = %48
  %109 = landingpad { i8*, i32 }
          cleanup
  %110 = extractvalue { i8*, i32 } %109, 0
  store i8* %110, i8** %7, align 8
  %111 = extractvalue { i8*, i32 } %109, 1
  store i32 %111, i32* %8, align 4
  %112 = icmp eq %class.StateMap* %44, %49
  br i1 %112, label %117, label %113

113:                                              ; preds = %113, %108
  %114 = phi %class.StateMap* [ %49, %108 ], [ %115, %113 ]
  %115 = getelementptr inbounds %class.StateMap, %class.StateMap* %114, i64 -1
  call void @_ZN8StateMapD2Ev(%class.StateMap* %115) #2
  %116 = icmp eq %class.StateMap* %115, %44
  br i1 %116, label %117, label %113

117:                                              ; preds = %113, %108
  call void @_ZdaPv(i8* %40) #17
  br label %119

118:                                              ; preds = %55
  ret void

119:                                              ; preds = %117, %104
  call void @_ZN5ArrayIPhLi0EED2Ev(%class.Array.6* %25) #2
  br label %120

120:                                              ; preds = %119, %100
  call void @_ZN5ArrayIjLi0EED2Ev(%class.Array* %22) #2
  br label %121

121:                                              ; preds = %120, %96
  call void @_ZN5ArrayIPhLi0EED2Ev(%class.Array.6* %19) #2
  br label %122

122:                                              ; preds = %121, %92
  call void @_ZN5ArrayIPhLi0EED2Ev(%class.Array.6* %16) #2
  br label %123

123:                                              ; preds = %122, %88
  call void @_ZN5ArrayIN10ContextMap1EELi64EED2Ev(%class.Array.5* %13) #2
  br label %124

124:                                              ; preds = %123
  %125 = load i8*, i8** %7, align 8
  %126 = load i32, i32* %8, align 4
  %127 = insertvalue { i8*, i32 } undef, i8* %125, 0
  %128 = insertvalue { i8*, i32 } %127, i32 %126, 1
  resume { i8*, i32 } %128
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIN10ContextMap1EELi64EEC2Ei(%class.Array.5* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Array.5*, align 8
  %4 = alloca i32, align 4
  store %class.Array.5* %0, %class.Array.5** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.5*, %class.Array.5** %3, align 8
  %6 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIN10ContextMap1EELi64EE6createEi(%class.Array.5* %5, i32 %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIPhLi0EEC2Ei(%class.Array.6* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Array.6*, align 8
  %4 = alloca i32, align 4
  store %class.Array.6* %0, %class.Array.6** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.6*, %class.Array.6** %3, align 8
  %6 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIPhLi0EE6createEi(%class.Array.6* %5, i32 %6)
  ret void
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nobuiltin
declare dso_local noalias i8* @_Znam(i64) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(64) %"class.ContextMap::E"* @_ZN5ArrayIN10ContextMap1EELi64EEixEi(%class.Array.5* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array.5*, align 8
  %4 = alloca i32, align 4
  store %class.Array.5* %0, %class.Array.5** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.5*, %class.Array.5** %3, align 8
  %6 = getelementptr inbounds %class.Array.5, %class.Array.5* %5, i32 0, i32 3
  %7 = load %"class.ContextMap::E"*, %"class.ContextMap::E"** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"class.ContextMap::E", %"class.ContextMap::E"* %7, i64 %9
  ret %"class.ContextMap::E"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array.6*, align 8
  %4 = alloca i32, align 4
  store %class.Array.6* %0, %class.Array.6** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.6*, %class.Array.6** %3, align 8
  %6 = getelementptr inbounds %class.Array.6, %class.Array.6* %5, i32 0, i32 3
  %7 = load i8**, i8*** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8*, i8** %7, i64 %9
  ret i8** %10
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdaPv(i8*) #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIPhLi0EED2Ev(%class.Array.6* %0) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Array.6*, align 8
  store %class.Array.6* %0, %class.Array.6** %2, align 8
  %3 = load %class.Array.6*, %class.Array.6** %2, align 8
  %4 = getelementptr inbounds %class.Array.6, %class.Array.6* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = mul i64 %6, 8
  %8 = sub i64 0, %7
  %9 = trunc i64 %8 to i32
  invoke void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %9)
          to label %10 unwind label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.Array.6, %class.Array.6* %3, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  call void @free(i8* %12) #2
  ret void

13:                                               ; preds = %1
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  call void @__clang_call_terminate(i8* %15) #15
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIN10ContextMap1EELi64EED2Ev(%class.Array.5* %0) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Array.5*, align 8
  store %class.Array.5* %0, %class.Array.5** %2, align 8
  %3 = load %class.Array.5*, %class.Array.5** %2, align 8
  %4 = getelementptr inbounds %class.Array.5, %class.Array.5* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = mul i64 %6, 64
  %8 = sub i64 -64, %7
  %9 = trunc i64 %8 to i32
  invoke void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %9)
          to label %10 unwind label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.Array.5, %class.Array.5* %3, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  call void @free(i8* %12) #2
  ret void

13:                                               ; preds = %1
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  call void @__clang_call_terminate(i8* %15) #15
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIPhLi0EE6createEi(%class.Array.6* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array.6*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.Array.6* %0, %class.Array.6** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.Array.6*, %class.Array.6** %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 0
  store i32 %7, i32* %9, align 8
  %10 = load i32, i32* %4, align 4
  %11 = icmp sle i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 3
  store i8** null, i8*** %13, align 8
  %14 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 2
  store i8* null, i8** %14, align 8
  br label %36

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 8
  %20 = add i64 0, %19
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* %5, align 4
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %22)
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = call noalias i8* @calloc(i64 %24, i64 1) #2
  %26 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 2
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %15
  call void @_Z4quitPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0))
  br label %31

31:                                               ; preds = %30, %15
  %32 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast i8* %33 to i8**
  %35 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 3
  store i8** %34, i8*** %35, align 8
  br label %36

36:                                               ; preds = %31, %12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIN10ContextMap1EELi64EE6createEi(%class.Array.5* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array.5*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.Array.5* %0, %class.Array.5** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.Array.5*, %class.Array.5** %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.Array.5, %class.Array.5* %6, i32 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %class.Array.5, %class.Array.5* %6, i32 0, i32 0
  store i32 %7, i32* %9, align 8
  %10 = load i32, i32* %4, align 4
  %11 = icmp sle i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.Array.5, %class.Array.5* %6, i32 0, i32 3
  store %"class.ContextMap::E"* null, %"class.ContextMap::E"** %13, align 8
  %14 = getelementptr inbounds %class.Array.5, %class.Array.5* %6, i32 0, i32 2
  store i8* null, i8** %14, align 8
  br label %43

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.Array.5, %class.Array.5* %6, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 64
  %20 = add i64 64, %19
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* %5, align 4
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %22)
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = call noalias i8* @calloc(i64 %24, i64 1) #2
  %26 = getelementptr inbounds %class.Array.5, %class.Array.5* %6, i32 0, i32 2
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %class.Array.5, %class.Array.5* %6, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %15
  call void @_Z4quitPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0))
  br label %31

31:                                               ; preds = %30, %15
  %32 = getelementptr inbounds %class.Array.5, %class.Array.5* %6, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 64
  %35 = getelementptr inbounds %class.Array.5, %class.Array.5* %6, i32 0, i32 2
  %36 = load i8*, i8** %35, align 8
  %37 = ptrtoint i8* %36 to i64
  %38 = and i64 %37, 63
  %39 = sub i64 0, %38
  %40 = getelementptr inbounds i8, i8* %34, i64 %39
  %41 = bitcast i8* %40 to %"class.ContextMap::E"*
  %42 = getelementptr inbounds %class.Array.5, %class.Array.5* %6, i32 0, i32 3
  store %"class.ContextMap::E"* %41, %"class.ContextMap::E"** %42, align 8
  br label %43

43:                                               ; preds = %31, %12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN10ContextMapD2Ev(%class.ContextMap* %0) unnamed_addr #1 align 2 {
  %2 = alloca %class.ContextMap*, align 8
  store %class.ContextMap* %0, %class.ContextMap** %2, align 8
  %3 = load %class.ContextMap*, %class.ContextMap** %2, align 8
  %4 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %3, i32 0, i32 7
  %5 = load %class.StateMap*, %class.StateMap** %4, align 8
  %6 = icmp eq %class.StateMap* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.StateMap* %5 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 -8
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %class.StateMap, %class.StateMap* %5, i64 %11
  %13 = icmp eq %class.StateMap* %5, %12
  br i1 %13, label %18, label %14

14:                                               ; preds = %14, %7
  %15 = phi %class.StateMap* [ %12, %7 ], [ %16, %14 ]
  %16 = getelementptr inbounds %class.StateMap, %class.StateMap* %15, i64 -1
  call void @_ZN8StateMapD2Ev(%class.StateMap* %16) #2
  %17 = icmp eq %class.StateMap* %16, %5
  br i1 %17, label %18, label %14

18:                                               ; preds = %14, %7
  call void @_ZdaPv(i8* %9) #17
  br label %19

19:                                               ; preds = %18, %1
  %20 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %3, i32 0, i32 6
  call void @_ZN5ArrayIPhLi0EED2Ev(%class.Array.6* %20) #2
  %21 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %3, i32 0, i32 5
  call void @_ZN5ArrayIjLi0EED2Ev(%class.Array* %21) #2
  %22 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %3, i32 0, i32 4
  call void @_ZN5ArrayIPhLi0EED2Ev(%class.Array.6* %22) #2
  %23 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %3, i32 0, i32 3
  call void @_ZN5ArrayIPhLi0EED2Ev(%class.Array.6* %23) #2
  %24 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %3, i32 0, i32 2
  call void @_ZN5ArrayIN10ContextMap1EELi64EED2Ev(%class.Array.5* %24) #2
  ret void
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZN10ContextMap4mix1ER5Mixeriiii(%class.ContextMap* %0, %class.Mixer* dereferenceable(136) %1, i32 %2, i32 %3, i32 %4, i32 %5) #0 align 2 {
  %7 = alloca %class.ContextMap*, align 8
  %8 = alloca %class.Mixer*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %class.ContextMap* %0, %class.ContextMap** %7, align 8
  store %class.Mixer* %1, %class.Mixer** %8, align 8
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  %21 = load %class.ContextMap*, %class.ContextMap** %7, align 8
  store i32 0, i32* %13, align 4
  store i32 0, i32* %14, align 4
  br label %22

22:                                               ; preds = %457, %6
  %23 = load i32, i32* %14, align 4
  %24 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 8
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %23, %25
  br i1 %26, label %27, label %460

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 3
  %29 = load i32, i32* %14, align 4
  %30 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %28, i32 %29)
  %31 = load i8*, i8** %30, align 8
  %32 = icmp ne i8* %31, null
  br i1 %32, label %33, label %65

33:                                               ; preds = %27
  %34 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 3
  %35 = load i32, i32* %14, align 4
  %36 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %34, i32 %35)
  %37 = load i8*, i8** %36, align 8
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = getelementptr inbounds [256 x [4 x i8]], [256 x [4 x i8]]* @_ZL11State_table, i64 0, i64 %39
  %41 = load i32, i32* %12, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [4 x i8], [4 x i8]* %40, i64 0, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  store i32 %45, i32* %15, align 4
  %46 = load i32, i32* %15, align 4
  %47 = icmp sge i32 %46, 204
  br i1 %47, label %48, label %58

48:                                               ; preds = %33
  %49 = call i32 @_ZN6RandomclEv(%class.Random* @rnd)
  %50 = load i32, i32* %15, align 4
  %51 = sub nsw i32 452, %50
  %52 = ashr i32 %51, 3
  %53 = shl i32 %49, %52
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %48
  %56 = load i32, i32* %15, align 4
  %57 = sub nsw i32 %56, 4
  store i32 %57, i32* %15, align 4
  br label %58

58:                                               ; preds = %55, %48, %33
  %59 = load i32, i32* %15, align 4
  %60 = trunc i32 %59 to i8
  %61 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 3
  %62 = load i32, i32* %14, align 4
  %63 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %61, i32 %62)
  %64 = load i8*, i8** %63, align 8
  store i8 %60, i8* %64, align 1
  br label %65

65:                                               ; preds = %58, %27
  %66 = load i32, i32* @bpos, align 4
  %67 = icmp sgt i32 %66, 1
  br i1 %67, label %68, label %81

68:                                               ; preds = %65
  %69 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 6
  %70 = load i32, i32* %14, align 4
  %71 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %69, i32 %70)
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 0
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %68
  %78 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 3
  %79 = load i32, i32* %14, align 4
  %80 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %78, i32 %79)
  store i8* null, i8** %80, align 8
  br label %376

81:                                               ; preds = %68, %65
  %82 = load i32, i32* @bpos, align 4
  switch i32 %82, label %135 [
    i32 1, label %83
    i32 3, label %83
    i32 6, label %83
    i32 4, label %96
    i32 7, label %96
    i32 2, label %109
    i32 5, label %109
  ]

83:                                               ; preds = %81, %81, %81
  %84 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 4
  %85 = load i32, i32* %14, align 4
  %86 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %84, i32 %85)
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 1
  %89 = load i32, i32* %9, align 4
  %90 = and i32 %89, 1
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* %88, i64 %91
  %93 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 3
  %94 = load i32, i32* %14, align 4
  %95 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %93, i32 %94)
  store i8* %92, i8** %95, align 8
  br label %375

96:                                               ; preds = %81, %81
  %97 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 4
  %98 = load i32, i32* %14, align 4
  %99 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %97, i32 %98)
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 3
  %102 = load i32, i32* %9, align 4
  %103 = and i32 %102, 3
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i8, i8* %101, i64 %104
  %106 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 3
  %107 = load i32, i32* %14, align 4
  %108 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %106, i32 %107)
  store i8* %105, i8** %108, align 8
  br label %375

109:                                              ; preds = %81, %81
  %110 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 2
  %111 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 5
  %112 = load i32, i32* %14, align 4
  %113 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %111, i32 %112)
  %114 = load i32, i32* %113, align 4
  %115 = load i32, i32* %9, align 4
  %116 = add i32 %114, %115
  %117 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 2
  %118 = call i32 @_ZNK5ArrayIN10ContextMap1EELi64EE4sizeEv(%class.Array.5* %117)
  %119 = sub nsw i32 %118, 1
  %120 = and i32 %116, %119
  %121 = call dereferenceable(64) %"class.ContextMap::E"* @_ZN5ArrayIN10ContextMap1EELi64EEixEi(%class.Array.5* %110, i32 %120)
  %122 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 5
  %123 = load i32, i32* %14, align 4
  %124 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %122, i32 %123)
  %125 = load i32, i32* %124, align 4
  %126 = lshr i32 %125, 16
  %127 = trunc i32 %126 to i16
  %128 = call i8* @_ZN10ContextMap1E3getEt(%"class.ContextMap::E"* %121, i16 zeroext %127)
  %129 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 3
  %130 = load i32, i32* %14, align 4
  %131 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %129, i32 %130)
  store i8* %128, i8** %131, align 8
  %132 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 4
  %133 = load i32, i32* %14, align 4
  %134 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %132, i32 %133)
  store i8* %128, i8** %134, align 8
  br label %375

135:                                              ; preds = %81
  %136 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 2
  %137 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 5
  %138 = load i32, i32* %14, align 4
  %139 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %137, i32 %138)
  %140 = load i32, i32* %139, align 4
  %141 = load i32, i32* %9, align 4
  %142 = add i32 %140, %141
  %143 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 2
  %144 = call i32 @_ZNK5ArrayIN10ContextMap1EELi64EE4sizeEv(%class.Array.5* %143)
  %145 = sub nsw i32 %144, 1
  %146 = and i32 %142, %145
  %147 = call dereferenceable(64) %"class.ContextMap::E"* @_ZN5ArrayIN10ContextMap1EELi64EEixEi(%class.Array.5* %136, i32 %146)
  %148 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 5
  %149 = load i32, i32* %14, align 4
  %150 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %148, i32 %149)
  %151 = load i32, i32* %150, align 4
  %152 = lshr i32 %151, 16
  %153 = trunc i32 %152 to i16
  %154 = call i8* @_ZN10ContextMap1E3getEt(%"class.ContextMap::E"* %147, i16 zeroext %153)
  %155 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 3
  %156 = load i32, i32* %14, align 4
  %157 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %155, i32 %156)
  store i8* %154, i8** %157, align 8
  %158 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 4
  %159 = load i32, i32* %14, align 4
  %160 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %158, i32 %159)
  store i8* %154, i8** %160, align 8
  %161 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 4
  %162 = load i32, i32* %14, align 4
  %163 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %161, i32 %162)
  %164 = load i8*, i8** %163, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 3
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i32
  %168 = icmp eq i32 %167, 2
  br i1 %168, label %169, label %284

169:                                              ; preds = %135
  %170 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 4
  %171 = load i32, i32* %14, align 4
  %172 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %170, i32 %171)
  %173 = load i8*, i8** %172, align 8
  %174 = getelementptr inbounds i8, i8* %173, i64 4
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = add nsw i32 %176, 256
  store i32 %177, i32* %16, align 4
  %178 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 2
  %179 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 5
  %180 = load i32, i32* %14, align 4
  %181 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %179, i32 %180)
  %182 = load i32, i32* %181, align 4
  %183 = load i32, i32* %16, align 4
  %184 = ashr i32 %183, 6
  %185 = add i32 %182, %184
  %186 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 2
  %187 = call i32 @_ZNK5ArrayIN10ContextMap1EELi64EE4sizeEv(%class.Array.5* %186)
  %188 = sub nsw i32 %187, 1
  %189 = and i32 %185, %188
  %190 = call dereferenceable(64) %"class.ContextMap::E"* @_ZN5ArrayIN10ContextMap1EELi64EEixEi(%class.Array.5* %178, i32 %189)
  %191 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 5
  %192 = load i32, i32* %14, align 4
  %193 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %191, i32 %192)
  %194 = load i32, i32* %193, align 4
  %195 = lshr i32 %194, 16
  %196 = trunc i32 %195 to i16
  %197 = call i8* @_ZN10ContextMap1E3getEt(%"class.ContextMap::E"* %190, i16 zeroext %196)
  store i8* %197, i8** %17, align 8
  %198 = load i32, i32* %16, align 4
  %199 = ashr i32 %198, 5
  %200 = and i32 %199, 1
  %201 = add nsw i32 1, %200
  %202 = trunc i32 %201 to i8
  %203 = load i8*, i8** %17, align 8
  %204 = getelementptr inbounds i8, i8* %203, i64 0
  store i8 %202, i8* %204, align 1
  %205 = load i32, i32* %16, align 4
  %206 = ashr i32 %205, 4
  %207 = and i32 %206, 1
  %208 = add nsw i32 1, %207
  %209 = trunc i32 %208 to i8
  %210 = load i8*, i8** %17, align 8
  %211 = load i32, i32* %16, align 4
  %212 = ashr i32 %211, 5
  %213 = and i32 %212, 1
  %214 = add nsw i32 1, %213
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds i8, i8* %210, i64 %215
  store i8 %209, i8* %216, align 1
  %217 = load i32, i32* %16, align 4
  %218 = ashr i32 %217, 3
  %219 = and i32 %218, 1
  %220 = add nsw i32 1, %219
  %221 = trunc i32 %220 to i8
  %222 = load i8*, i8** %17, align 8
  %223 = load i32, i32* %16, align 4
  %224 = ashr i32 %223, 4
  %225 = and i32 %224, 3
  %226 = add nsw i32 3, %225
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds i8, i8* %222, i64 %227
  store i8 %221, i8* %228, align 1
  %229 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 2
  %230 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 5
  %231 = load i32, i32* %14, align 4
  %232 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %230, i32 %231)
  %233 = load i32, i32* %232, align 4
  %234 = load i32, i32* %16, align 4
  %235 = ashr i32 %234, 3
  %236 = add i32 %233, %235
  %237 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 2
  %238 = call i32 @_ZNK5ArrayIN10ContextMap1EELi64EE4sizeEv(%class.Array.5* %237)
  %239 = sub nsw i32 %238, 1
  %240 = and i32 %236, %239
  %241 = call dereferenceable(64) %"class.ContextMap::E"* @_ZN5ArrayIN10ContextMap1EELi64EEixEi(%class.Array.5* %229, i32 %240)
  %242 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 5
  %243 = load i32, i32* %14, align 4
  %244 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %242, i32 %243)
  %245 = load i32, i32* %244, align 4
  %246 = lshr i32 %245, 16
  %247 = trunc i32 %246 to i16
  %248 = call i8* @_ZN10ContextMap1E3getEt(%"class.ContextMap::E"* %241, i16 zeroext %247)
  store i8* %248, i8** %17, align 8
  %249 = load i32, i32* %16, align 4
  %250 = ashr i32 %249, 2
  %251 = and i32 %250, 1
  %252 = add nsw i32 1, %251
  %253 = trunc i32 %252 to i8
  %254 = load i8*, i8** %17, align 8
  %255 = getelementptr inbounds i8, i8* %254, i64 0
  store i8 %253, i8* %255, align 1
  %256 = load i32, i32* %16, align 4
  %257 = ashr i32 %256, 1
  %258 = and i32 %257, 1
  %259 = add nsw i32 1, %258
  %260 = trunc i32 %259 to i8
  %261 = load i8*, i8** %17, align 8
  %262 = load i32, i32* %16, align 4
  %263 = ashr i32 %262, 2
  %264 = and i32 %263, 1
  %265 = add nsw i32 1, %264
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds i8, i8* %261, i64 %266
  store i8 %260, i8* %267, align 1
  %268 = load i32, i32* %16, align 4
  %269 = and i32 %268, 1
  %270 = add nsw i32 1, %269
  %271 = trunc i32 %270 to i8
  %272 = load i8*, i8** %17, align 8
  %273 = load i32, i32* %16, align 4
  %274 = ashr i32 %273, 1
  %275 = and i32 %274, 3
  %276 = add nsw i32 3, %275
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds i8, i8* %272, i64 %277
  store i8 %271, i8* %278, align 1
  %279 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 4
  %280 = load i32, i32* %14, align 4
  %281 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %279, i32 %280)
  %282 = load i8*, i8** %281, align 8
  %283 = getelementptr inbounds i8, i8* %282, i64 6
  store i8 0, i8* %283, align 1
  br label %284

284:                                              ; preds = %169, %135
  %285 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 6
  %286 = load i32, i32* %14, align 4
  %287 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %285, i32 %286)
  %288 = load i8*, i8** %287, align 8
  %289 = getelementptr inbounds i8, i8* %288, i64 0
  %290 = load i8, i8* %289, align 1
  %291 = zext i8 %290 to i32
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %306

293:                                              ; preds = %284
  %294 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 6
  %295 = load i32, i32* %14, align 4
  %296 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %294, i32 %295)
  %297 = load i8*, i8** %296, align 8
  %298 = getelementptr inbounds i8, i8* %297, i64 0
  store i8 2, i8* %298, align 1
  %299 = load i32, i32* %11, align 4
  %300 = trunc i32 %299 to i8
  %301 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 6
  %302 = load i32, i32* %14, align 4
  %303 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %301, i32 %302)
  %304 = load i8*, i8** %303, align 8
  %305 = getelementptr inbounds i8, i8* %304, i64 1
  store i8 %300, i8* %305, align 1
  br label %366

306:                                              ; preds = %284
  %307 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 6
  %308 = load i32, i32* %14, align 4
  %309 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %307, i32 %308)
  %310 = load i8*, i8** %309, align 8
  %311 = getelementptr inbounds i8, i8* %310, i64 1
  %312 = load i8, i8* %311, align 1
  %313 = zext i8 %312 to i32
  %314 = load i32, i32* %11, align 4
  %315 = icmp ne i32 %313, %314
  br i1 %315, label %316, label %329

316:                                              ; preds = %306
  %317 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 6
  %318 = load i32, i32* %14, align 4
  %319 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %317, i32 %318)
  %320 = load i8*, i8** %319, align 8
  %321 = getelementptr inbounds i8, i8* %320, i64 0
  store i8 1, i8* %321, align 1
  %322 = load i32, i32* %11, align 4
  %323 = trunc i32 %322 to i8
  %324 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 6
  %325 = load i32, i32* %14, align 4
  %326 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %324, i32 %325)
  %327 = load i8*, i8** %326, align 8
  %328 = getelementptr inbounds i8, i8* %327, i64 1
  store i8 %323, i8* %328, align 1
  br label %365

329:                                              ; preds = %306
  %330 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 6
  %331 = load i32, i32* %14, align 4
  %332 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %330, i32 %331)
  %333 = load i8*, i8** %332, align 8
  %334 = getelementptr inbounds i8, i8* %333, i64 0
  %335 = load i8, i8* %334, align 1
  %336 = zext i8 %335 to i32
  %337 = icmp slt i32 %336, 254
  br i1 %337, label %338, label %348

338:                                              ; preds = %329
  %339 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 6
  %340 = load i32, i32* %14, align 4
  %341 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %339, i32 %340)
  %342 = load i8*, i8** %341, align 8
  %343 = getelementptr inbounds i8, i8* %342, i64 0
  %344 = load i8, i8* %343, align 1
  %345 = zext i8 %344 to i32
  %346 = add nsw i32 %345, 2
  %347 = trunc i32 %346 to i8
  store i8 %347, i8* %343, align 1
  br label %364

348:                                              ; preds = %329
  %349 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 6
  %350 = load i32, i32* %14, align 4
  %351 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %349, i32 %350)
  %352 = load i8*, i8** %351, align 8
  %353 = getelementptr inbounds i8, i8* %352, i64 0
  %354 = load i8, i8* %353, align 1
  %355 = zext i8 %354 to i32
  %356 = icmp eq i32 %355, 255
  br i1 %356, label %357, label %363

357:                                              ; preds = %348
  %358 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 6
  %359 = load i32, i32* %14, align 4
  %360 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %358, i32 %359)
  %361 = load i8*, i8** %360, align 8
  %362 = getelementptr inbounds i8, i8* %361, i64 0
  store i8 -128, i8* %362, align 1
  br label %363

363:                                              ; preds = %357, %348
  br label %364

364:                                              ; preds = %363, %338
  br label %365

365:                                              ; preds = %364, %316
  br label %366

366:                                              ; preds = %365, %293
  %367 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 4
  %368 = load i32, i32* %14, align 4
  %369 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %367, i32 %368)
  %370 = load i8*, i8** %369, align 8
  %371 = getelementptr inbounds i8, i8* %370, i64 3
  %372 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 6
  %373 = load i32, i32* %14, align 4
  %374 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %372, i32 %373)
  store i8* %371, i8** %374, align 8
  br label %375

375:                                              ; preds = %366, %109, %96, %83
  br label %376

376:                                              ; preds = %375, %77
  %377 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 6
  %378 = load i32, i32* %14, align 4
  %379 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %377, i32 %378)
  %380 = load i8*, i8** %379, align 8
  %381 = getelementptr inbounds i8, i8* %380, i64 1
  %382 = load i8, i8* %381, align 1
  %383 = zext i8 %382 to i32
  %384 = add nsw i32 %383, 256
  %385 = load i32, i32* %10, align 4
  %386 = sub nsw i32 8, %385
  %387 = ashr i32 %384, %386
  %388 = load i32, i32* %9, align 4
  %389 = icmp eq i32 %387, %388
  br i1 %389, label %390, label %424

390:                                              ; preds = %376
  %391 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 6
  %392 = load i32, i32* %14, align 4
  %393 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %391, i32 %392)
  %394 = load i8*, i8** %393, align 8
  %395 = getelementptr inbounds i8, i8* %394, i64 0
  %396 = load i8, i8* %395, align 1
  %397 = zext i8 %396 to i32
  store i32 %397, i32* %18, align 4
  %398 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 6
  %399 = load i32, i32* %14, align 4
  %400 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %398, i32 %399)
  %401 = load i8*, i8** %400, align 8
  %402 = getelementptr inbounds i8, i8* %401, i64 1
  %403 = load i8, i8* %402, align 1
  %404 = zext i8 %403 to i32
  %405 = load i32, i32* %10, align 4
  %406 = sub nsw i32 7, %405
  %407 = ashr i32 %404, %406
  %408 = and i32 %407, 1
  %409 = mul nsw i32 %408, 2
  %410 = sub nsw i32 %409, 1
  store i32 %410, i32* %19, align 4
  %411 = load i32, i32* %18, align 4
  %412 = add nsw i32 %411, 1
  %413 = trunc i32 %412 to i16
  %414 = call i32 @_ZNK4IlogclEt(%class.Buf* @ilog, i16 zeroext %413)
  %415 = load i32, i32* %18, align 4
  %416 = xor i32 %415, -1
  %417 = and i32 %416, 1
  %418 = add nsw i32 2, %417
  %419 = shl i32 %414, %418
  store i32 %419, i32* %20, align 4
  %420 = load %class.Mixer*, %class.Mixer** %8, align 8
  %421 = load i32, i32* %19, align 4
  %422 = load i32, i32* %20, align 4
  %423 = mul nsw i32 %421, %422
  call void @_ZN5Mixer3addEi(%class.Mixer* %420, i32 %423)
  br label %426

424:                                              ; preds = %376
  %425 = load %class.Mixer*, %class.Mixer** %8, align 8
  call void @_ZN5Mixer3addEi(%class.Mixer* %425, i32 0)
  br label %426

426:                                              ; preds = %424, %390
  %427 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 3
  %428 = load i32, i32* %14, align 4
  %429 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %427, i32 %428)
  %430 = load i8*, i8** %429, align 8
  %431 = icmp ne i8* %430, null
  br i1 %431, label %432, label %448

432:                                              ; preds = %426
  %433 = load %class.Mixer*, %class.Mixer** %8, align 8
  %434 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 3
  %435 = load i32, i32* %14, align 4
  %436 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* %434, i32 %435)
  %437 = load i8*, i8** %436, align 8
  %438 = load i8, i8* %437, align 1
  %439 = zext i8 %438 to i32
  %440 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 7
  %441 = load %class.StateMap*, %class.StateMap** %440, align 8
  %442 = load i32, i32* %14, align 4
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds %class.StateMap, %class.StateMap* %441, i64 %443
  %445 = call i32 @_Z4mix2R5MixeriR8StateMap(%class.Mixer* dereferenceable(136) %433, i32 %439, %class.StateMap* dereferenceable(32) %444)
  %446 = load i32, i32* %13, align 4
  %447 = add nsw i32 %446, %445
  store i32 %447, i32* %13, align 4
  br label %456

448:                                              ; preds = %426
  %449 = load %class.Mixer*, %class.Mixer** %8, align 8
  %450 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 7
  %451 = load %class.StateMap*, %class.StateMap** %450, align 8
  %452 = load i32, i32* %14, align 4
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds %class.StateMap, %class.StateMap* %451, i64 %453
  %455 = call i32 @_Z4mix2R5MixeriR8StateMap(%class.Mixer* dereferenceable(136) %449, i32 0, %class.StateMap* dereferenceable(32) %454)
  br label %456

456:                                              ; preds = %448, %432
  br label %457

457:                                              ; preds = %456
  %458 = load i32, i32* %14, align 4
  %459 = add nsw i32 %458, 1
  store i32 %459, i32* %14, align 4
  br label %22

460:                                              ; preds = %22
  %461 = load i32, i32* %10, align 4
  %462 = icmp eq i32 %461, 7
  br i1 %462, label %463, label %465

463:                                              ; preds = %460
  %464 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %21, i32 0, i32 8
  store i32 0, i32* %464, align 8
  br label %465

465:                                              ; preds = %463, %460
  %466 = load i32, i32* %13, align 4
  ret i32 %466
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_ZN6RandomclEv(%class.Random* %0) #0 comdat align 2 {
  %2 = alloca %class.Random*, align 8
  store %class.Random* %0, %class.Random** %2, align 8
  %3 = load %class.Random*, %class.Random** %2, align 8
  %4 = getelementptr inbounds %class.Random, %class.Random* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %class.Random, %class.Random* %3, i32 0, i32 0
  %8 = getelementptr inbounds %class.Random, %class.Random* %3, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = sub nsw i32 %9, 24
  %11 = and i32 %10, 63
  %12 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %7, i32 %11)
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.Random, %class.Random* %3, i32 0, i32 0
  %15 = getelementptr inbounds %class.Random, %class.Random* %3, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = sub nsw i32 %16, 55
  %18 = and i32 %17, 63
  %19 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %14, i32 %18)
  %20 = load i32, i32* %19, align 4
  %21 = xor i32 %13, %20
  %22 = getelementptr inbounds %class.Random, %class.Random* %3, i32 0, i32 0
  %23 = getelementptr inbounds %class.Random, %class.Random* %3, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 63
  %26 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %22, i32 %25)
  store i32 %21, i32* %26, align 4
  ret i32 %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK5ArrayIN10ContextMap1EELi64EE4sizeEv(%class.Array.5* %0) #1 comdat align 2 {
  %2 = alloca %class.Array.5*, align 8
  store %class.Array.5* %0, %class.Array.5** %2, align 8
  %3 = load %class.Array.5*, %class.Array.5** %2, align 8
  %4 = getelementptr inbounds %class.Array.5, %class.Array.5* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8* @_ZN10ContextMap1E3getEt(%"class.ContextMap::E"* %0, i16 zeroext %1) #1 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca %"class.ContextMap::E"*, align 8
  %5 = alloca i16, align 2
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %"class.ContextMap::E"* %0, %"class.ContextMap::E"** %4, align 8
  store i16 %1, i16* %5, align 2
  %10 = load %"class.ContextMap::E"*, %"class.ContextMap::E"** %4, align 8
  %11 = getelementptr inbounds %"class.ContextMap::E", %"class.ContextMap::E"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"class.ContextMap::E", %"class.ContextMap::E"* %10, i32 0, i32 1
  %13 = load i8, i8* %12, align 2
  %14 = zext i8 %13 to i32
  %15 = and i32 %14, 15
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [7 x i16], [7 x i16]* %11, i64 0, i64 %16
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = load i16, i16* %5, align 2
  %21 = zext i16 %20 to i32
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %32

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.ContextMap::E", %"class.ContextMap::E"* %10, i32 0, i32 2
  %25 = getelementptr inbounds %"class.ContextMap::E", %"class.ContextMap::E"* %10, i32 0, i32 1
  %26 = load i8, i8* %25, align 2
  %27 = zext i8 %26 to i32
  %28 = and i32 %27, 15
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [7 x [7 x i8]], [7 x [7 x i8]]* %24, i64 0, i64 %29
  %31 = getelementptr inbounds [7 x i8], [7 x i8]* %30, i64 0, i64 0
  store i8* %31, i8** %3, align 8
  br label %107

32:                                               ; preds = %2
  store i32 65535, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  br label %33

33:                                               ; preds = %89, %32
  %34 = load i32, i32* %8, align 4
  %35 = icmp slt i32 %34, 7
  br i1 %35, label %36, label %92

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.ContextMap::E", %"class.ContextMap::E"* %10, i32 0, i32 0
  %38 = load i32, i32* %8, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [7 x i16], [7 x i16]* %37, i64 0, i64 %39
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = load i16, i16* %5, align 2
  %44 = zext i16 %43 to i32
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %46, label %60

46:                                               ; preds = %36
  %47 = getelementptr inbounds %"class.ContextMap::E", %"class.ContextMap::E"* %10, i32 0, i32 1
  %48 = load i8, i8* %47, align 2
  %49 = zext i8 %48 to i32
  %50 = shl i32 %49, 4
  %51 = load i32, i32* %8, align 4
  %52 = or i32 %50, %51
  %53 = trunc i32 %52 to i8
  %54 = getelementptr inbounds %"class.ContextMap::E", %"class.ContextMap::E"* %10, i32 0, i32 1
  store i8 %53, i8* %54, align 2
  %55 = getelementptr inbounds %"class.ContextMap::E", %"class.ContextMap::E"* %10, i32 0, i32 2
  %56 = load i32, i32* %8, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [7 x [7 x i8]], [7 x [7 x i8]]* %55, i64 0, i64 %57
  %59 = getelementptr inbounds [7 x i8], [7 x i8]* %58, i64 0, i64 0
  store i8* %59, i8** %3, align 8
  br label %107

60:                                               ; preds = %36
  %61 = getelementptr inbounds %"class.ContextMap::E", %"class.ContextMap::E"* %10, i32 0, i32 2
  %62 = load i32, i32* %8, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [7 x [7 x i8]], [7 x [7 x i8]]* %61, i64 0, i64 %63
  %65 = getelementptr inbounds [7 x i8], [7 x i8]* %64, i64 0, i64 0
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  store i32 %67, i32* %9, align 4
  %68 = load i32, i32* %9, align 4
  %69 = load i32, i32* %6, align 4
  %70 = icmp slt i32 %68, %69
  br i1 %70, label %71, label %88

71:                                               ; preds = %60
  %72 = getelementptr inbounds %"class.ContextMap::E", %"class.ContextMap::E"* %10, i32 0, i32 1
  %73 = load i8, i8* %72, align 2
  %74 = zext i8 %73 to i32
  %75 = and i32 %74, 15
  %76 = load i32, i32* %8, align 4
  %77 = icmp ne i32 %75, %76
  br i1 %77, label %78, label %88

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.ContextMap::E", %"class.ContextMap::E"* %10, i32 0, i32 1
  %80 = load i8, i8* %79, align 2
  %81 = zext i8 %80 to i32
  %82 = ashr i32 %81, 4
  %83 = load i32, i32* %8, align 4
  %84 = icmp ne i32 %82, %83
  br i1 %84, label %85, label %88

85:                                               ; preds = %78
  %86 = load i32, i32* %9, align 4
  store i32 %86, i32* %6, align 4
  %87 = load i32, i32* %8, align 4
  store i32 %87, i32* %7, align 4
  br label %88

88:                                               ; preds = %85, %78, %71, %60
  br label %89

89:                                               ; preds = %88
  %90 = load i32, i32* %8, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %8, align 4
  br label %33

92:                                               ; preds = %33
  %93 = load i32, i32* %7, align 4
  %94 = or i32 240, %93
  %95 = trunc i32 %94 to i8
  %96 = getelementptr inbounds %"class.ContextMap::E", %"class.ContextMap::E"* %10, i32 0, i32 1
  store i8 %95, i8* %96, align 2
  %97 = load i16, i16* %5, align 2
  %98 = getelementptr inbounds %"class.ContextMap::E", %"class.ContextMap::E"* %10, i32 0, i32 0
  %99 = load i32, i32* %7, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [7 x i16], [7 x i16]* %98, i64 0, i64 %100
  store i16 %97, i16* %101, align 2
  %102 = getelementptr inbounds %"class.ContextMap::E", %"class.ContextMap::E"* %10, i32 0, i32 2
  %103 = load i32, i32* %7, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [7 x [7 x i8]], [7 x [7 x i8]]* %102, i64 0, i64 %104
  %106 = getelementptr inbounds [7 x i8], [7 x i8]* %105, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %106, i8 0, i64 7, i1 false)
  store i8* %106, i8** %3, align 8
  br label %107

107:                                              ; preds = %92, %46, %23
  %108 = load i8*, i8** %3, align 8
  ret i8* %108
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_ZNK4IlogclEt(%class.Buf* %0, i16 zeroext %1) #0 comdat align 2 {
  %3 = alloca %class.Buf*, align 8
  %4 = alloca i16, align 2
  store %class.Buf* %0, %class.Buf** %3, align 8
  store i16 %1, i16* %4, align 2
  %5 = load %class.Buf*, %class.Buf** %3, align 8
  %6 = getelementptr inbounds %class.Buf, %class.Buf* %5, i32 0, i32 0
  %7 = load i16, i16* %4, align 2
  %8 = zext i16 %7 to i32
  %9 = call dereferenceable(1) i8* @_ZNK5ArrayIhLi0EEixEi(%class.Array.0* %6, i32 %8)
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  ret i32 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5Mixer3addEi(%class.Mixer* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Mixer*, align 8
  %4 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Mixer*, %class.Mixer** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = trunc i32 %6 to i16
  %8 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 3
  %9 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 8
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = call dereferenceable(2) i16* @_ZN5ArrayIsLi16EEixEi(%class.Array.1* %8, i32 %10)
  store i16 %7, i16* %12, align 2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_Z4mix2R5MixeriR8StateMap(%class.Mixer* dereferenceable(136) %0, i32 %1, %class.StateMap* dereferenceable(32) %2) #0 comdat {
  %4 = alloca %class.Mixer*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.StateMap*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %4, align 8
  store i32 %1, i32* %5, align 4
  store %class.StateMap* %2, %class.StateMap** %6, align 8
  %12 = load %class.StateMap*, %class.StateMap** %6, align 8
  %13 = load i32, i32* %5, align 4
  %14 = call i32 @_ZN8StateMap1pEii(%class.StateMap* %12, i32 %13, i32 1023)
  store i32 %14, i32* %7, align 4
  %15 = load i32, i32* %5, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [256 x [4 x i8]], [256 x [4 x i8]]* @_ZL11State_table, i64 0, i64 %16
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* %17, i64 0, i64 2
  %19 = load i8, i8* %18, align 2
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %20, true
  %22 = zext i1 %21 to i32
  %23 = sub nsw i32 0, %22
  store i32 %23, i32* %8, align 4
  %24 = load i32, i32* %5, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [256 x [4 x i8]], [256 x [4 x i8]]* @_ZL11State_table, i64 0, i64 %25
  %27 = getelementptr inbounds [4 x i8], [4 x i8]* %26, i64 0, i64 3
  %28 = load i8, i8* %27, align 1
  %29 = icmp ne i8 %28, 0
  %30 = xor i1 %29, true
  %31 = zext i1 %30 to i32
  %32 = sub nsw i32 0, %31
  store i32 %32, i32* %9, align 4
  %33 = load i32, i32* %7, align 4
  %34 = call i32 @_ZNK7StretchclEi(%class.Stretch* @stretch, i32 %33)
  %35 = ashr i32 %34, 2
  store i32 %35, i32* %10, align 4
  %36 = load %class.Mixer*, %class.Mixer** %4, align 8
  %37 = load i32, i32* %10, align 4
  call void @_ZN5Mixer3addEi(%class.Mixer* %36, i32 %37)
  %38 = load i32, i32* %7, align 4
  %39 = ashr i32 %38, 4
  store i32 %39, i32* %7, align 4
  %40 = load i32, i32* %7, align 4
  %41 = sub nsw i32 255, %40
  store i32 %41, i32* %11, align 4
  %42 = load %class.Mixer*, %class.Mixer** %4, align 8
  %43 = load i32, i32* %7, align 4
  %44 = load i32, i32* %11, align 4
  %45 = sub nsw i32 %43, %44
  call void @_ZN5Mixer3addEi(%class.Mixer* %42, i32 %45)
  %46 = load %class.Mixer*, %class.Mixer** %4, align 8
  %47 = load i32, i32* %10, align 4
  %48 = load i32, i32* %9, align 4
  %49 = load i32, i32* %8, align 4
  %50 = sub nsw i32 %48, %49
  %51 = mul nsw i32 %47, %50
  call void @_ZN5Mixer3addEi(%class.Mixer* %46, i32 %51)
  %52 = load %class.Mixer*, %class.Mixer** %4, align 8
  %53 = load i32, i32* %7, align 4
  %54 = load i32, i32* %8, align 4
  %55 = and i32 %53, %54
  %56 = load i32, i32* %11, align 4
  %57 = load i32, i32* %9, align 4
  %58 = and i32 %56, %57
  %59 = sub nsw i32 %55, %58
  call void @_ZN5Mixer3addEi(%class.Mixer* %52, i32 %59)
  %60 = load %class.Mixer*, %class.Mixer** %4, align 8
  %61 = load i32, i32* %7, align 4
  %62 = load i32, i32* %9, align 4
  %63 = and i32 %61, %62
  %64 = load i32, i32* %11, align 4
  %65 = load i32, i32* %8, align 4
  %66 = and i32 %64, %65
  %67 = sub nsw i32 %63, %66
  call void @_ZN5Mixer3addEi(%class.Mixer* %60, i32 %67)
  %68 = load i32, i32* %5, align 4
  %69 = icmp sgt i32 %68, 0
  %70 = zext i1 %69 to i32
  ret i32 %70
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_ZN8StateMap1pEii(%class.StateMap* %0, i32 %1, i32 %2) #0 comdat align 2 {
  %4 = alloca %class.StateMap*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.StateMap* %0, %class.StateMap** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.StateMap*, %class.StateMap** %4, align 8
  %8 = load i32, i32* %6, align 4
  call void @_ZN8StateMap6updateEi(%class.StateMap* %7, i32 %8)
  %9 = getelementptr inbounds %class.StateMap, %class.StateMap* %7, i32 0, i32 2
  %10 = load i32, i32* %5, align 4
  %11 = getelementptr inbounds %class.StateMap, %class.StateMap* %7, i32 0, i32 1
  store i32 %10, i32* %11, align 4
  %12 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %9, i32 %10)
  %13 = load i32, i32* %12, align 4
  %14 = lshr i32 %13, 20
  ret i32 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_ZNK7StretchclEi(%class.Stretch* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Stretch*, align 8
  %4 = alloca i32, align 4
  store %class.Stretch* %0, %class.Stretch** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Stretch*, %class.Stretch** %3, align 8
  %6 = getelementptr inbounds %class.Stretch, %class.Stretch* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = call dereferenceable(2) i16* @_ZNK5ArrayIsLi0EEixEi(%class.Array.1* %6, i32 %7)
  %9 = load i16, i16* %8, align 2
  %10 = sext i16 %9 to i32
  ret i32 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(2) i16* @_ZNK5ArrayIsLi0EEixEi(%class.Array.1* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array.1*, align 8
  %4 = alloca i32, align 4
  store %class.Array.1* %0, %class.Array.1** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.1*, %class.Array.1** %3, align 8
  %6 = getelementptr inbounds %class.Array.1, %class.Array.1* %5, i32 0, i32 3
  %7 = load i16*, i16** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i16, i16* %7, i64 %9
  ret i16* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN8StateMap6updateEi(%class.StateMap* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.StateMap*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %class.StateMap* %0, %class.StateMap** %3, align 8
  store i32 %1, i32* %4, align 4
  %9 = load %class.StateMap*, %class.StateMap** %3, align 8
  %10 = getelementptr inbounds %class.StateMap, %class.StateMap* %9, i32 0, i32 2
  %11 = getelementptr inbounds %class.StateMap, %class.StateMap* %9, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %10, i32 %12)
  store i32* %13, i32** %5, align 8
  %14 = load i32*, i32** %5, align 8
  %15 = getelementptr inbounds i32, i32* %14, i64 0
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %6, align 4
  %17 = load i32, i32* %6, align 4
  %18 = and i32 %17, 1023
  store i32 %18, i32* %7, align 4
  %19 = load i32, i32* %6, align 4
  %20 = lshr i32 %19, 10
  store i32 %20, i32* %8, align 4
  %21 = load i32, i32* %7, align 4
  %22 = load i32, i32* %4, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = load i32, i32* %6, align 4
  %26 = add i32 %25, 1
  store i32 %26, i32* %6, align 4
  br label %32

27:                                               ; preds = %2
  %28 = load i32, i32* %6, align 4
  %29 = and i32 %28, -1024
  %30 = load i32, i32* %4, align 4
  %31 = or i32 %29, %30
  store i32 %31, i32* %6, align 4
  br label %32

32:                                               ; preds = %27, %24
  %33 = load i32, i32* @y, align 4
  %34 = shl i32 %33, 22
  %35 = load i32, i32* %8, align 4
  %36 = sub nsw i32 %34, %35
  %37 = ashr i32 %36, 3
  %38 = load i32, i32* %7, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [1024 x i32], [1024 x i32]* @_ZL2dt, i64 0, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = mul nsw i32 %37, %41
  %43 = and i32 %42, -1024
  %44 = load i32, i32* %6, align 4
  %45 = add i32 %44, %43
  store i32 %45, i32* %6, align 4
  %46 = load i32, i32* %6, align 4
  %47 = load i32*, i32** %5, align 8
  %48 = getelementptr inbounds i32, i32* %47, i64 0
  store i32 %46, i32* %48, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(1) i8* @_ZNK5ArrayIhLi0EEixEi(%class.Array.0* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array.0*, align 8
  %4 = alloca i32, align 4
  store %class.Array.0* %0, %class.Array.0** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.0*, %class.Array.0** %3, align 8
  %6 = getelementptr inbounds %class.Array.0, %class.Array.0* %5, i32 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %7, i64 %9
  ret i8* %10
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

; Function Attrs: noinline uwtable
define dso_local i32 @_Z10matchModelR5Mixer(%class.Mixer* dereferenceable(136) %0) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Mixer*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*
  %5 = alloca i32
  store %class.Mixer* %0, %class.Mixer** %2, align 8
  store i32 65534, i32* %3, align 4
  %6 = load atomic i8, i8* bitcast (i64* @_ZGVZ10matchModelR5MixerE1t to i8*) acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %16, !prof !2

8:                                                ; preds = %1
  %9 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ10matchModelR5MixerE1t) #2
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %8
  %12 = load i32, i32* @level, align 4
  %13 = shl i32 65536, %12
  invoke void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* @_ZZ10matchModelR5MixerE1t, i32 %13)
          to label %14 unwind label %45

14:                                               ; preds = %11
  %15 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array*)* @_ZN5ArrayIiLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array* @_ZZ10matchModelR5MixerE1t to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ10matchModelR5MixerE1t) #2
  br label %16

16:                                               ; preds = %14, %8, %1
  %17 = load atomic i8, i8* bitcast (i64* @_ZGVZ10matchModelR5MixerE4scm1 to i8*) acquire, align 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %25, !prof !2

19:                                               ; preds = %16
  %20 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ10matchModelR5MixerE4scm1) #2
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %19
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ10matchModelR5MixerE4scm1, i32 131072)
          to label %23 unwind label %49

23:                                               ; preds = %22
  %24 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ10matchModelR5MixerE4scm1 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ10matchModelR5MixerE4scm1) #2
  br label %25

25:                                               ; preds = %23, %19, %16
  %26 = load i32, i32* @bpos, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %94, label %28

28:                                               ; preds = %25
  %29 = load i32, i32* @_ZZ10matchModelR5MixerE1h, align 4
  %30 = mul nsw i32 %29, 997
  %31 = mul nsw i32 %30, 8
  %32 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %33 = add nsw i32 %31, %32
  %34 = add nsw i32 %33, 1
  %35 = call i32 @_ZNK5ArrayIiLi0EE4sizeEv(%class.Array* @_ZZ10matchModelR5MixerE1t)
  %36 = sub nsw i32 %35, 1
  %37 = and i32 %34, %36
  store i32 %37, i32* @_ZZ10matchModelR5MixerE1h, align 4
  %38 = load i32, i32* @_ZZ10matchModelR5MixerE3len, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %53

40:                                               ; preds = %28
  %41 = load i32, i32* @_ZZ10matchModelR5MixerE3len, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* @_ZZ10matchModelR5MixerE3len, align 4
  %43 = load i32, i32* @_ZZ10matchModelR5MixerE3ptr, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* @_ZZ10matchModelR5MixerE3ptr, align 4
  br label %88

45:                                               ; preds = %11
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %4, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ10matchModelR5MixerE1t) #2
  br label %163

49:                                               ; preds = %22
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %4, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ10matchModelR5MixerE4scm1) #2
  br label %163

53:                                               ; preds = %28
  %54 = load i32, i32* @_ZZ10matchModelR5MixerE1h, align 4
  %55 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ10matchModelR5MixerE1t, i32 %54)
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* @_ZZ10matchModelR5MixerE3ptr, align 4
  %57 = load i32, i32* @_ZZ10matchModelR5MixerE3ptr, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %87

59:                                               ; preds = %53
  %60 = load i32, i32* @pos, align 4
  %61 = load i32, i32* @_ZZ10matchModelR5MixerE3ptr, align 4
  %62 = sub nsw i32 %60, %61
  %63 = call i32 @_ZNK3Buf4sizeEv(%class.Buf* @buf)
  %64 = icmp slt i32 %62, %63
  br i1 %64, label %65, label %87

65:                                               ; preds = %59
  br label %66

66:                                               ; preds = %83, %65
  %67 = load i32, i32* @_ZZ10matchModelR5MixerE3len, align 4
  %68 = add nsw i32 %67, 1
  %69 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %68)
  %70 = load i32, i32* @_ZZ10matchModelR5MixerE3ptr, align 4
  %71 = load i32, i32* @_ZZ10matchModelR5MixerE3len, align 4
  %72 = sub nsw i32 %70, %71
  %73 = sub nsw i32 %72, 1
  %74 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %73)
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = icmp eq i32 %69, %76
  br i1 %77, label %78, label %81

78:                                               ; preds = %66
  %79 = load i32, i32* @_ZZ10matchModelR5MixerE3len, align 4
  %80 = icmp slt i32 %79, 65534
  br label %81

81:                                               ; preds = %78, %66
  %82 = phi i1 [ false, %66 ], [ %80, %78 ]
  br i1 %82, label %83, label %86

83:                                               ; preds = %81
  %84 = load i32, i32* @_ZZ10matchModelR5MixerE3len, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* @_ZZ10matchModelR5MixerE3len, align 4
  br label %66

86:                                               ; preds = %81
  br label %87

87:                                               ; preds = %86, %59, %53
  br label %88

88:                                               ; preds = %87, %40
  %89 = load i32, i32* @pos, align 4
  %90 = load i32, i32* @_ZZ10matchModelR5MixerE1h, align 4
  %91 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ10matchModelR5MixerE1t, i32 %90)
  store i32 %89, i32* %91, align 4
  %92 = load i32, i32* @_ZZ10matchModelR5MixerE3len, align 4
  store i32 %92, i32* @_ZZ10matchModelR5MixerE6result, align 4
  %93 = load i32, i32* @pos, align 4
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ10matchModelR5MixerE4scm1, i32 %93)
  br label %94

94:                                               ; preds = %88, %25
  %95 = load i32, i32* @_ZZ10matchModelR5MixerE3len, align 4
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %97, label %157

97:                                               ; preds = %94
  %98 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %99 = load i32, i32* @_ZZ10matchModelR5MixerE3ptr, align 4
  %100 = sub nsw i32 %99, 1
  %101 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %100)
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = icmp eq i32 %98, %103
  br i1 %104, label %105, label %153

105:                                              ; preds = %97
  %106 = load i32, i32* @c0, align 4
  %107 = load i32, i32* @_ZZ10matchModelR5MixerE3ptr, align 4
  %108 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %107)
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = add nsw i32 %110, 256
  %112 = load i32, i32* @bpos, align 4
  %113 = sub nsw i32 8, %112
  %114 = ashr i32 %111, %113
  %115 = icmp eq i32 %106, %114
  br i1 %115, label %116, label %153

116:                                              ; preds = %105
  %117 = load i32, i32* @_ZZ10matchModelR5MixerE3len, align 4
  %118 = icmp sgt i32 %117, 65534
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  store i32 65534, i32* @_ZZ10matchModelR5MixerE3len, align 4
  br label %120

120:                                              ; preds = %119, %116
  %121 = load i32, i32* @_ZZ10matchModelR5MixerE3ptr, align 4
  %122 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %121)
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = load i32, i32* @bpos, align 4
  %126 = sub nsw i32 7, %125
  %127 = ashr i32 %124, %126
  %128 = and i32 %127, 1
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %130, label %140

130:                                              ; preds = %120
  %131 = load %class.Mixer*, %class.Mixer** %2, align 8
  %132 = load i32, i32* @_ZZ10matchModelR5MixerE3len, align 4
  %133 = trunc i32 %132 to i16
  %134 = call i32 @_ZNK4IlogclEt(%class.Buf* @ilog, i16 zeroext %133)
  %135 = shl i32 %134, 2
  call void @_ZN5Mixer3addEi(%class.Mixer* %131, i32 %135)
  %136 = load %class.Mixer*, %class.Mixer** %2, align 8
  %137 = load i32, i32* @_ZZ10matchModelR5MixerE3len, align 4
  %138 = call i32 @_Z3minii(i32 %137, i32 32)
  %139 = shl i32 %138, 6
  call void @_ZN5Mixer3addEi(%class.Mixer* %136, i32 %139)
  br label %152

140:                                              ; preds = %120
  %141 = load %class.Mixer*, %class.Mixer** %2, align 8
  %142 = load i32, i32* @_ZZ10matchModelR5MixerE3len, align 4
  %143 = trunc i32 %142 to i16
  %144 = call i32 @_ZNK4IlogclEt(%class.Buf* @ilog, i16 zeroext %143)
  %145 = shl i32 %144, 2
  %146 = sub nsw i32 0, %145
  call void @_ZN5Mixer3addEi(%class.Mixer* %141, i32 %146)
  %147 = load %class.Mixer*, %class.Mixer** %2, align 8
  %148 = load i32, i32* @_ZZ10matchModelR5MixerE3len, align 4
  %149 = call i32 @_Z3minii(i32 %148, i32 32)
  %150 = shl i32 %149, 6
  %151 = sub nsw i32 0, %150
  call void @_ZN5Mixer3addEi(%class.Mixer* %147, i32 %151)
  br label %152

152:                                              ; preds = %140, %130
  br label %156

153:                                              ; preds = %105, %97
  store i32 0, i32* @_ZZ10matchModelR5MixerE3len, align 4
  %154 = load %class.Mixer*, %class.Mixer** %2, align 8
  call void @_ZN5Mixer3addEi(%class.Mixer* %154, i32 0)
  %155 = load %class.Mixer*, %class.Mixer** %2, align 8
  call void @_ZN5Mixer3addEi(%class.Mixer* %155, i32 0)
  br label %156

156:                                              ; preds = %153, %152
  br label %160

157:                                              ; preds = %94
  %158 = load %class.Mixer*, %class.Mixer** %2, align 8
  call void @_ZN5Mixer3addEi(%class.Mixer* %158, i32 0)
  %159 = load %class.Mixer*, %class.Mixer** %2, align 8
  call void @_ZN5Mixer3addEi(%class.Mixer* %159, i32 0)
  br label %160

160:                                              ; preds = %157, %156
  %161 = load %class.Mixer*, %class.Mixer** %2, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ10matchModelR5MixerE4scm1, %class.Mixer* dereferenceable(136) %161, i32 7)
  %162 = load i32, i32* @_ZZ10matchModelR5MixerE6result, align 4
  ret i32 %162

163:                                              ; preds = %49, %45
  %164 = load i8*, i8** %4, align 8
  %165 = load i32, i32* %5, align 4
  %166 = insertvalue { i8*, i32 } undef, i8* %164, 0
  %167 = insertvalue { i8*, i32 } %166, i32 %165, 1
  resume { i8*, i32 } %167
}

; Function Attrs: nounwind
declare dso_local i32 @__cxa_guard_acquire(i64*) #2

; Function Attrs: nounwind
declare dso_local void @__cxa_guard_release(i64*) #2

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* %0, i32 %1) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.SmallStationaryContextMap*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*
  %7 = alloca i32
  store %class.SmallStationaryContextMap* %0, %class.SmallStationaryContextMap** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load %class.SmallStationaryContextMap*, %class.SmallStationaryContextMap** %3, align 8
  %9 = getelementptr inbounds %class.SmallStationaryContextMap, %class.SmallStationaryContextMap* %8, i32 0, i32 0
  %10 = load i32, i32* %4, align 4
  %11 = sdiv i32 %10, 2
  call void @_ZN5ArrayItLi0EEC2Ei(%class.Array.1* %9, i32 %11)
  %12 = getelementptr inbounds %class.SmallStationaryContextMap, %class.SmallStationaryContextMap* %8, i32 0, i32 1
  store i32 0, i32* %12, align 8
  store i32 0, i32* %5, align 4
  br label %13

13:                                               ; preds = %24, %2
  %14 = load i32, i32* %5, align 4
  %15 = getelementptr inbounds %class.SmallStationaryContextMap, %class.SmallStationaryContextMap* %8, i32 0, i32 0
  %16 = invoke i32 @_ZNK5ArrayItLi0EE4sizeEv(%class.Array.1* %15)
          to label %17 unwind label %27

17:                                               ; preds = %13
  %18 = icmp slt i32 %14, %16
  br i1 %18, label %19, label %31

19:                                               ; preds = %17
  %20 = getelementptr inbounds %class.SmallStationaryContextMap, %class.SmallStationaryContextMap* %8, i32 0, i32 0
  %21 = load i32, i32* %5, align 4
  %22 = invoke dereferenceable(2) i16* @_ZN5ArrayItLi0EEixEi(%class.Array.1* %20, i32 %21)
          to label %23 unwind label %27

23:                                               ; preds = %19
  store i16 -32768, i16* %22, align 2
  br label %24

24:                                               ; preds = %23
  %25 = load i32, i32* %5, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %5, align 4
  br label %13

27:                                               ; preds = %31, %19, %13
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  store i8* %29, i8** %6, align 8
  %30 = extractvalue { i8*, i32 } %28, 1
  store i32 %30, i32* %7, align 4
  call void @_ZN5ArrayItLi0EED2Ev(%class.Array.1* %9) #2
  br label %36

31:                                               ; preds = %17
  %32 = getelementptr inbounds %class.SmallStationaryContextMap, %class.SmallStationaryContextMap* %8, i32 0, i32 0
  %33 = invoke dereferenceable(2) i16* @_ZN5ArrayItLi0EEixEi(%class.Array.1* %32, i32 0)
          to label %34 unwind label %27

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.SmallStationaryContextMap, %class.SmallStationaryContextMap* %8, i32 0, i32 2
  store i16* %33, i16** %35, align 8
  ret void

36:                                               ; preds = %27
  %37 = load i8*, i8** %6, align 8
  %38 = load i32, i32* %7, align 4
  %39 = insertvalue { i8*, i32 } undef, i8* %37, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN25SmallStationaryContextMapD2Ev(%class.SmallStationaryContextMap* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.SmallStationaryContextMap*, align 8
  store %class.SmallStationaryContextMap* %0, %class.SmallStationaryContextMap** %2, align 8
  %3 = load %class.SmallStationaryContextMap*, %class.SmallStationaryContextMap** %2, align 8
  %4 = getelementptr inbounds %class.SmallStationaryContextMap, %class.SmallStationaryContextMap* %3, i32 0, i32 0
  call void @_ZN5ArrayItLi0EED2Ev(%class.Array.1* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_ZNK3BufclEi(%class.Buf* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Buf*, align 8
  %4 = alloca i32, align 4
  store %class.Buf* %0, %class.Buf** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Buf*, %class.Buf** %3, align 8
  %6 = getelementptr inbounds %class.Buf, %class.Buf* %5, i32 0, i32 0
  %7 = load i32, i32* @pos, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub nsw i32 %7, %8
  %10 = getelementptr inbounds %class.Buf, %class.Buf* %5, i32 0, i32 0
  %11 = call i32 @_ZNK5ArrayIhLi0EE4sizeEv(%class.Array.0* %10)
  %12 = sub nsw i32 %11, 1
  %13 = and i32 %9, %12
  %14 = call dereferenceable(1) i8* @_ZNK5ArrayIhLi0EEixEi(%class.Array.0* %6, i32 %13)
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  ret i32 %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK5ArrayIiLi0EE4sizeEv(%class.Array* %0) #1 comdat align 2 {
  %2 = alloca %class.Array*, align 8
  store %class.Array* %0, %class.Array** %2, align 8
  %3 = load %class.Array*, %class.Array** %2, align 8
  %4 = getelementptr inbounds %class.Array, %class.Array* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: nounwind
declare dso_local void @__cxa_guard_abort(i64*) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK3Buf4sizeEv(%class.Buf* %0) #1 comdat align 2 {
  %2 = alloca %class.Buf*, align 8
  store %class.Buf* %0, %class.Buf** %2, align 8
  %3 = load %class.Buf*, %class.Buf** %2, align 8
  %4 = getelementptr inbounds %class.Buf, %class.Buf* %3, i32 0, i32 0
  %5 = call i32 @_ZNK5ArrayIhLi0EE4sizeEv(%class.Array.0* %4)
  ret i32 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Buf*, align 8
  %4 = alloca i32, align 4
  store %class.Buf* %0, %class.Buf** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Buf*, %class.Buf** %3, align 8
  %6 = getelementptr inbounds %class.Buf, %class.Buf* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.Buf, %class.Buf* %5, i32 0, i32 0
  %9 = call i32 @_ZNK5ArrayIhLi0EE4sizeEv(%class.Array.0* %8)
  %10 = sub nsw i32 %9, 1
  %11 = and i32 %7, %10
  %12 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %6, i32 %11)
  ret i8* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.SmallStationaryContextMap*, align 8
  %4 = alloca i32, align 4
  store %class.SmallStationaryContextMap* %0, %class.SmallStationaryContextMap** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.SmallStationaryContextMap*, %class.SmallStationaryContextMap** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = mul i32 %6, 256
  %8 = getelementptr inbounds %class.SmallStationaryContextMap, %class.SmallStationaryContextMap* %5, i32 0, i32 0
  %9 = call i32 @_ZNK5ArrayItLi0EE4sizeEv(%class.Array.1* %8)
  %10 = sub nsw i32 %9, 256
  %11 = and i32 %7, %10
  %12 = getelementptr inbounds %class.SmallStationaryContextMap, %class.SmallStationaryContextMap* %5, i32 0, i32 1
  store i32 %11, i32* %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_Z3minii(i32 %0, i32 %1) #1 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %5, %6
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = load i32, i32* %3, align 4
  br label %12

10:                                               ; preds = %2
  %11 = load i32, i32* %4, align 4
  br label %12

12:                                               ; preds = %10, %8
  %13 = phi i32 [ %9, %8 ], [ %11, %10 ]
  ret i32 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* %0, %class.Mixer* dereferenceable(136) %1, i32 %2) #0 comdat align 2 {
  %4 = alloca %class.SmallStationaryContextMap*, align 8
  %5 = alloca %class.Mixer*, align 8
  %6 = alloca i32, align 4
  store %class.SmallStationaryContextMap* %0, %class.SmallStationaryContextMap** %4, align 8
  store %class.Mixer* %1, %class.Mixer** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %class.SmallStationaryContextMap*, %class.SmallStationaryContextMap** %4, align 8
  %8 = load i32, i32* @y, align 4
  %9 = shl i32 %8, 16
  %10 = getelementptr inbounds %class.SmallStationaryContextMap, %class.SmallStationaryContextMap* %7, i32 0, i32 2
  %11 = load i16*, i16** %10, align 8
  %12 = load i16, i16* %11, align 2
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %9, %13
  %15 = load i32, i32* %6, align 4
  %16 = sub nsw i32 %15, 1
  %17 = shl i32 1, %16
  %18 = add nsw i32 %14, %17
  %19 = load i32, i32* %6, align 4
  %20 = ashr i32 %18, %19
  %21 = getelementptr inbounds %class.SmallStationaryContextMap, %class.SmallStationaryContextMap* %7, i32 0, i32 2
  %22 = load i16*, i16** %21, align 8
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = add nsw i32 %24, %20
  %26 = trunc i32 %25 to i16
  store i16 %26, i16* %22, align 2
  %27 = getelementptr inbounds %class.SmallStationaryContextMap, %class.SmallStationaryContextMap* %7, i32 0, i32 0
  %28 = getelementptr inbounds %class.SmallStationaryContextMap, %class.SmallStationaryContextMap* %7, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = load i32, i32* @c0, align 4
  %31 = add nsw i32 %29, %30
  %32 = call dereferenceable(2) i16* @_ZN5ArrayItLi0EEixEi(%class.Array.1* %27, i32 %31)
  %33 = getelementptr inbounds %class.SmallStationaryContextMap, %class.SmallStationaryContextMap* %7, i32 0, i32 2
  store i16* %32, i16** %33, align 8
  %34 = load %class.Mixer*, %class.Mixer** %5, align 8
  %35 = getelementptr inbounds %class.SmallStationaryContextMap, %class.SmallStationaryContextMap* %7, i32 0, i32 2
  %36 = load i16*, i16** %35, align 8
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = ashr i32 %38, 4
  %40 = call i32 @_ZNK7StretchclEi(%class.Stretch* @stretch, i32 %39)
  call void @_ZN5Mixer3addEi(%class.Mixer* %34, i32 %40)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK5ArrayItLi0EE4sizeEv(%class.Array.1* %0) #1 comdat align 2 {
  %2 = alloca %class.Array.1*, align 8
  store %class.Array.1* %0, %class.Array.1** %2, align 8
  %3 = load %class.Array.1*, %class.Array.1** %2, align 8
  %4 = getelementptr inbounds %class.Array.1, %class.Array.1* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK5ArrayIhLi0EE4sizeEv(%class.Array.0* %0) #1 comdat align 2 {
  %2 = alloca %class.Array.0*, align 8
  store %class.Array.0* %0, %class.Array.0** %2, align 8
  %3 = load %class.Array.0*, %class.Array.0** %2, align 8
  %4 = getelementptr inbounds %class.Array.0, %class.Array.0* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline uwtable
define dso_local void @_Z8picModelR5Mixer(%class.Mixer* dereferenceable(136) %0) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Mixer*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %2, align 8
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZ8picModelR5MixerE1t to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %15, !prof !2

9:                                                ; preds = %1
  %10 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8picModelR5MixerE1t) #2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %9
  invoke void @_ZN5ArrayIhLi0EEC2Ei(%class.Array.0* @_ZZ8picModelR5MixerE1t, i32 66048)
          to label %13 unwind label %54

13:                                               ; preds = %12
  %14 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array.0*)* @_ZN5ArrayIhLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array.0* @_ZZ8picModelR5MixerE1t to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8picModelR5MixerE1t) #2
  br label %15

15:                                               ; preds = %13, %9, %1
  store i32 3, i32* %5, align 4
  %16 = load atomic i8, i8* bitcast (i64* @_ZGVZ8picModelR5MixerE2sm to i8*) acquire, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %29, !prof !2

18:                                               ; preds = %15
  %19 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8picModelR5MixerE2sm) #2
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %18
  br label %22

22:                                               ; preds = %24, %21
  %23 = phi %class.StateMap* [ getelementptr inbounds ([3 x %class.StateMap], [3 x %class.StateMap]* @_ZZ8picModelR5MixerE2sm, i32 0, i32 0), %21 ], [ %25, %24 ]
  invoke void @_ZN8StateMapC1Ei(%class.StateMap* %23, i32 256)
          to label %24 unwind label %58

24:                                               ; preds = %22
  %25 = getelementptr inbounds %class.StateMap, %class.StateMap* %23, i64 1
  %26 = icmp eq %class.StateMap* %25, getelementptr inbounds (%class.StateMap, %class.StateMap* getelementptr inbounds ([3 x %class.StateMap], [3 x %class.StateMap]* @_ZZ8picModelR5MixerE2sm, i32 0, i32 0), i64 3)
  br i1 %26, label %27, label %22

27:                                               ; preds = %24
  %28 = call i32 @__cxa_atexit(void (i8*)* @__cxx_global_array_dtor, i8* null, i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8picModelR5MixerE2sm) #2
  br label %29

29:                                               ; preds = %27, %18, %15
  store i32 0, i32* %6, align 4
  br label %30

30:                                               ; preds = %51, %29
  %31 = load i32, i32* %6, align 4
  %32 = icmp slt i32 %31, 3
  br i1 %32, label %33, label %68

33:                                               ; preds = %30
  %34 = load i32, i32* %6, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [3 x i32], [3 x i32]* @_ZZ8picModelR5MixerE3cxt, i64 0, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ8picModelR5MixerE1t, i32 %37)
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  %41 = getelementptr inbounds [256 x [4 x i8]], [256 x [4 x i8]]* @_ZL11State_table, i64 0, i64 %40
  %42 = load i32, i32* @y, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [4 x i8], [4 x i8]* %41, i64 0, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [3 x i32], [3 x i32]* @_ZZ8picModelR5MixerE3cxt, i64 0, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ8picModelR5MixerE1t, i32 %49)
  store i8 %45, i8* %50, align 1
  br label %51

51:                                               ; preds = %33
  %52 = load i32, i32* %6, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %6, align 4
  br label %30

54:                                               ; preds = %12
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %3, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8picModelR5MixerE1t) #2
  br label %161

58:                                               ; preds = %22
  %59 = landingpad { i8*, i32 }
          cleanup
  %60 = extractvalue { i8*, i32 } %59, 0
  store i8* %60, i8** %3, align 8
  %61 = extractvalue { i8*, i32 } %59, 1
  store i32 %61, i32* %4, align 4
  %62 = icmp eq %class.StateMap* getelementptr inbounds ([3 x %class.StateMap], [3 x %class.StateMap]* @_ZZ8picModelR5MixerE2sm, i32 0, i32 0), %23
  br i1 %62, label %67, label %63

63:                                               ; preds = %63, %58
  %64 = phi %class.StateMap* [ %23, %58 ], [ %65, %63 ]
  %65 = getelementptr inbounds %class.StateMap, %class.StateMap* %64, i64 -1
  call void @_ZN8StateMapD2Ev(%class.StateMap* %65) #2
  %66 = icmp eq %class.StateMap* %65, getelementptr inbounds ([3 x %class.StateMap], [3 x %class.StateMap]* @_ZZ8picModelR5MixerE2sm, i32 0, i32 0)
  br i1 %66, label %67, label %63

67:                                               ; preds = %63, %58
  call void @__cxa_guard_abort(i64* @_ZGVZ8picModelR5MixerE2sm) #2
  br label %161

68:                                               ; preds = %30
  %69 = load i32, i32* @_ZZ8picModelR5MixerE2r0, align 4
  %70 = load i32, i32* @y, align 4
  %71 = add i32 %69, %70
  %72 = load i32, i32* @_ZZ8picModelR5MixerE2r0, align 4
  %73 = add i32 %72, %71
  store i32 %73, i32* @_ZZ8picModelR5MixerE2r0, align 4
  %74 = load i32, i32* @_ZZ8picModelR5MixerE2r1, align 4
  %75 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 215)
  %76 = load i32, i32* @bpos, align 4
  %77 = sub nsw i32 7, %76
  %78 = ashr i32 %75, %77
  %79 = and i32 %78, 1
  %80 = add i32 %74, %79
  %81 = load i32, i32* @_ZZ8picModelR5MixerE2r1, align 4
  %82 = add i32 %81, %80
  store i32 %82, i32* @_ZZ8picModelR5MixerE2r1, align 4
  %83 = load i32, i32* @_ZZ8picModelR5MixerE2r2, align 4
  %84 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 431)
  %85 = load i32, i32* @bpos, align 4
  %86 = sub nsw i32 7, %85
  %87 = ashr i32 %84, %86
  %88 = and i32 %87, 1
  %89 = add i32 %83, %88
  %90 = load i32, i32* @_ZZ8picModelR5MixerE2r2, align 4
  %91 = add i32 %90, %89
  store i32 %91, i32* @_ZZ8picModelR5MixerE2r2, align 4
  %92 = load i32, i32* @_ZZ8picModelR5MixerE2r3, align 4
  %93 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 647)
  %94 = load i32, i32* @bpos, align 4
  %95 = sub nsw i32 7, %94
  %96 = ashr i32 %93, %95
  %97 = and i32 %96, 1
  %98 = add i32 %92, %97
  %99 = load i32, i32* @_ZZ8picModelR5MixerE2r3, align 4
  %100 = add i32 %99, %98
  store i32 %100, i32* @_ZZ8picModelR5MixerE2r3, align 4
  %101 = load i32, i32* @_ZZ8picModelR5MixerE2r0, align 4
  %102 = and i32 %101, 7
  %103 = load i32, i32* @_ZZ8picModelR5MixerE2r1, align 4
  %104 = lshr i32 %103, 4
  %105 = and i32 %104, 56
  %106 = or i32 %102, %105
  %107 = load i32, i32* @_ZZ8picModelR5MixerE2r2, align 4
  %108 = lshr i32 %107, 3
  %109 = and i32 %108, 192
  %110 = or i32 %106, %109
  store i32 %110, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZ8picModelR5MixerE3cxt, i64 0, i64 0), align 4
  %111 = load i32, i32* @_ZZ8picModelR5MixerE2r0, align 4
  %112 = and i32 %111, 1
  %113 = load i32, i32* @_ZZ8picModelR5MixerE2r1, align 4
  %114 = lshr i32 %113, 4
  %115 = and i32 %114, 62
  %116 = or i32 %112, %115
  %117 = load i32, i32* @_ZZ8picModelR5MixerE2r2, align 4
  %118 = lshr i32 %117, 2
  %119 = and i32 %118, 64
  %120 = or i32 %116, %119
  %121 = load i32, i32* @_ZZ8picModelR5MixerE2r3, align 4
  %122 = lshr i32 %121, 1
  %123 = and i32 %122, 128
  %124 = or i32 %120, %123
  %125 = add i32 256, %124
  store i32 %125, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZ8picModelR5MixerE3cxt, i64 0, i64 1), align 4
  %126 = load i32, i32* @_ZZ8picModelR5MixerE2r0, align 4
  %127 = and i32 %126, 63
  %128 = load i32, i32* @_ZZ8picModelR5MixerE2r1, align 4
  %129 = and i32 %128, 16382
  %130 = xor i32 %127, %129
  %131 = load i32, i32* @_ZZ8picModelR5MixerE2r2, align 4
  %132 = shl i32 %131, 2
  %133 = and i32 %132, 32512
  %134 = xor i32 %130, %133
  %135 = load i32, i32* @_ZZ8picModelR5MixerE2r3, align 4
  %136 = shl i32 %135, 5
  %137 = and i32 %136, 63488
  %138 = xor i32 %134, %137
  %139 = add i32 512, %138
  store i32 %139, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZ8picModelR5MixerE3cxt, i64 0, i64 2), align 4
  store i32 0, i32* %6, align 4
  br label %140

140:                                              ; preds = %157, %68
  %141 = load i32, i32* %6, align 4
  %142 = icmp slt i32 %141, 3
  br i1 %142, label %143, label %160

143:                                              ; preds = %140
  %144 = load %class.Mixer*, %class.Mixer** %2, align 8
  %145 = load i32, i32* %6, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds [3 x %class.StateMap], [3 x %class.StateMap]* @_ZZ8picModelR5MixerE2sm, i64 0, i64 %146
  %148 = load i32, i32* %6, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [3 x i32], [3 x i32]* @_ZZ8picModelR5MixerE3cxt, i64 0, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ8picModelR5MixerE1t, i32 %151)
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i32
  %155 = call i32 @_ZN8StateMap1pEii(%class.StateMap* %147, i32 %154, i32 1023)
  %156 = call i32 @_ZNK7StretchclEi(%class.Stretch* @stretch, i32 %155)
  call void @_ZN5Mixer3addEi(%class.Mixer* %144, i32 %156)
  br label %157

157:                                              ; preds = %143
  %158 = load i32, i32* %6, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %6, align 4
  br label %140

160:                                              ; preds = %140
  ret void

161:                                              ; preds = %67, %54
  %162 = load i8*, i8** %3, align 8
  %163 = load i32, i32* %4, align 4
  %164 = insertvalue { i8*, i32 } undef, i8* %162, 0
  %165 = insertvalue { i8*, i32 } %164, i32 %163, 1
  resume { i8*, i32 } %165
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_array_dtor(i8* %0) #0 section ".text.startup" {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  br label %3

3:                                                ; preds = %3, %1
  %4 = phi %class.StateMap* [ getelementptr inbounds (%class.StateMap, %class.StateMap* getelementptr inbounds ([3 x %class.StateMap], [3 x %class.StateMap]* @_ZZ8picModelR5MixerE2sm, i32 0, i32 0), i64 3), %1 ], [ %5, %3 ]
  %5 = getelementptr inbounds %class.StateMap, %class.StateMap* %4, i64 -1
  call void @_ZN8StateMapD2Ev(%class.StateMap* %5) #2
  %6 = icmp eq %class.StateMap* %5, getelementptr inbounds ([3 x %class.StateMap], [3 x %class.StateMap]* @_ZZ8picModelR5MixerE2sm, i32 0, i32 0)
  br i1 %6, label %7, label %3

7:                                                ; preds = %3
  ret void
}

; Function Attrs: noinline uwtable
define dso_local void @_Z9wordModelR5Mixer(%class.Mixer* dereferenceable(136) %0) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Mixer*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %2, align 8
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZ9wordModelR5MixerE2cm to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %20, !prof !2

11:                                               ; preds = %1
  %12 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9wordModelR5MixerE2cm) #2
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %11
  %15 = load i32, i32* @level, align 4
  %16 = shl i32 65536, %15
  %17 = mul nsw i32 %16, 16
  invoke void @_ZN10ContextMapC1Eii(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %17, i32 20)
          to label %18 unwind label %34

18:                                               ; preds = %14
  %19 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.ContextMap*)* @_ZN10ContextMapD1Ev to void (i8*)*), i8* bitcast (%class.ContextMap* @_ZZ9wordModelR5MixerE2cm to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9wordModelR5MixerE2cm) #2
  br label %20

20:                                               ; preds = %18, %11, %1
  %21 = load i32, i32* @bpos, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %166

23:                                               ; preds = %20
  %24 = load i32, i32* @c4, align 4
  %25 = and i32 %24, 255
  store i32 %25, i32* %5, align 4
  %26 = load i32, i32* %5, align 4
  %27 = icmp sge i32 %26, 65
  br i1 %27, label %28, label %38

28:                                               ; preds = %23
  %29 = load i32, i32* %5, align 4
  %30 = icmp sle i32 %29, 90
  br i1 %30, label %31, label %38

31:                                               ; preds = %28
  %32 = load i32, i32* %5, align 4
  %33 = add nsw i32 %32, 32
  store i32 %33, i32* %5, align 4
  br label %38

34:                                               ; preds = %14
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  store i8* %36, i8** %3, align 8
  %37 = extractvalue { i8*, i32 } %35, 1
  store i32 %37, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9wordModelR5MixerE2cm) #2
  br label %169

38:                                               ; preds = %31, %28, %23
  %39 = load i32, i32* %5, align 4
  %40 = icmp sge i32 %39, 97
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = load i32, i32* %5, align 4
  %43 = icmp sle i32 %42, 122
  br i1 %43, label %47, label %44

44:                                               ; preds = %41, %38
  %45 = load i32, i32* %5, align 4
  %46 = icmp sge i32 %45, 128
  br i1 %46, label %47, label %58

47:                                               ; preds = %44, %41
  %48 = load i32, i32* @_ZZ9wordModelR5MixerE5word0, align 4
  %49 = mul i32 %48, 263
  %50 = mul i32 %49, 32
  %51 = load i32, i32* %5, align 4
  %52 = add i32 %50, %51
  store i32 %52, i32* @_ZZ9wordModelR5MixerE5word0, align 4
  %53 = load i32, i32* @_ZZ9wordModelR5MixerE5text0, align 4
  %54 = mul i32 %53, 997
  %55 = mul i32 %54, 16
  %56 = load i32, i32* %5, align 4
  %57 = add i32 %55, %56
  store i32 %57, i32* @_ZZ9wordModelR5MixerE5text0, align 4
  br label %73

58:                                               ; preds = %44
  %59 = load i32, i32* @_ZZ9wordModelR5MixerE5word0, align 4
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %72

61:                                               ; preds = %58
  %62 = load i32, i32* @_ZZ9wordModelR5MixerE5word4, align 4
  %63 = mul i32 %62, 23
  store i32 %63, i32* @_ZZ9wordModelR5MixerE5word5, align 4
  %64 = load i32, i32* @_ZZ9wordModelR5MixerE5word3, align 4
  %65 = mul i32 %64, 19
  store i32 %65, i32* @_ZZ9wordModelR5MixerE5word4, align 4
  %66 = load i32, i32* @_ZZ9wordModelR5MixerE5word2, align 4
  %67 = mul i32 %66, 17
  store i32 %67, i32* @_ZZ9wordModelR5MixerE5word3, align 4
  %68 = load i32, i32* @_ZZ9wordModelR5MixerE5word1, align 4
  %69 = mul i32 %68, 13
  store i32 %69, i32* @_ZZ9wordModelR5MixerE5word2, align 4
  %70 = load i32, i32* @_ZZ9wordModelR5MixerE5word0, align 4
  %71 = mul i32 %70, 11
  store i32 %71, i32* @_ZZ9wordModelR5MixerE5word1, align 4
  store i32 0, i32* @_ZZ9wordModelR5MixerE5word0, align 4
  br label %72

72:                                               ; preds = %61, %58
  br label %73

73:                                               ; preds = %72, %47
  %74 = load i32, i32* %5, align 4
  %75 = icmp eq i32 %74, 10
  br i1 %75, label %76, label %80

76:                                               ; preds = %73
  %77 = load i32, i32* @_ZZ9wordModelR5MixerE2nl, align 4
  store i32 %77, i32* @_ZZ9wordModelR5MixerE3nl1, align 4
  %78 = load i32, i32* @pos, align 4
  %79 = sub nsw i32 %78, 1
  store i32 %79, i32* @_ZZ9wordModelR5MixerE2nl, align 4
  br label %80

80:                                               ; preds = %76, %73
  %81 = load i32, i32* @pos, align 4
  %82 = load i32, i32* @_ZZ9wordModelR5MixerE2nl, align 4
  %83 = sub nsw i32 %81, %82
  %84 = call i32 @_Z3minii(i32 255, i32 %83)
  store i32 %84, i32* %6, align 4
  %85 = load i32, i32* @_ZZ9wordModelR5MixerE3nl1, align 4
  %86 = load i32, i32* %6, align 4
  %87 = add nsw i32 %85, %86
  %88 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %87)
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  store i32 %90, i32* %7, align 4
  %91 = load i32, i32* @_ZZ9wordModelR5MixerE5word0, align 4
  %92 = mul i32 %91, 271
  %93 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %94 = add i32 %92, %93
  store i32 %94, i32* %8, align 4
  %95 = load i32, i32* %8, align 4
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %95, i32 -1)
  %96 = load i32, i32* @_ZZ9wordModelR5MixerE5word0, align 4
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %96, i32 -1)
  %97 = load i32, i32* %8, align 4
  %98 = load i32, i32* @_ZZ9wordModelR5MixerE5word1, align 4
  %99 = add i32 %97, %98
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %99, i32 -1)
  %100 = load i32, i32* @_ZZ9wordModelR5MixerE5word0, align 4
  %101 = load i32, i32* @_ZZ9wordModelR5MixerE5word1, align 4
  %102 = mul i32 %101, 31
  %103 = add i32 %100, %102
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %103, i32 -1)
  %104 = load i32, i32* %8, align 4
  %105 = load i32, i32* @_ZZ9wordModelR5MixerE5word1, align 4
  %106 = add i32 %104, %105
  %107 = load i32, i32* @_ZZ9wordModelR5MixerE5word2, align 4
  %108 = mul i32 %107, 29
  %109 = add i32 %106, %108
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %109, i32 -1)
  %110 = load i32, i32* @_ZZ9wordModelR5MixerE5text0, align 4
  %111 = and i32 %110, 16777215
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %111, i32 -1)
  %112 = load i32, i32* @_ZZ9wordModelR5MixerE5text0, align 4
  %113 = and i32 %112, 1048575
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %113, i32 -1)
  %114 = load i32, i32* %8, align 4
  %115 = load i32, i32* @_ZZ9wordModelR5MixerE5word2, align 4
  %116 = add i32 %114, %115
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %116, i32 -1)
  %117 = load i32, i32* %8, align 4
  %118 = load i32, i32* @_ZZ9wordModelR5MixerE5word3, align 4
  %119 = add i32 %117, %118
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %119, i32 -1)
  %120 = load i32, i32* %8, align 4
  %121 = load i32, i32* @_ZZ9wordModelR5MixerE5word4, align 4
  %122 = add i32 %120, %121
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %122, i32 -1)
  %123 = load i32, i32* %8, align 4
  %124 = load i32, i32* @_ZZ9wordModelR5MixerE5word5, align 4
  %125 = add i32 %123, %124
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %125, i32 -1)
  %126 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %127 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %128 = shl i32 %127, 8
  %129 = or i32 %126, %128
  %130 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 5)
  %131 = shl i32 %130, 16
  %132 = or i32 %129, %131
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %132, i32 -1)
  %133 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %134 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 4)
  %135 = shl i32 %134, 8
  %136 = or i32 %133, %135
  %137 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 6)
  %138 = shl i32 %137, 16
  %139 = or i32 %136, %138
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %139, i32 -1)
  %140 = load i32, i32* %8, align 4
  %141 = load i32, i32* @_ZZ9wordModelR5MixerE5word1, align 4
  %142 = add i32 %140, %141
  %143 = load i32, i32* @_ZZ9wordModelR5MixerE5word3, align 4
  %144 = add i32 %142, %143
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %144, i32 -1)
  %145 = load i32, i32* %8, align 4
  %146 = load i32, i32* @_ZZ9wordModelR5MixerE5word2, align 4
  %147 = add i32 %145, %146
  %148 = load i32, i32* @_ZZ9wordModelR5MixerE5word3, align 4
  %149 = add i32 %147, %148
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %149, i32 -1)
  %150 = load i32, i32* %6, align 4
  %151 = shl i32 %150, 16
  %152 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %153 = shl i32 %152, 8
  %154 = or i32 %151, %153
  %155 = load i32, i32* %7, align 4
  %156 = or i32 %154, %155
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %156, i32 -1)
  %157 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %158 = shl i32 %157, 8
  %159 = load i32, i32* %7, align 4
  %160 = or i32 %158, %159
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %160, i32 -1)
  %161 = load i32, i32* %6, align 4
  %162 = shl i32 %161, 8
  %163 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %164 = or i32 %162, %163
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %164, i32 -1)
  %165 = load i32, i32* %6, align 4
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, i32 %165, i32 -1)
  br label %166

166:                                              ; preds = %80, %20
  %167 = load %class.Mixer*, %class.Mixer** %2, align 8
  %168 = call i32 @_ZN10ContextMap3mixER5Mixer(%class.ContextMap* @_ZZ9wordModelR5MixerE2cm, %class.Mixer* dereferenceable(136) %167)
  ret void

169:                                              ; preds = %34
  %170 = load i8*, i8** %3, align 8
  %171 = load i32, i32* %4, align 4
  %172 = insertvalue { i8*, i32 } undef, i8* %170, 0
  %173 = insertvalue { i8*, i32 } %172, i32 %171, 1
  resume { i8*, i32 } %173
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN10ContextMap3setEji(%class.ContextMap* %0, i32 %1, i32 %2) #0 comdat align 2 {
  %4 = alloca %class.ContextMap*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %class.ContextMap* %0, %class.ContextMap** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load %class.ContextMap*, %class.ContextMap** %4, align 8
  %9 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %8, i32 0, i32 8
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  store i32 %10, i32* %7, align 4
  %12 = load i32, i32* %6, align 4
  %13 = load i32, i32* %7, align 4
  %14 = and i32 %13, %12
  store i32 %14, i32* %7, align 4
  %15 = load i32, i32* %5, align 4
  %16 = mul i32 %15, 987654323
  %17 = load i32, i32* %7, align 4
  %18 = add i32 %16, %17
  store i32 %18, i32* %5, align 4
  %19 = load i32, i32* %5, align 4
  %20 = shl i32 %19, 16
  %21 = load i32, i32* %5, align 4
  %22 = lshr i32 %21, 16
  %23 = or i32 %20, %22
  store i32 %23, i32* %5, align 4
  %24 = load i32, i32* %5, align 4
  %25 = mul i32 %24, 123456791
  %26 = load i32, i32* %7, align 4
  %27 = add i32 %25, %26
  %28 = getelementptr inbounds %class.ContextMap, %class.ContextMap* %8, i32 0, i32 5
  %29 = load i32, i32* %7, align 4
  %30 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %28, i32 %29)
  store i32 %27, i32* %30, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_ZN10ContextMap3mixER5Mixer(%class.ContextMap* %0, %class.Mixer* dereferenceable(136) %1) #0 comdat align 2 {
  %3 = alloca %class.ContextMap*, align 8
  %4 = alloca %class.Mixer*, align 8
  store %class.ContextMap* %0, %class.ContextMap** %3, align 8
  store %class.Mixer* %1, %class.Mixer** %4, align 8
  %5 = load %class.ContextMap*, %class.ContextMap** %3, align 8
  %6 = load %class.Mixer*, %class.Mixer** %4, align 8
  %7 = load i32, i32* @c0, align 4
  %8 = load i32, i32* @bpos, align 4
  %9 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %10 = load i32, i32* @y, align 4
  %11 = call i32 @_ZN10ContextMap4mix1ER5Mixeriiii(%class.ContextMap* %5, %class.Mixer* dereferenceable(136) %6, i32 %7, i32 %8, i32 %9, i32 %10)
  ret i32 %11
}

; Function Attrs: noinline uwtable
define dso_local void @_Z11recordModelR5Mixer(%class.Mixer* dereferenceable(136) %0) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Mixer*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %2, align 8
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZ11recordModelR5MixerE2cm to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %18, !prof !2

12:                                               ; preds = %1
  %13 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ11recordModelR5MixerE2cm) #2
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  invoke void @_ZN10ContextMapC1Eii(%class.ContextMap* @_ZZ11recordModelR5MixerE2cm, i32 32768, i32 3)
          to label %16 unwind label %125

16:                                               ; preds = %15
  %17 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.ContextMap*)* @_ZN10ContextMapD1Ev to void (i8*)*), i8* bitcast (%class.ContextMap* @_ZZ11recordModelR5MixerE2cm to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ11recordModelR5MixerE2cm) #2
  br label %18

18:                                               ; preds = %16, %12, %1
  %19 = load atomic i8, i8* bitcast (i64* @_ZGVZ11recordModelR5MixerE2cn to i8*) acquire, align 8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %27, !prof !2

21:                                               ; preds = %18
  %22 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ11recordModelR5MixerE2cn) #2
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  invoke void @_ZN10ContextMapC1Eii(%class.ContextMap* @_ZZ11recordModelR5MixerE2cn, i32 16384, i32 3)
          to label %25 unwind label %129

25:                                               ; preds = %24
  %26 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.ContextMap*)* @_ZN10ContextMapD1Ev to void (i8*)*), i8* bitcast (%class.ContextMap* @_ZZ11recordModelR5MixerE2cn to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ11recordModelR5MixerE2cn) #2
  br label %27

27:                                               ; preds = %25, %21, %18
  %28 = load atomic i8, i8* bitcast (i64* @_ZGVZ11recordModelR5MixerE2co to i8*) acquire, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %36, !prof !2

30:                                               ; preds = %27
  %31 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ11recordModelR5MixerE2co) #2
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  invoke void @_ZN10ContextMapC1Eii(%class.ContextMap* @_ZZ11recordModelR5MixerE2co, i32 65536, i32 3)
          to label %34 unwind label %133

34:                                               ; preds = %33
  %35 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.ContextMap*)* @_ZN10ContextMapD1Ev to void (i8*)*), i8* bitcast (%class.ContextMap* @_ZZ11recordModelR5MixerE2co to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ11recordModelR5MixerE2co) #2
  br label %36

36:                                               ; preds = %34, %30, %27
  %37 = load atomic i8, i8* bitcast (i64* @_ZGVZ11recordModelR5MixerE2cp to i8*) acquire, align 8
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %47, !prof !2

39:                                               ; preds = %36
  %40 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ11recordModelR5MixerE2cp) #2
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %39
  %43 = load i32, i32* @level, align 4
  %44 = shl i32 65536, %43
  invoke void @_ZN10ContextMapC1Eii(%class.ContextMap* @_ZZ11recordModelR5MixerE2cp, i32 %44, i32 3)
          to label %45 unwind label %137

45:                                               ; preds = %42
  %46 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.ContextMap*)* @_ZN10ContextMapD1Ev to void (i8*)*), i8* bitcast (%class.ContextMap* @_ZZ11recordModelR5MixerE2cp to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ11recordModelR5MixerE2cp) #2
  br label %47

47:                                               ; preds = %45, %39, %36
  %48 = load i32, i32* @bpos, align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %302, label %50

50:                                               ; preds = %47
  %51 = load i32, i32* @c4, align 4
  %52 = and i32 %51, 65535
  store i32 %52, i32* %5, align 4
  %53 = load i32, i32* %5, align 4
  %54 = and i32 %53, 255
  store i32 %54, i32* %6, align 4
  %55 = load i32, i32* %5, align 4
  %56 = ashr i32 %55, 8
  store i32 %56, i32* %7, align 4
  %57 = load i32, i32* @pos, align 4
  %58 = load i32, i32* %6, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ11recordModelR5MixerE5cpos1, i64 0, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = sub nsw i32 %57, %61
  store i32 %62, i32* %8, align 4
  %63 = load i32, i32* %8, align 4
  %64 = icmp sgt i32 %63, 1
  br i1 %64, label %65, label %159

65:                                               ; preds = %50
  %66 = load i32, i32* %8, align 4
  %67 = load i32, i32* %6, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ11recordModelR5MixerE5cpos1, i64 0, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = load i32, i32* %6, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ11recordModelR5MixerE5cpos2, i64 0, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = sub nsw i32 %70, %74
  %76 = icmp eq i32 %66, %75
  br i1 %76, label %77, label %159

77:                                               ; preds = %65
  %78 = load i32, i32* %8, align 4
  %79 = load i32, i32* %6, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ11recordModelR5MixerE5cpos2, i64 0, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = load i32, i32* %6, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ11recordModelR5MixerE5cpos3, i64 0, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = sub nsw i32 %82, %86
  %88 = icmp eq i32 %78, %87
  br i1 %88, label %89, label %159

89:                                               ; preds = %77
  %90 = load i32, i32* %8, align 4
  %91 = load i32, i32* %6, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ11recordModelR5MixerE5cpos3, i64 0, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = load i32, i32* %6, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ11recordModelR5MixerE5cpos4, i64 0, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = sub nsw i32 %94, %98
  %100 = icmp eq i32 %90, %99
  br i1 %100, label %101, label %159

101:                                              ; preds = %89
  %102 = load i32, i32* %8, align 4
  %103 = icmp sgt i32 %102, 15
  br i1 %103, label %118, label %104

104:                                              ; preds = %101
  %105 = load i32, i32* %6, align 4
  %106 = load i32, i32* %8, align 4
  %107 = mul nsw i32 %106, 5
  %108 = add nsw i32 %107, 1
  %109 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %108)
  %110 = icmp eq i32 %105, %109
  br i1 %110, label %111, label %159

111:                                              ; preds = %104
  %112 = load i32, i32* %6, align 4
  %113 = load i32, i32* %8, align 4
  %114 = mul nsw i32 %113, 6
  %115 = add nsw i32 %114, 1
  %116 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %115)
  %117 = icmp eq i32 %112, %116
  br i1 %117, label %118, label %159

118:                                              ; preds = %111, %101
  %119 = load i32, i32* %8, align 4
  %120 = load i32, i32* @_ZZ11recordModelR5MixerE5rlen1, align 4
  %121 = icmp eq i32 %119, %120
  br i1 %121, label %122, label %141

122:                                              ; preds = %118
  %123 = load i32, i32* @_ZZ11recordModelR5MixerE7rcount1, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* @_ZZ11recordModelR5MixerE7rcount1, align 4
  br label %158

125:                                              ; preds = %15
  %126 = landingpad { i8*, i32 }
          cleanup
  %127 = extractvalue { i8*, i32 } %126, 0
  store i8* %127, i8** %3, align 8
  %128 = extractvalue { i8*, i32 } %126, 1
  store i32 %128, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ11recordModelR5MixerE2cm) #2
  br label %311

129:                                              ; preds = %24
  %130 = landingpad { i8*, i32 }
          cleanup
  %131 = extractvalue { i8*, i32 } %130, 0
  store i8* %131, i8** %3, align 8
  %132 = extractvalue { i8*, i32 } %130, 1
  store i32 %132, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ11recordModelR5MixerE2cn) #2
  br label %311

133:                                              ; preds = %33
  %134 = landingpad { i8*, i32 }
          cleanup
  %135 = extractvalue { i8*, i32 } %134, 0
  store i8* %135, i8** %3, align 8
  %136 = extractvalue { i8*, i32 } %134, 1
  store i32 %136, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ11recordModelR5MixerE2co) #2
  br label %311

137:                                              ; preds = %42
  %138 = landingpad { i8*, i32 }
          cleanup
  %139 = extractvalue { i8*, i32 } %138, 0
  store i8* %139, i8** %3, align 8
  %140 = extractvalue { i8*, i32 } %138, 1
  store i32 %140, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ11recordModelR5MixerE2cp) #2
  br label %311

141:                                              ; preds = %118
  %142 = load i32, i32* %8, align 4
  %143 = load i32, i32* @_ZZ11recordModelR5MixerE5rlen2, align 4
  %144 = icmp eq i32 %142, %143
  br i1 %144, label %145, label %148

145:                                              ; preds = %141
  %146 = load i32, i32* @_ZZ11recordModelR5MixerE7rcount2, align 4
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* @_ZZ11recordModelR5MixerE7rcount2, align 4
  br label %157

148:                                              ; preds = %141
  %149 = load i32, i32* @_ZZ11recordModelR5MixerE7rcount1, align 4
  %150 = load i32, i32* @_ZZ11recordModelR5MixerE7rcount2, align 4
  %151 = icmp sgt i32 %149, %150
  br i1 %151, label %152, label %154

152:                                              ; preds = %148
  %153 = load i32, i32* %8, align 4
  store i32 %153, i32* @_ZZ11recordModelR5MixerE5rlen2, align 4
  store i32 1, i32* @_ZZ11recordModelR5MixerE7rcount2, align 4
  br label %156

154:                                              ; preds = %148
  %155 = load i32, i32* %8, align 4
  store i32 %155, i32* @_ZZ11recordModelR5MixerE5rlen1, align 4
  store i32 1, i32* @_ZZ11recordModelR5MixerE7rcount1, align 4
  br label %156

156:                                              ; preds = %154, %152
  br label %157

157:                                              ; preds = %156, %145
  br label %158

158:                                              ; preds = %157, %122
  br label %159

159:                                              ; preds = %158, %111, %104, %89, %77, %65, %50
  %160 = load i32, i32* @_ZZ11recordModelR5MixerE7rcount1, align 4
  %161 = icmp sgt i32 %160, 15
  br i1 %161, label %162, label %168

162:                                              ; preds = %159
  %163 = load i32, i32* @_ZZ11recordModelR5MixerE4rlen, align 4
  %164 = load i32, i32* @_ZZ11recordModelR5MixerE5rlen1, align 4
  %165 = icmp ne i32 %163, %164
  br i1 %165, label %166, label %168

166:                                              ; preds = %162
  %167 = load i32, i32* @_ZZ11recordModelR5MixerE5rlen1, align 4
  store i32 %167, i32* @_ZZ11recordModelR5MixerE4rlen, align 4
  store i32 0, i32* @_ZZ11recordModelR5MixerE7rcount2, align 4
  store i32 0, i32* @_ZZ11recordModelR5MixerE7rcount1, align 4
  br label %168

168:                                              ; preds = %166, %162, %159
  %169 = load i32, i32* @_ZZ11recordModelR5MixerE7rcount2, align 4
  %170 = icmp sgt i32 %169, 15
  br i1 %170, label %171, label %177

171:                                              ; preds = %168
  %172 = load i32, i32* @_ZZ11recordModelR5MixerE4rlen, align 4
  %173 = load i32, i32* @_ZZ11recordModelR5MixerE5rlen2, align 4
  %174 = icmp ne i32 %172, %173
  br i1 %174, label %175, label %177

175:                                              ; preds = %171
  %176 = load i32, i32* @_ZZ11recordModelR5MixerE5rlen2, align 4
  store i32 %176, i32* @_ZZ11recordModelR5MixerE4rlen, align 4
  store i32 0, i32* @_ZZ11recordModelR5MixerE7rcount2, align 4
  store i32 0, i32* @_ZZ11recordModelR5MixerE7rcount1, align 4
  br label %177

177:                                              ; preds = %175, %171, %168
  %178 = load i32, i32* %6, align 4
  %179 = shl i32 %178, 8
  %180 = load i32, i32* @pos, align 4
  %181 = load i32, i32* %6, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ11recordModelR5MixerE5cpos1, i64 0, i64 %182
  %184 = load i32, i32* %183, align 4
  %185 = sub nsw i32 %180, %184
  %186 = call i32 @_Z3minii(i32 255, i32 %185)
  %187 = sdiv i32 %186, 4
  %188 = or i32 %179, %187
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11recordModelR5MixerE2cm, i32 %188, i32 -1)
  %189 = load i32, i32* %5, align 4
  %190 = shl i32 %189, 9
  %191 = load i32, i32* @pos, align 4
  %192 = load i32, i32* %5, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds [65536 x i32], [65536 x i32]* @_ZZ11recordModelR5MixerE5wpos1, i64 0, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = sub nsw i32 %191, %195
  %197 = call i32 @_Z4llogj(i32 %196)
  %198 = ashr i32 %197, 2
  %199 = or i32 %190, %198
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11recordModelR5MixerE2cm, i32 %199, i32 -1)
  %200 = load i32, i32* @_ZZ11recordModelR5MixerE4rlen, align 4
  %201 = load i32, i32* @_ZZ11recordModelR5MixerE4rlen, align 4
  %202 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %201)
  %203 = shl i32 %202, 10
  %204 = or i32 %200, %203
  %205 = load i32, i32* @_ZZ11recordModelR5MixerE4rlen, align 4
  %206 = mul nsw i32 %205, 2
  %207 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %206)
  %208 = shl i32 %207, 18
  %209 = or i32 %204, %208
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11recordModelR5MixerE2cm, i32 %209, i32 -1)
  %210 = load i32, i32* %5, align 4
  %211 = load i32, i32* @_ZZ11recordModelR5MixerE4rlen, align 4
  %212 = shl i32 %211, 8
  %213 = or i32 %210, %212
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11recordModelR5MixerE2cn, i32 %213, i32 -1)
  %214 = load i32, i32* %7, align 4
  %215 = load i32, i32* @_ZZ11recordModelR5MixerE4rlen, align 4
  %216 = shl i32 %215, 16
  %217 = or i32 %214, %216
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11recordModelR5MixerE2cn, i32 %217, i32 -1)
  %218 = load i32, i32* %6, align 4
  %219 = load i32, i32* @_ZZ11recordModelR5MixerE4rlen, align 4
  %220 = shl i32 %219, 8
  %221 = or i32 %218, %220
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11recordModelR5MixerE2cn, i32 %221, i32 -1)
  %222 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %223 = shl i32 %222, 8
  %224 = load i32, i32* @pos, align 4
  %225 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ11recordModelR5MixerE5cpos1, i64 0, i64 %226
  %228 = load i32, i32* %227, align 4
  %229 = sub nsw i32 %224, %228
  %230 = call i32 @_Z3minii(i32 255, i32 %229)
  %231 = or i32 %223, %230
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11recordModelR5MixerE2co, i32 %231, i32 -1)
  %232 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %233 = shl i32 %232, 17
  %234 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %235 = shl i32 %234, 9
  %236 = or i32 %233, %235
  %237 = load i32, i32* @pos, align 4
  %238 = load i32, i32* %5, align 4
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds [65536 x i32], [65536 x i32]* @_ZZ11recordModelR5MixerE5wpos1, i64 0, i64 %239
  %241 = load i32, i32* %240, align 4
  %242 = sub nsw i32 %237, %241
  %243 = call i32 @_Z4llogj(i32 %242)
  %244 = ashr i32 %243, 2
  %245 = or i32 %236, %244
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11recordModelR5MixerE2co, i32 %245, i32 -1)
  %246 = load i32, i32* @pos, align 4
  %247 = load i32, i32* @_ZZ11recordModelR5MixerE4rlen, align 4
  %248 = srem i32 %246, %247
  store i32 %248, i32* %9, align 4
  %249 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %250 = shl i32 %249, 8
  %251 = load i32, i32* @_ZZ11recordModelR5MixerE4rlen, align 4
  %252 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %251)
  %253 = or i32 %250, %252
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11recordModelR5MixerE2co, i32 %253, i32 -1)
  %254 = load i32, i32* @_ZZ11recordModelR5MixerE4rlen, align 4
  %255 = load i32, i32* @_ZZ11recordModelR5MixerE4rlen, align 4
  %256 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %255)
  %257 = shl i32 %256, 10
  %258 = or i32 %254, %257
  %259 = load i32, i32* %9, align 4
  %260 = shl i32 %259, 18
  %261 = or i32 %258, %260
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11recordModelR5MixerE2cp, i32 %261, i32 -1)
  %262 = load i32, i32* @_ZZ11recordModelR5MixerE4rlen, align 4
  %263 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %264 = shl i32 %263, 10
  %265 = or i32 %262, %264
  %266 = load i32, i32* %9, align 4
  %267 = shl i32 %266, 18
  %268 = or i32 %265, %267
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11recordModelR5MixerE2cp, i32 %268, i32 -1)
  %269 = load i32, i32* %9, align 4
  %270 = load i32, i32* @_ZZ11recordModelR5MixerE4rlen, align 4
  %271 = shl i32 %270, 12
  %272 = or i32 %269, %271
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11recordModelR5MixerE2cp, i32 %272, i32 -1)
  %273 = load i32, i32* %6, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ11recordModelR5MixerE5cpos3, i64 0, i64 %274
  %276 = load i32, i32* %275, align 4
  %277 = load i32, i32* %6, align 4
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ11recordModelR5MixerE5cpos4, i64 0, i64 %278
  store i32 %276, i32* %279, align 4
  %280 = load i32, i32* %6, align 4
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ11recordModelR5MixerE5cpos2, i64 0, i64 %281
  %283 = load i32, i32* %282, align 4
  %284 = load i32, i32* %6, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ11recordModelR5MixerE5cpos3, i64 0, i64 %285
  store i32 %283, i32* %286, align 4
  %287 = load i32, i32* %6, align 4
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ11recordModelR5MixerE5cpos1, i64 0, i64 %288
  %290 = load i32, i32* %289, align 4
  %291 = load i32, i32* %6, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ11recordModelR5MixerE5cpos2, i64 0, i64 %292
  store i32 %290, i32* %293, align 4
  %294 = load i32, i32* @pos, align 4
  %295 = load i32, i32* %6, align 4
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ11recordModelR5MixerE5cpos1, i64 0, i64 %296
  store i32 %294, i32* %297, align 4
  %298 = load i32, i32* @pos, align 4
  %299 = load i32, i32* %5, align 4
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds [65536 x i32], [65536 x i32]* @_ZZ11recordModelR5MixerE5wpos1, i64 0, i64 %300
  store i32 %298, i32* %301, align 4
  br label %302

302:                                              ; preds = %177, %47
  %303 = load %class.Mixer*, %class.Mixer** %2, align 8
  %304 = call i32 @_ZN10ContextMap3mixER5Mixer(%class.ContextMap* @_ZZ11recordModelR5MixerE2cm, %class.Mixer* dereferenceable(136) %303)
  %305 = load %class.Mixer*, %class.Mixer** %2, align 8
  %306 = call i32 @_ZN10ContextMap3mixER5Mixer(%class.ContextMap* @_ZZ11recordModelR5MixerE2cn, %class.Mixer* dereferenceable(136) %305)
  %307 = load %class.Mixer*, %class.Mixer** %2, align 8
  %308 = call i32 @_ZN10ContextMap3mixER5Mixer(%class.ContextMap* @_ZZ11recordModelR5MixerE2co, %class.Mixer* dereferenceable(136) %307)
  %309 = load %class.Mixer*, %class.Mixer** %2, align 8
  %310 = call i32 @_ZN10ContextMap3mixER5Mixer(%class.ContextMap* @_ZZ11recordModelR5MixerE2cp, %class.Mixer* dereferenceable(136) %309)
  ret void

311:                                              ; preds = %137, %133, %129, %125
  %312 = load i8*, i8** %3, align 8
  %313 = load i32, i32* %4, align 4
  %314 = insertvalue { i8*, i32 } undef, i8* %312, 0
  %315 = insertvalue { i8*, i32 } %314, i32 %313, 1
  resume { i8*, i32 } %315
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_Z4llogj(i32 %0) #0 comdat {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp uge i32 %4, 16777216
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  %7 = load i32, i32* %3, align 4
  %8 = lshr i32 %7, 16
  %9 = trunc i32 %8 to i16
  %10 = call i32 @_ZNK4IlogclEt(%class.Buf* @ilog, i16 zeroext %9)
  %11 = add nsw i32 256, %10
  store i32 %11, i32* %2, align 4
  br label %25

12:                                               ; preds = %1
  %13 = load i32, i32* %3, align 4
  %14 = icmp uge i32 %13, 65536
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = load i32, i32* %3, align 4
  %17 = lshr i32 %16, 8
  %18 = trunc i32 %17 to i16
  %19 = call i32 @_ZNK4IlogclEt(%class.Buf* @ilog, i16 zeroext %18)
  %20 = add nsw i32 128, %19
  store i32 %20, i32* %2, align 4
  br label %25

21:                                               ; preds = %12
  %22 = load i32, i32* %3, align 4
  %23 = trunc i32 %22 to i16
  %24 = call i32 @_ZNK4IlogclEt(%class.Buf* @ilog, i16 zeroext %23)
  store i32 %24, i32* %2, align 4
  br label %25

25:                                               ; preds = %21, %15, %6
  %26 = load i32, i32* %2, align 4
  ret i32 %26
}

; Function Attrs: noinline uwtable
define dso_local void @_Z11sparseModelR5Mixerii(%class.Mixer* dereferenceable(136) %0, i32 %1, i32 %2) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Mixer*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZ11sparseModelR5MixeriiE2cm to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %22, !prof !2

13:                                               ; preds = %3
  %14 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ11sparseModelR5MixeriiE2cm) #2
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %13
  %17 = load i32, i32* @level, align 4
  %18 = shl i32 65536, %17
  %19 = mul nsw i32 %18, 2
  invoke void @_ZN10ContextMapC1Eii(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %19, i32 48)
          to label %20 unwind label %96

20:                                               ; preds = %16
  %21 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.ContextMap*)* @_ZN10ContextMapD1Ev to void (i8*)*), i8* bitcast (%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ11sparseModelR5MixeriiE2cm) #2
  br label %22

22:                                               ; preds = %20, %13, %3
  %23 = load i32, i32* @bpos, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %167

25:                                               ; preds = %22
  %26 = load i32, i32* @c4, align 4
  %27 = and i32 %26, 15790320
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %27, i32 -1)
  %28 = load i32, i32* @c4, align 4
  %29 = and i32 %28, -252645136
  %30 = add i32 %29, 1
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %30, i32 -1)
  %31 = load i32, i32* @c4, align 4
  %32 = and i32 %31, 16316664
  %33 = add i32 %32, 2
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %33, i32 -1)
  %34 = load i32, i32* @c4, align 4
  %35 = and i32 %34, -117901064
  %36 = add i32 %35, 3
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %36, i32 -1)
  %37 = load i32, i32* @c4, align 4
  %38 = and i32 %37, 14737632
  %39 = add i32 %38, 4
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %39, i32 -1)
  %40 = load i32, i32* @c4, align 4
  %41 = and i32 %40, -522133280
  %42 = add i32 %41, 5
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %42, i32 -1)
  %43 = load i32, i32* @c4, align 4
  %44 = and i32 %43, 15790335
  %45 = add i32 %44, 6
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %45, i32 -1)
  %46 = load i32, i32* %5, align 4
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %46, i32 -1)
  %47 = load i32, i32* %6, align 4
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %47, i32 -1)
  %48 = load i32, i32* @c4, align 4
  %49 = and i32 %48, 16711935
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %49, i32 -1)
  %50 = load i32, i32* @c4, align 4
  %51 = and i32 %50, -16776961
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %51, i32 -1)
  %52 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %53 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 5)
  %54 = shl i32 %53, 8
  %55 = or i32 %52, %54
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %55, i32 -1)
  %56 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %57 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 6)
  %58 = shl i32 %57, 8
  %59 = or i32 %56, %58
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %59, i32 -1)
  %60 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %61 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 6)
  %62 = shl i32 %61, 8
  %63 = or i32 %60, %62
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %63, i32 -1)
  %64 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 4)
  %65 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 8)
  %66 = shl i32 %65, 8
  %67 = or i32 %64, %66
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %67, i32 -1)
  store i32 1, i32* %9, align 4
  br label %68

68:                                               ; preds = %93, %25
  %69 = load i32, i32* %9, align 4
  %70 = icmp slt i32 %69, 8
  br i1 %70, label %71, label %100

71:                                               ; preds = %68
  %72 = load i32, i32* %9, align 4
  %73 = add nsw i32 %72, 1
  %74 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %73)
  %75 = shl i32 %74, 8
  %76 = load i32, i32* %9, align 4
  %77 = add nsw i32 %76, 2
  %78 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %77)
  %79 = or i32 %75, %78
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %79, i32 -1)
  %80 = load i32, i32* %9, align 4
  %81 = add nsw i32 %80, 1
  %82 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %81)
  %83 = shl i32 %82, 8
  %84 = load i32, i32* %9, align 4
  %85 = add nsw i32 %84, 3
  %86 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %85)
  %87 = or i32 %83, %86
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %87, i32 -1)
  %88 = load i32, i32* %5, align 4
  %89 = load i32, i32* %9, align 4
  %90 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %89)
  %91 = shl i32 %90, 8
  %92 = or i32 %88, %91
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %92, i32 -1)
  br label %93

93:                                               ; preds = %71
  %94 = load i32, i32* %9, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %9, align 4
  br label %68

96:                                               ; preds = %16
  %97 = landingpad { i8*, i32 }
          cleanup
  %98 = extractvalue { i8*, i32 } %97, 0
  store i8* %98, i8** %7, align 8
  %99 = extractvalue { i8*, i32 } %97, 1
  store i32 %99, i32* %8, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ11sparseModelR5MixeriiE2cm) #2
  br label %170

100:                                              ; preds = %68
  store i32 0, i32* %10, align 4
  %101 = load i32, i32* @c4, align 4
  %102 = and i32 %101, 1
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %104, label %144

104:                                              ; preds = %100
  %105 = load i32, i32* @c4, align 4
  %106 = and i32 %105, 255
  %107 = call i32 @isalpha(i32 %106) #19
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %104
  store i32 1, i32* %10, align 4
  br label %143

110:                                              ; preds = %104
  %111 = load i32, i32* @c4, align 4
  %112 = and i32 %111, 255
  %113 = call i32 @ispunct(i32 %112) #19
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %110
  store i32 2, i32* %10, align 4
  br label %142

116:                                              ; preds = %110
  %117 = load i32, i32* @c4, align 4
  %118 = and i32 %117, 255
  %119 = call i32 @isspace(i32 %118) #19
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %116
  store i32 3, i32* %10, align 4
  br label %141

122:                                              ; preds = %116
  %123 = load i32, i32* @c4, align 4
  %124 = and i32 %123, 1
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %122
  store i32 4, i32* %10, align 4
  br label %140

127:                                              ; preds = %122
  %128 = load i32, i32* @c4, align 4
  %129 = and i32 %128, 0
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %127
  store i32 5, i32* %10, align 4
  br label %139

132:                                              ; preds = %127
  %133 = load i32, i32* @c4, align 4
  %134 = and i32 %133, 0
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %132
  store i32 6, i32* %10, align 4
  br label %138

137:                                              ; preds = %132
  store i32 7, i32* %10, align 4
  br label %138

138:                                              ; preds = %137, %136
  br label %139

139:                                              ; preds = %138, %131
  br label %140

140:                                              ; preds = %139, %126
  br label %141

141:                                              ; preds = %140, %121
  br label %142

142:                                              ; preds = %141, %115
  br label %143

143:                                              ; preds = %142, %109
  br label %144

144:                                              ; preds = %143, %100
  %145 = load i32, i32* @_ZZ11sparseModelR5MixeriiE4mask, align 4
  %146 = shl i32 %145, 3
  %147 = load i32, i32* %10, align 4
  %148 = or i32 %146, %147
  store i32 %148, i32* @_ZZ11sparseModelR5MixeriiE4mask, align 4
  %149 = load i32, i32* @_ZZ11sparseModelR5MixeriiE4mask, align 4
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %149, i32 -1)
  %150 = load i32, i32* @_ZZ11sparseModelR5MixeriiE4mask, align 4
  %151 = shl i32 %150, 8
  %152 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %153 = or i32 %151, %152
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %153, i32 -1)
  %154 = load i32, i32* @_ZZ11sparseModelR5MixeriiE4mask, align 4
  %155 = shl i32 %154, 17
  %156 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %157 = shl i32 %156, 8
  %158 = or i32 %155, %157
  %159 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %160 = or i32 %158, %159
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %160, i32 -1)
  %161 = load i32, i32* @_ZZ11sparseModelR5MixeriiE4mask, align 4
  %162 = and i32 %161, 511
  %163 = load i32, i32* @c4, align 4
  %164 = and i32 %163, -252645136
  %165 = shl i32 %164, 9
  %166 = or i32 %162, %165
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, i32 %166, i32 -1)
  br label %167

167:                                              ; preds = %144, %22
  %168 = load %class.Mixer*, %class.Mixer** %4, align 8
  %169 = call i32 @_ZN10ContextMap3mixER5Mixer(%class.ContextMap* @_ZZ11sparseModelR5MixeriiE2cm, %class.Mixer* dereferenceable(136) %168)
  ret void

170:                                              ; preds = %96
  %171 = load i8*, i8** %7, align 8
  %172 = load i32, i32* %8, align 4
  %173 = insertvalue { i8*, i32 } undef, i8* %171, 0
  %174 = insertvalue { i8*, i32 } %173, i32 %172, 1
  resume { i8*, i32 } %174
}

; Function Attrs: nounwind readonly
declare dso_local i32 @isalpha(i32) #9

; Function Attrs: nounwind readonly
declare dso_local i32 @ispunct(i32) #9

; Function Attrs: nounwind readonly
declare dso_local i32 @isspace(i32) #9

; Function Attrs: noinline uwtable
define dso_local void @_Z13distanceModelR5Mixer(%class.Mixer* dereferenceable(136) %0) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Mixer*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  %5 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %2, align 8
  %6 = load atomic i8, i8* bitcast (i64* @_ZGVZ13distanceModelR5MixerE2cr to i8*) acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %16, !prof !2

8:                                                ; preds = %1
  %9 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ13distanceModelR5MixerE2cr) #2
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %8
  %12 = load i32, i32* @level, align 4
  %13 = shl i32 65536, %12
  invoke void @_ZN10ContextMapC1Eii(%class.ContextMap* @_ZZ13distanceModelR5MixerE2cr, i32 %13, i32 3)
          to label %14 unwind label %26

14:                                               ; preds = %11
  %15 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.ContextMap*)* @_ZN10ContextMapD1Ev to void (i8*)*), i8* bitcast (%class.ContextMap* @_ZZ13distanceModelR5MixerE2cr to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ13distanceModelR5MixerE2cr) #2
  br label %16

16:                                               ; preds = %14, %8, %1
  %17 = load i32, i32* @bpos, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %69

19:                                               ; preds = %16
  %20 = load i32, i32* @c4, align 4
  %21 = and i32 %20, 255
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* %5, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %19
  %25 = load i32, i32* @pos, align 4
  store i32 %25, i32* @_ZZ13distanceModelR5MixerE5pos00, align 4
  br label %30

26:                                               ; preds = %11
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  store i8* %28, i8** %3, align 8
  %29 = extractvalue { i8*, i32 } %27, 1
  store i32 %29, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ13distanceModelR5MixerE2cr) #2
  br label %72

30:                                               ; preds = %24, %19
  %31 = load i32, i32* %5, align 4
  %32 = icmp eq i32 %31, 32
  br i1 %32, label %33, label %35

33:                                               ; preds = %30
  %34 = load i32, i32* @pos, align 4
  store i32 %34, i32* @_ZZ13distanceModelR5MixerE5pos20, align 4
  br label %35

35:                                               ; preds = %33, %30
  %36 = load i32, i32* %5, align 4
  %37 = icmp eq i32 %36, 255
  br i1 %37, label %44, label %38

38:                                               ; preds = %35
  %39 = load i32, i32* %5, align 4
  %40 = icmp eq i32 %39, 13
  br i1 %40, label %44, label %41

41:                                               ; preds = %38
  %42 = load i32, i32* %5, align 4
  %43 = icmp eq i32 %42, 10
  br i1 %43, label %44, label %46

44:                                               ; preds = %41, %38, %35
  %45 = load i32, i32* @pos, align 4
  store i32 %45, i32* @_ZZ13distanceModelR5MixerE5posnl, align 4
  br label %46

46:                                               ; preds = %44, %41
  %47 = load i32, i32* @pos, align 4
  %48 = load i32, i32* @_ZZ13distanceModelR5MixerE5pos00, align 4
  %49 = sub nsw i32 %47, %48
  %50 = call i32 @_Z3minii(i32 %49, i32 255)
  %51 = load i32, i32* %5, align 4
  %52 = shl i32 %51, 8
  %53 = or i32 %50, %52
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ13distanceModelR5MixerE2cr, i32 %53, i32 -1)
  %54 = load i32, i32* @pos, align 4
  %55 = load i32, i32* @_ZZ13distanceModelR5MixerE5pos20, align 4
  %56 = sub nsw i32 %54, %55
  %57 = call i32 @_Z3minii(i32 %56, i32 255)
  %58 = load i32, i32* %5, align 4
  %59 = shl i32 %58, 8
  %60 = or i32 %57, %59
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ13distanceModelR5MixerE2cr, i32 %60, i32 -1)
  %61 = load i32, i32* @pos, align 4
  %62 = load i32, i32* @_ZZ13distanceModelR5MixerE5posnl, align 4
  %63 = sub nsw i32 %61, %62
  %64 = call i32 @_Z3minii(i32 %63, i32 255)
  %65 = load i32, i32* %5, align 4
  %66 = shl i32 %65, 8
  %67 = add nsw i32 %66, 234567
  %68 = or i32 %64, %67
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ13distanceModelR5MixerE2cr, i32 %68, i32 -1)
  br label %69

69:                                               ; preds = %46, %16
  %70 = load %class.Mixer*, %class.Mixer** %2, align 8
  %71 = call i32 @_ZN10ContextMap3mixER5Mixer(%class.ContextMap* @_ZZ13distanceModelR5MixerE2cr, %class.Mixer* dereferenceable(136) %70)
  ret void

72:                                               ; preds = %26
  %73 = load i8*, i8** %3, align 8
  %74 = load i32, i32* %4, align 4
  %75 = insertvalue { i8*, i32 } undef, i8* %73, 0
  %76 = insertvalue { i8*, i32 } %75, i32 %74, 1
  resume { i8*, i32 } %76
}

; Function Attrs: noinline uwtable
define dso_local i32 @_Z8bmpModelR5Mixer(%class.Mixer* dereferenceable(136) %0) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca i32, align 4
  %3 = alloca %class.Mixer*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*
  %6 = alloca i32
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %3, align 8
  store i32 131072, i32* %4, align 4
  %23 = load atomic i8, i8* bitcast (i64* @_ZGVZ8bmpModelR5MixerE4scm1 to i8*) acquire, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %31, !prof !2

25:                                               ; preds = %1
  %26 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8bmpModelR5MixerE4scm1) #2
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %25
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm1, i32 131072)
          to label %29 unwind label %164

29:                                               ; preds = %28
  %30 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm1 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8bmpModelR5MixerE4scm1) #2
  br label %31

31:                                               ; preds = %29, %25, %1
  %32 = load atomic i8, i8* bitcast (i64* @_ZGVZ8bmpModelR5MixerE4scm2 to i8*) acquire, align 8
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %40, !prof !2

34:                                               ; preds = %31
  %35 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8bmpModelR5MixerE4scm2) #2
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %34
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm2, i32 131072)
          to label %38 unwind label %168

38:                                               ; preds = %37
  %39 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm2 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8bmpModelR5MixerE4scm2) #2
  br label %40

40:                                               ; preds = %38, %34, %31
  %41 = load atomic i8, i8* bitcast (i64* @_ZGVZ8bmpModelR5MixerE4scm3 to i8*) acquire, align 8
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %49, !prof !2

43:                                               ; preds = %40
  %44 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8bmpModelR5MixerE4scm3) #2
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %43
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm3, i32 131072)
          to label %47 unwind label %172

47:                                               ; preds = %46
  %48 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm3 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8bmpModelR5MixerE4scm3) #2
  br label %49

49:                                               ; preds = %47, %43, %40
  %50 = load atomic i8, i8* bitcast (i64* @_ZGVZ8bmpModelR5MixerE4scm4 to i8*) acquire, align 8
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %58, !prof !2

52:                                               ; preds = %49
  %53 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8bmpModelR5MixerE4scm4) #2
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %52
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm4, i32 131072)
          to label %56 unwind label %176

56:                                               ; preds = %55
  %57 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm4 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8bmpModelR5MixerE4scm4) #2
  br label %58

58:                                               ; preds = %56, %52, %49
  %59 = load atomic i8, i8* bitcast (i64* @_ZGVZ8bmpModelR5MixerE4scm5 to i8*) acquire, align 8
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %67, !prof !2

61:                                               ; preds = %58
  %62 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8bmpModelR5MixerE4scm5) #2
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %61
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm5, i32 131072)
          to label %65 unwind label %180

65:                                               ; preds = %64
  %66 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm5 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8bmpModelR5MixerE4scm5) #2
  br label %67

67:                                               ; preds = %65, %61, %58
  %68 = load atomic i8, i8* bitcast (i64* @_ZGVZ8bmpModelR5MixerE4scm6 to i8*) acquire, align 8
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %76, !prof !2

70:                                               ; preds = %67
  %71 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8bmpModelR5MixerE4scm6) #2
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %70
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm6, i32 131072)
          to label %74 unwind label %184

74:                                               ; preds = %73
  %75 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm6 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8bmpModelR5MixerE4scm6) #2
  br label %76

76:                                               ; preds = %74, %70, %67
  %77 = load atomic i8, i8* bitcast (i64* @_ZGVZ8bmpModelR5MixerE4scm7 to i8*) acquire, align 8
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %85, !prof !2

79:                                               ; preds = %76
  %80 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8bmpModelR5MixerE4scm7) #2
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %79
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm7, i32 131072)
          to label %83 unwind label %188

83:                                               ; preds = %82
  %84 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm7 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8bmpModelR5MixerE4scm7) #2
  br label %85

85:                                               ; preds = %83, %79, %76
  %86 = load atomic i8, i8* bitcast (i64* @_ZGVZ8bmpModelR5MixerE4scm8 to i8*) acquire, align 8
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %94, !prof !2

88:                                               ; preds = %85
  %89 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8bmpModelR5MixerE4scm8) #2
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %88
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm8, i32 131072)
          to label %92 unwind label %192

92:                                               ; preds = %91
  %93 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm8 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8bmpModelR5MixerE4scm8) #2
  br label %94

94:                                               ; preds = %92, %88, %85
  %95 = load atomic i8, i8* bitcast (i64* @_ZGVZ8bmpModelR5MixerE4scm9 to i8*) acquire, align 8
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %103, !prof !2

97:                                               ; preds = %94
  %98 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8bmpModelR5MixerE4scm9) #2
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %97
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm9, i32 262144)
          to label %101 unwind label %196

101:                                              ; preds = %100
  %102 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm9 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8bmpModelR5MixerE4scm9) #2
  br label %103

103:                                              ; preds = %101, %97, %94
  %104 = load atomic i8, i8* bitcast (i64* @_ZGVZ8bmpModelR5MixerE5scm10 to i8*) acquire, align 8
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %112, !prof !2

106:                                              ; preds = %103
  %107 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8bmpModelR5MixerE5scm10) #2
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE5scm10, i32 131072)
          to label %110 unwind label %200

110:                                              ; preds = %109
  %111 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE5scm10 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8bmpModelR5MixerE5scm10) #2
  br label %112

112:                                              ; preds = %110, %106, %103
  %113 = load atomic i8, i8* bitcast (i64* @_ZGVZ8bmpModelR5MixerE2cm to i8*) acquire, align 8
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %115, label %124, !prof !2

115:                                              ; preds = %112
  %116 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8bmpModelR5MixerE2cm) #2
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %124

118:                                              ; preds = %115
  %119 = load i32, i32* @level, align 4
  %120 = shl i32 65536, %119
  %121 = mul nsw i32 %120, 4
  invoke void @_ZN10ContextMapC1Eii(%class.ContextMap* @_ZZ8bmpModelR5MixerE2cm, i32 %121, i32 13)
          to label %122 unwind label %204

122:                                              ; preds = %118
  %123 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.ContextMap*)* @_ZN10ContextMapD1Ev to void (i8*)*), i8* bitcast (%class.ContextMap* @_ZZ8bmpModelR5MixerE2cm to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8bmpModelR5MixerE2cm) #2
  br label %124

124:                                              ; preds = %122, %115, %112
  %125 = load i32, i32* @bpos, align 4
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %211, label %127

127:                                              ; preds = %124
  %128 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 54)
  %129 = icmp eq i32 %128, 66
  br i1 %129, label %130, label %211

130:                                              ; preds = %127
  %131 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 53)
  %132 = icmp eq i32 %131, 77
  br i1 %132, label %133, label %211

133:                                              ; preds = %130
  %134 = call i32 @_Z2i4i(i32 44)
  %135 = icmp eq i32 %134, 54
  br i1 %135, label %136, label %211

136:                                              ; preds = %133
  %137 = call i32 @_Z2i4i(i32 40)
  %138 = icmp eq i32 %137, 40
  br i1 %138, label %139, label %211

139:                                              ; preds = %136
  %140 = call i32 @_Z2i4i(i32 24)
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %211

142:                                              ; preds = %139
  %143 = call i32 @_Z2i4i(i32 36)
  %144 = add i32 %143, 3
  %145 = and i32 %144, -4
  %146 = mul i32 %145, 3
  store i32 %146, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %147 = call i32 @_Z2i4i(i32 32)
  store i32 %147, i32* %7, align 4
  %148 = load i32, i32* @pos, align 4
  store i32 %148, i32* @_ZZ8bmpModelR5MixerE3eoi, align 4
  %149 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %150 = icmp slt i32 %149, 196608
  br i1 %150, label %151, label %208

151:                                              ; preds = %142
  %152 = load i32, i32* %7, align 4
  %153 = icmp slt i32 %152, 65536
  br i1 %153, label %154, label %208

154:                                              ; preds = %151
  %155 = load i32, i32* @pos, align 4
  %156 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %157 = load i32, i32* %7, align 4
  %158 = mul nsw i32 %156, %157
  %159 = add nsw i32 %155, %158
  store i32 %159, i32* @_ZZ8bmpModelR5MixerE3eoi, align 4
  %160 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %161 = sdiv i32 %160, 3
  %162 = load i32, i32* %7, align 4
  %163 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 %161, i32 %162)
  br label %210

164:                                              ; preds = %28
  %165 = landingpad { i8*, i32 }
          cleanup
  %166 = extractvalue { i8*, i32 } %165, 0
  store i8* %166, i8** %5, align 8
  %167 = extractvalue { i8*, i32 } %165, 1
  store i32 %167, i32* %6, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8bmpModelR5MixerE4scm1) #2
  br label %593

168:                                              ; preds = %37
  %169 = landingpad { i8*, i32 }
          cleanup
  %170 = extractvalue { i8*, i32 } %169, 0
  store i8* %170, i8** %5, align 8
  %171 = extractvalue { i8*, i32 } %169, 1
  store i32 %171, i32* %6, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8bmpModelR5MixerE4scm2) #2
  br label %593

172:                                              ; preds = %46
  %173 = landingpad { i8*, i32 }
          cleanup
  %174 = extractvalue { i8*, i32 } %173, 0
  store i8* %174, i8** %5, align 8
  %175 = extractvalue { i8*, i32 } %173, 1
  store i32 %175, i32* %6, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8bmpModelR5MixerE4scm3) #2
  br label %593

176:                                              ; preds = %55
  %177 = landingpad { i8*, i32 }
          cleanup
  %178 = extractvalue { i8*, i32 } %177, 0
  store i8* %178, i8** %5, align 8
  %179 = extractvalue { i8*, i32 } %177, 1
  store i32 %179, i32* %6, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8bmpModelR5MixerE4scm4) #2
  br label %593

180:                                              ; preds = %64
  %181 = landingpad { i8*, i32 }
          cleanup
  %182 = extractvalue { i8*, i32 } %181, 0
  store i8* %182, i8** %5, align 8
  %183 = extractvalue { i8*, i32 } %181, 1
  store i32 %183, i32* %6, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8bmpModelR5MixerE4scm5) #2
  br label %593

184:                                              ; preds = %73
  %185 = landingpad { i8*, i32 }
          cleanup
  %186 = extractvalue { i8*, i32 } %185, 0
  store i8* %186, i8** %5, align 8
  %187 = extractvalue { i8*, i32 } %185, 1
  store i32 %187, i32* %6, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8bmpModelR5MixerE4scm6) #2
  br label %593

188:                                              ; preds = %82
  %189 = landingpad { i8*, i32 }
          cleanup
  %190 = extractvalue { i8*, i32 } %189, 0
  store i8* %190, i8** %5, align 8
  %191 = extractvalue { i8*, i32 } %189, 1
  store i32 %191, i32* %6, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8bmpModelR5MixerE4scm7) #2
  br label %593

192:                                              ; preds = %91
  %193 = landingpad { i8*, i32 }
          cleanup
  %194 = extractvalue { i8*, i32 } %193, 0
  store i8* %194, i8** %5, align 8
  %195 = extractvalue { i8*, i32 } %193, 1
  store i32 %195, i32* %6, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8bmpModelR5MixerE4scm8) #2
  br label %593

196:                                              ; preds = %100
  %197 = landingpad { i8*, i32 }
          cleanup
  %198 = extractvalue { i8*, i32 } %197, 0
  store i8* %198, i8** %5, align 8
  %199 = extractvalue { i8*, i32 } %197, 1
  store i32 %199, i32* %6, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8bmpModelR5MixerE4scm9) #2
  br label %593

200:                                              ; preds = %109
  %201 = landingpad { i8*, i32 }
          cleanup
  %202 = extractvalue { i8*, i32 } %201, 0
  store i8* %202, i8** %5, align 8
  %203 = extractvalue { i8*, i32 } %201, 1
  store i32 %203, i32* %6, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8bmpModelR5MixerE5scm10) #2
  br label %593

204:                                              ; preds = %118
  %205 = landingpad { i8*, i32 }
          cleanup
  %206 = extractvalue { i8*, i32 } %205, 0
  store i8* %206, i8** %5, align 8
  %207 = extractvalue { i8*, i32 } %205, 1
  store i32 %207, i32* %6, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8bmpModelR5MixerE2cm) #2
  br label %593

208:                                              ; preds = %151, %142
  %209 = load i32, i32* @pos, align 4
  store i32 %209, i32* @_ZZ8bmpModelR5MixerE3eoi, align 4
  br label %210

210:                                              ; preds = %208, %154
  br label %211

211:                                              ; preds = %210, %139, %136, %133, %130, %127, %124
  %212 = load i32, i32* @bpos, align 4
  %213 = icmp ne i32 %212, 0
  br i1 %213, label %351, label %214

214:                                              ; preds = %211
  %215 = load i32, i32* @c4, align 4
  %216 = icmp eq i32 %215, 1229531648
  br i1 %216, label %217, label %219

217:                                              ; preds = %214
  %218 = load i32, i32* @pos, align 4
  store i32 %218, i32* @_ZZ8bmpModelR5MixerE4tiff, align 4
  br label %219

219:                                              ; preds = %217, %214
  %220 = load i32, i32* @pos, align 4
  %221 = load i32, i32* @_ZZ8bmpModelR5MixerE4tiff, align 4
  %222 = sub i32 %220, %221
  %223 = icmp eq i32 %222, 4
  br i1 %223, label %224, label %228

224:                                              ; preds = %219
  %225 = load i32, i32* @c4, align 4
  %226 = icmp ne i32 %225, 134217728
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  store i32 0, i32* @_ZZ8bmpModelR5MixerE4tiff, align 4
  br label %228

228:                                              ; preds = %227, %224, %219
  %229 = load i32, i32* @_ZZ8bmpModelR5MixerE4tiff, align 4
  %230 = icmp ne i32 %229, 0
  br i1 %230, label %231, label %350

231:                                              ; preds = %228
  %232 = load i32, i32* @pos, align 4
  %233 = load i32, i32* @_ZZ8bmpModelR5MixerE4tiff, align 4
  %234 = sub i32 %232, %233
  %235 = icmp eq i32 %234, 200
  br i1 %235, label %236, label %350

236:                                              ; preds = %231
  %237 = load i32, i32* @pos, align 4
  %238 = load i32, i32* @_ZZ8bmpModelR5MixerE4tiff, align 4
  %239 = sub i32 %237, %238
  %240 = sub i32 %239, 4
  %241 = call i32 @_Z2i2i(i32 %240)
  store i32 %241, i32* %8, align 4
  store i32 0, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  %242 = load i32, i32* @_ZZ8bmpModelR5MixerE4tiff, align 4
  %243 = add i32 %242, 6
  store i32 %243, i32* %13, align 4
  br label %244

244:                                              ; preds = %305, %236
  %245 = load i32, i32* %13, align 4
  %246 = load i32, i32* @pos, align 4
  %247 = sub nsw i32 %246, 12
  %248 = icmp slt i32 %245, %247
  br i1 %248, label %249, label %253

249:                                              ; preds = %244
  %250 = load i32, i32* %8, align 4
  %251 = add nsw i32 %250, -1
  store i32 %251, i32* %8, align 4
  %252 = icmp sgt i32 %251, 0
  br label %253

253:                                              ; preds = %249, %244
  %254 = phi i1 [ false, %244 ], [ %252, %249 ]
  br i1 %254, label %255, label %308

255:                                              ; preds = %253
  %256 = load i32, i32* @pos, align 4
  %257 = load i32, i32* %13, align 4
  %258 = sub nsw i32 %256, %257
  %259 = call i32 @_Z2i2i(i32 %258)
  store i32 %259, i32* %14, align 4
  %260 = load i32, i32* @pos, align 4
  %261 = load i32, i32* %13, align 4
  %262 = sub nsw i32 %260, %261
  %263 = sub nsw i32 %262, 2
  %264 = call i32 @_Z2i2i(i32 %263)
  store i32 %264, i32* %15, align 4
  %265 = load i32, i32* @pos, align 4
  %266 = load i32, i32* %13, align 4
  %267 = sub nsw i32 %265, %266
  %268 = sub nsw i32 %267, 4
  %269 = call i32 @_Z2i4i(i32 %268)
  store i32 %269, i32* %16, align 4
  %270 = load i32, i32* @pos, align 4
  %271 = load i32, i32* %13, align 4
  %272 = sub nsw i32 %270, %271
  %273 = sub nsw i32 %272, 8
  %274 = call i32 @_Z2i4i(i32 %273)
  store i32 %274, i32* %17, align 4
  %275 = load i32, i32* %15, align 4
  %276 = icmp eq i32 %275, 3
  br i1 %276, label %280, label %277

277:                                              ; preds = %255
  %278 = load i32, i32* %15, align 4
  %279 = icmp eq i32 %278, 4
  br i1 %279, label %280, label %304

280:                                              ; preds = %277, %255
  %281 = load i32, i32* %16, align 4
  %282 = icmp eq i32 %281, 1
  br i1 %282, label %283, label %304

283:                                              ; preds = %280
  %284 = load i32, i32* %14, align 4
  %285 = icmp eq i32 %284, 256
  br i1 %285, label %286, label %288

286:                                              ; preds = %283
  %287 = load i32, i32* %17, align 4
  store i32 %287, i32* %11, align 4
  br label %288

288:                                              ; preds = %286, %283
  %289 = load i32, i32* %14, align 4
  %290 = icmp eq i32 %289, 257
  br i1 %290, label %291, label %293

291:                                              ; preds = %288
  %292 = load i32, i32* %17, align 4
  store i32 %292, i32* %12, align 4
  br label %293

293:                                              ; preds = %291, %288
  %294 = load i32, i32* %14, align 4
  %295 = icmp eq i32 %294, 259
  br i1 %295, label %296, label %298

296:                                              ; preds = %293
  %297 = load i32, i32* %17, align 4
  store i32 %297, i32* %10, align 4
  br label %298

298:                                              ; preds = %296, %293
  %299 = load i32, i32* %14, align 4
  %300 = icmp eq i32 %299, 277
  br i1 %300, label %301, label %303

301:                                              ; preds = %298
  %302 = load i32, i32* %17, align 4
  store i32 %302, i32* %9, align 4
  br label %303

303:                                              ; preds = %301, %298
  br label %304

304:                                              ; preds = %303, %280, %277
  br label %305

305:                                              ; preds = %304
  %306 = load i32, i32* %13, align 4
  %307 = add nsw i32 %306, 12
  store i32 %307, i32* %13, align 4
  br label %244

308:                                              ; preds = %253
  %309 = load i32, i32* %11, align 4
  %310 = icmp sgt i32 %309, 0
  br i1 %310, label %311, label %339

311:                                              ; preds = %308
  %312 = load i32, i32* %12, align 4
  %313 = icmp sgt i32 %312, 0
  br i1 %313, label %314, label %339

314:                                              ; preds = %311
  %315 = load i32, i32* %11, align 4
  %316 = load i32, i32* %12, align 4
  %317 = mul nsw i32 %315, %316
  %318 = icmp sgt i32 %317, 50
  br i1 %318, label %319, label %339

319:                                              ; preds = %314
  %320 = load i32, i32* %10, align 4
  %321 = icmp eq i32 %320, 1
  br i1 %321, label %322, label %339

322:                                              ; preds = %319
  %323 = load i32, i32* %9, align 4
  %324 = icmp eq i32 %323, 1
  br i1 %324, label %328, label %325

325:                                              ; preds = %322
  %326 = load i32, i32* %9, align 4
  %327 = icmp eq i32 %326, 3
  br i1 %327, label %328, label %339

328:                                              ; preds = %325, %322
  %329 = load i32, i32* @_ZZ8bmpModelR5MixerE4tiff, align 4
  %330 = load i32, i32* %11, align 4
  %331 = load i32, i32* %12, align 4
  %332 = mul nsw i32 %330, %331
  %333 = load i32, i32* %9, align 4
  %334 = mul nsw i32 %332, %333
  %335 = add i32 %329, %334
  store i32 %335, i32* @_ZZ8bmpModelR5MixerE3eoi, align 4
  %336 = load i32, i32* %11, align 4
  %337 = load i32, i32* %9, align 4
  %338 = mul nsw i32 %336, %337
  store i32 %338, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  br label %339

339:                                              ; preds = %328, %325, %319, %314, %311, %308
  %340 = load i32, i32* @_ZZ8bmpModelR5MixerE3eoi, align 4
  %341 = load i32, i32* @pos, align 4
  %342 = icmp sgt i32 %340, %341
  br i1 %342, label %343, label %348

343:                                              ; preds = %339
  %344 = load i32, i32* %11, align 4
  %345 = load i32, i32* %12, align 4
  %346 = load i32, i32* %9, align 4
  %347 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i32 %344, i32 %345, i32 %346)
  br label %349

348:                                              ; preds = %339
  store i32 0, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  store i32 0, i32* @_ZZ8bmpModelR5MixerE4tiff, align 4
  br label %349

349:                                              ; preds = %348, %343
  br label %350

350:                                              ; preds = %349, %231, %228
  br label %351

351:                                              ; preds = %350, %211
  %352 = load i32, i32* @pos, align 4
  %353 = load i32, i32* @_ZZ8bmpModelR5MixerE3eoi, align 4
  %354 = icmp sgt i32 %352, %353
  br i1 %354, label %355, label %356

355:                                              ; preds = %351
  store i32 0, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  store i32 0, i32* %2, align 4
  br label %591

356:                                              ; preds = %351
  %357 = load i32, i32* @bpos, align 4
  %358 = icmp ne i32 %357, 0
  br i1 %358, label %577, label %359

359:                                              ; preds = %356
  %360 = load i32, i32* @pos, align 4
  %361 = srem i32 %360, 3
  store i32 %361, i32* %18, align 4
  %362 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %363 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %364 = sub nsw i32 %363, 3
  %365 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %364)
  %366 = add nsw i32 %362, %365
  %367 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %368 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %367)
  %369 = add nsw i32 %366, %368
  %370 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %371 = add nsw i32 %370, 3
  %372 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %371)
  %373 = add nsw i32 %369, %372
  store i32 %373, i32* %19, align 4
  %374 = call i32 @_Z6sqrbufi(i32 3)
  %375 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %376 = sub nsw i32 %375, 3
  %377 = call i32 @_Z6sqrbufi(i32 %376)
  %378 = add nsw i32 %374, %377
  %379 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %380 = call i32 @_Z6sqrbufi(i32 %379)
  %381 = add nsw i32 %378, %380
  %382 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %383 = add nsw i32 %382, 3
  %384 = call i32 @_Z6sqrbufi(i32 %383)
  %385 = add nsw i32 %381, %384
  %386 = load i32, i32* %19, align 4
  %387 = load i32, i32* %19, align 4
  %388 = mul nsw i32 %386, %387
  %389 = sdiv i32 %388, 4
  %390 = sub nsw i32 %385, %389
  %391 = ashr i32 %390, 2
  store i32 %391, i32* %20, align 4
  %392 = load i32, i32* %19, align 4
  %393 = ashr i32 %392, 2
  store i32 %393, i32* %19, align 4
  %394 = load i32, i32* %20, align 4
  %395 = trunc i32 %394 to i16
  %396 = call i32 @_ZNK4IlogclEt(%class.Buf* @ilog, i16 zeroext %395)
  store i32 %396, i32* %21, align 4
  store i32 0, i32* %22, align 4
  %397 = load i32, i32* %22, align 4
  %398 = add nsw i32 %397, 1
  store i32 %398, i32* %22, align 4
  %399 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %400 = load i32, i32* %18, align 4
  %401 = call i32 @_Z4hashjjjjj(i32 %398, i32 %399, i32 %400, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8bmpModelR5MixerE2cm, i32 %401, i32 -1)
  %402 = load i32, i32* %22, align 4
  %403 = add nsw i32 %402, 1
  store i32 %403, i32* %22, align 4
  %404 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %405 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %406 = load i32, i32* %18, align 4
  %407 = call i32 @_Z4hashjjjjj(i32 %403, i32 %404, i32 %405, i32 %406, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8bmpModelR5MixerE2cm, i32 %407, i32 -1)
  %408 = load i32, i32* %22, align 4
  %409 = add nsw i32 %408, 1
  store i32 %409, i32* %22, align 4
  %410 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %411 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %412 = ashr i32 %411, 2
  %413 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %414 = ashr i32 %413, 6
  %415 = load i32, i32* %18, align 4
  %416 = call i32 @_Z4hashjjjjj(i32 %409, i32 %410, i32 %412, i32 %414, i32 %415)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8bmpModelR5MixerE2cm, i32 %416, i32 -1)
  %417 = load i32, i32* %22, align 4
  %418 = add nsw i32 %417, 1
  store i32 %418, i32* %22, align 4
  %419 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %420 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %419)
  %421 = load i32, i32* %18, align 4
  %422 = call i32 @_Z4hashjjjjj(i32 %418, i32 %420, i32 %421, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8bmpModelR5MixerE2cm, i32 %422, i32 -1)
  %423 = load i32, i32* %22, align 4
  %424 = add nsw i32 %423, 1
  store i32 %424, i32* %22, align 4
  %425 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %426 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %425)
  %427 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %428 = load i32, i32* %18, align 4
  %429 = call i32 @_Z4hashjjjjj(i32 %424, i32 %426, i32 %427, i32 %428, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8bmpModelR5MixerE2cm, i32 %429, i32 -1)
  %430 = load i32, i32* %22, align 4
  %431 = add nsw i32 %430, 1
  store i32 %431, i32* %22, align 4
  %432 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %433 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %432)
  %434 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %435 = ashr i32 %434, 2
  %436 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %437 = ashr i32 %436, 6
  %438 = load i32, i32* %18, align 4
  %439 = call i32 @_Z4hashjjjjj(i32 %431, i32 %433, i32 %435, i32 %437, i32 %438)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8bmpModelR5MixerE2cm, i32 %439, i32 -1)
  %440 = load i32, i32* %22, align 4
  %441 = add nsw i32 %440, 1
  store i32 %441, i32* %22, align 4
  %442 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %443 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %444 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %443)
  %445 = add nsw i32 %442, %444
  %446 = ashr i32 %445, 3
  %447 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %448 = ashr i32 %447, 5
  %449 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %450 = ashr i32 %449, 5
  %451 = load i32, i32* %18, align 4
  %452 = call i32 @_Z4hashjjjjj(i32 %441, i32 %446, i32 %448, i32 %450, i32 %451)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8bmpModelR5MixerE2cm, i32 %452, i32 -1)
  %453 = load i32, i32* %22, align 4
  %454 = add nsw i32 %453, 1
  store i32 %454, i32* %22, align 4
  %455 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %456 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %457 = load i32, i32* %18, align 4
  %458 = call i32 @_Z4hashjjjjj(i32 %454, i32 %455, i32 %456, i32 %457, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8bmpModelR5MixerE2cm, i32 %458, i32 -1)
  %459 = load i32, i32* %22, align 4
  %460 = add nsw i32 %459, 1
  store i32 %460, i32* %22, align 4
  %461 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %462 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %463 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 4)
  %464 = sub nsw i32 %462, %463
  %465 = load i32, i32* %18, align 4
  %466 = call i32 @_Z4hashjjjjj(i32 %460, i32 %461, i32 %464, i32 %465, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8bmpModelR5MixerE2cm, i32 %466, i32 -1)
  %467 = load i32, i32* %22, align 4
  %468 = add nsw i32 %467, 1
  store i32 %468, i32* %22, align 4
  %469 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %470 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %471 = add nsw i32 %469, %470
  %472 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 4)
  %473 = sub nsw i32 %471, %472
  %474 = load i32, i32* %18, align 4
  %475 = call i32 @_Z4hashjjjjj(i32 %468, i32 %473, i32 %474, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8bmpModelR5MixerE2cm, i32 %475, i32 -1)
  %476 = load i32, i32* %22, align 4
  %477 = add nsw i32 %476, 1
  store i32 %477, i32* %22, align 4
  %478 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %479 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %478)
  %480 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %481 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %482 = add nsw i32 %481, 1
  %483 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %482)
  %484 = sub nsw i32 %480, %483
  %485 = load i32, i32* %18, align 4
  %486 = call i32 @_Z4hashjjjjj(i32 %477, i32 %479, i32 %484, i32 %485, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8bmpModelR5MixerE2cm, i32 %486, i32 -1)
  %487 = load i32, i32* %22, align 4
  %488 = add nsw i32 %487, 1
  store i32 %488, i32* %22, align 4
  %489 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %490 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %489)
  %491 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %492 = add nsw i32 %490, %491
  %493 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %494 = add nsw i32 %493, 1
  %495 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %494)
  %496 = sub nsw i32 %492, %495
  %497 = load i32, i32* %18, align 4
  %498 = call i32 @_Z4hashjjjjj(i32 %488, i32 %496, i32 %497, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8bmpModelR5MixerE2cm, i32 %498, i32 -1)
  %499 = load i32, i32* %22, align 4
  %500 = add nsw i32 %499, 1
  store i32 %500, i32* %22, align 4
  %501 = load i32, i32* %19, align 4
  %502 = load i32, i32* %21, align 4
  %503 = ashr i32 %502, 5
  %504 = load i32, i32* %18, align 4
  %505 = call i32 @_Z4hashjjjjj(i32 %500, i32 %501, i32 %503, i32 %504, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8bmpModelR5MixerE2cm, i32 %505, i32 -1)
  %506 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %507 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %508 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %507)
  %509 = add nsw i32 %506, %508
  %510 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %511 = add nsw i32 %510, 3
  %512 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %511)
  %513 = sub nsw i32 %509, %512
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm1, i32 %513)
  %514 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %515 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %516 = sub nsw i32 %515, 3
  %517 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %516)
  %518 = add nsw i32 %514, %517
  %519 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %520 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %519)
  %521 = sub nsw i32 %518, %520
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm2, i32 %521)
  %522 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %523 = mul nsw i32 %522, 2
  %524 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 6)
  %525 = sub nsw i32 %523, %524
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm3, i32 %525)
  %526 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %527 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %526)
  %528 = mul nsw i32 %527, 2
  %529 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %530 = mul nsw i32 %529, 2
  %531 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %530)
  %532 = sub nsw i32 %528, %531
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm4, i32 %532)
  %533 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %534 = add nsw i32 %533, 3
  %535 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %534)
  %536 = mul nsw i32 %535, 2
  %537 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %538 = mul nsw i32 %537, 2
  %539 = add nsw i32 %538, 6
  %540 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %539)
  %541 = sub nsw i32 %536, %540
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm5, i32 %541)
  %542 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %543 = sub nsw i32 %542, 3
  %544 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %543)
  %545 = mul nsw i32 %544, 2
  %546 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %547 = mul nsw i32 %546, 2
  %548 = sub nsw i32 %547, 6
  %549 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %548)
  %550 = sub nsw i32 %545, %549
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm6, i32 %550)
  %551 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %552 = sub nsw i32 %551, 3
  %553 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %552)
  %554 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %555 = add nsw i32 %553, %554
  %556 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %557 = sub nsw i32 %556, 2
  %558 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %557)
  %559 = sub nsw i32 %555, %558
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm7, i32 %559)
  %560 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %561 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %560)
  %562 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %563 = sub nsw i32 %562, 3
  %564 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %563)
  %565 = add nsw i32 %561, %564
  %566 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  %567 = mul nsw i32 %566, 2
  %568 = sub nsw i32 %567, 3
  %569 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %568)
  %570 = sub nsw i32 %565, %569
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm8, i32 %570)
  %571 = load i32, i32* %19, align 4
  %572 = ashr i32 %571, 1
  %573 = load i32, i32* %21, align 4
  %574 = shl i32 %573, 1
  %575 = and i32 %574, 384
  %576 = or i32 %572, %575
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm9, i32 %576)
  br label %577

577:                                              ; preds = %359, %356
  %578 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm1, %class.Mixer* dereferenceable(136) %578, i32 7)
  %579 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm2, %class.Mixer* dereferenceable(136) %579, i32 7)
  %580 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm3, %class.Mixer* dereferenceable(136) %580, i32 7)
  %581 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm4, %class.Mixer* dereferenceable(136) %581, i32 7)
  %582 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm5, %class.Mixer* dereferenceable(136) %582, i32 7)
  %583 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm6, %class.Mixer* dereferenceable(136) %583, i32 7)
  %584 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm7, %class.Mixer* dereferenceable(136) %584, i32 7)
  %585 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm8, %class.Mixer* dereferenceable(136) %585, i32 7)
  %586 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE4scm9, %class.Mixer* dereferenceable(136) %586, i32 7)
  %587 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8bmpModelR5MixerE5scm10, %class.Mixer* dereferenceable(136) %587, i32 7)
  %588 = load %class.Mixer*, %class.Mixer** %3, align 8
  %589 = call i32 @_ZN10ContextMap3mixER5Mixer(%class.ContextMap* @_ZZ8bmpModelR5MixerE2cm, %class.Mixer* dereferenceable(136) %588)
  %590 = load i32, i32* @_ZZ8bmpModelR5MixerE1w, align 4
  store i32 %590, i32* %2, align 4
  br label %591

591:                                              ; preds = %577, %355
  %592 = load i32, i32* %2, align 4
  ret i32 %592

593:                                              ; preds = %204, %200, %196, %192, %188, %184, %180, %176, %172, %168, %164
  %594 = load i8*, i8** %5, align 8
  %595 = load i32, i32* %6, align 4
  %596 = insertvalue { i8*, i32 } undef, i8* %594, 0
  %597 = insertvalue { i8*, i32 } %596, i32 %595, 1
  resume { i8*, i32 } %597
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_Z2i4i(i32 %0) #0 comdat {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %3)
  %5 = load i32, i32* %2, align 4
  %6 = sub nsw i32 %5, 1
  %7 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %6)
  %8 = mul nsw i32 256, %7
  %9 = add nsw i32 %4, %8
  %10 = load i32, i32* %2, align 4
  %11 = sub nsw i32 %10, 2
  %12 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %11)
  %13 = mul nsw i32 65536, %12
  %14 = add nsw i32 %9, %13
  %15 = load i32, i32* %2, align 4
  %16 = sub nsw i32 %15, 3
  %17 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %16)
  %18 = mul nsw i32 16777216, %17
  %19 = add nsw i32 %14, %18
  ret i32 %19
}

declare dso_local i32 @printf(i8*, ...) #10

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_Z2i2i(i32 %0) #0 comdat {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %3)
  %5 = load i32, i32* %2, align 4
  %6 = sub nsw i32 %5, 1
  %7 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %6)
  %8 = mul nsw i32 256, %7
  %9 = add nsw i32 %4, %8
  ret i32 %9
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_Z6sqrbufi(i32 %0) #0 comdat {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %3)
  %5 = load i32, i32* %2, align 4
  %6 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %5)
  %7 = mul nsw i32 %4, %6
  ret i32 %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_Z4hashjjjjj(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) #1 comdat {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %12 = load i32, i32* %6, align 4
  %13 = mul i32 %12, 200002979
  %14 = load i32, i32* %7, align 4
  %15 = mul i32 %14, 30005491
  %16 = add i32 %13, %15
  %17 = load i32, i32* %8, align 4
  %18 = mul i32 %17, 50004239
  %19 = add i32 %16, %18
  %20 = load i32, i32* %9, align 4
  %21 = mul i32 %20, 70004807
  %22 = add i32 %19, %21
  %23 = load i32, i32* %10, align 4
  %24 = mul i32 %23, 110002499
  %25 = add i32 %22, %24
  store i32 %25, i32* %11, align 4
  %26 = load i32, i32* %11, align 4
  %27 = load i32, i32* %11, align 4
  %28 = lshr i32 %27, 9
  %29 = xor i32 %26, %28
  %30 = load i32, i32* %6, align 4
  %31 = lshr i32 %30, 2
  %32 = xor i32 %29, %31
  %33 = load i32, i32* %7, align 4
  %34 = lshr i32 %33, 3
  %35 = xor i32 %32, %34
  %36 = load i32, i32* %8, align 4
  %37 = lshr i32 %36, 4
  %38 = xor i32 %35, %37
  %39 = load i32, i32* %9, align 4
  %40 = lshr i32 %39, 5
  %41 = xor i32 %38, %40
  %42 = load i32, i32* %10, align 4
  %43 = lshr i32 %42, 6
  %44 = xor i32 %41, %43
  ret i32 %44
}

; Function Attrs: noinline uwtable
define dso_local void @_Z9model8bitR5Mixeri(%class.Mixer* dereferenceable(136) %0, i32 %1) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.Mixer*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 131072, i32* %5, align 4
  %12 = load atomic i8, i8* bitcast (i64* @_ZGVZ9model8bitR5MixeriE4scm1 to i8*) acquire, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %20, !prof !2

14:                                               ; preds = %2
  %15 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9model8bitR5MixeriE4scm1) #2
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %14
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm1, i32 131072)
          to label %18 unwind label %562

18:                                               ; preds = %17
  %19 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm1 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9model8bitR5MixeriE4scm1) #2
  br label %20

20:                                               ; preds = %18, %14, %2
  %21 = load atomic i8, i8* bitcast (i64* @_ZGVZ9model8bitR5MixeriE4scm2 to i8*) acquire, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %29, !prof !2

23:                                               ; preds = %20
  %24 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9model8bitR5MixeriE4scm2) #2
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %23
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm2, i32 131072)
          to label %27 unwind label %566

27:                                               ; preds = %26
  %28 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm2 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9model8bitR5MixeriE4scm2) #2
  br label %29

29:                                               ; preds = %27, %23, %20
  %30 = load atomic i8, i8* bitcast (i64* @_ZGVZ9model8bitR5MixeriE4scm3 to i8*) acquire, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %38, !prof !2

32:                                               ; preds = %29
  %33 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9model8bitR5MixeriE4scm3) #2
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm3, i32 131072)
          to label %36 unwind label %570

36:                                               ; preds = %35
  %37 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm3 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9model8bitR5MixeriE4scm3) #2
  br label %38

38:                                               ; preds = %36, %32, %29
  %39 = load atomic i8, i8* bitcast (i64* @_ZGVZ9model8bitR5MixeriE4scm4 to i8*) acquire, align 8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %47, !prof !2

41:                                               ; preds = %38
  %42 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9model8bitR5MixeriE4scm4) #2
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm4, i32 131072)
          to label %45 unwind label %574

45:                                               ; preds = %44
  %46 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm4 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9model8bitR5MixeriE4scm4) #2
  br label %47

47:                                               ; preds = %45, %41, %38
  %48 = load atomic i8, i8* bitcast (i64* @_ZGVZ9model8bitR5MixeriE4scm5 to i8*) acquire, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %56, !prof !2

50:                                               ; preds = %47
  %51 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9model8bitR5MixeriE4scm5) #2
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %50
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm5, i32 131072)
          to label %54 unwind label %578

54:                                               ; preds = %53
  %55 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm5 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9model8bitR5MixeriE4scm5) #2
  br label %56

56:                                               ; preds = %54, %50, %47
  %57 = load atomic i8, i8* bitcast (i64* @_ZGVZ9model8bitR5MixeriE4scm6 to i8*) acquire, align 8
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %65, !prof !2

59:                                               ; preds = %56
  %60 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9model8bitR5MixeriE4scm6) #2
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %59
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm6, i32 262144)
          to label %63 unwind label %582

63:                                               ; preds = %62
  %64 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm6 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9model8bitR5MixeriE4scm6) #2
  br label %65

65:                                               ; preds = %63, %59, %56
  %66 = load atomic i8, i8* bitcast (i64* @_ZGVZ9model8bitR5MixeriE4scm7 to i8*) acquire, align 8
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %74, !prof !2

68:                                               ; preds = %65
  %69 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9model8bitR5MixeriE4scm7) #2
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %68
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm7, i32 131072)
          to label %72 unwind label %586

72:                                               ; preds = %71
  %73 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm7 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9model8bitR5MixeriE4scm7) #2
  br label %74

74:                                               ; preds = %72, %68, %65
  %75 = load atomic i8, i8* bitcast (i64* @_ZGVZ9model8bitR5MixeriE2cm to i8*) acquire, align 8
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %86, !prof !2

77:                                               ; preds = %74
  %78 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9model8bitR5MixeriE2cm) #2
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %86

80:                                               ; preds = %77
  %81 = load i32, i32* @level, align 4
  %82 = shl i32 65536, %81
  %83 = mul nsw i32 %82, 4
  invoke void @_ZN10ContextMapC1Eii(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %83, i32 32)
          to label %84 unwind label %590

84:                                               ; preds = %80
  %85 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.ContextMap*)* @_ZN10ContextMapD1Ev to void (i8*)*), i8* bitcast (%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9model8bitR5MixeriE2cm) #2
  br label %86

86:                                               ; preds = %84, %77, %74
  %87 = load i32, i32* @bpos, align 4
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %594, label %89

89:                                               ; preds = %86
  %90 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %91 = load i32, i32* %4, align 4
  %92 = sub nsw i32 %91, 1
  %93 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %92)
  %94 = add nsw i32 %90, %93
  %95 = load i32, i32* %4, align 4
  %96 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %95)
  %97 = add nsw i32 %94, %96
  %98 = load i32, i32* %4, align 4
  %99 = add nsw i32 %98, 1
  %100 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %99)
  %101 = add nsw i32 %97, %100
  store i32 %101, i32* %8, align 4
  %102 = call i32 @_Z6sqrbufi(i32 1)
  %103 = load i32, i32* %4, align 4
  %104 = sub nsw i32 %103, 1
  %105 = call i32 @_Z6sqrbufi(i32 %104)
  %106 = add nsw i32 %102, %105
  %107 = load i32, i32* %4, align 4
  %108 = call i32 @_Z6sqrbufi(i32 %107)
  %109 = add nsw i32 %106, %108
  %110 = load i32, i32* %4, align 4
  %111 = add nsw i32 %110, 1
  %112 = call i32 @_Z6sqrbufi(i32 %111)
  %113 = add nsw i32 %109, %112
  %114 = load i32, i32* %8, align 4
  %115 = load i32, i32* %8, align 4
  %116 = mul nsw i32 %114, %115
  %117 = sdiv i32 %116, 4
  %118 = sub nsw i32 %113, %117
  %119 = ashr i32 %118, 2
  store i32 %119, i32* %9, align 4
  %120 = load i32, i32* %8, align 4
  %121 = ashr i32 %120, 2
  store i32 %121, i32* %8, align 4
  %122 = load i32, i32* %9, align 4
  %123 = trunc i32 %122 to i16
  %124 = call i32 @_ZNK4IlogclEt(%class.Buf* @ilog, i16 zeroext %123)
  store i32 %124, i32* %10, align 4
  store i32 0, i32* %11, align 4
  %125 = load i32, i32* %11, align 4
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* %11, align 4
  %127 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %128 = ashr i32 %127, 2
  %129 = load i32, i32* %4, align 4
  %130 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %129)
  %131 = ashr i32 %130, 2
  %132 = call i32 @_Z4hashjjjjj(i32 %126, i32 %128, i32 %131, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %132, i32 -1)
  %133 = load i32, i32* %11, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %11, align 4
  %135 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %136 = ashr i32 %135, 2
  %137 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %138 = ashr i32 %137, 2
  %139 = call i32 @_Z4hashjjjjj(i32 %134, i32 %136, i32 %138, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %139, i32 -1)
  %140 = load i32, i32* %11, align 4
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %11, align 4
  %142 = load i32, i32* %4, align 4
  %143 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %142)
  %144 = ashr i32 %143, 2
  %145 = load i32, i32* %4, align 4
  %146 = mul nsw i32 %145, 2
  %147 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %146)
  %148 = ashr i32 %147, 2
  %149 = call i32 @_Z4hashjjjjj(i32 %141, i32 %144, i32 %148, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %149, i32 -1)
  %150 = load i32, i32* %11, align 4
  %151 = add nsw i32 %150, 1
  store i32 %151, i32* %11, align 4
  %152 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %153 = ashr i32 %152, 2
  %154 = load i32, i32* %4, align 4
  %155 = sub nsw i32 %154, 1
  %156 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %155)
  %157 = ashr i32 %156, 2
  %158 = call i32 @_Z4hashjjjjj(i32 %151, i32 %153, i32 %157, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %158, i32 -1)
  %159 = load i32, i32* %11, align 4
  %160 = add nsw i32 %159, 1
  store i32 %160, i32* %11, align 4
  %161 = load i32, i32* %4, align 4
  %162 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %161)
  %163 = ashr i32 %162, 2
  %164 = load i32, i32* %4, align 4
  %165 = add nsw i32 %164, 1
  %166 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %165)
  %167 = ashr i32 %166, 2
  %168 = call i32 @_Z4hashjjjjj(i32 %160, i32 %163, i32 %167, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %168, i32 -1)
  %169 = load i32, i32* %11, align 4
  %170 = add nsw i32 %169, 1
  store i32 %170, i32* %11, align 4
  %171 = load i32, i32* %4, align 4
  %172 = add nsw i32 %171, 1
  %173 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %172)
  %174 = ashr i32 %173, 2
  %175 = load i32, i32* %4, align 4
  %176 = add nsw i32 %175, 2
  %177 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %176)
  %178 = ashr i32 %177, 2
  %179 = call i32 @_Z4hashjjjjj(i32 %170, i32 %174, i32 %178, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %179, i32 -1)
  %180 = load i32, i32* %11, align 4
  %181 = add nsw i32 %180, 1
  store i32 %181, i32* %11, align 4
  %182 = load i32, i32* %4, align 4
  %183 = add nsw i32 %182, 1
  %184 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %183)
  %185 = ashr i32 %184, 2
  %186 = load i32, i32* %4, align 4
  %187 = mul nsw i32 %186, 2
  %188 = add nsw i32 %187, 2
  %189 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %188)
  %190 = ashr i32 %189, 2
  %191 = call i32 @_Z4hashjjjjj(i32 %181, i32 %185, i32 %190, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %191, i32 -1)
  %192 = load i32, i32* %11, align 4
  %193 = add nsw i32 %192, 1
  store i32 %193, i32* %11, align 4
  %194 = load i32, i32* %4, align 4
  %195 = sub nsw i32 %194, 1
  %196 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %195)
  %197 = ashr i32 %196, 2
  %198 = load i32, i32* %4, align 4
  %199 = mul nsw i32 %198, 2
  %200 = sub nsw i32 %199, 2
  %201 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %200)
  %202 = ashr i32 %201, 2
  %203 = call i32 @_Z4hashjjjjj(i32 %193, i32 %197, i32 %202, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %203, i32 -1)
  %204 = load i32, i32* %11, align 4
  %205 = add nsw i32 %204, 1
  store i32 %205, i32* %11, align 4
  %206 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %207 = load i32, i32* %4, align 4
  %208 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %207)
  %209 = add nsw i32 %206, %208
  %210 = ashr i32 %209, 1
  %211 = call i32 @_Z4hashjjjjj(i32 %205, i32 %210, i32 -1, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %211, i32 -1)
  %212 = load i32, i32* %11, align 4
  %213 = add nsw i32 %212, 1
  store i32 %213, i32* %11, align 4
  %214 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %215 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %216 = add nsw i32 %214, %215
  %217 = ashr i32 %216, 1
  %218 = call i32 @_Z4hashjjjjj(i32 %213, i32 %217, i32 -1, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %218, i32 -1)
  %219 = load i32, i32* %11, align 4
  %220 = add nsw i32 %219, 1
  store i32 %220, i32* %11, align 4
  %221 = load i32, i32* %4, align 4
  %222 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %221)
  %223 = load i32, i32* %4, align 4
  %224 = mul nsw i32 %223, 2
  %225 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %224)
  %226 = add nsw i32 %222, %225
  %227 = ashr i32 %226, 1
  %228 = call i32 @_Z4hashjjjjj(i32 %220, i32 %227, i32 -1, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %228, i32 -1)
  %229 = load i32, i32* %11, align 4
  %230 = add nsw i32 %229, 1
  store i32 %230, i32* %11, align 4
  %231 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %232 = load i32, i32* %4, align 4
  %233 = sub nsw i32 %232, 1
  %234 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %233)
  %235 = add nsw i32 %231, %234
  %236 = ashr i32 %235, 1
  %237 = call i32 @_Z4hashjjjjj(i32 %230, i32 %236, i32 -1, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %237, i32 -1)
  %238 = load i32, i32* %11, align 4
  %239 = add nsw i32 %238, 1
  store i32 %239, i32* %11, align 4
  %240 = load i32, i32* %4, align 4
  %241 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %240)
  %242 = load i32, i32* %4, align 4
  %243 = add nsw i32 %242, 1
  %244 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %243)
  %245 = add nsw i32 %241, %244
  %246 = ashr i32 %245, 1
  %247 = call i32 @_Z4hashjjjjj(i32 %239, i32 %246, i32 -1, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %247, i32 -1)
  %248 = load i32, i32* %11, align 4
  %249 = add nsw i32 %248, 1
  store i32 %249, i32* %11, align 4
  %250 = load i32, i32* %4, align 4
  %251 = add nsw i32 %250, 1
  %252 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %251)
  %253 = load i32, i32* %4, align 4
  %254 = add nsw i32 %253, 2
  %255 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %254)
  %256 = add nsw i32 %252, %255
  %257 = ashr i32 %256, 1
  %258 = call i32 @_Z4hashjjjjj(i32 %249, i32 %257, i32 -1, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %258, i32 -1)
  %259 = load i32, i32* %11, align 4
  %260 = add nsw i32 %259, 1
  store i32 %260, i32* %11, align 4
  %261 = load i32, i32* %4, align 4
  %262 = add nsw i32 %261, 1
  %263 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %262)
  %264 = load i32, i32* %4, align 4
  %265 = mul nsw i32 %264, 2
  %266 = add nsw i32 %265, 2
  %267 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %266)
  %268 = add nsw i32 %263, %267
  %269 = ashr i32 %268, 1
  %270 = call i32 @_Z4hashjjjjj(i32 %260, i32 %269, i32 -1, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %270, i32 -1)
  %271 = load i32, i32* %11, align 4
  %272 = add nsw i32 %271, 1
  store i32 %272, i32* %11, align 4
  %273 = load i32, i32* %4, align 4
  %274 = sub nsw i32 %273, 1
  %275 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %274)
  %276 = load i32, i32* %4, align 4
  %277 = mul nsw i32 %276, 2
  %278 = sub nsw i32 %277, 2
  %279 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %278)
  %280 = add nsw i32 %275, %279
  %281 = ashr i32 %280, 1
  %282 = call i32 @_Z4hashjjjjj(i32 %272, i32 %281, i32 -1, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %282, i32 -1)
  %283 = load i32, i32* %11, align 4
  %284 = add nsw i32 %283, 1
  store i32 %284, i32* %11, align 4
  %285 = load i32, i32* %4, align 4
  %286 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %285)
  %287 = ashr i32 %286, 2
  %288 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %289 = ashr i32 %288, 2
  %290 = load i32, i32* %4, align 4
  %291 = sub nsw i32 %290, 1
  %292 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %291)
  %293 = ashr i32 %292, 2
  %294 = call i32 @_Z4hashjjjjj(i32 %284, i32 %287, i32 %289, i32 %293, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %294, i32 -1)
  %295 = load i32, i32* %11, align 4
  %296 = add nsw i32 %295, 1
  store i32 %296, i32* %11, align 4
  %297 = load i32, i32* %4, align 4
  %298 = sub nsw i32 %297, 1
  %299 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %298)
  %300 = ashr i32 %299, 2
  %301 = load i32, i32* %4, align 4
  %302 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %301)
  %303 = ashr i32 %302, 2
  %304 = load i32, i32* %4, align 4
  %305 = add nsw i32 %304, 1
  %306 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %305)
  %307 = ashr i32 %306, 2
  %308 = call i32 @_Z4hashjjjjj(i32 %296, i32 %300, i32 %303, i32 %307, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %308, i32 -1)
  %309 = load i32, i32* %11, align 4
  %310 = add nsw i32 %309, 1
  store i32 %310, i32* %11, align 4
  %311 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %312 = ashr i32 %311, 2
  %313 = load i32, i32* %4, align 4
  %314 = sub nsw i32 %313, 1
  %315 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %314)
  %316 = ashr i32 %315, 2
  %317 = load i32, i32* %4, align 4
  %318 = mul nsw i32 %317, 2
  %319 = sub nsw i32 %318, 1
  %320 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %319)
  %321 = ashr i32 %320, 2
  %322 = call i32 @_Z4hashjjjjj(i32 %310, i32 %312, i32 %316, i32 %321, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %322, i32 -1)
  %323 = load i32, i32* %11, align 4
  %324 = add nsw i32 %323, 1
  store i32 %324, i32* %11, align 4
  %325 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %326 = load i32, i32* %4, align 4
  %327 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %326)
  %328 = add nsw i32 %325, %327
  %329 = ashr i32 %328, 1
  %330 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %331 = ashr i32 %330, 2
  %332 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %333 = ashr i32 %332, 2
  %334 = call i32 @_Z4hashjjjjj(i32 %324, i32 %329, i32 %331, i32 %333, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %334, i32 -1)
  %335 = load i32, i32* %11, align 4
  %336 = add nsw i32 %335, 1
  store i32 %336, i32* %11, align 4
  %337 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %338 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %339 = add nsw i32 %337, %338
  %340 = ashr i32 %339, 1
  %341 = load i32, i32* %4, align 4
  %342 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %341)
  %343 = load i32, i32* %4, align 4
  %344 = mul nsw i32 %343, 2
  %345 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %344)
  %346 = add nsw i32 %342, %345
  %347 = ashr i32 %346, 1
  %348 = load i32, i32* %4, align 4
  %349 = sub nsw i32 %348, 1
  %350 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %349)
  %351 = ashr i32 %350, 2
  %352 = call i32 @_Z4hashjjjjj(i32 %336, i32 %340, i32 %347, i32 %351, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %352, i32 -1)
  %353 = load i32, i32* %11, align 4
  %354 = add nsw i32 %353, 1
  store i32 %354, i32* %11, align 4
  %355 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %356 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %357 = add nsw i32 %355, %356
  %358 = ashr i32 %357, 2
  %359 = load i32, i32* %4, align 4
  %360 = sub nsw i32 %359, 1
  %361 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %360)
  %362 = load i32, i32* %4, align 4
  %363 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %362)
  %364 = add nsw i32 %361, %363
  %365 = ashr i32 %364, 2
  %366 = call i32 @_Z4hashjjjjj(i32 %354, i32 %358, i32 %365, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %366, i32 -1)
  %367 = load i32, i32* %11, align 4
  %368 = add nsw i32 %367, 1
  store i32 %368, i32* %11, align 4
  %369 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %370 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %371 = add nsw i32 %369, %370
  %372 = ashr i32 %371, 1
  %373 = load i32, i32* %4, align 4
  %374 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %373)
  %375 = load i32, i32* %4, align 4
  %376 = mul nsw i32 %375, 2
  %377 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %376)
  %378 = add nsw i32 %374, %377
  %379 = ashr i32 %378, 1
  %380 = call i32 @_Z4hashjjjjj(i32 %368, i32 %372, i32 %379, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %380, i32 -1)
  %381 = load i32, i32* %11, align 4
  %382 = add nsw i32 %381, 1
  store i32 %382, i32* %11, align 4
  %383 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %384 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %385 = add nsw i32 %383, %384
  %386 = ashr i32 %385, 1
  %387 = load i32, i32* %4, align 4
  %388 = sub nsw i32 %387, 1
  %389 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %388)
  %390 = load i32, i32* %4, align 4
  %391 = mul nsw i32 %390, 2
  %392 = sub nsw i32 %391, 2
  %393 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %392)
  %394 = add nsw i32 %389, %393
  %395 = ashr i32 %394, 1
  %396 = call i32 @_Z4hashjjjjj(i32 %382, i32 %386, i32 %395, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %396, i32 -1)
  %397 = load i32, i32* %11, align 4
  %398 = add nsw i32 %397, 1
  store i32 %398, i32* %11, align 4
  %399 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %400 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %401 = add nsw i32 %399, %400
  %402 = ashr i32 %401, 1
  %403 = load i32, i32* %4, align 4
  %404 = add nsw i32 %403, 1
  %405 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %404)
  %406 = load i32, i32* %4, align 4
  %407 = mul nsw i32 %406, 2
  %408 = add nsw i32 %407, 2
  %409 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %408)
  %410 = add nsw i32 %405, %409
  %411 = ashr i32 %410, 1
  %412 = call i32 @_Z4hashjjjjj(i32 %398, i32 %402, i32 %411, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %412, i32 -1)
  %413 = load i32, i32* %11, align 4
  %414 = add nsw i32 %413, 1
  store i32 %414, i32* %11, align 4
  %415 = load i32, i32* %4, align 4
  %416 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %415)
  %417 = load i32, i32* %4, align 4
  %418 = mul nsw i32 %417, 2
  %419 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %418)
  %420 = add nsw i32 %416, %419
  %421 = ashr i32 %420, 1
  %422 = load i32, i32* %4, align 4
  %423 = sub nsw i32 %422, 1
  %424 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %423)
  %425 = load i32, i32* %4, align 4
  %426 = mul nsw i32 %425, 2
  %427 = add nsw i32 %426, 2
  %428 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %427)
  %429 = add nsw i32 %424, %428
  %430 = ashr i32 %429, 1
  %431 = call i32 @_Z4hashjjjjj(i32 %414, i32 %421, i32 %430, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %431, i32 -1)
  %432 = load i32, i32* %11, align 4
  %433 = add nsw i32 %432, 1
  store i32 %433, i32* %11, align 4
  %434 = load i32, i32* %4, align 4
  %435 = sub nsw i32 %434, 1
  %436 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %435)
  %437 = load i32, i32* %4, align 4
  %438 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %437)
  %439 = add nsw i32 %436, %438
  %440 = ashr i32 %439, 1
  %441 = load i32, i32* %4, align 4
  %442 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %441)
  %443 = load i32, i32* %4, align 4
  %444 = add nsw i32 %443, 1
  %445 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %444)
  %446 = add nsw i32 %442, %445
  %447 = ashr i32 %446, 1
  %448 = call i32 @_Z4hashjjjjj(i32 %433, i32 %440, i32 %447, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %448, i32 -1)
  %449 = load i32, i32* %11, align 4
  %450 = add nsw i32 %449, 1
  store i32 %450, i32* %11, align 4
  %451 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %452 = load i32, i32* %4, align 4
  %453 = sub nsw i32 %452, 1
  %454 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %453)
  %455 = add nsw i32 %451, %454
  %456 = ashr i32 %455, 1
  %457 = load i32, i32* %4, align 4
  %458 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %457)
  %459 = load i32, i32* %4, align 4
  %460 = mul nsw i32 %459, 2
  %461 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %460)
  %462 = add nsw i32 %458, %461
  %463 = ashr i32 %462, 1
  %464 = call i32 @_Z4hashjjjjj(i32 %450, i32 %456, i32 %463, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %464, i32 -1)
  %465 = load i32, i32* %11, align 4
  %466 = add nsw i32 %465, 1
  store i32 %466, i32* %11, align 4
  %467 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %468 = load i32, i32* %4, align 4
  %469 = sub nsw i32 %468, 1
  %470 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %469)
  %471 = add nsw i32 %467, %470
  %472 = ashr i32 %471, 2
  %473 = load i32, i32* %4, align 4
  %474 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %473)
  %475 = load i32, i32* %4, align 4
  %476 = add nsw i32 %475, 1
  %477 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %476)
  %478 = add nsw i32 %474, %477
  %479 = ashr i32 %478, 2
  %480 = call i32 @_Z4hashjjjjj(i32 %466, i32 %472, i32 %479, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %480, i32 -1)
  %481 = load i32, i32* %11, align 4
  %482 = add nsw i32 %481, 1
  store i32 %482, i32* %11, align 4
  %483 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %484 = load i32, i32* %4, align 4
  %485 = sub nsw i32 %484, 1
  %486 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %485)
  %487 = sub nsw i32 %483, %486
  %488 = ashr i32 %487, 1
  %489 = load i32, i32* %4, align 4
  %490 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %489)
  %491 = add nsw i32 %488, %490
  %492 = ashr i32 %491, 2
  %493 = call i32 @_Z4hashjjjjj(i32 %482, i32 %492, i32 -1, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %493, i32 -1)
  %494 = load i32, i32* %11, align 4
  %495 = add nsw i32 %494, 1
  store i32 %495, i32* %11, align 4
  %496 = load i32, i32* %4, align 4
  %497 = sub nsw i32 %496, 1
  %498 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %497)
  %499 = load i32, i32* %4, align 4
  %500 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %499)
  %501 = sub nsw i32 %498, %500
  %502 = ashr i32 %501, 1
  %503 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %504 = add nsw i32 %502, %503
  %505 = ashr i32 %504, 2
  %506 = call i32 @_Z4hashjjjjj(i32 %495, i32 %505, i32 -1, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %506, i32 -1)
  %507 = load i32, i32* %11, align 4
  %508 = add nsw i32 %507, 1
  store i32 %508, i32* %11, align 4
  %509 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %510 = sub nsw i32 0, %509
  %511 = load i32, i32* %4, align 4
  %512 = sub nsw i32 %511, 1
  %513 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %512)
  %514 = add nsw i32 %510, %513
  %515 = load i32, i32* %4, align 4
  %516 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %515)
  %517 = add nsw i32 %514, %516
  %518 = ashr i32 %517, 2
  %519 = call i32 @_Z4hashjjjjj(i32 %508, i32 %518, i32 -1, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, i32 %519, i32 -1)
  %520 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %521 = load i32, i32* %4, align 4
  %522 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %521)
  %523 = add nsw i32 %520, %522
  %524 = ashr i32 %523, 1
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm1, i32 %524)
  %525 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %526 = load i32, i32* %4, align 4
  %527 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %526)
  %528 = add nsw i32 %525, %527
  %529 = load i32, i32* %4, align 4
  %530 = add nsw i32 %529, 1
  %531 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %530)
  %532 = sub nsw i32 %528, %531
  %533 = ashr i32 %532, 1
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm2, i32 %533)
  %534 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %535 = mul nsw i32 %534, 2
  %536 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %537 = sub nsw i32 %535, %536
  %538 = ashr i32 %537, 1
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm3, i32 %538)
  %539 = load i32, i32* %4, align 4
  %540 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %539)
  %541 = mul nsw i32 %540, 2
  %542 = load i32, i32* %4, align 4
  %543 = mul nsw i32 %542, 2
  %544 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %543)
  %545 = sub nsw i32 %541, %544
  %546 = ashr i32 %545, 1
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm4, i32 %546)
  %547 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %548 = load i32, i32* %4, align 4
  %549 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %548)
  %550 = add nsw i32 %547, %549
  %551 = load i32, i32* %4, align 4
  %552 = sub nsw i32 %551, 1
  %553 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %552)
  %554 = sub nsw i32 %550, %553
  %555 = ashr i32 %554, 1
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm5, i32 %555)
  %556 = load i32, i32* %8, align 4
  %557 = ashr i32 %556, 1
  %558 = load i32, i32* %10, align 4
  %559 = shl i32 %558, 1
  %560 = and i32 %559, 384
  %561 = or i32 %557, %560
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm6, i32 %561)
  br label %594

562:                                              ; preds = %17
  %563 = landingpad { i8*, i32 }
          cleanup
  %564 = extractvalue { i8*, i32 } %563, 0
  store i8* %564, i8** %6, align 8
  %565 = extractvalue { i8*, i32 } %563, 1
  store i32 %565, i32* %7, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9model8bitR5MixeriE4scm1) #2
  br label %604

566:                                              ; preds = %26
  %567 = landingpad { i8*, i32 }
          cleanup
  %568 = extractvalue { i8*, i32 } %567, 0
  store i8* %568, i8** %6, align 8
  %569 = extractvalue { i8*, i32 } %567, 1
  store i32 %569, i32* %7, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9model8bitR5MixeriE4scm2) #2
  br label %604

570:                                              ; preds = %35
  %571 = landingpad { i8*, i32 }
          cleanup
  %572 = extractvalue { i8*, i32 } %571, 0
  store i8* %572, i8** %6, align 8
  %573 = extractvalue { i8*, i32 } %571, 1
  store i32 %573, i32* %7, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9model8bitR5MixeriE4scm3) #2
  br label %604

574:                                              ; preds = %44
  %575 = landingpad { i8*, i32 }
          cleanup
  %576 = extractvalue { i8*, i32 } %575, 0
  store i8* %576, i8** %6, align 8
  %577 = extractvalue { i8*, i32 } %575, 1
  store i32 %577, i32* %7, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9model8bitR5MixeriE4scm4) #2
  br label %604

578:                                              ; preds = %53
  %579 = landingpad { i8*, i32 }
          cleanup
  %580 = extractvalue { i8*, i32 } %579, 0
  store i8* %580, i8** %6, align 8
  %581 = extractvalue { i8*, i32 } %579, 1
  store i32 %581, i32* %7, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9model8bitR5MixeriE4scm5) #2
  br label %604

582:                                              ; preds = %62
  %583 = landingpad { i8*, i32 }
          cleanup
  %584 = extractvalue { i8*, i32 } %583, 0
  store i8* %584, i8** %6, align 8
  %585 = extractvalue { i8*, i32 } %583, 1
  store i32 %585, i32* %7, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9model8bitR5MixeriE4scm6) #2
  br label %604

586:                                              ; preds = %71
  %587 = landingpad { i8*, i32 }
          cleanup
  %588 = extractvalue { i8*, i32 } %587, 0
  store i8* %588, i8** %6, align 8
  %589 = extractvalue { i8*, i32 } %587, 1
  store i32 %589, i32* %7, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9model8bitR5MixeriE4scm7) #2
  br label %604

590:                                              ; preds = %80
  %591 = landingpad { i8*, i32 }
          cleanup
  %592 = extractvalue { i8*, i32 } %591, 0
  store i8* %592, i8** %6, align 8
  %593 = extractvalue { i8*, i32 } %591, 1
  store i32 %593, i32* %7, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9model8bitR5MixeriE2cm) #2
  br label %604

594:                                              ; preds = %89, %86
  %595 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm1, %class.Mixer* dereferenceable(136) %595, i32 7)
  %596 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm2, %class.Mixer* dereferenceable(136) %596, i32 7)
  %597 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm3, %class.Mixer* dereferenceable(136) %597, i32 7)
  %598 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm4, %class.Mixer* dereferenceable(136) %598, i32 7)
  %599 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm5, %class.Mixer* dereferenceable(136) %599, i32 7)
  %600 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm6, %class.Mixer* dereferenceable(136) %600, i32 7)
  %601 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ9model8bitR5MixeriE4scm7, %class.Mixer* dereferenceable(136) %601, i32 7)
  %602 = load %class.Mixer*, %class.Mixer** %3, align 8
  %603 = call i32 @_ZN10ContextMap3mixER5Mixer(%class.ContextMap* @_ZZ9model8bitR5MixeriE2cm, %class.Mixer* dereferenceable(136) %602)
  ret void

604:                                              ; preds = %590, %586, %582, %578, %574, %570, %566, %562
  %605 = load i8*, i8** %6, align 8
  %606 = load i32, i32* %7, align 4
  %607 = insertvalue { i8*, i32 } undef, i8* %605, 0
  %608 = insertvalue { i8*, i32 } %607, i32 %606, 1
  resume { i8*, i32 } %608
}

; Function Attrs: noinline uwtable
define dso_local i32 @_Z8pgmModelR5Mixer(%class.Mixer* dereferenceable(136) %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %class.Mixer*, align 8
  %4 = alloca i32, align 4
  %5 = alloca [32 x i8], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %3, align 8
  %8 = load i32, i32* @bpos, align 4
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %213, label %10

10:                                               ; preds = %1
  %11 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %12 = icmp eq i32 %11, 80
  br i1 %12, label %13, label %30

13:                                               ; preds = %10
  %14 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %15 = icmp eq i32 %14, 53
  br i1 %15, label %16, label %30

16:                                               ; preds = %13
  %17 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %18 = icmp eq i32 %17, 32
  br i1 %18, label %28, label %19

19:                                               ; preds = %16
  %20 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %21 = icmp eq i32 %20, 9
  br i1 %21, label %28, label %22

22:                                               ; preds = %19
  %23 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %24 = icmp eq i32 %23, 10
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %27 = icmp eq i32 %26, 13
  br i1 %27, label %28, label %30

28:                                               ; preds = %25, %22, %19, %16
  %29 = load i32, i32* @pos, align 4
  store i32 %29, i32* @_ZZ8pgmModelR5MixerE3pgm, align 4
  store i32 0, i32* @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4
  store i32 0, i32* @_ZZ8pgmModelR5MixerE1w, align 4
  store i32 0, i32* %2, align 4
  br label %238

30:                                               ; preds = %25, %13, %10
  %31 = load i32, i32* @_ZZ8pgmModelR5MixerE3pgm, align 4
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %211

33:                                               ; preds = %30
  %34 = load i32, i32* @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4
  %35 = icmp ne i32 %34, 3
  br i1 %35, label %36, label %211

36:                                               ; preds = %33
  %37 = load i32, i32* @_ZZ8pgmModelR5MixerE3pgm, align 4
  store i32 %37, i32* %7, align 4
  br label %38

38:                                               ; preds = %183, %36
  %39 = load i32, i32* %7, align 4
  %40 = load i32, i32* @pos, align 4
  %41 = sub nsw i32 %40, 1
  %42 = icmp slt i32 %39, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = load i32, i32* @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4
  %45 = icmp slt i32 %44, 3
  br label %46

46:                                               ; preds = %43, %38
  %47 = phi i1 [ false, %38 ], [ %45, %43 ]
  br i1 %47, label %48, label %186

48:                                               ; preds = %46
  br label %49

49:                                               ; preds = %83, %48
  %50 = load i32, i32* @pos, align 4
  %51 = load i32, i32* %7, align 4
  %52 = sub nsw i32 %50, %51
  %53 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %52)
  %54 = icmp eq i32 %53, 32
  br i1 %54, label %73, label %55

55:                                               ; preds = %49
  %56 = load i32, i32* @pos, align 4
  %57 = load i32, i32* %7, align 4
  %58 = sub nsw i32 %56, %57
  %59 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %58)
  %60 = icmp eq i32 %59, 9
  br i1 %60, label %73, label %61

61:                                               ; preds = %55
  %62 = load i32, i32* @pos, align 4
  %63 = load i32, i32* %7, align 4
  %64 = sub nsw i32 %62, %63
  %65 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %64)
  %66 = icmp eq i32 %65, 10
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = load i32, i32* @pos, align 4
  %69 = load i32, i32* %7, align 4
  %70 = sub nsw i32 %68, %69
  %71 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %70)
  %72 = icmp eq i32 %71, 13
  br label %73

73:                                               ; preds = %67, %61, %55, %49
  %74 = phi i1 [ true, %61 ], [ true, %55 ], [ true, %49 ], [ %72, %67 ]
  %75 = zext i1 %74 to i32
  store i32 %75, i32* %4, align 4
  br i1 %74, label %76, label %81

76:                                               ; preds = %73
  %77 = load i32, i32* %7, align 4
  %78 = load i32, i32* @pos, align 4
  %79 = sub nsw i32 %78, 1
  %80 = icmp slt i32 %77, %79
  br label %81

81:                                               ; preds = %76, %73
  %82 = phi i1 [ false, %73 ], [ %80, %76 ]
  br i1 %82, label %83, label %86

83:                                               ; preds = %81
  %84 = load i32, i32* %7, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %7, align 4
  br label %49

86:                                               ; preds = %81
  %87 = load i32, i32* %4, align 4
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  br label %186

90:                                               ; preds = %86
  %91 = load i32, i32* @pos, align 4
  %92 = load i32, i32* %7, align 4
  %93 = sub nsw i32 %91, %92
  %94 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %93)
  %95 = icmp eq i32 %94, 35
  br i1 %95, label %96, label %120

96:                                               ; preds = %90
  br label %97

97:                                               ; preds = %117, %96
  %98 = load i32, i32* %7, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %7, align 4
  br label %100

100:                                              ; preds = %97
  %101 = load i32, i32* @pos, align 4
  %102 = load i32, i32* %7, align 4
  %103 = sub nsw i32 %101, %102
  %104 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %103)
  %105 = icmp eq i32 %104, 10
  br i1 %105, label %117, label %106

106:                                              ; preds = %100
  %107 = load i32, i32* @pos, align 4
  %108 = load i32, i32* %7, align 4
  %109 = sub nsw i32 %107, %108
  %110 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %109)
  %111 = icmp eq i32 %110, 13
  br i1 %111, label %117, label %112

112:                                              ; preds = %106
  %113 = load i32, i32* %7, align 4
  %114 = load i32, i32* @pos, align 4
  %115 = sub nsw i32 %114, 1
  %116 = icmp slt i32 %113, %115
  br label %117

117:                                              ; preds = %112, %106, %100
  %118 = phi i1 [ false, %106 ], [ false, %100 ], [ %116, %112 ]
  br i1 %118, label %97, label %119

119:                                              ; preds = %117
  br label %182

120:                                              ; preds = %90
  store i32 0, i32* %6, align 4
  br label %121

121:                                              ; preds = %168, %120
  %122 = load i32, i32* @pos, align 4
  %123 = load i32, i32* %7, align 4
  %124 = sub nsw i32 %122, %123
  %125 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %124)
  %126 = trunc i32 %125 to i8
  %127 = load i32, i32* %6, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %6, align 4
  %129 = sext i32 %127 to i64
  %130 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 %129
  store i8 %126, i8* %130, align 1
  %131 = load i32, i32* %7, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %7, align 4
  br label %133

133:                                              ; preds = %121
  %134 = load i32, i32* @pos, align 4
  %135 = load i32, i32* %7, align 4
  %136 = sub nsw i32 %134, %135
  %137 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %136)
  %138 = icmp eq i32 %137, 32
  br i1 %138, label %157, label %139

139:                                              ; preds = %133
  %140 = load i32, i32* @pos, align 4
  %141 = load i32, i32* %7, align 4
  %142 = sub nsw i32 %140, %141
  %143 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %142)
  %144 = icmp eq i32 %143, 9
  br i1 %144, label %157, label %145

145:                                              ; preds = %139
  %146 = load i32, i32* @pos, align 4
  %147 = load i32, i32* %7, align 4
  %148 = sub nsw i32 %146, %147
  %149 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %148)
  %150 = icmp eq i32 %149, 10
  br i1 %150, label %157, label %151

151:                                              ; preds = %145
  %152 = load i32, i32* @pos, align 4
  %153 = load i32, i32* %7, align 4
  %154 = sub nsw i32 %152, %153
  %155 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %154)
  %156 = icmp eq i32 %155, 13
  br label %157

157:                                              ; preds = %151, %145, %139, %133
  %158 = phi i1 [ true, %145 ], [ true, %139 ], [ true, %133 ], [ %156, %151 ]
  %159 = zext i1 %158 to i32
  store i32 %159, i32* %4, align 4
  br i1 %158, label %168, label %160

160:                                              ; preds = %157
  %161 = load i32, i32* %7, align 4
  %162 = load i32, i32* @pos, align 4
  %163 = sub nsw i32 %162, 1
  %164 = icmp slt i32 %161, %163
  br i1 %164, label %165, label %168

165:                                              ; preds = %160
  %166 = load i32, i32* %6, align 4
  %167 = icmp slt i32 %166, 32
  br label %168

168:                                              ; preds = %165, %160, %157
  %169 = phi i1 [ false, %160 ], [ false, %157 ], [ %167, %165 ]
  br i1 %169, label %121, label %170

170:                                              ; preds = %168
  %171 = load i32, i32* %4, align 4
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %173, label %181

173:                                              ; preds = %170
  %174 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %175 = call i32 @atoi(i8* %174) #19
  %176 = load i32, i32* @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4
  %177 = add nsw i32 %176, 1
  store i32 %177, i32* @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4
  %178 = sext i32 %176 to i64
  %179 = getelementptr inbounds [3 x i32], [3 x i32]* @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 %178
  store i32 %175, i32* %179, align 4
  %180 = load i32, i32* %7, align 4
  store i32 %180, i32* @_ZZ8pgmModelR5MixerE3pgm, align 4
  br label %181

181:                                              ; preds = %173, %170
  br label %182

182:                                              ; preds = %181, %119
  br label %183

183:                                              ; preds = %182
  %184 = load i32, i32* %7, align 4
  %185 = add nsw i32 %184, 1
  store i32 %185, i32* %7, align 4
  br label %38

186:                                              ; preds = %89, %46
  %187 = load i32, i32* @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4
  %188 = icmp eq i32 %187, 3
  br i1 %188, label %189, label %210

189:                                              ; preds = %186
  %190 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 2), align 4
  %191 = icmp eq i32 %190, 255
  br i1 %191, label %192, label %209

192:                                              ; preds = %189
  %193 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 0), align 4
  %194 = icmp sgt i32 %193, 0
  br i1 %194, label %195, label %209

195:                                              ; preds = %192
  %196 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 1), align 4
  %197 = icmp sgt i32 %196, 0
  br i1 %197, label %198, label %209

198:                                              ; preds = %195
  %199 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 0), align 4
  store i32 %199, i32* @_ZZ8pgmModelR5MixerE1w, align 4
  %200 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 1), align 4
  store i32 %200, i32* @_ZZ8pgmModelR5MixerE1h, align 4
  %201 = load i32, i32* @pos, align 4
  %202 = load i32, i32* @_ZZ8pgmModelR5MixerE1w, align 4
  %203 = load i32, i32* @_ZZ8pgmModelR5MixerE1h, align 4
  %204 = mul nsw i32 %202, %203
  %205 = add nsw i32 %201, %204
  store i32 %205, i32* @_ZZ8pgmModelR5MixerE3eoi, align 4
  %206 = load i32, i32* @_ZZ8pgmModelR5MixerE1w, align 4
  %207 = load i32, i32* @_ZZ8pgmModelR5MixerE1h, align 4
  %208 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i32 %206, i32 %207)
  br label %209

209:                                              ; preds = %198, %195, %192, %189
  br label %210

210:                                              ; preds = %209, %186
  br label %211

211:                                              ; preds = %210, %33, %30
  br label %212

212:                                              ; preds = %211
  br label %213

213:                                              ; preds = %212, %1
  %214 = load i32, i32* @pos, align 4
  %215 = load i32, i32* @_ZZ8pgmModelR5MixerE3eoi, align 4
  %216 = icmp sgt i32 %214, %215
  br i1 %216, label %217, label %218

217:                                              ; preds = %213
  store i32 0, i32* @_ZZ8pgmModelR5MixerE1w, align 4
  store i32 0, i32* %2, align 4
  br label %238

218:                                              ; preds = %213
  %219 = load %class.Mixer*, %class.Mixer** %3, align 8
  %220 = load i32, i32* @_ZZ8pgmModelR5MixerE1w, align 4
  call void @_Z9model8bitR5Mixeri(%class.Mixer* dereferenceable(136) %219, i32 %220)
  %221 = load i32, i32* @_ZZ8pgmModelR5MixerE3col, align 4
  %222 = add nsw i32 %221, 1
  store i32 %222, i32* @_ZZ8pgmModelR5MixerE3col, align 4
  %223 = icmp sge i32 %222, 8
  br i1 %223, label %224, label %225

224:                                              ; preds = %218
  store i32 0, i32* @_ZZ8pgmModelR5MixerE3col, align 4
  br label %225

225:                                              ; preds = %224, %218
  %226 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN5Mixer3setEii(%class.Mixer* %226, i32 2, i32 8)
  %227 = load %class.Mixer*, %class.Mixer** %3, align 8
  %228 = load i32, i32* @_ZZ8pgmModelR5MixerE3col, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* %227, i32 %228, i32 8)
  %229 = load %class.Mixer*, %class.Mixer** %3, align 8
  %230 = load i32, i32* @_ZZ8pgmModelR5MixerE1w, align 4
  %231 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %230)
  %232 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %233 = add nsw i32 %231, %232
  %234 = ashr i32 %233, 4
  call void @_ZN5Mixer3setEii(%class.Mixer* %229, i32 %234, i32 32)
  %235 = load %class.Mixer*, %class.Mixer** %3, align 8
  %236 = load i32, i32* @c0, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* %235, i32 %236, i32 256)
  %237 = load i32, i32* @_ZZ8pgmModelR5MixerE1w, align 4
  store i32 %237, i32* %2, align 4
  br label %238

238:                                              ; preds = %225, %217, %28
  %239 = load i32, i32* %2, align 4
  ret i32 %239
}

; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #9

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5Mixer3setEii(%class.Mixer* %0, i32 %1, i32 %2) #0 comdat align 2 {
  %4 = alloca %class.Mixer*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.Mixer*, %class.Mixer** %4, align 8
  %8 = getelementptr inbounds %class.Mixer, %class.Mixer* %7, i32 0, i32 7
  %9 = load i32, i32* %8, align 4
  %10 = load i32, i32* %5, align 4
  %11 = add nsw i32 %9, %10
  %12 = getelementptr inbounds %class.Mixer, %class.Mixer* %7, i32 0, i32 5
  %13 = getelementptr inbounds %class.Mixer, %class.Mixer* %7, i32 0, i32 6
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 8
  %16 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %12, i32 %14)
  store i32 %11, i32* %16, align 4
  %17 = load i32, i32* %6, align 4
  %18 = getelementptr inbounds %class.Mixer, %class.Mixer* %7, i32 0, i32 7
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %19, %17
  store i32 %20, i32* %18, align 4
  ret void
}

; Function Attrs: noinline uwtable
define dso_local i32 @_Z9bmpModel8R5Mixer(%class.Mixer* dereferenceable(136) %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %class.Mixer*, align 8
  store %class.Mixer* %0, %class.Mixer** %3, align 8
  %4 = load i32, i32* @bpos, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %40

6:                                                ; preds = %1
  %7 = call i32 @_Z2i4i(i32 44)
  %8 = icmp ult i32 %7, 1079
  br i1 %8, label %9, label %25

9:                                                ; preds = %6
  %10 = call i32 @_Z2i4i(i32 40)
  %11 = icmp eq i32 %10, 40
  br i1 %11, label %12, label %25

12:                                               ; preds = %9
  %13 = call i32 @_Z2i4i(i32 24)
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %25

15:                                               ; preds = %12
  %16 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 26)
  %17 = icmp eq i32 %16, 8
  br i1 %17, label %18, label %25

18:                                               ; preds = %15
  %19 = call i32 @_Z2i4i(i32 36)
  store i32 %19, i32* @_ZZ9bmpModel8R5MixerE2w1, align 4
  %20 = call i32 @_Z2i4i(i32 32)
  store i32 %20, i32* @_ZZ9bmpModel8R5MixerE1h, align 4
  %21 = load i32, i32* @pos, align 4
  %22 = call i32 @_Z2i4i(i32 44)
  %23 = add i32 %21, %22
  %24 = sub i32 %23, 54
  store i32 %24, i32* @_ZZ9bmpModel8R5MixerE4ibmp, align 4
  br label %25

25:                                               ; preds = %18, %15, %12, %9, %6
  %26 = load i32, i32* @_ZZ9bmpModel8R5MixerE4ibmp, align 4
  %27 = load i32, i32* @pos, align 4
  %28 = icmp eq i32 %26, %27
  br i1 %28, label %29, label %39

29:                                               ; preds = %25
  %30 = load i32, i32* @_ZZ9bmpModel8R5MixerE2w1, align 4
  store i32 %30, i32* @_ZZ9bmpModel8R5MixerE1w, align 4
  %31 = load i32, i32* @pos, align 4
  %32 = load i32, i32* @_ZZ9bmpModel8R5MixerE1w, align 4
  %33 = load i32, i32* @_ZZ9bmpModel8R5MixerE1h, align 4
  %34 = mul nsw i32 %32, %33
  %35 = add nsw i32 %31, %34
  store i32 %35, i32* @_ZZ9bmpModel8R5MixerE3eoi, align 4
  %36 = load i32, i32* @_ZZ9bmpModel8R5MixerE1w, align 4
  %37 = load i32, i32* @_ZZ9bmpModel8R5MixerE1h, align 4
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i32 %36, i32 %37)
  store i32 0, i32* @_ZZ9bmpModel8R5MixerE4ibmp, align 4
  br label %39

39:                                               ; preds = %29, %25
  br label %40

40:                                               ; preds = %39, %1
  %41 = load i32, i32* @pos, align 4
  %42 = load i32, i32* @_ZZ9bmpModel8R5MixerE3eoi, align 4
  %43 = icmp sgt i32 %41, %42
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  store i32 0, i32* @_ZZ9bmpModel8R5MixerE1w, align 4
  store i32 0, i32* %2, align 4
  br label %65

45:                                               ; preds = %40
  %46 = load %class.Mixer*, %class.Mixer** %3, align 8
  %47 = load i32, i32* @_ZZ9bmpModel8R5MixerE1w, align 4
  call void @_Z9model8bitR5Mixeri(%class.Mixer* dereferenceable(136) %46, i32 %47)
  %48 = load i32, i32* @_ZZ9bmpModel8R5MixerE3col, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* @_ZZ9bmpModel8R5MixerE3col, align 4
  %50 = icmp sge i32 %49, 8
  br i1 %50, label %51, label %52

51:                                               ; preds = %45
  store i32 0, i32* @_ZZ9bmpModel8R5MixerE3col, align 4
  br label %52

52:                                               ; preds = %51, %45
  %53 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN5Mixer3setEii(%class.Mixer* %53, i32 2, i32 8)
  %54 = load %class.Mixer*, %class.Mixer** %3, align 8
  %55 = load i32, i32* @_ZZ9bmpModel8R5MixerE3col, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* %54, i32 %55, i32 8)
  %56 = load %class.Mixer*, %class.Mixer** %3, align 8
  %57 = load i32, i32* @_ZZ9bmpModel8R5MixerE1w, align 4
  %58 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %57)
  %59 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %60 = add nsw i32 %58, %59
  %61 = ashr i32 %60, 4
  call void @_ZN5Mixer3setEii(%class.Mixer* %56, i32 %61, i32 32)
  %62 = load %class.Mixer*, %class.Mixer** %3, align 8
  %63 = load i32, i32* @c0, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* %62, i32 %63, i32 256)
  %64 = load i32, i32* @_ZZ9bmpModel8R5MixerE1w, align 4
  store i32 %64, i32* %2, align 4
  br label %65

65:                                               ; preds = %52, %44
  %66 = load i32, i32* %2, align 4
  ret i32 %66
}

; Function Attrs: noinline uwtable
define dso_local i32 @_Z9rgbModel8R5Mixer(%class.Mixer* dereferenceable(136) %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %class.Mixer*, align 8
  %4 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %3, align 8
  store i32 0, i32* %4, align 4
  %5 = load i32, i32* @bpos, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %41

7:                                                ; preds = %1
  %8 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 507)
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %40

10:                                               ; preds = %7
  %11 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 506)
  %12 = icmp eq i32 %11, 218
  br i1 %12, label %13, label %40

13:                                               ; preds = %10
  %14 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 505)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %40

16:                                               ; preds = %13
  %17 = call i32 @_Z2i2i(i32 496)
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %40

19:                                               ; preds = %16
  %20 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 501)
  %21 = and i32 %20, 255
  %22 = mul nsw i32 %21, 256
  %23 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 500)
  %24 = and i32 %23, 255
  %25 = or i32 %22, %24
  store i32 %25, i32* @_ZZ9rgbModel8R5MixerE1w, align 4
  %26 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 499)
  %27 = and i32 %26, 255
  %28 = mul nsw i32 %27, 256
  %29 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 498)
  %30 = and i32 %29, 255
  %31 = or i32 %28, %30
  store i32 %31, i32* %4, align 4
  %32 = load i32, i32* @pos, align 4
  %33 = load i32, i32* @_ZZ9rgbModel8R5MixerE1w, align 4
  %34 = load i32, i32* %4, align 4
  %35 = mul nsw i32 %33, %34
  %36 = add nsw i32 %32, %35
  store i32 %36, i32* @_ZZ9rgbModel8R5MixerE3eoi, align 4
  %37 = load i32, i32* @_ZZ9rgbModel8R5MixerE1w, align 4
  %38 = load i32, i32* %4, align 4
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i32 %37, i32 %38)
  br label %40

40:                                               ; preds = %19, %16, %13, %10, %7
  br label %41

41:                                               ; preds = %40, %1
  %42 = load i32, i32* @pos, align 4
  %43 = load i32, i32* @_ZZ9rgbModel8R5MixerE3eoi, align 4
  %44 = icmp sgt i32 %42, %43
  br i1 %44, label %45, label %46

45:                                               ; preds = %41
  store i32 0, i32* @_ZZ9rgbModel8R5MixerE1w, align 4
  store i32 0, i32* %2, align 4
  br label %66

46:                                               ; preds = %41
  %47 = load %class.Mixer*, %class.Mixer** %3, align 8
  %48 = load i32, i32* @_ZZ9rgbModel8R5MixerE1w, align 4
  call void @_Z9model8bitR5Mixeri(%class.Mixer* dereferenceable(136) %47, i32 %48)
  %49 = load i32, i32* @_ZZ9rgbModel8R5MixerE3col, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* @_ZZ9rgbModel8R5MixerE3col, align 4
  %51 = icmp sge i32 %50, 8
  br i1 %51, label %52, label %53

52:                                               ; preds = %46
  store i32 0, i32* @_ZZ9rgbModel8R5MixerE3col, align 4
  br label %53

53:                                               ; preds = %52, %46
  %54 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN5Mixer3setEii(%class.Mixer* %54, i32 2, i32 8)
  %55 = load %class.Mixer*, %class.Mixer** %3, align 8
  %56 = load i32, i32* @_ZZ9rgbModel8R5MixerE3col, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* %55, i32 %56, i32 8)
  %57 = load %class.Mixer*, %class.Mixer** %3, align 8
  %58 = load i32, i32* @_ZZ9rgbModel8R5MixerE1w, align 4
  %59 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %58)
  %60 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %61 = add nsw i32 %59, %60
  %62 = ashr i32 %61, 4
  call void @_ZN5Mixer3setEii(%class.Mixer* %57, i32 %62, i32 32)
  %63 = load %class.Mixer*, %class.Mixer** %3, align 8
  %64 = load i32, i32* @c0, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* %63, i32 %64, i32 256)
  %65 = load i32, i32* @_ZZ9rgbModel8R5MixerE1w, align 4
  store i32 %65, i32* %2, align 4
  br label %66

66:                                               ; preds = %53, %45
  %67 = load i32, i32* %2, align 4
  ret i32 %67
}

; Function Attrs: noinline uwtable
define dso_local void @_Z4dumpPKci(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load i8*, i8** %3, align 8
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i8* %7)
  %9 = load i32, i32* %4, align 4
  %10 = add nsw i32 %9, 2
  %11 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %10)
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = mul nsw i32 %13, 256
  %15 = load i32, i32* %4, align 4
  %16 = add nsw i32 %15, 3
  %17 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %16)
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = add nsw i32 %14, %19
  store i32 %20, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %21

21:                                               ; preds = %34, %2
  %22 = load i32, i32* %6, align 4
  %23 = load i32, i32* %5, align 4
  %24 = add nsw i32 %23, 2
  %25 = icmp slt i32 %22, %24
  br i1 %25, label %26, label %37

26:                                               ; preds = %21
  %27 = load i32, i32* %4, align 4
  %28 = load i32, i32* %6, align 4
  %29 = add nsw i32 %27, %28
  %30 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %29)
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i32 %32)
  br label %34

34:                                               ; preds = %26
  %35 = load i32, i32* %6, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %6, align 4
  br label %21

37:                                               ; preds = %21
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @_Z8update_kiiRiS_(i32 %0, i32 %1, i32* dereferenceable(4) %2, i32* dereferenceable(4) %3) #1 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i32 %1, i32* %6, align 4
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %12 = load i32, i32* %5, align 4
  %13 = load i32*, i32** %7, align 8
  %14 = load i32, i32* %13, align 4
  %15 = sub nsw i32 %14, 1
  %16 = mul nsw i32 %12, %15
  %17 = load i32, i32* %6, align 4
  %18 = load i32*, i32** %7, align 8
  %19 = load i32, i32* %18, align 4
  %20 = sub nsw i32 %19, 1
  %21 = sub nsw i32 8, %20
  %22 = mul nsw i32 %17, %21
  %23 = add nsw i32 %16, %22
  %24 = call i32 @abs(i32 %23) #12
  %25 = sdiv i32 %24, 8
  store i32 %25, i32* %9, align 4
  %26 = load i32, i32* %5, align 4
  %27 = load i32*, i32** %7, align 8
  %28 = load i32, i32* %27, align 4
  %29 = add nsw i32 %28, 0
  %30 = mul nsw i32 %26, %29
  %31 = load i32, i32* %6, align 4
  %32 = load i32*, i32** %7, align 8
  %33 = load i32, i32* %32, align 4
  %34 = add nsw i32 %33, 0
  %35 = sub nsw i32 8, %34
  %36 = mul nsw i32 %31, %35
  %37 = add nsw i32 %30, %36
  %38 = call i32 @abs(i32 %37) #12
  %39 = sdiv i32 %38, 8
  store i32 %39, i32* %10, align 4
  %40 = load i32, i32* %5, align 4
  %41 = load i32*, i32** %7, align 8
  %42 = load i32, i32* %41, align 4
  %43 = add nsw i32 %42, 1
  %44 = mul nsw i32 %40, %43
  %45 = load i32, i32* %6, align 4
  %46 = load i32*, i32** %7, align 8
  %47 = load i32, i32* %46, align 4
  %48 = add nsw i32 %47, 1
  %49 = sub nsw i32 8, %48
  %50 = mul nsw i32 %45, %49
  %51 = add nsw i32 %44, %50
  %52 = call i32 @abs(i32 %51) #12
  %53 = sdiv i32 %52, 8
  store i32 %53, i32* %11, align 4
  %54 = load i32*, i32** %7, align 8
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %4
  %58 = load i32, i32* %10, align 4
  store i32 %58, i32* %9, align 4
  br label %66

59:                                               ; preds = %4
  %60 = load i32*, i32** %7, align 8
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 8
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  %64 = load i32, i32* %10, align 4
  store i32 %64, i32* %11, align 4
  br label %65

65:                                               ; preds = %63, %59
  br label %66

66:                                               ; preds = %65, %57
  %67 = load i32, i32* %9, align 4
  %68 = load i32, i32* %10, align 4
  %69 = icmp slt i32 %67, %68
  br i1 %69, label %70, label %78

70:                                               ; preds = %66
  %71 = load i32, i32* %9, align 4
  %72 = load i32, i32* %11, align 4
  %73 = icmp slt i32 %71, %72
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  %75 = load i32*, i32** %8, align 8
  %76 = load i32, i32* %75, align 4
  %77 = add nsw i32 %76, -1
  store i32 %77, i32* %75, align 4
  br label %78

78:                                               ; preds = %74, %70, %66
  %79 = load i32, i32* %11, align 4
  %80 = load i32, i32* %9, align 4
  %81 = icmp slt i32 %79, %80
  br i1 %81, label %82, label %90

82:                                               ; preds = %78
  %83 = load i32, i32* %11, align 4
  %84 = load i32, i32* %10, align 4
  %85 = icmp slt i32 %83, %84
  br i1 %85, label %86, label %90

86:                                               ; preds = %82
  %87 = load i32*, i32** %8, align 8
  %88 = load i32, i32* %87, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %87, align 4
  br label %90

90:                                               ; preds = %86, %82, %78
  %91 = load i32*, i32** %8, align 8
  %92 = load i32, i32* %91, align 4
  %93 = icmp slt i32 %92, -2
  br i1 %93, label %94, label %99

94:                                               ; preds = %90
  %95 = load i32*, i32** %7, align 8
  %96 = load i32, i32* %95, align 4
  %97 = add nsw i32 %96, -1
  store i32 %97, i32* %95, align 4
  %98 = load i32*, i32** %8, align 8
  store i32 0, i32* %98, align 4
  br label %99

99:                                               ; preds = %94, %90
  %100 = load i32*, i32** %8, align 8
  %101 = load i32, i32* %100, align 4
  %102 = icmp sgt i32 %101, 2
  br i1 %102, label %103, label %108

103:                                              ; preds = %99
  %104 = load i32*, i32** %7, align 8
  %105 = load i32, i32* %104, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = load i32*, i32** %8, align 8
  store i32 0, i32* %107, align 4
  br label %108

108:                                              ; preds = %103, %99
  ret void
}

; Function Attrs: nounwind readnone
declare dso_local i32 @abs(i32) #11

; Function Attrs: noinline uwtable
define dso_local i32 @_Z9jpegModelR5Mixer(%class.Mixer* dereferenceable(136) %0) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca i32, align 4
  %3 = alloca %class.Mixer*, align 8
  %4 = alloca i8*
  %5 = alloca i32
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.HUF*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca %struct.HUF*, align 8
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  %61 = alloca i32, align 4
  %62 = alloca i32, align 4
  %63 = alloca i32, align 4
  %64 = alloca i32, align 4
  %65 = alloca i32, align 4
  %66 = alloca i32, align 4
  %67 = alloca i32, align 4
  %68 = alloca i32, align 4
  %69 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %3, align 8
  %70 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE2ht to i8*) acquire, align 8
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %78, !prof !2

72:                                               ; preds = %1
  %73 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE2ht) #2
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %72
  invoke void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* @_ZZ9jpegModelR5MixerE2ht, i32 8)
          to label %76 unwind label %211

76:                                               ; preds = %75
  %77 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array*)* @_ZN5ArrayIiLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array* @_ZZ9jpegModelR5MixerE2ht to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE2ht) #2
  br label %78

78:                                               ; preds = %76, %72, %1
  %79 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE3huf to i8*) acquire, align 8
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %87, !prof !2

81:                                               ; preds = %78
  %82 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE3huf) #2
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %81
  invoke void @_ZN5ArrayI3HUFLi0EEC2Ei(%class.Array.7* @_ZZ9jpegModelR5MixerE3huf, i32 128)
          to label %85 unwind label %215

85:                                               ; preds = %84
  %86 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array.7*)* @_ZN5ArrayI3HUFLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array.7* @_ZZ9jpegModelR5MixerE3huf to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE3huf) #2
  br label %87

87:                                               ; preds = %85, %81, %78
  %88 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE4hbuf to i8*) acquire, align 8
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %96, !prof !2

90:                                               ; preds = %87
  %91 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE4hbuf) #2
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %90
  invoke void @_ZN5ArrayIhLi0EEC2Ei(%class.Array.0* @_ZZ9jpegModelR5MixerE4hbuf, i32 2048)
          to label %94 unwind label %219

94:                                               ; preds = %93
  %95 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array.0*)* @_ZN5ArrayIhLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array.0* @_ZZ9jpegModelR5MixerE4hbuf to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE4hbuf) #2
  br label %96

96:                                               ; preds = %94, %90, %87
  %97 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE5color to i8*) acquire, align 8
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %105, !prof !2

99:                                               ; preds = %96
  %100 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE5color) #2
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %99
  invoke void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* @_ZZ9jpegModelR5MixerE5color, i32 10)
          to label %103 unwind label %223

103:                                              ; preds = %102
  %104 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array*)* @_ZN5ArrayIiLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array* @_ZZ9jpegModelR5MixerE5color to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE5color) #2
  br label %105

105:                                              ; preds = %103, %99, %96
  %106 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE4pred to i8*) acquire, align 8
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %114, !prof !2

108:                                              ; preds = %105
  %109 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE4pred) #2
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %108
  invoke void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* @_ZZ9jpegModelR5MixerE4pred, i32 4)
          to label %112 unwind label %227

112:                                              ; preds = %111
  %113 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array*)* @_ZN5ArrayIiLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array* @_ZZ9jpegModelR5MixerE4pred to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE4pred) #2
  br label %114

114:                                              ; preds = %112, %108, %105
  %115 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE4cbuf to i8*) acquire, align 8
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %123, !prof !2

117:                                              ; preds = %114
  %118 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE4cbuf) #2
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %117
  invoke void @_ZN3BufC2Ei(%class.Buf* @_ZZ9jpegModelR5MixerE4cbuf, i32 131072)
          to label %121 unwind label %231

121:                                              ; preds = %120
  %122 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Buf*)* @_ZN3BufD2Ev to void (i8*)*), i8* bitcast (%class.Buf* @_ZZ9jpegModelR5MixerE4cbuf to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE4cbuf) #2
  br label %123

123:                                              ; preds = %121, %117, %114
  %124 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE5cbuf2 to i8*) acquire, align 8
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %132, !prof !2

126:                                              ; preds = %123
  %127 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE5cbuf2) #2
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %126
  invoke void @_ZN6IntBufC2Ei(%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2, i32 131072)
          to label %130 unwind label %235

130:                                              ; preds = %129
  %131 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.IntBuf*)* @_ZN6IntBufD2Ev to void (i8*)*), i8* bitcast (%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE5cbuf2) #2
  br label %132

132:                                              ; preds = %130, %126, %123
  %133 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE8adv_pred to i8*) acquire, align 8
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %135, label %141, !prof !2

135:                                              ; preds = %132
  %136 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE8adv_pred) #2
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %135
  invoke void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 7)
          to label %139 unwind label %239

139:                                              ; preds = %138
  %140 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array*)* @_ZN5ArrayIiLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE8adv_pred) #2
  br label %141

141:                                              ; preds = %139, %135, %132
  %142 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE4sumu to i8*) acquire, align 8
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %150, !prof !2

144:                                              ; preds = %141
  %145 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE4sumu) #2
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %144
  invoke void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* @_ZZ9jpegModelR5MixerE4sumu, i32 8)
          to label %148 unwind label %243

148:                                              ; preds = %147
  %149 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array*)* @_ZN5ArrayIiLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array* @_ZZ9jpegModelR5MixerE4sumu to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE4sumu) #2
  br label %150

150:                                              ; preds = %148, %144, %141
  %151 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE4sumv to i8*) acquire, align 8
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %153, label %159, !prof !2

153:                                              ; preds = %150
  %154 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE4sumv) #2
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %153
  invoke void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* @_ZZ9jpegModelR5MixerE4sumv, i32 8)
          to label %157 unwind label %247

157:                                              ; preds = %156
  %158 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array*)* @_ZN5ArrayIiLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array* @_ZZ9jpegModelR5MixerE4sumv to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE4sumv) #2
  br label %159

159:                                              ; preds = %157, %153, %150
  %160 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE2ls to i8*) acquire, align 8
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %162, label %168, !prof !2

162:                                              ; preds = %159
  %163 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE2ls) #2
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %165, label %168

165:                                              ; preds = %162
  invoke void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* @_ZZ9jpegModelR5MixerE2ls, i32 10)
          to label %166 unwind label %251

166:                                              ; preds = %165
  %167 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array*)* @_ZN5ArrayIiLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array* @_ZZ9jpegModelR5MixerE2ls to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE2ls) #2
  br label %168

168:                                              ; preds = %166, %162, %159
  %169 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE3lcp to i8*) acquire, align 8
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %171, label %177, !prof !2

171:                                              ; preds = %168
  %172 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE3lcp) #2
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %177

174:                                              ; preds = %171
  invoke void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 4)
          to label %175 unwind label %255

175:                                              ; preds = %174
  %176 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array*)* @_ZN5ArrayIiLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array* @_ZZ9jpegModelR5MixerE3lcp to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE3lcp) #2
  br label %177

177:                                              ; preds = %175, %171, %168
  %178 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE4zpos to i8*) acquire, align 8
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %180, label %186, !prof !2

180:                                              ; preds = %177
  %181 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE4zpos) #2
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %183, label %186

183:                                              ; preds = %180
  invoke void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* @_ZZ9jpegModelR5MixerE4zpos, i32 64)
          to label %184 unwind label %259

184:                                              ; preds = %183
  %185 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array*)* @_ZN5ArrayIiLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array* @_ZZ9jpegModelR5MixerE4zpos to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE4zpos) #2
  br label %186

186:                                              ; preds = %184, %180, %177
  %187 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE4qtab to i8*) acquire, align 8
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %195, !prof !2

189:                                              ; preds = %186
  %190 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE4qtab) #2
  %191 = icmp ne i32 %190, 0
  br i1 %191, label %192, label %195

192:                                              ; preds = %189
  invoke void @_ZN5ArrayIhLi0EEC2Ei(%class.Array.0* @_ZZ9jpegModelR5MixerE4qtab, i32 256)
          to label %193 unwind label %263

193:                                              ; preds = %192
  %194 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array.0*)* @_ZN5ArrayIhLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array.0* @_ZZ9jpegModelR5MixerE4qtab to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE4qtab) #2
  br label %195

195:                                              ; preds = %193, %189, %186
  %196 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE4qmap to i8*) acquire, align 8
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %198, label %204, !prof !2

198:                                              ; preds = %195
  %199 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE4qmap) #2
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %198
  invoke void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* @_ZZ9jpegModelR5MixerE4qmap, i32 10)
          to label %202 unwind label %267

202:                                              ; preds = %201
  %203 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array*)* @_ZN5ArrayIiLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array* @_ZZ9jpegModelR5MixerE4qmap to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE4qmap) #2
  br label %204

204:                                              ; preds = %202, %198, %195
  %205 = load i32, i32* @bpos, align 4
  %206 = icmp ne i32 %205, 0
  br i1 %206, label %271, label %207

207:                                              ; preds = %204
  %208 = load i32, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %209 = icmp sgt i32 %208, 1
  %210 = zext i1 %209 to i32
  store i32 %210, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  br label %271

211:                                              ; preds = %75
  %212 = landingpad { i8*, i32 }
          cleanup
  %213 = extractvalue { i8*, i32 } %212, 0
  store i8* %213, i8** %4, align 8
  %214 = extractvalue { i8*, i32 } %212, 1
  store i32 %214, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE2ht) #2
  br label %2746

215:                                              ; preds = %84
  %216 = landingpad { i8*, i32 }
          cleanup
  %217 = extractvalue { i8*, i32 } %216, 0
  store i8* %217, i8** %4, align 8
  %218 = extractvalue { i8*, i32 } %216, 1
  store i32 %218, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE3huf) #2
  br label %2746

219:                                              ; preds = %93
  %220 = landingpad { i8*, i32 }
          cleanup
  %221 = extractvalue { i8*, i32 } %220, 0
  store i8* %221, i8** %4, align 8
  %222 = extractvalue { i8*, i32 } %220, 1
  store i32 %222, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE4hbuf) #2
  br label %2746

223:                                              ; preds = %102
  %224 = landingpad { i8*, i32 }
          cleanup
  %225 = extractvalue { i8*, i32 } %224, 0
  store i8* %225, i8** %4, align 8
  %226 = extractvalue { i8*, i32 } %224, 1
  store i32 %226, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE5color) #2
  br label %2746

227:                                              ; preds = %111
  %228 = landingpad { i8*, i32 }
          cleanup
  %229 = extractvalue { i8*, i32 } %228, 0
  store i8* %229, i8** %4, align 8
  %230 = extractvalue { i8*, i32 } %228, 1
  store i32 %230, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE4pred) #2
  br label %2746

231:                                              ; preds = %120
  %232 = landingpad { i8*, i32 }
          cleanup
  %233 = extractvalue { i8*, i32 } %232, 0
  store i8* %233, i8** %4, align 8
  %234 = extractvalue { i8*, i32 } %232, 1
  store i32 %234, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE4cbuf) #2
  br label %2746

235:                                              ; preds = %129
  %236 = landingpad { i8*, i32 }
          cleanup
  %237 = extractvalue { i8*, i32 } %236, 0
  store i8* %237, i8** %4, align 8
  %238 = extractvalue { i8*, i32 } %236, 1
  store i32 %238, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE5cbuf2) #2
  br label %2746

239:                                              ; preds = %138
  %240 = landingpad { i8*, i32 }
          cleanup
  %241 = extractvalue { i8*, i32 } %240, 0
  store i8* %241, i8** %4, align 8
  %242 = extractvalue { i8*, i32 } %240, 1
  store i32 %242, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE8adv_pred) #2
  br label %2746

243:                                              ; preds = %147
  %244 = landingpad { i8*, i32 }
          cleanup
  %245 = extractvalue { i8*, i32 } %244, 0
  store i8* %245, i8** %4, align 8
  %246 = extractvalue { i8*, i32 } %244, 1
  store i32 %246, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE4sumu) #2
  br label %2746

247:                                              ; preds = %156
  %248 = landingpad { i8*, i32 }
          cleanup
  %249 = extractvalue { i8*, i32 } %248, 0
  store i8* %249, i8** %4, align 8
  %250 = extractvalue { i8*, i32 } %248, 1
  store i32 %250, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE4sumv) #2
  br label %2746

251:                                              ; preds = %165
  %252 = landingpad { i8*, i32 }
          cleanup
  %253 = extractvalue { i8*, i32 } %252, 0
  store i8* %253, i8** %4, align 8
  %254 = extractvalue { i8*, i32 } %252, 1
  store i32 %254, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE2ls) #2
  br label %2746

255:                                              ; preds = %174
  %256 = landingpad { i8*, i32 }
          cleanup
  %257 = extractvalue { i8*, i32 } %256, 0
  store i8* %257, i8** %4, align 8
  %258 = extractvalue { i8*, i32 } %256, 1
  store i32 %258, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE3lcp) #2
  br label %2746

259:                                              ; preds = %183
  %260 = landingpad { i8*, i32 }
          cleanup
  %261 = extractvalue { i8*, i32 } %260, 0
  store i8* %261, i8** %4, align 8
  %262 = extractvalue { i8*, i32 } %260, 1
  store i32 %262, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE4zpos) #2
  br label %2746

263:                                              ; preds = %192
  %264 = landingpad { i8*, i32 }
          cleanup
  %265 = extractvalue { i8*, i32 } %264, 0
  store i8* %265, i8** %4, align 8
  %266 = extractvalue { i8*, i32 } %264, 1
  store i32 %266, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE4qtab) #2
  br label %2746

267:                                              ; preds = %201
  %268 = landingpad { i8*, i32 }
          cleanup
  %269 = extractvalue { i8*, i32 } %268, 0
  store i8* %269, i8** %4, align 8
  %270 = extractvalue { i8*, i32 } %268, 1
  store i32 %270, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE4qmap) #2
  br label %2746

271:                                              ; preds = %207, %204
  %272 = load i32, i32* @bpos, align 4
  %273 = icmp ne i32 %272, 0
  br i1 %273, label %274, label %279

274:                                              ; preds = %271
  %275 = load i32, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %276 = icmp ne i32 %275, 0
  br i1 %276, label %279, label %277

277:                                              ; preds = %274
  %278 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %278, i32* %2, align 4
  br label %2744

279:                                              ; preds = %274, %271
  %280 = load i32, i32* @bpos, align 4
  %281 = icmp ne i32 %280, 0
  br i1 %281, label %288, label %282

282:                                              ; preds = %279
  %283 = load i32, i32* @_ZZ9jpegModelR5MixerE3app, align 4
  %284 = icmp sgt i32 %283, 0
  br i1 %284, label %285, label %288

285:                                              ; preds = %282
  %286 = load i32, i32* @_ZZ9jpegModelR5MixerE3app, align 4
  %287 = add nsw i32 %286, -1
  store i32 %287, i32* @_ZZ9jpegModelR5MixerE3app, align 4
  br label %288

288:                                              ; preds = %285, %282, %279
  %289 = load i32, i32* @_ZZ9jpegModelR5MixerE3app, align 4
  %290 = icmp sgt i32 %289, 0
  br i1 %290, label %291, label %293

291:                                              ; preds = %288
  %292 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %292, i32* %2, align 4
  br label %2744

293:                                              ; preds = %288
  %294 = load i32, i32* @bpos, align 4
  %295 = icmp ne i32 %294, 0
  br i1 %295, label %497, label %296

296:                                              ; preds = %293
  %297 = load i32, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %298 = icmp ne i32 %297, 0
  br i1 %298, label %323, label %299

299:                                              ; preds = %296
  %300 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 4)
  %301 = icmp eq i32 %300, 255
  br i1 %301, label %302, label %323

302:                                              ; preds = %299
  %303 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %304 = icmp eq i32 %303, 216
  br i1 %304, label %305, label %323

305:                                              ; preds = %302
  %306 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %307 = icmp eq i32 %306, 255
  br i1 %307, label %308, label %323

308:                                              ; preds = %305
  %309 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %310 = ashr i32 %309, 4
  %311 = icmp eq i32 %310, 14
  br i1 %311, label %312, label %323

312:                                              ; preds = %308
  store i32 1, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE8linesize, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4data, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE6htsize, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE3sof, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE3sos, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE3app, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE8huffsize, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE8huffbits, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  store i32 -1, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %313 = call dereferenceable(12) %struct.HUF* @_ZN5ArrayI3HUFLi0EEixEi(%class.Array.7* @_ZZ9jpegModelR5MixerE3huf, i32 0)
  %314 = bitcast %struct.HUF* %313 to i8*
  %315 = call i32 @_ZNK5ArrayI3HUFLi0EE4sizeEv(%class.Array.7* @_ZZ9jpegModelR5MixerE3huf)
  %316 = sext i32 %315 to i64
  %317 = mul i64 %316, 12
  call void @llvm.memset.p0i8.i64(i8* align 4 %314, i8 0, i64 %317, i1 false)
  %318 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE4pred, i32 0)
  %319 = bitcast i32* %318 to i8*
  %320 = call i32 @_ZNK5ArrayIiLi0EE4sizeEv(%class.Array* @_ZZ9jpegModelR5MixerE4pred)
  %321 = sext i32 %320 to i64
  %322 = mul i64 %321, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %319, i8 0, i64 %322, i1 false)
  br label %323

323:                                              ; preds = %312, %308, %305, %302, %299, %296
  %324 = load i32, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %325 = icmp ne i32 %324, 0
  br i1 %325, label %326, label %345

326:                                              ; preds = %323
  %327 = load i32, i32* @_ZZ9jpegModelR5MixerE4data, align 4
  %328 = icmp ne i32 %327, 0
  br i1 %328, label %329, label %345

329:                                              ; preds = %326
  %330 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %331 = icmp eq i32 %330, 255
  br i1 %331, label %332, label %345

332:                                              ; preds = %329
  %333 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %334 = icmp ne i32 %333, 0
  br i1 %334, label %335, label %345

335:                                              ; preds = %332
  %336 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %337 = and i32 %336, 248
  %338 = icmp ne i32 %337, 208
  br i1 %338, label %339, label %345

339:                                              ; preds = %335
  %340 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %341 = icmp eq i32 %340, 217
  br i1 %341, label %344, label %342

342:                                              ; preds = %339
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %343 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %343, i32* %2, align 4
  br label %2744

344:                                              ; preds = %339
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  br label %345

345:                                              ; preds = %344, %335, %332, %329, %326, %323
  %346 = load i32, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %347 = icmp ne i32 %346, 0
  br i1 %347, label %350, label %348

348:                                              ; preds = %345
  %349 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %349, i32* %2, align 4
  br label %2744

350:                                              ; preds = %345
  %351 = load i32, i32* @_ZZ9jpegModelR5MixerE4data, align 4
  %352 = icmp ne i32 %351, 0
  br i1 %352, label %372, label %353

353:                                              ; preds = %350
  %354 = load i32, i32* @_ZZ9jpegModelR5MixerE3app, align 4
  %355 = icmp ne i32 %354, 0
  br i1 %355, label %372, label %356

356:                                              ; preds = %353
  %357 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 4)
  %358 = icmp eq i32 %357, 255
  br i1 %358, label %359, label %372

359:                                              ; preds = %356
  %360 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %361 = ashr i32 %360, 4
  %362 = icmp eq i32 %361, 14
  br i1 %362, label %366, label %363

363:                                              ; preds = %359
  %364 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %365 = icmp eq i32 %364, 254
  br i1 %365, label %366, label %372

366:                                              ; preds = %363, %359
  %367 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %368 = mul nsw i32 %367, 256
  %369 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %370 = add nsw i32 %368, %369
  %371 = add nsw i32 %370, 2
  store i32 %371, i32* @_ZZ9jpegModelR5MixerE3app, align 4
  br label %372

372:                                              ; preds = %366, %363, %356, %353, %350
  %373 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 5)
  %374 = icmp eq i32 %373, 255
  br i1 %374, label %375, label %402

375:                                              ; preds = %372
  %376 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 4)
  %377 = icmp eq i32 %376, 218
  br i1 %377, label %378, label %402

378:                                              ; preds = %375
  %379 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %380 = mul nsw i32 %379, 256
  %381 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %382 = add nsw i32 %380, %381
  store i32 %382, i32* %6, align 4
  %383 = load i32, i32* %6, align 4
  %384 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %385 = mul nsw i32 2, %384
  %386 = add nsw i32 6, %385
  %387 = icmp eq i32 %383, %386
  br i1 %387, label %388, label %401

388:                                              ; preds = %378
  %389 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %390 = icmp ne i32 %389, 0
  br i1 %390, label %391, label %401

391:                                              ; preds = %388
  %392 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %393 = icmp sle i32 %392, 4
  br i1 %393, label %394, label %401

394:                                              ; preds = %391
  %395 = load i32, i32* @pos, align 4
  %396 = sub nsw i32 %395, 5
  store i32 %396, i32* @_ZZ9jpegModelR5MixerE3sos, align 4
  %397 = load i32, i32* @_ZZ9jpegModelR5MixerE3sos, align 4
  %398 = load i32, i32* %6, align 4
  %399 = add nsw i32 %397, %398
  %400 = add nsw i32 %399, 2
  store i32 %400, i32* @_ZZ9jpegModelR5MixerE4data, align 4
  store i32 2, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  br label %401

401:                                              ; preds = %394, %391, %388, %378
  br label %402

402:                                              ; preds = %401, %375, %372
  %403 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 4)
  %404 = icmp eq i32 %403, 255
  br i1 %404, label %405, label %417

405:                                              ; preds = %402
  %406 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %407 = icmp eq i32 %406, 196
  br i1 %407, label %408, label %417

408:                                              ; preds = %405
  %409 = load i32, i32* @_ZZ9jpegModelR5MixerE6htsize, align 4
  %410 = icmp slt i32 %409, 8
  br i1 %410, label %411, label %417

411:                                              ; preds = %408
  %412 = load i32, i32* @pos, align 4
  %413 = sub nsw i32 %412, 4
  %414 = load i32, i32* @_ZZ9jpegModelR5MixerE6htsize, align 4
  %415 = add nsw i32 %414, 1
  store i32 %415, i32* @_ZZ9jpegModelR5MixerE6htsize, align 4
  %416 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE2ht, i32 %414)
  store i32 %413, i32* %416, align 4
  br label %417

417:                                              ; preds = %411, %408, %405, %402
  %418 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 4)
  %419 = icmp eq i32 %418, 255
  br i1 %419, label %420, label %426

420:                                              ; preds = %417
  %421 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %422 = icmp eq i32 %421, 192
  br i1 %422, label %423, label %426

423:                                              ; preds = %420
  %424 = load i32, i32* @pos, align 4
  %425 = sub nsw i32 %424, 4
  store i32 %425, i32* @_ZZ9jpegModelR5MixerE3sof, align 4
  br label %426

426:                                              ; preds = %423, %420, %417
  %427 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 4)
  %428 = icmp eq i32 %427, 255
  br i1 %428, label %429, label %440

429:                                              ; preds = %426
  %430 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %431 = icmp eq i32 %430, 219
  br i1 %431, label %432, label %440

432:                                              ; preds = %429
  %433 = load i32, i32* @pos, align 4
  %434 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %435 = mul nsw i32 %434, 256
  %436 = add nsw i32 %433, %435
  %437 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %438 = add nsw i32 %436, %437
  %439 = sub nsw i32 %438, 1
  store i32 %439, i32* @_ZZ9jpegModelR5MixerE7dqt_end, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE9dqt_state, align 4
  br label %483

440:                                              ; preds = %429, %426
  %441 = load i32, i32* @_ZZ9jpegModelR5MixerE9dqt_state, align 4
  %442 = icmp sge i32 %441, 0
  br i1 %442, label %443, label %482

443:                                              ; preds = %440
  %444 = load i32, i32* @pos, align 4
  %445 = load i32, i32* @_ZZ9jpegModelR5MixerE7dqt_end, align 4
  %446 = icmp sge i32 %444, %445
  br i1 %446, label %447, label %448

447:                                              ; preds = %443
  store i32 -1, i32* @_ZZ9jpegModelR5MixerE9dqt_state, align 4
  br label %481

448:                                              ; preds = %443
  %449 = load i32, i32* @_ZZ9jpegModelR5MixerE9dqt_state, align 4
  %450 = srem i32 %449, 65
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %452, label %454

452:                                              ; preds = %448
  %453 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  store i32 %453, i32* @_ZZ9jpegModelR5MixerE4qnum, align 4
  br label %478

454:                                              ; preds = %448
  %455 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %456 = icmp sgt i32 %455, 0
  br i1 %456, label %459, label %457

457:                                              ; preds = %454
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %458 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %458, i32* %2, align 4
  br label %2744

459:                                              ; preds = %454
  %460 = load i32, i32* @_ZZ9jpegModelR5MixerE4qnum, align 4
  %461 = icmp sge i32 %460, 0
  br i1 %461, label %462, label %465

462:                                              ; preds = %459
  %463 = load i32, i32* @_ZZ9jpegModelR5MixerE4qnum, align 4
  %464 = icmp slt i32 %463, 4
  br i1 %464, label %467, label %465

465:                                              ; preds = %462, %459
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %466 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %466, i32* %2, align 4
  br label %2744

467:                                              ; preds = %462
  %468 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %469 = sub nsw i32 %468, 1
  %470 = trunc i32 %469 to i8
  %471 = load i32, i32* @_ZZ9jpegModelR5MixerE4qnum, align 4
  %472 = mul nsw i32 %471, 64
  %473 = load i32, i32* @_ZZ9jpegModelR5MixerE9dqt_state, align 4
  %474 = srem i32 %473, 65
  %475 = sub nsw i32 %474, 1
  %476 = add nsw i32 %472, %475
  %477 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ9jpegModelR5MixerE4qtab, i32 %476)
  store i8 %470, i8* %477, align 1
  br label %478

478:                                              ; preds = %467, %452
  %479 = load i32, i32* @_ZZ9jpegModelR5MixerE9dqt_state, align 4
  %480 = add nsw i32 %479, 1
  store i32 %480, i32* @_ZZ9jpegModelR5MixerE9dqt_state, align 4
  br label %481

481:                                              ; preds = %478, %447
  br label %482

482:                                              ; preds = %481, %440
  br label %483

483:                                              ; preds = %482, %432
  %484 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %485 = icmp eq i32 %484, 255
  br i1 %485, label %486, label %496

486:                                              ; preds = %483
  %487 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %488 = and i32 %487, 248
  %489 = icmp eq i32 %488, 208
  br i1 %489, label %490, label %496

490:                                              ; preds = %486
  store i32 0, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE8huffsize, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE8huffbits, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  store i32 -1, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %491 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE4pred, i32 0)
  %492 = bitcast i32* %491 to i8*
  %493 = call i32 @_ZNK5ArrayIiLi0EE4sizeEv(%class.Array* @_ZZ9jpegModelR5MixerE4pred)
  %494 = sext i32 %493 to i64
  %495 = mul i64 %494, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %492, i8 0, i64 %495, i1 false)
  br label %496

496:                                              ; preds = %490, %486, %483
  br label %497

497:                                              ; preds = %496, %293
  %498 = load i32, i32* @pos, align 4
  %499 = load i32, i32* @_ZZ9jpegModelR5MixerE4data, align 4
  %500 = icmp eq i32 %498, %499
  br i1 %500, label %501, label %972

501:                                              ; preds = %497
  %502 = load i32, i32* @bpos, align 4
  %503 = icmp eq i32 %502, 1
  br i1 %503, label %504, label %972

504:                                              ; preds = %501
  %505 = load i32, i32* @_ZZ9jpegModelR5MixerE6htsize, align 4
  %506 = icmp sgt i32 %505, 0
  br i1 %506, label %509, label %507

507:                                              ; preds = %504
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %508 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %508, i32* %2, align 4
  br label %2744

509:                                              ; preds = %504
  store i32 0, i32* %7, align 4
  br label %510

510:                                              ; preds = %685, %509
  %511 = load i32, i32* %7, align 4
  %512 = load i32, i32* @_ZZ9jpegModelR5MixerE6htsize, align 4
  %513 = icmp slt i32 %511, %512
  br i1 %513, label %514, label %688

514:                                              ; preds = %510
  %515 = load i32, i32* %7, align 4
  %516 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE2ht, i32 %515)
  %517 = load i32, i32* %516, align 4
  %518 = add nsw i32 %517, 4
  store i32 %518, i32* %8, align 4
  %519 = load i32, i32* %8, align 4
  %520 = load i32, i32* %8, align 4
  %521 = sub nsw i32 %520, 2
  %522 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %521)
  %523 = load i8, i8* %522, align 1
  %524 = zext i8 %523 to i32
  %525 = mul nsw i32 %524, 256
  %526 = add nsw i32 %519, %525
  %527 = load i32, i32* %8, align 4
  %528 = sub nsw i32 %527, 1
  %529 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %528)
  %530 = load i8, i8* %529, align 1
  %531 = zext i8 %530 to i32
  %532 = add nsw i32 %526, %531
  %533 = sub nsw i32 %532, 2
  store i32 %533, i32* %9, align 4
  store i32 0, i32* %10, align 4
  br label %534

534:                                              ; preds = %677, %514
  %535 = load i32, i32* %8, align 4
  %536 = load i32, i32* %9, align 4
  %537 = icmp slt i32 %535, %536
  br i1 %537, label %538, label %551

538:                                              ; preds = %534
  %539 = load i32, i32* %9, align 4
  %540 = load i32, i32* @pos, align 4
  %541 = icmp slt i32 %539, %540
  br i1 %541, label %542, label %551

542:                                              ; preds = %538
  %543 = load i32, i32* %9, align 4
  %544 = load i32, i32* %8, align 4
  %545 = add nsw i32 %544, 2100
  %546 = icmp slt i32 %543, %545
  br i1 %546, label %547, label %551

547:                                              ; preds = %542
  %548 = load i32, i32* %10, align 4
  %549 = add nsw i32 %548, 1
  store i32 %549, i32* %10, align 4
  %550 = icmp slt i32 %549, 10
  br label %551

551:                                              ; preds = %547, %542, %538, %534
  %552 = phi i1 [ false, %542 ], [ false, %538 ], [ false, %534 ], [ %550, %547 ]
  br i1 %552, label %553, label %678

553:                                              ; preds = %551
  %554 = load i32, i32* %8, align 4
  %555 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %554)
  %556 = load i8, i8* %555, align 1
  %557 = zext i8 %556 to i32
  %558 = ashr i32 %557, 4
  store i32 %558, i32* %11, align 4
  %559 = load i32, i32* %8, align 4
  %560 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %559)
  %561 = load i8, i8* %560, align 1
  %562 = zext i8 %561 to i32
  %563 = and i32 %562, 15
  store i32 %563, i32* %12, align 4
  %564 = load i32, i32* %11, align 4
  %565 = icmp sge i32 %564, 2
  br i1 %565, label %569, label %566

566:                                              ; preds = %553
  %567 = load i32, i32* %12, align 4
  %568 = icmp sge i32 %567, 4
  br i1 %568, label %569, label %570

569:                                              ; preds = %566, %553
  br label %678

570:                                              ; preds = %566
  %571 = load i32, i32* %11, align 4
  %572 = icmp sge i32 %571, 0
  br i1 %572, label %573, label %582

573:                                              ; preds = %570
  %574 = load i32, i32* %11, align 4
  %575 = icmp slt i32 %574, 2
  br i1 %575, label %576, label %582

576:                                              ; preds = %573
  %577 = load i32, i32* %12, align 4
  %578 = icmp sge i32 %577, 0
  br i1 %578, label %579, label %582

579:                                              ; preds = %576
  %580 = load i32, i32* %12, align 4
  %581 = icmp slt i32 %580, 4
  br i1 %581, label %584, label %582

582:                                              ; preds = %579, %576, %573, %570
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %583 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %583, i32* %2, align 4
  br label %2744

584:                                              ; preds = %579
  %585 = load i32, i32* %11, align 4
  %586 = mul nsw i32 %585, 64
  %587 = load i32, i32* %12, align 4
  %588 = mul nsw i32 %587, 16
  %589 = add nsw i32 %586, %588
  %590 = call dereferenceable(12) %struct.HUF* @_ZN5ArrayI3HUFLi0EEixEi(%class.Array.7* @_ZZ9jpegModelR5MixerE3huf, i32 %589)
  store %struct.HUF* %590, %struct.HUF** %13, align 8
  %591 = load i32, i32* %8, align 4
  %592 = add nsw i32 %591, 17
  store i32 %592, i32* %14, align 4
  %593 = load i32, i32* %11, align 4
  %594 = mul nsw i32 %593, 1024
  %595 = load i32, i32* %12, align 4
  %596 = mul nsw i32 %595, 256
  %597 = add nsw i32 %594, %596
  store i32 %597, i32* %15, align 4
  store i32 0, i32* %16, align 4
  br label %598

598:                                              ; preds = %611, %584
  %599 = load i32, i32* %16, align 4
  %600 = icmp slt i32 %599, 256
  br i1 %600, label %601, label %614

601:                                              ; preds = %598
  %602 = load i32, i32* %14, align 4
  %603 = load i32, i32* %16, align 4
  %604 = add nsw i32 %602, %603
  %605 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %604)
  %606 = load i8, i8* %605, align 1
  %607 = load i32, i32* %15, align 4
  %608 = load i32, i32* %16, align 4
  %609 = add nsw i32 %607, %608
  %610 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ9jpegModelR5MixerE4hbuf, i32 %609)
  store i8 %606, i8* %610, align 1
  br label %611

611:                                              ; preds = %601
  %612 = load i32, i32* %16, align 4
  %613 = add nsw i32 %612, 1
  store i32 %613, i32* %16, align 4
  br label %598

614:                                              ; preds = %598
  store i32 0, i32* %17, align 4
  store i32 0, i32* %16, align 4
  br label %615

615:                                              ; preds = %665, %614
  %616 = load i32, i32* %16, align 4
  %617 = icmp slt i32 %616, 16
  br i1 %617, label %618, label %668

618:                                              ; preds = %615
  %619 = load i32, i32* %17, align 4
  %620 = load %struct.HUF*, %struct.HUF** %13, align 8
  %621 = load i32, i32* %16, align 4
  %622 = sext i32 %621 to i64
  %623 = getelementptr inbounds %struct.HUF, %struct.HUF* %620, i64 %622
  %624 = getelementptr inbounds %struct.HUF, %struct.HUF* %623, i32 0, i32 0
  store i32 %619, i32* %624, align 4
  %625 = load i32, i32* %8, align 4
  %626 = load i32, i32* %16, align 4
  %627 = add nsw i32 %625, %626
  %628 = add nsw i32 %627, 1
  %629 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %628)
  %630 = load i8, i8* %629, align 1
  %631 = zext i8 %630 to i32
  %632 = load i32, i32* %17, align 4
  %633 = add nsw i32 %632, %631
  store i32 %633, i32* %17, align 4
  %634 = load %struct.HUF*, %struct.HUF** %13, align 8
  %635 = load i32, i32* %16, align 4
  %636 = sext i32 %635 to i64
  %637 = getelementptr inbounds %struct.HUF, %struct.HUF* %634, i64 %636
  %638 = getelementptr inbounds %struct.HUF, %struct.HUF* %637, i32 0, i32 1
  store i32 %633, i32* %638, align 4
  %639 = load i32, i32* %15, align 4
  %640 = load %struct.HUF*, %struct.HUF** %13, align 8
  %641 = load i32, i32* %16, align 4
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds %struct.HUF, %struct.HUF* %640, i64 %642
  %644 = getelementptr inbounds %struct.HUF, %struct.HUF* %643, i32 0, i32 2
  store i32 %639, i32* %644, align 4
  %645 = load i32, i32* %8, align 4
  %646 = load i32, i32* %16, align 4
  %647 = add nsw i32 %645, %646
  %648 = add nsw i32 %647, 1
  %649 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %648)
  %650 = load i8, i8* %649, align 1
  %651 = zext i8 %650 to i32
  %652 = load i32, i32* %14, align 4
  %653 = add nsw i32 %652, %651
  store i32 %653, i32* %14, align 4
  %654 = load i32, i32* %8, align 4
  %655 = load i32, i32* %16, align 4
  %656 = add nsw i32 %654, %655
  %657 = add nsw i32 %656, 1
  %658 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %657)
  %659 = load i8, i8* %658, align 1
  %660 = zext i8 %659 to i32
  %661 = load i32, i32* %15, align 4
  %662 = add nsw i32 %661, %660
  store i32 %662, i32* %15, align 4
  %663 = load i32, i32* %17, align 4
  %664 = mul nsw i32 %663, 2
  store i32 %664, i32* %17, align 4
  br label %665

665:                                              ; preds = %618
  %666 = load i32, i32* %16, align 4
  %667 = add nsw i32 %666, 1
  store i32 %667, i32* %16, align 4
  br label %615

668:                                              ; preds = %615
  %669 = load i32, i32* %14, align 4
  store i32 %669, i32* %8, align 4
  %670 = load i32, i32* %15, align 4
  %671 = icmp sge i32 %670, 0
  br i1 %671, label %672, label %675

672:                                              ; preds = %668
  %673 = load i32, i32* %15, align 4
  %674 = icmp slt i32 %673, 2048
  br i1 %674, label %677, label %675

675:                                              ; preds = %672, %668
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %676 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %676, i32* %2, align 4
  br label %2744

677:                                              ; preds = %672
  br label %534

678:                                              ; preds = %569, %551
  %679 = load i32, i32* %8, align 4
  %680 = load i32, i32* %9, align 4
  %681 = icmp eq i32 %679, %680
  br i1 %681, label %684, label %682

682:                                              ; preds = %678
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %683 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %683, i32* %2, align 4
  br label %2744

684:                                              ; preds = %678
  br label %685

685:                                              ; preds = %684
  %686 = load i32, i32* %7, align 4
  %687 = add nsw i32 %686, 1
  store i32 %687, i32* %7, align 4
  br label %510

688:                                              ; preds = %510
  store i32 0, i32* @_ZZ9jpegModelR5MixerE8huffsize, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE8huffbits, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  store i32 -1, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %689 = load i32, i32* @_ZZ9jpegModelR5MixerE3sof, align 4
  %690 = icmp ne i32 %689, 0
  br i1 %690, label %696, label %691

691:                                              ; preds = %688
  %692 = load i32, i32* @_ZZ9jpegModelR5MixerE3sos, align 4
  %693 = icmp ne i32 %692, 0
  br i1 %693, label %694, label %696

694:                                              ; preds = %691
  %695 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %695, i32* %2, align 4
  br label %2744

696:                                              ; preds = %691, %688
  %697 = load i32, i32* @_ZZ9jpegModelR5MixerE3sos, align 4
  %698 = add nsw i32 %697, 4
  %699 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %698)
  %700 = load i8, i8* %699, align 1
  %701 = zext i8 %700 to i32
  store i32 %701, i32* %18, align 4
  %702 = load i32, i32* @_ZZ9jpegModelR5MixerE3sof, align 4
  %703 = add nsw i32 %702, 9
  %704 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %703)
  %705 = load i8, i8* %704, align 1
  %706 = zext i8 %705 to i32
  store i32 %706, i32* %19, align 4
  %707 = load i32, i32* %18, align 4
  %708 = icmp sle i32 %707, 4
  br i1 %708, label %709, label %712

709:                                              ; preds = %696
  %710 = load i32, i32* %19, align 4
  %711 = icmp sle i32 %710, 4
  br i1 %711, label %714, label %712

712:                                              ; preds = %709, %696
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %713 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %713, i32* %2, align 4
  br label %2744

714:                                              ; preds = %709
  store i32 0, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  store i32 0, i32* %20, align 4
  store i32 0, i32* %7, align 4
  br label %715

715:                                              ; preds = %854, %714
  %716 = load i32, i32* %7, align 4
  %717 = load i32, i32* %18, align 4
  %718 = icmp slt i32 %716, %717
  br i1 %718, label %719, label %857

719:                                              ; preds = %715
  store i32 0, i32* %21, align 4
  br label %720

720:                                              ; preds = %850, %719
  %721 = load i32, i32* %21, align 4
  %722 = load i32, i32* %19, align 4
  %723 = icmp slt i32 %721, %722
  br i1 %723, label %724, label %853

724:                                              ; preds = %720
  %725 = load i32, i32* @_ZZ9jpegModelR5MixerE3sos, align 4
  %726 = load i32, i32* %7, align 4
  %727 = mul nsw i32 2, %726
  %728 = add nsw i32 %725, %727
  %729 = add nsw i32 %728, 5
  %730 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %729)
  %731 = load i8, i8* %730, align 1
  %732 = zext i8 %731 to i32
  %733 = load i32, i32* @_ZZ9jpegModelR5MixerE3sof, align 4
  %734 = load i32, i32* %21, align 4
  %735 = mul nsw i32 3, %734
  %736 = add nsw i32 %733, %735
  %737 = add nsw i32 %736, 10
  %738 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %737)
  %739 = load i8, i8* %738, align 1
  %740 = zext i8 %739 to i32
  %741 = icmp eq i32 %732, %740
  br i1 %741, label %742, label %849

742:                                              ; preds = %724
  %743 = load i32, i32* @_ZZ9jpegModelR5MixerE3sof, align 4
  %744 = load i32, i32* %21, align 4
  %745 = mul nsw i32 3, %744
  %746 = add nsw i32 %743, %745
  %747 = add nsw i32 %746, 11
  %748 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %747)
  %749 = load i8, i8* %748, align 1
  %750 = zext i8 %749 to i32
  store i32 %750, i32* %22, align 4
  %751 = load i32, i32* %22, align 4
  %752 = ashr i32 %751, 4
  %753 = load i32, i32* %20, align 4
  %754 = icmp sgt i32 %752, %753
  br i1 %754, label %755, label %758

755:                                              ; preds = %742
  %756 = load i32, i32* %22, align 4
  %757 = ashr i32 %756, 4
  store i32 %757, i32* %20, align 4
  br label %758

758:                                              ; preds = %755, %742
  %759 = load i32, i32* %22, align 4
  %760 = and i32 %759, 15
  %761 = load i32, i32* %22, align 4
  %762 = ashr i32 %761, 4
  %763 = mul nsw i32 %760, %762
  store i32 %763, i32* %22, align 4
  %764 = load i32, i32* %22, align 4
  %765 = icmp sge i32 %764, 1
  br i1 %765, label %766, label %771

766:                                              ; preds = %758
  %767 = load i32, i32* %22, align 4
  %768 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %769 = add nsw i32 %767, %768
  %770 = icmp sle i32 %769, 10
  br i1 %770, label %773, label %771

771:                                              ; preds = %766, %758
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %772 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %772, i32* %2, align 4
  br label %2744

773:                                              ; preds = %766
  br label %774

774:                                              ; preds = %840, %773
  %775 = load i32, i32* %22, align 4
  %776 = icmp ne i32 %775, 0
  br i1 %776, label %777, label %848

777:                                              ; preds = %774
  %778 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %779 = icmp slt i32 %778, 10
  br i1 %779, label %782, label %780

780:                                              ; preds = %777
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %781 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %781, i32* %2, align 4
  br label %2744

782:                                              ; preds = %777
  %783 = load i32, i32* @_ZZ9jpegModelR5MixerE3sos, align 4
  %784 = load i32, i32* %7, align 4
  %785 = mul nsw i32 2, %784
  %786 = add nsw i32 %783, %785
  %787 = add nsw i32 %786, 6
  %788 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %787)
  %789 = load i8, i8* %788, align 1
  %790 = zext i8 %789 to i32
  %791 = ashr i32 %790, 4
  %792 = and i32 %791, 15
  %793 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds [10 x i32], [10 x i32]* getelementptr inbounds ([2 x [10 x i32]], [2 x [10 x i32]]* @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 0), i64 0, i64 %794
  store i32 %792, i32* %795, align 4
  %796 = load i32, i32* @_ZZ9jpegModelR5MixerE3sos, align 4
  %797 = load i32, i32* %7, align 4
  %798 = mul nsw i32 2, %797
  %799 = add nsw i32 %796, %798
  %800 = add nsw i32 %799, 6
  %801 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %800)
  %802 = load i8, i8* %801, align 1
  %803 = zext i8 %802 to i32
  %804 = and i32 %803, 15
  %805 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds [10 x i32], [10 x i32]* getelementptr inbounds ([2 x [10 x i32]], [2 x [10 x i32]]* @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 1), i64 0, i64 %806
  store i32 %804, i32* %807, align 4
  %808 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %809 = sext i32 %808 to i64
  %810 = getelementptr inbounds [10 x i32], [10 x i32]* getelementptr inbounds ([2 x [10 x i32]], [2 x [10 x i32]]* @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 0), i64 0, i64 %809
  %811 = load i32, i32* %810, align 4
  %812 = icmp slt i32 %811, 4
  br i1 %812, label %813, label %819

813:                                              ; preds = %782
  %814 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds [10 x i32], [10 x i32]* getelementptr inbounds ([2 x [10 x i32]], [2 x [10 x i32]]* @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 1), i64 0, i64 %815
  %817 = load i32, i32* %816, align 4
  %818 = icmp slt i32 %817, 4
  br i1 %818, label %821, label %819

819:                                              ; preds = %813, %782
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %820 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %820, i32* %2, align 4
  br label %2744

821:                                              ; preds = %813
  %822 = load i32, i32* %7, align 4
  %823 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %824 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE5color, i32 %823)
  store i32 %822, i32* %824, align 4
  %825 = load i32, i32* @_ZZ9jpegModelR5MixerE3sof, align 4
  %826 = load i32, i32* %21, align 4
  %827 = mul nsw i32 3, %826
  %828 = add nsw i32 %825, %827
  %829 = add nsw i32 %828, 12
  %830 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %829)
  %831 = load i8, i8* %830, align 1
  %832 = zext i8 %831 to i32
  store i32 %832, i32* %23, align 4
  %833 = load i32, i32* %23, align 4
  %834 = icmp sge i32 %833, 0
  br i1 %834, label %835, label %838

835:                                              ; preds = %821
  %836 = load i32, i32* %23, align 4
  %837 = icmp slt i32 %836, 4
  br i1 %837, label %840, label %838

838:                                              ; preds = %835, %821
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %839 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %839, i32* %2, align 4
  br label %2744

840:                                              ; preds = %835
  %841 = load i32, i32* %23, align 4
  %842 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %843 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE4qmap, i32 %842)
  store i32 %841, i32* %843, align 4
  %844 = load i32, i32* %22, align 4
  %845 = add nsw i32 %844, -1
  store i32 %845, i32* %22, align 4
  %846 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %847 = add nsw i32 %846, 1
  store i32 %847, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  br label %774

848:                                              ; preds = %774
  br label %849

849:                                              ; preds = %848, %724
  br label %850

850:                                              ; preds = %849
  %851 = load i32, i32* %21, align 4
  %852 = add nsw i32 %851, 1
  store i32 %852, i32* %21, align 4
  br label %720

853:                                              ; preds = %720
  br label %854

854:                                              ; preds = %853
  %855 = load i32, i32* %7, align 4
  %856 = add nsw i32 %855, 1
  store i32 %856, i32* %7, align 4
  br label %715

857:                                              ; preds = %715
  %858 = load i32, i32* %20, align 4
  %859 = icmp sge i32 %858, 1
  br i1 %859, label %860, label %863

860:                                              ; preds = %857
  %861 = load i32, i32* %20, align 4
  %862 = icmp sle i32 %861, 10
  br i1 %862, label %865, label %863

863:                                              ; preds = %860, %857
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %864 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %864, i32* %2, align 4
  br label %2744

865:                                              ; preds = %860
  store i32 0, i32* %24, align 4
  br label %866

866:                                              ; preds = %906, %865
  %867 = load i32, i32* %24, align 4
  %868 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %869 = icmp slt i32 %867, %868
  br i1 %869, label %870, label %909

870:                                              ; preds = %866
  %871 = load i32, i32* %24, align 4
  %872 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE2ls, i32 %871)
  store i32 0, i32* %872, align 4
  store i32 1, i32* %25, align 4
  br label %873

873:                                              ; preds = %894, %870
  %874 = load i32, i32* %25, align 4
  %875 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %876 = icmp slt i32 %874, %875
  br i1 %876, label %877, label %897

877:                                              ; preds = %873
  %878 = load i32, i32* %24, align 4
  %879 = load i32, i32* %25, align 4
  %880 = add nsw i32 %878, %879
  %881 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %882 = srem i32 %880, %881
  %883 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE5color, i32 %882)
  %884 = load i32, i32* %883, align 4
  %885 = load i32, i32* %24, align 4
  %886 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE5color, i32 %885)
  %887 = load i32, i32* %886, align 4
  %888 = icmp eq i32 %884, %887
  br i1 %888, label %889, label %893

889:                                              ; preds = %877
  %890 = load i32, i32* %25, align 4
  %891 = load i32, i32* %24, align 4
  %892 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE2ls, i32 %891)
  store i32 %890, i32* %892, align 4
  br label %893

893:                                              ; preds = %889, %877
  br label %894

894:                                              ; preds = %893
  %895 = load i32, i32* %25, align 4
  %896 = add nsw i32 %895, 1
  store i32 %896, i32* %25, align 4
  br label %873

897:                                              ; preds = %873
  %898 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %899 = load i32, i32* %24, align 4
  %900 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE2ls, i32 %899)
  %901 = load i32, i32* %900, align 4
  %902 = sub nsw i32 %898, %901
  %903 = shl i32 %902, 6
  %904 = load i32, i32* %24, align 4
  %905 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE2ls, i32 %904)
  store i32 %903, i32* %905, align 4
  br label %906

906:                                              ; preds = %897
  %907 = load i32, i32* %24, align 4
  %908 = add nsw i32 %907, 1
  store i32 %908, i32* %24, align 4
  br label %866

909:                                              ; preds = %866
  store i32 0, i32* %24, align 4
  br label %910

910:                                              ; preds = %928, %909
  %911 = load i32, i32* %24, align 4
  %912 = icmp slt i32 %911, 64
  br i1 %912, label %913, label %931

913:                                              ; preds = %910
  %914 = load i32, i32* %24, align 4
  %915 = load i32, i32* %24, align 4
  %916 = sext i32 %915 to i64
  %917 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %916
  %918 = load i8, i8* %917, align 1
  %919 = zext i8 %918 to i32
  %920 = load i32, i32* %24, align 4
  %921 = sext i32 %920 to i64
  %922 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %921
  %923 = load i8, i8* %922, align 1
  %924 = zext i8 %923 to i32
  %925 = mul nsw i32 8, %924
  %926 = add nsw i32 %919, %925
  %927 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE4zpos, i32 %926)
  store i32 %914, i32* %927, align 4
  br label %928

928:                                              ; preds = %913
  %929 = load i32, i32* %24, align 4
  %930 = add nsw i32 %929, 1
  store i32 %930, i32* %24, align 4
  br label %910

931:                                              ; preds = %910
  %932 = load i32, i32* @_ZZ9jpegModelR5MixerE3sof, align 4
  %933 = add nsw i32 %932, 7
  %934 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %933)
  %935 = load i8, i8* %934, align 1
  %936 = zext i8 %935 to i32
  %937 = mul nsw i32 %936, 256
  %938 = load i32, i32* @_ZZ9jpegModelR5MixerE3sof, align 4
  %939 = add nsw i32 %938, 8
  %940 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %939)
  %941 = load i8, i8* %940, align 1
  %942 = zext i8 %941 to i32
  %943 = add nsw i32 %937, %942
  store i32 %943, i32* @_ZZ9jpegModelR5MixerE5width, align 4
  %944 = load i32, i32* @_ZZ9jpegModelR5MixerE3sof, align 4
  %945 = add nsw i32 %944, 5
  %946 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %945)
  %947 = load i8, i8* %946, align 1
  %948 = zext i8 %947 to i32
  %949 = mul nsw i32 %948, 256
  %950 = load i32, i32* @_ZZ9jpegModelR5MixerE3sof, align 4
  %951 = add nsw i32 %950, 6
  %952 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %951)
  %953 = load i8, i8* %952, align 1
  %954 = zext i8 %953 to i32
  %955 = add nsw i32 %949, %954
  store i32 %955, i32* %26, align 4
  %956 = load i32, i32* @_ZZ9jpegModelR5MixerE5width, align 4
  %957 = load i32, i32* %26, align 4
  %958 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i32 %956, i32 %957)
  %959 = load i32, i32* @_ZZ9jpegModelR5MixerE5width, align 4
  %960 = sub nsw i32 %959, 1
  %961 = load i32, i32* %20, align 4
  %962 = mul nsw i32 %961, 8
  %963 = sdiv i32 %960, %962
  %964 = add nsw i32 %963, 1
  store i32 %964, i32* @_ZZ9jpegModelR5MixerE5width, align 4
  %965 = load i32, i32* @_ZZ9jpegModelR5MixerE5width, align 4
  %966 = icmp sgt i32 %965, 0
  br i1 %966, label %969, label %967

967:                                              ; preds = %931
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %968 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %968, i32* %2, align 4
  br label %2744

969:                                              ; preds = %931
  %970 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %971 = mul nsw i32 %970, 64
  store i32 %971, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE6column, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE3row, align 4
  br label %972

972:                                              ; preds = %969, %501, %497
  %973 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %974 = icmp ne i32 %973, 0
  br i1 %974, label %975, label %2137

975:                                              ; preds = %972
  %976 = load i32, i32* @bpos, align 4
  %977 = icmp ne i32 %976, 0
  %978 = xor i1 %977, true
  %979 = zext i1 %978 to i32
  %980 = add nsw i32 1, %979
  %981 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %980)
  %982 = icmp ne i32 %981, 255
  br i1 %982, label %983, label %2137

983:                                              ; preds = %975
  %984 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffbits, align 4
  %985 = icmp sle i32 %984, 32
  br i1 %985, label %988, label %986

986:                                              ; preds = %983
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %987 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %987, i32* %2, align 4
  br label %2744

988:                                              ; preds = %983
  %989 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  %990 = load i32, i32* @y, align 4
  %991 = add i32 %989, %990
  %992 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  %993 = add i32 %992, %991
  store i32 %993, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  %994 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffbits, align 4
  %995 = add nsw i32 %994, 1
  store i32 %995, i32* @_ZZ9jpegModelR5MixerE8huffbits, align 4
  %996 = load i32, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %997 = icmp slt i32 %996, 0
  br i1 %997, label %998, label %1136

998:                                              ; preds = %988
  %999 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffbits, align 4
  %1000 = icmp sge i32 %999, 1
  br i1 %1000, label %1001, label %1004

1001:                                             ; preds = %998
  %1002 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffbits, align 4
  %1003 = icmp sle i32 %1002, 16
  br i1 %1003, label %1006, label %1004

1004:                                             ; preds = %1001, %998
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %1005 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %1005, i32* %2, align 4
  br label %2744

1006:                                             ; preds = %1001
  %1007 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1008 = and i32 %1007, 63
  %1009 = icmp sgt i32 %1008, 0
  %1010 = zext i1 %1009 to i32
  store i32 %1010, i32* %27, align 4
  %1011 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1012 = icmp sge i32 %1011, 0
  br i1 %1012, label %1013, label %1017

1013:                                             ; preds = %1006
  %1014 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1015 = ashr i32 %1014, 6
  %1016 = icmp slt i32 %1015, 10
  br i1 %1016, label %1019, label %1017

1017:                                             ; preds = %1013, %1006
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %1018 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %1018, i32* %2, align 4
  br label %2744

1019:                                             ; preds = %1013
  %1020 = load i32, i32* %27, align 4
  %1021 = icmp eq i32 %1020, 0
  br i1 %1021, label %1027, label %1022

1022:                                             ; preds = %1019
  %1023 = load i32, i32* %27, align 4
  %1024 = icmp eq i32 %1023, 1
  br i1 %1024, label %1027, label %1025

1025:                                             ; preds = %1022
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %1026 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %1026, i32* %2, align 4
  br label %2744

1027:                                             ; preds = %1022, %1019
  %1028 = load i32, i32* %27, align 4
  %1029 = sext i32 %1028 to i64
  %1030 = getelementptr inbounds [2 x [10 x i32]], [2 x [10 x i32]]* @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 %1029
  %1031 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1032 = ashr i32 %1031, 6
  %1033 = sext i32 %1032 to i64
  %1034 = getelementptr inbounds [10 x i32], [10 x i32]* %1030, i64 0, i64 %1033
  %1035 = load i32, i32* %1034, align 4
  store i32 %1035, i32* %28, align 4
  %1036 = load i32, i32* %28, align 4
  %1037 = icmp sge i32 %1036, 0
  br i1 %1037, label %1038, label %1041

1038:                                             ; preds = %1027
  %1039 = load i32, i32* %28, align 4
  %1040 = icmp slt i32 %1039, 4
  br i1 %1040, label %1043, label %1041

1041:                                             ; preds = %1038, %1027
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %1042 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %1042, i32* %2, align 4
  br label %2744

1043:                                             ; preds = %1038
  %1044 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffbits, align 4
  %1045 = sub nsw i32 %1044, 1
  store i32 %1045, i32* %29, align 4
  %1046 = load i32, i32* %29, align 4
  %1047 = icmp sge i32 %1046, 0
  br i1 %1047, label %1048, label %1051

1048:                                             ; preds = %1043
  %1049 = load i32, i32* %29, align 4
  %1050 = icmp slt i32 %1049, 16
  br i1 %1050, label %1053, label %1051

1051:                                             ; preds = %1048, %1043
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %1052 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %1052, i32* %2, align 4
  br label %2744

1053:                                             ; preds = %1048
  %1054 = load i32, i32* %27, align 4
  %1055 = mul nsw i32 %1054, 64
  %1056 = load i32, i32* %28, align 4
  %1057 = mul nsw i32 %1056, 16
  %1058 = add nsw i32 %1055, %1057
  %1059 = call dereferenceable(12) %struct.HUF* @_ZN5ArrayI3HUFLi0EEixEi(%class.Array.7* @_ZZ9jpegModelR5MixerE3huf, i32 %1058)
  store %struct.HUF* %1059, %struct.HUF** %30, align 8
  %1060 = load %struct.HUF*, %struct.HUF** %30, align 8
  %1061 = load i32, i32* %29, align 4
  %1062 = sext i32 %1061 to i64
  %1063 = getelementptr inbounds %struct.HUF, %struct.HUF* %1060, i64 %1062
  %1064 = getelementptr inbounds %struct.HUF, %struct.HUF* %1063, i32 0, i32 0
  %1065 = load i32, i32* %1064, align 4
  %1066 = load %struct.HUF*, %struct.HUF** %30, align 8
  %1067 = load i32, i32* %29, align 4
  %1068 = sext i32 %1067 to i64
  %1069 = getelementptr inbounds %struct.HUF, %struct.HUF* %1066, i64 %1068
  %1070 = getelementptr inbounds %struct.HUF, %struct.HUF* %1069, i32 0, i32 1
  %1071 = load i32, i32* %1070, align 4
  %1072 = icmp ule i32 %1065, %1071
  br i1 %1072, label %1073, label %1084

1073:                                             ; preds = %1053
  %1074 = load %struct.HUF*, %struct.HUF** %30, align 8
  %1075 = load i32, i32* %29, align 4
  %1076 = sext i32 %1075 to i64
  %1077 = getelementptr inbounds %struct.HUF, %struct.HUF* %1074, i64 %1076
  %1078 = getelementptr inbounds %struct.HUF, %struct.HUF* %1077, i32 0, i32 2
  %1079 = load i32, i32* %1078, align 4
  %1080 = icmp slt i32 %1079, 2048
  br i1 %1080, label %1081, label %1084

1081:                                             ; preds = %1073
  %1082 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffbits, align 4
  %1083 = icmp sgt i32 %1082, 0
  br i1 %1083, label %1086, label %1084

1084:                                             ; preds = %1081, %1073, %1053
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %1085 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %1085, i32* %2, align 4
  br label %2744

1086:                                             ; preds = %1081
  %1087 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  %1088 = load %struct.HUF*, %struct.HUF** %30, align 8
  %1089 = load i32, i32* %29, align 4
  %1090 = sext i32 %1089 to i64
  %1091 = getelementptr inbounds %struct.HUF, %struct.HUF* %1088, i64 %1090
  %1092 = getelementptr inbounds %struct.HUF, %struct.HUF* %1091, i32 0, i32 1
  %1093 = load i32, i32* %1092, align 4
  %1094 = icmp ult i32 %1087, %1093
  br i1 %1094, label %1095, label %1135

1095:                                             ; preds = %1086
  %1096 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  %1097 = load %struct.HUF*, %struct.HUF** %30, align 8
  %1098 = load i32, i32* %29, align 4
  %1099 = sext i32 %1098 to i64
  %1100 = getelementptr inbounds %struct.HUF, %struct.HUF* %1097, i64 %1099
  %1101 = getelementptr inbounds %struct.HUF, %struct.HUF* %1100, i32 0, i32 0
  %1102 = load i32, i32* %1101, align 4
  %1103 = icmp uge i32 %1096, %1102
  br i1 %1103, label %1106, label %1104

1104:                                             ; preds = %1095
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %1105 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %1105, i32* %2, align 4
  br label %2744

1106:                                             ; preds = %1095
  %1107 = load %struct.HUF*, %struct.HUF** %30, align 8
  %1108 = load i32, i32* %29, align 4
  %1109 = sext i32 %1108 to i64
  %1110 = getelementptr inbounds %struct.HUF, %struct.HUF* %1107, i64 %1109
  %1111 = getelementptr inbounds %struct.HUF, %struct.HUF* %1110, i32 0, i32 2
  %1112 = load i32, i32* %1111, align 4
  %1113 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  %1114 = add i32 %1112, %1113
  %1115 = load %struct.HUF*, %struct.HUF** %30, align 8
  %1116 = load i32, i32* %29, align 4
  %1117 = sext i32 %1116 to i64
  %1118 = getelementptr inbounds %struct.HUF, %struct.HUF* %1115, i64 %1117
  %1119 = getelementptr inbounds %struct.HUF, %struct.HUF* %1118, i32 0, i32 0
  %1120 = load i32, i32* %1119, align 4
  %1121 = sub i32 %1114, %1120
  store i32 %1121, i32* %31, align 4
  %1122 = load i32, i32* %31, align 4
  %1123 = icmp sge i32 %1122, 0
  br i1 %1123, label %1124, label %1127

1124:                                             ; preds = %1106
  %1125 = load i32, i32* %31, align 4
  %1126 = icmp slt i32 %1125, 2048
  br i1 %1126, label %1129, label %1127

1127:                                             ; preds = %1124, %1106
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %1128 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %1128, i32* %2, align 4
  br label %2744

1129:                                             ; preds = %1124
  %1130 = load i32, i32* %31, align 4
  %1131 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ9jpegModelR5MixerE4hbuf, i32 %1130)
  %1132 = load i8, i8* %1131, align 1
  %1133 = zext i8 %1132 to i32
  store i32 %1133, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %1134 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffbits, align 4
  store i32 %1134, i32* @_ZZ9jpegModelR5MixerE8huffsize, align 4
  br label %1135

1135:                                             ; preds = %1129, %1086
  br label %1136

1136:                                             ; preds = %1135, %988
  %1137 = load i32, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %1138 = icmp sge i32 %1137, 0
  br i1 %1138, label %1139, label %2136

1139:                                             ; preds = %1136
  %1140 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffsize, align 4
  %1141 = load i32, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %1142 = and i32 %1141, 15
  %1143 = add nsw i32 %1140, %1142
  %1144 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffbits, align 4
  %1145 = icmp eq i32 %1143, %1144
  br i1 %1145, label %1146, label %2135

1146:                                             ; preds = %1139
  %1147 = load i32, i32* @_ZZ9jpegModelR5MixerE5huff3, align 4
  store i32 %1147, i32* @_ZZ9jpegModelR5MixerE5huff4, align 4
  %1148 = load i32, i32* @_ZZ9jpegModelR5MixerE5huff2, align 4
  store i32 %1148, i32* @_ZZ9jpegModelR5MixerE5huff3, align 4
  %1149 = load i32, i32* @_ZZ9jpegModelR5MixerE5huff1, align 4
  store i32 %1149, i32* @_ZZ9jpegModelR5MixerE5huff2, align 4
  %1150 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  %1151 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffbits, align 4
  %1152 = call i32 @_Z4hashjjjjj(i32 %1150, i32 %1151, i32 -1, i32 -1, i32 -1)
  store i32 %1152, i32* @_ZZ9jpegModelR5MixerE5huff1, align 4
  %1153 = load i32, i32* @_ZZ9jpegModelR5MixerE3rs3, align 4
  store i32 %1153, i32* @_ZZ9jpegModelR5MixerE3rs4, align 4
  %1154 = load i32, i32* @_ZZ9jpegModelR5MixerE3rs2, align 4
  store i32 %1154, i32* @_ZZ9jpegModelR5MixerE3rs3, align 4
  %1155 = load i32, i32* @_ZZ9jpegModelR5MixerE3rs1, align 4
  store i32 %1155, i32* @_ZZ9jpegModelR5MixerE3rs2, align 4
  %1156 = load i32, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  store i32 %1156, i32* @_ZZ9jpegModelR5MixerE3rs1, align 4
  store i32 0, i32* %32, align 4
  %1157 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1158 = and i32 %1157, 63
  %1159 = icmp ne i32 %1158, 0
  br i1 %1159, label %1160, label %1274

1160:                                             ; preds = %1146
  %1161 = load i32, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %1162 = icmp eq i32 %1161, 0
  br i1 %1162, label %1163, label %1190

1163:                                             ; preds = %1160
  %1164 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1165 = add nsw i32 %1164, 63
  %1166 = and i32 %1165, -64
  store i32 %1166, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1167 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1168 = icmp sge i32 %1167, 0
  br i1 %1168, label %1169, label %1176

1169:                                             ; preds = %1163
  %1170 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1171 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %1172 = icmp sle i32 %1170, %1171
  br i1 %1172, label %1173, label %1176

1173:                                             ; preds = %1169
  %1174 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1175 = icmp sle i32 %1174, 640
  br i1 %1175, label %1178, label %1176

1176:                                             ; preds = %1173, %1169, %1163
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %1177 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %1177, i32* %2, align 4
  br label %2744

1178:                                             ; preds = %1173
  br label %1179

1179:                                             ; preds = %1183, %1178
  %1180 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1181 = and i32 %1180, 63
  %1182 = icmp ne i32 %1181, 0
  br i1 %1182, label %1183, label %1189

1183:                                             ; preds = %1179
  %1184 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1185 = call dereferenceable(4) i32* @_ZN6IntBufixEi(%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2, i32 %1184)
  store i32 0, i32* %1185, align 4
  %1186 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1187 = add nsw i32 %1186, 1
  store i32 %1187, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1188 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @_ZZ9jpegModelR5MixerE4cbuf, i32 %1186)
  store i8 0, i8* %1188, align 1
  br label %1179

1189:                                             ; preds = %1179
  br label %1273

1190:                                             ; preds = %1160
  %1191 = load i32, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %1192 = and i32 %1191, 15
  %1193 = icmp sle i32 %1192, 10
  br i1 %1193, label %1196, label %1194

1194:                                             ; preds = %1190
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %1195 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %1195, i32* %2, align 4
  br label %2744

1196:                                             ; preds = %1190
  %1197 = load i32, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %1198 = ashr i32 %1197, 4
  store i32 %1198, i32* %33, align 4
  %1199 = load i32, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %1200 = and i32 %1199, 15
  store i32 %1200, i32* %34, align 4
  %1201 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1202 = ashr i32 %1201, 6
  %1203 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1204 = load i32, i32* %33, align 4
  %1205 = add nsw i32 %1203, %1204
  %1206 = ashr i32 %1205, 6
  %1207 = icmp eq i32 %1202, %1206
  br i1 %1207, label %1210, label %1208

1208:                                             ; preds = %1196
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %1209 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %1209, i32* %2, align 4
  br label %2744

1210:                                             ; preds = %1196
  %1211 = load i32, i32* %33, align 4
  %1212 = add nsw i32 %1211, 1
  %1213 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1214 = add nsw i32 %1213, %1212
  store i32 %1214, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1215 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  %1216 = load i32, i32* %34, align 4
  %1217 = shl i32 1, %1216
  %1218 = sub nsw i32 %1217, 1
  %1219 = and i32 %1215, %1218
  store i32 %1219, i32* %32, align 4
  %1220 = load i32, i32* %34, align 4
  %1221 = icmp ne i32 %1220, 0
  br i1 %1221, label %1222, label %1234

1222:                                             ; preds = %1210
  %1223 = load i32, i32* %32, align 4
  %1224 = load i32, i32* %34, align 4
  %1225 = sub nsw i32 %1224, 1
  %1226 = ashr i32 %1223, %1225
  %1227 = icmp ne i32 %1226, 0
  br i1 %1227, label %1234, label %1228

1228:                                             ; preds = %1222
  %1229 = load i32, i32* %34, align 4
  %1230 = shl i32 1, %1229
  %1231 = sub nsw i32 %1230, 1
  %1232 = load i32, i32* %32, align 4
  %1233 = sub nsw i32 %1232, %1231
  store i32 %1233, i32* %32, align 4
  br label %1234

1234:                                             ; preds = %1228, %1222, %1210
  %1235 = load i32, i32* %33, align 4
  store i32 %1235, i32* %35, align 4
  br label %1236

1236:                                             ; preds = %1250, %1234
  %1237 = load i32, i32* %35, align 4
  %1238 = icmp sge i32 %1237, 1
  br i1 %1238, label %1239, label %1253

1239:                                             ; preds = %1236
  %1240 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1241 = call dereferenceable(4) i32* @_ZN6IntBufixEi(%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2, i32 %1240)
  store i32 0, i32* %1241, align 4
  %1242 = load i32, i32* %35, align 4
  %1243 = shl i32 %1242, 4
  %1244 = load i32, i32* %34, align 4
  %1245 = or i32 %1243, %1244
  %1246 = trunc i32 %1245 to i8
  %1247 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1248 = add nsw i32 %1247, 1
  store i32 %1248, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1249 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @_ZZ9jpegModelR5MixerE4cbuf, i32 %1247)
  store i8 %1246, i8* %1249, align 1
  br label %1250

1250:                                             ; preds = %1239
  %1251 = load i32, i32* %35, align 4
  %1252 = add nsw i32 %1251, -1
  store i32 %1252, i32* %35, align 4
  br label %1236

1253:                                             ; preds = %1236
  %1254 = load i32, i32* %32, align 4
  %1255 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1256 = call dereferenceable(4) i32* @_ZN6IntBufixEi(%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2, i32 %1255)
  store i32 %1254, i32* %1256, align 4
  %1257 = load i32, i32* %34, align 4
  %1258 = shl i32 %1257, 4
  %1259 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  %1260 = shl i32 %1259, 2
  %1261 = load i32, i32* %34, align 4
  %1262 = lshr i32 %1260, %1261
  %1263 = and i32 %1262, 3
  %1264 = or i32 %1258, %1263
  %1265 = or i32 %1264, 12
  %1266 = trunc i32 %1265 to i8
  %1267 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1268 = add nsw i32 %1267, 1
  store i32 %1268, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1269 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @_ZZ9jpegModelR5MixerE4cbuf, i32 %1267)
  store i8 %1266, i8* %1269, align 1
  %1270 = load i32, i32* %34, align 4
  %1271 = load i32, i32* @_ZZ9jpegModelR5MixerE4ssum, align 4
  %1272 = add nsw i32 %1271, %1270
  store i32 %1272, i32* @_ZZ9jpegModelR5MixerE4ssum, align 4
  br label %1273

1273:                                             ; preds = %1253, %1189
  br label %1349

1274:                                             ; preds = %1146
  %1275 = load i32, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %1276 = icmp slt i32 %1275, 12
  br i1 %1276, label %1279, label %1277

1277:                                             ; preds = %1274
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %1278 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %1278, i32* %2, align 4
  br label %2744

1279:                                             ; preds = %1274
  %1280 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1281 = add nsw i32 %1280, 1
  store i32 %1281, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1282 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  %1283 = load i32, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %1284 = shl i32 1, %1283
  %1285 = sub nsw i32 %1284, 1
  %1286 = and i32 %1282, %1285
  store i32 %1286, i32* %32, align 4
  %1287 = load i32, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %1288 = icmp ne i32 %1287, 0
  br i1 %1288, label %1289, label %1301

1289:                                             ; preds = %1279
  %1290 = load i32, i32* %32, align 4
  %1291 = load i32, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %1292 = sub nsw i32 %1291, 1
  %1293 = ashr i32 %1290, %1292
  %1294 = icmp ne i32 %1293, 0
  br i1 %1294, label %1301, label %1295

1295:                                             ; preds = %1289
  %1296 = load i32, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %1297 = shl i32 1, %1296
  %1298 = sub nsw i32 %1297, 1
  %1299 = load i32, i32* %32, align 4
  %1300 = sub nsw i32 %1299, %1298
  store i32 %1300, i32* %32, align 4
  br label %1301

1301:                                             ; preds = %1295, %1289, %1279
  %1302 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1303 = icmp sge i32 %1302, 0
  br i1 %1303, label %1304, label %1308

1304:                                             ; preds = %1301
  %1305 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1306 = ashr i32 %1305, 6
  %1307 = icmp slt i32 %1306, 10
  br i1 %1307, label %1310, label %1308

1308:                                             ; preds = %1304, %1301
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %1309 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %1309, i32* %2, align 4
  br label %2744

1310:                                             ; preds = %1304
  %1311 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1312 = ashr i32 %1311, 6
  %1313 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE5color, i32 %1312)
  %1314 = load i32, i32* %1313, align 4
  store i32 %1314, i32* %36, align 4
  %1315 = load i32, i32* %36, align 4
  %1316 = icmp sge i32 %1315, 0
  br i1 %1316, label %1317, label %1320

1317:                                             ; preds = %1310
  %1318 = load i32, i32* %36, align 4
  %1319 = icmp slt i32 %1318, 4
  br i1 %1319, label %1322, label %1320

1320:                                             ; preds = %1317, %1310
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %1321 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %1321, i32* %2, align 4
  br label %2744

1322:                                             ; preds = %1317
  %1323 = load i32, i32* %32, align 4
  %1324 = load i32, i32* %36, align 4
  %1325 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE4pred, i32 %1324)
  %1326 = load i32, i32* %1325, align 4
  %1327 = add nsw i32 %1326, %1323
  store i32 %1327, i32* %1325, align 4
  store i32 %1327, i32* @_ZZ9jpegModelR5MixerE2dc, align 4
  %1328 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1329 = and i32 %1328, 63
  %1330 = icmp eq i32 %1329, 0
  br i1 %1330, label %1333, label %1331

1331:                                             ; preds = %1322
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %1332 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %1332, i32* %2, align 4
  br label %2744

1333:                                             ; preds = %1322
  %1334 = load i32, i32* @_ZZ9jpegModelR5MixerE2dc, align 4
  %1335 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1336 = call dereferenceable(4) i32* @_ZN6IntBufixEi(%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2, i32 %1335)
  store i32 %1334, i32* %1336, align 4
  %1337 = load i32, i32* @_ZZ9jpegModelR5MixerE2dc, align 4
  %1338 = add nsw i32 %1337, 1023
  %1339 = ashr i32 %1338, 3
  %1340 = trunc i32 %1339 to i8
  %1341 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1342 = add nsw i32 %1341, 1
  store i32 %1342, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1343 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @_ZZ9jpegModelR5MixerE4cbuf, i32 %1341)
  store i8 %1340, i8* %1343, align 1
  %1344 = load i32, i32* @_ZZ9jpegModelR5MixerE5ssum3, align 4
  store i32 %1344, i32* @_ZZ9jpegModelR5MixerE5ssum4, align 4
  %1345 = load i32, i32* @_ZZ9jpegModelR5MixerE5ssum2, align 4
  store i32 %1345, i32* @_ZZ9jpegModelR5MixerE5ssum3, align 4
  %1346 = load i32, i32* @_ZZ9jpegModelR5MixerE5ssum1, align 4
  store i32 %1346, i32* @_ZZ9jpegModelR5MixerE5ssum2, align 4
  %1347 = load i32, i32* @_ZZ9jpegModelR5MixerE4ssum, align 4
  store i32 %1347, i32* @_ZZ9jpegModelR5MixerE5ssum1, align 4
  %1348 = load i32, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  store i32 %1348, i32* @_ZZ9jpegModelR5MixerE4ssum, align 4
  br label %1349

1349:                                             ; preds = %1333, %1273
  %1350 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1351 = icmp sge i32 %1350, 0
  br i1 %1351, label %1352, label %1356

1352:                                             ; preds = %1349
  %1353 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1354 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %1355 = icmp sle i32 %1353, %1354
  br i1 %1355, label %1358, label %1356

1356:                                             ; preds = %1352, %1349
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %1357 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %1357, i32* %2, align 4
  br label %2744

1358:                                             ; preds = %1352
  %1359 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1360 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %1361 = icmp sge i32 %1359, %1360
  br i1 %1361, label %1362, label %1371

1362:                                             ; preds = %1358
  store i32 0, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1363 = load i32, i32* @_ZZ9jpegModelR5MixerE6column, align 4
  %1364 = add nsw i32 %1363, 1
  store i32 %1364, i32* @_ZZ9jpegModelR5MixerE6column, align 4
  %1365 = load i32, i32* @_ZZ9jpegModelR5MixerE5width, align 4
  %1366 = icmp eq i32 %1364, %1365
  br i1 %1366, label %1367, label %1370

1367:                                             ; preds = %1362
  store i32 0, i32* @_ZZ9jpegModelR5MixerE6column, align 4
  %1368 = load i32, i32* @_ZZ9jpegModelR5MixerE3row, align 4
  %1369 = add nsw i32 %1368, 1
  store i32 %1369, i32* @_ZZ9jpegModelR5MixerE3row, align 4
  br label %1370

1370:                                             ; preds = %1367, %1362
  br label %1371

1371:                                             ; preds = %1370, %1358
  store i32 0, i32* @_ZZ9jpegModelR5MixerE8huffbits, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE8huffsize, align 4
  store i32 0, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  store i32 -1, i32* @_ZZ9jpegModelR5MixerE2rs, align 4
  %1372 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1373 = ashr i32 %1372, 6
  store i32 %1373, i32* %37, align 4
  %1374 = load i32, i32* %37, align 4
  %1375 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE4qmap, i32 %1374)
  %1376 = load i32, i32* %1375, align 4
  %1377 = mul nsw i32 64, %1376
  store i32 %1377, i32* %38, align 4
  %1378 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %1379 = and i32 %1378, 63
  store i32 %1379, i32* %39, align 4
  %1380 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1381 = load i32, i32* %39, align 4
  %1382 = sub nsw i32 %1380, %1381
  store i32 %1382, i32* %40, align 4
  %1383 = load i32, i32* %39, align 4
  %1384 = icmp eq i32 %1383, 0
  br i1 %1384, label %1385, label %1613

1385:                                             ; preds = %1371
  store i32 0, i32* %41, align 4
  br label %1386

1386:                                             ; preds = %1433, %1385
  %1387 = load i32, i32* %41, align 4
  %1388 = icmp slt i32 %1387, 8
  br i1 %1388, label %1389, label %1436

1389:                                             ; preds = %1386
  %1390 = load i32, i32* %41, align 4
  %1391 = sext i32 %1390 to i64
  %1392 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 %1391
  %1393 = load i32, i32* %1392, align 4
  %1394 = load i32, i32* %41, align 4
  %1395 = sext i32 %1394 to i64
  %1396 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 %1395
  %1397 = load i32, i32* %1396, align 4
  %1398 = load i32, i32* %41, align 4
  %1399 = sext i32 %1398 to i64
  %1400 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 %1399
  %1401 = load i32, i32* %41, align 4
  %1402 = add nsw i32 %1401, 16
  %1403 = sext i32 %1402 to i64
  %1404 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 %1403
  call void @_Z8update_kiiRiS_(i32 %1393, i32 %1397, i32* dereferenceable(4) %1400, i32* dereferenceable(4) %1404)
  %1405 = load i32, i32* %41, align 4
  %1406 = sext i32 %1405 to i64
  %1407 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 %1406
  %1408 = load i32, i32* %1407, align 4
  %1409 = load i32, i32* %41, align 4
  %1410 = sext i32 %1409 to i64
  %1411 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 %1410
  %1412 = load i32, i32* %1411, align 4
  %1413 = load i32, i32* %41, align 4
  %1414 = add nsw i32 %1413, 8
  %1415 = sext i32 %1414 to i64
  %1416 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 %1415
  %1417 = load i32, i32* %41, align 4
  %1418 = add nsw i32 %1417, 24
  %1419 = sext i32 %1418 to i64
  %1420 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 %1419
  call void @_Z8update_kiiRiS_(i32 %1408, i32 %1412, i32* dereferenceable(4) %1416, i32* dereferenceable(4) %1420)
  %1421 = load i32, i32* %41, align 4
  %1422 = sext i32 %1421 to i64
  %1423 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 %1422
  store i32 0, i32* %1423, align 4
  %1424 = load i32, i32* %41, align 4
  %1425 = sext i32 %1424 to i64
  %1426 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 %1425
  store i32 0, i32* %1426, align 4
  %1427 = load i32, i32* %41, align 4
  %1428 = sext i32 %1427 to i64
  %1429 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 %1428
  store i32 0, i32* %1429, align 4
  %1430 = load i32, i32* %41, align 4
  %1431 = sext i32 %1430 to i64
  %1432 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 %1431
  store i32 0, i32* %1432, align 4
  br label %1433

1433:                                             ; preds = %1389
  %1434 = load i32, i32* %41, align 4
  %1435 = add nsw i32 %1434, 1
  store i32 %1435, i32* %41, align 4
  br label %1386

1436:                                             ; preds = %1386
  %1437 = load i32, i32* %40, align 4
  %1438 = load i32, i32* %37, align 4
  %1439 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE2ls, i32 %1438)
  %1440 = load i32, i32* %1439, align 4
  %1441 = sub nsw i32 %1437, %1440
  store i32 %1441, i32* %42, align 4
  %1442 = load i32, i32* %40, align 4
  %1443 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %1444 = load i32, i32* @_ZZ9jpegModelR5MixerE5width, align 4
  %1445 = mul nsw i32 %1443, %1444
  %1446 = sub nsw i32 %1442, %1445
  store i32 %1446, i32* %43, align 4
  store i32 0, i32* %44, align 4
  br label %1447

1447:                                             ; preds = %1609, %1436
  %1448 = load i32, i32* %44, align 4
  %1449 = icmp slt i32 %1448, 64
  br i1 %1449, label %1450, label %1612

1450:                                             ; preds = %1447
  %1451 = load i32, i32* %44, align 4
  %1452 = sext i32 %1451 to i64
  %1453 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1452
  %1454 = load i8, i8* %1453, align 1
  %1455 = zext i8 %1454 to i64
  %1456 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %1455
  %1457 = load i32, i32* %1456, align 4
  %1458 = load i32, i32* %44, align 4
  %1459 = sext i32 %1458 to i64
  %1460 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1459
  %1461 = load i8, i8* %1460, align 1
  %1462 = zext i8 %1461 to i32
  %1463 = and i32 %1462, 1
  %1464 = icmp ne i32 %1463, 0
  %1465 = zext i1 %1464 to i64
  %1466 = select i1 %1464, i32 -1, i32 1
  %1467 = mul nsw i32 %1457, %1466
  %1468 = load i32, i32* %38, align 4
  %1469 = load i32, i32* %44, align 4
  %1470 = add nsw i32 %1468, %1469
  %1471 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ9jpegModelR5MixerE4qtab, i32 %1470)
  %1472 = load i8, i8* %1471, align 1
  %1473 = zext i8 %1472 to i32
  %1474 = add nsw i32 %1473, 1
  %1475 = mul nsw i32 %1467, %1474
  %1476 = load i32, i32* %43, align 4
  %1477 = load i32, i32* %44, align 4
  %1478 = add nsw i32 %1476, %1477
  %1479 = call dereferenceable(4) i32* @_ZN6IntBufixEi(%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2, i32 %1478)
  %1480 = load i32, i32* %1479, align 4
  %1481 = mul nsw i32 %1475, %1480
  %1482 = load i32, i32* %44, align 4
  %1483 = sext i32 %1482 to i64
  %1484 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1483
  %1485 = load i8, i8* %1484, align 1
  %1486 = zext i8 %1485 to i64
  %1487 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 %1486
  %1488 = load i32, i32* %1487, align 4
  %1489 = add nsw i32 %1488, %1481
  store i32 %1489, i32* %1487, align 4
  %1490 = load i32, i32* %44, align 4
  %1491 = sext i32 %1490 to i64
  %1492 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1491
  %1493 = load i8, i8* %1492, align 1
  %1494 = zext i8 %1493 to i64
  %1495 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %1494
  %1496 = load i32, i32* %1495, align 4
  %1497 = load i32, i32* %44, align 4
  %1498 = sext i32 %1497 to i64
  %1499 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1498
  %1500 = load i8, i8* %1499, align 1
  %1501 = zext i8 %1500 to i32
  %1502 = and i32 %1501, 1
  %1503 = icmp ne i32 %1502, 0
  %1504 = zext i1 %1503 to i64
  %1505 = select i1 %1503, i32 -1, i32 1
  %1506 = mul nsw i32 %1496, %1505
  %1507 = load i32, i32* %38, align 4
  %1508 = load i32, i32* %44, align 4
  %1509 = add nsw i32 %1507, %1508
  %1510 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ9jpegModelR5MixerE4qtab, i32 %1509)
  %1511 = load i8, i8* %1510, align 1
  %1512 = zext i8 %1511 to i32
  %1513 = add nsw i32 %1512, 1
  %1514 = mul nsw i32 %1506, %1513
  %1515 = load i32, i32* %42, align 4
  %1516 = load i32, i32* %44, align 4
  %1517 = add nsw i32 %1515, %1516
  %1518 = call dereferenceable(4) i32* @_ZN6IntBufixEi(%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2, i32 %1517)
  %1519 = load i32, i32* %1518, align 4
  %1520 = mul nsw i32 %1514, %1519
  %1521 = load i32, i32* %44, align 4
  %1522 = sext i32 %1521 to i64
  %1523 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1522
  %1524 = load i8, i8* %1523, align 1
  %1525 = zext i8 %1524 to i64
  %1526 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 %1525
  %1527 = load i32, i32* %1526, align 4
  %1528 = add nsw i32 %1527, %1520
  store i32 %1528, i32* %1526, align 4
  %1529 = load i32, i32* %44, align 4
  %1530 = sext i32 %1529 to i64
  %1531 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1530
  %1532 = load i8, i8* %1531, align 1
  %1533 = icmp ne i8 %1532, 0
  br i1 %1533, label %1534, label %1544

1534:                                             ; preds = %1450
  %1535 = load i32, i32* %44, align 4
  %1536 = sext i32 %1535 to i64
  %1537 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1536
  %1538 = load i8, i8* %1537, align 1
  %1539 = zext i8 %1538 to i32
  %1540 = and i32 %1539, 1
  %1541 = icmp ne i32 %1540, 0
  %1542 = zext i1 %1541 to i64
  %1543 = select i1 %1541, i32 -256, i32 256
  br label %1545

1544:                                             ; preds = %1450
  br label %1545

1545:                                             ; preds = %1544, %1534
  %1546 = phi i32 [ %1543, %1534 ], [ 181, %1544 ]
  %1547 = load i32, i32* %38, align 4
  %1548 = load i32, i32* %44, align 4
  %1549 = add nsw i32 %1547, %1548
  %1550 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ9jpegModelR5MixerE4qtab, i32 %1549)
  %1551 = load i8, i8* %1550, align 1
  %1552 = zext i8 %1551 to i32
  %1553 = add nsw i32 %1552, 1
  %1554 = mul nsw i32 %1546, %1553
  %1555 = load i32, i32* %43, align 4
  %1556 = load i32, i32* %44, align 4
  %1557 = add nsw i32 %1555, %1556
  %1558 = call dereferenceable(4) i32* @_ZN6IntBufixEi(%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2, i32 %1557)
  %1559 = load i32, i32* %1558, align 4
  %1560 = mul nsw i32 %1554, %1559
  %1561 = load i32, i32* %44, align 4
  %1562 = sext i32 %1561 to i64
  %1563 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1562
  %1564 = load i8, i8* %1563, align 1
  %1565 = zext i8 %1564 to i64
  %1566 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 %1565
  %1567 = load i32, i32* %1566, align 4
  %1568 = add nsw i32 %1567, %1560
  store i32 %1568, i32* %1566, align 4
  %1569 = load i32, i32* %44, align 4
  %1570 = sext i32 %1569 to i64
  %1571 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1570
  %1572 = load i8, i8* %1571, align 1
  %1573 = icmp ne i8 %1572, 0
  br i1 %1573, label %1574, label %1584

1574:                                             ; preds = %1545
  %1575 = load i32, i32* %44, align 4
  %1576 = sext i32 %1575 to i64
  %1577 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1576
  %1578 = load i8, i8* %1577, align 1
  %1579 = zext i8 %1578 to i32
  %1580 = and i32 %1579, 1
  %1581 = icmp ne i32 %1580, 0
  %1582 = zext i1 %1581 to i64
  %1583 = select i1 %1581, i32 -256, i32 256
  br label %1585

1584:                                             ; preds = %1545
  br label %1585

1585:                                             ; preds = %1584, %1574
  %1586 = phi i32 [ %1583, %1574 ], [ 181, %1584 ]
  %1587 = load i32, i32* %38, align 4
  %1588 = load i32, i32* %44, align 4
  %1589 = add nsw i32 %1587, %1588
  %1590 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ9jpegModelR5MixerE4qtab, i32 %1589)
  %1591 = load i8, i8* %1590, align 1
  %1592 = zext i8 %1591 to i32
  %1593 = add nsw i32 %1592, 1
  %1594 = mul nsw i32 %1586, %1593
  %1595 = load i32, i32* %42, align 4
  %1596 = load i32, i32* %44, align 4
  %1597 = add nsw i32 %1595, %1596
  %1598 = call dereferenceable(4) i32* @_ZN6IntBufixEi(%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2, i32 %1597)
  %1599 = load i32, i32* %1598, align 4
  %1600 = mul nsw i32 %1594, %1599
  %1601 = load i32, i32* %44, align 4
  %1602 = sext i32 %1601 to i64
  %1603 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1602
  %1604 = load i8, i8* %1603, align 1
  %1605 = zext i8 %1604 to i64
  %1606 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 %1605
  %1607 = load i32, i32* %1606, align 4
  %1608 = add nsw i32 %1607, %1600
  store i32 %1608, i32* %1606, align 4
  br label %1609

1609:                                             ; preds = %1585
  %1610 = load i32, i32* %44, align 4
  %1611 = add nsw i32 %1610, 1
  store i32 %1611, i32* %44, align 4
  br label %1447

1612:                                             ; preds = %1447
  br label %1738

1613:                                             ; preds = %1371
  %1614 = load i32, i32* %39, align 4
  %1615 = sub nsw i32 %1614, 1
  %1616 = sext i32 %1615 to i64
  %1617 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1616
  %1618 = load i8, i8* %1617, align 1
  %1619 = zext i8 %1618 to i64
  %1620 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %1619
  %1621 = load i32, i32* %1620, align 4
  %1622 = load i32, i32* %38, align 4
  %1623 = load i32, i32* %39, align 4
  %1624 = add nsw i32 %1622, %1623
  %1625 = sub nsw i32 %1624, 1
  %1626 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ9jpegModelR5MixerE4qtab, i32 %1625)
  %1627 = load i8, i8* %1626, align 1
  %1628 = zext i8 %1627 to i32
  %1629 = add nsw i32 %1628, 1
  %1630 = mul nsw i32 %1621, %1629
  %1631 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1632 = sub nsw i32 %1631, 1
  %1633 = call dereferenceable(4) i32* @_ZN6IntBufixEi(%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2, i32 %1632)
  %1634 = load i32, i32* %1633, align 4
  %1635 = mul nsw i32 %1630, %1634
  %1636 = load i32, i32* %39, align 4
  %1637 = sub nsw i32 %1636, 1
  %1638 = sext i32 %1637 to i64
  %1639 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1638
  %1640 = load i8, i8* %1639, align 1
  %1641 = zext i8 %1640 to i64
  %1642 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 %1641
  %1643 = load i32, i32* %1642, align 4
  %1644 = sub nsw i32 %1643, %1635
  store i32 %1644, i32* %1642, align 4
  %1645 = load i32, i32* %39, align 4
  %1646 = sub nsw i32 %1645, 1
  %1647 = sext i32 %1646 to i64
  %1648 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1647
  %1649 = load i8, i8* %1648, align 1
  %1650 = zext i8 %1649 to i64
  %1651 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %1650
  %1652 = load i32, i32* %1651, align 4
  %1653 = load i32, i32* %38, align 4
  %1654 = load i32, i32* %39, align 4
  %1655 = add nsw i32 %1653, %1654
  %1656 = sub nsw i32 %1655, 1
  %1657 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ9jpegModelR5MixerE4qtab, i32 %1656)
  %1658 = load i8, i8* %1657, align 1
  %1659 = zext i8 %1658 to i32
  %1660 = add nsw i32 %1659, 1
  %1661 = mul nsw i32 %1652, %1660
  %1662 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1663 = sub nsw i32 %1662, 1
  %1664 = call dereferenceable(4) i32* @_ZN6IntBufixEi(%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2, i32 %1663)
  %1665 = load i32, i32* %1664, align 4
  %1666 = mul nsw i32 %1661, %1665
  %1667 = load i32, i32* %39, align 4
  %1668 = sub nsw i32 %1667, 1
  %1669 = sext i32 %1668 to i64
  %1670 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1669
  %1671 = load i8, i8* %1670, align 1
  %1672 = zext i8 %1671 to i64
  %1673 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 %1672
  %1674 = load i32, i32* %1673, align 4
  %1675 = sub nsw i32 %1674, %1666
  store i32 %1675, i32* %1673, align 4
  %1676 = load i32, i32* %39, align 4
  %1677 = sub nsw i32 %1676, 1
  %1678 = sext i32 %1677 to i64
  %1679 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1678
  %1680 = load i8, i8* %1679, align 1
  %1681 = icmp ne i8 %1680, 0
  %1682 = zext i1 %1681 to i64
  %1683 = select i1 %1681, i32 256, i32 181
  %1684 = load i32, i32* %38, align 4
  %1685 = load i32, i32* %39, align 4
  %1686 = add nsw i32 %1684, %1685
  %1687 = sub nsw i32 %1686, 1
  %1688 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ9jpegModelR5MixerE4qtab, i32 %1687)
  %1689 = load i8, i8* %1688, align 1
  %1690 = zext i8 %1689 to i32
  %1691 = add nsw i32 %1690, 1
  %1692 = mul nsw i32 %1683, %1691
  %1693 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1694 = sub nsw i32 %1693, 1
  %1695 = call dereferenceable(4) i32* @_ZN6IntBufixEi(%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2, i32 %1694)
  %1696 = load i32, i32* %1695, align 4
  %1697 = mul nsw i32 %1692, %1696
  %1698 = load i32, i32* %39, align 4
  %1699 = sub nsw i32 %1698, 1
  %1700 = sext i32 %1699 to i64
  %1701 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1700
  %1702 = load i8, i8* %1701, align 1
  %1703 = zext i8 %1702 to i64
  %1704 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 %1703
  %1705 = load i32, i32* %1704, align 4
  %1706 = sub nsw i32 %1705, %1697
  store i32 %1706, i32* %1704, align 4
  %1707 = load i32, i32* %39, align 4
  %1708 = sub nsw i32 %1707, 1
  %1709 = sext i32 %1708 to i64
  %1710 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1709
  %1711 = load i8, i8* %1710, align 1
  %1712 = icmp ne i8 %1711, 0
  %1713 = zext i1 %1712 to i64
  %1714 = select i1 %1712, i32 256, i32 181
  %1715 = load i32, i32* %38, align 4
  %1716 = load i32, i32* %39, align 4
  %1717 = add nsw i32 %1715, %1716
  %1718 = sub nsw i32 %1717, 1
  %1719 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ9jpegModelR5MixerE4qtab, i32 %1718)
  %1720 = load i8, i8* %1719, align 1
  %1721 = zext i8 %1720 to i32
  %1722 = add nsw i32 %1721, 1
  %1723 = mul nsw i32 %1714, %1722
  %1724 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %1725 = sub nsw i32 %1724, 1
  %1726 = call dereferenceable(4) i32* @_ZN6IntBufixEi(%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2, i32 %1725)
  %1727 = load i32, i32* %1726, align 4
  %1728 = mul nsw i32 %1723, %1727
  %1729 = load i32, i32* %39, align 4
  %1730 = sub nsw i32 %1729, 1
  %1731 = sext i32 %1730 to i64
  %1732 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1731
  %1733 = load i8, i8* %1732, align 1
  %1734 = zext i8 %1733 to i64
  %1735 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 %1734
  %1736 = load i32, i32* %1735, align 4
  %1737 = sub nsw i32 %1736, %1728
  store i32 %1737, i32* %1735, align 4
  br label %1738

1738:                                             ; preds = %1613, %1612
  store i32 0, i32* %45, align 4
  br label %1739

1739:                                             ; preds = %1786, %1738
  %1740 = load i32, i32* %45, align 4
  %1741 = icmp slt i32 %1740, 8
  br i1 %1741, label %1742, label %1789

1742:                                             ; preds = %1739
  %1743 = load i32, i32* %45, align 4
  %1744 = sext i32 %1743 to i64
  %1745 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 %1744
  %1746 = load i32, i32* %1745, align 4
  store i32 %1746, i32* %46, align 4
  %1747 = load i32, i32* %45, align 4
  %1748 = sext i32 %1747 to i64
  %1749 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 %1748
  %1750 = load i32, i32* %1749, align 4
  %1751 = load i32, i32* %46, align 4
  %1752 = mul nsw i32 %1750, %1751
  %1753 = load i32, i32* %45, align 4
  %1754 = sext i32 %1753 to i64
  %1755 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 %1754
  %1756 = load i32, i32* %1755, align 4
  %1757 = load i32, i32* %46, align 4
  %1758 = sub nsw i32 8, %1757
  %1759 = mul nsw i32 %1756, %1758
  %1760 = add nsw i32 %1752, %1759
  %1761 = sdiv i32 %1760, 8
  %1762 = load i32, i32* %45, align 4
  %1763 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE4sumv, i32 %1762)
  store i32 %1761, i32* %1763, align 4
  %1764 = load i32, i32* %45, align 4
  %1765 = add nsw i32 %1764, 8
  %1766 = sext i32 %1765 to i64
  %1767 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 %1766
  %1768 = load i32, i32* %1767, align 4
  store i32 %1768, i32* %46, align 4
  %1769 = load i32, i32* %45, align 4
  %1770 = sext i32 %1769 to i64
  %1771 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 %1770
  %1772 = load i32, i32* %1771, align 4
  %1773 = load i32, i32* %46, align 4
  %1774 = mul nsw i32 %1772, %1773
  %1775 = load i32, i32* %45, align 4
  %1776 = sext i32 %1775 to i64
  %1777 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 %1776
  %1778 = load i32, i32* %1777, align 4
  %1779 = load i32, i32* %46, align 4
  %1780 = sub nsw i32 8, %1779
  %1781 = mul nsw i32 %1778, %1780
  %1782 = add nsw i32 %1774, %1781
  %1783 = sdiv i32 %1782, 8
  %1784 = load i32, i32* %45, align 4
  %1785 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE4sumu, i32 %1784)
  store i32 %1783, i32* %1785, align 4
  br label %1786

1786:                                             ; preds = %1742
  %1787 = load i32, i32* %45, align 4
  %1788 = add nsw i32 %1787, 1
  store i32 %1788, i32* %45, align 4
  br label %1739

1789:                                             ; preds = %1739
  store i32 0, i32* %47, align 4
  br label %1790

1790:                                             ; preds = %1933, %1789
  %1791 = load i32, i32* %47, align 4
  %1792 = icmp slt i32 %1791, 3
  br i1 %1792, label %1793, label %1936

1793:                                             ; preds = %1790
  store i32 0, i32* %48, align 4
  br label %1794

1794:                                             ; preds = %1929, %1793
  %1795 = load i32, i32* %48, align 4
  %1796 = icmp slt i32 %1795, 8
  br i1 %1796, label %1797, label %1932

1797:                                             ; preds = %1794
  %1798 = load i32, i32* %39, align 4
  %1799 = load i32, i32* %48, align 4
  %1800 = add nsw i32 %1798, %1799
  %1801 = call i32 @_Z3minii(i32 %1800, i32 63)
  store i32 %1801, i32* %49, align 4
  %1802 = load i32, i32* %49, align 4
  %1803 = sext i32 %1802 to i64
  %1804 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1803
  %1805 = load i8, i8* %1804, align 1
  %1806 = zext i8 %1805 to i32
  %1807 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE4sumu, i32 %1806)
  %1808 = load i32, i32* %1807, align 4
  %1809 = load i32, i32* %47, align 4
  %1810 = mul nsw i32 %1808, %1809
  %1811 = load i32, i32* %49, align 4
  %1812 = sext i32 %1811 to i64
  %1813 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1812
  %1814 = load i8, i8* %1813, align 1
  %1815 = zext i8 %1814 to i32
  %1816 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE4sumv, i32 %1815)
  %1817 = load i32, i32* %1816, align 4
  %1818 = load i32, i32* %47, align 4
  %1819 = sub nsw i32 2, %1818
  %1820 = mul nsw i32 %1817, %1819
  %1821 = add nsw i32 %1810, %1820
  %1822 = sdiv i32 %1821, 2
  store i32 %1822, i32* %50, align 4
  %1823 = load i32, i32* %38, align 4
  %1824 = load i32, i32* %49, align 4
  %1825 = add nsw i32 %1823, %1824
  %1826 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ9jpegModelR5MixerE4qtab, i32 %1825)
  %1827 = load i8, i8* %1826, align 1
  %1828 = zext i8 %1827 to i32
  %1829 = add nsw i32 %1828, 1
  %1830 = mul nsw i32 %1829, 181
  %1831 = load i32, i32* %50, align 4
  %1832 = sdiv i32 %1831, %1830
  store i32 %1832, i32* %50, align 4
  %1833 = load i32, i32* %49, align 4
  %1834 = icmp eq i32 %1833, 0
  br i1 %1834, label %1835, label %1857

1835:                                             ; preds = %1797
  %1836 = load i32, i32* %40, align 4
  %1837 = load i32, i32* %37, align 4
  %1838 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE2ls, i32 %1837)
  %1839 = load i32, i32* %1838, align 4
  %1840 = sub nsw i32 %1836, %1839
  %1841 = call dereferenceable(4) i32* @_ZN6IntBufixEi(%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2, i32 %1840)
  %1842 = load i32, i32* %1841, align 4
  %1843 = load i32, i32* %50, align 4
  %1844 = sub nsw i32 %1843, %1842
  store i32 %1844, i32* %50, align 4
  %1845 = load i32, i32* %50, align 4
  %1846 = icmp slt i32 %1845, 0
  %1847 = zext i1 %1846 to i64
  %1848 = select i1 %1846, i32 -1, i32 1
  %1849 = load i32, i32* %50, align 4
  %1850 = call i32 @abs(i32 %1849) #12
  %1851 = mul nsw i32 14, %1850
  %1852 = add nsw i32 %1851, 1
  %1853 = trunc i32 %1852 to i16
  %1854 = call i32 @_ZNK4IlogclEt(%class.Buf* @ilog, i16 zeroext %1853)
  %1855 = mul nsw i32 %1848, %1854
  %1856 = sdiv i32 %1855, 10
  store i32 %1856, i32* %50, align 4
  br label %1870

1857:                                             ; preds = %1797
  %1858 = load i32, i32* %50, align 4
  %1859 = icmp slt i32 %1858, 0
  %1860 = zext i1 %1859 to i64
  %1861 = select i1 %1859, i32 -1, i32 1
  %1862 = load i32, i32* %50, align 4
  %1863 = call i32 @abs(i32 %1862) #12
  %1864 = mul nsw i32 10, %1863
  %1865 = add nsw i32 %1864, 1
  %1866 = trunc i32 %1865 to i16
  %1867 = call i32 @_ZNK4IlogclEt(%class.Buf* @ilog, i16 zeroext %1866)
  %1868 = mul nsw i32 %1861, %1867
  %1869 = sdiv i32 %1868, 10
  store i32 %1869, i32* %50, align 4
  br label %1870

1870:                                             ; preds = %1857, %1835
  %1871 = load i32, i32* %48, align 4
  %1872 = icmp eq i32 %1871, 0
  br i1 %1872, label %1873, label %1882

1873:                                             ; preds = %1870
  %1874 = load i32, i32* %50, align 4
  %1875 = load i32, i32* %47, align 4
  %1876 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 %1875)
  store i32 %1874, i32* %1876, align 4
  %1877 = load i32, i32* %50, align 4
  %1878 = sdiv i32 %1877, 4
  %1879 = load i32, i32* %47, align 4
  %1880 = add nsw i32 %1879, 4
  %1881 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 %1880)
  store i32 %1878, i32* %1881, align 4
  br label %1928

1882:                                             ; preds = %1870
  %1883 = load i32, i32* %50, align 4
  %1884 = call i32 @abs(i32 %1883) #12
  %1885 = load i32, i32* %47, align 4
  %1886 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 %1885)
  %1887 = load i32, i32* %1886, align 4
  %1888 = call i32 @abs(i32 %1887) #12
  %1889 = add nsw i32 %1888, 1
  %1890 = icmp sgt i32 %1884, %1889
  br i1 %1890, label %1891, label %1927

1891:                                             ; preds = %1882
  %1892 = load i32, i32* %48, align 4
  %1893 = mul nsw i32 %1892, 2
  %1894 = load i32, i32* %50, align 4
  %1895 = icmp sgt i32 %1894, 0
  %1896 = zext i1 %1895 to i32
  %1897 = add nsw i32 %1893, %1896
  %1898 = shl i32 %1897, 6
  %1899 = load i32, i32* %47, align 4
  %1900 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 %1899)
  %1901 = load i32, i32* %1900, align 4
  %1902 = add nsw i32 %1901, %1898
  store i32 %1902, i32* %1900, align 4
  %1903 = load i32, i32* %50, align 4
  %1904 = sdiv i32 %1903, 4
  %1905 = call i32 @abs(i32 %1904) #12
  %1906 = load i32, i32* %47, align 4
  %1907 = add nsw i32 %1906, 4
  %1908 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 %1907)
  %1909 = load i32, i32* %1908, align 4
  %1910 = call i32 @abs(i32 %1909) #12
  %1911 = add nsw i32 %1910, 1
  %1912 = icmp sgt i32 %1905, %1911
  br i1 %1912, label %1913, label %1926

1913:                                             ; preds = %1891
  %1914 = load i32, i32* %48, align 4
  %1915 = mul nsw i32 %1914, 2
  %1916 = load i32, i32* %50, align 4
  %1917 = icmp sgt i32 %1916, 0
  %1918 = zext i1 %1917 to i32
  %1919 = add nsw i32 %1915, %1918
  %1920 = shl i32 %1919, 6
  %1921 = load i32, i32* %47, align 4
  %1922 = add nsw i32 %1921, 4
  %1923 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 %1922)
  %1924 = load i32, i32* %1923, align 4
  %1925 = add nsw i32 %1924, %1920
  store i32 %1925, i32* %1923, align 4
  br label %1926

1926:                                             ; preds = %1913, %1891
  br label %1932

1927:                                             ; preds = %1882
  br label %1928

1928:                                             ; preds = %1927, %1873
  br label %1929

1929:                                             ; preds = %1928
  %1930 = load i32, i32* %48, align 4
  %1931 = add nsw i32 %1930, 1
  store i32 %1931, i32* %48, align 4
  br label %1794

1932:                                             ; preds = %1926, %1794
  br label %1933

1933:                                             ; preds = %1932
  %1934 = load i32, i32* %47, align 4
  %1935 = add nsw i32 %1934, 1
  store i32 %1935, i32* %47, align 4
  br label %1790

1936:                                             ; preds = %1790
  %1937 = load i32, i32* %39, align 4
  %1938 = sext i32 %1937 to i64
  %1939 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1938
  %1940 = load i8, i8* %1939, align 1
  %1941 = zext i8 %1940 to i32
  %1942 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE4sumu, i32 %1941)
  %1943 = load i32, i32* %1942, align 4
  %1944 = mul nsw i32 2, %1943
  %1945 = load i32, i32* %39, align 4
  %1946 = sext i32 %1945 to i64
  %1947 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1946
  %1948 = load i8, i8* %1947, align 1
  %1949 = zext i8 %1948 to i32
  %1950 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE4sumv, i32 %1949)
  %1951 = load i32, i32* %1950, align 4
  %1952 = mul nsw i32 2, %1951
  %1953 = add nsw i32 %1944, %1952
  store i32 %1953, i32* %32, align 4
  store i32 0, i32* %51, align 4
  br label %1954

1954:                                             ; preds = %1986, %1936
  %1955 = load i32, i32* %51, align 4
  %1956 = icmp slt i32 %1955, 8
  br i1 %1956, label %1957, label %1989

1957:                                             ; preds = %1954
  %1958 = load i32, i32* %39, align 4
  %1959 = sext i32 %1958 to i64
  %1960 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1959
  %1961 = load i8, i8* %1960, align 1
  %1962 = zext i8 %1961 to i32
  %1963 = load i32, i32* %51, align 4
  %1964 = icmp slt i32 %1962, %1963
  br i1 %1964, label %1965, label %1971

1965:                                             ; preds = %1957
  %1966 = load i32, i32* %51, align 4
  %1967 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE4sumu, i32 %1966)
  %1968 = load i32, i32* %1967, align 4
  %1969 = load i32, i32* %32, align 4
  %1970 = sub nsw i32 %1969, %1968
  store i32 %1970, i32* %32, align 4
  br label %1971

1971:                                             ; preds = %1965, %1957
  %1972 = load i32, i32* %39, align 4
  %1973 = sext i32 %1972 to i64
  %1974 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1973
  %1975 = load i8, i8* %1974, align 1
  %1976 = zext i8 %1975 to i32
  %1977 = load i32, i32* %51, align 4
  %1978 = icmp slt i32 %1976, %1977
  br i1 %1978, label %1979, label %1985

1979:                                             ; preds = %1971
  %1980 = load i32, i32* %51, align 4
  %1981 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE4sumv, i32 %1980)
  %1982 = load i32, i32* %1981, align 4
  %1983 = load i32, i32* %32, align 4
  %1984 = sub nsw i32 %1983, %1982
  store i32 %1984, i32* %32, align 4
  br label %1985

1985:                                             ; preds = %1979, %1971
  br label %1986

1986:                                             ; preds = %1985
  %1987 = load i32, i32* %51, align 4
  %1988 = add nsw i32 %1987, 1
  store i32 %1988, i32* %51, align 4
  br label %1954

1989:                                             ; preds = %1954
  %1990 = load i32, i32* %38, align 4
  %1991 = load i32, i32* %39, align 4
  %1992 = add nsw i32 %1990, %1991
  %1993 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ9jpegModelR5MixerE4qtab, i32 %1992)
  %1994 = load i8, i8* %1993, align 1
  %1995 = zext i8 %1994 to i32
  %1996 = add nsw i32 %1995, 1
  %1997 = mul nsw i32 %1996, 181
  %1998 = load i32, i32* %32, align 4
  %1999 = sdiv i32 %1998, %1997
  store i32 %1999, i32* %32, align 4
  %2000 = load i32, i32* %39, align 4
  %2001 = icmp eq i32 %2000, 0
  br i1 %2001, label %2002, label %2012

2002:                                             ; preds = %1989
  %2003 = load i32, i32* %40, align 4
  %2004 = load i32, i32* %37, align 4
  %2005 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE2ls, i32 %2004)
  %2006 = load i32, i32* %2005, align 4
  %2007 = sub nsw i32 %2003, %2006
  %2008 = call dereferenceable(4) i32* @_ZN6IntBufixEi(%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2, i32 %2007)
  %2009 = load i32, i32* %2008, align 4
  %2010 = load i32, i32* %32, align 4
  %2011 = sub nsw i32 %2010, %2009
  store i32 %2011, i32* %32, align 4
  br label %2012

2012:                                             ; preds = %2002, %1989
  %2013 = load i32, i32* %32, align 4
  %2014 = icmp slt i32 %2013, 0
  %2015 = zext i1 %2014 to i64
  %2016 = select i1 %2014, i32 -1, i32 1
  %2017 = load i32, i32* %32, align 4
  %2018 = call i32 @abs(i32 %2017) #12
  %2019 = mul nsw i32 10, %2018
  %2020 = add nsw i32 %2019, 1
  %2021 = trunc i32 %2020 to i16
  %2022 = call i32 @_ZNK4IlogclEt(%class.Buf* @ilog, i16 zeroext %2021)
  %2023 = mul nsw i32 %2016, %2022
  %2024 = sdiv i32 %2023, 10
  %2025 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 3)
  store i32 %2024, i32* %2025, align 4
  store i32 0, i32* %52, align 4
  br label %2026

2026:                                             ; preds = %2115, %2012
  %2027 = load i32, i32* %52, align 4
  %2028 = icmp slt i32 %2027, 4
  br i1 %2028, label %2029, label %2118

2029:                                             ; preds = %2026
  %2030 = load i32, i32* %52, align 4
  %2031 = and i32 %2030, 1
  %2032 = icmp ne i32 %2031, 0
  br i1 %2032, label %2033, label %2038

2033:                                             ; preds = %2029
  %2034 = load i32, i32* %39, align 4
  %2035 = sext i32 %2034 to i64
  %2036 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %2035
  %2037 = load i8, i8* %2036, align 1
  br label %2043

2038:                                             ; preds = %2029
  %2039 = load i32, i32* %39, align 4
  %2040 = sext i32 %2039 to i64
  %2041 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %2040
  %2042 = load i8, i8* %2041, align 1
  br label %2043

2043:                                             ; preds = %2038, %2033
  %2044 = phi i8 [ %2037, %2033 ], [ %2042, %2038 ]
  %2045 = zext i8 %2044 to i32
  store i32 %2045, i32* %53, align 4
  %2046 = load i32, i32* %52, align 4
  %2047 = and i32 %2046, 2
  %2048 = icmp ne i32 %2047, 0
  %2049 = zext i1 %2048 to i64
  %2050 = select i1 %2048, i32 2, i32 1
  store i32 %2050, i32* %54, align 4
  %2051 = load i32, i32* %53, align 4
  %2052 = load i32, i32* %54, align 4
  %2053 = icmp slt i32 %2051, %2052
  br i1 %2053, label %2054, label %2055

2054:                                             ; preds = %2043
  store i32 255, i32* %32, align 4
  br label %2111

2055:                                             ; preds = %2043
  %2056 = load i32, i32* %39, align 4
  %2057 = sext i32 %2056 to i64
  %2058 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %2057
  %2059 = load i8, i8* %2058, align 1
  %2060 = zext i8 %2059 to i32
  %2061 = load i32, i32* %39, align 4
  %2062 = sext i32 %2061 to i64
  %2063 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %2062
  %2064 = load i8, i8* %2063, align 1
  %2065 = zext i8 %2064 to i32
  %2066 = mul nsw i32 8, %2065
  %2067 = add nsw i32 %2060, %2066
  %2068 = load i32, i32* %52, align 4
  %2069 = and i32 %2068, 1
  %2070 = icmp ne i32 %2069, 0
  %2071 = zext i1 %2070 to i64
  %2072 = select i1 %2070, i32 8, i32 1
  %2073 = load i32, i32* %54, align 4
  %2074 = mul nsw i32 %2072, %2073
  %2075 = sub nsw i32 %2067, %2074
  %2076 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE4zpos, i32 %2075)
  %2077 = load i32, i32* %2076, align 4
  store i32 %2077, i32* %55, align 4
  %2078 = load i32, i32* %38, align 4
  %2079 = load i32, i32* %55, align 4
  %2080 = add nsw i32 %2078, %2079
  %2081 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ9jpegModelR5MixerE4qtab, i32 %2080)
  %2082 = load i8, i8* %2081, align 1
  %2083 = zext i8 %2082 to i32
  %2084 = add nsw i32 %2083, 1
  %2085 = load i32, i32* %40, align 4
  %2086 = load i32, i32* %55, align 4
  %2087 = add nsw i32 %2085, %2086
  %2088 = call dereferenceable(4) i32* @_ZN6IntBufixEi(%class.IntBuf* @_ZZ9jpegModelR5MixerE5cbuf2, i32 %2087)
  %2089 = load i32, i32* %2088, align 4
  %2090 = mul nsw i32 %2084, %2089
  %2091 = load i32, i32* %38, align 4
  %2092 = load i32, i32* %39, align 4
  %2093 = add nsw i32 %2091, %2092
  %2094 = call dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* @_ZZ9jpegModelR5MixerE4qtab, i32 %2093)
  %2095 = load i8, i8* %2094, align 1
  %2096 = zext i8 %2095 to i32
  %2097 = add nsw i32 %2096, 1
  %2098 = sdiv i32 %2090, %2097
  store i32 %2098, i32* %32, align 4
  %2099 = load i32, i32* %32, align 4
  %2100 = icmp slt i32 %2099, 0
  %2101 = zext i1 %2100 to i64
  %2102 = select i1 %2100, i32 -1, i32 1
  %2103 = load i32, i32* %32, align 4
  %2104 = call i32 @abs(i32 %2103) #12
  %2105 = mul nsw i32 8, %2104
  %2106 = add nsw i32 %2105, 1
  %2107 = trunc i32 %2106 to i16
  %2108 = call i32 @_ZNK4IlogclEt(%class.Buf* @ilog, i16 zeroext %2107)
  %2109 = mul nsw i32 %2102, %2108
  %2110 = sdiv i32 %2109, 8
  store i32 %2110, i32* %32, align 4
  br label %2111

2111:                                             ; preds = %2055, %2054
  %2112 = load i32, i32* %32, align 4
  %2113 = load i32, i32* %52, align 4
  %2114 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 %2113)
  store i32 %2112, i32* %2114, align 4
  br label %2115

2115:                                             ; preds = %2111
  %2116 = load i32, i32* %52, align 4
  %2117 = add nsw i32 %2116, 1
  store i32 %2117, i32* %52, align 4
  br label %2026

2118:                                             ; preds = %2026
  %2119 = load i32, i32* @_ZZ9jpegModelR5MixerE6column, align 4
  %2120 = icmp eq i32 %2119, 0
  br i1 %2120, label %2121, label %2126

2121:                                             ; preds = %2118
  %2122 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 2)
  %2123 = load i32, i32* %2122, align 4
  %2124 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 1)
  store i32 %2123, i32* %2124, align 4
  %2125 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 0)
  store i32 1, i32* %2125, align 4
  br label %2126

2126:                                             ; preds = %2121, %2118
  %2127 = load i32, i32* @_ZZ9jpegModelR5MixerE3row, align 4
  %2128 = icmp eq i32 %2127, 0
  br i1 %2128, label %2129, label %2134

2129:                                             ; preds = %2126
  %2130 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 0)
  %2131 = load i32, i32* %2130, align 4
  %2132 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 1)
  store i32 %2131, i32* %2132, align 4
  %2133 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 2)
  store i32 1, i32* %2133, align 4
  br label %2134

2134:                                             ; preds = %2129, %2126
  br label %2135

2135:                                             ; preds = %2134, %1139
  br label %2136

2136:                                             ; preds = %2135, %1136
  br label %2137

2137:                                             ; preds = %2136, %975, %972
  %2138 = load i32, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %2139 = icmp ne i32 %2138, 0
  br i1 %2139, label %2140, label %2143

2140:                                             ; preds = %2137
  %2141 = load i32, i32* @_ZZ9jpegModelR5MixerE4data, align 4
  %2142 = icmp ne i32 %2141, 0
  br i1 %2142, label %2145, label %2143

2143:                                             ; preds = %2140, %2137
  %2144 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %2144, i32* %2, align 4
  br label %2744

2145:                                             ; preds = %2140
  %2146 = load i32, i32* @bpos, align 4
  %2147 = icmp ne i32 %2146, 0
  %2148 = xor i1 %2147, true
  %2149 = zext i1 %2148 to i32
  %2150 = add nsw i32 1, %2149
  %2151 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %2150)
  %2152 = icmp eq i32 %2151, 255
  br i1 %2152, label %2153, label %2155

2153:                                             ; preds = %2145
  %2154 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN5Mixer3addEi(%class.Mixer* %2154, i32 128)
  store i32 1, i32* %2, align 4
  br label %2744

2155:                                             ; preds = %2145
  store i32 28, i32* %56, align 4
  %2156 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE1t to i8*) acquire, align 8
  %2157 = icmp eq i8 %2156, 0
  br i1 %2157, label %2158, label %2166, !prof !2

2158:                                             ; preds = %2155
  %2159 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE1t) #2
  %2160 = icmp ne i32 %2159, 0
  br i1 %2160, label %2161, label %2166

2161:                                             ; preds = %2158
  %2162 = load i32, i32* @level, align 4
  %2163 = shl i32 65536, %2162
  invoke void @_ZN2BHILi9EEC2Ei(%class.BH* @_ZZ9jpegModelR5MixerE1t, i32 %2163)
          to label %2164 unwind label %2250

2164:                                             ; preds = %2161
  %2165 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.BH*)* @_ZN2BHILi9EED2Ev to void (i8*)*), i8* bitcast (%class.BH* @_ZZ9jpegModelR5MixerE1t to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE1t) #2
  br label %2166

2166:                                             ; preds = %2164, %2158, %2155
  %2167 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE3cxt to i8*) acquire, align 8
  %2168 = icmp eq i8 %2167, 0
  br i1 %2168, label %2169, label %2175, !prof !2

2169:                                             ; preds = %2166
  %2170 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE3cxt) #2
  %2171 = icmp ne i32 %2170, 0
  br i1 %2171, label %2172, label %2175

2172:                                             ; preds = %2169
  invoke void @_ZN5ArrayIjLi0EEC2Ei(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 28)
          to label %2173 unwind label %2254

2173:                                             ; preds = %2172
  %2174 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array*)* @_ZN5ArrayIjLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array* @_ZZ9jpegModelR5MixerE3cxt to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE3cxt) #2
  br label %2175

2175:                                             ; preds = %2173, %2169, %2166
  %2176 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE2cp to i8*) acquire, align 8
  %2177 = icmp eq i8 %2176, 0
  br i1 %2177, label %2178, label %2184, !prof !2

2178:                                             ; preds = %2175
  %2179 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE2cp) #2
  %2180 = icmp ne i32 %2179, 0
  br i1 %2180, label %2181, label %2184

2181:                                             ; preds = %2178
  invoke void @_ZN5ArrayIPhLi0EEC2Ei(%class.Array.6* @_ZZ9jpegModelR5MixerE2cp, i32 28)
          to label %2182 unwind label %2258

2182:                                             ; preds = %2181
  %2183 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array.6*)* @_ZN5ArrayIPhLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array.6* @_ZZ9jpegModelR5MixerE2cp to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE2cp) #2
  br label %2184

2184:                                             ; preds = %2182, %2178, %2175
  %2185 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE2sm to i8*) acquire, align 8
  %2186 = icmp eq i8 %2185, 0
  br i1 %2186, label %2187, label %2198, !prof !2

2187:                                             ; preds = %2184
  %2188 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE2sm) #2
  %2189 = icmp ne i32 %2188, 0
  br i1 %2189, label %2190, label %2198

2190:                                             ; preds = %2187
  br label %2191

2191:                                             ; preds = %2193, %2190
  %2192 = phi %class.StateMap* [ getelementptr inbounds ([28 x %class.StateMap], [28 x %class.StateMap]* @_ZZ9jpegModelR5MixerE2sm, i32 0, i32 0), %2190 ], [ %2194, %2193 ]
  invoke void @_ZN8StateMapC1Ei(%class.StateMap* %2192, i32 256)
          to label %2193 unwind label %2262

2193:                                             ; preds = %2191
  %2194 = getelementptr inbounds %class.StateMap, %class.StateMap* %2192, i64 1
  %2195 = icmp eq %class.StateMap* %2194, getelementptr inbounds (%class.StateMap, %class.StateMap* getelementptr inbounds ([28 x %class.StateMap], [28 x %class.StateMap]* @_ZZ9jpegModelR5MixerE2sm, i32 0, i32 0), i64 28)
  br i1 %2195, label %2196, label %2191

2196:                                             ; preds = %2193
  %2197 = call i32 @__cxa_atexit(void (i8*)* @__cxx_global_array_dtor.13, i8* null, i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE2sm) #2
  br label %2198

2198:                                             ; preds = %2196, %2187, %2184
  %2199 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE2m1 to i8*) acquire, align 8
  %2200 = icmp eq i8 %2199, 0
  br i1 %2200, label %2201, label %2207, !prof !2

2201:                                             ; preds = %2198
  %2202 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE2m1) #2
  %2203 = icmp ne i32 %2202, 0
  br i1 %2203, label %2204, label %2207

2204:                                             ; preds = %2201
  invoke void @_ZN5MixerC1Eiiii(%class.Mixer* @_ZZ9jpegModelR5MixerE2m1, i32 32, i32 770, i32 3, i32 0)
          to label %2205 unwind label %2272

2205:                                             ; preds = %2204
  %2206 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Mixer*)* @_ZN5MixerD1Ev to void (i8*)*), i8* bitcast (%class.Mixer* @_ZZ9jpegModelR5MixerE2m1 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE2m1) #2
  br label %2207

2207:                                             ; preds = %2205, %2201, %2198
  %2208 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE2a1 to i8*) acquire, align 8
  %2209 = icmp eq i8 %2208, 0
  br i1 %2209, label %2210, label %2216, !prof !2

2210:                                             ; preds = %2207
  %2211 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE2a1) #2
  %2212 = icmp ne i32 %2211, 0
  br i1 %2212, label %2213, label %2216

2213:                                             ; preds = %2210
  invoke void @_ZN3APMC1Ei(%class.APM* @_ZZ9jpegModelR5MixerE2a1, i32 32768)
          to label %2214 unwind label %2276

2214:                                             ; preds = %2213
  %2215 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.APM*)* @_ZN3APMD2Ev to void (i8*)*), i8* bitcast (%class.APM* @_ZZ9jpegModelR5MixerE2a1 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE2a1) #2
  br label %2216

2216:                                             ; preds = %2214, %2210, %2207
  %2217 = load atomic i8, i8* bitcast (i64* @_ZGVZ9jpegModelR5MixerE2a2 to i8*) acquire, align 8
  %2218 = icmp eq i8 %2217, 0
  br i1 %2218, label %2219, label %2225, !prof !2

2219:                                             ; preds = %2216
  %2220 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ9jpegModelR5MixerE2a2) #2
  %2221 = icmp ne i32 %2220, 0
  br i1 %2221, label %2222, label %2225

2222:                                             ; preds = %2219
  invoke void @_ZN3APMC1Ei(%class.APM* @_ZZ9jpegModelR5MixerE2a2, i32 65536)
          to label %2223 unwind label %2280

2223:                                             ; preds = %2222
  %2224 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.APM*)* @_ZN3APMD2Ev to void (i8*)*), i8* bitcast (%class.APM* @_ZZ9jpegModelR5MixerE2a2 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ9jpegModelR5MixerE2a2) #2
  br label %2225

2225:                                             ; preds = %2223, %2219, %2216
  %2226 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* @_ZZ9jpegModelR5MixerE2cp, i32 27)
  %2227 = load i8*, i8** %2226, align 8
  %2228 = icmp ne i8* %2227, null
  br i1 %2228, label %2229, label %2285

2229:                                             ; preds = %2225
  store i32 0, i32* %57, align 4
  br label %2230

2230:                                             ; preds = %2247, %2229
  %2231 = load i32, i32* %57, align 4
  %2232 = icmp slt i32 %2231, 28
  br i1 %2232, label %2233, label %2284

2233:                                             ; preds = %2230
  %2234 = load i32, i32* %57, align 4
  %2235 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* @_ZZ9jpegModelR5MixerE2cp, i32 %2234)
  %2236 = load i8*, i8** %2235, align 8
  %2237 = load i8, i8* %2236, align 1
  %2238 = zext i8 %2237 to i64
  %2239 = getelementptr inbounds [256 x [4 x i8]], [256 x [4 x i8]]* @_ZL11State_table, i64 0, i64 %2238
  %2240 = load i32, i32* @y, align 4
  %2241 = sext i32 %2240 to i64
  %2242 = getelementptr inbounds [4 x i8], [4 x i8]* %2239, i64 0, i64 %2241
  %2243 = load i8, i8* %2242, align 1
  %2244 = load i32, i32* %57, align 4
  %2245 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* @_ZZ9jpegModelR5MixerE2cp, i32 %2244)
  %2246 = load i8*, i8** %2245, align 8
  store i8 %2243, i8* %2246, align 1
  br label %2247

2247:                                             ; preds = %2233
  %2248 = load i32, i32* %57, align 4
  %2249 = add nsw i32 %2248, 1
  store i32 %2249, i32* %57, align 4
  br label %2230

2250:                                             ; preds = %2161
  %2251 = landingpad { i8*, i32 }
          cleanup
  %2252 = extractvalue { i8*, i32 } %2251, 0
  store i8* %2252, i8** %4, align 8
  %2253 = extractvalue { i8*, i32 } %2251, 1
  store i32 %2253, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE1t) #2
  br label %2746

2254:                                             ; preds = %2172
  %2255 = landingpad { i8*, i32 }
          cleanup
  %2256 = extractvalue { i8*, i32 } %2255, 0
  store i8* %2256, i8** %4, align 8
  %2257 = extractvalue { i8*, i32 } %2255, 1
  store i32 %2257, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE3cxt) #2
  br label %2746

2258:                                             ; preds = %2181
  %2259 = landingpad { i8*, i32 }
          cleanup
  %2260 = extractvalue { i8*, i32 } %2259, 0
  store i8* %2260, i8** %4, align 8
  %2261 = extractvalue { i8*, i32 } %2259, 1
  store i32 %2261, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE2cp) #2
  br label %2746

2262:                                             ; preds = %2191
  %2263 = landingpad { i8*, i32 }
          cleanup
  %2264 = extractvalue { i8*, i32 } %2263, 0
  store i8* %2264, i8** %4, align 8
  %2265 = extractvalue { i8*, i32 } %2263, 1
  store i32 %2265, i32* %5, align 4
  %2266 = icmp eq %class.StateMap* getelementptr inbounds ([28 x %class.StateMap], [28 x %class.StateMap]* @_ZZ9jpegModelR5MixerE2sm, i32 0, i32 0), %2192
  br i1 %2266, label %2271, label %2267

2267:                                             ; preds = %2267, %2262
  %2268 = phi %class.StateMap* [ %2192, %2262 ], [ %2269, %2267 ]
  %2269 = getelementptr inbounds %class.StateMap, %class.StateMap* %2268, i64 -1
  call void @_ZN8StateMapD2Ev(%class.StateMap* %2269) #2
  %2270 = icmp eq %class.StateMap* %2269, getelementptr inbounds ([28 x %class.StateMap], [28 x %class.StateMap]* @_ZZ9jpegModelR5MixerE2sm, i32 0, i32 0)
  br i1 %2270, label %2271, label %2267

2271:                                             ; preds = %2267, %2262
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE2sm) #2
  br label %2746

2272:                                             ; preds = %2204
  %2273 = landingpad { i8*, i32 }
          cleanup
  %2274 = extractvalue { i8*, i32 } %2273, 0
  store i8* %2274, i8** %4, align 8
  %2275 = extractvalue { i8*, i32 } %2273, 1
  store i32 %2275, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE2m1) #2
  br label %2746

2276:                                             ; preds = %2213
  %2277 = landingpad { i8*, i32 }
          cleanup
  %2278 = extractvalue { i8*, i32 } %2277, 0
  store i8* %2278, i8** %4, align 8
  %2279 = extractvalue { i8*, i32 } %2277, 1
  store i32 %2279, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE2a1) #2
  br label %2746

2280:                                             ; preds = %2222
  %2281 = landingpad { i8*, i32 }
          cleanup
  %2282 = extractvalue { i8*, i32 } %2281, 0
  store i8* %2282, i8** %4, align 8
  %2283 = extractvalue { i8*, i32 } %2281, 1
  store i32 %2283, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ9jpegModelR5MixerE2a2) #2
  br label %2746

2284:                                             ; preds = %2230
  br label %2285

2285:                                             ; preds = %2284, %2225
  call void @_ZN5Mixer6updateEv(%class.Mixer* @_ZZ9jpegModelR5MixerE2m1)
  %2286 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %2287 = ashr i32 %2286, 6
  %2288 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE5color, i32 %2287)
  %2289 = load i32, i32* %2288, align 4
  store i32 %2289, i32* %58, align 4
  %2290 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %2291 = and i32 %2290, 63
  %2292 = load i32, i32* %58, align 4
  %2293 = shl i32 %2292, 6
  %2294 = or i32 %2291, %2293
  store i32 %2294, i32* %59, align 4
  %2295 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  %2296 = mul i32 %2295, 2
  %2297 = load i32, i32* %58, align 4
  %2298 = icmp eq i32 %2297, 0
  %2299 = zext i1 %2298 to i32
  %2300 = add i32 %2296, %2299
  %2301 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffbits, align 4
  %2302 = add nsw i32 %2301, 1
  %2303 = shl i32 1, %2302
  %2304 = or i32 %2300, %2303
  store i32 %2304, i32* %60, align 4
  %2305 = load i32, i32* @_ZZ9jpegModelR5MixerE7hbcount, align 4
  %2306 = add nsw i32 %2305, 1
  store i32 %2306, i32* @_ZZ9jpegModelR5MixerE7hbcount, align 4
  %2307 = icmp sgt i32 %2306, 2
  br i1 %2307, label %2311, label %2308

2308:                                             ; preds = %2285
  %2309 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffbits, align 4
  %2310 = icmp eq i32 %2309, 0
  br i1 %2310, label %2311, label %2312

2311:                                             ; preds = %2308, %2285
  store i32 0, i32* @_ZZ9jpegModelR5MixerE7hbcount, align 4
  br label %2312

2312:                                             ; preds = %2311, %2308
  %2313 = load i32, i32* %59, align 4
  %2314 = icmp sge i32 %2313, 0
  br i1 %2314, label %2315, label %2318

2315:                                             ; preds = %2312
  %2316 = load i32, i32* %59, align 4
  %2317 = icmp slt i32 %2316, 256
  br i1 %2317, label %2320, label %2318

2318:                                             ; preds = %2315, %2312
  store i32 0, i32* @_ZZ9jpegModelR5MixerE4jpeg, align 4
  %2319 = load i32, i32* @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  store i32 %2319, i32* %2, align 4
  br label %2744

2320:                                             ; preds = %2315
  %2321 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %2322 = and i32 %2321, 63
  %2323 = sext i32 %2322 to i64
  %2324 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %2323
  %2325 = load i8, i8* %2324, align 1
  %2326 = zext i8 %2325 to i32
  store i32 %2326, i32* %61, align 4
  %2327 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %2328 = and i32 %2327, 63
  %2329 = sext i32 %2328 to i64
  %2330 = getelementptr inbounds [64 x i8], [64 x i8]* @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %2329
  %2331 = load i8, i8* %2330, align 1
  %2332 = zext i8 %2331 to i32
  store i32 %2332, i32* %62, align 4
  %2333 = load i32, i32* @_ZZ9jpegModelR5MixerE7hbcount, align 4
  %2334 = icmp eq i32 %2333, 0
  br i1 %2334, label %2335, label %2626

2335:                                             ; preds = %2320
  store i32 0, i32* %63, align 4
  %2336 = load i32, i32* %63, align 4
  %2337 = add nsw i32 %2336, 1
  store i32 %2337, i32* %63, align 4
  %2338 = load i32, i32* %60, align 4
  %2339 = load i32, i32* %59, align 4
  %2340 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 2)
  %2341 = load i32, i32* %2340, align 4
  %2342 = call i32 @_Z4hashjjjjj(i32 %2337, i32 %2338, i32 %2339, i32 %2341, i32 -1)
  %2343 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 0)
  store i32 %2342, i32* %2343, align 4
  %2344 = load i32, i32* %63, align 4
  %2345 = add nsw i32 %2344, 1
  store i32 %2345, i32* %63, align 4
  %2346 = load i32, i32* %60, align 4
  %2347 = load i32, i32* %59, align 4
  %2348 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 0)
  %2349 = load i32, i32* %2348, align 4
  %2350 = call i32 @_Z4hashjjjjj(i32 %2345, i32 %2346, i32 %2347, i32 %2349, i32 -1)
  %2351 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 1)
  store i32 %2350, i32* %2351, align 4
  %2352 = load i32, i32* %63, align 4
  %2353 = add nsw i32 %2352, 1
  store i32 %2353, i32* %63, align 4
  %2354 = load i32, i32* %60, align 4
  %2355 = load i32, i32* %59, align 4
  %2356 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 1)
  %2357 = load i32, i32* %2356, align 4
  %2358 = call i32 @_Z4hashjjjjj(i32 %2353, i32 %2354, i32 %2355, i32 %2357, i32 -1)
  %2359 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 2)
  store i32 %2358, i32* %2359, align 4
  %2360 = load i32, i32* %63, align 4
  %2361 = add nsw i32 %2360, 1
  store i32 %2361, i32* %63, align 4
  %2362 = load i32, i32* %60, align 4
  %2363 = load i32, i32* @_ZZ9jpegModelR5MixerE3rs1, align 4
  %2364 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 2)
  %2365 = load i32, i32* %2364, align 4
  %2366 = call i32 @_Z4hashjjjjj(i32 %2361, i32 %2362, i32 %2363, i32 %2365, i32 -1)
  %2367 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 3)
  store i32 %2366, i32* %2367, align 4
  %2368 = load i32, i32* %63, align 4
  %2369 = add nsw i32 %2368, 1
  store i32 %2369, i32* %63, align 4
  %2370 = load i32, i32* %60, align 4
  %2371 = load i32, i32* @_ZZ9jpegModelR5MixerE3rs1, align 4
  %2372 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 0)
  %2373 = load i32, i32* %2372, align 4
  %2374 = call i32 @_Z4hashjjjjj(i32 %2369, i32 %2370, i32 %2371, i32 %2373, i32 -1)
  %2375 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 4)
  store i32 %2374, i32* %2375, align 4
  %2376 = load i32, i32* %63, align 4
  %2377 = add nsw i32 %2376, 1
  store i32 %2377, i32* %63, align 4
  %2378 = load i32, i32* %60, align 4
  %2379 = load i32, i32* @_ZZ9jpegModelR5MixerE3rs1, align 4
  %2380 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 1)
  %2381 = load i32, i32* %2380, align 4
  %2382 = call i32 @_Z4hashjjjjj(i32 %2377, i32 %2378, i32 %2379, i32 %2381, i32 -1)
  %2383 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 5)
  store i32 %2382, i32* %2383, align 4
  %2384 = load i32, i32* %63, align 4
  %2385 = add nsw i32 %2384, 1
  store i32 %2385, i32* %63, align 4
  %2386 = load i32, i32* %60, align 4
  %2387 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 2)
  %2388 = load i32, i32* %2387, align 4
  %2389 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 0)
  %2390 = load i32, i32* %2389, align 4
  %2391 = call i32 @_Z4hashjjjjj(i32 %2385, i32 %2386, i32 %2388, i32 %2390, i32 -1)
  %2392 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 6)
  store i32 %2391, i32* %2392, align 4
  %2393 = load i32, i32* %63, align 4
  %2394 = add nsw i32 %2393, 1
  store i32 %2394, i32* %63, align 4
  %2395 = load i32, i32* %60, align 4
  %2396 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %2397 = load i32, i32* @_ZZ9jpegModelR5MixerE5width, align 4
  %2398 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %2399 = mul nsw i32 %2397, %2398
  %2400 = sub nsw i32 %2396, %2399
  %2401 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @_ZZ9jpegModelR5MixerE4cbuf, i32 %2400)
  %2402 = load i8, i8* %2401, align 1
  %2403 = zext i8 %2402 to i32
  %2404 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 3)
  %2405 = load i32, i32* %2404, align 4
  %2406 = call i32 @_Z4hashjjjjj(i32 %2394, i32 %2395, i32 %2403, i32 %2405, i32 -1)
  %2407 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 7)
  store i32 %2406, i32* %2407, align 4
  %2408 = load i32, i32* %63, align 4
  %2409 = add nsw i32 %2408, 1
  store i32 %2409, i32* %63, align 4
  %2410 = load i32, i32* %60, align 4
  %2411 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %2412 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %2413 = ashr i32 %2412, 6
  %2414 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE2ls, i32 %2413)
  %2415 = load i32, i32* %2414, align 4
  %2416 = sub nsw i32 %2411, %2415
  %2417 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @_ZZ9jpegModelR5MixerE4cbuf, i32 %2416)
  %2418 = load i8, i8* %2417, align 1
  %2419 = zext i8 %2418 to i32
  %2420 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 3)
  %2421 = load i32, i32* %2420, align 4
  %2422 = call i32 @_Z4hashjjjjj(i32 %2409, i32 %2410, i32 %2419, i32 %2421, i32 -1)
  %2423 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 8)
  store i32 %2422, i32* %2423, align 4
  %2424 = load i32, i32* %63, align 4
  %2425 = add nsw i32 %2424, 1
  store i32 %2425, i32* %63, align 4
  %2426 = load i32, i32* %60, align 4
  %2427 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 0)
  %2428 = load i32, i32* %2427, align 4
  %2429 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 1)
  %2430 = load i32, i32* %2429, align 4
  %2431 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 1)
  %2432 = load i32, i32* %2431, align 4
  %2433 = call i32 @_Z4hashjjjjj(i32 %2425, i32 %2426, i32 %2428, i32 %2430, i32 %2432)
  %2434 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 9)
  store i32 %2433, i32* %2434, align 4
  %2435 = load i32, i32* %63, align 4
  %2436 = add nsw i32 %2435, 1
  store i32 %2436, i32* %63, align 4
  %2437 = load i32, i32* %60, align 4
  %2438 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 0)
  %2439 = load i32, i32* %2438, align 4
  %2440 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 1)
  %2441 = load i32, i32* %2440, align 4
  %2442 = load i32, i32* %59, align 4
  %2443 = call i32 @_Z4hashjjjjj(i32 %2436, i32 %2437, i32 %2439, i32 %2441, i32 %2442)
  %2444 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 10)
  store i32 %2443, i32* %2444, align 4
  %2445 = load i32, i32* %63, align 4
  %2446 = add nsw i32 %2445, 1
  store i32 %2446, i32* %63, align 4
  %2447 = load i32, i32* %60, align 4
  %2448 = load i32, i32* %61, align 4
  %2449 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 0)
  %2450 = load i32, i32* %2449, align 4
  %2451 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 2)
  %2452 = load i32, i32* %2451, align 4
  %2453 = sdiv i32 %2452, 3
  %2454 = call i32 @_Z4hashjjjjj(i32 %2446, i32 %2447, i32 %2448, i32 %2450, i32 %2453)
  %2455 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 11)
  store i32 %2454, i32* %2455, align 4
  %2456 = load i32, i32* %63, align 4
  %2457 = add nsw i32 %2456, 1
  store i32 %2457, i32* %63, align 4
  %2458 = load i32, i32* %60, align 4
  %2459 = load i32, i32* %62, align 4
  %2460 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 1)
  %2461 = load i32, i32* %2460, align 4
  %2462 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 3)
  %2463 = load i32, i32* %2462, align 4
  %2464 = sdiv i32 %2463, 3
  %2465 = call i32 @_Z4hashjjjjj(i32 %2457, i32 %2458, i32 %2459, i32 %2461, i32 %2464)
  %2466 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 12)
  store i32 %2465, i32* %2466, align 4
  %2467 = load i32, i32* %63, align 4
  %2468 = add nsw i32 %2467, 1
  store i32 %2468, i32* %63, align 4
  %2469 = load i32, i32* %60, align 4
  %2470 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %2471 = ashr i32 %2470, 2
  %2472 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %2473 = and i32 %2472, 63
  %2474 = call i32 @_Z3minii(i32 3, i32 %2473)
  %2475 = call i32 @_Z4hashjjjjj(i32 %2468, i32 %2469, i32 %2471, i32 %2474, i32 -1)
  %2476 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 13)
  store i32 %2475, i32* %2476, align 4
  %2477 = load i32, i32* %63, align 4
  %2478 = add nsw i32 %2477, 1
  store i32 %2478, i32* %63, align 4
  %2479 = load i32, i32* %60, align 4
  %2480 = load i32, i32* %59, align 4
  %2481 = load i32, i32* @_ZZ9jpegModelR5MixerE6column, align 4
  %2482 = ashr i32 %2481, 1
  %2483 = call i32 @_Z4hashjjjjj(i32 %2478, i32 %2479, i32 %2480, i32 %2482, i32 -1)
  %2484 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 14)
  store i32 %2483, i32* %2484, align 4
  %2485 = load i32, i32* %63, align 4
  %2486 = add nsw i32 %2485, 1
  store i32 %2486, i32* %63, align 4
  %2487 = load i32, i32* %60, align 4
  %2488 = load i32, i32* @_ZZ9jpegModelR5MixerE6column, align 4
  %2489 = ashr i32 %2488, 2
  %2490 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 0)
  %2491 = load i32, i32* %2490, align 4
  %2492 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 2)
  %2493 = load i32, i32* %2492, align 4
  %2494 = sdiv i32 %2493, 3
  %2495 = mul nsw i32 256, %2494
  %2496 = add nsw i32 %2491, %2495
  %2497 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 1)
  %2498 = load i32, i32* %2497, align 4
  %2499 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 3)
  %2500 = load i32, i32* %2499, align 4
  %2501 = sdiv i32 %2500, 3
  %2502 = mul nsw i32 256, %2501
  %2503 = add nsw i32 %2498, %2502
  %2504 = call i32 @_Z4hashjjjjj(i32 %2486, i32 %2487, i32 %2489, i32 %2496, i32 %2503)
  %2505 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 15)
  store i32 %2504, i32* %2505, align 4
  %2506 = load i32, i32* %63, align 4
  %2507 = add nsw i32 %2506, 1
  store i32 %2507, i32* %63, align 4
  %2508 = load i32, i32* %60, align 4
  %2509 = load i32, i32* @_ZZ9jpegModelR5MixerE4ssum, align 4
  %2510 = ashr i32 %2509, 4
  %2511 = load i32, i32* %59, align 4
  %2512 = call i32 @_Z4hashjjjjj(i32 %2507, i32 %2508, i32 %2510, i32 %2511, i32 -1)
  %2513 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 16)
  store i32 %2512, i32* %2513, align 4
  %2514 = load i32, i32* %63, align 4
  %2515 = add nsw i32 %2514, 1
  store i32 %2515, i32* %63, align 4
  %2516 = load i32, i32* %60, align 4
  %2517 = load i32, i32* @_ZZ9jpegModelR5MixerE3rs1, align 4
  %2518 = load i32, i32* %59, align 4
  %2519 = call i32 @_Z4hashjjjjj(i32 %2515, i32 %2516, i32 %2517, i32 %2518, i32 -1)
  %2520 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 17)
  store i32 %2519, i32* %2520, align 4
  %2521 = load i32, i32* %63, align 4
  %2522 = add nsw i32 %2521, 1
  store i32 %2522, i32* %63, align 4
  %2523 = load i32, i32* %60, align 4
  %2524 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %2525 = ashr i32 %2524, 3
  %2526 = load i32, i32* @_ZZ9jpegModelR5MixerE5ssum3, align 4
  %2527 = ashr i32 %2526, 3
  %2528 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 3)
  %2529 = load i32, i32* %2528, align 4
  %2530 = call i32 @_Z4hashjjjjj(i32 %2522, i32 %2523, i32 %2525, i32 %2527, i32 %2529)
  %2531 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 18)
  store i32 %2530, i32* %2531, align 4
  %2532 = load i32, i32* %63, align 4
  %2533 = add nsw i32 %2532, 1
  store i32 %2533, i32* %63, align 4
  %2534 = load i32, i32* %60, align 4
  %2535 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 0)
  %2536 = load i32, i32* %2535, align 4
  %2537 = sdiv i32 %2536, 3
  %2538 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 1)
  %2539 = load i32, i32* %2538, align 4
  %2540 = sdiv i32 %2539, 3
  %2541 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 5)
  %2542 = load i32, i32* %2541, align 4
  %2543 = call i32 @_Z4hashjjjjj(i32 %2533, i32 %2534, i32 %2537, i32 %2540, i32 %2542)
  %2544 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 19)
  store i32 %2543, i32* %2544, align 4
  %2545 = load i32, i32* %63, align 4
  %2546 = add nsw i32 %2545, 1
  store i32 %2546, i32* %63, align 4
  %2547 = load i32, i32* %60, align 4
  %2548 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %2549 = load i32, i32* @_ZZ9jpegModelR5MixerE5width, align 4
  %2550 = load i32, i32* @_ZZ9jpegModelR5MixerE7mcusize, align 4
  %2551 = mul nsw i32 %2549, %2550
  %2552 = sub nsw i32 %2548, %2551
  %2553 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @_ZZ9jpegModelR5MixerE4cbuf, i32 %2552)
  %2554 = load i8, i8* %2553, align 1
  %2555 = zext i8 %2554 to i32
  %2556 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 6)
  %2557 = load i32, i32* %2556, align 4
  %2558 = call i32 @_Z4hashjjjjj(i32 %2546, i32 %2547, i32 %2555, i32 %2557, i32 -1)
  %2559 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 20)
  store i32 %2558, i32* %2559, align 4
  %2560 = load i32, i32* %63, align 4
  %2561 = add nsw i32 %2560, 1
  store i32 %2561, i32* %63, align 4
  %2562 = load i32, i32* %60, align 4
  %2563 = load i32, i32* @_ZZ9jpegModelR5MixerE4cpos, align 4
  %2564 = load i32, i32* @_ZZ9jpegModelR5MixerE6mcupos, align 4
  %2565 = ashr i32 %2564, 6
  %2566 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE2ls, i32 %2565)
  %2567 = load i32, i32* %2566, align 4
  %2568 = sub nsw i32 %2563, %2567
  %2569 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @_ZZ9jpegModelR5MixerE4cbuf, i32 %2568)
  %2570 = load i8, i8* %2569, align 1
  %2571 = zext i8 %2570 to i32
  %2572 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 4)
  %2573 = load i32, i32* %2572, align 4
  %2574 = call i32 @_Z4hashjjjjj(i32 %2561, i32 %2562, i32 %2571, i32 %2573, i32 -1)
  %2575 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 21)
  store i32 %2574, i32* %2575, align 4
  %2576 = load i32, i32* %63, align 4
  %2577 = add nsw i32 %2576, 1
  store i32 %2577, i32* %63, align 4
  %2578 = load i32, i32* %60, align 4
  %2579 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 2)
  %2580 = load i32, i32* %2579, align 4
  %2581 = call i32 @_Z4hashjjjjj(i32 %2577, i32 %2578, i32 %2580, i32 -1, i32 -1)
  %2582 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 22)
  store i32 %2581, i32* %2582, align 4
  %2583 = load i32, i32* %63, align 4
  %2584 = load i32, i32* %60, align 4
  %2585 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 0)
  %2586 = load i32, i32* %2585, align 4
  %2587 = call i32 @_Z4hashjjjjj(i32 %2583, i32 %2584, i32 %2586, i32 -1, i32 -1)
  %2588 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 23)
  store i32 %2587, i32* %2588, align 4
  %2589 = load i32, i32* %63, align 4
  %2590 = load i32, i32* %60, align 4
  %2591 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 1)
  %2592 = load i32, i32* %2591, align 4
  %2593 = call i32 @_Z4hashjjjjj(i32 %2589, i32 %2590, i32 %2592, i32 -1, i32 -1)
  %2594 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 24)
  store i32 %2593, i32* %2594, align 4
  %2595 = load i32, i32* %63, align 4
  %2596 = add nsw i32 %2595, 1
  store i32 %2596, i32* %63, align 4
  %2597 = load i32, i32* %60, align 4
  %2598 = load i32, i32* %62, align 4
  %2599 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 1)
  %2600 = load i32, i32* %2599, align 4
  %2601 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 6)
  %2602 = load i32, i32* %2601, align 4
  %2603 = call i32 @_Z4hashjjjjj(i32 %2596, i32 %2597, i32 %2598, i32 %2600, i32 %2602)
  %2604 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 25)
  store i32 %2603, i32* %2604, align 4
  %2605 = load i32, i32* %63, align 4
  %2606 = add nsw i32 %2605, 1
  store i32 %2606, i32* %63, align 4
  %2607 = load i32, i32* %60, align 4
  %2608 = load i32, i32* %61, align 4
  %2609 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 0)
  %2610 = load i32, i32* %2609, align 4
  %2611 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 4)
  %2612 = load i32, i32* %2611, align 4
  %2613 = call i32 @_Z4hashjjjjj(i32 %2606, i32 %2607, i32 %2608, i32 %2610, i32 %2612)
  %2614 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 26)
  store i32 %2613, i32* %2614, align 4
  %2615 = load i32, i32* %63, align 4
  %2616 = add nsw i32 %2615, 1
  store i32 %2616, i32* %63, align 4
  %2617 = load i32, i32* %60, align 4
  %2618 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 0)
  %2619 = load i32, i32* %2618, align 4
  %2620 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3lcp, i32 1)
  %2621 = load i32, i32* %2620, align 4
  %2622 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 3)
  %2623 = load i32, i32* %2622, align 4
  %2624 = call i32 @_Z4hashjjjjj(i32 %2616, i32 %2617, i32 %2619, i32 %2621, i32 %2623)
  %2625 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 27)
  store i32 %2624, i32* %2625, align 4
  br label %2626

2626:                                             ; preds = %2335, %2320
  call void @_ZN5Mixer3addEi(%class.Mixer* @_ZZ9jpegModelR5MixerE2m1, i32 128)
  %2627 = load i32, i32* @_ZZ9jpegModelR5MixerE7hbcount, align 4
  switch i32 %2627, label %2683 [
    i32 0, label %2628
    i32 1, label %2654
  ]

2628:                                             ; preds = %2626
  store i32 0, i32* %64, align 4
  br label %2629

2629:                                             ; preds = %2650, %2628
  %2630 = load i32, i32* %64, align 4
  %2631 = icmp slt i32 %2630, 28
  br i1 %2631, label %2632, label %2653

2632:                                             ; preds = %2629
  %2633 = load i32, i32* %64, align 4
  %2634 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE3cxt, i32 %2633)
  %2635 = load i32, i32* %2634, align 4
  %2636 = call i8* @_ZN2BHILi9EEixEj(%class.BH* @_ZZ9jpegModelR5MixerE1t, i32 %2635)
  %2637 = getelementptr inbounds i8, i8* %2636, i64 1
  %2638 = load i32, i32* %64, align 4
  %2639 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* @_ZZ9jpegModelR5MixerE2cp, i32 %2638)
  store i8* %2637, i8** %2639, align 8
  %2640 = load i32, i32* %64, align 4
  %2641 = sext i32 %2640 to i64
  %2642 = getelementptr inbounds [28 x %class.StateMap], [28 x %class.StateMap]* @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %2641
  %2643 = load i32, i32* %64, align 4
  %2644 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* @_ZZ9jpegModelR5MixerE2cp, i32 %2643)
  %2645 = load i8*, i8** %2644, align 8
  %2646 = load i8, i8* %2645, align 1
  %2647 = zext i8 %2646 to i32
  %2648 = call i32 @_ZN8StateMap1pEii(%class.StateMap* %2642, i32 %2647, i32 1023)
  %2649 = call i32 @_ZNK7StretchclEi(%class.Stretch* @stretch, i32 %2648)
  call void @_ZN5Mixer3addEi(%class.Mixer* @_ZZ9jpegModelR5MixerE2m1, i32 %2649)
  br label %2650

2650:                                             ; preds = %2632
  %2651 = load i32, i32* %64, align 4
  %2652 = add nsw i32 %2651, 1
  store i32 %2652, i32* %64, align 4
  br label %2629

2653:                                             ; preds = %2629
  br label %2711

2654:                                             ; preds = %2626
  %2655 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  %2656 = and i32 %2655, 1
  %2657 = mul i32 %2656, 3
  %2658 = add i32 1, %2657
  store i32 %2658, i32* %65, align 4
  store i32 0, i32* %66, align 4
  br label %2659

2659:                                             ; preds = %2679, %2654
  %2660 = load i32, i32* %66, align 4
  %2661 = icmp slt i32 %2660, 28
  br i1 %2661, label %2662, label %2682

2662:                                             ; preds = %2659
  %2663 = load i32, i32* %65, align 4
  %2664 = load i32, i32* %66, align 4
  %2665 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* @_ZZ9jpegModelR5MixerE2cp, i32 %2664)
  %2666 = load i8*, i8** %2665, align 8
  %2667 = sext i32 %2663 to i64
  %2668 = getelementptr inbounds i8, i8* %2666, i64 %2667
  store i8* %2668, i8** %2665, align 8
  %2669 = load i32, i32* %66, align 4
  %2670 = sext i32 %2669 to i64
  %2671 = getelementptr inbounds [28 x %class.StateMap], [28 x %class.StateMap]* @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %2670
  %2672 = load i32, i32* %66, align 4
  %2673 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* @_ZZ9jpegModelR5MixerE2cp, i32 %2672)
  %2674 = load i8*, i8** %2673, align 8
  %2675 = load i8, i8* %2674, align 1
  %2676 = zext i8 %2675 to i32
  %2677 = call i32 @_ZN8StateMap1pEii(%class.StateMap* %2671, i32 %2676, i32 1023)
  %2678 = call i32 @_ZNK7StretchclEi(%class.Stretch* @stretch, i32 %2677)
  call void @_ZN5Mixer3addEi(%class.Mixer* @_ZZ9jpegModelR5MixerE2m1, i32 %2678)
  br label %2679

2679:                                             ; preds = %2662
  %2680 = load i32, i32* %66, align 4
  %2681 = add nsw i32 %2680, 1
  store i32 %2681, i32* %66, align 4
  br label %2659

2682:                                             ; preds = %2659
  br label %2711

2683:                                             ; preds = %2626
  %2684 = load i32, i32* @_ZZ9jpegModelR5MixerE8huffcode, align 4
  %2685 = and i32 %2684, 1
  %2686 = add i32 1, %2685
  store i32 %2686, i32* %67, align 4
  store i32 0, i32* %68, align 4
  br label %2687

2687:                                             ; preds = %2707, %2683
  %2688 = load i32, i32* %68, align 4
  %2689 = icmp slt i32 %2688, 28
  br i1 %2689, label %2690, label %2710

2690:                                             ; preds = %2687
  %2691 = load i32, i32* %67, align 4
  %2692 = load i32, i32* %68, align 4
  %2693 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* @_ZZ9jpegModelR5MixerE2cp, i32 %2692)
  %2694 = load i8*, i8** %2693, align 8
  %2695 = sext i32 %2691 to i64
  %2696 = getelementptr inbounds i8, i8* %2694, i64 %2695
  store i8* %2696, i8** %2693, align 8
  %2697 = load i32, i32* %68, align 4
  %2698 = sext i32 %2697 to i64
  %2699 = getelementptr inbounds [28 x %class.StateMap], [28 x %class.StateMap]* @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %2698
  %2700 = load i32, i32* %68, align 4
  %2701 = call dereferenceable(8) i8** @_ZN5ArrayIPhLi0EEixEi(%class.Array.6* @_ZZ9jpegModelR5MixerE2cp, i32 %2700)
  %2702 = load i8*, i8** %2701, align 8
  %2703 = load i8, i8* %2702, align 1
  %2704 = zext i8 %2703 to i32
  %2705 = call i32 @_ZN8StateMap1pEii(%class.StateMap* %2699, i32 %2704, i32 1023)
  %2706 = call i32 @_ZNK7StretchclEi(%class.Stretch* @stretch, i32 %2705)
  call void @_ZN5Mixer3addEi(%class.Mixer* @_ZZ9jpegModelR5MixerE2m1, i32 %2706)
  br label %2707

2707:                                             ; preds = %2690
  %2708 = load i32, i32* %68, align 4
  %2709 = add nsw i32 %2708, 1
  store i32 %2709, i32* %68, align 4
  br label %2687

2710:                                             ; preds = %2687
  br label %2711

2711:                                             ; preds = %2710, %2682, %2653
  %2712 = load i32, i32* @_ZZ9jpegModelR5MixerE6column, align 4
  %2713 = icmp eq i32 %2712, 0
  %2714 = zext i1 %2713 to i32
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ9jpegModelR5MixerE2m1, i32 %2714, i32 2)
  %2715 = load i32, i32* %59, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ9jpegModelR5MixerE2m1, i32 %2715, i32 256)
  %2716 = load i32, i32* %60, align 4
  %2717 = and i32 %2716, 511
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ9jpegModelR5MixerE2m1, i32 %2717, i32 512)
  %2718 = call i32 @_ZN5Mixer1pEv(%class.Mixer* @_ZZ9jpegModelR5MixerE2m1)
  store i32 %2718, i32* %69, align 4
  %2719 = load %class.Mixer*, %class.Mixer** %3, align 8
  %2720 = load i32, i32* %69, align 4
  %2721 = call i32 @_ZNK7StretchclEi(%class.Stretch* @stretch, i32 %2720)
  call void @_ZN5Mixer3addEi(%class.Mixer* %2719, i32 %2721)
  %2722 = load i32, i32* %69, align 4
  %2723 = load i32, i32* %60, align 4
  %2724 = and i32 %2723, 511
  %2725 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* @_ZZ9jpegModelR5MixerE8adv_pred, i32 1)
  %2726 = load i32, i32* %2725, align 4
  %2727 = and i32 %2726, 63
  %2728 = shl i32 %2727, 9
  %2729 = or i32 %2724, %2728
  %2730 = call i32 @_ZN3APM1pEiii(%class.APM* @_ZZ9jpegModelR5MixerE2a1, i32 %2722, i32 %2729, i32 1023)
  store i32 %2730, i32* %69, align 4
  %2731 = load i32, i32* %69, align 4
  %2732 = load i32, i32* %60, align 4
  %2733 = and i32 %2732, 255
  %2734 = load i32, i32* %59, align 4
  %2735 = shl i32 %2734, 8
  %2736 = or i32 %2733, %2735
  %2737 = call i32 @_ZN3APM1pEiii(%class.APM* @_ZZ9jpegModelR5MixerE2a2, i32 %2731, i32 %2736, i32 255)
  store i32 %2737, i32* %69, align 4
  %2738 = load %class.Mixer*, %class.Mixer** %3, align 8
  %2739 = load i32, i32* %69, align 4
  %2740 = call i32 @_ZNK7StretchclEi(%class.Stretch* @stretch, i32 %2739)
  call void @_ZN5Mixer3addEi(%class.Mixer* %2738, i32 %2740)
  %2741 = load i32, i32* %60, align 4
  %2742 = and i32 %2741, 255
  %2743 = add nsw i32 2, %2742
  store i32 %2743, i32* %2, align 4
  br label %2744

2744:                                             ; preds = %2711, %2318, %2153, %2143, %1356, %1331, %1320, %1308, %1277, %1208, %1194, %1176, %1127, %1104, %1084, %1051, %1041, %1025, %1017, %1004, %986, %967, %863, %838, %819, %780, %771, %712, %694, %682, %675, %582, %507, %465, %457, %348, %342, %291, %277
  %2745 = load i32, i32* %2, align 4
  ret i32 %2745

2746:                                             ; preds = %2280, %2276, %2272, %2271, %2258, %2254, %2250, %267, %263, %259, %255, %251, %247, %243, %239, %235, %231, %227, %223, %219, %215, %211
  %2747 = load i8*, i8** %4, align 8
  %2748 = load i32, i32* %5, align 4
  %2749 = insertvalue { i8*, i32 } undef, i8* %2747, 0
  %2750 = insertvalue { i8*, i32 } %2749, i32 %2748, 1
  resume { i8*, i32 } %2750
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayI3HUFLi0EEC2Ei(%class.Array.7* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Array.7*, align 8
  %4 = alloca i32, align 4
  store %class.Array.7* %0, %class.Array.7** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.7*, %class.Array.7** %3, align 8
  %6 = load i32, i32* %4, align 4
  call void @_ZN5ArrayI3HUFLi0EE6createEi(%class.Array.7* %5, i32 %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayI3HUFLi0EED2Ev(%class.Array.7* %0) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Array.7*, align 8
  store %class.Array.7* %0, %class.Array.7** %2, align 8
  %3 = load %class.Array.7*, %class.Array.7** %2, align 8
  %4 = getelementptr inbounds %class.Array.7, %class.Array.7* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = mul i64 %6, 12
  %8 = sub i64 0, %7
  %9 = trunc i64 %8 to i32
  invoke void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %9)
          to label %10 unwind label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.Array.7, %class.Array.7* %3, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  call void @free(i8* %12) #2
  ret void

13:                                               ; preds = %1
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  call void @__clang_call_terminate(i8* %15) #15
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN6IntBufC2Ei(%class.IntBuf* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.IntBuf*, align 8
  %4 = alloca i32, align 4
  store %class.IntBuf* %0, %class.IntBuf** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.IntBuf*, %class.IntBuf** %3, align 8
  %6 = getelementptr inbounds %class.IntBuf, %class.IntBuf* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* %6, i32 %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN6IntBufD2Ev(%class.IntBuf* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.IntBuf*, align 8
  store %class.IntBuf* %0, %class.IntBuf** %2, align 8
  %3 = load %class.IntBuf*, %class.IntBuf** %2, align 8
  %4 = getelementptr inbounds %class.IntBuf, %class.IntBuf* %3, i32 0, i32 0
  call void @_ZN5ArrayIiLi0EED2Ev(%class.Array* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(12) %struct.HUF* @_ZN5ArrayI3HUFLi0EEixEi(%class.Array.7* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array.7*, align 8
  %4 = alloca i32, align 4
  store %class.Array.7* %0, %class.Array.7** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.7*, %class.Array.7** %3, align 8
  %6 = getelementptr inbounds %class.Array.7, %class.Array.7* %5, i32 0, i32 3
  %7 = load %struct.HUF*, %struct.HUF** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.HUF, %struct.HUF* %7, i64 %9
  ret %struct.HUF* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK5ArrayI3HUFLi0EE4sizeEv(%class.Array.7* %0) #1 comdat align 2 {
  %2 = alloca %class.Array.7*, align 8
  store %class.Array.7* %0, %class.Array.7** %2, align 8
  %3 = load %class.Array.7*, %class.Array.7** %2, align 8
  %4 = getelementptr inbounds %class.Array.7, %class.Array.7* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local dereferenceable(4) i32* @_ZN6IntBufixEi(%class.IntBuf* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.IntBuf*, align 8
  %4 = alloca i32, align 4
  store %class.IntBuf* %0, %class.IntBuf** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.IntBuf*, %class.IntBuf** %3, align 8
  %6 = getelementptr inbounds %class.IntBuf, %class.IntBuf* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.IntBuf, %class.IntBuf* %5, i32 0, i32 0
  %9 = call i32 @_ZNK5ArrayIiLi0EE4sizeEv(%class.Array* %8)
  %10 = sub nsw i32 %9, 1
  %11 = and i32 %7, %10
  %12 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %6, i32 %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN2BHILi9EEC2Ei(%class.BH* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.BH*, align 8
  %4 = alloca i32, align 4
  store %class.BH* %0, %class.BH** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.BH*, %class.BH** %3, align 8
  %6 = getelementptr inbounds %class.BH, %class.BH* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = mul nsw i32 %7, 9
  call void @_ZN5ArrayIhLi64EEC2Ei(%class.Array.0* %6, i32 %8)
  %9 = getelementptr inbounds %class.BH, %class.BH* %5, i32 0, i32 1
  %10 = load i32, i32* %4, align 4
  %11 = sub nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN2BHILi9EED2Ev(%class.BH* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.BH*, align 8
  store %class.BH* %0, %class.BH** %2, align 8
  %3 = load %class.BH*, %class.BH** %2, align 8
  %4 = getelementptr inbounds %class.BH, %class.BH* %3, i32 0, i32 0
  call void @_ZN5ArrayIhLi64EED2Ev(%class.Array.0* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_array_dtor.13(i8* %0) #0 section ".text.startup" {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  br label %3

3:                                                ; preds = %3, %1
  %4 = phi %class.StateMap* [ getelementptr inbounds (%class.StateMap, %class.StateMap* getelementptr inbounds ([28 x %class.StateMap], [28 x %class.StateMap]* @_ZZ9jpegModelR5MixerE2sm, i32 0, i32 0), i64 28), %1 ], [ %5, %3 ]
  %5 = getelementptr inbounds %class.StateMap, %class.StateMap* %4, i64 -1
  call void @_ZN8StateMapD2Ev(%class.StateMap* %5) #2
  %6 = icmp eq %class.StateMap* %5, getelementptr inbounds ([28 x %class.StateMap], [28 x %class.StateMap]* @_ZZ9jpegModelR5MixerE2sm, i32 0, i32 0)
  br i1 %6, label %7, label %3

7:                                                ; preds = %3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN3APMD2Ev(%class.APM* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.APM*, align 8
  store %class.APM* %0, %class.APM** %2, align 8
  %3 = load %class.APM*, %class.APM** %2, align 8
  %4 = bitcast %class.APM* %3 to %class.StateMap*
  call void @_ZN8StateMapD2Ev(%class.StateMap* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5Mixer6updateEv(%class.Mixer* %0) #0 comdat align 2 {
  %2 = alloca %class.Mixer*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %2, align 8
  %5 = load %class.Mixer*, %class.Mixer** %2, align 8
  store i32 0, i32* %3, align 4
  br label %6

6:                                                ; preds = %38, %1
  %7 = load i32, i32* %3, align 4
  %8 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %11, label %41

11:                                               ; preds = %6
  %12 = load i32, i32* @y, align 4
  %13 = shl i32 %12, 12
  %14 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 9
  %15 = load i32, i32* %3, align 4
  %16 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %14, i32 %15)
  %17 = load i32, i32* %16, align 4
  %18 = sub nsw i32 %13, %17
  %19 = mul nsw i32 %18, 7
  store i32 %19, i32* %4, align 4
  %20 = load i32, i32* %4, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %37

22:                                               ; preds = %11
  %23 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 3
  %24 = call dereferenceable(2) i16* @_ZN5ArrayIsLi16EEixEi(%class.Array.1* %23, i32 0)
  %25 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 4
  %26 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 5
  %27 = load i32, i32* %3, align 4
  %28 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %26, i32 %27)
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = mul nsw i32 %29, %31
  %33 = call dereferenceable(2) i16* @_ZN5ArrayIsLi16EEixEi(%class.Array.1* %25, i32 %32)
  %34 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 8
  %35 = load i32, i32* %34, align 8
  %36 = load i32, i32* %4, align 4
  call void @_Z5trainPsS_ii(i16* %24, i16* %33, i32 %35, i32 %36)
  br label %37

37:                                               ; preds = %22, %11
  br label %38

38:                                               ; preds = %37
  %39 = load i32, i32* %3, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %3, align 4
  br label %6

41:                                               ; preds = %6
  %42 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 6
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 7
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 8
  store i32 0, i32* %44, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8* @_ZN2BHILi9EEixEj(%class.BH* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca %class.BH*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i32, align 4
  store %class.BH* %0, %class.BH** %4, align 8
  store i32 %1, i32* %5, align 4
  %10 = load %class.BH*, %class.BH** %4, align 8
  %11 = load i32, i32* %5, align 4
  %12 = lshr i32 %11, 16
  %13 = load i32, i32* %5, align 4
  %14 = xor i32 %12, %13
  %15 = and i32 %14, 65535
  store i32 %15, i32* %6, align 4
  %16 = load i32, i32* %5, align 4
  %17 = mul i32 %16, 8
  %18 = getelementptr inbounds %class.BH, %class.BH* %10, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %17, %19
  store i32 %20, i32* %5, align 4
  store i32 0, i32* %9, align 4
  br label %21

21:                                               ; preds = %50, %2
  %22 = load i32, i32* %9, align 4
  %23 = icmp slt i32 %22, 8
  br i1 %23, label %24, label %53

24:                                               ; preds = %21
  %25 = getelementptr inbounds %class.BH, %class.BH* %10, i32 0, i32 0
  %26 = load i32, i32* %5, align 4
  %27 = load i32, i32* %9, align 4
  %28 = add i32 %26, %27
  %29 = mul i32 %28, 9
  %30 = call dereferenceable(1) i8* @_ZN5ArrayIhLi64EEixEi(%class.Array.0* %25, i32 %29)
  store i8* %30, i8** %7, align 8
  %31 = load i8*, i8** %7, align 8
  %32 = bitcast i8* %31 to i16*
  store i16* %32, i16** %8, align 8
  %33 = load i8*, i8** %7, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 2
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %24
  %39 = load i32, i32* %6, align 4
  %40 = trunc i32 %39 to i16
  %41 = load i16*, i16** %8, align 8
  store i16 %40, i16* %41, align 2
  br label %53

42:                                               ; preds = %24
  %43 = load i16*, i16** %8, align 8
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = load i32, i32* %6, align 4
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %49

48:                                               ; preds = %42
  br label %53

49:                                               ; preds = %42
  br label %50

50:                                               ; preds = %49
  %51 = load i32, i32* %9, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %9, align 4
  br label %21

53:                                               ; preds = %48, %38, %21
  %54 = load i32, i32* %9, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %53
  %57 = load i8*, i8** %7, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  store i8* %58, i8** %3, align 8
  br label %116

59:                                               ; preds = %53
  %60 = load i32, i32* %9, align 4
  %61 = icmp eq i32 %60, 8
  br i1 %61, label %62, label %91

62:                                               ; preds = %59
  %63 = load i32, i32* %9, align 4
  %64 = add nsw i32 %63, -1
  store i32 %64, i32* %9, align 4
  call void @llvm.memset.p0i8.i64(i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @_ZZN2BHILi9EEixEjE3tmp, i64 0, i64 0), i8 0, i64 9, i1 false)
  %65 = load i32, i32* %6, align 4
  %66 = trunc i32 %65 to i16
  store i16 %66, i16* bitcast ([9 x i8]* @_ZZN2BHILi9EEixEjE3tmp to i16*), align 1
  %67 = getelementptr inbounds %class.BH, %class.BH* %10, i32 0, i32 0
  %68 = load i32, i32* %5, align 4
  %69 = load i32, i32* %9, align 4
  %70 = add i32 %68, %69
  %71 = mul i32 %70, 9
  %72 = add i32 %71, 2
  %73 = call dereferenceable(1) i8* @_ZN5ArrayIhLi64EEixEi(%class.Array.0* %67, i32 %72)
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = getelementptr inbounds %class.BH, %class.BH* %10, i32 0, i32 0
  %77 = load i32, i32* %5, align 4
  %78 = load i32, i32* %9, align 4
  %79 = add i32 %77, %78
  %80 = sub i32 %79, 1
  %81 = mul i32 %80, 9
  %82 = add i32 %81, 2
  %83 = call dereferenceable(1) i8* @_ZN5ArrayIhLi64EEixEi(%class.Array.0* %76, i32 %82)
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = icmp sgt i32 %75, %85
  br i1 %86, label %87, label %90

87:                                               ; preds = %62
  %88 = load i32, i32* %9, align 4
  %89 = add nsw i32 %88, -1
  store i32 %89, i32* %9, align 4
  br label %90

90:                                               ; preds = %87, %62
  br label %94

91:                                               ; preds = %59
  %92 = load i16*, i16** %8, align 8
  %93 = bitcast i16* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @_ZZN2BHILi9EEixEjE3tmp, i64 0, i64 0), i8* align 2 %93, i64 9, i1 false)
  br label %94

94:                                               ; preds = %91, %90
  %95 = getelementptr inbounds %class.BH, %class.BH* %10, i32 0, i32 0
  %96 = load i32, i32* %5, align 4
  %97 = add i32 %96, 1
  %98 = mul i32 %97, 9
  %99 = call dereferenceable(1) i8* @_ZN5ArrayIhLi64EEixEi(%class.Array.0* %95, i32 %98)
  %100 = getelementptr inbounds %class.BH, %class.BH* %10, i32 0, i32 0
  %101 = load i32, i32* %5, align 4
  %102 = mul i32 %101, 9
  %103 = call dereferenceable(1) i8* @_ZN5ArrayIhLi64EEixEi(%class.Array.0* %100, i32 %102)
  %104 = load i32, i32* %9, align 4
  %105 = mul nsw i32 %104, 9
  %106 = sext i32 %105 to i64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %99, i8* align 1 %103, i64 %106, i1 false)
  %107 = getelementptr inbounds %class.BH, %class.BH* %10, i32 0, i32 0
  %108 = load i32, i32* %5, align 4
  %109 = mul i32 %108, 9
  %110 = call dereferenceable(1) i8* @_ZN5ArrayIhLi64EEixEi(%class.Array.0* %107, i32 %109)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %110, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @_ZZN2BHILi9EEixEjE3tmp, i64 0, i64 0), i64 9, i1 false)
  %111 = getelementptr inbounds %class.BH, %class.BH* %10, i32 0, i32 0
  %112 = load i32, i32* %5, align 4
  %113 = mul i32 %112, 9
  %114 = add i32 %113, 1
  %115 = call dereferenceable(1) i8* @_ZN5ArrayIhLi64EEixEi(%class.Array.0* %111, i32 %114)
  store i8* %115, i8** %3, align 8
  br label %116

116:                                              ; preds = %94, %56
  %117 = load i8*, i8** %3, align 8
  ret i8* %117
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_ZN5Mixer1pEv(%class.Mixer* %0) #0 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %class.Mixer*, align 8
  %4 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %3, align 8
  %5 = load %class.Mixer*, %class.Mixer** %3, align 8
  br label %6

6:                                                ; preds = %11, %1
  %7 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 7
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 3
  %13 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 8
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 8
  %16 = call dereferenceable(2) i16* @_ZN5ArrayIsLi16EEixEi(%class.Array.1* %12, i32 %14)
  store i16 0, i16* %16, align 2
  br label %6

17:                                               ; preds = %6
  %18 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 10
  %19 = load %class.Mixer*, %class.Mixer** %18, align 8
  %20 = icmp ne %class.Mixer* %19, null
  br i1 %20, label %21, label %65

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 10
  %23 = load %class.Mixer*, %class.Mixer** %22, align 8
  call void @_ZN5Mixer6updateEv(%class.Mixer* %23)
  store i32 0, i32* %4, align 4
  br label %24

24:                                               ; preds = %56, %21
  %25 = load i32, i32* %4, align 4
  %26 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 6
  %27 = load i32, i32* %26, align 8
  %28 = icmp slt i32 %25, %27
  br i1 %28, label %29, label %59

29:                                               ; preds = %24
  %30 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 3
  %31 = call dereferenceable(2) i16* @_ZN5ArrayIsLi16EEixEi(%class.Array.1* %30, i32 0)
  %32 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 4
  %33 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 5
  %34 = load i32, i32* %4, align 4
  %35 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %33, i32 %34)
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = mul nsw i32 %36, %38
  %40 = call dereferenceable(2) i16* @_ZN5ArrayIsLi16EEixEi(%class.Array.1* %32, i32 %39)
  %41 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 8
  %42 = load i32, i32* %41, align 8
  %43 = call i32 @_Z11dot_productPsS_i(i16* %31, i16* %40, i32 %42)
  %44 = ashr i32 %43, 5
  %45 = call i32 @_Z6squashi(i32 %44)
  %46 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 9
  %47 = load i32, i32* %4, align 4
  %48 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %46, i32 %47)
  store i32 %45, i32* %48, align 4
  %49 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 10
  %50 = load %class.Mixer*, %class.Mixer** %49, align 8
  %51 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 9
  %52 = load i32, i32* %4, align 4
  %53 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %51, i32 %52)
  %54 = load i32, i32* %53, align 4
  %55 = call i32 @_ZNK7StretchclEi(%class.Stretch* @stretch, i32 %54)
  call void @_ZN5Mixer3addEi(%class.Mixer* %50, i32 %55)
  br label %56

56:                                               ; preds = %29
  %57 = load i32, i32* %4, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %4, align 4
  br label %24

59:                                               ; preds = %24
  %60 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 10
  %61 = load %class.Mixer*, %class.Mixer** %60, align 8
  call void @_ZN5Mixer3setEii(%class.Mixer* %61, i32 0, i32 1)
  %62 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 10
  %63 = load %class.Mixer*, %class.Mixer** %62, align 8
  %64 = call i32 @_ZN5Mixer1pEv(%class.Mixer* %63)
  store i32 %64, i32* %2, align 4
  br label %77

65:                                               ; preds = %17
  %66 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 3
  %67 = call dereferenceable(2) i16* @_ZN5ArrayIsLi16EEixEi(%class.Array.1* %66, i32 0)
  %68 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 4
  %69 = call dereferenceable(2) i16* @_ZN5ArrayIsLi16EEixEi(%class.Array.1* %68, i32 0)
  %70 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 8
  %71 = load i32, i32* %70, align 8
  %72 = call i32 @_Z11dot_productPsS_i(i16* %67, i16* %69, i32 %71)
  %73 = ashr i32 %72, 8
  %74 = call i32 @_Z6squashi(i32 %73)
  %75 = getelementptr inbounds %class.Mixer, %class.Mixer* %5, i32 0, i32 9
  %76 = call dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %75, i32 0)
  store i32 %74, i32* %76, align 4
  store i32 %74, i32* %2, align 4
  br label %77

77:                                               ; preds = %65, %59
  %78 = load i32, i32* %2, align 4
  ret i32 %78
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_ZN3APM1pEiii(%class.APM* %0, i32 %1, i32 %2, i32 %3) #0 comdat align 2 {
  %5 = alloca %class.APM*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %class.APM* %0, %class.APM** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %10 = load %class.APM*, %class.APM** %5, align 8
  %11 = bitcast %class.APM* %10 to %class.StateMap*
  %12 = load i32, i32* %8, align 4
  call void @_ZN8StateMap6updateEi(%class.StateMap* %11, i32 %12)
  %13 = load i32, i32* %6, align 4
  %14 = call i32 @_ZNK7StretchclEi(%class.Stretch* @stretch, i32 %13)
  %15 = add nsw i32 %14, 2048
  %16 = mul nsw i32 %15, 23
  store i32 %16, i32* %6, align 4
  %17 = load i32, i32* %6, align 4
  %18 = and i32 %17, 4095
  store i32 %18, i32* %9, align 4
  %19 = load i32, i32* %7, align 4
  %20 = mul nsw i32 %19, 24
  %21 = load i32, i32* %6, align 4
  %22 = ashr i32 %21, 12
  %23 = add nsw i32 %20, %22
  store i32 %23, i32* %7, align 4
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %9, align 4
  %26 = ashr i32 %25, 11
  %27 = add nsw i32 %24, %26
  %28 = bitcast %class.APM* %10 to %class.StateMap*
  %29 = getelementptr inbounds %class.StateMap, %class.StateMap* %28, i32 0, i32 1
  store i32 %27, i32* %29, align 4
  %30 = bitcast %class.APM* %10 to %class.StateMap*
  %31 = getelementptr inbounds %class.StateMap, %class.StateMap* %30, i32 0, i32 2
  %32 = load i32, i32* %7, align 4
  %33 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %31, i32 %32)
  %34 = load i32, i32* %33, align 4
  %35 = lshr i32 %34, 13
  %36 = load i32, i32* %9, align 4
  %37 = sub nsw i32 4096, %36
  %38 = mul i32 %35, %37
  %39 = bitcast %class.APM* %10 to %class.StateMap*
  %40 = getelementptr inbounds %class.StateMap, %class.StateMap* %39, i32 0, i32 2
  %41 = load i32, i32* %7, align 4
  %42 = add nsw i32 %41, 1
  %43 = call dereferenceable(4) i32* @_ZN5ArrayIjLi0EEixEi(%class.Array* %40, i32 %42)
  %44 = load i32, i32* %43, align 4
  %45 = lshr i32 %44, 13
  %46 = load i32, i32* %9, align 4
  %47 = mul i32 %45, %46
  %48 = add i32 %38, %47
  %49 = lshr i32 %48, 19
  store i32 %49, i32* %6, align 4
  %50 = load i32, i32* %6, align 4
  ret i32 %50
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(1) i8* @_ZN5ArrayIhLi64EEixEi(%class.Array.0* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array.0*, align 8
  %4 = alloca i32, align 4
  store %class.Array.0* %0, %class.Array.0** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.0*, %class.Array.0** %3, align 8
  %6 = getelementptr inbounds %class.Array.0, %class.Array.0* %5, i32 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %7, i64 %9
  ret i8* %10
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIhLi64EED2Ev(%class.Array.0* %0) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Array.0*, align 8
  store %class.Array.0* %0, %class.Array.0** %2, align 8
  %3 = load %class.Array.0*, %class.Array.0** %2, align 8
  %4 = getelementptr inbounds %class.Array.0, %class.Array.0* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = mul i64 %6, 1
  %8 = sub i64 -64, %7
  %9 = trunc i64 %8 to i32
  invoke void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %9)
          to label %10 unwind label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.Array.0, %class.Array.0* %3, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  call void @free(i8* %12) #2
  ret void

13:                                               ; preds = %1
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  call void @__clang_call_terminate(i8* %15) #15
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIhLi64EEC2Ei(%class.Array.0* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Array.0*, align 8
  %4 = alloca i32, align 4
  store %class.Array.0* %0, %class.Array.0** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.0*, %class.Array.0** %3, align 8
  %6 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIhLi64EE6createEi(%class.Array.0* %5, i32 %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIhLi64EE6createEi(%class.Array.0* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array.0*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.Array.0* %0, %class.Array.0** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.Array.0*, %class.Array.0** %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 0
  store i32 %7, i32* %9, align 8
  %10 = load i32, i32* %4, align 4
  %11 = icmp sle i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 3
  store i8* null, i8** %13, align 8
  %14 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 2
  store i8* null, i8** %14, align 8
  br label %42

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 1
  %20 = add i64 64, %19
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* %5, align 4
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %22)
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = call noalias i8* @calloc(i64 %24, i64 1) #2
  %26 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 2
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %15
  call void @_Z4quitPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0))
  br label %31

31:                                               ; preds = %30, %15
  %32 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 64
  %35 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 2
  %36 = load i8*, i8** %35, align 8
  %37 = ptrtoint i8* %36 to i64
  %38 = and i64 %37, 63
  %39 = sub i64 0, %38
  %40 = getelementptr inbounds i8, i8* %34, i64 %39
  %41 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 3
  store i8* %40, i8** %41, align 8
  br label %42

42:                                               ; preds = %31, %12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayI3HUFLi0EE6createEi(%class.Array.7* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array.7*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.Array.7* %0, %class.Array.7** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.Array.7*, %class.Array.7** %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.Array.7, %class.Array.7* %6, i32 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %class.Array.7, %class.Array.7* %6, i32 0, i32 0
  store i32 %7, i32* %9, align 8
  %10 = load i32, i32* %4, align 4
  %11 = icmp sle i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.Array.7, %class.Array.7* %6, i32 0, i32 3
  store %struct.HUF* null, %struct.HUF** %13, align 8
  %14 = getelementptr inbounds %class.Array.7, %class.Array.7* %6, i32 0, i32 2
  store i8* null, i8** %14, align 8
  br label %36

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.Array.7, %class.Array.7* %6, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 12
  %20 = add i64 0, %19
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* %5, align 4
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %22)
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = call noalias i8* @calloc(i64 %24, i64 1) #2
  %26 = getelementptr inbounds %class.Array.7, %class.Array.7* %6, i32 0, i32 2
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %class.Array.7, %class.Array.7* %6, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %15
  call void @_Z4quitPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0))
  br label %31

31:                                               ; preds = %30, %15
  %32 = getelementptr inbounds %class.Array.7, %class.Array.7* %6, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast i8* %33 to %struct.HUF*
  %35 = getelementptr inbounds %class.Array.7, %class.Array.7* %6, i32 0, i32 3
  store %struct.HUF* %34, %struct.HUF** %35, align 8
  br label %36

36:                                               ; preds = %31, %12
  ret void
}

; Function Attrs: noinline uwtable
define dso_local i32 @_Z8wavModelR5Mixer(%class.Mixer* dereferenceable(136) %0) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca i32, align 4
  %3 = alloca %class.Mixer*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca [49 x [49 x [2 x double]]], align 16
  %14 = alloca [49 x [49 x double]], align 16
  %15 = alloca i32, align 4
  %16 = alloca i8*
  %17 = alloca i32
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %3, align 8
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZ8wavModelR5MixerE1K to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %29, !prof !2

22:                                               ; preds = %1
  %23 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8wavModelR5MixerE1K) #2
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %22
  %26 = load i32, i32* @level, align 4
  %27 = sub nsw i32 %26, 1
  %28 = ashr i32 128, %27
  store i32 %28, i32* @_ZZ8wavModelR5MixerE1K, align 4
  call void @__cxa_guard_release(i64* @_ZGVZ8wavModelR5MixerE1K) #2
  br label %29

29:                                               ; preds = %25, %22, %1
  store i32 0, i32* %10, align 4
  store double 0x3FEFDF3B645A1CAC, double* %12, align 8
  store i32 131072, i32* %15, align 4
  %30 = load atomic i8, i8* bitcast (i64* @_ZGVZ8wavModelR5MixerE4scm1 to i8*) acquire, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %38, !prof !2

32:                                               ; preds = %29
  %33 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8wavModelR5MixerE4scm1) #2
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm1, i32 131072)
          to label %36 unwind label %222

36:                                               ; preds = %35
  %37 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm1 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8wavModelR5MixerE4scm1) #2
  br label %38

38:                                               ; preds = %36, %32, %29
  %39 = load atomic i8, i8* bitcast (i64* @_ZGVZ8wavModelR5MixerE4scm2 to i8*) acquire, align 8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %47, !prof !2

41:                                               ; preds = %38
  %42 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8wavModelR5MixerE4scm2) #2
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm2, i32 131072)
          to label %45 unwind label %226

45:                                               ; preds = %44
  %46 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm2 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8wavModelR5MixerE4scm2) #2
  br label %47

47:                                               ; preds = %45, %41, %38
  %48 = load atomic i8, i8* bitcast (i64* @_ZGVZ8wavModelR5MixerE4scm3 to i8*) acquire, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %56, !prof !2

50:                                               ; preds = %47
  %51 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8wavModelR5MixerE4scm3) #2
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %50
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm3, i32 131072)
          to label %54 unwind label %230

54:                                               ; preds = %53
  %55 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm3 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8wavModelR5MixerE4scm3) #2
  br label %56

56:                                               ; preds = %54, %50, %47
  %57 = load atomic i8, i8* bitcast (i64* @_ZGVZ8wavModelR5MixerE4scm4 to i8*) acquire, align 8
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %65, !prof !2

59:                                               ; preds = %56
  %60 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8wavModelR5MixerE4scm4) #2
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %59
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm4, i32 131072)
          to label %63 unwind label %234

63:                                               ; preds = %62
  %64 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm4 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8wavModelR5MixerE4scm4) #2
  br label %65

65:                                               ; preds = %63, %59, %56
  %66 = load atomic i8, i8* bitcast (i64* @_ZGVZ8wavModelR5MixerE4scm5 to i8*) acquire, align 8
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %74, !prof !2

68:                                               ; preds = %65
  %69 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8wavModelR5MixerE4scm5) #2
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %68
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm5, i32 131072)
          to label %72 unwind label %238

72:                                               ; preds = %71
  %73 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm5 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8wavModelR5MixerE4scm5) #2
  br label %74

74:                                               ; preds = %72, %68, %65
  %75 = load atomic i8, i8* bitcast (i64* @_ZGVZ8wavModelR5MixerE4scm6 to i8*) acquire, align 8
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %83, !prof !2

77:                                               ; preds = %74
  %78 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8wavModelR5MixerE4scm6) #2
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %77
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm6, i32 131072)
          to label %81 unwind label %242

81:                                               ; preds = %80
  %82 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm6 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8wavModelR5MixerE4scm6) #2
  br label %83

83:                                               ; preds = %81, %77, %74
  %84 = load atomic i8, i8* bitcast (i64* @_ZGVZ8wavModelR5MixerE4scm7 to i8*) acquire, align 8
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %92, !prof !2

86:                                               ; preds = %83
  %87 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8wavModelR5MixerE4scm7) #2
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %86
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm7, i32 131072)
          to label %90 unwind label %246

90:                                               ; preds = %89
  %91 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm7 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8wavModelR5MixerE4scm7) #2
  br label %92

92:                                               ; preds = %90, %86, %83
  %93 = load atomic i8, i8* bitcast (i64* @_ZGVZ8wavModelR5MixerE4scm8 to i8*) acquire, align 8
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %101, !prof !2

95:                                               ; preds = %92
  %96 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8wavModelR5MixerE4scm8) #2
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %95
  invoke void @_ZN25SmallStationaryContextMapC2Ei(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm8, i32 131072)
          to label %99 unwind label %250

99:                                               ; preds = %98
  %100 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SmallStationaryContextMap*)* @_ZN25SmallStationaryContextMapD2Ev to void (i8*)*), i8* bitcast (%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm8 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8wavModelR5MixerE4scm8) #2
  br label %101

101:                                              ; preds = %99, %95, %92
  %102 = load atomic i8, i8* bitcast (i64* @_ZGVZ8wavModelR5MixerE2cm to i8*) acquire, align 8
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %113, !prof !2

104:                                              ; preds = %101
  %105 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8wavModelR5MixerE2cm) #2
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %113

107:                                              ; preds = %104
  %108 = load i32, i32* @level, align 4
  %109 = shl i32 65536, %108
  %110 = mul nsw i32 %109, 4
  invoke void @_ZN10ContextMapC1Eii(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %110, i32 10)
          to label %111 unwind label %254

111:                                              ; preds = %107
  %112 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.ContextMap*)* @_ZN10ContextMapD1Ev to void (i8*)*), i8* bitcast (%class.ContextMap* @_ZZ8wavModelR5MixerE2cm to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8wavModelR5MixerE2cm) #2
  br label %113

113:                                              ; preds = %111, %104, %101
  %114 = load i32, i32* @bpos, align 4
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %298, label %116

116:                                              ; preds = %113
  %117 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 8)
  %118 = icmp eq i32 %117, 100
  br i1 %118, label %119, label %298

119:                                              ; preds = %116
  %120 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 7)
  %121 = icmp eq i32 %120, 97
  br i1 %121, label %122, label %298

122:                                              ; preds = %119
  %123 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 6)
  %124 = icmp eq i32 %123, 116
  br i1 %124, label %125, label %298

125:                                              ; preds = %122
  %126 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 5)
  %127 = icmp eq i32 %126, 97
  br i1 %127, label %128, label %298

128:                                              ; preds = %125
  store i32 32, i32* %18, align 4
  br label %129

129:                                              ; preds = %294, %128
  %130 = load i32, i32* %18, align 4
  %131 = icmp sle i32 %130, 1000
  br i1 %131, label %132, label %297

132:                                              ; preds = %129
  %133 = load i32, i32* %18, align 4
  %134 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %133)
  %135 = icmp eq i32 %134, 102
  br i1 %135, label %136, label %293

136:                                              ; preds = %132
  %137 = load i32, i32* %18, align 4
  %138 = sub nsw i32 %137, 1
  %139 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %138)
  %140 = icmp eq i32 %139, 109
  br i1 %140, label %141, label %293

141:                                              ; preds = %136
  %142 = load i32, i32* %18, align 4
  %143 = sub nsw i32 %142, 2
  %144 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %143)
  %145 = icmp eq i32 %144, 116
  br i1 %145, label %146, label %293

146:                                              ; preds = %141
  %147 = load i32, i32* %18, align 4
  %148 = sub nsw i32 %147, 3
  %149 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %148)
  %150 = icmp eq i32 %149, 32
  br i1 %150, label %151, label %293

151:                                              ; preds = %146
  %152 = load i32, i32* %18, align 4
  %153 = sub nsw i32 %152, 8
  %154 = call i32 @_Z2i2i(i32 %153)
  %155 = icmp eq i32 %154, 1
  br i1 %155, label %161, label %156

156:                                              ; preds = %151
  %157 = load i32, i32* %18, align 4
  %158 = sub nsw i32 %157, 8
  %159 = call i32 @_Z2i2i(i32 %158)
  %160 = icmp eq i32 %159, 65534
  br i1 %160, label %161, label %293

161:                                              ; preds = %156, %151
  %162 = load i32, i32* %18, align 4
  %163 = sub nsw i32 %162, 22
  %164 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %163)
  store i32 %164, i32* @_ZZ8wavModelR5MixerE4bits, align 4
  %165 = load i32, i32* @_ZZ8wavModelR5MixerE4bits, align 4
  %166 = add nsw i32 %165, 7
  %167 = ashr i32 %166, 3
  store i32 %167, i32* @_ZZ8wavModelR5MixerE5bytes, align 4
  %168 = load i32, i32* %18, align 4
  %169 = sub nsw i32 %168, 10
  %170 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %169)
  store i32 %170, i32* @_ZZ8wavModelR5MixerE8channels, align 4
  %171 = load i32, i32* @_ZZ8wavModelR5MixerE8channels, align 4
  %172 = load i32, i32* @_ZZ8wavModelR5MixerE5bytes, align 4
  %173 = mul nsw i32 %171, %172
  store i32 %173, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %174 = call i32 @_Z2i4i(i32 4)
  store i32 %174, i32* @_ZZ8wavModelR5MixerE1s, align 4
  %175 = load i32, i32* @_ZZ8wavModelR5MixerE8channels, align 4
  %176 = icmp eq i32 %175, 1
  br i1 %176, label %180, label %177

177:                                              ; preds = %161
  %178 = load i32, i32* @_ZZ8wavModelR5MixerE8channels, align 4
  %179 = icmp eq i32 %178, 2
  br i1 %179, label %180, label %290

180:                                              ; preds = %177, %161
  %181 = load i32, i32* @_ZZ8wavModelR5MixerE4bits, align 4
  %182 = icmp eq i32 %181, 8
  br i1 %182, label %186, label %183

183:                                              ; preds = %180
  %184 = load i32, i32* @_ZZ8wavModelR5MixerE4bits, align 4
  %185 = icmp eq i32 %184, 16
  br i1 %185, label %186, label %290

186:                                              ; preds = %183, %180
  %187 = load i32, i32* @pos, align 4
  %188 = load i32, i32* @_ZZ8wavModelR5MixerE1s, align 4
  %189 = add nsw i32 %187, %188
  store i32 %189, i32* @_ZZ8wavModelR5MixerE3eof, align 4
  store i32 0, i32* %19, align 4
  br label %190

190:                                              ; preds = %274, %186
  %191 = load i32, i32* %19, align 4
  %192 = load i32, i32* @_ZZ8wavModelR5MixerE8channels, align 4
  %193 = icmp slt i32 %191, %192
  br i1 %193, label %194, label %277

194:                                              ; preds = %190
  store i32 0, i32* %8, align 4
  br label %195

195:                                              ; preds = %259, %194
  %196 = load i32, i32* %8, align 4
  %197 = load i32, i32* @_ZL1S, align 4
  %198 = load i32, i32* @_ZL1D, align 4
  %199 = add nsw i32 %197, %198
  %200 = icmp sle i32 %196, %199
  br i1 %200, label %201, label %262

201:                                              ; preds = %195
  %202 = load i32, i32* %8, align 4
  store i32 %202, i32* %9, align 4
  br label %203

203:                                              ; preds = %219, %201
  %204 = load i32, i32* %9, align 4
  %205 = load i32, i32* @_ZL1S, align 4
  %206 = load i32, i32* @_ZL1D, align 4
  %207 = add nsw i32 %205, %206
  %208 = icmp sle i32 %204, %207
  br i1 %208, label %209, label %258

209:                                              ; preds = %203
  %210 = load i32, i32* %8, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %211
  %213 = load i32, i32* %9, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %212, i64 0, i64 %214
  %216 = load i32, i32* %19, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [2 x double], [2 x double]* %215, i64 0, i64 %217
  store double 0.000000e+00, double* %218, align 8
  br label %219

219:                                              ; preds = %209
  %220 = load i32, i32* %9, align 4
  %221 = add nsw i32 %220, 1
  store i32 %221, i32* %9, align 4
  br label %203

222:                                              ; preds = %35
  %223 = landingpad { i8*, i32 }
          cleanup
  %224 = extractvalue { i8*, i32 } %223, 0
  store i8* %224, i8** %16, align 8
  %225 = extractvalue { i8*, i32 } %223, 1
  store i32 %225, i32* %17, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8wavModelR5MixerE4scm1) #2
  br label %1476

226:                                              ; preds = %44
  %227 = landingpad { i8*, i32 }
          cleanup
  %228 = extractvalue { i8*, i32 } %227, 0
  store i8* %228, i8** %16, align 8
  %229 = extractvalue { i8*, i32 } %227, 1
  store i32 %229, i32* %17, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8wavModelR5MixerE4scm2) #2
  br label %1476

230:                                              ; preds = %53
  %231 = landingpad { i8*, i32 }
          cleanup
  %232 = extractvalue { i8*, i32 } %231, 0
  store i8* %232, i8** %16, align 8
  %233 = extractvalue { i8*, i32 } %231, 1
  store i32 %233, i32* %17, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8wavModelR5MixerE4scm3) #2
  br label %1476

234:                                              ; preds = %62
  %235 = landingpad { i8*, i32 }
          cleanup
  %236 = extractvalue { i8*, i32 } %235, 0
  store i8* %236, i8** %16, align 8
  %237 = extractvalue { i8*, i32 } %235, 1
  store i32 %237, i32* %17, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8wavModelR5MixerE4scm4) #2
  br label %1476

238:                                              ; preds = %71
  %239 = landingpad { i8*, i32 }
          cleanup
  %240 = extractvalue { i8*, i32 } %239, 0
  store i8* %240, i8** %16, align 8
  %241 = extractvalue { i8*, i32 } %239, 1
  store i32 %241, i32* %17, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8wavModelR5MixerE4scm5) #2
  br label %1476

242:                                              ; preds = %80
  %243 = landingpad { i8*, i32 }
          cleanup
  %244 = extractvalue { i8*, i32 } %243, 0
  store i8* %244, i8** %16, align 8
  %245 = extractvalue { i8*, i32 } %243, 1
  store i32 %245, i32* %17, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8wavModelR5MixerE4scm6) #2
  br label %1476

246:                                              ; preds = %89
  %247 = landingpad { i8*, i32 }
          cleanup
  %248 = extractvalue { i8*, i32 } %247, 0
  store i8* %248, i8** %16, align 8
  %249 = extractvalue { i8*, i32 } %247, 1
  store i32 %249, i32* %17, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8wavModelR5MixerE4scm7) #2
  br label %1476

250:                                              ; preds = %98
  %251 = landingpad { i8*, i32 }
          cleanup
  %252 = extractvalue { i8*, i32 } %251, 0
  store i8* %252, i8** %16, align 8
  %253 = extractvalue { i8*, i32 } %251, 1
  store i32 %253, i32* %17, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8wavModelR5MixerE4scm8) #2
  br label %1476

254:                                              ; preds = %107
  %255 = landingpad { i8*, i32 }
          cleanup
  %256 = extractvalue { i8*, i32 } %255, 0
  store i8* %256, i8** %16, align 8
  %257 = extractvalue { i8*, i32 } %255, 1
  store i32 %257, i32* %17, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8wavModelR5MixerE2cm) #2
  br label %1476

258:                                              ; preds = %203
  br label %259

259:                                              ; preds = %258
  %260 = load i32, i32* %8, align 4
  %261 = add nsw i32 %260, 1
  store i32 %261, i32* %8, align 4
  br label %195

262:                                              ; preds = %195
  %263 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 1
  %264 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %263, i64 0, i64 0
  %265 = load i32, i32* %19, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [2 x double], [2 x double]* %264, i64 0, i64 %266
  store double 1.000000e+00, double* %267, align 8
  %268 = load i32, i32* %19, align 4
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %269
  store i32 0, i32* %270, align 4
  %271 = load i32, i32* %19, align 4
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZ8wavModelR5MixerE1n, i64 0, i64 %272
  store i32 0, i32* %273, align 4
  br label %274

274:                                              ; preds = %262
  %275 = load i32, i32* %19, align 4
  %276 = add nsw i32 %275, 1
  store i32 %276, i32* %19, align 4
  br label %190

277:                                              ; preds = %190
  %278 = load i32, i32* @_ZZ8wavModelR5MixerE8channels, align 4
  %279 = load i32, i32* @_ZZ8wavModelR5MixerE4bits, align 4
  %280 = add nsw i32 %278, %279
  store i32 %280, i32* @_ZL5wmode, align 4
  %281 = load i32, i32* @_ZZ8wavModelR5MixerE4bits, align 4
  %282 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i32 %281)
  %283 = load i32, i32* @_ZZ8wavModelR5MixerE8channels, align 4
  %284 = icmp eq i32 %283, 1
  br i1 %284, label %285, label %287

285:                                              ; preds = %277
  %286 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0))
  store i32 48, i32* @_ZL1S, align 4
  store i32 0, i32* @_ZL1D, align 4
  br label %289

287:                                              ; preds = %277
  %288 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0))
  store i32 36, i32* @_ZL1S, align 4
  store i32 12, i32* @_ZL1D, align 4
  br label %289

289:                                              ; preds = %287, %285
  br label %292

290:                                              ; preds = %183, %177
  %291 = load i32, i32* @pos, align 4
  store i32 %291, i32* @_ZZ8wavModelR5MixerE3eof, align 4
  br label %292

292:                                              ; preds = %290, %289
  br label %293

293:                                              ; preds = %292, %156, %146, %141, %136, %132
  br label %294

294:                                              ; preds = %293
  %295 = load i32, i32* %18, align 4
  %296 = add nsw i32 %295, 1
  store i32 %296, i32* %18, align 4
  br label %129

297:                                              ; preds = %129
  br label %298

298:                                              ; preds = %297, %125, %122, %119, %116, %113
  %299 = load i32, i32* @pos, align 4
  %300 = load i32, i32* @_ZZ8wavModelR5MixerE3eof, align 4
  %301 = icmp sgt i32 %299, %300
  br i1 %301, label %302, label %303

302:                                              ; preds = %298
  store i32 0, i32* @_ZZ8wavModelR5MixerE8channels, align 4
  store i32 0, i32* @_ZZ8wavModelR5MixerE4bits, align 4
  store i32 0, i32* %2, align 4
  br label %1474

303:                                              ; preds = %298
  %304 = load i32, i32* @bpos, align 4
  %305 = icmp ne i32 %304, 0
  br i1 %305, label %1459, label %306

306:                                              ; preds = %303
  %307 = load i32, i32* @pos, align 4
  %308 = load i32, i32* @_ZZ8wavModelR5MixerE1s, align 4
  %309 = add nsw i32 %307, %308
  %310 = load i32, i32* @_ZZ8wavModelR5MixerE3eof, align 4
  %311 = sub nsw i32 %309, %310
  %312 = load i32, i32* @_ZZ8wavModelR5MixerE5bytes, align 4
  %313 = srem i32 %311, %312
  store i32 %313, i32* %6, align 4
  %314 = load i32, i32* @pos, align 4
  %315 = load i32, i32* @_ZZ8wavModelR5MixerE1s, align 4
  %316 = add nsw i32 %314, %315
  %317 = load i32, i32* @_ZZ8wavModelR5MixerE3eof, align 4
  %318 = sub nsw i32 %316, %317
  %319 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %320 = srem i32 %318, %319
  store i32 %320, i32* %5, align 4
  %321 = load i32, i32* %5, align 4
  %322 = load i32, i32* @_ZZ8wavModelR5MixerE5bytes, align 4
  %323 = sdiv i32 %321, %322
  store i32 %323, i32* %4, align 4
  %324 = load i32, i32* %6, align 4
  %325 = icmp ne i32 %324, 0
  br i1 %325, label %1102, label %326

326:                                              ; preds = %306
  store i32 0, i32* %9, align 4
  br label %327

327:                                              ; preds = %381, %326
  %328 = load i32, i32* %9, align 4
  %329 = load i32, i32* @_ZL1S, align 4
  %330 = load i32, i32* @_ZL1D, align 4
  %331 = add nsw i32 %329, %330
  %332 = icmp sle i32 %328, %331
  br i1 %332, label %333, label %384

333:                                              ; preds = %327
  %334 = load i32, i32* %9, align 4
  %335 = load i32, i32* %4, align 4
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %336
  %338 = load i32, i32* %337, align 4
  %339 = icmp slt i32 %334, %338
  br i1 %339, label %356, label %340

340:                                              ; preds = %333
  %341 = load i32, i32* %9, align 4
  %342 = load i32, i32* @_ZL1S, align 4
  %343 = sub nsw i32 %341, %342
  %344 = sub nsw i32 %343, 1
  %345 = icmp sge i32 %344, 0
  br i1 %345, label %346, label %380

346:                                              ; preds = %340
  %347 = load i32, i32* %9, align 4
  %348 = load i32, i32* @_ZL1S, align 4
  %349 = sub nsw i32 %347, %348
  %350 = sub nsw i32 %349, 1
  %351 = load i32, i32* %4, align 4
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %352
  %354 = load i32, i32* %353, align 4
  %355 = icmp slt i32 %350, %354
  br i1 %355, label %356, label %380

356:                                              ; preds = %346, %333
  %357 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 0
  %358 = load i32, i32* %9, align 4
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %357, i64 0, i64 %359
  %361 = load i32, i32* %4, align 4
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds [2 x double], [2 x double]* %360, i64 0, i64 %362
  %364 = load double, double* %363, align 8
  %365 = load double, double* %12, align 8
  %366 = fmul double %364, %365
  %367 = call i32 @_Z1Xii(i32 0, i32 1)
  %368 = load i32, i32* %9, align 4
  %369 = call i32 @_Z1Xii(i32 %368, i32 1)
  %370 = mul nsw i32 %367, %369
  %371 = sitofp i32 %370 to double
  %372 = fadd double %366, %371
  %373 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 0
  %374 = load i32, i32* %9, align 4
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %373, i64 0, i64 %375
  %377 = load i32, i32* %4, align 4
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds [2 x double], [2 x double]* %376, i64 0, i64 %378
  store double %372, double* %379, align 8
  br label %380

380:                                              ; preds = %356, %346, %340
  br label %381

381:                                              ; preds = %380
  %382 = load i32, i32* %9, align 4
  %383 = add nsw i32 %382, 1
  store i32 %383, i32* %9, align 4
  br label %327

384:                                              ; preds = %327
  %385 = load i32, i32* @_ZZ8wavModelR5MixerE8channels, align 4
  %386 = icmp eq i32 %385, 2
  br i1 %386, label %387, label %491

387:                                              ; preds = %384
  %388 = load i32, i32* @_ZL1S, align 4
  %389 = add nsw i32 %388, 1
  store i32 %389, i32* %9, align 4
  br label %390

390:                                              ; preds = %439, %387
  %391 = load i32, i32* %9, align 4
  %392 = load i32, i32* @_ZL1S, align 4
  %393 = load i32, i32* @_ZL1D, align 4
  %394 = add nsw i32 %392, %393
  %395 = icmp sle i32 %391, %394
  br i1 %395, label %396, label %442

396:                                              ; preds = %390
  %397 = load i32, i32* %9, align 4
  %398 = load i32, i32* @_ZL1S, align 4
  %399 = sub nsw i32 %397, %398
  %400 = sub nsw i32 %399, 1
  %401 = load i32, i32* %4, align 4
  %402 = sext i32 %401 to i64
  %403 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %402
  %404 = load i32, i32* %403, align 4
  %405 = icmp slt i32 %400, %404
  br i1 %405, label %406, label %438

406:                                              ; preds = %396
  %407 = load i32, i32* @_ZL1S, align 4
  %408 = add nsw i32 %407, 1
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %409
  %411 = load i32, i32* %9, align 4
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %410, i64 0, i64 %412
  %414 = load i32, i32* %4, align 4
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds [2 x double], [2 x double]* %413, i64 0, i64 %415
  %417 = load double, double* %416, align 8
  %418 = load double, double* %12, align 8
  %419 = fmul double %417, %418
  %420 = load i32, i32* @_ZL1S, align 4
  %421 = add nsw i32 %420, 1
  %422 = call i32 @_Z1Xii(i32 %421, i32 1)
  %423 = load i32, i32* %9, align 4
  %424 = call i32 @_Z1Xii(i32 %423, i32 1)
  %425 = mul nsw i32 %422, %424
  %426 = sitofp i32 %425 to double
  %427 = fadd double %419, %426
  %428 = load i32, i32* @_ZL1S, align 4
  %429 = add nsw i32 %428, 1
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %430
  %432 = load i32, i32* %9, align 4
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %431, i64 0, i64 %433
  %435 = load i32, i32* %4, align 4
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds [2 x double], [2 x double]* %434, i64 0, i64 %436
  store double %427, double* %437, align 8
  br label %438

438:                                              ; preds = %406, %396
  br label %439

439:                                              ; preds = %438
  %440 = load i32, i32* %9, align 4
  %441 = add nsw i32 %440, 1
  store i32 %441, i32* %9, align 4
  br label %390

442:                                              ; preds = %390
  store i32 1, i32* %8, align 4
  br label %443

443:                                              ; preds = %487, %442
  %444 = load i32, i32* %8, align 4
  %445 = load i32, i32* @_ZL1S, align 4
  %446 = icmp sle i32 %444, %445
  br i1 %446, label %447, label %490

447:                                              ; preds = %443
  %448 = load i32, i32* %8, align 4
  %449 = load i32, i32* %4, align 4
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %450
  %452 = load i32, i32* %451, align 4
  %453 = icmp slt i32 %448, %452
  br i1 %453, label %454, label %486

454:                                              ; preds = %447
  %455 = load i32, i32* %8, align 4
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %456
  %458 = load i32, i32* @_ZL1S, align 4
  %459 = add nsw i32 %458, 1
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %457, i64 0, i64 %460
  %462 = load i32, i32* %4, align 4
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds [2 x double], [2 x double]* %461, i64 0, i64 %463
  %465 = load double, double* %464, align 8
  %466 = load double, double* %12, align 8
  %467 = fmul double %465, %466
  %468 = load i32, i32* %8, align 4
  %469 = call i32 @_Z1Xii(i32 %468, i32 1)
  %470 = load i32, i32* @_ZL1S, align 4
  %471 = add nsw i32 %470, 1
  %472 = call i32 @_Z1Xii(i32 %471, i32 1)
  %473 = mul nsw i32 %469, %472
  %474 = sitofp i32 %473 to double
  %475 = fadd double %467, %474
  %476 = load i32, i32* %8, align 4
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %477
  %479 = load i32, i32* @_ZL1S, align 4
  %480 = add nsw i32 %479, 1
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %478, i64 0, i64 %481
  %483 = load i32, i32* %4, align 4
  %484 = sext i32 %483 to i64
  %485 = getelementptr inbounds [2 x double], [2 x double]* %482, i64 0, i64 %484
  store double %475, double* %485, align 8
  br label %486

486:                                              ; preds = %454, %447
  br label %487

487:                                              ; preds = %486
  %488 = load i32, i32* %8, align 4
  %489 = add nsw i32 %488, 1
  store i32 %489, i32* %8, align 4
  br label %443

490:                                              ; preds = %443
  br label %491

491:                                              ; preds = %490, %384
  %492 = load i32, i32* %4, align 4
  %493 = sext i32 %492 to i64
  %494 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZ8wavModelR5MixerE1n, i64 0, i64 %493
  %495 = load i32, i32* %494, align 4
  %496 = add nsw i32 %495, 1
  store i32 %496, i32* %494, align 4
  %497 = load i32, i32* @_ZZ8wavModelR5MixerE1K, align 4
  %498 = icmp eq i32 %496, %497
  br i1 %498, label %499, label %910

499:                                              ; preds = %491
  %500 = load i32, i32* @_ZZ8wavModelR5MixerE8channels, align 4
  %501 = icmp eq i32 %500, 1
  br i1 %501, label %502, label %558

502:                                              ; preds = %499
  store i32 1, i32* %8, align 4
  br label %503

503:                                              ; preds = %554, %502
  %504 = load i32, i32* %8, align 4
  %505 = load i32, i32* @_ZL1S, align 4
  %506 = load i32, i32* @_ZL1D, align 4
  %507 = add nsw i32 %505, %506
  %508 = icmp sle i32 %504, %507
  br i1 %508, label %509, label %557

509:                                              ; preds = %503
  %510 = load i32, i32* %8, align 4
  store i32 %510, i32* %9, align 4
  br label %511

511:                                              ; preds = %550, %509
  %512 = load i32, i32* %9, align 4
  %513 = load i32, i32* @_ZL1S, align 4
  %514 = load i32, i32* @_ZL1D, align 4
  %515 = add nsw i32 %513, %514
  %516 = icmp sle i32 %512, %515
  br i1 %516, label %517, label %553

517:                                              ; preds = %511
  %518 = load i32, i32* %8, align 4
  %519 = sub nsw i32 %518, 1
  %520 = sext i32 %519 to i64
  %521 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %520
  %522 = load i32, i32* %9, align 4
  %523 = sub nsw i32 %522, 1
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %521, i64 0, i64 %524
  %526 = load i32, i32* %4, align 4
  %527 = sext i32 %526 to i64
  %528 = getelementptr inbounds [2 x double], [2 x double]* %525, i64 0, i64 %527
  %529 = load double, double* %528, align 8
  %530 = load i32, i32* %8, align 4
  %531 = sub nsw i32 %530, 1
  %532 = call i32 @_Z1Xii(i32 %531, i32 1)
  %533 = load i32, i32* %9, align 4
  %534 = sub nsw i32 %533, 1
  %535 = call i32 @_Z1Xii(i32 %534, i32 1)
  %536 = mul nsw i32 %532, %535
  %537 = sitofp i32 %536 to double
  %538 = fsub double %529, %537
  %539 = load double, double* %12, align 8
  %540 = fdiv double %538, %539
  %541 = load i32, i32* %8, align 4
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %542
  %544 = load i32, i32* %9, align 4
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %543, i64 0, i64 %545
  %547 = load i32, i32* %4, align 4
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds [2 x double], [2 x double]* %546, i64 0, i64 %548
  store double %540, double* %549, align 8
  br label %550

550:                                              ; preds = %517
  %551 = load i32, i32* %9, align 4
  %552 = add nsw i32 %551, 1
  store i32 %552, i32* %9, align 4
  br label %511

553:                                              ; preds = %511
  br label %554

554:                                              ; preds = %553
  %555 = load i32, i32* %8, align 4
  %556 = add nsw i32 %555, 1
  store i32 %556, i32* %8, align 4
  br label %503

557:                                              ; preds = %503
  br label %626

558:                                              ; preds = %499
  store i32 1, i32* %8, align 4
  br label %559

559:                                              ; preds = %622, %558
  %560 = load i32, i32* %8, align 4
  %561 = load i32, i32* @_ZL1S, align 4
  %562 = load i32, i32* @_ZL1D, align 4
  %563 = add nsw i32 %561, %562
  %564 = icmp sle i32 %560, %563
  br i1 %564, label %565, label %625

565:                                              ; preds = %559
  %566 = load i32, i32* %8, align 4
  %567 = load i32, i32* @_ZL1S, align 4
  %568 = add nsw i32 %567, 1
  %569 = icmp ne i32 %566, %568
  br i1 %569, label %570, label %621

570:                                              ; preds = %565
  %571 = load i32, i32* %8, align 4
  store i32 %571, i32* %9, align 4
  br label %572

572:                                              ; preds = %617, %570
  %573 = load i32, i32* %9, align 4
  %574 = load i32, i32* @_ZL1S, align 4
  %575 = load i32, i32* @_ZL1D, align 4
  %576 = add nsw i32 %574, %575
  %577 = icmp sle i32 %573, %576
  br i1 %577, label %578, label %620

578:                                              ; preds = %572
  %579 = load i32, i32* %9, align 4
  %580 = load i32, i32* @_ZL1S, align 4
  %581 = add nsw i32 %580, 1
  %582 = icmp ne i32 %579, %581
  br i1 %582, label %583, label %616

583:                                              ; preds = %578
  %584 = load i32, i32* %8, align 4
  %585 = sub nsw i32 %584, 1
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %586
  %588 = load i32, i32* %9, align 4
  %589 = sub nsw i32 %588, 1
  %590 = sext i32 %589 to i64
  %591 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %587, i64 0, i64 %590
  %592 = load i32, i32* %4, align 4
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds [2 x double], [2 x double]* %591, i64 0, i64 %593
  %595 = load double, double* %594, align 8
  %596 = load i32, i32* %8, align 4
  %597 = sub nsw i32 %596, 1
  %598 = call i32 @_Z1Xii(i32 %597, i32 1)
  %599 = load i32, i32* %9, align 4
  %600 = sub nsw i32 %599, 1
  %601 = call i32 @_Z1Xii(i32 %600, i32 1)
  %602 = mul nsw i32 %598, %601
  %603 = sitofp i32 %602 to double
  %604 = fsub double %595, %603
  %605 = load double, double* %12, align 8
  %606 = fdiv double %604, %605
  %607 = load i32, i32* %8, align 4
  %608 = sext i32 %607 to i64
  %609 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %608
  %610 = load i32, i32* %9, align 4
  %611 = sext i32 %610 to i64
  %612 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %609, i64 0, i64 %611
  %613 = load i32, i32* %4, align 4
  %614 = sext i32 %613 to i64
  %615 = getelementptr inbounds [2 x double], [2 x double]* %612, i64 0, i64 %614
  store double %606, double* %615, align 8
  br label %616

616:                                              ; preds = %583, %578
  br label %617

617:                                              ; preds = %616
  %618 = load i32, i32* %9, align 4
  %619 = add nsw i32 %618, 1
  store i32 %619, i32* %9, align 4
  br label %572

620:                                              ; preds = %572
  br label %621

621:                                              ; preds = %620, %565
  br label %622

622:                                              ; preds = %621
  %623 = load i32, i32* %8, align 4
  %624 = add nsw i32 %623, 1
  store i32 %624, i32* %8, align 4
  br label %559

625:                                              ; preds = %559
  br label %626

626:                                              ; preds = %625, %557
  store i32 1, i32* %10, align 4
  br label %627

627:                                              ; preds = %747, %626
  %628 = load i32, i32* %10, align 4
  %629 = load i32, i32* @_ZL1S, align 4
  %630 = load i32, i32* @_ZL1D, align 4
  %631 = add nsw i32 %629, %630
  %632 = icmp sle i32 %628, %631
  br i1 %632, label %633, label %750

633:                                              ; preds = %627
  %634 = load i32, i32* %10, align 4
  %635 = sext i32 %634 to i64
  %636 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %635
  %637 = load i32, i32* %10, align 4
  %638 = sext i32 %637 to i64
  %639 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %636, i64 0, i64 %638
  %640 = load i32, i32* %4, align 4
  %641 = sext i32 %640 to i64
  %642 = getelementptr inbounds [2 x double], [2 x double]* %639, i64 0, i64 %641
  %643 = load double, double* %642, align 8
  store double %643, double* %11, align 8
  store i32 1, i32* %8, align 4
  br label %644

644:                                              ; preds = %666, %633
  %645 = load i32, i32* %8, align 4
  %646 = load i32, i32* %10, align 4
  %647 = icmp slt i32 %645, %646
  br i1 %647, label %648, label %669

648:                                              ; preds = %644
  %649 = load i32, i32* %10, align 4
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds [49 x [49 x double]], [49 x [49 x double]]* %14, i64 0, i64 %650
  %652 = load i32, i32* %8, align 4
  %653 = sext i32 %652 to i64
  %654 = getelementptr inbounds [49 x double], [49 x double]* %651, i64 0, i64 %653
  %655 = load double, double* %654, align 8
  %656 = load i32, i32* %10, align 4
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds [49 x [49 x double]], [49 x [49 x double]]* %14, i64 0, i64 %657
  %659 = load i32, i32* %8, align 4
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds [49 x double], [49 x double]* %658, i64 0, i64 %660
  %662 = load double, double* %661, align 8
  %663 = fmul double %655, %662
  %664 = load double, double* %11, align 8
  %665 = fsub double %664, %663
  store double %665, double* %11, align 8
  br label %666

666:                                              ; preds = %648
  %667 = load i32, i32* %8, align 4
  %668 = add nsw i32 %667, 1
  store i32 %668, i32* %8, align 4
  br label %644

669:                                              ; preds = %644
  %670 = load double, double* %11, align 8
  %671 = fcmp ogt double %670, 0.000000e+00
  br i1 %671, label %672, label %745

672:                                              ; preds = %669
  %673 = load double, double* %11, align 8
  %674 = call double @sqrt(double %673) #2
  %675 = load i32, i32* %10, align 4
  %676 = sext i32 %675 to i64
  %677 = getelementptr inbounds [49 x [49 x double]], [49 x [49 x double]]* %14, i64 0, i64 %676
  %678 = load i32, i32* %10, align 4
  %679 = sext i32 %678 to i64
  %680 = getelementptr inbounds [49 x double], [49 x double]* %677, i64 0, i64 %679
  store double %674, double* %680, align 8
  %681 = load i32, i32* %10, align 4
  %682 = add nsw i32 %681, 1
  store i32 %682, i32* %7, align 4
  br label %683

683:                                              ; preds = %741, %672
  %684 = load i32, i32* %7, align 4
  %685 = load i32, i32* @_ZL1S, align 4
  %686 = load i32, i32* @_ZL1D, align 4
  %687 = add nsw i32 %685, %686
  %688 = icmp sle i32 %684, %687
  br i1 %688, label %689, label %744

689:                                              ; preds = %683
  %690 = load i32, i32* %10, align 4
  %691 = sext i32 %690 to i64
  %692 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %691
  %693 = load i32, i32* %7, align 4
  %694 = sext i32 %693 to i64
  %695 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %692, i64 0, i64 %694
  %696 = load i32, i32* %4, align 4
  %697 = sext i32 %696 to i64
  %698 = getelementptr inbounds [2 x double], [2 x double]* %695, i64 0, i64 %697
  %699 = load double, double* %698, align 8
  store double %699, double* %11, align 8
  store i32 1, i32* %8, align 4
  br label %700

700:                                              ; preds = %722, %689
  %701 = load i32, i32* %8, align 4
  %702 = load i32, i32* %10, align 4
  %703 = icmp slt i32 %701, %702
  br i1 %703, label %704, label %725

704:                                              ; preds = %700
  %705 = load i32, i32* %7, align 4
  %706 = sext i32 %705 to i64
  %707 = getelementptr inbounds [49 x [49 x double]], [49 x [49 x double]]* %14, i64 0, i64 %706
  %708 = load i32, i32* %8, align 4
  %709 = sext i32 %708 to i64
  %710 = getelementptr inbounds [49 x double], [49 x double]* %707, i64 0, i64 %709
  %711 = load double, double* %710, align 8
  %712 = load i32, i32* %10, align 4
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds [49 x [49 x double]], [49 x [49 x double]]* %14, i64 0, i64 %713
  %715 = load i32, i32* %8, align 4
  %716 = sext i32 %715 to i64
  %717 = getelementptr inbounds [49 x double], [49 x double]* %714, i64 0, i64 %716
  %718 = load double, double* %717, align 8
  %719 = fmul double %711, %718
  %720 = load double, double* %11, align 8
  %721 = fsub double %720, %719
  store double %721, double* %11, align 8
  br label %722

722:                                              ; preds = %704
  %723 = load i32, i32* %8, align 4
  %724 = add nsw i32 %723, 1
  store i32 %724, i32* %8, align 4
  br label %700

725:                                              ; preds = %700
  %726 = load double, double* %11, align 8
  %727 = load i32, i32* %10, align 4
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds [49 x [49 x double]], [49 x [49 x double]]* %14, i64 0, i64 %728
  %730 = load i32, i32* %10, align 4
  %731 = sext i32 %730 to i64
  %732 = getelementptr inbounds [49 x double], [49 x double]* %729, i64 0, i64 %731
  %733 = load double, double* %732, align 8
  %734 = fdiv double %726, %733
  %735 = load i32, i32* %7, align 4
  %736 = sext i32 %735 to i64
  %737 = getelementptr inbounds [49 x [49 x double]], [49 x [49 x double]]* %14, i64 0, i64 %736
  %738 = load i32, i32* %10, align 4
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds [49 x double], [49 x double]* %737, i64 0, i64 %739
  store double %734, double* %740, align 8
  br label %741

741:                                              ; preds = %725
  %742 = load i32, i32* %7, align 4
  %743 = add nsw i32 %742, 1
  store i32 %743, i32* %7, align 4
  br label %683

744:                                              ; preds = %683
  br label %746

745:                                              ; preds = %669
  br label %750

746:                                              ; preds = %744
  br label %747

747:                                              ; preds = %746
  %748 = load i32, i32* %10, align 4
  %749 = add nsw i32 %748, 1
  store i32 %749, i32* %10, align 4
  br label %627

750:                                              ; preds = %745, %627
  %751 = load i32, i32* %10, align 4
  %752 = load i32, i32* @_ZL1S, align 4
  %753 = load i32, i32* @_ZL1D, align 4
  %754 = add nsw i32 %752, %753
  %755 = icmp sgt i32 %751, %754
  br i1 %755, label %756, label %906

756:                                              ; preds = %750
  %757 = load i32, i32* %4, align 4
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %758
  %760 = load i32, i32* %759, align 4
  %761 = load i32, i32* @_ZL1S, align 4
  %762 = add nsw i32 %761, 1
  %763 = icmp sgt i32 %760, %762
  br i1 %763, label %764, label %906

764:                                              ; preds = %756
  store i32 1, i32* %8, align 4
  br label %765

765:                                              ; preds = %837, %764
  %766 = load i32, i32* %8, align 4
  %767 = load i32, i32* @_ZL1S, align 4
  %768 = load i32, i32* @_ZL1D, align 4
  %769 = add nsw i32 %767, %768
  %770 = icmp sle i32 %766, %769
  br i1 %770, label %771, label %840

771:                                              ; preds = %765
  %772 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 0
  %773 = load i32, i32* %8, align 4
  %774 = sext i32 %773 to i64
  %775 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %772, i64 0, i64 %774
  %776 = load i32, i32* %4, align 4
  %777 = sext i32 %776 to i64
  %778 = getelementptr inbounds [2 x double], [2 x double]* %775, i64 0, i64 %777
  %779 = load double, double* %778, align 8
  %780 = load i32, i32* %8, align 4
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %781
  %783 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %782, i64 0, i64 0
  %784 = load i32, i32* %4, align 4
  %785 = sext i32 %784 to i64
  %786 = getelementptr inbounds [2 x double], [2 x double]* %783, i64 0, i64 %785
  store double %779, double* %786, align 8
  store i32 1, i32* %7, align 4
  br label %787

787:                                              ; preds = %817, %771
  %788 = load i32, i32* %7, align 4
  %789 = load i32, i32* %8, align 4
  %790 = icmp slt i32 %788, %789
  br i1 %790, label %791, label %820

791:                                              ; preds = %787
  %792 = load i32, i32* %8, align 4
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds [49 x [49 x double]], [49 x [49 x double]]* %14, i64 0, i64 %793
  %795 = load i32, i32* %7, align 4
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds [49 x double], [49 x double]* %794, i64 0, i64 %796
  %798 = load double, double* %797, align 8
  %799 = load i32, i32* %7, align 4
  %800 = sext i32 %799 to i64
  %801 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %800
  %802 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %801, i64 0, i64 0
  %803 = load i32, i32* %4, align 4
  %804 = sext i32 %803 to i64
  %805 = getelementptr inbounds [2 x double], [2 x double]* %802, i64 0, i64 %804
  %806 = load double, double* %805, align 8
  %807 = fmul double %798, %806
  %808 = load i32, i32* %8, align 4
  %809 = sext i32 %808 to i64
  %810 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %809
  %811 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %810, i64 0, i64 0
  %812 = load i32, i32* %4, align 4
  %813 = sext i32 %812 to i64
  %814 = getelementptr inbounds [2 x double], [2 x double]* %811, i64 0, i64 %813
  %815 = load double, double* %814, align 8
  %816 = fsub double %815, %807
  store double %816, double* %814, align 8
  br label %817

817:                                              ; preds = %791
  %818 = load i32, i32* %7, align 4
  %819 = add nsw i32 %818, 1
  store i32 %819, i32* %7, align 4
  br label %787

820:                                              ; preds = %787
  %821 = load i32, i32* %8, align 4
  %822 = sext i32 %821 to i64
  %823 = getelementptr inbounds [49 x [49 x double]], [49 x [49 x double]]* %14, i64 0, i64 %822
  %824 = load i32, i32* %8, align 4
  %825 = sext i32 %824 to i64
  %826 = getelementptr inbounds [49 x double], [49 x double]* %823, i64 0, i64 %825
  %827 = load double, double* %826, align 8
  %828 = load i32, i32* %8, align 4
  %829 = sext i32 %828 to i64
  %830 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %829
  %831 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %830, i64 0, i64 0
  %832 = load i32, i32* %4, align 4
  %833 = sext i32 %832 to i64
  %834 = getelementptr inbounds [2 x double], [2 x double]* %831, i64 0, i64 %833
  %835 = load double, double* %834, align 8
  %836 = fdiv double %835, %827
  store double %836, double* %834, align 8
  br label %837

837:                                              ; preds = %820
  %838 = load i32, i32* %8, align 4
  %839 = add nsw i32 %838, 1
  store i32 %839, i32* %8, align 4
  br label %765

840:                                              ; preds = %765
  %841 = load i32, i32* @_ZL1S, align 4
  %842 = load i32, i32* @_ZL1D, align 4
  %843 = add nsw i32 %841, %842
  store i32 %843, i32* %8, align 4
  br label %844

844:                                              ; preds = %902, %840
  %845 = load i32, i32* %8, align 4
  %846 = icmp sgt i32 %845, 0
  br i1 %846, label %847, label %905

847:                                              ; preds = %844
  %848 = load i32, i32* %8, align 4
  %849 = add nsw i32 %848, 1
  store i32 %849, i32* %7, align 4
  br label %850

850:                                              ; preds = %882, %847
  %851 = load i32, i32* %7, align 4
  %852 = load i32, i32* @_ZL1S, align 4
  %853 = load i32, i32* @_ZL1D, align 4
  %854 = add nsw i32 %852, %853
  %855 = icmp sle i32 %851, %854
  br i1 %855, label %856, label %885

856:                                              ; preds = %850
  %857 = load i32, i32* %7, align 4
  %858 = sext i32 %857 to i64
  %859 = getelementptr inbounds [49 x [49 x double]], [49 x [49 x double]]* %14, i64 0, i64 %858
  %860 = load i32, i32* %8, align 4
  %861 = sext i32 %860 to i64
  %862 = getelementptr inbounds [49 x double], [49 x double]* %859, i64 0, i64 %861
  %863 = load double, double* %862, align 8
  %864 = load i32, i32* %7, align 4
  %865 = sext i32 %864 to i64
  %866 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %865
  %867 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %866, i64 0, i64 0
  %868 = load i32, i32* %4, align 4
  %869 = sext i32 %868 to i64
  %870 = getelementptr inbounds [2 x double], [2 x double]* %867, i64 0, i64 %869
  %871 = load double, double* %870, align 8
  %872 = fmul double %863, %871
  %873 = load i32, i32* %8, align 4
  %874 = sext i32 %873 to i64
  %875 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %874
  %876 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %875, i64 0, i64 0
  %877 = load i32, i32* %4, align 4
  %878 = sext i32 %877 to i64
  %879 = getelementptr inbounds [2 x double], [2 x double]* %876, i64 0, i64 %878
  %880 = load double, double* %879, align 8
  %881 = fsub double %880, %872
  store double %881, double* %879, align 8
  br label %882

882:                                              ; preds = %856
  %883 = load i32, i32* %7, align 4
  %884 = add nsw i32 %883, 1
  store i32 %884, i32* %7, align 4
  br label %850

885:                                              ; preds = %850
  %886 = load i32, i32* %8, align 4
  %887 = sext i32 %886 to i64
  %888 = getelementptr inbounds [49 x [49 x double]], [49 x [49 x double]]* %14, i64 0, i64 %887
  %889 = load i32, i32* %8, align 4
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds [49 x double], [49 x double]* %888, i64 0, i64 %890
  %892 = load double, double* %891, align 8
  %893 = load i32, i32* %8, align 4
  %894 = sext i32 %893 to i64
  %895 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %894
  %896 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %895, i64 0, i64 0
  %897 = load i32, i32* %4, align 4
  %898 = sext i32 %897 to i64
  %899 = getelementptr inbounds [2 x double], [2 x double]* %896, i64 0, i64 %898
  %900 = load double, double* %899, align 8
  %901 = fdiv double %900, %892
  store double %901, double* %899, align 8
  br label %902

902:                                              ; preds = %885
  %903 = load i32, i32* %8, align 4
  %904 = add nsw i32 %903, -1
  store i32 %904, i32* %8, align 4
  br label %844

905:                                              ; preds = %844
  br label %906

906:                                              ; preds = %905, %756, %750
  %907 = load i32, i32* %4, align 4
  %908 = sext i32 %907 to i64
  %909 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZ8wavModelR5MixerE1n, i64 0, i64 %908
  store i32 0, i32* %909, align 4
  br label %910

910:                                              ; preds = %906, %491
  store double 0.000000e+00, double* %11, align 8
  store i32 1, i32* %9, align 4
  br label %911

911:                                              ; preds = %932, %910
  %912 = load i32, i32* %9, align 4
  %913 = load i32, i32* @_ZL1S, align 4
  %914 = load i32, i32* @_ZL1D, align 4
  %915 = add nsw i32 %913, %914
  %916 = icmp sle i32 %912, %915
  br i1 %916, label %917, label %935

917:                                              ; preds = %911
  %918 = load i32, i32* %9, align 4
  %919 = sext i32 %918 to i64
  %920 = getelementptr inbounds [49 x [49 x [2 x double]]], [49 x [49 x [2 x double]]]* %13, i64 0, i64 %919
  %921 = getelementptr inbounds [49 x [2 x double]], [49 x [2 x double]]* %920, i64 0, i64 0
  %922 = load i32, i32* %4, align 4
  %923 = sext i32 %922 to i64
  %924 = getelementptr inbounds [2 x double], [2 x double]* %921, i64 0, i64 %923
  %925 = load double, double* %924, align 8
  %926 = load i32, i32* %9, align 4
  %927 = call i32 @_Z1Xii(i32 %926, i32 0)
  %928 = sitofp i32 %927 to double
  %929 = fmul double %925, %928
  %930 = load double, double* %11, align 8
  %931 = fadd double %930, %929
  store double %931, double* %11, align 8
  br label %932

932:                                              ; preds = %917
  %933 = load i32, i32* %9, align 4
  %934 = add nsw i32 %933, 1
  store i32 %934, i32* %9, align 4
  br label %911

935:                                              ; preds = %911
  %936 = load i32, i32* %4, align 4
  %937 = sext i32 %936 to i64
  %938 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 2), i64 0, i64 %937
  %939 = load i32, i32* %938, align 4
  %940 = load i32, i32* %4, align 4
  %941 = sext i32 %940 to i64
  %942 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 3), i64 0, i64 %941
  store i32 %939, i32* %942, align 4
  %943 = load i32, i32* %4, align 4
  %944 = sext i32 %943 to i64
  %945 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 1), i64 0, i64 %944
  %946 = load i32, i32* %945, align 4
  %947 = load i32, i32* %4, align 4
  %948 = sext i32 %947 to i64
  %949 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 2), i64 0, i64 %948
  store i32 %946, i32* %949, align 4
  %950 = load i32, i32* %4, align 4
  %951 = sext i32 %950 to i64
  %952 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 0), i64 0, i64 %951
  %953 = load i32, i32* %952, align 4
  %954 = load i32, i32* %4, align 4
  %955 = sext i32 %954 to i64
  %956 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 1), i64 0, i64 %955
  store i32 %953, i32* %956, align 4
  %957 = load double, double* %11, align 8
  %958 = call double @llvm.floor.f64(double %957)
  %959 = fptosi double %958 to i32
  %960 = load i32, i32* %4, align 4
  %961 = sext i32 %960 to i64
  %962 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 0), i64 0, i64 %961
  store i32 %959, i32* %962, align 4
  %963 = load i32, i32* %4, align 4
  %964 = sext i32 %963 to i64
  %965 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %964
  %966 = load i32, i32* %965, align 4
  %967 = add nsw i32 %966, 1
  store i32 %967, i32* %965, align 4
  store i32 0, i32* %10, align 4
  %968 = load i32, i32* %10, align 4
  %969 = add nsw i32 %968, 1
  store i32 %969, i32* %10, align 4
  %970 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %971 = load i32, i32* %5, align 4
  %972 = call i32 @_Z4hashjjjjj(i32 %969, i32 %970, i32 %971, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %972, i32 -1)
  %973 = load i32, i32* %10, align 4
  %974 = add nsw i32 %973, 1
  store i32 %974, i32* %10, align 4
  %975 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %976 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %977 = load i32, i32* %5, align 4
  %978 = call i32 @_Z4hashjjjjj(i32 %974, i32 %975, i32 %976, i32 %977, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %978, i32 -1)
  %979 = load i32, i32* %10, align 4
  %980 = add nsw i32 %979, 1
  store i32 %980, i32* %10, align 4
  %981 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %982 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %983 = ashr i32 %982, 3
  %984 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %985 = load i32, i32* %5, align 4
  %986 = call i32 @_Z4hashjjjjj(i32 %980, i32 %981, i32 %983, i32 %984, i32 %985)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %986, i32 -1)
  %987 = load i32, i32* %10, align 4
  %988 = add nsw i32 %987, 1
  store i32 %988, i32* %10, align 4
  %989 = call i32 @_Z2s2i(i32 4)
  %990 = call i32 @_Z2s2i(i32 2)
  %991 = add nsw i32 %989, %990
  %992 = call i32 @_Z2s2i(i32 6)
  %993 = sub nsw i32 %991, %992
  %994 = and i32 %993, 255
  %995 = load i32, i32* %5, align 4
  %996 = call i32 @_Z4hashjjjjj(i32 %988, i32 %994, i32 %995, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %996, i32 -1)
  %997 = load i32, i32* %10, align 4
  %998 = add nsw i32 %997, 1
  store i32 %998, i32* %10, align 4
  %999 = load i32, i32* %4, align 4
  %1000 = sext i32 %999 to i64
  %1001 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 0), i64 0, i64 %1000
  %1002 = load i32, i32* %1001, align 4
  %1003 = and i32 %1002, 255
  %1004 = load i32, i32* %5, align 4
  %1005 = call i32 @_Z4hashjjjjj(i32 %998, i32 %1003, i32 %1004, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %1005, i32 -1)
  %1006 = load i32, i32* %10, align 4
  %1007 = add nsw i32 %1006, 1
  store i32 %1007, i32* %10, align 4
  %1008 = load i32, i32* %4, align 4
  %1009 = sext i32 %1008 to i64
  %1010 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 0), i64 0, i64 %1009
  %1011 = load i32, i32* %1010, align 4
  %1012 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1013 = call i32 @_Z2s2i(i32 %1012)
  %1014 = add nsw i32 %1011, %1013
  %1015 = load i32, i32* %4, align 4
  %1016 = sext i32 %1015 to i64
  %1017 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 1), i64 0, i64 %1016
  %1018 = load i32, i32* %1017, align 4
  %1019 = sub nsw i32 %1014, %1018
  %1020 = and i32 %1019, 255
  %1021 = load i32, i32* %5, align 4
  %1022 = call i32 @_Z4hashjjjjj(i32 %1007, i32 %1020, i32 %1021, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %1022, i32 -1)
  %1023 = load i32, i32* %10, align 4
  %1024 = add nsw i32 %1023, 1
  store i32 %1024, i32* %10, align 4
  %1025 = load i32, i32* %4, align 4
  %1026 = sext i32 %1025 to i64
  %1027 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 0), i64 0, i64 %1026
  %1028 = load i32, i32* %1027, align 4
  %1029 = and i32 %1028, 255
  %1030 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1031 = call i32 @_Z2s2i(i32 %1030)
  %1032 = load i32, i32* %4, align 4
  %1033 = sext i32 %1032 to i64
  %1034 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 1), i64 0, i64 %1033
  %1035 = load i32, i32* %1034, align 4
  %1036 = sub nsw i32 %1031, %1035
  %1037 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1038 = mul nsw i32 %1037, 2
  %1039 = call i32 @_Z2s2i(i32 %1038)
  %1040 = add nsw i32 %1036, %1039
  %1041 = load i32, i32* %4, align 4
  %1042 = sext i32 %1041 to i64
  %1043 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 2), i64 0, i64 %1042
  %1044 = load i32, i32* %1043, align 4
  %1045 = sub nsw i32 %1040, %1044
  %1046 = ashr i32 %1045, 1
  %1047 = and i32 %1046, 255
  %1048 = load i32, i32* %5, align 4
  %1049 = call i32 @_Z4hashjjjjj(i32 %1024, i32 %1029, i32 %1047, i32 %1048, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %1049, i32 -1)
  %1050 = load i32, i32* %10, align 4
  %1051 = add nsw i32 %1050, 1
  store i32 %1051, i32* %10, align 4
  %1052 = load i32, i32* %4, align 4
  %1053 = sext i32 %1052 to i64
  %1054 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 0), i64 0, i64 %1053
  %1055 = load i32, i32* %1054, align 4
  %1056 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1057 = call i32 @_Z2s2i(i32 %1056)
  %1058 = mul nsw i32 %1057, 2
  %1059 = add nsw i32 %1055, %1058
  %1060 = load i32, i32* %4, align 4
  %1061 = sext i32 %1060 to i64
  %1062 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 1), i64 0, i64 %1061
  %1063 = load i32, i32* %1062, align 4
  %1064 = mul nsw i32 %1063, 2
  %1065 = sub nsw i32 %1059, %1064
  %1066 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1067 = mul nsw i32 %1066, 2
  %1068 = call i32 @_Z2s2i(i32 %1067)
  %1069 = sub nsw i32 %1065, %1068
  %1070 = load i32, i32* %4, align 4
  %1071 = sext i32 %1070 to i64
  %1072 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 2), i64 0, i64 %1071
  %1073 = load i32, i32* %1072, align 4
  %1074 = add nsw i32 %1069, %1073
  %1075 = and i32 %1074, 255
  %1076 = load i32, i32* %5, align 4
  %1077 = call i32 @_Z4hashjjjjj(i32 %1051, i32 %1075, i32 %1076, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %1077, i32 -1)
  %1078 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1079 = call i32 @_Z2s2i(i32 %1078)
  %1080 = and i32 %1079, 511
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm1, i32 %1080)
  %1081 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1082 = call i32 @_Z2s2i(i32 %1081)
  %1083 = mul nsw i32 %1082, 2
  %1084 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1085 = mul nsw i32 %1084, 2
  %1086 = call i32 @_Z2s2i(i32 %1085)
  %1087 = sub nsw i32 %1083, %1086
  %1088 = and i32 %1087, 511
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm2, i32 %1088)
  %1089 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1090 = call i32 @_Z2s2i(i32 %1089)
  %1091 = mul nsw i32 %1090, 3
  %1092 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1093 = mul nsw i32 %1092, 2
  %1094 = call i32 @_Z2s2i(i32 %1093)
  %1095 = mul nsw i32 %1094, 3
  %1096 = sub nsw i32 %1091, %1095
  %1097 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1098 = mul nsw i32 %1097, 3
  %1099 = call i32 @_Z2s2i(i32 %1098)
  %1100 = add nsw i32 %1096, %1099
  %1101 = and i32 %1100, 511
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm3, i32 %1101)
  br label %1458

1102:                                             ; preds = %306
  %1103 = load i32, i32* %10, align 4
  %1104 = add nsw i32 %1103, 1
  store i32 %1104, i32* %10, align 4
  %1105 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %1106 = load i32, i32* %5, align 4
  %1107 = call i32 @_Z4hashjjjjj(i32 %1104, i32 %1105, i32 %1106, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %1107, i32 -1)
  %1108 = load i32, i32* %10, align 4
  %1109 = add nsw i32 %1108, 1
  store i32 %1109, i32* %10, align 4
  %1110 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %1111 = ashr i32 %1110, 7
  %1112 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %1113 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %1114 = ashr i32 %1113, 7
  %1115 = load i32, i32* %5, align 4
  %1116 = call i32 @_Z4hashjjjjj(i32 %1109, i32 %1111, i32 %1112, i32 %1114, i32 %1115)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %1116, i32 -1)
  %1117 = load i32, i32* %10, align 4
  %1118 = add nsw i32 %1117, 1
  store i32 %1118, i32* %10, align 4
  %1119 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1120 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1121 = mul nsw i32 %1120, 2
  %1122 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1123 = mul nsw i32 %1122, 3
  %1124 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1125 = mul nsw i32 %1124, 4
  %1126 = call i32 @_Z1ciiiii(i32 7, i32 %1119, i32 %1121, i32 %1123, i32 %1125)
  %1127 = load i32, i32* %5, align 4
  %1128 = call i32 @_Z4hashjjjjj(i32 %1118, i32 %1126, i32 %1127, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %1128, i32 -1)
  %1129 = load i32, i32* %10, align 4
  %1130 = add nsw i32 %1129, 1
  store i32 %1130, i32* %10, align 4
  %1131 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1132 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1133 = mul nsw i32 %1132, 2
  %1134 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1135 = mul nsw i32 %1134, 3
  %1136 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1137 = mul nsw i32 %1136, 4
  %1138 = call i32 @_Z1ciiiii(i32 5, i32 %1131, i32 %1133, i32 %1135, i32 %1137)
  %1139 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1140 = mul nsw i32 %1139, 5
  %1141 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1142 = mul nsw i32 %1141, 6
  %1143 = call i32 @_Z1ciiiii(i32 5, i32 %1140, i32 %1142, i32 0, i32 0)
  %1144 = load i32, i32* %5, align 4
  %1145 = call i32 @_Z4hashjjjjj(i32 %1130, i32 %1138, i32 %1143, i32 %1144, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %1145, i32 -1)
  %1146 = load i32, i32* %10, align 4
  %1147 = add nsw i32 %1146, 1
  store i32 %1147, i32* %10, align 4
  %1148 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1149 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1150 = mul nsw i32 %1149, 2
  %1151 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1152 = mul nsw i32 %1151, 3
  %1153 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1154 = mul nsw i32 %1153, 4
  %1155 = call i32 @_Z1ciiiii(i32 4, i32 %1148, i32 %1150, i32 %1152, i32 %1154)
  %1156 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1157 = mul nsw i32 %1156, 5
  %1158 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1159 = mul nsw i32 %1158, 6
  %1160 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1161 = mul nsw i32 %1160, 7
  %1162 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1163 = mul nsw i32 %1162, 8
  %1164 = call i32 @_Z1ciiiii(i32 3, i32 %1157, i32 %1159, i32 %1161, i32 %1163)
  %1165 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1166 = mul nsw i32 %1165, 9
  %1167 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1168 = mul nsw i32 %1167, 10
  %1169 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1170 = mul nsw i32 %1169, 11
  %1171 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1172 = mul nsw i32 %1171, 12
  %1173 = call i32 @_Z1ciiiii(i32 2, i32 %1166, i32 %1168, i32 %1170, i32 %1172)
  %1174 = load i32, i32* %5, align 4
  %1175 = call i32 @_Z4hashjjjjj(i32 %1147, i32 %1155, i32 %1164, i32 %1173, i32 %1174)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %1175, i32 -1)
  %1176 = load i32, i32* %10, align 4
  %1177 = add nsw i32 %1176, 1
  store i32 %1177, i32* %10, align 4
  %1178 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1179 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1180 = mul nsw i32 %1179, 2
  %1181 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1182 = mul nsw i32 %1181, 3
  %1183 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1184 = mul nsw i32 %1183, 4
  %1185 = call i32 @_Z1ciiiii(i32 2, i32 %1178, i32 %1180, i32 %1182, i32 %1184)
  %1186 = shl i32 %1185, 8
  %1187 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1188 = mul nsw i32 %1187, 5
  %1189 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1190 = mul nsw i32 %1189, 6
  %1191 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1192 = mul nsw i32 %1191, 7
  %1193 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1194 = mul nsw i32 %1193, 8
  %1195 = call i32 @_Z1ciiiii(i32 2, i32 %1188, i32 %1190, i32 %1192, i32 %1194)
  %1196 = or i32 %1186, %1195
  %1197 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1198 = mul nsw i32 %1197, 9
  %1199 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1200 = mul nsw i32 %1199, 10
  %1201 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1202 = mul nsw i32 %1201, 11
  %1203 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1204 = mul nsw i32 %1203, 12
  %1205 = call i32 @_Z1ciiiii(i32 2, i32 %1198, i32 %1200, i32 %1202, i32 %1204)
  %1206 = shl i32 %1205, 8
  %1207 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1208 = mul nsw i32 %1207, 13
  %1209 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1210 = mul nsw i32 %1209, 14
  %1211 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1212 = mul nsw i32 %1211, 15
  %1213 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1214 = mul nsw i32 %1213, 16
  %1215 = call i32 @_Z1ciiiii(i32 2, i32 %1208, i32 %1210, i32 %1212, i32 %1214)
  %1216 = or i32 %1206, %1215
  %1217 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1218 = mul nsw i32 %1217, 17
  %1219 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1220 = mul nsw i32 %1219, 18
  %1221 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1222 = mul nsw i32 %1221, 19
  %1223 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1224 = mul nsw i32 %1223, 20
  %1225 = call i32 @_Z1ciiiii(i32 2, i32 %1218, i32 %1220, i32 %1222, i32 %1224)
  %1226 = shl i32 %1225, 8
  %1227 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1228 = mul nsw i32 %1227, 21
  %1229 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1230 = mul nsw i32 %1229, 22
  %1231 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1232 = mul nsw i32 %1231, 23
  %1233 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1234 = mul nsw i32 %1233, 24
  %1235 = call i32 @_Z1ciiiii(i32 2, i32 %1228, i32 %1230, i32 %1232, i32 %1234)
  %1236 = or i32 %1226, %1235
  %1237 = load i32, i32* %5, align 4
  %1238 = call i32 @_Z4hashjjjjj(i32 %1177, i32 %1196, i32 %1216, i32 %1236, i32 %1237)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %1238, i32 -1)
  %1239 = load i32, i32* %10, align 4
  %1240 = add nsw i32 %1239, 1
  store i32 %1240, i32* %10, align 4
  %1241 = load i32, i32* %4, align 4
  %1242 = sext i32 %1241 to i64
  %1243 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 0), i64 0, i64 %1242
  %1244 = load i32, i32* %1243, align 4
  %1245 = ashr i32 %1244, 8
  %1246 = load i32, i32* %5, align 4
  %1247 = call i32 @_Z4hashjjjjj(i32 %1240, i32 %1245, i32 %1246, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %1247, i32 -1)
  %1248 = load i32, i32* %10, align 4
  %1249 = add nsw i32 %1248, 1
  store i32 %1249, i32* %10, align 4
  %1250 = load i32, i32* %4, align 4
  %1251 = sext i32 %1250 to i64
  %1252 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 0), i64 0, i64 %1251
  %1253 = load i32, i32* %1252, align 4
  %1254 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1255 = add nsw i32 %1254, 1
  %1256 = call i32 @_Z2s2i(i32 %1255)
  %1257 = add nsw i32 %1253, %1256
  %1258 = load i32, i32* %4, align 4
  %1259 = sext i32 %1258 to i64
  %1260 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 1), i64 0, i64 %1259
  %1261 = load i32, i32* %1260, align 4
  %1262 = sub nsw i32 %1257, %1261
  %1263 = ashr i32 %1262, 8
  %1264 = load i32, i32* %5, align 4
  %1265 = call i32 @_Z4hashjjjjj(i32 %1249, i32 %1263, i32 %1264, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %1265, i32 -1)
  %1266 = load i32, i32* %10, align 4
  %1267 = add nsw i32 %1266, 1
  store i32 %1267, i32* %10, align 4
  %1268 = load i32, i32* %4, align 4
  %1269 = sext i32 %1268 to i64
  %1270 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 0), i64 0, i64 %1269
  %1271 = load i32, i32* %1270, align 4
  %1272 = ashr i32 %1271, 8
  %1273 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1274 = add nsw i32 %1273, 1
  %1275 = call i32 @_Z2s2i(i32 %1274)
  %1276 = load i32, i32* %4, align 4
  %1277 = sext i32 %1276 to i64
  %1278 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 1), i64 0, i64 %1277
  %1279 = load i32, i32* %1278, align 4
  %1280 = sub nsw i32 %1275, %1279
  %1281 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1282 = mul nsw i32 %1281, 2
  %1283 = add nsw i32 %1282, 1
  %1284 = call i32 @_Z2s2i(i32 %1283)
  %1285 = add nsw i32 %1280, %1284
  %1286 = load i32, i32* %4, align 4
  %1287 = sext i32 %1286 to i64
  %1288 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 2), i64 0, i64 %1287
  %1289 = load i32, i32* %1288, align 4
  %1290 = sub nsw i32 %1285, %1289
  %1291 = ashr i32 %1290, 9
  %1292 = load i32, i32* %5, align 4
  %1293 = call i32 @_Z4hashjjjjj(i32 %1267, i32 %1272, i32 %1291, i32 %1292, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %1293, i32 -1)
  %1294 = load i32, i32* %10, align 4
  %1295 = add nsw i32 %1294, 1
  store i32 %1295, i32* %10, align 4
  %1296 = load i32, i32* %4, align 4
  %1297 = sext i32 %1296 to i64
  %1298 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 0), i64 0, i64 %1297
  %1299 = load i32, i32* %1298, align 4
  %1300 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1301 = add nsw i32 %1300, 1
  %1302 = call i32 @_Z2s2i(i32 %1301)
  %1303 = mul nsw i32 %1302, 2
  %1304 = add nsw i32 %1299, %1303
  %1305 = load i32, i32* %4, align 4
  %1306 = sext i32 %1305 to i64
  %1307 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 1), i64 0, i64 %1306
  %1308 = load i32, i32* %1307, align 4
  %1309 = mul nsw i32 %1308, 2
  %1310 = sub nsw i32 %1304, %1309
  %1311 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1312 = mul nsw i32 %1311, 2
  %1313 = add nsw i32 %1312, 1
  %1314 = call i32 @_Z2s2i(i32 %1313)
  %1315 = sub nsw i32 %1310, %1314
  %1316 = load i32, i32* %4, align 4
  %1317 = sext i32 %1316 to i64
  %1318 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 2), i64 0, i64 %1317
  %1319 = load i32, i32* %1318, align 4
  %1320 = add nsw i32 %1315, %1319
  %1321 = ashr i32 %1320, 8
  %1322 = load i32, i32* %5, align 4
  %1323 = call i32 @_Z4hashjjjjj(i32 %1295, i32 %1321, i32 %1322, i32 -1, i32 -1)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, i32 %1323, i32 -1)
  %1324 = call i32 @_Z2s2i(i32 5)
  %1325 = call i32 @_Z2s2i(i32 3)
  %1326 = add nsw i32 %1324, %1325
  %1327 = call i32 @_Z2s2i(i32 7)
  %1328 = sub nsw i32 %1326, %1327
  %1329 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %1330 = sub nsw i32 %1328, %1329
  %1331 = load i32, i32* %4, align 4
  %1332 = sext i32 %1331 to i64
  %1333 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 0), i64 0, i64 %1332
  %1334 = load i32, i32* %1333, align 4
  %1335 = add nsw i32 %1330, %1334
  %1336 = ashr i32 %1335, 9
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm1, i32 %1336)
  %1337 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1338 = add nsw i32 %1337, 1
  %1339 = call i32 @_Z2s2i(i32 %1338)
  %1340 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %1341 = sub nsw i32 %1339, %1340
  %1342 = load i32, i32* %4, align 4
  %1343 = sext i32 %1342 to i64
  %1344 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 0), i64 0, i64 %1343
  %1345 = load i32, i32* %1344, align 4
  %1346 = add nsw i32 %1341, %1345
  %1347 = ashr i32 %1346, 9
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm2, i32 %1347)
  %1348 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1349 = add nsw i32 %1348, 1
  %1350 = call i32 @_Z2s2i(i32 %1349)
  %1351 = mul nsw i32 %1350, 2
  %1352 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1353 = mul nsw i32 %1352, 2
  %1354 = add nsw i32 %1353, 1
  %1355 = call i32 @_Z2s2i(i32 %1354)
  %1356 = sub nsw i32 %1351, %1355
  %1357 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %1358 = sub nsw i32 %1356, %1357
  %1359 = load i32, i32* %4, align 4
  %1360 = sext i32 %1359 to i64
  %1361 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 0), i64 0, i64 %1360
  %1362 = load i32, i32* %1361, align 4
  %1363 = add nsw i32 %1358, %1362
  %1364 = ashr i32 %1363, 8
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm3, i32 %1364)
  %1365 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1366 = add nsw i32 %1365, 1
  %1367 = call i32 @_Z2s2i(i32 %1366)
  %1368 = mul nsw i32 %1367, 3
  %1369 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1370 = mul nsw i32 %1369, 2
  %1371 = add nsw i32 %1370, 1
  %1372 = call i32 @_Z2s2i(i32 %1371)
  %1373 = mul nsw i32 %1372, 3
  %1374 = sub nsw i32 %1368, %1373
  %1375 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1376 = mul nsw i32 %1375, 3
  %1377 = add nsw i32 %1376, 1
  %1378 = call i32 @_Z2s2i(i32 %1377)
  %1379 = add nsw i32 %1374, %1378
  %1380 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %1381 = sub nsw i32 %1379, %1380
  %1382 = ashr i32 %1381, 7
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm4, i32 %1382)
  %1383 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1384 = sub nsw i32 %1383, 1
  %1385 = call i32 @_Z2s2i(i32 %1384)
  %1386 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1387 = add nsw i32 %1386, 1
  %1388 = call i32 @_Z2s2i(i32 %1387)
  %1389 = add nsw i32 %1385, %1388
  %1390 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %1391 = sub nsw i32 %1389, %1390
  %1392 = load i32, i32* %4, align 4
  %1393 = sext i32 %1392 to i64
  %1394 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 0), i64 0, i64 %1393
  %1395 = load i32, i32* %1394, align 4
  %1396 = mul nsw i32 %1395, 2
  %1397 = add nsw i32 %1391, %1396
  %1398 = ashr i32 %1397, 10
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm5, i32 %1398)
  %1399 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1400 = add nsw i32 %1399, 1
  %1401 = call i32 @_Z2s2i(i32 %1400)
  %1402 = mul nsw i32 %1401, 4
  %1403 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1404 = mul nsw i32 %1403, 2
  %1405 = add nsw i32 %1404, 1
  %1406 = call i32 @_Z2s2i(i32 %1405)
  %1407 = mul nsw i32 %1406, 6
  %1408 = sub nsw i32 %1402, %1407
  %1409 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1410 = mul nsw i32 %1409, 3
  %1411 = add nsw i32 %1410, 1
  %1412 = call i32 @_Z2s2i(i32 %1411)
  %1413 = mul nsw i32 %1412, 4
  %1414 = add nsw i32 %1408, %1413
  %1415 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1416 = mul nsw i32 %1415, 4
  %1417 = add nsw i32 %1416, 1
  %1418 = call i32 @_Z2s2i(i32 %1417)
  %1419 = sub nsw i32 %1414, %1418
  %1420 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %1421 = sub nsw i32 %1419, %1420
  %1422 = ashr i32 %1421, 7
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm7, i32 %1422)
  %1423 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1424 = add nsw i32 %1423, 1
  %1425 = call i32 @_Z2s2i(i32 %1424)
  %1426 = mul nsw i32 %1425, 5
  %1427 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1428 = mul nsw i32 %1427, 2
  %1429 = add nsw i32 %1428, 1
  %1430 = call i32 @_Z2s2i(i32 %1429)
  %1431 = mul nsw i32 %1430, 10
  %1432 = sub nsw i32 %1426, %1431
  %1433 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1434 = mul nsw i32 %1433, 3
  %1435 = add nsw i32 %1434, 1
  %1436 = call i32 @_Z2s2i(i32 %1435)
  %1437 = mul nsw i32 %1436, 10
  %1438 = add nsw i32 %1432, %1437
  %1439 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1440 = mul nsw i32 %1439, 4
  %1441 = add nsw i32 %1440, 1
  %1442 = call i32 @_Z2s2i(i32 %1441)
  %1443 = mul nsw i32 %1442, 5
  %1444 = sub nsw i32 %1438, %1443
  %1445 = load i32, i32* @_ZZ8wavModelR5MixerE1w, align 4
  %1446 = mul nsw i32 %1445, 5
  %1447 = add nsw i32 %1446, 1
  %1448 = call i32 @_Z2s2i(i32 %1447)
  %1449 = add nsw i32 %1444, %1448
  %1450 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %1451 = sub nsw i32 %1449, %1450
  %1452 = load i32, i32* %4, align 4
  %1453 = sext i32 %1452 to i64
  %1454 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds ([4 x [2 x i32]], [4 x [2 x i32]]* @_ZZ8wavModelR5MixerE2pr, i64 0, i64 0), i64 0, i64 %1453
  %1455 = load i32, i32* %1454, align 4
  %1456 = add nsw i32 %1451, %1455
  %1457 = ashr i32 %1456, 9
  call void @_ZN25SmallStationaryContextMap3setEj(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm8, i32 %1457)
  br label %1458

1458:                                             ; preds = %1102, %935
  br label %1459

1459:                                             ; preds = %1458, %303
  %1460 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm1, %class.Mixer* dereferenceable(136) %1460, i32 7)
  %1461 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm2, %class.Mixer* dereferenceable(136) %1461, i32 7)
  %1462 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm3, %class.Mixer* dereferenceable(136) %1462, i32 7)
  %1463 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm4, %class.Mixer* dereferenceable(136) %1463, i32 7)
  %1464 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm5, %class.Mixer* dereferenceable(136) %1464, i32 7)
  %1465 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm6, %class.Mixer* dereferenceable(136) %1465, i32 7)
  %1466 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm7, %class.Mixer* dereferenceable(136) %1466, i32 7)
  %1467 = load %class.Mixer*, %class.Mixer** %3, align 8
  call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(%class.SmallStationaryContextMap* @_ZZ8wavModelR5MixerE4scm8, %class.Mixer* dereferenceable(136) %1467, i32 7)
  %1468 = load %class.Mixer*, %class.Mixer** %3, align 8
  %1469 = call i32 @_ZN10ContextMap3mixER5Mixer(%class.ContextMap* @_ZZ8wavModelR5MixerE2cm, %class.Mixer* dereferenceable(136) %1468)
  %1470 = load i32, i32* @_ZZ8wavModelR5MixerE8channels, align 4
  %1471 = shl i32 %1470, 8
  %1472 = load i32, i32* @_ZZ8wavModelR5MixerE4bits, align 4
  %1473 = or i32 %1471, %1472
  store i32 %1473, i32* %2, align 4
  br label %1474

1474:                                             ; preds = %1459, %302
  %1475 = load i32, i32* %2, align 4
  ret i32 %1475

1476:                                             ; preds = %254, %250, %246, %242, %238, %234, %230, %226, %222
  %1477 = load i8*, i8** %16, align 8
  %1478 = load i32, i32* %17, align 4
  %1479 = insertvalue { i8*, i32 } undef, i8* %1477, 0
  %1480 = insertvalue { i8*, i32 } %1479, i32 %1478, 1
  resume { i8*, i32 } %1480
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_Z1Xii(i32 %0, i32 %1) #0 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %6 = load i32, i32* @_ZL5wmode, align 4
  %7 = icmp eq i32 %6, 18
  br i1 %7, label %8, label %27

8:                                                ; preds = %2
  %9 = load i32, i32* %4, align 4
  %10 = load i32, i32* @_ZL1S, align 4
  %11 = icmp sle i32 %9, %10
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = load i32, i32* %4, align 4
  %14 = load i32, i32* %5, align 4
  %15 = add nsw i32 %13, %14
  %16 = shl i32 %15, 2
  %17 = call i32 @_Z2s2i(i32 %16)
  store i32 %17, i32* %3, align 4
  br label %63

18:                                               ; preds = %8
  %19 = load i32, i32* %4, align 4
  %20 = load i32, i32* %5, align 4
  %21 = add nsw i32 %19, %20
  %22 = load i32, i32* @_ZL1S, align 4
  %23 = sub nsw i32 %21, %22
  %24 = shl i32 %23, 2
  %25 = sub nsw i32 %24, 2
  %26 = call i32 @_Z2s2i(i32 %25)
  store i32 %26, i32* %3, align 4
  br label %63

27:                                               ; preds = %2
  %28 = load i32, i32* @_ZL5wmode, align 4
  %29 = icmp eq i32 %28, 17
  br i1 %29, label %30, label %36

30:                                               ; preds = %27
  %31 = load i32, i32* %4, align 4
  %32 = load i32, i32* %5, align 4
  %33 = add nsw i32 %31, %32
  %34 = shl i32 %33, 1
  %35 = call i32 @_Z2s2i(i32 %34)
  store i32 %35, i32* %3, align 4
  br label %63

36:                                               ; preds = %27
  %37 = load i32, i32* @_ZL5wmode, align 4
  %38 = icmp eq i32 %37, 10
  br i1 %38, label %39, label %58

39:                                               ; preds = %36
  %40 = load i32, i32* %4, align 4
  %41 = load i32, i32* @_ZL1S, align 4
  %42 = icmp sle i32 %40, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = load i32, i32* %4, align 4
  %45 = load i32, i32* %5, align 4
  %46 = add nsw i32 %44, %45
  %47 = shl i32 %46, 1
  %48 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %47)
  store i32 %48, i32* %3, align 4
  br label %63

49:                                               ; preds = %39
  %50 = load i32, i32* %4, align 4
  %51 = load i32, i32* %5, align 4
  %52 = add nsw i32 %50, %51
  %53 = load i32, i32* @_ZL1S, align 4
  %54 = sub nsw i32 %52, %53
  %55 = shl i32 %54, 1
  %56 = sub nsw i32 %55, 1
  %57 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %56)
  store i32 %57, i32* %3, align 4
  br label %63

58:                                               ; preds = %36
  %59 = load i32, i32* %4, align 4
  %60 = load i32, i32* %5, align 4
  %61 = add nsw i32 %59, %60
  %62 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %61)
  store i32 %62, i32* %3, align 4
  br label %63

63:                                               ; preds = %58, %49, %43, %30, %18, %12
  %64 = load i32, i32* %3, align 4
  ret i32 %64
}

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #7

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_Z2s2i(i32 %0) #0 comdat {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %3)
  %5 = load i32, i32* %2, align 4
  %6 = sub nsw i32 %5, 1
  %7 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %6)
  %8 = mul nsw i32 256, %7
  %9 = add nsw i32 %4, %8
  %10 = trunc i32 %9 to i16
  %11 = sext i16 %10 to i32
  ret i32 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_Z1ciiiii(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) #0 comdat {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %12 = load i32, i32* %7, align 4
  %13 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %12)
  %14 = load i32, i32* %6, align 4
  %15 = sub nsw i32 8, %14
  %16 = ashr i32 %13, %15
  store i32 %16, i32* %11, align 4
  %17 = load i32, i32* %8, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %29

19:                                               ; preds = %5
  %20 = load i32, i32* %11, align 4
  %21 = load i32, i32* %6, align 4
  %22 = shl i32 %20, %21
  %23 = load i32, i32* %8, align 4
  %24 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %23)
  %25 = load i32, i32* %6, align 4
  %26 = sub nsw i32 8, %25
  %27 = ashr i32 %24, %26
  %28 = or i32 %22, %27
  store i32 %28, i32* %11, align 4
  br label %29

29:                                               ; preds = %19, %5
  %30 = load i32, i32* %9, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %42

32:                                               ; preds = %29
  %33 = load i32, i32* %11, align 4
  %34 = load i32, i32* %6, align 4
  %35 = shl i32 %33, %34
  %36 = load i32, i32* %9, align 4
  %37 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %36)
  %38 = load i32, i32* %6, align 4
  %39 = sub nsw i32 8, %38
  %40 = ashr i32 %37, %39
  %41 = or i32 %35, %40
  store i32 %41, i32* %11, align 4
  br label %42

42:                                               ; preds = %32, %29
  %43 = load i32, i32* %10, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %55

45:                                               ; preds = %42
  %46 = load i32, i32* %11, align 4
  %47 = load i32, i32* %6, align 4
  %48 = shl i32 %46, %47
  %49 = load i32, i32* %10, align 4
  %50 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %49)
  %51 = load i32, i32* %6, align 4
  %52 = sub nsw i32 8, %51
  %53 = ashr i32 %50, %52
  %54 = or i32 %48, %53
  store i32 %54, i32* %11, align 4
  br label %55

55:                                               ; preds = %45, %42
  %56 = load i32, i32* %11, align 4
  ret i32 %56
}

; Function Attrs: noinline uwtable
define dso_local i32 @_Z6execxtii(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %8 = load i32, i32* %3, align 4
  %9 = add nsw i32 %8, 2
  %10 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %9)
  %11 = icmp eq i32 %10, 15
  %12 = zext i1 %11 to i32
  %13 = load i32, i32* %3, align 4
  %14 = add nsw i32 %13, 2
  %15 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %14)
  %16 = icmp eq i32 %15, 102
  %17 = zext i1 %16 to i32
  %18 = mul nsw i32 2, %17
  %19 = add nsw i32 %12, %18
  %20 = load i32, i32* %3, align 4
  %21 = add nsw i32 %20, 2
  %22 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %21)
  %23 = icmp eq i32 %22, 103
  %24 = zext i1 %23 to i32
  %25 = mul nsw i32 3, %24
  %26 = add nsw i32 %19, %25
  %27 = load i32, i32* %3, align 4
  %28 = add nsw i32 %27, 3
  %29 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %28)
  %30 = icmp eq i32 %29, 15
  %31 = zext i1 %30 to i32
  %32 = mul nsw i32 4, %31
  %33 = add nsw i32 %26, %32
  %34 = load i32, i32* %3, align 4
  %35 = add nsw i32 %34, 3
  %36 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %35)
  %37 = icmp eq i32 %36, 102
  %38 = zext i1 %37 to i32
  %39 = mul nsw i32 8, %38
  %40 = add nsw i32 %33, %39
  %41 = load i32, i32* %3, align 4
  %42 = add nsw i32 %41, 3
  %43 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %42)
  %44 = icmp eq i32 %43, 103
  %45 = zext i1 %44 to i32
  %46 = mul nsw i32 12, %45
  %47 = add nsw i32 %40, %46
  store i32 %47, i32* %5, align 4
  %48 = load i32, i32* %3, align 4
  %49 = add nsw i32 %48, 1
  %50 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %49)
  store i32 %50, i32* %6, align 4
  %51 = load i32, i32* %3, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %2
  %54 = load i32, i32* %3, align 4
  %55 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %54)
  %56 = and i32 %55, 199
  br label %58

57:                                               ; preds = %2
  br label %58

58:                                               ; preds = %57, %53
  %59 = phi i32 [ %56, %53 ], [ 0, %57 ]
  store i32 %59, i32* %7, align 4
  %60 = load i32, i32* %5, align 4
  %61 = load i32, i32* %6, align 4
  %62 = shl i32 %61, 4
  %63 = or i32 %60, %62
  %64 = load i32, i32* %7, align 4
  %65 = shl i32 %64, 12
  %66 = or i32 %63, %65
  %67 = load i32, i32* %4, align 4
  %68 = shl i32 %67, 20
  %69 = or i32 %66, %68
  ret i32 %69
}

; Function Attrs: noinline uwtable
define dso_local void @_Z8exeModelR5Mixer(%class.Mixer* dereferenceable(136) %0) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Mixer*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*
  %5 = alloca i32
  %6 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %2, align 8
  store i32 12, i32* %3, align 4
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZ8exeModelR5MixerE2cm to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %1
  %10 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8exeModelR5MixerE2cm) #2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %9
  %13 = load i32, i32* @level, align 4
  %14 = shl i32 65536, %13
  invoke void @_ZN10ContextMapC1Eii(%class.ContextMap* @_ZZ8exeModelR5MixerE2cm, i32 %14, i32 12)
          to label %15 unwind label %35

15:                                               ; preds = %12
  %16 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.ContextMap*)* @_ZN10ContextMapD1Ev to void (i8*)*), i8* bitcast (%class.ContextMap* @_ZZ8exeModelR5MixerE2cm to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8exeModelR5MixerE2cm) #2
  br label %17

17:                                               ; preds = %15, %9, %1
  %18 = load i32, i32* @bpos, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %40, label %20

20:                                               ; preds = %17
  store i32 0, i32* %6, align 4
  br label %21

21:                                               ; preds = %32, %20
  %22 = load i32, i32* %6, align 4
  %23 = icmp slt i32 %22, 12
  br i1 %23, label %24, label %39

24:                                               ; preds = %21
  %25 = load i32, i32* %6, align 4
  %26 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %27 = load i32, i32* %6, align 4
  %28 = icmp sgt i32 %27, 4
  %29 = zext i1 %28 to i32
  %30 = mul nsw i32 %26, %29
  %31 = call i32 @_Z6execxtii(i32 %25, i32 %30)
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ8exeModelR5MixerE2cm, i32 %31, i32 -1)
  br label %32

32:                                               ; preds = %24
  %33 = load i32, i32* %6, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %6, align 4
  br label %21

35:                                               ; preds = %12
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  store i8* %37, i8** %4, align 8
  %38 = extractvalue { i8*, i32 } %36, 1
  store i32 %38, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8exeModelR5MixerE2cm) #2
  br label %43

39:                                               ; preds = %21
  br label %40

40:                                               ; preds = %39, %17
  %41 = load %class.Mixer*, %class.Mixer** %2, align 8
  %42 = call i32 @_ZN10ContextMap3mixER5Mixer(%class.ContextMap* @_ZZ8exeModelR5MixerE2cm, %class.Mixer* dereferenceable(136) %41)
  ret void

43:                                               ; preds = %35
  %44 = load i8*, i8** %4, align 8
  %45 = load i32, i32* %5, align 4
  %46 = insertvalue { i8*, i32 } undef, i8* %44, 0
  %47 = insertvalue { i8*, i32 } %46, i32 %45, 1
  resume { i8*, i32 } %47
}

; Function Attrs: noinline uwtable
define dso_local void @_Z13indirectModelR5Mixer(%class.Mixer* dereferenceable(136) %0) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Mixer*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %2, align 8
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZ13indirectModelR5MixerE2cm to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %20, !prof !2

12:                                               ; preds = %1
  %13 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ13indirectModelR5MixerE2cm) #2
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %12
  %16 = load i32, i32* @level, align 4
  %17 = shl i32 65536, %16
  invoke void @_ZN10ContextMapC1Eii(%class.ContextMap* @_ZZ13indirectModelR5MixerE2cm, i32 %17, i32 6)
          to label %18 unwind label %76

18:                                               ; preds = %15
  %19 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.ContextMap*)* @_ZN10ContextMapD1Ev to void (i8*)*), i8* bitcast (%class.ContextMap* @_ZZ13indirectModelR5MixerE2cm to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ13indirectModelR5MixerE2cm) #2
  br label %20

20:                                               ; preds = %18, %12, %1
  %21 = load i32, i32* @bpos, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %80, label %23

23:                                               ; preds = %20
  %24 = load i32, i32* @c4, align 4
  %25 = and i32 %24, 65535
  store i32 %25, i32* %5, align 4
  %26 = load i32, i32* %5, align 4
  %27 = and i32 %26, 255
  store i32 %27, i32* %6, align 4
  %28 = load i32, i32* %5, align 4
  %29 = lshr i32 %28, 8
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ13indirectModelR5MixerE2t1, i64 0, i64 %30
  store i32* %31, i32** %7, align 8
  %32 = load i32*, i32** %7, align 8
  %33 = load i32, i32* %32, align 4
  %34 = shl i32 %33, 8
  %35 = load i32, i32* %6, align 4
  %36 = or i32 %34, %35
  %37 = load i32*, i32** %7, align 8
  store i32 %36, i32* %37, align 4
  %38 = load i32, i32* @c4, align 4
  %39 = lshr i32 %38, 8
  %40 = and i32 %39, 65535
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds [65536 x i16], [65536 x i16]* @_ZZ13indirectModelR5MixerE2t2, i64 0, i64 %41
  store i16* %42, i16** %8, align 8
  %43 = load i16*, i16** %8, align 8
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = shl i32 %45, 8
  %47 = load i32, i32* %6, align 4
  %48 = or i32 %46, %47
  %49 = trunc i32 %48 to i16
  %50 = load i16*, i16** %8, align 8
  store i16 %49, i16* %50, align 2
  %51 = load i32, i32* %6, align 4
  %52 = load i32, i32* %6, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZZ13indirectModelR5MixerE2t1, i64 0, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = shl i32 %55, 8
  %57 = or i32 %51, %56
  store i32 %57, i32* %9, align 4
  %58 = load i32, i32* %9, align 4
  %59 = and i32 %58, 65535
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ13indirectModelR5MixerE2cm, i32 %59, i32 -1)
  %60 = load i32, i32* %9, align 4
  %61 = and i32 %60, 16777215
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ13indirectModelR5MixerE2cm, i32 %61, i32 -1)
  %62 = load i32, i32* %9, align 4
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ13indirectModelR5MixerE2cm, i32 %62, i32 -1)
  %63 = load i32, i32* %9, align 4
  %64 = and i32 %63, 65280
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ13indirectModelR5MixerE2cm, i32 %64, i32 -1)
  %65 = load i32, i32* %5, align 4
  %66 = load i32, i32* %5, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds [65536 x i16], [65536 x i16]* @_ZZ13indirectModelR5MixerE2t2, i64 0, i64 %67
  %69 = load i16, i16* %68, align 2
  %70 = zext i16 %69 to i32
  %71 = shl i32 %70, 16
  %72 = or i32 %65, %71
  store i32 %72, i32* %9, align 4
  %73 = load i32, i32* %9, align 4
  %74 = and i32 %73, 16777215
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ13indirectModelR5MixerE2cm, i32 %74, i32 -1)
  %75 = load i32, i32* %9, align 4
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ13indirectModelR5MixerE2cm, i32 %75, i32 -1)
  br label %80

76:                                               ; preds = %15
  %77 = landingpad { i8*, i32 }
          cleanup
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %3, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ13indirectModelR5MixerE2cm) #2
  br label %83

80:                                               ; preds = %23, %20
  %81 = load %class.Mixer*, %class.Mixer** %2, align 8
  %82 = call i32 @_ZN10ContextMap3mixER5Mixer(%class.ContextMap* @_ZZ13indirectModelR5MixerE2cm, %class.Mixer* dereferenceable(136) %81)
  ret void

83:                                               ; preds = %76
  %84 = load i8*, i8** %3, align 8
  %85 = load i32, i32* %4, align 4
  %86 = insertvalue { i8*, i32 } undef, i8* %84, 0
  %87 = insertvalue { i8*, i32 } %86, i32 %85, 1
  resume { i8*, i32 } %87
}

; Function Attrs: noinline uwtable
define dso_local void @_Z8dmcModelR5Mixer(%class.Mixer* dereferenceable(136) %0) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Mixer*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %class.Mixer* %0, %class.Mixer** %2, align 8
  %15 = load atomic i8, i8* bitcast (i64* @_ZGVZ8dmcModelR5MixerE1t to i8*) acquire, align 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %26, !prof !2

17:                                               ; preds = %1
  %18 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8dmcModelR5MixerE1t) #2
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %17
  %21 = load i32, i32* @level, align 4
  %22 = shl i32 65536, %21
  %23 = mul nsw i32 %22, 2
  invoke void @_ZN5ArrayI7DMCNodeLi0EEC2Ei(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %23)
          to label %24 unwind label %211

24:                                               ; preds = %20
  %25 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Array.9*)* @_ZN5ArrayI7DMCNodeLi0EED2Ev to void (i8*)*), i8* bitcast (%class.Array.9* @_ZZ8dmcModelR5MixerE1t to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8dmcModelR5MixerE1t) #2
  br label %26

26:                                               ; preds = %24, %17, %1
  %27 = load atomic i8, i8* bitcast (i64* @_ZGVZ8dmcModelR5MixerE2sm to i8*) acquire, align 8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %35, !prof !2

29:                                               ; preds = %26
  %30 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ8dmcModelR5MixerE2sm) #2
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  invoke void @_ZN8StateMapC1Ei(%class.StateMap* @_ZZ8dmcModelR5MixerE2sm, i32 256)
          to label %33 unwind label %215

33:                                               ; preds = %32
  %34 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.StateMap*)* @_ZN8StateMapD2Ev to void (i8*)*), i8* bitcast (%class.StateMap* @_ZZ8dmcModelR5MixerE2sm to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ8dmcModelR5MixerE2sm) #2
  br label %35

35:                                               ; preds = %33, %29, %26
  %36 = load i32, i32* @_ZZ8dmcModelR5MixerE3top, align 4
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %228

38:                                               ; preds = %35
  %39 = load i32, i32* @_ZZ8dmcModelR5MixerE3top, align 4
  %40 = call i32 @_ZNK5ArrayI7DMCNodeLi0EE4sizeEv(%class.Array.9* @_ZZ8dmcModelR5MixerE1t)
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %42, label %228

42:                                               ; preds = %38
  %43 = load i32, i32* @_ZZ8dmcModelR5MixerE4curr, align 4
  %44 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %43)
  %45 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %44, i32 0, i32 0
  %46 = load i32, i32* @y, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [2 x i32], [2 x i32]* %45, i64 0, i64 %47
  %49 = load i32, i32* %48, align 4
  store i32 %49, i32* %5, align 4
  %50 = load i32, i32* @y, align 4
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %60

52:                                               ; preds = %42
  %53 = load i32, i32* @_ZZ8dmcModelR5MixerE4curr, align 4
  %54 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %53)
  %55 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %54, i32 0, i32 2
  %56 = bitcast [3 x i8]* %55 to i24*
  %57 = load i24, i24* %56, align 1
  %58 = lshr i24 %57, 12
  %59 = zext i24 %58 to i32
  br label %68

60:                                               ; preds = %42
  %61 = load i32, i32* @_ZZ8dmcModelR5MixerE4curr, align 4
  %62 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %61)
  %63 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %62, i32 0, i32 2
  %64 = bitcast [3 x i8]* %63 to i24*
  %65 = load i24, i24* %64, align 1
  %66 = and i24 %65, 4095
  %67 = zext i24 %66 to i32
  br label %68

68:                                               ; preds = %60, %52
  %69 = phi i32 [ %59, %52 ], [ %67, %60 ]
  store i32 %69, i32* %6, align 4
  %70 = load i32, i32* %5, align 4
  %71 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %70)
  %72 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %71, i32 0, i32 2
  %73 = bitcast [3 x i8]* %72 to i24*
  %74 = load i24, i24* %73, align 1
  %75 = and i24 %74, 4095
  %76 = zext i24 %75 to i32
  %77 = load i32, i32* %5, align 4
  %78 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %77)
  %79 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %78, i32 0, i32 2
  %80 = bitcast [3 x i8]* %79 to i24*
  %81 = load i24, i24* %80, align 1
  %82 = lshr i24 %81, 12
  %83 = zext i24 %82 to i32
  %84 = add nsw i32 %76, %83
  store i32 %84, i32* %7, align 4
  %85 = load i32, i32* %6, align 4
  %86 = load i32, i32* @_ZZ8dmcModelR5MixerE9threshold, align 4
  %87 = mul nsw i32 %86, 2
  %88 = icmp sge i32 %85, %87
  br i1 %88, label %89, label %227

89:                                               ; preds = %68
  %90 = load i32, i32* %7, align 4
  %91 = load i32, i32* %6, align 4
  %92 = sub nsw i32 %90, %91
  %93 = load i32, i32* @_ZZ8dmcModelR5MixerE9threshold, align 4
  %94 = mul nsw i32 %93, 3
  %95 = icmp sge i32 %92, %94
  br i1 %95, label %96, label %227

96:                                               ; preds = %89
  %97 = load i32, i32* %6, align 4
  %98 = mul nsw i32 %97, 4096
  %99 = load i32, i32* %7, align 4
  %100 = sdiv i32 %98, %99
  store i32 %100, i32* %8, align 4
  %101 = load i32, i32* %5, align 4
  %102 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %101)
  %103 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %102, i32 0, i32 2
  %104 = bitcast [3 x i8]* %103 to i24*
  %105 = load i24, i24* %104, align 1
  %106 = and i24 %105, 4095
  %107 = zext i24 %106 to i32
  %108 = load i32, i32* %8, align 4
  %109 = mul nsw i32 %107, %108
  %110 = ashr i32 %109, 12
  %111 = load i32, i32* @_ZZ8dmcModelR5MixerE3top, align 4
  %112 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %111)
  %113 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %112, i32 0, i32 2
  %114 = bitcast [3 x i8]* %113 to i24*
  %115 = trunc i32 %110 to i24
  %116 = load i24, i24* %114, align 1
  %117 = and i24 %115, 4095
  %118 = and i24 %116, -4096
  %119 = or i24 %118, %117
  store i24 %119, i24* %114, align 1
  %120 = zext i24 %117 to i32
  %121 = load i32, i32* %5, align 4
  %122 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %121)
  %123 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %122, i32 0, i32 2
  %124 = bitcast [3 x i8]* %123 to i24*
  %125 = load i24, i24* %124, align 1
  %126 = and i24 %125, 4095
  %127 = zext i24 %126 to i32
  %128 = sub nsw i32 %127, %120
  %129 = trunc i32 %128 to i24
  %130 = load i24, i24* %124, align 1
  %131 = and i24 %129, 4095
  %132 = and i24 %130, -4096
  %133 = or i24 %132, %131
  store i24 %133, i24* %124, align 1
  %134 = zext i24 %131 to i32
  %135 = load i32, i32* %5, align 4
  %136 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %135)
  %137 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %136, i32 0, i32 2
  %138 = bitcast [3 x i8]* %137 to i24*
  %139 = load i24, i24* %138, align 1
  %140 = lshr i24 %139, 12
  %141 = zext i24 %140 to i32
  %142 = load i32, i32* %8, align 4
  %143 = mul nsw i32 %141, %142
  %144 = ashr i32 %143, 12
  %145 = load i32, i32* @_ZZ8dmcModelR5MixerE3top, align 4
  %146 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %145)
  %147 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %146, i32 0, i32 2
  %148 = bitcast [3 x i8]* %147 to i24*
  %149 = trunc i32 %144 to i24
  %150 = load i24, i24* %148, align 1
  %151 = and i24 %149, 4095
  %152 = shl i24 %151, 12
  %153 = and i24 %150, 4095
  %154 = or i24 %153, %152
  store i24 %154, i24* %148, align 1
  %155 = zext i24 %151 to i32
  %156 = load i32, i32* %5, align 4
  %157 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %156)
  %158 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %157, i32 0, i32 2
  %159 = bitcast [3 x i8]* %158 to i24*
  %160 = load i24, i24* %159, align 1
  %161 = lshr i24 %160, 12
  %162 = zext i24 %161 to i32
  %163 = sub nsw i32 %162, %155
  %164 = trunc i32 %163 to i24
  %165 = load i24, i24* %159, align 1
  %166 = and i24 %164, 4095
  %167 = shl i24 %166, 12
  %168 = and i24 %165, 4095
  %169 = or i24 %168, %167
  store i24 %169, i24* %159, align 1
  %170 = zext i24 %166 to i32
  %171 = load i32, i32* %5, align 4
  %172 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %171)
  %173 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %172, i32 0, i32 0
  %174 = getelementptr inbounds [2 x i32], [2 x i32]* %173, i64 0, i64 0
  %175 = load i32, i32* %174, align 4
  %176 = load i32, i32* @_ZZ8dmcModelR5MixerE3top, align 4
  %177 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %176)
  %178 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %177, i32 0, i32 0
  %179 = getelementptr inbounds [2 x i32], [2 x i32]* %178, i64 0, i64 0
  store i32 %175, i32* %179, align 4
  %180 = load i32, i32* %5, align 4
  %181 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %180)
  %182 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %181, i32 0, i32 0
  %183 = getelementptr inbounds [2 x i32], [2 x i32]* %182, i64 0, i64 1
  %184 = load i32, i32* %183, align 4
  %185 = load i32, i32* @_ZZ8dmcModelR5MixerE3top, align 4
  %186 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %185)
  %187 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %186, i32 0, i32 0
  %188 = getelementptr inbounds [2 x i32], [2 x i32]* %187, i64 0, i64 1
  store i32 %184, i32* %188, align 4
  %189 = load i32, i32* %5, align 4
  %190 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %189)
  %191 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %190, i32 0, i32 1
  %192 = load i8, i8* %191, align 4
  %193 = load i32, i32* @_ZZ8dmcModelR5MixerE3top, align 4
  %194 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %193)
  %195 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %194, i32 0, i32 1
  store i8 %192, i8* %195, align 4
  %196 = load i32, i32* @_ZZ8dmcModelR5MixerE3top, align 4
  %197 = load i32, i32* @_ZZ8dmcModelR5MixerE4curr, align 4
  %198 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %197)
  %199 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %198, i32 0, i32 0
  %200 = load i32, i32* @y, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [2 x i32], [2 x i32]* %199, i64 0, i64 %201
  store i32 %196, i32* %202, align 4
  %203 = load i32, i32* @_ZZ8dmcModelR5MixerE3top, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* @_ZZ8dmcModelR5MixerE3top, align 4
  %205 = load i32, i32* @_ZZ8dmcModelR5MixerE3top, align 4
  %206 = load i32, i32* @level, align 4
  %207 = shl i32 65536, %206
  %208 = mul nsw i32 %207, 2
  %209 = icmp eq i32 %205, %208
  br i1 %209, label %210, label %219

210:                                              ; preds = %96
  store i32 512, i32* @_ZZ8dmcModelR5MixerE9threshold, align 4
  br label %219

211:                                              ; preds = %20
  %212 = landingpad { i8*, i32 }
          cleanup
  %213 = extractvalue { i8*, i32 } %212, 0
  store i8* %213, i8** %3, align 8
  %214 = extractvalue { i8*, i32 } %212, 1
  store i32 %214, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8dmcModelR5MixerE1t) #2
  br label %436

215:                                              ; preds = %32
  %216 = landingpad { i8*, i32 }
          cleanup
  %217 = extractvalue { i8*, i32 } %216, 0
  store i8* %217, i8** %3, align 8
  %218 = extractvalue { i8*, i32 } %216, 1
  store i32 %218, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ8dmcModelR5MixerE2sm) #2
  br label %436

219:                                              ; preds = %210, %96
  %220 = load i32, i32* @_ZZ8dmcModelR5MixerE3top, align 4
  %221 = load i32, i32* @level, align 4
  %222 = shl i32 65536, %221
  %223 = mul nsw i32 %222, 3
  %224 = icmp eq i32 %220, %223
  br i1 %224, label %225, label %226

225:                                              ; preds = %219
  store i32 768, i32* @_ZZ8dmcModelR5MixerE9threshold, align 4
  br label %226

226:                                              ; preds = %225, %219
  br label %227

227:                                              ; preds = %226, %89, %68
  br label %228

228:                                              ; preds = %227, %38, %35
  %229 = load i32, i32* @_ZZ8dmcModelR5MixerE3top, align 4
  %230 = call i32 @_ZNK5ArrayI7DMCNodeLi0EE4sizeEv(%class.Array.9* @_ZZ8dmcModelR5MixerE1t)
  %231 = icmp eq i32 %229, %230
  br i1 %231, label %232, label %236

232:                                              ; preds = %228
  %233 = load i32, i32* @bpos, align 4
  %234 = icmp eq i32 %233, 1
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  store i32 0, i32* @_ZZ8dmcModelR5MixerE3top, align 4
  br label %236

236:                                              ; preds = %235, %232, %228
  %237 = load i32, i32* @_ZZ8dmcModelR5MixerE3top, align 4
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %327

239:                                              ; preds = %236
  store i32 0, i32* %9, align 4
  br label %240

240:                                              ; preds = %323, %239
  %241 = load i32, i32* %9, align 4
  %242 = icmp slt i32 %241, 256
  br i1 %242, label %243, label %326

243:                                              ; preds = %240
  store i32 0, i32* %10, align 4
  br label %244

244:                                              ; preds = %319, %243
  %245 = load i32, i32* %10, align 4
  %246 = icmp slt i32 %245, 256
  br i1 %246, label %247, label %322

247:                                              ; preds = %244
  %248 = load i32, i32* %9, align 4
  %249 = icmp slt i32 %248, 127
  br i1 %249, label %250, label %277

250:                                              ; preds = %247
  %251 = load i32, i32* %10, align 4
  %252 = mul nsw i32 %251, 256
  %253 = load i32, i32* %9, align 4
  %254 = mul nsw i32 %253, 2
  %255 = add nsw i32 %252, %254
  %256 = add nsw i32 %255, 1
  %257 = load i32, i32* %10, align 4
  %258 = mul nsw i32 %257, 256
  %259 = load i32, i32* %9, align 4
  %260 = add nsw i32 %258, %259
  %261 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %260)
  %262 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %261, i32 0, i32 0
  %263 = getelementptr inbounds [2 x i32], [2 x i32]* %262, i64 0, i64 0
  store i32 %256, i32* %263, align 4
  %264 = load i32, i32* %10, align 4
  %265 = mul nsw i32 %264, 256
  %266 = load i32, i32* %9, align 4
  %267 = mul nsw i32 %266, 2
  %268 = add nsw i32 %265, %267
  %269 = add nsw i32 %268, 2
  %270 = load i32, i32* %10, align 4
  %271 = mul nsw i32 %270, 256
  %272 = load i32, i32* %9, align 4
  %273 = add nsw i32 %271, %272
  %274 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %273)
  %275 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %274, i32 0, i32 0
  %276 = getelementptr inbounds [2 x i32], [2 x i32]* %275, i64 0, i64 1
  store i32 %269, i32* %276, align 4
  br label %298

277:                                              ; preds = %247
  %278 = load i32, i32* %9, align 4
  %279 = sub nsw i32 %278, 127
  %280 = mul nsw i32 %279, 256
  %281 = load i32, i32* %10, align 4
  %282 = mul nsw i32 %281, 256
  %283 = load i32, i32* %9, align 4
  %284 = add nsw i32 %282, %283
  %285 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %284)
  %286 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %285, i32 0, i32 0
  %287 = getelementptr inbounds [2 x i32], [2 x i32]* %286, i64 0, i64 0
  store i32 %280, i32* %287, align 4
  %288 = load i32, i32* %9, align 4
  %289 = add nsw i32 %288, 1
  %290 = mul nsw i32 %289, 256
  %291 = load i32, i32* %10, align 4
  %292 = mul nsw i32 %291, 256
  %293 = load i32, i32* %9, align 4
  %294 = add nsw i32 %292, %293
  %295 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %294)
  %296 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %295, i32 0, i32 0
  %297 = getelementptr inbounds [2 x i32], [2 x i32]* %296, i64 0, i64 1
  store i32 %290, i32* %297, align 4
  br label %298

298:                                              ; preds = %277, %250
  %299 = load i32, i32* %10, align 4
  %300 = mul nsw i32 %299, 256
  %301 = load i32, i32* %9, align 4
  %302 = add nsw i32 %300, %301
  %303 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %302)
  %304 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %303, i32 0, i32 2
  %305 = bitcast [3 x i8]* %304 to i24*
  %306 = load i24, i24* %305, align 1
  %307 = and i24 %306, -4096
  %308 = or i24 %307, 128
  store i24 %308, i24* %305, align 1
  %309 = load i32, i32* %10, align 4
  %310 = mul nsw i32 %309, 256
  %311 = load i32, i32* %9, align 4
  %312 = add nsw i32 %310, %311
  %313 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %312)
  %314 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %313, i32 0, i32 2
  %315 = bitcast [3 x i8]* %314 to i24*
  %316 = load i24, i24* %315, align 1
  %317 = and i24 %316, 4095
  %318 = or i24 %317, 524288
  store i24 %318, i24* %315, align 1
  br label %319

319:                                              ; preds = %298
  %320 = load i32, i32* %10, align 4
  %321 = add nsw i32 %320, 1
  store i32 %321, i32* %10, align 4
  br label %244

322:                                              ; preds = %244
  br label %323

323:                                              ; preds = %322
  %324 = load i32, i32* %9, align 4
  %325 = add nsw i32 %324, 1
  store i32 %325, i32* %9, align 4
  br label %240

326:                                              ; preds = %240
  store i32 65536, i32* @_ZZ8dmcModelR5MixerE3top, align 4
  store i32 0, i32* @_ZZ8dmcModelR5MixerE4curr, align 4
  store i32 256, i32* @_ZZ8dmcModelR5MixerE9threshold, align 4
  br label %327

327:                                              ; preds = %326, %236
  %328 = load i32, i32* @y, align 4
  %329 = icmp ne i32 %328, 0
  br i1 %329, label %330, label %356

330:                                              ; preds = %327
  %331 = load i32, i32* @_ZZ8dmcModelR5MixerE4curr, align 4
  %332 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %331)
  %333 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %332, i32 0, i32 2
  %334 = bitcast [3 x i8]* %333 to i24*
  %335 = load i24, i24* %334, align 1
  %336 = lshr i24 %335, 12
  %337 = zext i24 %336 to i32
  %338 = icmp slt i32 %337, 3800
  br i1 %338, label %339, label %355

339:                                              ; preds = %330
  %340 = load i32, i32* @_ZZ8dmcModelR5MixerE4curr, align 4
  %341 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %340)
  %342 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %341, i32 0, i32 2
  %343 = bitcast [3 x i8]* %342 to i24*
  %344 = load i24, i24* %343, align 1
  %345 = lshr i24 %344, 12
  %346 = zext i24 %345 to i32
  %347 = add nsw i32 %346, 256
  %348 = trunc i32 %347 to i24
  %349 = load i24, i24* %343, align 1
  %350 = and i24 %348, 4095
  %351 = shl i24 %350, 12
  %352 = and i24 %349, 4095
  %353 = or i24 %352, %351
  store i24 %353, i24* %343, align 1
  %354 = zext i24 %350 to i32
  br label %355

355:                                              ; preds = %339, %330
  br label %381

356:                                              ; preds = %327
  %357 = load i32, i32* @_ZZ8dmcModelR5MixerE4curr, align 4
  %358 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %357)
  %359 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %358, i32 0, i32 2
  %360 = bitcast [3 x i8]* %359 to i24*
  %361 = load i24, i24* %360, align 1
  %362 = and i24 %361, 4095
  %363 = zext i24 %362 to i32
  %364 = icmp slt i32 %363, 3800
  br i1 %364, label %365, label %380

365:                                              ; preds = %356
  %366 = load i32, i32* @_ZZ8dmcModelR5MixerE4curr, align 4
  %367 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %366)
  %368 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %367, i32 0, i32 2
  %369 = bitcast [3 x i8]* %368 to i24*
  %370 = load i24, i24* %369, align 1
  %371 = and i24 %370, 4095
  %372 = zext i24 %371 to i32
  %373 = add nsw i32 %372, 256
  %374 = trunc i32 %373 to i24
  %375 = load i24, i24* %369, align 1
  %376 = and i24 %374, 4095
  %377 = and i24 %375, -4096
  %378 = or i24 %377, %376
  store i24 %378, i24* %369, align 1
  %379 = zext i24 %376 to i32
  br label %380

380:                                              ; preds = %365, %356
  br label %381

381:                                              ; preds = %380, %355
  %382 = load i32, i32* @_ZZ8dmcModelR5MixerE4curr, align 4
  %383 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %382)
  %384 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %383, i32 0, i32 1
  %385 = load i8, i8* %384, align 4
  %386 = zext i8 %385 to i64
  %387 = getelementptr inbounds [256 x [4 x i8]], [256 x [4 x i8]]* @_ZL11State_table, i64 0, i64 %386
  %388 = load i32, i32* @y, align 4
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds [4 x i8], [4 x i8]* %387, i64 0, i64 %389
  %391 = load i8, i8* %390, align 1
  %392 = load i32, i32* @_ZZ8dmcModelR5MixerE4curr, align 4
  %393 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %392)
  %394 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %393, i32 0, i32 1
  store i8 %391, i8* %394, align 4
  %395 = load i32, i32* @_ZZ8dmcModelR5MixerE4curr, align 4
  %396 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %395)
  %397 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %396, i32 0, i32 0
  %398 = load i32, i32* @y, align 4
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds [2 x i32], [2 x i32]* %397, i64 0, i64 %399
  %401 = load i32, i32* %400, align 4
  store i32 %401, i32* @_ZZ8dmcModelR5MixerE4curr, align 4
  %402 = load i32, i32* @_ZZ8dmcModelR5MixerE4curr, align 4
  %403 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %402)
  %404 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %403, i32 0, i32 1
  %405 = load i8, i8* %404, align 4
  %406 = zext i8 %405 to i32
  %407 = call i32 @_ZN8StateMap1pEii(%class.StateMap* @_ZZ8dmcModelR5MixerE2sm, i32 %406, i32 1023)
  store i32 %407, i32* %11, align 4
  %408 = load i32, i32* @_ZZ8dmcModelR5MixerE4curr, align 4
  %409 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %408)
  %410 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %409, i32 0, i32 2
  %411 = bitcast [3 x i8]* %410 to i24*
  %412 = load i24, i24* %411, align 1
  %413 = lshr i24 %412, 12
  %414 = zext i24 %413 to i32
  store i32 %414, i32* %12, align 4
  %415 = load i32, i32* @_ZZ8dmcModelR5MixerE4curr, align 4
  %416 = call dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* @_ZZ8dmcModelR5MixerE1t, i32 %415)
  %417 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %416, i32 0, i32 2
  %418 = bitcast [3 x i8]* %417 to i24*
  %419 = load i24, i24* %418, align 1
  %420 = and i24 %419, 4095
  %421 = zext i24 %420 to i32
  store i32 %421, i32* %13, align 4
  %422 = load i32, i32* %12, align 4
  %423 = add nsw i32 %422, 5
  %424 = mul nsw i32 %423, 4096
  %425 = load i32, i32* %13, align 4
  %426 = load i32, i32* %12, align 4
  %427 = add nsw i32 %425, %426
  %428 = add nsw i32 %427, 10
  %429 = sdiv i32 %424, %428
  store i32 %429, i32* %14, align 4
  %430 = load %class.Mixer*, %class.Mixer** %2, align 8
  %431 = load i32, i32* %11, align 4
  %432 = call i32 @_ZNK7StretchclEi(%class.Stretch* @stretch, i32 %431)
  call void @_ZN5Mixer3addEi(%class.Mixer* %430, i32 %432)
  %433 = load %class.Mixer*, %class.Mixer** %2, align 8
  %434 = load i32, i32* %14, align 4
  %435 = call i32 @_ZNK7StretchclEi(%class.Stretch* @stretch, i32 %434)
  call void @_ZN5Mixer3addEi(%class.Mixer* %433, i32 %435)
  ret void

436:                                              ; preds = %215, %211
  %437 = load i8*, i8** %3, align 8
  %438 = load i32, i32* %4, align 4
  %439 = insertvalue { i8*, i32 } undef, i8* %437, 0
  %440 = insertvalue { i8*, i32 } %439, i32 %438, 1
  resume { i8*, i32 } %440
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayI7DMCNodeLi0EEC2Ei(%class.Array.9* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Array.9*, align 8
  %4 = alloca i32, align 4
  store %class.Array.9* %0, %class.Array.9** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.9*, %class.Array.9** %3, align 8
  %6 = load i32, i32* %4, align 4
  call void @_ZN5ArrayI7DMCNodeLi0EE6createEi(%class.Array.9* %5, i32 %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayI7DMCNodeLi0EED2Ev(%class.Array.9* %0) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Array.9*, align 8
  store %class.Array.9* %0, %class.Array.9** %2, align 8
  %3 = load %class.Array.9*, %class.Array.9** %2, align 8
  %4 = getelementptr inbounds %class.Array.9, %class.Array.9* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = mul i64 %6, 12
  %8 = sub i64 0, %7
  %9 = trunc i64 %8 to i32
  invoke void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %9)
          to label %10 unwind label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.Array.9, %class.Array.9* %3, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  call void @free(i8* %12) #2
  ret void

13:                                               ; preds = %1
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  call void @__clang_call_terminate(i8* %15) #15
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK5ArrayI7DMCNodeLi0EE4sizeEv(%class.Array.9* %0) #1 comdat align 2 {
  %2 = alloca %class.Array.9*, align 8
  store %class.Array.9* %0, %class.Array.9** %2, align 8
  %3 = load %class.Array.9*, %class.Array.9** %2, align 8
  %4 = getelementptr inbounds %class.Array.9, %class.Array.9* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(12) %struct.DMCNode* @_ZN5ArrayI7DMCNodeLi0EEixEi(%class.Array.9* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array.9*, align 8
  %4 = alloca i32, align 4
  store %class.Array.9* %0, %class.Array.9** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.9*, %class.Array.9** %3, align 8
  %6 = getelementptr inbounds %class.Array.9, %class.Array.9* %5, i32 0, i32 3
  %7 = load %struct.DMCNode*, %struct.DMCNode** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.DMCNode, %struct.DMCNode* %7, i64 %9
  ret %struct.DMCNode* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayI7DMCNodeLi0EE6createEi(%class.Array.9* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array.9*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.Array.9* %0, %class.Array.9** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.Array.9*, %class.Array.9** %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.Array.9, %class.Array.9* %6, i32 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %class.Array.9, %class.Array.9* %6, i32 0, i32 0
  store i32 %7, i32* %9, align 8
  %10 = load i32, i32* %4, align 4
  %11 = icmp sle i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.Array.9, %class.Array.9* %6, i32 0, i32 3
  store %struct.DMCNode* null, %struct.DMCNode** %13, align 8
  %14 = getelementptr inbounds %class.Array.9, %class.Array.9* %6, i32 0, i32 2
  store i8* null, i8** %14, align 8
  br label %36

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.Array.9, %class.Array.9* %6, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 12
  %20 = add i64 0, %19
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* %5, align 4
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %22)
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = call noalias i8* @calloc(i64 %24, i64 1) #2
  %26 = getelementptr inbounds %class.Array.9, %class.Array.9* %6, i32 0, i32 2
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %class.Array.9, %class.Array.9* %6, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %15
  call void @_Z4quitPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0))
  br label %31

31:                                               ; preds = %30, %15
  %32 = getelementptr inbounds %class.Array.9, %class.Array.9* %6, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast i8* %33 to %struct.DMCNode*
  %35 = getelementptr inbounds %class.Array.9, %class.Array.9* %6, i32 0, i32 3
  store %struct.DMCNode* %34, %struct.DMCNode** %35, align 8
  br label %36

36:                                               ; preds = %31, %12
  ret void
}

; Function Attrs: noinline uwtable
define dso_local i32 @_Z13contextModel2v() #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i8*
  %3 = alloca i32
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = load atomic i8, i8* bitcast (i64* @_ZGVZ13contextModel2vE2cm to i8*) acquire, align 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %28, !prof !2

19:                                               ; preds = %0
  %20 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ13contextModel2vE2cm) #2
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %19
  %23 = load i32, i32* @level, align 4
  %24 = shl i32 65536, %23
  %25 = mul nsw i32 %24, 32
  invoke void @_ZN10ContextMapC1Eii(%class.ContextMap* @_ZZ13contextModel2vE2cm, i32 %25, i32 9)
          to label %26 unwind label %80

26:                                               ; preds = %22
  %27 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.ContextMap*)* @_ZN10ContextMapD1Ev to void (i8*)*), i8* bitcast (%class.ContextMap* @_ZZ13contextModel2vE2cm to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ13contextModel2vE2cm) #2
  br label %28

28:                                               ; preds = %26, %19, %0
  %29 = load atomic i8, i8* bitcast (i64* @_ZGVZ13contextModel2vE4rcm7 to i8*) acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %39, !prof !2

31:                                               ; preds = %28
  %32 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ13contextModel2vE4rcm7) #2
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %39

34:                                               ; preds = %31
  %35 = load i32, i32* @level, align 4
  %36 = shl i32 65536, %35
  invoke void @_ZN13RunContextMapC2Ei(%class.RunContextMap* @_ZZ13contextModel2vE4rcm7, i32 %36)
          to label %37 unwind label %84

37:                                               ; preds = %34
  %38 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.RunContextMap*)* @_ZN13RunContextMapD2Ev to void (i8*)*), i8* bitcast (%class.RunContextMap* @_ZZ13contextModel2vE4rcm7 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ13contextModel2vE4rcm7) #2
  br label %39

39:                                               ; preds = %37, %31, %28
  %40 = load atomic i8, i8* bitcast (i64* @_ZGVZ13contextModel2vE4rcm9 to i8*) acquire, align 8
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %50, !prof !2

42:                                               ; preds = %39
  %43 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ13contextModel2vE4rcm9) #2
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %42
  %46 = load i32, i32* @level, align 4
  %47 = shl i32 65536, %46
  invoke void @_ZN13RunContextMapC2Ei(%class.RunContextMap* @_ZZ13contextModel2vE4rcm9, i32 %47)
          to label %48 unwind label %88

48:                                               ; preds = %45
  %49 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.RunContextMap*)* @_ZN13RunContextMapD2Ev to void (i8*)*), i8* bitcast (%class.RunContextMap* @_ZZ13contextModel2vE4rcm9 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ13contextModel2vE4rcm9) #2
  br label %50

50:                                               ; preds = %48, %42, %39
  %51 = load atomic i8, i8* bitcast (i64* @_ZGVZ13contextModel2vE5rcm10 to i8*) acquire, align 8
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %61, !prof !2

53:                                               ; preds = %50
  %54 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ13contextModel2vE5rcm10) #2
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %61

56:                                               ; preds = %53
  %57 = load i32, i32* @level, align 4
  %58 = shl i32 65536, %57
  invoke void @_ZN13RunContextMapC2Ei(%class.RunContextMap* @_ZZ13contextModel2vE5rcm10, i32 %58)
          to label %59 unwind label %92

59:                                               ; preds = %56
  %60 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.RunContextMap*)* @_ZN13RunContextMapD2Ev to void (i8*)*), i8* bitcast (%class.RunContextMap* @_ZZ13contextModel2vE5rcm10 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ13contextModel2vE5rcm10) #2
  br label %61

61:                                               ; preds = %59, %53, %50
  %62 = load atomic i8, i8* bitcast (i64* @_ZGVZ13contextModel2vE1m to i8*) acquire, align 8
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %70, !prof !2

64:                                               ; preds = %61
  %65 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ13contextModel2vE1m) #2
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %64
  invoke void @_ZN5MixerC1Eiiii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 800, i32 3088, i32 7, i32 128)
          to label %68 unwind label %96

68:                                               ; preds = %67
  %69 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Mixer*)* @_ZN5MixerD1Ev to void (i8*)*), i8* bitcast (%class.Mixer* @_ZZ13contextModel2vE1m to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ13contextModel2vE1m) #2
  br label %70

70:                                               ; preds = %68, %64, %61
  %71 = load i32, i32* @bpos, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %121

73:                                               ; preds = %70
  %74 = load i32, i32* @_ZZ13contextModel2vE4size, align 4
  %75 = add nsw i32 %74, -1
  store i32 %75, i32* @_ZZ13contextModel2vE4size, align 4
  %76 = load i32, i32* @_ZZ13contextModel2vE4size, align 4
  %77 = icmp eq i32 %76, -1
  br i1 %77, label %78, label %100

78:                                               ; preds = %73
  %79 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  store i32 %79, i32* @_ZZ13contextModel2vE8filetype, align 4
  br label %100

80:                                               ; preds = %22
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %2, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %3, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ13contextModel2vE2cm) #2
  br label %354

84:                                               ; preds = %34
  %85 = landingpad { i8*, i32 }
          cleanup
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %2, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %3, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ13contextModel2vE4rcm7) #2
  br label %354

88:                                               ; preds = %45
  %89 = landingpad { i8*, i32 }
          cleanup
  %90 = extractvalue { i8*, i32 } %89, 0
  store i8* %90, i8** %2, align 8
  %91 = extractvalue { i8*, i32 } %89, 1
  store i32 %91, i32* %3, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ13contextModel2vE4rcm9) #2
  br label %354

92:                                               ; preds = %56
  %93 = landingpad { i8*, i32 }
          cleanup
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %2, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %3, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ13contextModel2vE5rcm10) #2
  br label %354

96:                                               ; preds = %67
  %97 = landingpad { i8*, i32 }
          cleanup
  %98 = extractvalue { i8*, i32 } %97, 0
  store i8* %98, i8** %2, align 8
  %99 = extractvalue { i8*, i32 } %97, 1
  store i32 %99, i32* %3, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ13contextModel2vE1m) #2
  br label %354

100:                                              ; preds = %78, %73
  %101 = load i32, i32* @_ZZ13contextModel2vE4size, align 4
  %102 = icmp eq i32 %101, -5
  br i1 %102, label %103, label %120

103:                                              ; preds = %100
  %104 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 4)
  %105 = shl i32 %104, 24
  %106 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %107 = shl i32 %106, 16
  %108 = or i32 %105, %107
  %109 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %110 = shl i32 %109, 8
  %111 = or i32 %108, %110
  %112 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %113 = or i32 %111, %112
  store i32 %113, i32* @_ZZ13contextModel2vE4size, align 4
  %114 = load i32, i32* @_ZZ13contextModel2vE8filetype, align 4
  %115 = icmp eq i32 %114, 8
  br i1 %115, label %116, label %119

116:                                              ; preds = %103
  %117 = load i32, i32* @_ZZ13contextModel2vE4size, align 4
  %118 = add nsw i32 %117, 8
  store i32 %118, i32* @_ZZ13contextModel2vE4size, align 4
  br label %119

119:                                              ; preds = %116, %103
  br label %120

120:                                              ; preds = %119, %100
  br label %121

121:                                              ; preds = %120, %70
  call void @_ZN5Mixer6updateEv(%class.Mixer* @_ZZ13contextModel2vE1m)
  call void @_ZN5Mixer3addEi(%class.Mixer* @_ZZ13contextModel2vE1m, i32 256)
  %122 = call i32 @_Z10matchModelR5Mixer(%class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  %123 = trunc i32 %122 to i16
  %124 = call i32 @_ZNK4IlogclEt(%class.Buf* @ilog, i16 zeroext %123)
  store i32 %124, i32* %4, align 4
  %125 = call i32 @_Z8wavModelR5Mixer(%class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  store i32 %125, i32* %5, align 4
  %126 = load i32, i32* @_ZZ13contextModel2vE8filetype, align 4
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %138

128:                                              ; preds = %121
  %129 = call i32 @_Z9jpegModelR5Mixer(%class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  store i32 %129, i32* %6, align 4
  %130 = load i32, i32* %6, align 4
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %137

132:                                              ; preds = %128
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 1, i32 8)
  %133 = load i32, i32* %6, align 4
  %134 = sub nsw i32 %133, 1
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 %134, i32 257)
  %135 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 %135, i32 256)
  %136 = call i32 @_ZN5Mixer1pEv(%class.Mixer* @_ZZ13contextModel2vE1m)
  store i32 %136, i32* %1, align 4
  br label %352

137:                                              ; preds = %128
  br label %138

138:                                              ; preds = %137, %121
  %139 = load i32, i32* @_ZZ13contextModel2vE8filetype, align 4
  %140 = icmp eq i32 %139, 4
  br i1 %140, label %144, label %141

141:                                              ; preds = %138
  %142 = load i32, i32* @_ZZ13contextModel2vE8filetype, align 4
  %143 = icmp eq i32 %142, 5
  br i1 %143, label %144, label %163

144:                                              ; preds = %141, %138
  %145 = call i32 @_Z8bmpModelR5Mixer(%class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  store i32 %145, i32* %7, align 4
  %146 = load i32, i32* %7, align 4
  %147 = icmp sgt i32 %146, 0
  br i1 %147, label %148, label %162

148:                                              ; preds = %144
  %149 = load i32, i32* @_ZZ13contextModel2vE3col, align 4
  %150 = add nsw i32 %149, 1
  store i32 %150, i32* @_ZZ13contextModel2vE3col, align 4
  %151 = icmp sge i32 %150, 24
  br i1 %151, label %152, label %153

152:                                              ; preds = %148
  store i32 0, i32* @_ZZ13contextModel2vE3col, align 4
  br label %153

153:                                              ; preds = %152, %148
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 2, i32 8)
  %154 = load i32, i32* @_ZZ13contextModel2vE3col, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 %154, i32 24)
  %155 = load i32, i32* %7, align 4
  %156 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 %155)
  %157 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %158 = add nsw i32 %156, %157
  %159 = ashr i32 %158, 4
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 %159, i32 32)
  %160 = load i32, i32* @c0, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 %160, i32 256)
  %161 = call i32 @_ZN5Mixer1pEv(%class.Mixer* @_ZZ13contextModel2vE1m)
  store i32 %161, i32* %1, align 4
  br label %352

162:                                              ; preds = %144
  br label %163

163:                                              ; preds = %162, %141
  %164 = load i32, i32* @_ZZ13contextModel2vE8filetype, align 4
  %165 = icmp eq i32 %164, 6
  br i1 %165, label %166, label %172

166:                                              ; preds = %163
  %167 = call i32 @_Z8pgmModelR5Mixer(%class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  %168 = icmp sgt i32 %167, 0
  br i1 %168, label %169, label %171

169:                                              ; preds = %166
  %170 = call i32 @_ZN5Mixer1pEv(%class.Mixer* @_ZZ13contextModel2vE1m)
  store i32 %170, i32* %1, align 4
  br label %352

171:                                              ; preds = %166
  br label %172

172:                                              ; preds = %171, %163
  %173 = load i32, i32* @_ZZ13contextModel2vE8filetype, align 4
  %174 = icmp eq i32 %173, 3
  br i1 %174, label %175, label %181

175:                                              ; preds = %172
  %176 = call i32 @_Z9bmpModel8R5Mixer(%class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  %177 = icmp sgt i32 %176, 0
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = call i32 @_ZN5Mixer1pEv(%class.Mixer* @_ZZ13contextModel2vE1m)
  store i32 %179, i32* %1, align 4
  br label %352

180:                                              ; preds = %175
  br label %181

181:                                              ; preds = %180, %172
  %182 = load i32, i32* @_ZZ13contextModel2vE8filetype, align 4
  %183 = icmp eq i32 %182, 7
  br i1 %183, label %184, label %190

184:                                              ; preds = %181
  %185 = call i32 @_Z9rgbModel8R5Mixer(%class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %184
  %188 = call i32 @_ZN5Mixer1pEv(%class.Mixer* @_ZZ13contextModel2vE1m)
  store i32 %188, i32* %1, align 4
  br label %352

189:                                              ; preds = %184
  br label %190

190:                                              ; preds = %189, %181
  %191 = load i32, i32* %5, align 4
  %192 = icmp sgt i32 %191, 0
  br i1 %192, label %193, label %217

193:                                              ; preds = %190
  %194 = load i32, i32* %5, align 4
  %195 = and i32 %194, 255
  store i32 %195, i32* %8, align 4
  %196 = load i32, i32* %5, align 4
  %197 = ashr i32 %196, 8
  %198 = load i32, i32* %8, align 4
  %199 = mul nsw i32 %197, %198
  store i32 %199, i32* %9, align 4
  %200 = load i32, i32* @_ZZ13contextModel2vE3col_0, align 4
  %201 = add nsw i32 %200, 1
  store i32 %201, i32* @_ZZ13contextModel2vE3col_0, align 4
  %202 = load i32, i32* %9, align 4
  %203 = icmp sge i32 %201, %202
  br i1 %203, label %204, label %205

204:                                              ; preds = %193
  store i32 0, i32* @_ZZ13contextModel2vE3col_0, align 4
  br label %205

205:                                              ; preds = %204, %193
  %206 = load i32, i32* %9, align 4
  %207 = load i32, i32* %8, align 4
  %208 = icmp ne i32 %206, %207
  br i1 %208, label %209, label %212

209:                                              ; preds = %205
  %210 = load i32, i32* @_ZZ13contextModel2vE3col_0, align 4
  %211 = load i32, i32* %9, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 %210, i32 %211)
  br label %212

212:                                              ; preds = %209, %205
  %213 = load i32, i32* @_ZZ13contextModel2vE3col_0, align 4
  %214 = load i32, i32* %8, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 %213, i32 %214)
  %215 = load i32, i32* @c0, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 %215, i32 256)
  %216 = call i32 @_ZN5Mixer1pEv(%class.Mixer* @_ZZ13contextModel2vE1m)
  store i32 %216, i32* %1, align 4
  br label %352

217:                                              ; preds = %190
  %218 = load i32, i32* @bpos, align 4
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %259

220:                                              ; preds = %217
  store i32 15, i32* %10, align 4
  br label %221

221:                                              ; preds = %238, %220
  %222 = load i32, i32* %10, align 4
  %223 = icmp sgt i32 %222, 0
  br i1 %223, label %224, label %241

224:                                              ; preds = %221
  %225 = load i32, i32* %10, align 4
  %226 = sub nsw i32 %225, 1
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds [16 x i32], [16 x i32]* @_ZZ13contextModel2vE3cxt, i64 0, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = mul i32 %229, 257
  %231 = load i32, i32* @c4, align 4
  %232 = and i32 %231, 255
  %233 = add i32 %230, %232
  %234 = add i32 %233, 1
  %235 = load i32, i32* %10, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [16 x i32], [16 x i32]* @_ZZ13contextModel2vE3cxt, i64 0, i64 %236
  store i32 %234, i32* %237, align 4
  br label %238

238:                                              ; preds = %224
  %239 = load i32, i32* %10, align 4
  %240 = add nsw i32 %239, -1
  store i32 %240, i32* %10, align 4
  br label %221

241:                                              ; preds = %221
  store i32 0, i32* %10, align 4
  br label %242

242:                                              ; preds = %250, %241
  %243 = load i32, i32* %10, align 4
  %244 = icmp slt i32 %243, 7
  br i1 %244, label %245, label %253

245:                                              ; preds = %242
  %246 = load i32, i32* %10, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [16 x i32], [16 x i32]* @_ZZ13contextModel2vE3cxt, i64 0, i64 %247
  %249 = load i32, i32* %248, align 4
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ13contextModel2vE2cm, i32 %249, i32 -1)
  br label %250

250:                                              ; preds = %245
  %251 = load i32, i32* %10, align 4
  %252 = add nsw i32 %251, 1
  store i32 %252, i32* %10, align 4
  br label %242

253:                                              ; preds = %242
  %254 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @_ZZ13contextModel2vE3cxt, i64 0, i64 7), align 4
  call void @_ZN13RunContextMap3setEj(%class.RunContextMap* @_ZZ13contextModel2vE4rcm7, i32 %254)
  %255 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @_ZZ13contextModel2vE3cxt, i64 0, i64 8), align 16
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ13contextModel2vE2cm, i32 %255, i32 -1)
  %256 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @_ZZ13contextModel2vE3cxt, i64 0, i64 10), align 8
  call void @_ZN13RunContextMap3setEj(%class.RunContextMap* @_ZZ13contextModel2vE4rcm9, i32 %256)
  %257 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @_ZZ13contextModel2vE3cxt, i64 0, i64 12), align 16
  call void @_ZN13RunContextMap3setEj(%class.RunContextMap* @_ZZ13contextModel2vE5rcm10, i32 %257)
  %258 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @_ZZ13contextModel2vE3cxt, i64 0, i64 14), align 8
  call void @_ZN10ContextMap3setEji(%class.ContextMap* @_ZZ13contextModel2vE2cm, i32 %258, i32 -1)
  br label %259

259:                                              ; preds = %253, %217
  %260 = call i32 @_ZN10ContextMap3mixER5Mixer(%class.ContextMap* @_ZZ13contextModel2vE2cm, %class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  store i32 %260, i32* %11, align 4
  %261 = call i32 @_ZN13RunContextMap3mixER5Mixer(%class.RunContextMap* @_ZZ13contextModel2vE4rcm7, %class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  %262 = call i32 @_ZN13RunContextMap3mixER5Mixer(%class.RunContextMap* @_ZZ13contextModel2vE4rcm9, %class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  %263 = call i32 @_ZN13RunContextMap3mixER5Mixer(%class.RunContextMap* @_ZZ13contextModel2vE5rcm10, %class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  %264 = load i32, i32* @level, align 4
  %265 = icmp sge i32 %264, 4
  br i1 %265, label %266, label %273

266:                                              ; preds = %259
  %267 = load i32, i32* %4, align 4
  %268 = load i32, i32* %11, align 4
  call void @_Z11sparseModelR5Mixerii(%class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m, i32 %267, i32 %268)
  call void @_Z13distanceModelR5Mixer(%class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  call void @_Z8picModelR5Mixer(%class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  call void @_Z11recordModelR5Mixer(%class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  call void @_Z9wordModelR5Mixer(%class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  call void @_Z13indirectModelR5Mixer(%class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  call void @_Z8dmcModelR5Mixer(%class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  %269 = load i32, i32* @_ZZ13contextModel2vE8filetype, align 4
  %270 = icmp eq i32 %269, 8
  br i1 %270, label %271, label %272

271:                                              ; preds = %266
  call void @_Z8exeModelR5Mixer(%class.Mixer* dereferenceable(136) @_ZZ13contextModel2vE1m)
  br label %272

272:                                              ; preds = %271, %266
  br label %273

273:                                              ; preds = %272, %259
  %274 = load i32, i32* %11, align 4
  %275 = sub nsw i32 %274, 2
  store i32 %275, i32* %11, align 4
  %276 = load i32, i32* %11, align 4
  %277 = icmp slt i32 %276, 0
  br i1 %277, label %278, label %279

278:                                              ; preds = %273
  store i32 0, i32* %11, align 4
  br label %279

279:                                              ; preds = %278, %273
  %280 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  store i32 %280, i32* %12, align 4
  %281 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  store i32 %281, i32* %13, align 4
  %282 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  store i32 %282, i32* %14, align 4
  %283 = load i32, i32* %12, align 4
  %284 = add i32 %283, 8
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 %284, i32 264)
  %285 = load i32, i32* @c0, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 %285, i32 256)
  %286 = load i32, i32* %11, align 4
  %287 = load i32, i32* @c4, align 4
  %288 = lshr i32 %287, 5
  %289 = and i32 %288, 7
  %290 = mul i32 8, %289
  %291 = add i32 %286, %290
  %292 = load i32, i32* %12, align 4
  %293 = load i32, i32* %13, align 4
  %294 = icmp eq i32 %292, %293
  %295 = zext i1 %294 to i32
  %296 = mul nsw i32 64, %295
  %297 = add i32 %291, %296
  %298 = load i32, i32* @_ZZ13contextModel2vE8filetype, align 4
  %299 = icmp eq i32 %298, 8
  %300 = zext i1 %299 to i32
  %301 = mul nsw i32 128, %300
  %302 = add i32 %297, %301
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 %302, i32 256)
  %303 = load i32, i32* %13, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 %303, i32 256)
  %304 = load i32, i32* %14, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 %304, i32 256)
  %305 = load i32, i32* %4, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 %305, i32 256)
  %306 = load i32, i32* @bpos, align 4
  %307 = icmp ne i32 %306, 0
  br i1 %307, label %308, label %334

308:                                              ; preds = %279
  %309 = load i32, i32* @c0, align 4
  %310 = load i32, i32* @bpos, align 4
  %311 = sub nsw i32 8, %310
  %312 = shl i32 %309, %311
  store i32 %312, i32* %15, align 4
  %313 = load i32, i32* @bpos, align 4
  %314 = icmp eq i32 %313, 1
  br i1 %314, label %315, label %320

315:                                              ; preds = %308
  %316 = load i32, i32* %14, align 4
  %317 = udiv i32 %316, 2
  %318 = load i32, i32* %15, align 4
  %319 = add i32 %318, %317
  store i32 %319, i32* %15, align 4
  br label %320

320:                                              ; preds = %315, %308
  %321 = load i32, i32* @bpos, align 4
  %322 = call i32 @_Z3minii(i32 %321, i32 5)
  %323 = mul nsw i32 %322, 256
  %324 = load i32, i32* %12, align 4
  %325 = udiv i32 %324, 32
  %326 = add i32 %323, %325
  %327 = load i32, i32* %13, align 4
  %328 = udiv i32 %327, 32
  %329 = mul i32 8, %328
  %330 = add i32 %326, %329
  %331 = load i32, i32* %15, align 4
  %332 = and i32 %331, 192
  %333 = add i32 %330, %332
  store i32 %333, i32* %15, align 4
  br label %348

334:                                              ; preds = %279
  %335 = load i32, i32* %14, align 4
  %336 = udiv i32 %335, 128
  %337 = load i32, i32* @c4, align 4
  %338 = lshr i32 %337, 31
  %339 = mul i32 %338, 2
  %340 = add i32 %336, %339
  %341 = load i32, i32* %13, align 4
  %342 = udiv i32 %341, 64
  %343 = mul i32 4, %342
  %344 = add i32 %340, %343
  %345 = load i32, i32* %12, align 4
  %346 = and i32 %345, 240
  %347 = add i32 %344, %346
  store i32 %347, i32* %15, align 4
  br label %348

348:                                              ; preds = %334, %320
  %349 = load i32, i32* %15, align 4
  call void @_ZN5Mixer3setEii(%class.Mixer* @_ZZ13contextModel2vE1m, i32 %349, i32 1536)
  %350 = call i32 @_ZN5Mixer1pEv(%class.Mixer* @_ZZ13contextModel2vE1m)
  store i32 %350, i32* %16, align 4
  %351 = load i32, i32* %16, align 4
  store i32 %351, i32* %1, align 4
  br label %352

352:                                              ; preds = %348, %212, %187, %178, %169, %153, %132
  %353 = load i32, i32* %1, align 4
  ret i32 %353

354:                                              ; preds = %96, %92, %88, %84, %80
  %355 = load i8*, i8** %2, align 8
  %356 = load i32, i32* %3, align 4
  %357 = insertvalue { i8*, i32 } undef, i8* %355, 0
  %358 = insertvalue { i8*, i32 } %357, i32 %356, 1
  resume { i8*, i32 } %358
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN13RunContextMapC2Ei(%class.RunContextMap* %0, i32 %1) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.RunContextMap*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*
  %6 = alloca i32
  store %class.RunContextMap* %0, %class.RunContextMap** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load %class.RunContextMap*, %class.RunContextMap** %3, align 8
  %8 = getelementptr inbounds %class.RunContextMap, %class.RunContextMap* %7, i32 0, i32 0
  %9 = load i32, i32* %4, align 4
  %10 = sdiv i32 %9, 4
  call void @_ZN2BHILi4EEC2Ei(%class.BH* %8, i32 %10)
  %11 = getelementptr inbounds %class.RunContextMap, %class.RunContextMap* %7, i32 0, i32 0
  %12 = invoke i8* @_ZN2BHILi4EEixEj(%class.BH* %11, i32 0)
          to label %13 unwind label %16

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %12, i64 1
  %15 = getelementptr inbounds %class.RunContextMap, %class.RunContextMap* %7, i32 0, i32 1
  store i8* %14, i8** %15, align 8
  ret void

16:                                               ; preds = %2
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %5, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %6, align 4
  call void @_ZN2BHILi4EED2Ev(%class.BH* %8) #2
  br label %20

20:                                               ; preds = %16
  %21 = load i8*, i8** %5, align 8
  %22 = load i32, i32* %6, align 4
  %23 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN13RunContextMapD2Ev(%class.RunContextMap* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.RunContextMap*, align 8
  store %class.RunContextMap* %0, %class.RunContextMap** %2, align 8
  %3 = load %class.RunContextMap*, %class.RunContextMap** %2, align 8
  %4 = getelementptr inbounds %class.RunContextMap, %class.RunContextMap* %3, i32 0, i32 0
  call void @_ZN2BHILi4EED2Ev(%class.BH* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN13RunContextMap3setEj(%class.RunContextMap* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.RunContextMap*, align 8
  %4 = alloca i32, align 4
  store %class.RunContextMap* %0, %class.RunContextMap** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.RunContextMap*, %class.RunContextMap** %3, align 8
  %6 = getelementptr inbounds %class.RunContextMap, %class.RunContextMap* %5, i32 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.RunContextMap, %class.RunContextMap* %5, i32 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %19 = icmp ne i32 %17, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %12, %2
  %21 = getelementptr inbounds %class.RunContextMap, %class.RunContextMap* %5, i32 0, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  store i8 1, i8* %23, align 1
  %24 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %class.RunContextMap, %class.RunContextMap* %5, i32 0, i32 1
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  store i8 %25, i8* %28, align 1
  br label %43

29:                                               ; preds = %12
  %30 = getelementptr inbounds %class.RunContextMap, %class.RunContextMap* %5, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = icmp slt i32 %34, 255
  br i1 %35, label %36, label %42

36:                                               ; preds = %29
  %37 = getelementptr inbounds %class.RunContextMap, %class.RunContextMap* %5, i32 0, i32 1
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 0
  %40 = load i8, i8* %39, align 1
  %41 = add i8 %40, 1
  store i8 %41, i8* %39, align 1
  br label %42

42:                                               ; preds = %36, %29
  br label %43

43:                                               ; preds = %42, %20
  %44 = getelementptr inbounds %class.RunContextMap, %class.RunContextMap* %5, i32 0, i32 0
  %45 = load i32, i32* %4, align 4
  %46 = call i8* @_ZN2BHILi4EEixEj(%class.BH* %44, i32 %45)
  %47 = getelementptr inbounds i8, i8* %46, i64 1
  %48 = getelementptr inbounds %class.RunContextMap, %class.RunContextMap* %5, i32 0, i32 1
  store i8* %47, i8** %48, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_ZN13RunContextMap3mixER5Mixer(%class.RunContextMap* %0, %class.Mixer* dereferenceable(136) %1) #0 comdat align 2 {
  %3 = alloca %class.RunContextMap*, align 8
  %4 = alloca %class.Mixer*, align 8
  store %class.RunContextMap* %0, %class.RunContextMap** %3, align 8
  store %class.Mixer* %1, %class.Mixer** %4, align 8
  %5 = load %class.RunContextMap*, %class.RunContextMap** %3, align 8
  %6 = load %class.Mixer*, %class.Mixer** %4, align 8
  %7 = call i32 @_ZN13RunContextMap1pEv(%class.RunContextMap* %5)
  call void @_ZN5Mixer3addEi(%class.Mixer* %6, i32 %7)
  %8 = getelementptr inbounds %class.RunContextMap, %class.RunContextMap* %5, i32 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp ne i32 %12, 0
  %14 = zext i1 %13 to i32
  ret i32 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_ZN13RunContextMap1pEv(%class.RunContextMap* %0) #0 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %class.RunContextMap*, align 8
  store %class.RunContextMap* %0, %class.RunContextMap** %3, align 8
  %4 = load %class.RunContextMap*, %class.RunContextMap** %3, align 8
  %5 = getelementptr inbounds %class.RunContextMap, %class.RunContextMap* %4, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = add nsw i32 %9, 256
  %11 = load i32, i32* @bpos, align 4
  %12 = sub nsw i32 8, %11
  %13 = ashr i32 %10, %12
  %14 = load i32, i32* @c0, align 4
  %15 = icmp eq i32 %13, %14
  br i1 %15, label %16, label %38

16:                                               ; preds = %1
  %17 = getelementptr inbounds %class.RunContextMap, %class.RunContextMap* %4, i32 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 1
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = load i32, i32* @bpos, align 4
  %23 = sub nsw i32 7, %22
  %24 = ashr i32 %21, %23
  %25 = and i32 %24, 1
  %26 = mul nsw i32 %25, 2
  %27 = sub nsw i32 %26, 1
  %28 = getelementptr inbounds %class.RunContextMap, %class.RunContextMap* %4, i32 0, i32 1
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = add nsw i32 %32, 1
  %34 = trunc i32 %33 to i16
  %35 = call i32 @_ZNK4IlogclEt(%class.Buf* @ilog, i16 zeroext %34)
  %36 = mul nsw i32 %27, %35
  %37 = mul nsw i32 %36, 8
  store i32 %37, i32* %2, align 4
  br label %39

38:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  br label %39

39:                                               ; preds = %38, %16
  %40 = load i32, i32* %2, align 4
  ret i32 %40
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i8* @_ZN2BHILi4EEixEj(%class.BH* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca %class.BH*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i32, align 4
  store %class.BH* %0, %class.BH** %4, align 8
  store i32 %1, i32* %5, align 4
  %10 = load %class.BH*, %class.BH** %4, align 8
  %11 = load i32, i32* %5, align 4
  %12 = lshr i32 %11, 16
  %13 = load i32, i32* %5, align 4
  %14 = xor i32 %12, %13
  %15 = and i32 %14, 65535
  store i32 %15, i32* %6, align 4
  %16 = load i32, i32* %5, align 4
  %17 = mul i32 %16, 8
  %18 = getelementptr inbounds %class.BH, %class.BH* %10, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %17, %19
  store i32 %20, i32* %5, align 4
  store i32 0, i32* %9, align 4
  br label %21

21:                                               ; preds = %50, %2
  %22 = load i32, i32* %9, align 4
  %23 = icmp slt i32 %22, 8
  br i1 %23, label %24, label %53

24:                                               ; preds = %21
  %25 = getelementptr inbounds %class.BH, %class.BH* %10, i32 0, i32 0
  %26 = load i32, i32* %5, align 4
  %27 = load i32, i32* %9, align 4
  %28 = add i32 %26, %27
  %29 = mul i32 %28, 4
  %30 = call dereferenceable(1) i8* @_ZN5ArrayIhLi64EEixEi(%class.Array.0* %25, i32 %29)
  store i8* %30, i8** %7, align 8
  %31 = load i8*, i8** %7, align 8
  %32 = bitcast i8* %31 to i16*
  store i16* %32, i16** %8, align 8
  %33 = load i8*, i8** %7, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 2
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %24
  %39 = load i32, i32* %6, align 4
  %40 = trunc i32 %39 to i16
  %41 = load i16*, i16** %8, align 8
  store i16 %40, i16* %41, align 2
  br label %53

42:                                               ; preds = %24
  %43 = load i16*, i16** %8, align 8
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = load i32, i32* %6, align 4
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %49

48:                                               ; preds = %42
  br label %53

49:                                               ; preds = %42
  br label %50

50:                                               ; preds = %49
  %51 = load i32, i32* %9, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %9, align 4
  br label %21

53:                                               ; preds = %48, %38, %21
  %54 = load i32, i32* %9, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %53
  %57 = load i8*, i8** %7, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  store i8* %58, i8** %3, align 8
  br label %116

59:                                               ; preds = %53
  %60 = load i32, i32* %9, align 4
  %61 = icmp eq i32 %60, 8
  br i1 %61, label %62, label %91

62:                                               ; preds = %59
  %63 = load i32, i32* %9, align 4
  %64 = add nsw i32 %63, -1
  store i32 %64, i32* %9, align 4
  call void @llvm.memset.p0i8.i64(i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN2BHILi4EEixEjE3tmp, i64 0, i64 0), i8 0, i64 4, i1 false)
  %65 = load i32, i32* %6, align 4
  %66 = trunc i32 %65 to i16
  store i16 %66, i16* bitcast ([4 x i8]* @_ZZN2BHILi4EEixEjE3tmp to i16*), align 1
  %67 = getelementptr inbounds %class.BH, %class.BH* %10, i32 0, i32 0
  %68 = load i32, i32* %5, align 4
  %69 = load i32, i32* %9, align 4
  %70 = add i32 %68, %69
  %71 = mul i32 %70, 4
  %72 = add i32 %71, 2
  %73 = call dereferenceable(1) i8* @_ZN5ArrayIhLi64EEixEi(%class.Array.0* %67, i32 %72)
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = getelementptr inbounds %class.BH, %class.BH* %10, i32 0, i32 0
  %77 = load i32, i32* %5, align 4
  %78 = load i32, i32* %9, align 4
  %79 = add i32 %77, %78
  %80 = sub i32 %79, 1
  %81 = mul i32 %80, 4
  %82 = add i32 %81, 2
  %83 = call dereferenceable(1) i8* @_ZN5ArrayIhLi64EEixEi(%class.Array.0* %76, i32 %82)
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = icmp sgt i32 %75, %85
  br i1 %86, label %87, label %90

87:                                               ; preds = %62
  %88 = load i32, i32* %9, align 4
  %89 = add nsw i32 %88, -1
  store i32 %89, i32* %9, align 4
  br label %90

90:                                               ; preds = %87, %62
  br label %94

91:                                               ; preds = %59
  %92 = load i16*, i16** %8, align 8
  %93 = bitcast i16* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN2BHILi4EEixEjE3tmp, i64 0, i64 0), i8* align 2 %93, i64 4, i1 false)
  br label %94

94:                                               ; preds = %91, %90
  %95 = getelementptr inbounds %class.BH, %class.BH* %10, i32 0, i32 0
  %96 = load i32, i32* %5, align 4
  %97 = add i32 %96, 1
  %98 = mul i32 %97, 4
  %99 = call dereferenceable(1) i8* @_ZN5ArrayIhLi64EEixEi(%class.Array.0* %95, i32 %98)
  %100 = getelementptr inbounds %class.BH, %class.BH* %10, i32 0, i32 0
  %101 = load i32, i32* %5, align 4
  %102 = mul i32 %101, 4
  %103 = call dereferenceable(1) i8* @_ZN5ArrayIhLi64EEixEi(%class.Array.0* %100, i32 %102)
  %104 = load i32, i32* %9, align 4
  %105 = mul nsw i32 %104, 4
  %106 = sext i32 %105 to i64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %99, i8* align 1 %103, i64 %106, i1 false)
  %107 = getelementptr inbounds %class.BH, %class.BH* %10, i32 0, i32 0
  %108 = load i32, i32* %5, align 4
  %109 = mul i32 %108, 4
  %110 = call dereferenceable(1) i8* @_ZN5ArrayIhLi64EEixEi(%class.Array.0* %107, i32 %109)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %110, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN2BHILi4EEixEjE3tmp, i64 0, i64 0), i64 4, i1 false)
  %111 = getelementptr inbounds %class.BH, %class.BH* %10, i32 0, i32 0
  %112 = load i32, i32* %5, align 4
  %113 = mul i32 %112, 4
  %114 = add i32 %113, 1
  %115 = call dereferenceable(1) i8* @_ZN5ArrayIhLi64EEixEi(%class.Array.0* %111, i32 %114)
  store i8* %115, i8** %3, align 8
  br label %116

116:                                              ; preds = %94, %56
  %117 = load i8*, i8** %3, align 8
  ret i8* %117
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN2BHILi4EED2Ev(%class.BH* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.BH*, align 8
  store %class.BH* %0, %class.BH** %2, align 8
  %3 = load %class.BH*, %class.BH** %2, align 8
  %4 = getelementptr inbounds %class.BH, %class.BH* %3, i32 0, i32 0
  call void @_ZN5ArrayIhLi64EED2Ev(%class.Array.0* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN2BHILi4EEC2Ei(%class.BH* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.BH*, align 8
  %4 = alloca i32, align 4
  store %class.BH* %0, %class.BH** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.BH*, %class.BH** %3, align 8
  %6 = getelementptr inbounds %class.BH, %class.BH* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = mul nsw i32 %7, 4
  call void @_ZN5ArrayIhLi64EEC2Ei(%class.Array.0* %6, i32 %8)
  %9 = getelementptr inbounds %class.BH, %class.BH* %5, i32 0, i32 1
  %10 = load i32, i32* %4, align 4
  %11 = sub nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN9PredictorC2Ev(%class.Predictor* %0) unnamed_addr #1 align 2 {
  %2 = alloca %class.Predictor*, align 8
  store %class.Predictor* %0, %class.Predictor** %2, align 8
  %3 = load %class.Predictor*, %class.Predictor** %2, align 8
  %4 = getelementptr inbounds %class.Predictor, %class.Predictor* %3, i32 0, i32 0
  store i32 2048, i32* %4, align 4
  ret void
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN9Predictor6updateEv(%class.Predictor* %0) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Predictor*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %class.Predictor* %0, %class.Predictor** %2, align 8
  %9 = load %class.Predictor*, %class.Predictor** %2, align 8
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN9Predictor6updateEvE1a to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %18, !prof !2

12:                                               ; preds = %1
  %13 = call i32 @__cxa_guard_acquire(i64* @_ZGVZN9Predictor6updateEvE1a) #2
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  invoke void @_ZN4APM1C1Ei(%class.APM1* @_ZZN9Predictor6updateEvE1a, i32 256)
          to label %16 unwind label %91

16:                                               ; preds = %15
  %17 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.APM1*)* @_ZN4APM1D2Ev to void (i8*)*), i8* bitcast (%class.APM1* @_ZZN9Predictor6updateEvE1a to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZN9Predictor6updateEvE1a) #2
  br label %18

18:                                               ; preds = %16, %12, %1
  %19 = load atomic i8, i8* bitcast (i64* @_ZGVZN9Predictor6updateEvE2a1 to i8*) acquire, align 8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %27, !prof !2

21:                                               ; preds = %18
  %22 = call i32 @__cxa_guard_acquire(i64* @_ZGVZN9Predictor6updateEvE2a1) #2
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  invoke void @_ZN4APM1C1Ei(%class.APM1* @_ZZN9Predictor6updateEvE2a1, i32 65536)
          to label %25 unwind label %95

25:                                               ; preds = %24
  %26 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.APM1*)* @_ZN4APM1D2Ev to void (i8*)*), i8* bitcast (%class.APM1* @_ZZN9Predictor6updateEvE2a1 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZN9Predictor6updateEvE2a1) #2
  br label %27

27:                                               ; preds = %25, %21, %18
  %28 = load atomic i8, i8* bitcast (i64* @_ZGVZN9Predictor6updateEvE2a2 to i8*) acquire, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %36, !prof !2

30:                                               ; preds = %27
  %31 = call i32 @__cxa_guard_acquire(i64* @_ZGVZN9Predictor6updateEvE2a2) #2
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  invoke void @_ZN4APM1C1Ei(%class.APM1* @_ZZN9Predictor6updateEvE2a2, i32 65536)
          to label %34 unwind label %99

34:                                               ; preds = %33
  %35 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.APM1*)* @_ZN4APM1D2Ev to void (i8*)*), i8* bitcast (%class.APM1* @_ZZN9Predictor6updateEvE2a2 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZN9Predictor6updateEvE2a2) #2
  br label %36

36:                                               ; preds = %34, %30, %27
  %37 = load atomic i8, i8* bitcast (i64* @_ZGVZN9Predictor6updateEvE2a3 to i8*) acquire, align 8
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %45, !prof !2

39:                                               ; preds = %36
  %40 = call i32 @__cxa_guard_acquire(i64* @_ZGVZN9Predictor6updateEvE2a3) #2
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %39
  invoke void @_ZN4APM1C1Ei(%class.APM1* @_ZZN9Predictor6updateEvE2a3, i32 65536)
          to label %43 unwind label %103

43:                                               ; preds = %42
  %44 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.APM1*)* @_ZN4APM1D2Ev to void (i8*)*), i8* bitcast (%class.APM1* @_ZZN9Predictor6updateEvE2a3 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZN9Predictor6updateEvE2a3) #2
  br label %45

45:                                               ; preds = %43, %39, %36
  %46 = load atomic i8, i8* bitcast (i64* @_ZGVZN9Predictor6updateEvE2a4 to i8*) acquire, align 8
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %54, !prof !2

48:                                               ; preds = %45
  %49 = call i32 @__cxa_guard_acquire(i64* @_ZGVZN9Predictor6updateEvE2a4) #2
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %48
  invoke void @_ZN4APM1C1Ei(%class.APM1* @_ZZN9Predictor6updateEvE2a4, i32 65536)
          to label %52 unwind label %107

52:                                               ; preds = %51
  %53 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.APM1*)* @_ZN4APM1D2Ev to void (i8*)*), i8* bitcast (%class.APM1* @_ZZN9Predictor6updateEvE2a4 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZN9Predictor6updateEvE2a4) #2
  br label %54

54:                                               ; preds = %52, %48, %45
  %55 = load atomic i8, i8* bitcast (i64* @_ZGVZN9Predictor6updateEvE2a5 to i8*) acquire, align 8
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %63, !prof !2

57:                                               ; preds = %54
  %58 = call i32 @__cxa_guard_acquire(i64* @_ZGVZN9Predictor6updateEvE2a5) #2
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %57
  invoke void @_ZN4APM1C1Ei(%class.APM1* @_ZZN9Predictor6updateEvE2a5, i32 65536)
          to label %61 unwind label %111

61:                                               ; preds = %60
  %62 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.APM1*)* @_ZN4APM1D2Ev to void (i8*)*), i8* bitcast (%class.APM1* @_ZZN9Predictor6updateEvE2a5 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZN9Predictor6updateEvE2a5) #2
  br label %63

63:                                               ; preds = %61, %57, %54
  %64 = load atomic i8, i8* bitcast (i64* @_ZGVZN9Predictor6updateEvE2a6 to i8*) acquire, align 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %72, !prof !2

66:                                               ; preds = %63
  %67 = call i32 @__cxa_guard_acquire(i64* @_ZGVZN9Predictor6updateEvE2a6) #2
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %66
  invoke void @_ZN4APM1C1Ei(%class.APM1* @_ZZN9Predictor6updateEvE2a6, i32 65536)
          to label %70 unwind label %115

70:                                               ; preds = %69
  %71 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.APM1*)* @_ZN4APM1D2Ev to void (i8*)*), i8* bitcast (%class.APM1* @_ZZN9Predictor6updateEvE2a6 to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZN9Predictor6updateEvE2a6) #2
  br label %72

72:                                               ; preds = %70, %66, %63
  %73 = load i32, i32* @c0, align 4
  %74 = load i32, i32* @y, align 4
  %75 = add nsw i32 %73, %74
  %76 = load i32, i32* @c0, align 4
  %77 = add nsw i32 %76, %75
  store i32 %77, i32* @c0, align 4
  %78 = load i32, i32* @c0, align 4
  %79 = icmp sge i32 %78, 256
  br i1 %79, label %80, label %119

80:                                               ; preds = %72
  %81 = load i32, i32* @c0, align 4
  %82 = trunc i32 %81 to i8
  %83 = load i32, i32* @pos, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* @pos, align 4
  %85 = call dereferenceable(1) i8* @_ZN3BufixEi(%class.Buf* @buf, i32 %83)
  store i8 %82, i8* %85, align 1
  %86 = load i32, i32* @c4, align 4
  %87 = shl i32 %86, 8
  %88 = load i32, i32* @c0, align 4
  %89 = add i32 %87, %88
  %90 = sub i32 %89, 256
  store i32 %90, i32* @c4, align 4
  store i32 1, i32* @c0, align 4
  br label %119

91:                                               ; preds = %15
  %92 = landingpad { i8*, i32 }
          cleanup
  %93 = extractvalue { i8*, i32 } %92, 0
  store i8* %93, i8** %3, align 8
  %94 = extractvalue { i8*, i32 } %92, 1
  store i32 %94, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZN9Predictor6updateEvE1a) #2
  br label %204

95:                                               ; preds = %24
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %3, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZN9Predictor6updateEvE2a1) #2
  br label %204

99:                                               ; preds = %33
  %100 = landingpad { i8*, i32 }
          cleanup
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %3, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZN9Predictor6updateEvE2a2) #2
  br label %204

103:                                              ; preds = %42
  %104 = landingpad { i8*, i32 }
          cleanup
  %105 = extractvalue { i8*, i32 } %104, 0
  store i8* %105, i8** %3, align 8
  %106 = extractvalue { i8*, i32 } %104, 1
  store i32 %106, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZN9Predictor6updateEvE2a3) #2
  br label %204

107:                                              ; preds = %51
  %108 = landingpad { i8*, i32 }
          cleanup
  %109 = extractvalue { i8*, i32 } %108, 0
  store i8* %109, i8** %3, align 8
  %110 = extractvalue { i8*, i32 } %108, 1
  store i32 %110, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZN9Predictor6updateEvE2a4) #2
  br label %204

111:                                              ; preds = %60
  %112 = landingpad { i8*, i32 }
          cleanup
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %3, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZN9Predictor6updateEvE2a5) #2
  br label %204

115:                                              ; preds = %69
  %116 = landingpad { i8*, i32 }
          cleanup
  %117 = extractvalue { i8*, i32 } %116, 0
  store i8* %117, i8** %3, align 8
  %118 = extractvalue { i8*, i32 } %116, 1
  store i32 %118, i32* %4, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZN9Predictor6updateEvE2a6) #2
  br label %204

119:                                              ; preds = %80, %72
  %120 = load i32, i32* @bpos, align 4
  %121 = add nsw i32 %120, 1
  %122 = and i32 %121, 7
  store i32 %122, i32* @bpos, align 4
  %123 = call i32 @_Z13contextModel2v()
  store i32 %123, i32* %5, align 4
  %124 = load i32, i32* %5, align 4
  %125 = load i32, i32* @c0, align 4
  %126 = call i32 @_ZN4APM11pEiii(%class.APM1* @_ZZN9Predictor6updateEvE1a, i32 %124, i32 %125, i32 7)
  %127 = getelementptr inbounds %class.Predictor, %class.Predictor* %9, i32 0, i32 0
  store i32 %126, i32* %127, align 4
  %128 = load i32, i32* %5, align 4
  %129 = load i32, i32* @c0, align 4
  %130 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %131 = mul nsw i32 256, %130
  %132 = add nsw i32 %129, %131
  %133 = call i32 @_ZN4APM11pEiii(%class.APM1* @_ZZN9Predictor6updateEvE2a1, i32 %128, i32 %132, i32 7)
  store i32 %133, i32* %6, align 4
  %134 = load i32, i32* %5, align 4
  %135 = load i32, i32* @c0, align 4
  %136 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %137 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %138 = call i32 @_Z4hashjjjjj(i32 %136, i32 %137, i32 -1, i32 -1, i32 -1)
  %139 = and i32 %138, 65535
  %140 = xor i32 %135, %139
  %141 = call i32 @_ZN4APM11pEiii(%class.APM1* @_ZZN9Predictor6updateEvE2a2, i32 %134, i32 %140, i32 7)
  store i32 %141, i32* %7, align 4
  %142 = load i32, i32* %5, align 4
  %143 = load i32, i32* @c0, align 4
  %144 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %145 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %146 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %147 = call i32 @_Z4hashjjjjj(i32 %144, i32 %145, i32 %146, i32 -1, i32 -1)
  %148 = and i32 %147, 65535
  %149 = xor i32 %143, %148
  %150 = call i32 @_ZN4APM11pEiii(%class.APM1* @_ZZN9Predictor6updateEvE2a3, i32 %142, i32 %149, i32 7)
  store i32 %150, i32* %8, align 4
  %151 = load i32, i32* %5, align 4
  %152 = load i32, i32* %6, align 4
  %153 = add nsw i32 %151, %152
  %154 = load i32, i32* %7, align 4
  %155 = add nsw i32 %153, %154
  %156 = load i32, i32* %8, align 4
  %157 = add nsw i32 %155, %156
  %158 = add nsw i32 %157, 2
  %159 = ashr i32 %158, 2
  store i32 %159, i32* %5, align 4
  %160 = getelementptr inbounds %class.Predictor, %class.Predictor* %9, i32 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = load i32, i32* @c0, align 4
  %163 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %164 = mul nsw i32 256, %163
  %165 = add nsw i32 %162, %164
  %166 = call i32 @_ZN4APM11pEiii(%class.APM1* @_ZZN9Predictor6updateEvE2a4, i32 %161, i32 %165, i32 7)
  store i32 %166, i32* %6, align 4
  %167 = getelementptr inbounds %class.Predictor, %class.Predictor* %9, i32 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = load i32, i32* @c0, align 4
  %170 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %171 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %172 = call i32 @_Z4hashjjjjj(i32 %170, i32 %171, i32 -1, i32 -1, i32 -1)
  %173 = and i32 %172, 65535
  %174 = xor i32 %169, %173
  %175 = call i32 @_ZN4APM11pEiii(%class.APM1* @_ZZN9Predictor6updateEvE2a5, i32 %168, i32 %174, i32 7)
  store i32 %175, i32* %7, align 4
  %176 = getelementptr inbounds %class.Predictor, %class.Predictor* %9, i32 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = load i32, i32* @c0, align 4
  %179 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 1)
  %180 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 2)
  %181 = call i32 @_ZNK3BufclEi(%class.Buf* @buf, i32 3)
  %182 = call i32 @_Z4hashjjjjj(i32 %179, i32 %180, i32 %181, i32 -1, i32 -1)
  %183 = and i32 %182, 65535
  %184 = xor i32 %178, %183
  %185 = call i32 @_ZN4APM11pEiii(%class.APM1* @_ZZN9Predictor6updateEvE2a6, i32 %177, i32 %184, i32 7)
  store i32 %185, i32* %8, align 4
  %186 = getelementptr inbounds %class.Predictor, %class.Predictor* %9, i32 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = load i32, i32* %6, align 4
  %189 = add nsw i32 %187, %188
  %190 = load i32, i32* %7, align 4
  %191 = add nsw i32 %189, %190
  %192 = load i32, i32* %8, align 4
  %193 = add nsw i32 %191, %192
  %194 = add nsw i32 %193, 2
  %195 = ashr i32 %194, 2
  %196 = getelementptr inbounds %class.Predictor, %class.Predictor* %9, i32 0, i32 0
  store i32 %195, i32* %196, align 4
  %197 = getelementptr inbounds %class.Predictor, %class.Predictor* %9, i32 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = load i32, i32* %5, align 4
  %200 = add nsw i32 %198, %199
  %201 = add nsw i32 %200, 1
  %202 = ashr i32 %201, 1
  %203 = getelementptr inbounds %class.Predictor, %class.Predictor* %9, i32 0, i32 0
  store i32 %202, i32* %203, align 4
  ret void

204:                                              ; preds = %115, %111, %107, %103, %99, %95, %91
  %205 = load i8*, i8** %3, align 8
  %206 = load i32, i32* %4, align 4
  %207 = insertvalue { i8*, i32 } undef, i8* %205, 0
  %208 = insertvalue { i8*, i32 } %207, i32 %206, 1
  resume { i8*, i32 } %208
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN4APM1D2Ev(%class.APM1* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.APM1*, align 8
  store %class.APM1* %0, %class.APM1** %2, align 8
  %3 = load %class.APM1*, %class.APM1** %2, align 8
  %4 = getelementptr inbounds %class.APM1, %class.APM1* %3, i32 0, i32 2
  call void @_ZN5ArrayItLi0EED2Ev(%class.Array.1* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_ZN4APM11pEiii(%class.APM1* %0, i32 %1, i32 %2, i32 %3) #0 comdat align 2 {
  %5 = alloca %class.APM1*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %class.APM1* %0, %class.APM1** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %11 = load %class.APM1*, %class.APM1** %5, align 8
  %12 = load i32, i32* %6, align 4
  %13 = call i32 @_ZNK7StretchclEi(%class.Stretch* @stretch, i32 %12)
  store i32 %13, i32* %6, align 4
  %14 = load i32, i32* @y, align 4
  %15 = shl i32 %14, 16
  %16 = load i32, i32* @y, align 4
  %17 = load i32, i32* %8, align 4
  %18 = shl i32 %16, %17
  %19 = add nsw i32 %15, %18
  %20 = load i32, i32* @y, align 4
  %21 = sub nsw i32 %19, %20
  %22 = load i32, i32* @y, align 4
  %23 = sub nsw i32 %21, %22
  store i32 %23, i32* %9, align 4
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %class.APM1, %class.APM1* %11, i32 0, i32 2
  %26 = getelementptr inbounds %class.APM1, %class.APM1* %11, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = call dereferenceable(2) i16* @_ZN5ArrayItLi0EEixEi(%class.Array.1* %25, i32 %27)
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %24, %30
  %32 = load i32, i32* %8, align 4
  %33 = ashr i32 %31, %32
  %34 = getelementptr inbounds %class.APM1, %class.APM1* %11, i32 0, i32 2
  %35 = getelementptr inbounds %class.APM1, %class.APM1* %11, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = call dereferenceable(2) i16* @_ZN5ArrayItLi0EEixEi(%class.Array.1* %34, i32 %36)
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = add nsw i32 %39, %33
  %41 = trunc i32 %40 to i16
  store i16 %41, i16* %37, align 2
  %42 = load i32, i32* %9, align 4
  %43 = getelementptr inbounds %class.APM1, %class.APM1* %11, i32 0, i32 2
  %44 = getelementptr inbounds %class.APM1, %class.APM1* %11, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = add nsw i32 %45, 1
  %47 = call dereferenceable(2) i16* @_ZN5ArrayItLi0EEixEi(%class.Array.1* %43, i32 %46)
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = sub nsw i32 %42, %49
  %51 = load i32, i32* %8, align 4
  %52 = ashr i32 %50, %51
  %53 = getelementptr inbounds %class.APM1, %class.APM1* %11, i32 0, i32 2
  %54 = getelementptr inbounds %class.APM1, %class.APM1* %11, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = add nsw i32 %55, 1
  %57 = call dereferenceable(2) i16* @_ZN5ArrayItLi0EEixEi(%class.Array.1* %53, i32 %56)
  %58 = load i16, i16* %57, align 2
  %59 = zext i16 %58 to i32
  %60 = add nsw i32 %59, %52
  %61 = trunc i32 %60 to i16
  store i16 %61, i16* %57, align 2
  %62 = load i32, i32* %6, align 4
  %63 = and i32 %62, 127
  store i32 %63, i32* %10, align 4
  %64 = load i32, i32* %6, align 4
  %65 = add nsw i32 %64, 2048
  %66 = ashr i32 %65, 7
  %67 = load i32, i32* %7, align 4
  %68 = mul nsw i32 %67, 33
  %69 = add nsw i32 %66, %68
  %70 = getelementptr inbounds %class.APM1, %class.APM1* %11, i32 0, i32 0
  store i32 %69, i32* %70, align 8
  %71 = getelementptr inbounds %class.APM1, %class.APM1* %11, i32 0, i32 2
  %72 = getelementptr inbounds %class.APM1, %class.APM1* %11, i32 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = call dereferenceable(2) i16* @_ZN5ArrayItLi0EEixEi(%class.Array.1* %71, i32 %73)
  %75 = load i16, i16* %74, align 2
  %76 = zext i16 %75 to i32
  %77 = load i32, i32* %10, align 4
  %78 = sub nsw i32 128, %77
  %79 = mul nsw i32 %76, %78
  %80 = getelementptr inbounds %class.APM1, %class.APM1* %11, i32 0, i32 2
  %81 = getelementptr inbounds %class.APM1, %class.APM1* %11, i32 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = add nsw i32 %82, 1
  %84 = call dereferenceable(2) i16* @_ZN5ArrayItLi0EEixEi(%class.Array.1* %80, i32 %83)
  %85 = load i16, i16* %84, align 2
  %86 = zext i16 %85 to i32
  %87 = load i32, i32* %10, align 4
  %88 = mul nsw i32 %86, %87
  %89 = add nsw i32 %79, %88
  %90 = ashr i32 %89, 11
  ret i32 %90
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN7EncoderC2E4ModeP8_IO_FILE(%class.Encoder* %0, i32 %1, %struct._IO_FILE* %2) unnamed_addr #0 align 2 {
  %4 = alloca %class.Encoder*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %class.Encoder* %0, %class.Encoder** %4, align 8
  store i32 %1, i32* %5, align 4
  store %struct._IO_FILE* %2, %struct._IO_FILE** %6, align 8
  %9 = load %class.Encoder*, %class.Encoder** %4, align 8
  %10 = getelementptr inbounds %class.Encoder, %class.Encoder* %9, i32 0, i32 0
  call void @_ZN9PredictorC1Ev(%class.Predictor* %10)
  %11 = getelementptr inbounds %class.Encoder, %class.Encoder* %9, i32 0, i32 1
  %12 = load i32, i32* %5, align 4
  store i32 %12, i32* %11, align 4
  %13 = getelementptr inbounds %class.Encoder, %class.Encoder* %9, i32 0, i32 2
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  store %struct._IO_FILE* %14, %struct._IO_FILE** %13, align 8
  %15 = getelementptr inbounds %class.Encoder, %class.Encoder* %9, i32 0, i32 3
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %class.Encoder, %class.Encoder* %9, i32 0, i32 4
  store i32 -1, i32* %16, align 4
  %17 = getelementptr inbounds %class.Encoder, %class.Encoder* %9, i32 0, i32 5
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %class.Encoder, %class.Encoder* %9, i32 0, i32 6
  store %struct._IO_FILE* null, %struct._IO_FILE** %18, align 8
  %19 = load i32, i32* @level, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %43

21:                                               ; preds = %3
  %22 = getelementptr inbounds %class.Encoder, %class.Encoder* %9, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %43

25:                                               ; preds = %21
  store i32 0, i32* %7, align 4
  br label %26

26:                                               ; preds = %39, %25
  %27 = load i32, i32* %7, align 4
  %28 = icmp slt i32 %27, 4
  br i1 %28, label %29, label %42

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.Encoder, %class.Encoder* %9, i32 0, i32 5
  %31 = load i32, i32* %30, align 8
  %32 = shl i32 %31, 8
  %33 = getelementptr inbounds %class.Encoder, %class.Encoder* %9, i32 0, i32 2
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %33, align 8
  %35 = call i32 @getc(%struct._IO_FILE* %34)
  %36 = and i32 %35, 255
  %37 = add i32 %32, %36
  %38 = getelementptr inbounds %class.Encoder, %class.Encoder* %9, i32 0, i32 5
  store i32 %37, i32* %38, align 8
  br label %39

39:                                               ; preds = %29
  %40 = load i32, i32* %7, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %7, align 4
  br label %26

42:                                               ; preds = %26
  br label %43

43:                                               ; preds = %42, %21, %3
  store i32 0, i32* %8, align 4
  br label %44

44:                                               ; preds = %56, %43
  %45 = load i32, i32* %8, align 4
  %46 = icmp slt i32 %45, 1024
  br i1 %46, label %47, label %59

47:                                               ; preds = %44
  %48 = load i32, i32* %8, align 4
  %49 = load i32, i32* %8, align 4
  %50 = add nsw i32 %48, %49
  %51 = add nsw i32 %50, 3
  %52 = sdiv i32 16384, %51
  %53 = load i32, i32* %8, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [1024 x i32], [1024 x i32]* @_ZL2dt, i64 0, i64 %54
  store i32 %52, i32* %55, align 4
  br label %56

56:                                               ; preds = %47
  %57 = load i32, i32* %8, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %8, align 4
  br label %44

59:                                               ; preds = %44
  ret void
}

declare dso_local i32 @getc(%struct._IO_FILE*) #10

; Function Attrs: noinline uwtable
define dso_local void @_ZN7Encoder5flushEv(%class.Encoder* %0) #0 align 2 {
  %2 = alloca %class.Encoder*, align 8
  store %class.Encoder* %0, %class.Encoder** %2, align 8
  %3 = load %class.Encoder*, %class.Encoder** %2, align 8
  %4 = getelementptr inbounds %class.Encoder, %class.Encoder* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %17

7:                                                ; preds = %1
  %8 = load i32, i32* @level, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.Encoder, %class.Encoder* %3, i32 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = lshr i32 %12, 24
  %14 = getelementptr inbounds %class.Encoder, %class.Encoder* %3, i32 0, i32 2
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %16 = call i32 @putc(i32 %13, %struct._IO_FILE* %15)
  br label %17

17:                                               ; preds = %10, %7, %1
  ret void
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) #10

; Function Attrs: noinline uwtable
define dso_local i32 @_Z6detectP8_IO_FILEi8Filetype(%struct._IO_FILE* %0, i32 %1, i32 %2) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i32, align 4
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca %class.Array, align 8
  %12 = alloca %class.Array, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca [32 x i8], align 16
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %56 = call i64 @ftell(%struct._IO_FILE* %55)
  store i64 %56, i64* %10, align 8
  call void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* %11, i32 256)
  invoke void @_ZN5ArrayIiLi0EEC2Ei(%class.Array* %12, i32 256)
          to label %57 unwind label %69

57:                                               ; preds = %3
  store i32 0, i32* %15, align 4
  store i32 0, i32* %16, align 4
  store i32 0, i32* %17, align 4
  store i32 0, i32* %18, align 4
  store i32 0, i32* %19, align 4
  store i32 0, i32* %20, align 4
  store i32 0, i32* %21, align 4
  store i32 0, i32* %22, align 4
  store i32 0, i32* %23, align 4
  store i32 0, i32* %24, align 4
  store i32 -1, i32* %25, align 4
  store i32 0, i32* %26, align 4
  store i32 0, i32* %27, align 4
  store i32 0, i32* %28, align 4
  store i32 0, i32* %29, align 4
  store i32 0, i32* %30, align 4
  store i32 0, i32* %31, align 4
  store i32 0, i32* %32, align 4
  store i32 0, i32* %33, align 4
  store i32 0, i32* %35, align 4
  store i32 0, i32* %36, align 4
  store i32 0, i32* %37, align 4
  store i32 0, i32* %38, align 4
  store i32 0, i32* %39, align 4
  store i32 -1, i32* %40, align 4
  store i32 0, i32* %41, align 4
  store i32 0, i32* %42, align 4
  store i32 0, i32* %43, align 4
  store i32 0, i32* %44, align 4
  store i32 0, i32* %45, align 4
  store i32 0, i32* %46, align 4
  store i32 0, i32* %47, align 4
  br label %58

58:                                               ; preds = %865, %57
  %59 = load i32, i32* %47, align 4
  %60 = load i32, i32* %6, align 4
  %61 = icmp slt i32 %59, %60
  br i1 %61, label %62, label %868

62:                                               ; preds = %58
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %64 = invoke i32 @getc(%struct._IO_FILE* %63)
          to label %65 unwind label %73

65:                                               ; preds = %62
  store i32 %64, i32* %48, align 4
  %66 = load i32, i32* %48, align 4
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %68, label %77

68:                                               ; preds = %65
  store i32 -1, i32* %4, align 4
  store i32 1, i32* %49, align 4
  br label %870

69:                                               ; preds = %3
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %13, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %14, align 4
  br label %872

73:                                               ; preds = %856, %843, %839, %830, %814, %807, %795, %780, %769, %749, %735, %587, %562, %436, %421, %406, %392, %165, %62
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %13, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %14, align 4
  call void @_ZN5ArrayIiLi0EED2Ev(%class.Array* %12) #2
  br label %872

77:                                               ; preds = %65
  %78 = load i32, i32* %8, align 4
  %79 = shl i32 %78, 8
  %80 = load i32, i32* %9, align 4
  %81 = lshr i32 %80, 24
  %82 = or i32 %79, %81
  store i32 %82, i32* %8, align 4
  %83 = load i32, i32* %9, align 4
  %84 = shl i32 %83, 8
  %85 = load i32, i32* %48, align 4
  %86 = or i32 %84, %85
  store i32 %86, i32* %9, align 4
  %87 = load i32, i32* %35, align 4
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %77
  %90 = load i32, i32* %47, align 4
  %91 = icmp sge i32 %90, 3
  br i1 %91, label %92, label %100

92:                                               ; preds = %89
  %93 = load i32, i32* %9, align 4
  %94 = and i32 %93, -16
  %95 = icmp eq i32 %94, -2555936
  br i1 %95, label %96, label %100

96:                                               ; preds = %92
  %97 = load i32, i32* %47, align 4
  store i32 %97, i32* %35, align 4
  %98 = load i32, i32* %47, align 4
  %99 = add nsw i32 %98, 2
  store i32 %99, i32* %38, align 4
  br label %100

100:                                              ; preds = %96, %92, %89, %77
  %101 = load i32, i32* %35, align 4
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %176

103:                                              ; preds = %100
  %104 = load i32, i32* %38, align 4
  %105 = load i32, i32* %47, align 4
  %106 = icmp eq i32 %104, %105
  br i1 %106, label %107, label %121

107:                                              ; preds = %103
  %108 = load i32, i32* %9, align 4
  %109 = and i32 %108, -1048576
  %110 = icmp eq i32 %109, -2097152
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i32, i32* %9, align 4
  %113 = and i32 %112, -65536
  %114 = icmp eq i32 %113, -131072
  br i1 %114, label %115, label %121

115:                                              ; preds = %111, %107
  %116 = load i32, i32* %47, align 4
  %117 = load i32, i32* %9, align 4
  %118 = and i32 %117, 65535
  %119 = add i32 %116, %118
  %120 = add i32 %119, 2
  store i32 %120, i32* %38, align 4
  br label %121

121:                                              ; preds = %115, %111, %103
  %122 = load i32, i32* %38, align 4
  %123 = load i32, i32* %47, align 4
  %124 = icmp slt i32 %122, %123
  br i1 %124, label %125, label %140

125:                                              ; preds = %121
  %126 = load i32, i32* %47, align 4
  %127 = load i32, i32* %35, align 4
  %128 = sub nsw i32 %126, %127
  %129 = icmp slt i32 %128, 65536
  br i1 %129, label %130, label %140

130:                                              ; preds = %125
  %131 = load i32, i32* %8, align 4
  %132 = and i32 %131, 255
  %133 = icmp eq i32 %132, 255
  br i1 %133, label %134, label %140

134:                                              ; preds = %130
  %135 = load i32, i32* %9, align 4
  %136 = and i32 %135, -16776961
  %137 = icmp eq i32 %136, -1073741816
  br i1 %137, label %138, label %140

138:                                              ; preds = %134
  %139 = load i32, i32* %47, align 4
  store i32 %139, i32* %36, align 4
  br label %140

140:                                              ; preds = %138, %134, %130, %125, %121
  %141 = load i32, i32* %36, align 4
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %143, label %175

143:                                              ; preds = %140
  %144 = load i32, i32* %36, align 4
  %145 = load i32, i32* %35, align 4
  %146 = icmp sgt i32 %144, %145
  br i1 %146, label %147, label %175

147:                                              ; preds = %143
  %148 = load i32, i32* %47, align 4
  %149 = load i32, i32* %35, align 4
  %150 = sub nsw i32 %148, %149
  %151 = icmp slt i32 %150, 65536
  br i1 %151, label %152, label %175

152:                                              ; preds = %147
  %153 = load i32, i32* %47, align 4
  %154 = load i32, i32* %36, align 4
  %155 = sub nsw i32 %153, %154
  %156 = icmp slt i32 %155, 4096
  br i1 %156, label %157, label %175

157:                                              ; preds = %152
  %158 = load i32, i32* %9, align 4
  %159 = and i32 %158, 65535
  %160 = icmp eq i32 %159, 65498
  br i1 %160, label %161, label %175

161:                                              ; preds = %157
  %162 = load i32, i32* %47, align 4
  store i32 %162, i32* %37, align 4
  %163 = load i32, i32* %7, align 4
  %164 = icmp ne i32 %163, 1
  br i1 %164, label %165, label %174

165:                                              ; preds = %161
  %166 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %167 = load i64, i64* %10, align 8
  %168 = load i32, i32* %35, align 4
  %169 = sext i32 %168 to i64
  %170 = add nsw i64 %167, %169
  %171 = sub nsw i64 %170, 3
  %172 = invoke i32 @fseek(%struct._IO_FILE* %166, i64 %171, i32 0)
          to label %173 unwind label %73

173:                                              ; preds = %165
  store i32 1, i32* %4, align 4
  store i32 1, i32* %49, align 4
  br label %870

174:                                              ; preds = %161
  br label %175

175:                                              ; preds = %174, %157, %152, %147, %143, %140
  br label %176

176:                                              ; preds = %175, %100
  %177 = load i32, i32* %7, align 4
  %178 = icmp eq i32 %177, 1
  br i1 %178, label %179, label %199

179:                                              ; preds = %176
  %180 = load i32, i32* %37, align 4
  %181 = icmp ne i32 %180, 0
  br i1 %181, label %182, label %199

182:                                              ; preds = %179
  %183 = load i32, i32* %47, align 4
  %184 = load i32, i32* %37, align 4
  %185 = icmp sgt i32 %183, %184
  br i1 %185, label %186, label %199

186:                                              ; preds = %182
  %187 = load i32, i32* %9, align 4
  %188 = and i32 %187, 65280
  %189 = icmp eq i32 %188, 65280
  br i1 %189, label %190, label %199

190:                                              ; preds = %186
  %191 = load i32, i32* %9, align 4
  %192 = and i32 %191, 255
  %193 = icmp ne i32 %192, 0
  br i1 %193, label %194, label %199

194:                                              ; preds = %190
  %195 = load i32, i32* %9, align 4
  %196 = and i32 %195, 248
  %197 = icmp ne i32 %196, 208
  br i1 %197, label %198, label %199

198:                                              ; preds = %194
  store i32 0, i32* %4, align 4
  store i32 1, i32* %49, align 4
  br label %870

199:                                              ; preds = %194, %190, %186, %182, %179, %176
  %200 = load i32, i32* %9, align 4
  %201 = and i32 %200, 65535
  %202 = icmp eq i32 %201, 16973
  br i1 %202, label %203, label %205

203:                                              ; preds = %199
  %204 = load i32, i32* %47, align 4
  store i32 %204, i32* %18, align 4
  br label %205

205:                                              ; preds = %203, %199
  %206 = load i32, i32* %18, align 4
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %208, label %446

208:                                              ; preds = %205
  %209 = load i32, i32* %47, align 4
  %210 = load i32, i32* %18, align 4
  %211 = sub nsw i32 %209, %210
  %212 = icmp eq i32 %211, 4
  br i1 %212, label %213, label %229

213:                                              ; preds = %208
  %214 = load i32, i32* %9, align 4
  %215 = and i32 %214, -16777216
  %216 = lshr i32 %215, 24
  %217 = load i32, i32* %9, align 4
  %218 = and i32 %217, 16711680
  %219 = lshr i32 %218, 8
  %220 = or i32 %216, %219
  %221 = load i32, i32* %9, align 4
  %222 = and i32 %221, 65280
  %223 = shl i32 %222, 8
  %224 = or i32 %220, %223
  %225 = load i32, i32* %9, align 4
  %226 = and i32 %225, 255
  %227 = shl i32 %226, 24
  %228 = or i32 %224, %227
  store i32 %228, i32* %20, align 4
  br label %229

229:                                              ; preds = %213, %208
  %230 = load i32, i32* %47, align 4
  %231 = load i32, i32* %18, align 4
  %232 = sub nsw i32 %230, %231
  %233 = icmp eq i32 %232, 12
  br i1 %233, label %234, label %250

234:                                              ; preds = %229
  %235 = load i32, i32* %9, align 4
  %236 = and i32 %235, -16777216
  %237 = lshr i32 %236, 24
  %238 = load i32, i32* %9, align 4
  %239 = and i32 %238, 16711680
  %240 = lshr i32 %239, 8
  %241 = or i32 %237, %240
  %242 = load i32, i32* %9, align 4
  %243 = and i32 %242, 65280
  %244 = shl i32 %243, 8
  %245 = or i32 %241, %244
  %246 = load i32, i32* %9, align 4
  %247 = and i32 %246, 255
  %248 = shl i32 %247, 24
  %249 = or i32 %245, %248
  store i32 %249, i32* %24, align 4
  br label %250

250:                                              ; preds = %234, %229
  %251 = load i32, i32* %47, align 4
  %252 = load i32, i32* %18, align 4
  %253 = sub nsw i32 %251, %252
  %254 = icmp eq i32 %253, 16
  br i1 %254, label %255, label %259

255:                                              ; preds = %250
  %256 = load i32, i32* %9, align 4
  %257 = icmp ne i32 %256, 671088640
  br i1 %257, label %258, label %259

258:                                              ; preds = %255
  store i32 0, i32* %20, align 4
  store i32 0, i32* %21, align 4
  store i32 0, i32* %18, align 4
  store i32 -1, i32* %25, align 4
  br label %259

259:                                              ; preds = %258, %255, %250
  %260 = load i32, i32* %47, align 4
  %261 = load i32, i32* %18, align 4
  %262 = sub nsw i32 %260, %261
  %263 = icmp eq i32 %262, 20
  br i1 %263, label %264, label %284

264:                                              ; preds = %259
  %265 = load i32, i32* %9, align 4
  %266 = and i32 %265, -16777216
  %267 = lshr i32 %266, 24
  %268 = load i32, i32* %9, align 4
  %269 = and i32 %268, 16711680
  %270 = lshr i32 %269, 8
  %271 = or i32 %267, %270
  %272 = load i32, i32* %9, align 4
  %273 = and i32 %272, 65280
  %274 = shl i32 %273, 8
  %275 = or i32 %271, %274
  %276 = load i32, i32* %9, align 4
  %277 = and i32 %276, 255
  %278 = shl i32 %277, 24
  %279 = or i32 %275, %278
  store i32 %279, i32* %22, align 4
  %280 = load i32, i32* %22, align 4
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %264
  store i32 0, i32* %20, align 4
  store i32 0, i32* %21, align 4
  store i32 0, i32* %18, align 4
  store i32 -1, i32* %25, align 4
  br label %283

283:                                              ; preds = %282, %264
  br label %284

284:                                              ; preds = %283, %259
  %285 = load i32, i32* %47, align 4
  %286 = load i32, i32* %18, align 4
  %287 = sub nsw i32 %285, %286
  %288 = icmp eq i32 %287, 24
  br i1 %288, label %289, label %309

289:                                              ; preds = %284
  %290 = load i32, i32* %9, align 4
  %291 = and i32 %290, -16777216
  %292 = lshr i32 %291, 24
  %293 = load i32, i32* %9, align 4
  %294 = and i32 %293, 16711680
  %295 = lshr i32 %294, 8
  %296 = or i32 %292, %295
  %297 = load i32, i32* %9, align 4
  %298 = and i32 %297, 65280
  %299 = shl i32 %298, 8
  %300 = or i32 %296, %299
  %301 = load i32, i32* %9, align 4
  %302 = and i32 %301, 255
  %303 = shl i32 %302, 24
  %304 = or i32 %300, %303
  store i32 %304, i32* %23, align 4
  %305 = load i32, i32* %23, align 4
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %289
  store i32 0, i32* %20, align 4
  store i32 0, i32* %21, align 4
  store i32 0, i32* %18, align 4
  store i32 -1, i32* %25, align 4
  br label %308

308:                                              ; preds = %307, %289
  br label %309

309:                                              ; preds = %308, %284
  %310 = load i32, i32* %47, align 4
  %311 = load i32, i32* %18, align 4
  %312 = sub nsw i32 %310, %311
  %313 = icmp eq i32 %312, 27
  br i1 %313, label %314, label %316

314:                                              ; preds = %309
  %315 = load i32, i32* %48, align 4
  store i32 %315, i32* %21, align 4
  br label %316

316:                                              ; preds = %314, %309
  %317 = load i32, i32* %47, align 4
  %318 = load i32, i32* %18, align 4
  %319 = sub nsw i32 %317, %318
  %320 = icmp eq i32 %319, 31
  br i1 %320, label %321, label %327

321:                                              ; preds = %316
  %322 = load i32, i32* %9, align 4
  store i32 %322, i32* %25, align 4
  %323 = load i32, i32* %25, align 4
  %324 = icmp ne i32 %323, 0
  br i1 %324, label %325, label %326

325:                                              ; preds = %321
  store i32 0, i32* %20, align 4
  store i32 0, i32* %21, align 4
  store i32 0, i32* %18, align 4
  store i32 -1, i32* %25, align 4
  br label %326

326:                                              ; preds = %325, %321
  br label %327

327:                                              ; preds = %326, %316
  %328 = load i32, i32* %7, align 4
  %329 = icmp eq i32 %328, 2
  br i1 %329, label %336, label %330

330:                                              ; preds = %327
  %331 = load i32, i32* %7, align 4
  %332 = icmp eq i32 %331, 3
  br i1 %332, label %336, label %333

333:                                              ; preds = %330
  %334 = load i32, i32* %7, align 4
  %335 = icmp eq i32 %334, 4
  br i1 %335, label %336, label %400

336:                                              ; preds = %333, %330, %327
  %337 = load i32, i32* %21, align 4
  %338 = icmp eq i32 %337, 4
  br i1 %338, label %345, label %339

339:                                              ; preds = %336
  %340 = load i32, i32* %21, align 4
  %341 = icmp eq i32 %340, 8
  br i1 %341, label %345, label %342

342:                                              ; preds = %339
  %343 = load i32, i32* %21, align 4
  %344 = icmp eq i32 %343, 24
  br i1 %344, label %345, label %400

345:                                              ; preds = %342, %339, %336
  %346 = load i32, i32* %25, align 4
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %400

348:                                              ; preds = %345
  store i32 0, i32* %50, align 4
  %349 = load i32, i32* %21, align 4
  %350 = icmp eq i32 %349, 4
  br i1 %350, label %351, label %363

351:                                              ; preds = %348
  %352 = load i32, i32* %20, align 4
  %353 = load i32, i32* %22, align 4
  %354 = load i32, i32* %23, align 4
  %355 = mul nsw i32 %353, %354
  %356 = ashr i32 %355, 1
  %357 = load i32, i32* %24, align 4
  %358 = add nsw i32 %356, %357
  store i32 %358, i32* %50, align 4
  %359 = icmp ne i32 %352, %358
  br i1 %359, label %360, label %362

360:                                              ; preds = %351
  %361 = load i32, i32* %50, align 4
  store i32 %361, i32* %20, align 4
  br label %362

362:                                              ; preds = %360, %351
  br label %363

363:                                              ; preds = %362, %348
  %364 = load i32, i32* %21, align 4
  %365 = icmp eq i32 %364, 8
  br i1 %365, label %366, label %377

366:                                              ; preds = %363
  %367 = load i32, i32* %20, align 4
  %368 = load i32, i32* %22, align 4
  %369 = load i32, i32* %23, align 4
  %370 = mul nsw i32 %368, %369
  %371 = load i32, i32* %24, align 4
  %372 = add nsw i32 %370, %371
  store i32 %372, i32* %50, align 4
  %373 = icmp ne i32 %367, %372
  br i1 %373, label %374, label %376

374:                                              ; preds = %366
  %375 = load i32, i32* %50, align 4
  store i32 %375, i32* %20, align 4
  br label %376

376:                                              ; preds = %374, %366
  br label %377

377:                                              ; preds = %376, %363
  %378 = load i32, i32* %21, align 4
  %379 = icmp eq i32 %378, 24
  br i1 %379, label %380, label %392

380:                                              ; preds = %377
  %381 = load i32, i32* %20, align 4
  %382 = load i32, i32* %22, align 4
  %383 = load i32, i32* %23, align 4
  %384 = mul nsw i32 %382, %383
  %385 = mul nsw i32 %384, 3
  %386 = load i32, i32* %24, align 4
  %387 = add nsw i32 %385, %386
  store i32 %387, i32* %50, align 4
  %388 = icmp ne i32 %381, %387
  br i1 %388, label %389, label %391

389:                                              ; preds = %380
  %390 = load i32, i32* %50, align 4
  store i32 %390, i32* %20, align 4
  br label %391

391:                                              ; preds = %389, %380
  br label %392

392:                                              ; preds = %391, %377
  %393 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %394 = load i64, i64* %10, align 8
  %395 = load i32, i32* %20, align 4
  %396 = sext i32 %395 to i64
  %397 = add nsw i64 %394, %396
  %398 = invoke i32 @fseek(%struct._IO_FILE* %393, i64 %397, i32 0)
          to label %399 unwind label %73

399:                                              ; preds = %392
  store i32 0, i32* %4, align 4
  store i32 1, i32* %49, align 4
  br label %870

400:                                              ; preds = %345, %342, %333
  %401 = load i32, i32* %21, align 4
  %402 = icmp eq i32 %401, 4
  br i1 %402, label %403, label %415

403:                                              ; preds = %400
  %404 = load i32, i32* %25, align 4
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %406, label %415

406:                                              ; preds = %403
  %407 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %408 = load i64, i64* %10, align 8
  %409 = load i32, i32* %18, align 4
  %410 = sext i32 %409 to i64
  %411 = add nsw i64 %408, %410
  %412 = sub nsw i64 %411, 1
  %413 = invoke i32 @fseek(%struct._IO_FILE* %407, i64 %412, i32 0)
          to label %414 unwind label %73

414:                                              ; preds = %406
  store i32 2, i32* %4, align 4
  store i32 1, i32* %49, align 4
  br label %870

415:                                              ; preds = %403, %400
  %416 = load i32, i32* %21, align 4
  %417 = icmp eq i32 %416, 8
  br i1 %417, label %418, label %430

418:                                              ; preds = %415
  %419 = load i32, i32* %25, align 4
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %421, label %430

421:                                              ; preds = %418
  %422 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %423 = load i64, i64* %10, align 8
  %424 = load i32, i32* %18, align 4
  %425 = sext i32 %424 to i64
  %426 = add nsw i64 %423, %425
  %427 = sub nsw i64 %426, 1
  %428 = invoke i32 @fseek(%struct._IO_FILE* %422, i64 %427, i32 0)
          to label %429 unwind label %73

429:                                              ; preds = %421
  store i32 3, i32* %4, align 4
  store i32 1, i32* %49, align 4
  br label %870

430:                                              ; preds = %418, %415
  %431 = load i32, i32* %21, align 4
  %432 = icmp eq i32 %431, 24
  br i1 %432, label %433, label %445

433:                                              ; preds = %430
  %434 = load i32, i32* %25, align 4
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %445

436:                                              ; preds = %433
  %437 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %438 = load i64, i64* %10, align 8
  %439 = load i32, i32* %18, align 4
  %440 = sext i32 %439 to i64
  %441 = add nsw i64 %438, %440
  %442 = sub nsw i64 %441, 1
  %443 = invoke i32 @fseek(%struct._IO_FILE* %437, i64 %442, i32 0)
          to label %444 unwind label %73

444:                                              ; preds = %436
  store i32 4, i32* %4, align 4
  store i32 1, i32* %49, align 4
  br label %870

445:                                              ; preds = %433, %430
  br label %446

446:                                              ; preds = %445, %205
  %447 = load i32, i32* %9, align 4
  %448 = and i32 %447, 16777215
  %449 = icmp eq i32 %448, 5256458
  br i1 %449, label %450, label %452

450:                                              ; preds = %446
  %451 = load i32, i32* %47, align 4
  store i32 %451, i32* %26, align 4
  br label %452

452:                                              ; preds = %450, %446
  %453 = load i32, i32* %26, align 4
  %454 = icmp ne i32 %453, 0
  br i1 %454, label %455, label %597

455:                                              ; preds = %452
  %456 = load i32, i32* %47, align 4
  %457 = load i32, i32* %26, align 4
  %458 = sub nsw i32 %456, %457
  %459 = icmp eq i32 %458, 1
  br i1 %459, label %460, label %464

460:                                              ; preds = %455
  %461 = load i32, i32* %48, align 4
  %462 = icmp eq i32 %461, 35
  br i1 %462, label %463, label %464

463:                                              ; preds = %460
  store i32 1, i32* %28, align 4
  br label %464

464:                                              ; preds = %463, %460, %455
  %465 = load i32, i32* %28, align 4
  %466 = icmp ne i32 %465, 0
  br i1 %466, label %487, label %467

467:                                              ; preds = %464
  %468 = load i32, i32* %48, align 4
  %469 = icmp eq i32 %468, 32
  br i1 %469, label %470, label %487

470:                                              ; preds = %467
  %471 = load i32, i32* %29, align 4
  %472 = icmp ne i32 %471, 0
  br i1 %472, label %487, label %473

473:                                              ; preds = %470
  %474 = load i32, i32* %32, align 4
  %475 = icmp ne i32 %474, 0
  br i1 %475, label %476, label %487

476:                                              ; preds = %473
  %477 = load i32, i32* %32, align 4
  %478 = add nsw i32 %477, 1
  store i32 %478, i32* %32, align 4
  %479 = sext i32 %477 to i64
  %480 = getelementptr inbounds [32 x i8], [32 x i8]* %34, i64 0, i64 %479
  store i8 0, i8* %480, align 1
  %481 = getelementptr inbounds [32 x i8], [32 x i8]* %34, i64 0, i64 0
  %482 = call i32 @atoi(i8* %481) #19
  store i32 %482, i32* %29, align 4
  %483 = load i32, i32* %29, align 4
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %485, label %486

485:                                              ; preds = %476
  store i32 0, i32* %28, align 4
  store i32 0, i32* %33, align 4
  store i32 0, i32* %30, align 4
  store i32 0, i32* %29, align 4
  store i32 0, i32* %32, align 4
  store i32 0, i32* %26, align 4
  br label %486

486:                                              ; preds = %485, %476
  store i32 0, i32* %32, align 4
  br label %487

487:                                              ; preds = %486, %473, %470, %467, %464
  %488 = load i32, i32* %28, align 4
  %489 = icmp ne i32 %488, 0
  br i1 %489, label %510, label %490

490:                                              ; preds = %487
  %491 = load i32, i32* %48, align 4
  %492 = icmp eq i32 %491, 10
  br i1 %492, label %493, label %510

493:                                              ; preds = %490
  %494 = load i32, i32* %30, align 4
  %495 = icmp ne i32 %494, 0
  br i1 %495, label %510, label %496

496:                                              ; preds = %493
  %497 = load i32, i32* %32, align 4
  %498 = icmp ne i32 %497, 0
  br i1 %498, label %499, label %510

499:                                              ; preds = %496
  %500 = load i32, i32* %32, align 4
  %501 = add nsw i32 %500, 1
  store i32 %501, i32* %32, align 4
  %502 = sext i32 %500 to i64
  %503 = getelementptr inbounds [32 x i8], [32 x i8]* %34, i64 0, i64 %502
  store i8 0, i8* %503, align 1
  %504 = getelementptr inbounds [32 x i8], [32 x i8]* %34, i64 0, i64 0
  %505 = call i32 @atoi(i8* %504) #19
  store i32 %505, i32* %30, align 4
  %506 = load i32, i32* %30, align 4
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %508, label %509

508:                                              ; preds = %499
  store i32 0, i32* %28, align 4
  store i32 0, i32* %33, align 4
  store i32 0, i32* %30, align 4
  store i32 0, i32* %29, align 4
  store i32 0, i32* %32, align 4
  store i32 0, i32* %26, align 4
  br label %509

509:                                              ; preds = %508, %499
  store i32 0, i32* %32, align 4
  br label %510

510:                                              ; preds = %509, %496, %493, %490, %487
  %511 = load i32, i32* %28, align 4
  %512 = icmp ne i32 %511, 0
  br i1 %512, label %529, label %513

513:                                              ; preds = %510
  %514 = load i32, i32* %48, align 4
  %515 = icmp eq i32 %514, 10
  br i1 %515, label %516, label %529

516:                                              ; preds = %513
  %517 = load i32, i32* %33, align 4
  %518 = icmp ne i32 %517, 0
  br i1 %518, label %529, label %519

519:                                              ; preds = %516
  %520 = load i32, i32* %32, align 4
  %521 = icmp ne i32 %520, 0
  br i1 %521, label %522, label %529

522:                                              ; preds = %519
  %523 = load i32, i32* %32, align 4
  %524 = add nsw i32 %523, 1
  store i32 %524, i32* %32, align 4
  %525 = sext i32 %523 to i64
  %526 = getelementptr inbounds [32 x i8], [32 x i8]* %34, i64 0, i64 %525
  store i8 0, i8* %526, align 1
  %527 = getelementptr inbounds [32 x i8], [32 x i8]* %34, i64 0, i64 0
  %528 = call i32 @atoi(i8* %527) #19
  store i32 %528, i32* %33, align 4
  store i32 0, i32* %32, align 4
  br label %529

529:                                              ; preds = %522, %519, %516, %513, %510
  %530 = load i32, i32* %28, align 4
  %531 = icmp ne i32 %530, 0
  br i1 %531, label %539, label %532

532:                                              ; preds = %529
  %533 = load i32, i32* %48, align 4
  %534 = trunc i32 %533 to i8
  %535 = load i32, i32* %32, align 4
  %536 = add nsw i32 %535, 1
  store i32 %536, i32* %32, align 4
  %537 = sext i32 %535 to i64
  %538 = getelementptr inbounds [32 x i8], [32 x i8]* %34, i64 0, i64 %537
  store i8 %534, i8* %538, align 1
  br label %539

539:                                              ; preds = %532, %529
  %540 = load i32, i32* %32, align 4
  %541 = icmp sge i32 %540, 32
  br i1 %541, label %542, label %543

542:                                              ; preds = %539
  store i32 0, i32* %28, align 4
  store i32 0, i32* %33, align 4
  store i32 0, i32* %30, align 4
  store i32 0, i32* %29, align 4
  store i32 0, i32* %32, align 4
  store i32 0, i32* %26, align 4
  br label %543

543:                                              ; preds = %542, %539
  %544 = load i32, i32* %28, align 4
  %545 = icmp ne i32 %544, 0
  br i1 %545, label %546, label %550

546:                                              ; preds = %543
  %547 = load i32, i32* %48, align 4
  %548 = icmp eq i32 %547, 10
  br i1 %548, label %549, label %550

549:                                              ; preds = %546
  store i32 0, i32* %28, align 4
  br label %550

550:                                              ; preds = %549, %546, %543
  %551 = load i32, i32* %7, align 4
  %552 = icmp eq i32 %551, 6
  br i1 %552, label %553, label %578

553:                                              ; preds = %550
  %554 = load i32, i32* %29, align 4
  %555 = icmp ne i32 %554, 0
  br i1 %555, label %556, label %578

556:                                              ; preds = %553
  %557 = load i32, i32* %30, align 4
  %558 = icmp ne i32 %557, 0
  br i1 %558, label %559, label %578

559:                                              ; preds = %556
  %560 = load i32, i32* %33, align 4
  %561 = icmp ne i32 %560, 0
  br i1 %561, label %562, label %578

562:                                              ; preds = %559
  %563 = load i32, i32* %29, align 4
  %564 = load i32, i32* %30, align 4
  %565 = mul nsw i32 %563, %564
  %566 = load i32, i32* %26, align 4
  %567 = add nsw i32 %565, %566
  %568 = load i32, i32* %47, align 4
  %569 = add nsw i32 %567, %568
  %570 = sub nsw i32 %569, 1
  store i32 %570, i32* %31, align 4
  %571 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %572 = load i64, i64* %10, align 8
  %573 = load i32, i32* %31, align 4
  %574 = sext i32 %573 to i64
  %575 = add nsw i64 %572, %574
  %576 = invoke i32 @fseek(%struct._IO_FILE* %571, i64 %575, i32 0)
          to label %577 unwind label %73

577:                                              ; preds = %562
  store i32 0, i32* %4, align 4
  store i32 1, i32* %49, align 4
  br label %870

578:                                              ; preds = %559, %556, %553, %550
  %579 = load i32, i32* %29, align 4
  %580 = icmp ne i32 %579, 0
  br i1 %580, label %581, label %596

581:                                              ; preds = %578
  %582 = load i32, i32* %30, align 4
  %583 = icmp ne i32 %582, 0
  br i1 %583, label %584, label %596

584:                                              ; preds = %581
  %585 = load i32, i32* %33, align 4
  %586 = icmp ne i32 %585, 0
  br i1 %586, label %587, label %596

587:                                              ; preds = %584
  %588 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %589 = load i64, i64* %10, align 8
  %590 = load i32, i32* %26, align 4
  %591 = sext i32 %590 to i64
  %592 = add nsw i64 %589, %591
  %593 = sub nsw i64 %592, 2
  %594 = invoke i32 @fseek(%struct._IO_FILE* %588, i64 %593, i32 0)
          to label %595 unwind label %73

595:                                              ; preds = %587
  store i32 6, i32* %4, align 4
  store i32 1, i32* %49, align 4
  br label %870

596:                                              ; preds = %584, %581, %578
  br label %597

597:                                              ; preds = %596, %452
  %598 = load i32, i32* %9, align 4
  %599 = and i32 %598, 65535
  %600 = icmp eq i32 %599, 474
  br i1 %600, label %601, label %603

601:                                              ; preds = %597
  %602 = load i32, i32* %47, align 4
  store i32 %602, i32* %39, align 4
  br label %603

603:                                              ; preds = %601, %597
  %604 = load i32, i32* %39, align 4
  %605 = icmp ne i32 %604, 0
  br i1 %605, label %606, label %760

606:                                              ; preds = %603
  %607 = load i32, i32* %47, align 4
  %608 = load i32, i32* %39, align 4
  %609 = sub nsw i32 %607, %608
  %610 = icmp eq i32 %609, 1
  br i1 %610, label %611, label %621

611:                                              ; preds = %606
  %612 = load i32, i32* %48, align 4
  %613 = icmp eq i32 %612, 0
  br i1 %613, label %617, label %614

614:                                              ; preds = %611
  %615 = load i32, i32* %48, align 4
  %616 = icmp eq i32 %615, 1
  br i1 %616, label %617, label %619

617:                                              ; preds = %614, %611
  %618 = load i32, i32* %48, align 4
  store i32 %618, i32* %40, align 4
  br label %620

619:                                              ; preds = %614
  store i32 0, i32* %45, align 4
  store i32 0, i32* %44, align 4
  store i32 0, i32* %43, align 4
  store i32 0, i32* %42, align 4
  store i32 0, i32* %41, align 4
  store i32 0, i32* %39, align 4
  store i32 -1, i32* %40, align 4
  br label %620

620:                                              ; preds = %619, %617
  br label %621

621:                                              ; preds = %620, %606
  %622 = load i32, i32* %47, align 4
  %623 = load i32, i32* %39, align 4
  %624 = sub nsw i32 %622, %623
  %625 = icmp eq i32 %624, 2
  br i1 %625, label %626, label %636

626:                                              ; preds = %621
  %627 = load i32, i32* %48, align 4
  %628 = icmp eq i32 %627, 1
  br i1 %628, label %632, label %629

629:                                              ; preds = %626
  %630 = load i32, i32* %48, align 4
  %631 = icmp eq i32 %630, 2
  br i1 %631, label %632, label %634

632:                                              ; preds = %629, %626
  %633 = load i32, i32* %48, align 4
  store i32 %633, i32* %41, align 4
  br label %635

634:                                              ; preds = %629
  store i32 0, i32* %45, align 4
  store i32 0, i32* %44, align 4
  store i32 0, i32* %43, align 4
  store i32 0, i32* %42, align 4
  store i32 0, i32* %41, align 4
  store i32 0, i32* %39, align 4
  store i32 -1, i32* %40, align 4
  br label %635

635:                                              ; preds = %634, %632
  br label %636

636:                                              ; preds = %635, %621
  %637 = load i32, i32* %47, align 4
  %638 = load i32, i32* %39, align 4
  %639 = sub nsw i32 %637, %638
  %640 = icmp eq i32 %639, 4
  br i1 %640, label %641, label %658

641:                                              ; preds = %636
  %642 = load i32, i32* %9, align 4
  %643 = and i32 %642, 65535
  %644 = icmp eq i32 %643, 1
  br i1 %644, label %653, label %645

645:                                              ; preds = %641
  %646 = load i32, i32* %9, align 4
  %647 = and i32 %646, 65535
  %648 = icmp eq i32 %647, 2
  br i1 %648, label %653, label %649

649:                                              ; preds = %645
  %650 = load i32, i32* %9, align 4
  %651 = and i32 %650, 65535
  %652 = icmp eq i32 %651, 3
  br i1 %652, label %653, label %656

653:                                              ; preds = %649, %645, %641
  %654 = load i32, i32* %9, align 4
  %655 = and i32 %654, 65535
  store i32 %655, i32* %42, align 4
  br label %657

656:                                              ; preds = %649
  store i32 0, i32* %45, align 4
  store i32 0, i32* %44, align 4
  store i32 0, i32* %43, align 4
  store i32 0, i32* %42, align 4
  store i32 0, i32* %41, align 4
  store i32 0, i32* %39, align 4
  store i32 -1, i32* %40, align 4
  br label %657

657:                                              ; preds = %656, %653
  br label %658

658:                                              ; preds = %657, %636
  %659 = load i32, i32* %47, align 4
  %660 = load i32, i32* %39, align 4
  %661 = sub nsw i32 %659, %660
  %662 = icmp eq i32 %661, 6
  br i1 %662, label %663, label %672

663:                                              ; preds = %658
  %664 = load i32, i32* %9, align 4
  %665 = and i32 %664, 65535
  %666 = icmp ugt i32 %665, 0
  br i1 %666, label %667, label %670

667:                                              ; preds = %663
  %668 = load i32, i32* %9, align 4
  %669 = and i32 %668, 65535
  store i32 %669, i32* %44, align 4
  br label %671

670:                                              ; preds = %663
  store i32 0, i32* %45, align 4
  store i32 0, i32* %44, align 4
  store i32 0, i32* %43, align 4
  store i32 0, i32* %42, align 4
  store i32 0, i32* %41, align 4
  store i32 0, i32* %39, align 4
  store i32 -1, i32* %40, align 4
  br label %671

671:                                              ; preds = %670, %667
  br label %672

672:                                              ; preds = %671, %658
  %673 = load i32, i32* %47, align 4
  %674 = load i32, i32* %39, align 4
  %675 = sub nsw i32 %673, %674
  %676 = icmp eq i32 %675, 8
  br i1 %676, label %677, label %690

677:                                              ; preds = %672
  %678 = load i32, i32* %9, align 4
  %679 = and i32 %678, 65535
  %680 = icmp ugt i32 %679, 0
  br i1 %680, label %681, label %688

681:                                              ; preds = %677
  %682 = load i32, i32* %9, align 4
  %683 = and i32 %682, 65535
  store i32 %683, i32* %45, align 4
  %684 = load i32, i32* %45, align 4
  %685 = load i32, i32* %44, align 4
  %686 = mul nsw i32 %684, %685
  %687 = add nsw i32 %686, 512
  store i32 %687, i32* %46, align 4
  br label %689

688:                                              ; preds = %677
  store i32 0, i32* %45, align 4
  store i32 0, i32* %44, align 4
  store i32 0, i32* %43, align 4
  store i32 0, i32* %42, align 4
  store i32 0, i32* %41, align 4
  store i32 0, i32* %39, align 4
  store i32 -1, i32* %40, align 4
  br label %689

689:                                              ; preds = %688, %681
  br label %690

690:                                              ; preds = %689, %672
  %691 = load i32, i32* %47, align 4
  %692 = load i32, i32* %39, align 4
  %693 = sub nsw i32 %691, %692
  %694 = icmp eq i32 %693, 10
  br i1 %694, label %695, label %712

695:                                              ; preds = %690
  %696 = load i32, i32* %9, align 4
  %697 = and i32 %696, 65535
  %698 = icmp eq i32 %697, 1
  br i1 %698, label %707, label %699

699:                                              ; preds = %695
  %700 = load i32, i32* %9, align 4
  %701 = and i32 %700, 65535
  %702 = icmp eq i32 %701, 3
  br i1 %702, label %707, label %703

703:                                              ; preds = %699
  %704 = load i32, i32* %9, align 4
  %705 = and i32 %704, 65535
  %706 = icmp eq i32 %705, 4
  br i1 %706, label %707, label %710

707:                                              ; preds = %703, %699, %695
  %708 = load i32, i32* %9, align 4
  %709 = and i32 %708, 65535
  store i32 %709, i32* %43, align 4
  br label %711

710:                                              ; preds = %703
  store i32 0, i32* %45, align 4
  store i32 0, i32* %44, align 4
  store i32 0, i32* %43, align 4
  store i32 0, i32* %42, align 4
  store i32 0, i32* %41, align 4
  store i32 0, i32* %39, align 4
  store i32 -1, i32* %40, align 4
  br label %711

711:                                              ; preds = %710, %707
  br label %712

712:                                              ; preds = %711, %690
  %713 = load i32, i32* %46, align 4
  %714 = icmp ne i32 %713, 0
  br i1 %714, label %715, label %759

715:                                              ; preds = %712
  %716 = load i32, i32* %47, align 4
  %717 = load i32, i32* %39, align 4
  %718 = sub nsw i32 %716, %717
  %719 = icmp sgt i32 %718, 0
  br i1 %719, label %720, label %759

720:                                              ; preds = %715
  %721 = load i32, i32* %47, align 4
  %722 = load i32, i32* %39, align 4
  %723 = sub nsw i32 %721, %722
  %724 = load i32, i32* %46, align 4
  %725 = icmp sgt i32 %723, %724
  br i1 %725, label %726, label %759

726:                                              ; preds = %720
  %727 = load i32, i32* %7, align 4
  %728 = icmp eq i32 %727, 7
  br i1 %728, label %729, label %743

729:                                              ; preds = %726
  %730 = load i32, i32* %43, align 4
  %731 = icmp eq i32 %730, 1
  br i1 %731, label %732, label %743

732:                                              ; preds = %729
  %733 = load i32, i32* %40, align 4
  %734 = icmp eq i32 %733, 0
  br i1 %734, label %735, label %743

735:                                              ; preds = %732
  %736 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %737 = load i64, i64* %10, align 8
  %738 = load i32, i32* %46, align 4
  %739 = sext i32 %738 to i64
  %740 = add nsw i64 %737, %739
  %741 = invoke i32 @fseek(%struct._IO_FILE* %736, i64 %740, i32 0)
          to label %742 unwind label %73

742:                                              ; preds = %735
  store i32 0, i32* %4, align 4
  store i32 1, i32* %49, align 4
  br label %870

743:                                              ; preds = %732, %729, %726
  %744 = load i32, i32* %43, align 4
  %745 = icmp eq i32 %744, 1
  br i1 %745, label %746, label %758

746:                                              ; preds = %743
  %747 = load i32, i32* %40, align 4
  %748 = icmp eq i32 %747, 0
  br i1 %748, label %749, label %758

749:                                              ; preds = %746
  %750 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %751 = load i64, i64* %10, align 8
  %752 = load i32, i32* %39, align 4
  %753 = sext i32 %752 to i64
  %754 = add nsw i64 %751, %753
  %755 = sub nsw i64 %754, 1
  %756 = invoke i32 @fseek(%struct._IO_FILE* %750, i64 %755, i32 0)
          to label %757 unwind label %73

757:                                              ; preds = %749
  store i32 7, i32* %4, align 4
  store i32 1, i32* %49, align 4
  br label %870

758:                                              ; preds = %746, %743
  br label %759

759:                                              ; preds = %758, %720, %715, %712
  br label %760

760:                                              ; preds = %759, %603
  %761 = load i32, i32* %8, align 4
  %762 = and i32 %761, 254
  %763 = icmp eq i32 %762, 232
  br i1 %763, label %764, label %848

764:                                              ; preds = %760
  %765 = load i32, i32* %9, align 4
  %766 = add i32 %765, 1
  %767 = and i32 %766, 254
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %769, label %848

769:                                              ; preds = %764
  %770 = load i32, i32* %9, align 4
  %771 = lshr i32 %770, 24
  store i32 %771, i32* %51, align 4
  %772 = load i32, i32* %9, align 4
  %773 = lshr i32 %772, 24
  %774 = load i32, i32* %47, align 4
  %775 = add i32 %773, %774
  %776 = and i32 %775, 255
  store i32 %776, i32* %52, align 4
  %777 = load i32, i32* %47, align 4
  %778 = load i32, i32* %51, align 4
  %779 = invoke dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %12, i32 %778)
          to label %780 unwind label %73

780:                                              ; preds = %769
  %781 = load i32, i32* %779, align 4
  %782 = sub nsw i32 %777, %781
  store i32 %782, i32* %53, align 4
  %783 = load i32, i32* %47, align 4
  %784 = load i32, i32* %52, align 4
  %785 = invoke dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %11, i32 %784)
          to label %786 unwind label %73

786:                                              ; preds = %780
  %787 = load i32, i32* %785, align 4
  %788 = sub nsw i32 %783, %787
  store i32 %788, i32* %54, align 4
  %789 = load i32, i32* %54, align 4
  %790 = load i32, i32* %53, align 4
  %791 = icmp slt i32 %789, %790
  br i1 %791, label %792, label %820

792:                                              ; preds = %786
  %793 = load i32, i32* %54, align 4
  %794 = icmp slt i32 %793, 4096
  br i1 %794, label %795, label %820

795:                                              ; preds = %792
  %796 = load i32, i32* %52, align 4
  %797 = invoke dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %11, i32 %796)
          to label %798 unwind label %73

798:                                              ; preds = %795
  %799 = load i32, i32* %797, align 4
  %800 = icmp sgt i32 %799, 5
  br i1 %800, label %801, label %820

801:                                              ; preds = %798
  %802 = load i32, i32* %47, align 4
  store i32 %802, i32* %17, align 4
  %803 = load i32, i32* %15, align 4
  %804 = add nsw i32 %803, 1
  store i32 %804, i32* %15, align 4
  %805 = load i32, i32* %16, align 4
  %806 = icmp eq i32 %805, 0
  br i1 %806, label %814, label %807

807:                                              ; preds = %801
  %808 = load i32, i32* %16, align 4
  %809 = load i32, i32* %52, align 4
  %810 = invoke dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %11, i32 %809)
          to label %811 unwind label %73

811:                                              ; preds = %807
  %812 = load i32, i32* %810, align 4
  %813 = icmp sgt i32 %808, %812
  br i1 %813, label %814, label %819

814:                                              ; preds = %811, %801
  %815 = load i32, i32* %52, align 4
  %816 = invoke dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %11, i32 %815)
          to label %817 unwind label %73

817:                                              ; preds = %814
  %818 = load i32, i32* %816, align 4
  store i32 %818, i32* %16, align 4
  br label %819

819:                                              ; preds = %817, %811
  br label %821

820:                                              ; preds = %798, %792, %786
  store i32 0, i32* %15, align 4
  br label %821

821:                                              ; preds = %820, %819
  %822 = load i32, i32* %7, align 4
  %823 = icmp ne i32 %822, 8
  br i1 %823, label %824, label %839

824:                                              ; preds = %821
  %825 = load i32, i32* %15, align 4
  %826 = icmp sge i32 %825, 4
  br i1 %826, label %827, label %839

827:                                              ; preds = %824
  %828 = load i32, i32* %16, align 4
  %829 = icmp sgt i32 %828, 5
  br i1 %829, label %830, label %839

830:                                              ; preds = %827
  %831 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %832 = load i64, i64* %10, align 8
  %833 = load i32, i32* %16, align 4
  %834 = sext i32 %833 to i64
  %835 = add nsw i64 %832, %834
  %836 = sub nsw i64 %835, 5
  %837 = invoke i32 @fseek(%struct._IO_FILE* %831, i64 %836, i32 0)
          to label %838 unwind label %73

838:                                              ; preds = %830
  store i32 8, i32* %4, align 4
  store i32 1, i32* %49, align 4
  br label %870

839:                                              ; preds = %827, %824, %821
  %840 = load i32, i32* %47, align 4
  %841 = load i32, i32* %52, align 4
  %842 = invoke dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %11, i32 %841)
          to label %843 unwind label %73

843:                                              ; preds = %839
  store i32 %840, i32* %842, align 4
  %844 = load i32, i32* %47, align 4
  %845 = load i32, i32* %51, align 4
  %846 = invoke dereferenceable(4) i32* @_ZN5ArrayIiLi0EEixEi(%class.Array* %12, i32 %845)
          to label %847 unwind label %73

847:                                              ; preds = %843
  store i32 %844, i32* %846, align 4
  br label %848

848:                                              ; preds = %847, %764, %760
  %849 = load i32, i32* %7, align 4
  %850 = icmp eq i32 %849, 8
  br i1 %850, label %851, label %864

851:                                              ; preds = %848
  %852 = load i32, i32* %47, align 4
  %853 = load i32, i32* %17, align 4
  %854 = sub nsw i32 %852, %853
  %855 = icmp sgt i32 %854, 4096
  br i1 %855, label %856, label %864

856:                                              ; preds = %851
  %857 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %858 = load i64, i64* %10, align 8
  %859 = load i32, i32* %17, align 4
  %860 = sext i32 %859 to i64
  %861 = add nsw i64 %858, %860
  %862 = invoke i32 @fseek(%struct._IO_FILE* %857, i64 %861, i32 0)
          to label %863 unwind label %73

863:                                              ; preds = %856
  store i32 0, i32* %4, align 4
  store i32 1, i32* %49, align 4
  br label %870

864:                                              ; preds = %851, %848
  br label %865

865:                                              ; preds = %864
  %866 = load i32, i32* %47, align 4
  %867 = add nsw i32 %866, 1
  store i32 %867, i32* %47, align 4
  br label %58

868:                                              ; preds = %58
  %869 = load i32, i32* %7, align 4
  store i32 %869, i32* %4, align 4
  store i32 1, i32* %49, align 4
  br label %870

870:                                              ; preds = %868, %863, %838, %757, %742, %595, %577, %444, %429, %414, %399, %198, %173, %68
  call void @_ZN5ArrayIiLi0EED2Ev(%class.Array* %12) #2
  call void @_ZN5ArrayIiLi0EED2Ev(%class.Array* %11) #2
  %871 = load i32, i32* %4, align 4
  ret i32 %871

872:                                              ; preds = %73, %69
  call void @_ZN5ArrayIiLi0EED2Ev(%class.Array* %11) #2
  br label %873

873:                                              ; preds = %872
  %874 = load i8*, i8** %13, align 8
  %875 = load i32, i32* %14, align 4
  %876 = insertvalue { i8*, i32 } undef, i8* %874, 0
  %877 = insertvalue { i8*, i32 } %876, i32 %875, 1
  resume { i8*, i32 } %877
}

declare dso_local i64 @ftell(%struct._IO_FILE*) #10

declare dso_local i32 @fseek(%struct._IO_FILE*, i64, i32) #10

; Function Attrs: noinline uwtable
define dso_local void @_Z14encode_defaultP8_IO_FILES0_i(%struct._IO_FILE* %0, %struct._IO_FILE* %1, i32 %2) #0 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %5, align 8
  store i32 %2, i32* %6, align 4
  br label %7

7:                                                ; preds = %11, %3
  %8 = load i32, i32* %6, align 4
  %9 = add nsw i32 %8, -1
  store i32 %9, i32* %6, align 4
  %10 = icmp ne i32 %8, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %13 = call i32 @getc(%struct._IO_FILE* %12)
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %15 = call i32 @putc(i32 %13, %struct._IO_FILE* %14)
  br label %7

16:                                               ; preds = %7
  ret void
}

; Function Attrs: noinline uwtable
define dso_local i32 @_Z14decode_defaultR7Encoder(%class.Encoder* dereferenceable(40) %0) #0 {
  %2 = alloca %class.Encoder*, align 8
  store %class.Encoder* %0, %class.Encoder** %2, align 8
  %3 = load %class.Encoder*, %class.Encoder** %2, align 8
  %4 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %3)
  ret i32 %4
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_ZN7Encoder10decompressEv(%class.Encoder* %0) #0 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %class.Encoder*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.Encoder* %0, %class.Encoder** %3, align 8
  %6 = load %class.Encoder*, %class.Encoder** %3, align 8
  %7 = getelementptr inbounds %class.Encoder, %class.Encoder* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.Encoder, %class.Encoder* %6, i32 0, i32 6
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %13 = call i32 @getc(%struct._IO_FILE* %12)
  store i32 %13, i32* %2, align 4
  br label %36

14:                                               ; preds = %1
  %15 = load i32, i32* @level, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %14
  %18 = getelementptr inbounds %class.Encoder, %class.Encoder* %6, i32 0, i32 2
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %18, align 8
  %20 = call i32 @getc(%struct._IO_FILE* %19)
  store i32 %20, i32* %2, align 4
  br label %36

21:                                               ; preds = %14
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %22

22:                                               ; preds = %31, %21
  %23 = load i32, i32* %5, align 4
  %24 = icmp slt i32 %23, 8
  br i1 %24, label %25, label %34

25:                                               ; preds = %22
  %26 = load i32, i32* %4, align 4
  %27 = call i32 @_ZN7Encoder4codeEi(%class.Encoder* %6, i32 0)
  %28 = add nsw i32 %26, %27
  %29 = load i32, i32* %4, align 4
  %30 = add nsw i32 %29, %28
  store i32 %30, i32* %4, align 4
  br label %31

31:                                               ; preds = %25
  %32 = load i32, i32* %5, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %5, align 4
  br label %22

34:                                               ; preds = %22
  %35 = load i32, i32* %4, align 4
  store i32 %35, i32* %2, align 4
  br label %36

36:                                               ; preds = %34, %17, %10
  %37 = load i32, i32* %2, align 4
  ret i32 %37
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_ZN7Encoder4codeEi(%class.Encoder* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Encoder*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.Encoder* %0, %class.Encoder** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load %class.Encoder*, %class.Encoder** %3, align 8
  %8 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 0
  %9 = call i32 @_ZNK9Predictor1pEv(%class.Predictor* %8)
  store i32 %9, i32* %5, align 4
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 2048
  %12 = zext i1 %11 to i32
  %13 = load i32, i32* %5, align 4
  %14 = add nsw i32 %13, %12
  store i32 %14, i32* %5, align 4
  %15 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = sub i32 %18, %20
  %22 = lshr i32 %21, 12
  %23 = load i32, i32* %5, align 4
  %24 = mul i32 %22, %23
  %25 = add i32 %16, %24
  %26 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 4
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = sub i32 %27, %29
  %31 = and i32 %30, 4095
  %32 = load i32, i32* %5, align 4
  %33 = mul i32 %31, %32
  %34 = lshr i32 %33, 12
  %35 = add i32 %25, %34
  store i32 %35, i32* %6, align 4
  %36 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %45

39:                                               ; preds = %2
  %40 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 5
  %41 = load i32, i32* %40, align 8
  %42 = load i32, i32* %6, align 4
  %43 = icmp ule i32 %41, %42
  %44 = zext i1 %43 to i32
  store i32 %44, i32* @y, align 4
  br label %47

45:                                               ; preds = %2
  %46 = load i32, i32* %4, align 4
  store i32 %46, i32* @y, align 4
  br label %47

47:                                               ; preds = %45, %39
  %48 = load i32, i32* @y, align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %47
  %51 = load i32, i32* %6, align 4
  %52 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 4
  store i32 %51, i32* %52, align 4
  br label %57

53:                                               ; preds = %47
  %54 = load i32, i32* %6, align 4
  %55 = add i32 %54, 1
  %56 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 3
  store i32 %55, i32* %56, align 8
  br label %57

57:                                               ; preds = %53, %50
  %58 = phi i32* [ %52, %50 ], [ %56, %53 ]
  %59 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 0
  call void @_ZN9Predictor6updateEv(%class.Predictor* %59)
  br label %60

60:                                               ; preds = %101, %57
  %61 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 4
  %64 = load i32, i32* %63, align 4
  %65 = xor i32 %62, %64
  %66 = and i32 %65, -16777216
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %102

68:                                               ; preds = %60
  %69 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %79

72:                                               ; preds = %68
  %73 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 4
  %74 = load i32, i32* %73, align 4
  %75 = lshr i32 %74, 24
  %76 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 2
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** %76, align 8
  %78 = call i32 @putc(i32 %75, %struct._IO_FILE* %77)
  br label %79

79:                                               ; preds = %72, %68
  %80 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = shl i32 %81, 8
  store i32 %82, i32* %80, align 8
  %83 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 4
  %84 = load i32, i32* %83, align 4
  %85 = shl i32 %84, 8
  %86 = add i32 %85, 255
  %87 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 4
  store i32 %86, i32* %87, align 4
  %88 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %101

91:                                               ; preds = %79
  %92 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 5
  %93 = load i32, i32* %92, align 8
  %94 = shl i32 %93, 8
  %95 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 2
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** %95, align 8
  %97 = call i32 @getc(%struct._IO_FILE* %96)
  %98 = and i32 %97, 255
  %99 = add i32 %94, %98
  %100 = getelementptr inbounds %class.Encoder, %class.Encoder* %7, i32 0, i32 5
  store i32 %99, i32* %100, align 8
  br label %101

101:                                              ; preds = %91, %79
  br label %60

102:                                              ; preds = %60
  %103 = load i32, i32* @y, align 4
  ret i32 %103
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK9Predictor1pEv(%class.Predictor* %0) #1 comdat align 2 {
  %2 = alloca %class.Predictor*, align 8
  store %class.Predictor* %0, %class.Predictor** %2, align 8
  %3 = load %class.Predictor*, %class.Predictor** %2, align 8
  %4 = getelementptr inbounds %class.Predictor, %class.Predictor* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: noinline uwtable
define dso_local void @_Z11encode_jpegP8_IO_FILES0_i(%struct._IO_FILE* %0, %struct._IO_FILE* %1, i32 %2) #0 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %5, align 8
  store i32 %2, i32* %6, align 4
  br label %7

7:                                                ; preds = %11, %3
  %8 = load i32, i32* %6, align 4
  %9 = add nsw i32 %8, -1
  store i32 %9, i32* %6, align 4
  %10 = icmp ne i32 %8, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %13 = call i32 @getc(%struct._IO_FILE* %12)
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %15 = call i32 @putc(i32 %13, %struct._IO_FILE* %14)
  br label %7

16:                                               ; preds = %7
  ret void
}

; Function Attrs: noinline uwtable
define dso_local i32 @_Z11decode_jpegR7Encoder(%class.Encoder* dereferenceable(40) %0) #0 {
  %2 = alloca %class.Encoder*, align 8
  store %class.Encoder* %0, %class.Encoder** %2, align 8
  %3 = load %class.Encoder*, %class.Encoder** %2, align 8
  %4 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %3)
  ret i32 %4
}

; Function Attrs: noinline uwtable
define dso_local void @_Z10encode_bmpP8_IO_FILES0_i(%struct._IO_FILE* %0, %struct._IO_FILE* %1, i32 %2) #0 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %5, align 8
  store i32 %2, i32* %6, align 4
  br label %7

7:                                                ; preds = %11, %3
  %8 = load i32, i32* %6, align 4
  %9 = add nsw i32 %8, -1
  store i32 %9, i32* %6, align 4
  %10 = icmp ne i32 %8, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %13 = call i32 @getc(%struct._IO_FILE* %12)
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %15 = call i32 @putc(i32 %13, %struct._IO_FILE* %14)
  br label %7

16:                                               ; preds = %7
  ret void
}

; Function Attrs: noinline uwtable
define dso_local i32 @_Z10decode_bmpR7Encoder(%class.Encoder* dereferenceable(40) %0) #0 {
  %2 = alloca %class.Encoder*, align 8
  store %class.Encoder* %0, %class.Encoder** %2, align 8
  %3 = load %class.Encoder*, %class.Encoder** %2, align 8
  %4 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %3)
  ret i32 %4
}

; Function Attrs: noinline uwtable
define dso_local void @_Z10encode_pgmP8_IO_FILES0_i(%struct._IO_FILE* %0, %struct._IO_FILE* %1, i32 %2) #0 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %5, align 8
  store i32 %2, i32* %6, align 4
  br label %7

7:                                                ; preds = %11, %3
  %8 = load i32, i32* %6, align 4
  %9 = add nsw i32 %8, -1
  store i32 %9, i32* %6, align 4
  %10 = icmp ne i32 %8, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %13 = call i32 @getc(%struct._IO_FILE* %12)
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %15 = call i32 @putc(i32 %13, %struct._IO_FILE* %14)
  br label %7

16:                                               ; preds = %7
  ret void
}

; Function Attrs: noinline uwtable
define dso_local i32 @_Z10decode_pgmR7Encoder(%class.Encoder* dereferenceable(40) %0) #0 {
  %2 = alloca %class.Encoder*, align 8
  store %class.Encoder* %0, %class.Encoder** %2, align 8
  %3 = load %class.Encoder*, %class.Encoder** %2, align 8
  %4 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %3)
  ret i32 %4
}

; Function Attrs: noinline uwtable
define dso_local void @_Z10encode_rgbP8_IO_FILES0_i(%struct._IO_FILE* %0, %struct._IO_FILE* %1, i32 %2) #0 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %5, align 8
  store i32 %2, i32* %6, align 4
  br label %7

7:                                                ; preds = %11, %3
  %8 = load i32, i32* %6, align 4
  %9 = add nsw i32 %8, -1
  store i32 %9, i32* %6, align 4
  %10 = icmp ne i32 %8, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %13 = call i32 @getc(%struct._IO_FILE* %12)
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %15 = call i32 @putc(i32 %13, %struct._IO_FILE* %14)
  br label %7

16:                                               ; preds = %7
  ret void
}

; Function Attrs: noinline uwtable
define dso_local i32 @_Z10decode_rgbR7Encoder(%class.Encoder* dereferenceable(40) %0) #0 {
  %2 = alloca %class.Encoder*, align 8
  store %class.Encoder* %0, %class.Encoder** %2, align 8
  %3 = load %class.Encoder*, %class.Encoder** %2, align 8
  %4 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %3)
  ret i32 %4
}

; Function Attrs: noinline uwtable
define dso_local void @_Z10encode_exeP8_IO_FILES0_ii(%struct._IO_FILE* %0, %struct._IO_FILE* %1, i32 %2, i32 %3) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %class.Array.0, align 8
  %11 = alloca i8*
  %12 = alloca i32
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  store i32 65536, i32* %9, align 4
  call void @_ZN5ArrayIhLi0EEC2Ei(%class.Array.0* %10, i32 65536)
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %19 = load i32, i32* %7, align 4
  %20 = ashr i32 %19, 24
  %21 = load i32, i32* %7, align 4
  %22 = ashr i32 %21, 16
  %23 = load i32, i32* %7, align 4
  %24 = ashr i32 %23, 8
  %25 = load i32, i32* %7, align 4
  %26 = invoke i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i32 %20, i32 %22, i32 %24, i32 %25)
          to label %27 unwind label %61

27:                                               ; preds = %4
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %29 = load i32, i32* %8, align 4
  %30 = ashr i32 %29, 24
  %31 = load i32, i32* %8, align 4
  %32 = ashr i32 %31, 16
  %33 = load i32, i32* %8, align 4
  %34 = ashr i32 %33, 8
  %35 = load i32, i32* %8, align 4
  %36 = invoke i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i32 %30, i32 %32, i32 %34, i32 %35)
          to label %37 unwind label %61

37:                                               ; preds = %27
  store i32 0, i32* %13, align 4
  br label %38

38:                                               ; preds = %180, %37
  %39 = load i32, i32* %13, align 4
  %40 = load i32, i32* %7, align 4
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %42, label %183

42:                                               ; preds = %38
  %43 = load i32, i32* %7, align 4
  %44 = load i32, i32* %13, align 4
  %45 = sub nsw i32 %43, %44
  %46 = invoke i32 @_Z3minii(i32 %45, i32 65536)
          to label %47 unwind label %61

47:                                               ; preds = %42
  store i32 %46, i32* %14, align 4
  %48 = invoke dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %10, i32 0)
          to label %49 unwind label %61

49:                                               ; preds = %47
  %50 = load i32, i32* %14, align 4
  %51 = sext i32 %50 to i64
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %53 = invoke i64 @fread(i8* %48, i64 1, i64 %51, %struct._IO_FILE* %52)
          to label %54 unwind label %61

54:                                               ; preds = %49
  %55 = trunc i64 %53 to i32
  store i32 %55, i32* %15, align 4
  %56 = load i32, i32* %15, align 4
  %57 = load i32, i32* %14, align 4
  %58 = icmp ne i32 %56, %57
  br i1 %58, label %59, label %65

59:                                               ; preds = %54
  invoke void @_Z4quitPKc(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i64 0, i64 0))
          to label %60 unwind label %61

60:                                               ; preds = %59
  br label %65

61:                                               ; preds = %174, %172, %161, %154, %147, %126, %119, %111, %105, %101, %94, %87, %79, %71, %59, %49, %47, %42, %27, %4
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %11, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %12, align 4
  call void @_ZN5ArrayIhLi0EED2Ev(%class.Array.0* %10) #2
  br label %184

65:                                               ; preds = %60, %54
  %66 = load i32, i32* %15, align 4
  %67 = sub nsw i32 %66, 1
  store i32 %67, i32* %16, align 4
  br label %68

68:                                               ; preds = %169, %65
  %69 = load i32, i32* %16, align 4
  %70 = icmp sge i32 %69, 4
  br i1 %70, label %71, label %172

71:                                               ; preds = %68
  %72 = load i32, i32* %16, align 4
  %73 = sub nsw i32 %72, 4
  %74 = invoke dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %10, i32 %73)
          to label %75 unwind label %61

75:                                               ; preds = %71
  %76 = load i8, i8* %74, align 1
  %77 = zext i8 %76 to i32
  %78 = icmp eq i32 %77, 232
  br i1 %78, label %87, label %79

79:                                               ; preds = %75
  %80 = load i32, i32* %16, align 4
  %81 = sub nsw i32 %80, 4
  %82 = invoke dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %10, i32 %81)
          to label %83 unwind label %61

83:                                               ; preds = %79
  %84 = load i8, i8* %82, align 1
  %85 = zext i8 %84 to i32
  %86 = icmp eq i32 %85, 233
  br i1 %86, label %87, label %168

87:                                               ; preds = %83, %75
  %88 = load i32, i32* %16, align 4
  %89 = invoke dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %10, i32 %88)
          to label %90 unwind label %61

90:                                               ; preds = %87
  %91 = load i8, i8* %89, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %101, label %94

94:                                               ; preds = %90
  %95 = load i32, i32* %16, align 4
  %96 = invoke dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %10, i32 %95)
          to label %97 unwind label %61

97:                                               ; preds = %94
  %98 = load i8, i8* %96, align 1
  %99 = zext i8 %98 to i32
  %100 = icmp eq i32 %99, 255
  br i1 %100, label %101, label %168

101:                                              ; preds = %97, %90
  %102 = load i32, i32* %16, align 4
  %103 = sub nsw i32 %102, 3
  %104 = invoke dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %10, i32 %103)
          to label %105 unwind label %61

105:                                              ; preds = %101
  %106 = load i8, i8* %104, align 1
  %107 = zext i8 %106 to i32
  %108 = load i32, i32* %16, align 4
  %109 = sub nsw i32 %108, 2
  %110 = invoke dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %10, i32 %109)
          to label %111 unwind label %61

111:                                              ; preds = %105
  %112 = load i8, i8* %110, align 1
  %113 = zext i8 %112 to i32
  %114 = shl i32 %113, 8
  %115 = or i32 %107, %114
  %116 = load i32, i32* %16, align 4
  %117 = sub nsw i32 %116, 1
  %118 = invoke dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %10, i32 %117)
          to label %119 unwind label %61

119:                                              ; preds = %111
  %120 = load i8, i8* %118, align 1
  %121 = zext i8 %120 to i32
  %122 = shl i32 %121, 16
  %123 = or i32 %115, %122
  %124 = load i32, i32* %16, align 4
  %125 = invoke dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %10, i32 %124)
          to label %126 unwind label %61

126:                                              ; preds = %119
  %127 = load i8, i8* %125, align 1
  %128 = zext i8 %127 to i32
  %129 = shl i32 %128, 24
  %130 = or i32 %123, %129
  %131 = load i32, i32* %13, align 4
  %132 = add nsw i32 %130, %131
  %133 = load i32, i32* %8, align 4
  %134 = add nsw i32 %132, %133
  %135 = load i32, i32* %16, align 4
  %136 = add nsw i32 %134, %135
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %17, align 4
  %138 = load i32, i32* %17, align 4
  %139 = shl i32 %138, 7
  store i32 %139, i32* %17, align 4
  %140 = load i32, i32* %17, align 4
  %141 = ashr i32 %140, 7
  store i32 %141, i32* %17, align 4
  %142 = load i32, i32* %17, align 4
  %143 = ashr i32 %142, 24
  %144 = trunc i32 %143 to i8
  %145 = load i32, i32* %16, align 4
  %146 = invoke dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %10, i32 %145)
          to label %147 unwind label %61

147:                                              ; preds = %126
  store i8 %144, i8* %146, align 1
  %148 = load i32, i32* %17, align 4
  %149 = ashr i32 %148, 16
  %150 = trunc i32 %149 to i8
  %151 = load i32, i32* %16, align 4
  %152 = sub nsw i32 %151, 1
  %153 = invoke dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %10, i32 %152)
          to label %154 unwind label %61

154:                                              ; preds = %147
  store i8 %150, i8* %153, align 1
  %155 = load i32, i32* %17, align 4
  %156 = ashr i32 %155, 8
  %157 = trunc i32 %156 to i8
  %158 = load i32, i32* %16, align 4
  %159 = sub nsw i32 %158, 2
  %160 = invoke dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %10, i32 %159)
          to label %161 unwind label %61

161:                                              ; preds = %154
  store i8 %157, i8* %160, align 1
  %162 = load i32, i32* %17, align 4
  %163 = trunc i32 %162 to i8
  %164 = load i32, i32* %16, align 4
  %165 = sub nsw i32 %164, 3
  %166 = invoke dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %10, i32 %165)
          to label %167 unwind label %61

167:                                              ; preds = %161
  store i8 %163, i8* %166, align 1
  br label %168

168:                                              ; preds = %167, %97, %83
  br label %169

169:                                              ; preds = %168
  %170 = load i32, i32* %16, align 4
  %171 = add nsw i32 %170, -1
  store i32 %171, i32* %16, align 4
  br label %68

172:                                              ; preds = %68
  %173 = invoke dereferenceable(1) i8* @_ZN5ArrayIhLi0EEixEi(%class.Array.0* %10, i32 0)
          to label %174 unwind label %61

174:                                              ; preds = %172
  %175 = load i32, i32* %15, align 4
  %176 = sext i32 %175 to i64
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %178 = invoke i64 @fwrite(i8* %173, i64 1, i64 %176, %struct._IO_FILE* %177)
          to label %179 unwind label %61

179:                                              ; preds = %174
  br label %180

180:                                              ; preds = %179
  %181 = load i32, i32* %13, align 4
  %182 = add nsw i32 %181, 65536
  store i32 %182, i32* %13, align 4
  br label %38

183:                                              ; preds = %38
  call void @_ZN5ArrayIhLi0EED2Ev(%class.Array.0* %10) #2
  ret void

184:                                              ; preds = %61
  %185 = load i8*, i8** %11, align 8
  %186 = load i32, i32* %12, align 4
  %187 = insertvalue { i8*, i32 } undef, i8* %185, 0
  %188 = insertvalue { i8*, i32 } %187, i32 %186, 1
  resume { i8*, i32 } %188
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #10

declare dso_local i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #10

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #10

; Function Attrs: noinline uwtable
define dso_local i32 @_Z10decode_exeR7Encoder(%class.Encoder* dereferenceable(40) %0) #0 {
  %2 = alloca %class.Encoder*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %class.Encoder* %0, %class.Encoder** %2, align 8
  store i32 65536, i32* %3, align 4
  br label %5

5:                                                ; preds = %14, %1
  %6 = load i32, i32* @_ZZ10decode_exeR7EncoderE6offset, align 4
  %7 = load i32, i32* @_ZZ10decode_exeR7EncoderE4size, align 4
  %8 = icmp eq i32 %6, %7
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = load i32, i32* @_ZZ10decode_exeR7EncoderE1q, align 4
  %11 = icmp eq i32 %10, 0
  br label %12

12:                                               ; preds = %9, %5
  %13 = phi i1 [ false, %5 ], [ %11, %9 ]
  br i1 %13, label %14, label %49

14:                                               ; preds = %12
  store i32 0, i32* @_ZZ10decode_exeR7EncoderE6offset, align 4
  %15 = load %class.Encoder*, %class.Encoder** %2, align 8
  %16 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %15)
  %17 = shl i32 %16, 24
  store i32 %17, i32* @_ZZ10decode_exeR7EncoderE4size, align 4
  %18 = load %class.Encoder*, %class.Encoder** %2, align 8
  %19 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %18)
  %20 = shl i32 %19, 16
  %21 = load i32, i32* @_ZZ10decode_exeR7EncoderE4size, align 4
  %22 = or i32 %21, %20
  store i32 %22, i32* @_ZZ10decode_exeR7EncoderE4size, align 4
  %23 = load %class.Encoder*, %class.Encoder** %2, align 8
  %24 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %23)
  %25 = shl i32 %24, 8
  %26 = load i32, i32* @_ZZ10decode_exeR7EncoderE4size, align 4
  %27 = or i32 %26, %25
  store i32 %27, i32* @_ZZ10decode_exeR7EncoderE4size, align 4
  %28 = load %class.Encoder*, %class.Encoder** %2, align 8
  %29 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %28)
  %30 = load i32, i32* @_ZZ10decode_exeR7EncoderE4size, align 4
  %31 = or i32 %30, %29
  store i32 %31, i32* @_ZZ10decode_exeR7EncoderE4size, align 4
  %32 = load %class.Encoder*, %class.Encoder** %2, align 8
  %33 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %32)
  %34 = shl i32 %33, 24
  store i32 %34, i32* @_ZZ10decode_exeR7EncoderE5begin, align 4
  %35 = load %class.Encoder*, %class.Encoder** %2, align 8
  %36 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %35)
  %37 = shl i32 %36, 16
  %38 = load i32, i32* @_ZZ10decode_exeR7EncoderE5begin, align 4
  %39 = or i32 %38, %37
  store i32 %39, i32* @_ZZ10decode_exeR7EncoderE5begin, align 4
  %40 = load %class.Encoder*, %class.Encoder** %2, align 8
  %41 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %40)
  %42 = shl i32 %41, 8
  %43 = load i32, i32* @_ZZ10decode_exeR7EncoderE5begin, align 4
  %44 = or i32 %43, %42
  store i32 %44, i32* @_ZZ10decode_exeR7EncoderE5begin, align 4
  %45 = load %class.Encoder*, %class.Encoder** %2, align 8
  %46 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %45)
  %47 = load i32, i32* @_ZZ10decode_exeR7EncoderE5begin, align 4
  %48 = or i32 %47, %46
  store i32 %48, i32* @_ZZ10decode_exeR7EncoderE5begin, align 4
  br label %5

49:                                               ; preds = %12
  br label %50

50:                                               ; preds = %59, %49
  %51 = load i32, i32* @_ZZ10decode_exeR7EncoderE6offset, align 4
  %52 = load i32, i32* @_ZZ10decode_exeR7EncoderE4size, align 4
  %53 = icmp slt i32 %51, %52
  br i1 %53, label %54, label %57

54:                                               ; preds = %50
  %55 = load i32, i32* @_ZZ10decode_exeR7EncoderE1q, align 4
  %56 = icmp slt i32 %55, 5
  br label %57

57:                                               ; preds = %54, %50
  %58 = phi i1 [ false, %50 ], [ %56, %54 ]
  br i1 %58, label %59, label %67

59:                                               ; preds = %57
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 1), i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 0), i64 4, i1 false)
  %60 = load %class.Encoder*, %class.Encoder** %2, align 8
  %61 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %60)
  %62 = trunc i32 %61 to i8
  store i8 %62, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 0), align 1
  %63 = load i32, i32* @_ZZ10decode_exeR7EncoderE1q, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* @_ZZ10decode_exeR7EncoderE1q, align 4
  %65 = load i32, i32* @_ZZ10decode_exeR7EncoderE6offset, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* @_ZZ10decode_exeR7EncoderE6offset, align 4
  br label %50

67:                                               ; preds = %57
  %68 = load i32, i32* @_ZZ10decode_exeR7EncoderE1q, align 4
  %69 = icmp eq i32 %68, 5
  br i1 %69, label %70, label %128

70:                                               ; preds = %67
  %71 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 4), align 1
  %72 = zext i8 %71 to i32
  %73 = icmp eq i32 %72, 232
  br i1 %73, label %78, label %74

74:                                               ; preds = %70
  %75 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 4), align 1
  %76 = zext i8 %75 to i32
  %77 = icmp eq i32 %76, 233
  br i1 %77, label %78, label %128

78:                                               ; preds = %74, %70
  %79 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 0), align 1
  %80 = zext i8 %79 to i32
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %78
  %83 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 0), align 1
  %84 = zext i8 %83 to i32
  %85 = icmp eq i32 %84, 255
  br i1 %85, label %86, label %128

86:                                               ; preds = %82, %78
  %87 = load i32, i32* @_ZZ10decode_exeR7EncoderE6offset, align 4
  %88 = sub nsw i32 %87, 1
  %89 = load i32, i32* @_ZZ10decode_exeR7EncoderE6offset, align 4
  %90 = sub nsw i32 %89, 5
  %91 = xor i32 %88, %90
  %92 = and i32 %91, -65536
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %128

94:                                               ; preds = %86
  %95 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 3), align 1
  %96 = zext i8 %95 to i32
  %97 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 2), align 1
  %98 = zext i8 %97 to i32
  %99 = shl i32 %98, 8
  %100 = or i32 %96, %99
  %101 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 1), align 1
  %102 = zext i8 %101 to i32
  %103 = shl i32 %102, 16
  %104 = or i32 %100, %103
  %105 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 0), align 1
  %106 = zext i8 %105 to i32
  %107 = shl i32 %106, 24
  %108 = or i32 %104, %107
  %109 = load i32, i32* @_ZZ10decode_exeR7EncoderE6offset, align 4
  %110 = sub nsw i32 %108, %109
  %111 = load i32, i32* @_ZZ10decode_exeR7EncoderE5begin, align 4
  %112 = sub nsw i32 %110, %111
  store i32 %112, i32* %4, align 4
  %113 = load i32, i32* %4, align 4
  %114 = shl i32 %113, 7
  store i32 %114, i32* %4, align 4
  %115 = load i32, i32* %4, align 4
  %116 = ashr i32 %115, 7
  store i32 %116, i32* %4, align 4
  %117 = load i32, i32* %4, align 4
  %118 = trunc i32 %117 to i8
  store i8 %118, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 3), align 1
  %119 = load i32, i32* %4, align 4
  %120 = ashr i32 %119, 8
  %121 = trunc i32 %120 to i8
  store i8 %121, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 2), align 1
  %122 = load i32, i32* %4, align 4
  %123 = ashr i32 %122, 16
  %124 = trunc i32 %123 to i8
  store i8 %124, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 1), align 1
  %125 = load i32, i32* %4, align 4
  %126 = ashr i32 %125, 24
  %127 = trunc i32 %126 to i8
  store i8 %127, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 0), align 1
  br label %128

128:                                              ; preds = %94, %86, %82, %74, %67
  %129 = load i32, i32* @_ZZ10decode_exeR7EncoderE1q, align 4
  %130 = add nsw i32 %129, -1
  store i32 %130, i32* @_ZZ10decode_exeR7EncoderE1q, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [5 x i8], [5 x i8]* @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  ret i32 %134
}

; Function Attrs: noinline uwtable
define dso_local void @_Z6encodeP8_IO_FILES0_i(%struct._IO_FILE* %0, %struct._IO_FILE* %1, i32 %2) #0 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %5, align 8
  store i32 %2, i32* %6, align 4
  store i32 0, i32* %7, align 4
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %13 = call i64 @ftell(%struct._IO_FILE* %12)
  store i64 %13, i64* %8, align 8
  br label %14

14:                                               ; preds = %72, %3
  %15 = load i32, i32* %6, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %78

17:                                               ; preds = %14
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %19 = load i32, i32* %6, align 4
  %20 = load i32, i32* %7, align 4
  %21 = call i32 @_Z6detectP8_IO_FILEi8Filetype(%struct._IO_FILE* %18, i32 %19, i32 %20)
  store i32 %21, i32* %9, align 4
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %23 = call i64 @ftell(%struct._IO_FILE* %22)
  store i64 %23, i64* %10, align 8
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %25 = load i64, i64* %8, align 8
  %26 = call i32 @fseek(%struct._IO_FILE* %24, i64 %25, i32 0)
  %27 = load i64, i64* %10, align 8
  %28 = load i64, i64* %8, align 8
  %29 = sub nsw i64 %27, %28
  %30 = trunc i64 %29 to i32
  store i32 %30, i32* %11, align 4
  %31 = load i32, i32* %11, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %72

33:                                               ; preds = %17
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %35 = load i32, i32* %7, align 4
  %36 = load i32, i32* %11, align 4
  %37 = ashr i32 %36, 24
  %38 = load i32, i32* %11, align 4
  %39 = ashr i32 %38, 16
  %40 = load i32, i32* %11, align 4
  %41 = ashr i32 %40, 8
  %42 = load i32, i32* %11, align 4
  %43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0), i32 %35, i32 %37, i32 %39, i32 %41, i32 %42)
  %44 = load i32, i32* %7, align 4
  switch i32 %44, label %67 [
    i32 1, label %45
    i32 2, label %49
    i32 3, label %49
    i32 4, label %49
    i32 6, label %53
    i32 7, label %57
    i32 8, label %61
  ]

45:                                               ; preds = %33
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %48 = load i32, i32* %11, align 4
  call void @_Z11encode_jpegP8_IO_FILES0_i(%struct._IO_FILE* %46, %struct._IO_FILE* %47, i32 %48)
  br label %71

49:                                               ; preds = %33, %33, %33
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %52 = load i32, i32* %11, align 4
  call void @_Z10encode_bmpP8_IO_FILES0_i(%struct._IO_FILE* %50, %struct._IO_FILE* %51, i32 %52)
  br label %71

53:                                               ; preds = %33
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %56 = load i32, i32* %11, align 4
  call void @_Z10encode_pgmP8_IO_FILES0_i(%struct._IO_FILE* %54, %struct._IO_FILE* %55, i32 %56)
  br label %71

57:                                               ; preds = %33
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %60 = load i32, i32* %11, align 4
  call void @_Z10encode_rgbP8_IO_FILES0_i(%struct._IO_FILE* %58, %struct._IO_FILE* %59, i32 %60)
  br label %71

61:                                               ; preds = %33
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %64 = load i32, i32* %11, align 4
  %65 = load i64, i64* %8, align 8
  %66 = trunc i64 %65 to i32
  call void @_Z10encode_exeP8_IO_FILES0_ii(%struct._IO_FILE* %62, %struct._IO_FILE* %63, i32 %64, i32 %66)
  br label %71

67:                                               ; preds = %33
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %70 = load i32, i32* %11, align 4
  call void @_Z14encode_defaultP8_IO_FILES0_i(%struct._IO_FILE* %68, %struct._IO_FILE* %69, i32 %70)
  br label %71

71:                                               ; preds = %67, %61, %57, %53, %49, %45
  br label %72

72:                                               ; preds = %71, %17
  %73 = load i32, i32* %11, align 4
  %74 = load i32, i32* %6, align 4
  %75 = sub nsw i32 %74, %73
  store i32 %75, i32* %6, align 4
  %76 = load i32, i32* %9, align 4
  store i32 %76, i32* %7, align 4
  %77 = load i64, i64* %10, align 8
  store i64 %77, i64* %8, align 8
  br label %14

78:                                               ; preds = %14
  ret void
}

; Function Attrs: noinline uwtable
define dso_local i32 @_Z6decodeR7Encoder(%class.Encoder* dereferenceable(40) %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %class.Encoder*, align 8
  store %class.Encoder* %0, %class.Encoder** %3, align 8
  br label %4

4:                                                ; preds = %30, %1
  %5 = load i32, i32* @_ZZ6decodeR7EncoderE3len, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %31

7:                                                ; preds = %4
  %8 = load %class.Encoder*, %class.Encoder** %3, align 8
  %9 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %8)
  store i32 %9, i32* @_ZZ6decodeR7EncoderE4type, align 4
  %10 = load %class.Encoder*, %class.Encoder** %3, align 8
  %11 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %10)
  %12 = shl i32 %11, 24
  store i32 %12, i32* @_ZZ6decodeR7EncoderE3len, align 4
  %13 = load %class.Encoder*, %class.Encoder** %3, align 8
  %14 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %13)
  %15 = shl i32 %14, 16
  %16 = load i32, i32* @_ZZ6decodeR7EncoderE3len, align 4
  %17 = or i32 %16, %15
  store i32 %17, i32* @_ZZ6decodeR7EncoderE3len, align 4
  %18 = load %class.Encoder*, %class.Encoder** %3, align 8
  %19 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %18)
  %20 = shl i32 %19, 8
  %21 = load i32, i32* @_ZZ6decodeR7EncoderE3len, align 4
  %22 = or i32 %21, %20
  store i32 %22, i32* @_ZZ6decodeR7EncoderE3len, align 4
  %23 = load %class.Encoder*, %class.Encoder** %3, align 8
  %24 = call i32 @_ZN7Encoder10decompressEv(%class.Encoder* %23)
  %25 = load i32, i32* @_ZZ6decodeR7EncoderE3len, align 4
  %26 = or i32 %25, %24
  store i32 %26, i32* @_ZZ6decodeR7EncoderE3len, align 4
  %27 = load i32, i32* @_ZZ6decodeR7EncoderE3len, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %7
  store i32 1, i32* @_ZZ6decodeR7EncoderE3len, align 4
  br label %30

30:                                               ; preds = %29, %7
  br label %4

31:                                               ; preds = %4
  %32 = load i32, i32* @_ZZ6decodeR7EncoderE3len, align 4
  %33 = add nsw i32 %32, -1
  store i32 %33, i32* @_ZZ6decodeR7EncoderE3len, align 4
  %34 = load i32, i32* @_ZZ6decodeR7EncoderE4type, align 4
  switch i32 %34, label %50 [
    i32 1, label %35
    i32 2, label %38
    i32 3, label %38
    i32 4, label %38
    i32 6, label %41
    i32 7, label %44
    i32 8, label %47
  ]

35:                                               ; preds = %31
  %36 = load %class.Encoder*, %class.Encoder** %3, align 8
  %37 = call i32 @_Z11decode_jpegR7Encoder(%class.Encoder* dereferenceable(40) %36)
  store i32 %37, i32* %2, align 4
  br label %53

38:                                               ; preds = %31, %31, %31
  %39 = load %class.Encoder*, %class.Encoder** %3, align 8
  %40 = call i32 @_Z10decode_bmpR7Encoder(%class.Encoder* dereferenceable(40) %39)
  store i32 %40, i32* %2, align 4
  br label %53

41:                                               ; preds = %31
  %42 = load %class.Encoder*, %class.Encoder** %3, align 8
  %43 = call i32 @_Z10decode_pgmR7Encoder(%class.Encoder* dereferenceable(40) %42)
  store i32 %43, i32* %2, align 4
  br label %53

44:                                               ; preds = %31
  %45 = load %class.Encoder*, %class.Encoder** %3, align 8
  %46 = call i32 @_Z10decode_rgbR7Encoder(%class.Encoder* dereferenceable(40) %45)
  store i32 %46, i32* %2, align 4
  br label %53

47:                                               ; preds = %31
  %48 = load %class.Encoder*, %class.Encoder** %3, align 8
  %49 = call i32 @_Z10decode_exeR7Encoder(%class.Encoder* dereferenceable(40) %48)
  store i32 %49, i32* %2, align 4
  br label %53

50:                                               ; preds = %31
  %51 = load %class.Encoder*, %class.Encoder** %3, align 8
  %52 = call i32 @_Z14decode_defaultR7Encoder(%class.Encoder* dereferenceable(40) %51)
  store i32 %52, i32* %2, align 4
  br label %53

53:                                               ; preds = %50, %47, %44, %41, %38, %35
  %54 = load i32, i32* %2, align 4
  ret i32 %54
}

; Function Attrs: noinline uwtable
define dso_local void @_Z11printStatusi(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = and i32 %6, 4095
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = load i32, i32* %2, align 4
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0), i32 %10)
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %13 = call i32 @fflush(%struct._IO_FILE* %12)
  br label %14

14:                                               ; preds = %9, %5, %1
  ret void
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #10

; Function Attrs: noinline uwtable
define dso_local void @_Z8compressPKclR7Encoder(i8* %0, i64 %1, %class.Encoder* dereferenceable(40) %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.Encoder*, align 8
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct._IO_FILE*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store %class.Encoder* %2, %class.Encoder** %6, align 8
  %19 = load i8*, i8** %4, align 8
  %20 = call %struct._IO_FILE* @fopen(i8* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0))
  store %struct._IO_FILE* %20, %struct._IO_FILE** %7, align 8
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %22 = icmp ne %struct._IO_FILE* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = load i8*, i8** %4, align 8
  call void @perror(i8* %24)
  call void @_Z4quitPKc(i8* null)
  br label %25

25:                                               ; preds = %23, %3
  %26 = load %class.Encoder*, %class.Encoder** %6, align 8
  %27 = call i64 @_ZNK7Encoder4sizeEv(%class.Encoder* %26)
  store i64 %27, i64* %8, align 8
  %28 = load i8*, i8** %4, align 8
  %29 = call i8* @_ZL10mybasenamePKc(i8* %28)
  %30 = load i64, i64* %5, align 8
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i8* %29, i64 %30)
  %32 = load i32, i32* @level, align 4
  %33 = shl i32 65536, %32
  %34 = mul nsw i32 %33, 64
  store i32 %34, i32* %9, align 4
  store i32 0, i32* %10, align 4
  br label %35

35:                                               ; preds = %150, %25
  %36 = load i64, i64* %5, align 8
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %154

38:                                               ; preds = %35
  %39 = load i32, i32* %9, align 4
  store i32 %39, i32* %11, align 4
  %40 = load i32, i32* %11, align 4
  %41 = sext i32 %40 to i64
  %42 = load i64, i64* %5, align 8
  %43 = icmp sgt i64 %41, %42
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = load i64, i64* %5, align 8
  %46 = trunc i64 %45 to i32
  store i32 %46, i32* %11, align 4
  br label %47

47:                                               ; preds = %44, %38
  %48 = call %struct._IO_FILE* @tmpfile()
  store %struct._IO_FILE* %48, %struct._IO_FILE** %12, align 8
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %50 = icmp ne %struct._IO_FILE* %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  call void @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0))
  call void @_Z4quitPKc(i8* null)
  br label %52

52:                                               ; preds = %51, %47
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %54 = call i64 @ftell(%struct._IO_FILE* %53)
  store i64 %54, i64* %13, align 8
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %57 = load i32, i32* %11, align 4
  call void @_Z6encodeP8_IO_FILES0_i(%struct._IO_FILE* %55, %struct._IO_FILE* %56, i32 %57)
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  call void @rewind(%struct._IO_FILE* %58)
  %59 = load %class.Encoder*, %class.Encoder** %6, align 8
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  call void @_ZN7Encoder7setFileEP8_IO_FILE(%class.Encoder* %59, %struct._IO_FILE* %60)
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %62 = load i64, i64* %13, align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %61, i64 %62, i32 0)
  store i32 0, i32* %15, align 4
  store i32 0, i32* %16, align 4
  store i64 0, i64* %14, align 8
  br label %64

64:                                               ; preds = %77, %52
  %65 = load i64, i64* %14, align 8
  %66 = load i32, i32* %11, align 4
  %67 = sext i32 %66 to i64
  %68 = icmp slt i64 %65, %67
  br i1 %68, label %69, label %80

69:                                               ; preds = %64
  %70 = load %class.Encoder*, %class.Encoder** %6, align 8
  %71 = call i32 @_Z6decodeR7Encoder(%class.Encoder* dereferenceable(40) %70)
  store i32 %71, i32* %15, align 4
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %73 = call i32 @getc(%struct._IO_FILE* %72)
  store i32 %73, i32* %16, align 4
  %74 = icmp ne i32 %71, %73
  br i1 %74, label %75, label %76

75:                                               ; preds = %69
  br label %80

76:                                               ; preds = %69
  br label %77

77:                                               ; preds = %76
  %78 = load i64, i64* %14, align 8
  %79 = add nsw i64 %78, 1
  store i64 %79, i64* %14, align 8
  br label %64

80:                                               ; preds = %75, %64
  %81 = load i64, i64* %14, align 8
  %82 = load i32, i32* %11, align 4
  %83 = sext i32 %82 to i64
  %84 = icmp ne i64 %81, %83
  br i1 %84, label %89, label %85

85:                                               ; preds = %80
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %87 = call i32 @getc(%struct._IO_FILE* %86)
  %88 = icmp ne i32 %87, -1
  br i1 %88, label %89, label %127

89:                                               ; preds = %85, %80
  %90 = load i32, i32* %10, align 4
  %91 = sext i32 %90 to i64
  %92 = load i64, i64* %14, align 8
  %93 = add nsw i64 %91, %92
  %94 = load i32, i32* %16, align 4
  %95 = load i32, i32* %15, align 4
  %96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.24, i64 0, i64 0), i64 %93, i32 %94, i32 %95)
  %97 = load %class.Encoder*, %class.Encoder** %6, align 8
  call void @_ZN7Encoder8compressEi(%class.Encoder* %97, i32 0)
  %98 = load %class.Encoder*, %class.Encoder** %6, align 8
  %99 = load i32, i32* %11, align 4
  %100 = ashr i32 %99, 24
  call void @_ZN7Encoder8compressEi(%class.Encoder* %98, i32 %100)
  %101 = load %class.Encoder*, %class.Encoder** %6, align 8
  %102 = load i32, i32* %11, align 4
  %103 = ashr i32 %102, 16
  call void @_ZN7Encoder8compressEi(%class.Encoder* %101, i32 %103)
  %104 = load %class.Encoder*, %class.Encoder** %6, align 8
  %105 = load i32, i32* %11, align 4
  %106 = ashr i32 %105, 8
  call void @_ZN7Encoder8compressEi(%class.Encoder* %104, i32 %106)
  %107 = load %class.Encoder*, %class.Encoder** %6, align 8
  %108 = load i32, i32* %11, align 4
  call void @_ZN7Encoder8compressEi(%class.Encoder* %107, i32 %108)
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %110 = load i64, i64* %13, align 8
  %111 = call i32 @fseek(%struct._IO_FILE* %109, i64 %110, i32 0)
  store i32 0, i32* %17, align 4
  br label %112

112:                                              ; preds = %123, %89
  %113 = load i32, i32* %17, align 4
  %114 = load i32, i32* %11, align 4
  %115 = icmp slt i32 %113, %114
  br i1 %115, label %116, label %126

116:                                              ; preds = %112
  %117 = load i32, i32* %10, align 4
  %118 = load i32, i32* %17, align 4
  %119 = add nsw i32 %117, %118
  call void @_Z11printStatusi(i32 %119)
  %120 = load %class.Encoder*, %class.Encoder** %6, align 8
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %122 = call i32 @getc(%struct._IO_FILE* %121)
  call void @_ZN7Encoder8compressEi(%class.Encoder* %120, i32 %122)
  br label %123

123:                                              ; preds = %116
  %124 = load i32, i32* %17, align 4
  %125 = add nsw i32 %124, 1
  store i32 %125, i32* %17, align 4
  br label %112

126:                                              ; preds = %112
  br label %143

127:                                              ; preds = %85
  %128 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  call void @rewind(%struct._IO_FILE* %128)
  store i64 0, i64* %14, align 8
  br label %129

129:                                              ; preds = %133, %127
  %130 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %131 = call i32 @getc(%struct._IO_FILE* %130)
  store i32 %131, i32* %18, align 4
  %132 = icmp ne i32 %131, -1
  br i1 %132, label %133, label %142

133:                                              ; preds = %129
  %134 = load i32, i32* %10, align 4
  %135 = sext i32 %134 to i64
  %136 = load i64, i64* %14, align 8
  %137 = add nsw i64 %136, 1
  store i64 %137, i64* %14, align 8
  %138 = add nsw i64 %135, %136
  %139 = trunc i64 %138 to i32
  call void @_Z11printStatusi(i32 %139)
  %140 = load %class.Encoder*, %class.Encoder** %6, align 8
  %141 = load i32, i32* %18, align 4
  call void @_ZN7Encoder8compressEi(%class.Encoder* %140, i32 %141)
  br label %129

142:                                              ; preds = %129
  br label %143

143:                                              ; preds = %142, %126
  %144 = load i32, i32* %11, align 4
  %145 = sext i32 %144 to i64
  %146 = load i64, i64* %5, align 8
  %147 = sub nsw i64 %146, %145
  store i64 %147, i64* %5, align 8
  %148 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %149 = call i32 @fclose(%struct._IO_FILE* %148)
  br label %150

150:                                              ; preds = %143
  %151 = load i32, i32* %9, align 4
  %152 = load i32, i32* %10, align 4
  %153 = add nsw i32 %152, %151
  store i32 %153, i32* %10, align 4
  br label %35

154:                                              ; preds = %35
  %155 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %156 = icmp ne %struct._IO_FILE* %155, null
  br i1 %156, label %157, label %160

157:                                              ; preds = %154
  %158 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %159 = call i32 @fclose(%struct._IO_FILE* %158)
  br label %160

160:                                              ; preds = %157, %154
  %161 = load %class.Encoder*, %class.Encoder** %6, align 8
  %162 = call i64 @_ZNK7Encoder4sizeEv(%class.Encoder* %161)
  %163 = load i64, i64* %8, align 8
  %164 = sub nsw i64 %162, %163
  %165 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i64 %164)
  ret void
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #10

declare dso_local void @perror(i8*) #10

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i64 @_ZNK7Encoder4sizeEv(%class.Encoder* %0) #0 comdat align 2 {
  %2 = alloca %class.Encoder*, align 8
  store %class.Encoder* %0, %class.Encoder** %2, align 8
  %3 = load %class.Encoder*, %class.Encoder** %2, align 8
  %4 = getelementptr inbounds %class.Encoder, %class.Encoder* %3, i32 0, i32 2
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %6 = call i64 @ftell(%struct._IO_FILE* %5)
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @_ZL10mybasenamePKc(i8* %0) #1 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call i8* @strrchr(i8* %4, i32 47) #19
  store i8* %5, i8** %3, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = load i8*, i8** %3, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 1
  br label %13

11:                                               ; preds = %1
  %12 = load i8*, i8** %2, align 8
  br label %13

13:                                               ; preds = %11, %8
  %14 = phi i8* [ %10, %8 ], [ %12, %11 ]
  ret i8* %14
}

declare dso_local %struct._IO_FILE* @tmpfile() #10

declare dso_local void @rewind(%struct._IO_FILE*) #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN7Encoder7setFileEP8_IO_FILE(%class.Encoder* %0, %struct._IO_FILE* %1) #1 comdat align 2 {
  %3 = alloca %class.Encoder*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  store %class.Encoder* %0, %class.Encoder** %3, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  %5 = load %class.Encoder*, %class.Encoder** %3, align 8
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %7 = getelementptr inbounds %class.Encoder, %class.Encoder* %5, i32 0, i32 6
  store %struct._IO_FILE* %6, %struct._IO_FILE** %7, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN7Encoder8compressEi(%class.Encoder* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Encoder*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.Encoder* %0, %class.Encoder** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.Encoder*, %class.Encoder** %3, align 8
  %7 = load i32, i32* @level, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = load i32, i32* %4, align 4
  %11 = getelementptr inbounds %class.Encoder, %class.Encoder* %6, i32 0, i32 2
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %13 = call i32 @putc(i32 %10, %struct._IO_FILE* %12)
  br label %28

14:                                               ; preds = %2
  store i32 7, i32* %5, align 4
  br label %15

15:                                               ; preds = %24, %14
  %16 = load i32, i32* %5, align 4
  %17 = icmp sge i32 %16, 0
  br i1 %17, label %18, label %27

18:                                               ; preds = %15
  %19 = load i32, i32* %4, align 4
  %20 = load i32, i32* %5, align 4
  %21 = ashr i32 %19, %20
  %22 = and i32 %21, 1
  %23 = call i32 @_ZN7Encoder4codeEi(%class.Encoder* %6, i32 %22)
  br label %24

24:                                               ; preds = %18
  %25 = load i32, i32* %5, align 4
  %26 = add nsw i32 %25, -1
  store i32 %26, i32* %5, align 4
  br label %15

27:                                               ; preds = %15
  br label %28

28:                                               ; preds = %27, %9
  ret void
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #10

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #9

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i1 @_Z7makedirPKc(i8* %0) #1 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  ret i1 false
}

; Function Attrs: noinline uwtable
define dso_local void @_Z10decompressPKclR7Encoder(i8* %0, i64 %1, %class.Encoder* dereferenceable(40) %2) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.Encoder*, align 8
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %class.Buf, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*
  %15 = alloca i32
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store %class.Encoder* %2, %class.Encoder** %6, align 8
  %19 = load i8*, i8** %4, align 8
  %20 = call %struct._IO_FILE* @fopen(i8* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0))
  store %struct._IO_FILE* %20, %struct._IO_FILE** %7, align 8
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %22 = icmp ne %struct._IO_FILE* %21, null
  br i1 %22, label %23, label %78

23:                                               ; preds = %3
  %24 = load i8*, i8** %4, align 8
  %25 = call i8* @_ZL10mybasenamePKc(i8* %24)
  %26 = load i64, i64* %5, align 8
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i64 0, i64 0), i8* %25, i64 %26)
  store i8 0, i8* %8, align 1
  store i32 0, i32* %9, align 4
  br label %28

28:                                               ; preds = %57, %23
  %29 = load i32, i32* %9, align 4
  %30 = sext i32 %29 to i64
  %31 = load i64, i64* %5, align 8
  %32 = icmp slt i64 %30, %31
  br i1 %32, label %33, label %60

33:                                               ; preds = %28
  %34 = load i32, i32* %9, align 4
  call void @_Z11printStatusi(i32 %34)
  %35 = load i8, i8* %8, align 1
  %36 = trunc i8 %35 to i1
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  br label %41

38:                                               ; preds = %33
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %40 = call i32 @getc(%struct._IO_FILE* %39)
  br label %41

41:                                               ; preds = %38, %37
  %42 = phi i32 [ -1, %37 ], [ %40, %38 ]
  store i32 %42, i32* %10, align 4
  %43 = load %class.Encoder*, %class.Encoder** %6, align 8
  %44 = call i32 @_Z6decodeR7Encoder(%class.Encoder* dereferenceable(40) %43)
  store i32 %44, i32* %11, align 4
  %45 = load i32, i32* %10, align 4
  %46 = load i32, i32* %11, align 4
  %47 = icmp ne i32 %45, %46
  br i1 %47, label %48, label %56

48:                                               ; preds = %41
  %49 = load i8, i8* %8, align 1
  %50 = trunc i8 %49 to i1
  br i1 %50, label %56, label %51

51:                                               ; preds = %48
  %52 = load i32, i32* %9, align 4
  %53 = load i32, i32* %10, align 4
  %54 = load i32, i32* %11, align 4
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.27, i64 0, i64 0), i32 %52, i32 %53, i32 %54)
  store i8 1, i8* %8, align 1
  br label %56

56:                                               ; preds = %51, %48, %41
  br label %57

57:                                               ; preds = %56
  %58 = load i32, i32* %9, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %9, align 4
  br label %28

60:                                               ; preds = %28
  %61 = load i8, i8* %8, align 1
  %62 = trunc i8 %61 to i1
  br i1 %62, label %69, label %63

63:                                               ; preds = %60
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %65 = call i32 @getc(%struct._IO_FILE* %64)
  %66 = icmp ne i32 %65, -1
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i64 0, i64 0))
  br label %75

69:                                               ; preds = %63, %60
  %70 = load i8, i8* %8, align 1
  %71 = trunc i8 %70 to i1
  br i1 %71, label %74, label %72

72:                                               ; preds = %69
  %73 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.29, i64 0, i64 0))
  br label %74

74:                                               ; preds = %72, %69
  br label %75

75:                                               ; preds = %74, %67
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %77 = call i32 @fclose(%struct._IO_FILE* %76)
  br label %190

78:                                               ; preds = %3
  %79 = load i8*, i8** %4, align 8
  %80 = call %struct._IO_FILE* @fopen(i8* %79, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0))
  store %struct._IO_FILE* %80, %struct._IO_FILE** %7, align 8
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %82 = icmp ne %struct._IO_FILE* %81, null
  br i1 %82, label %145, label %83

83:                                               ; preds = %78
  %84 = load i8*, i8** %4, align 8
  call void @_ZN6StringC2EPKc(%class.Buf* %12, i8* %84)
  store i32 0, i32* %13, align 4
  br label %85

85:                                               ; preds = %138, %83
  %86 = bitcast %class.Buf* %12 to %class.Array.0*
  %87 = load i32, i32* %13, align 4
  %88 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %86, i32 %87)
          to label %89 unwind label %127

89:                                               ; preds = %85
  %90 = load i8, i8* %88, align 1
  %91 = icmp ne i8 %90, 0
  br i1 %91, label %92, label %141

92:                                               ; preds = %89
  %93 = bitcast %class.Buf* %12 to %class.Array.0*
  %94 = load i32, i32* %13, align 4
  %95 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %93, i32 %94)
          to label %96 unwind label %127

96:                                               ; preds = %92
  %97 = load i8, i8* %95, align 1
  %98 = sext i8 %97 to i32
  %99 = icmp eq i32 %98, 47
  br i1 %99, label %108, label %100

100:                                              ; preds = %96
  %101 = bitcast %class.Buf* %12 to %class.Array.0*
  %102 = load i32, i32* %13, align 4
  %103 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %101, i32 %102)
          to label %104 unwind label %127

104:                                              ; preds = %100
  %105 = load i8, i8* %103, align 1
  %106 = sext i8 %105 to i32
  %107 = icmp eq i32 %106, 92
  br i1 %107, label %108, label %137

108:                                              ; preds = %104, %96
  %109 = bitcast %class.Buf* %12 to %class.Array.0*
  %110 = load i32, i32* %13, align 4
  %111 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %109, i32 %110)
          to label %112 unwind label %127

112:                                              ; preds = %108
  %113 = load i8, i8* %111, align 1
  store i8 %113, i8* %16, align 1
  %114 = bitcast %class.Buf* %12 to %class.Array.0*
  %115 = load i32, i32* %13, align 4
  %116 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %114, i32 %115)
          to label %117 unwind label %127

117:                                              ; preds = %112
  store i8 0, i8* %116, align 1
  %118 = invoke i8* @_ZNK6String5c_strEv(%class.Buf* %12)
          to label %119 unwind label %127

119:                                              ; preds = %117
  %120 = invoke zeroext i1 @_Z7makedirPKc(i8* %118)
          to label %121 unwind label %127

121:                                              ; preds = %119
  br i1 %120, label %122, label %131

122:                                              ; preds = %121
  %123 = invoke i8* @_ZNK6String5c_strEv(%class.Buf* %12)
          to label %124 unwind label %127

124:                                              ; preds = %122
  %125 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i64 0, i64 0), i8* %123)
          to label %126 unwind label %127

126:                                              ; preds = %124
  br label %131

127:                                              ; preds = %141, %131, %124, %122, %119, %117, %112, %108, %100, %92, %85
  %128 = landingpad { i8*, i32 }
          cleanup
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %14, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %15, align 4
  call void @_ZN6StringD2Ev(%class.Buf* %12) #2
  br label %191

131:                                              ; preds = %126, %121
  %132 = load i8, i8* %16, align 1
  %133 = bitcast %class.Buf* %12 to %class.Array.0*
  %134 = load i32, i32* %13, align 4
  %135 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %133, i32 %134)
          to label %136 unwind label %127

136:                                              ; preds = %131
  store i8 %132, i8* %135, align 1
  br label %137

137:                                              ; preds = %136, %104
  br label %138

138:                                              ; preds = %137
  %139 = load i32, i32* %13, align 4
  %140 = add nsw i32 %139, 1
  store i32 %140, i32* %13, align 4
  br label %85

141:                                              ; preds = %89
  %142 = load i8*, i8** %4, align 8
  %143 = invoke %struct._IO_FILE* @fopen(i8* %142, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0))
          to label %144 unwind label %127

144:                                              ; preds = %141
  store %struct._IO_FILE* %143, %struct._IO_FILE** %7, align 8
  call void @_ZN6StringD2Ev(%class.Buf* %12) #2
  br label %145

145:                                              ; preds = %144, %78
  %146 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %147 = icmp ne %struct._IO_FILE* %146, null
  br i1 %147, label %148, label %170

148:                                              ; preds = %145
  %149 = load i8*, i8** %4, align 8
  %150 = load i64, i64* %5, align 8
  %151 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i64 0, i64 0), i8* %149, i64 %150)
  store i32 0, i32* %17, align 4
  br label %152

152:                                              ; preds = %163, %148
  %153 = load i32, i32* %17, align 4
  %154 = sext i32 %153 to i64
  %155 = load i64, i64* %5, align 8
  %156 = icmp slt i64 %154, %155
  br i1 %156, label %157, label %166

157:                                              ; preds = %152
  %158 = load i32, i32* %17, align 4
  call void @_Z11printStatusi(i32 %158)
  %159 = load %class.Encoder*, %class.Encoder** %6, align 8
  %160 = call i32 @_Z6decodeR7Encoder(%class.Encoder* dereferenceable(40) %159)
  %161 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %162 = call i32 @putc(i32 %160, %struct._IO_FILE* %161)
  br label %163

163:                                              ; preds = %157
  %164 = load i32, i32* %17, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %17, align 4
  br label %152

166:                                              ; preds = %152
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %168 = call i32 @fclose(%struct._IO_FILE* %167)
  %169 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i64 0, i64 0))
  br label %189

170:                                              ; preds = %145
  %171 = load i8*, i8** %4, align 8
  call void @perror(i8* %171)
  %172 = load i8*, i8** %4, align 8
  %173 = load i64, i64* %5, align 8
  %174 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.34, i64 0, i64 0), i8* %172, i64 %173)
  store i32 0, i32* %18, align 4
  br label %175

175:                                              ; preds = %184, %170
  %176 = load i32, i32* %18, align 4
  %177 = sext i32 %176 to i64
  %178 = load i64, i64* %5, align 8
  %179 = icmp slt i64 %177, %178
  br i1 %179, label %180, label %187

180:                                              ; preds = %175
  %181 = load i32, i32* %18, align 4
  call void @_Z11printStatusi(i32 %181)
  %182 = load %class.Encoder*, %class.Encoder** %6, align 8
  %183 = call i32 @_Z6decodeR7Encoder(%class.Encoder* dereferenceable(40) %182)
  br label %184

184:                                              ; preds = %180
  %185 = load i32, i32* %18, align 4
  %186 = add nsw i32 %185, 1
  store i32 %186, i32* %18, align 4
  br label %175

187:                                              ; preds = %175
  %188 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i64 0, i64 0))
  br label %189

189:                                              ; preds = %187, %166
  br label %190

190:                                              ; preds = %189, %75
  ret void

191:                                              ; preds = %127
  %192 = load i8*, i8** %14, align 8
  %193 = load i32, i32* %15, align 4
  %194 = insertvalue { i8*, i32 } undef, i8* %192, 0
  %195 = insertvalue { i8*, i32 } %194, i32 %193, 1
  resume { i8*, i32 } %195
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN6StringC2EPKc(%class.Buf* %0, i8* %1) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.Buf*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %class.Buf* %0, %class.Buf** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load %class.Buf*, %class.Buf** %3, align 8
  %8 = bitcast %class.Buf* %7 to %class.Array.0*
  call void @_ZN5ArrayIcLi0EEC2Ei(%class.Array.0* %8, i32 1)
  %9 = load i8*, i8** %4, align 8
  invoke void @_ZN6StringpLEPKc(%class.Buf* %7, i8* %9)
          to label %10 unwind label %11

10:                                               ; preds = %2
  ret void

11:                                               ; preds = %2
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  store i8* %13, i8** %5, align 8
  %14 = extractvalue { i8*, i32 } %12, 1
  store i32 %14, i32* %6, align 4
  %15 = bitcast %class.Buf* %7 to %class.Array.0*
  call void @_ZN5ArrayIcLi0EED2Ev(%class.Array.0* %15) #2
  br label %16

16:                                               ; preds = %11
  %17 = load i8*, i8** %5, align 8
  %18 = load i32, i32* %6, align 4
  %19 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array.0*, align 8
  %4 = alloca i32, align 4
  store %class.Array.0* %0, %class.Array.0** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.0*, %class.Array.0** %3, align 8
  %6 = getelementptr inbounds %class.Array.0, %class.Array.0* %5, i32 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %7, i64 %9
  ret i8* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i8* @_ZNK6String5c_strEv(%class.Buf* %0) #0 comdat align 2 {
  %2 = alloca %class.Buf*, align 8
  store %class.Buf* %0, %class.Buf** %2, align 8
  %3 = load %class.Buf*, %class.Buf** %2, align 8
  %4 = bitcast %class.Buf* %3 to %class.Array.0*
  %5 = call dereferenceable(1) i8* @_ZNK5ArrayIcLi0EEixEi(%class.Array.0* %4, i32 0)
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN6StringD2Ev(%class.Buf* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.Buf*, align 8
  store %class.Buf* %0, %class.Buf** %2, align 8
  %3 = load %class.Buf*, %class.Buf** %2, align 8
  %4 = bitcast %class.Buf* %3 to %class.Array.0*
  call void @_ZN5ArrayIcLi0EED2Ev(%class.Array.0* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIcLi0EED2Ev(%class.Array.0* %0) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Array.0*, align 8
  store %class.Array.0* %0, %class.Array.0** %2, align 8
  %3 = load %class.Array.0*, %class.Array.0** %2, align 8
  %4 = getelementptr inbounds %class.Array.0, %class.Array.0* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = mul i64 %6, 1
  %8 = sub i64 0, %7
  %9 = trunc i64 %8 to i32
  invoke void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %9)
          to label %10 unwind label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.Array.0, %class.Array.0* %3, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  call void @free(i8* %12) #2
  ret void

13:                                               ; preds = %1
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  call void @__clang_call_terminate(i8* %15) #15
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(1) i8* @_ZNK5ArrayIcLi0EEixEi(%class.Array.0* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array.0*, align 8
  %4 = alloca i32, align 4
  store %class.Array.0* %0, %class.Array.0** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.0*, %class.Array.0** %3, align 8
  %6 = getelementptr inbounds %class.Array.0, %class.Array.0* %5, i32 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %7, i64 %9
  ret i8* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIcLi0EEC2Ei(%class.Array.0* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Array.0*, align 8
  %4 = alloca i32, align 4
  store %class.Array.0* %0, %class.Array.0** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.0*, %class.Array.0** %3, align 8
  %6 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIcLi0EE6createEi(%class.Array.0* %5, i32 %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN6StringpLEPKc(%class.Buf* %0, i8* %1) #0 comdat align 2 {
  %3 = alloca %class.Buf*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8, align 1
  store %class.Buf* %0, %class.Buf** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load %class.Buf*, %class.Buf** %3, align 8
  %7 = bitcast %class.Buf* %6 to %class.Array.0*
  call void @_ZN5ArrayIcLi0EE8pop_backEv(%class.Array.0* %7)
  br label %8

8:                                                ; preds = %12, %2
  %9 = load i8*, i8** %4, align 8
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = bitcast %class.Buf* %6 to %class.Array.0*
  %14 = load i8*, i8** %4, align 8
  %15 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %15, i8** %4, align 8
  call void @_ZN5ArrayIcLi0EE9push_backERKc(%class.Array.0* %13, i8* dereferenceable(1) %14)
  br label %8

16:                                               ; preds = %8
  %17 = bitcast %class.Buf* %6 to %class.Array.0*
  store i8 0, i8* %5, align 1
  call void @_ZN5ArrayIcLi0EE9push_backERKc(%class.Array.0* %17, i8* dereferenceable(1) %5)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIcLi0EE8pop_backEv(%class.Array.0* %0) #1 comdat align 2 {
  %2 = alloca %class.Array.0*, align 8
  store %class.Array.0* %0, %class.Array.0** %2, align 8
  %3 = load %class.Array.0*, %class.Array.0** %2, align 8
  %4 = getelementptr inbounds %class.Array.0, %class.Array.0* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.Array.0, %class.Array.0* %3, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, -1
  store i32 %10, i32* %8, align 8
  br label %11

11:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIcLi0EE9push_backERKc(%class.Array.0* %0, i8* dereferenceable(1) %1) #0 comdat align 2 {
  %3 = alloca %class.Array.0*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store %class.Array.0* %0, %class.Array.0** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load %class.Array.0*, %class.Array.0** %3, align 8
  %7 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %21

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %5, align 4
  %15 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = mul nsw i32 %16, 2
  %18 = call i32 @_Z3maxii(i32 1, i32 %17)
  call void @_ZN5ArrayIcLi0EE6resizeEi(%class.Array.0* %6, i32 %18)
  %19 = load i32, i32* %5, align 4
  %20 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 0
  store i32 %19, i32* %20, align 8
  br label %21

21:                                               ; preds = %12, %2
  %22 = load i8*, i8** %4, align 8
  %23 = load i8, i8* %22, align 1
  %24 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 3
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = sext i32 %27 to i64
  %30 = getelementptr inbounds i8, i8* %25, i64 %29
  store i8 %23, i8* %30, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_Z3maxii(i32 %0, i32 %1) #1 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %5, %6
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = load i32, i32* %4, align 4
  br label %12

10:                                               ; preds = %2
  %11 = load i32, i32* %3, align 4
  br label %12

12:                                               ; preds = %10, %8
  %13 = phi i32 [ %9, %8 ], [ %11, %10 ]
  ret i32 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIcLi0EE6resizeEi(%class.Array.0* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array.0*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store %class.Array.0* %0, %class.Array.0** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load %class.Array.0*, %class.Array.0** %3, align 8
  %9 = load i32, i32* %4, align 4
  %10 = getelementptr inbounds %class.Array.0, %class.Array.0* %8, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp sle i32 %9, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = load i32, i32* %4, align 4
  %15 = getelementptr inbounds %class.Array.0, %class.Array.0* %8, i32 0, i32 0
  store i32 %14, i32* %15, align 8
  br label %46

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.Array.0, %class.Array.0* %8, i32 0, i32 2
  %18 = load i8*, i8** %17, align 8
  store i8* %18, i8** %5, align 8
  %19 = getelementptr inbounds %class.Array.0, %class.Array.0* %8, i32 0, i32 3
  %20 = load i8*, i8** %19, align 8
  store i8* %20, i8** %6, align 8
  %21 = getelementptr inbounds %class.Array.0, %class.Array.0* %8, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %7, align 4
  %23 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIcLi0EE6createEi(%class.Array.0* %8, i32 %23)
  %24 = load i8*, i8** %5, align 8
  %25 = icmp ne i8* %24, null
  br i1 %25, label %26, label %46

26:                                               ; preds = %16
  %27 = load i8*, i8** %6, align 8
  %28 = icmp ne i8* %27, null
  br i1 %28, label %29, label %44

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.Array.0, %class.Array.0* %8, i32 0, i32 3
  %31 = load i8*, i8** %30, align 8
  %32 = load i8*, i8** %6, align 8
  %33 = load i32, i32* %4, align 4
  %34 = load i32, i32* %7, align 4
  %35 = call i32 @_Z3minii(i32 %33, i32 %34)
  %36 = sext i32 %35 to i64
  %37 = mul i64 1, %36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %32, i64 %37, i1 false)
  %38 = getelementptr inbounds %class.Array.0, %class.Array.0* %8, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = sext i32 %39 to i64
  %41 = mul i64 %40, 1
  %42 = sub i64 0, %41
  %43 = trunc i64 %42 to i32
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %43)
  br label %44

44:                                               ; preds = %29, %26
  %45 = load i8*, i8** %5, align 8
  call void @free(i8* %45) #2
  br label %46

46:                                               ; preds = %44, %16, %13
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIcLi0EE6createEi(%class.Array.0* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array.0*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.Array.0* %0, %class.Array.0** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.Array.0*, %class.Array.0** %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 0
  store i32 %7, i32* %9, align 8
  %10 = load i32, i32* %4, align 4
  %11 = icmp sle i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 3
  store i8* null, i8** %13, align 8
  %14 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 2
  store i8* null, i8** %14, align 8
  br label %35

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 1
  %20 = add i64 0, %19
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* %5, align 4
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %22)
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = call noalias i8* @calloc(i64 %24, i64 1) #2
  %26 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 2
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %15
  call void @_Z4quitPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0))
  br label %31

31:                                               ; preds = %30, %15
  %32 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %class.Array.0, %class.Array.0* %6, i32 0, i32 3
  store i8* %33, i8** %34, align 8
  br label %35

35:                                               ; preds = %31, %12
  ret void
}

; Function Attrs: noinline uwtable
define dso_local i8* @_Z7getlineP8_IO_FILE(%struct._IO_FILE* %0) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca i8*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8*
  %5 = alloca i32
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZ7getlineP8_IO_FILEE1s to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %16, !prof !2

10:                                               ; preds = %1
  %11 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ7getlineP8_IO_FILEE1s) #2
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  invoke void @_ZN6StringC2EPKc(%class.Buf* @_ZZ7getlineP8_IO_FILEE1s, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.36, i64 0, i64 0))
          to label %14 unwind label %37

14:                                               ; preds = %13
  %15 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.Buf*)* @_ZN6StringD2Ev to void (i8*)*), i8* bitcast (%class.Buf* @_ZZ7getlineP8_IO_FILEE1s to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZ7getlineP8_IO_FILEE1s) #2
  br label %16

16:                                               ; preds = %14, %10, %1
  store i32 0, i32* %6, align 4
  br label %17

17:                                               ; preds = %50, %16
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %19 = call i32 @getc(%struct._IO_FILE* %18)
  store i32 %19, i32* %7, align 4
  %20 = icmp ne i32 %19, -1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = load i32, i32* %7, align 4
  %23 = icmp ne i32 %22, 26
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = load i32, i32* %7, align 4
  %26 = icmp ne i32 %25, 10
  br label %27

27:                                               ; preds = %24, %21, %17
  %28 = phi i1 [ false, %21 ], [ false, %17 ], [ %26, %24 ]
  br i1 %28, label %29, label %51

29:                                               ; preds = %27
  %30 = load i32, i32* %6, align 4
  %31 = call i32 @_ZNK5ArrayIcLi0EE4sizeEv(%class.Array.0* getelementptr inbounds (%class.Buf, %class.Buf* @_ZZ7getlineP8_IO_FILEE1s, i32 0, i32 0))
  %32 = icmp sge i32 %30, %31
  br i1 %32, label %33, label %41

33:                                               ; preds = %29
  %34 = load i32, i32* %6, align 4
  %35 = mul nsw i32 %34, 2
  %36 = add nsw i32 %35, 1
  call void @_ZN5ArrayIcLi0EE6resizeEi(%class.Array.0* getelementptr inbounds (%class.Buf, %class.Buf* @_ZZ7getlineP8_IO_FILEE1s, i32 0, i32 0), i32 %36)
  br label %41

37:                                               ; preds = %13
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %4, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %5, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZ7getlineP8_IO_FILEE1s) #2
  br label %71

41:                                               ; preds = %33, %29
  %42 = load i32, i32* %7, align 4
  %43 = icmp ne i32 %42, 13
  br i1 %43, label %44, label %50

44:                                               ; preds = %41
  %45 = load i32, i32* %7, align 4
  %46 = trunc i32 %45 to i8
  %47 = load i32, i32* %6, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %6, align 4
  %49 = call dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* getelementptr inbounds (%class.Buf, %class.Buf* @_ZZ7getlineP8_IO_FILEE1s, i32 0, i32 0), i32 %47)
  store i8 %46, i8* %49, align 1
  br label %50

50:                                               ; preds = %44, %41
  br label %17

51:                                               ; preds = %27
  %52 = load i32, i32* %6, align 4
  %53 = call i32 @_ZNK5ArrayIcLi0EE4sizeEv(%class.Array.0* getelementptr inbounds (%class.Buf, %class.Buf* @_ZZ7getlineP8_IO_FILEE1s, i32 0, i32 0))
  %54 = icmp sge i32 %52, %53
  br i1 %54, label %55, label %58

55:                                               ; preds = %51
  %56 = load i32, i32* %6, align 4
  %57 = add nsw i32 %56, 1
  call void @_ZN5ArrayIcLi0EE6resizeEi(%class.Array.0* getelementptr inbounds (%class.Buf, %class.Buf* @_ZZ7getlineP8_IO_FILEE1s, i32 0, i32 0), i32 %57)
  br label %58

58:                                               ; preds = %55, %51
  %59 = load i32, i32* %6, align 4
  %60 = call dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* getelementptr inbounds (%class.Buf, %class.Buf* @_ZZ7getlineP8_IO_FILEE1s, i32 0, i32 0), i32 %59)
  store i8 0, i8* %60, align 1
  %61 = load i32, i32* %7, align 4
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %66, label %63

63:                                               ; preds = %58
  %64 = load i32, i32* %7, align 4
  %65 = icmp eq i32 %64, 26
  br i1 %65, label %66, label %67

66:                                               ; preds = %63, %58
  store i8* null, i8** %2, align 8
  br label %69

67:                                               ; preds = %63
  %68 = call i8* @_ZNK6String5c_strEv(%class.Buf* @_ZZ7getlineP8_IO_FILEE1s)
  store i8* %68, i8** %2, align 8
  br label %69

69:                                               ; preds = %67, %66
  %70 = load i8*, i8** %2, align 8
  ret i8* %70

71:                                               ; preds = %37
  %72 = load i8*, i8** %4, align 8
  %73 = load i32, i32* %5, align 4
  %74 = insertvalue { i8*, i32 } undef, i8* %72, 0
  %75 = insertvalue { i8*, i32 } %74, i32 %73, 1
  resume { i8*, i32 } %75
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK5ArrayIcLi0EE4sizeEv(%class.Array.0* %0) #1 comdat align 2 {
  %2 = alloca %class.Array.0*, align 8
  store %class.Array.0* %0, %class.Array.0** %2, align 8
  %3 = load %class.Array.0*, %class.Array.0** %2, align 8
  %4 = getelementptr inbounds %class.Array.0, %class.Array.0* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline uwtable
define dso_local i32 @_Z7putsizeR6StringS0_PKci(%class.Buf* dereferenceable(24) %0, %class.Buf* dereferenceable(24) %1, i8* %2, i32 %3) #0 {
  %5 = alloca %class.Buf*, align 8
  %6 = alloca %class.Buf*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct._IO_FILE*, align 8
  %11 = alloca i64, align 8
  store %class.Buf* %0, %class.Buf** %5, align 8
  store %class.Buf* %1, %class.Buf** %6, align 8
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %12 = load i8*, i8** %7, align 8
  %13 = call %struct._IO_FILE* @fopen(i8* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0))
  store %struct._IO_FILE* %13, %struct._IO_FILE** %10, align 8
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %15 = icmp ne %struct._IO_FILE* %14, null
  br i1 %15, label %16, label %41

16:                                               ; preds = %4
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %18 = call i32 @fseek(%struct._IO_FILE* %17, i64 0, i32 2)
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %20 = call i64 @ftell(%struct._IO_FILE* %19)
  store i64 %20, i64* %11, align 8
  %21 = load i64, i64* %11, align 8
  %22 = icmp sge i64 %21, 0
  br i1 %22, label %23, label %38

23:                                               ; preds = %16
  %24 = load i64, i64* %11, align 8
  %25 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZZ7putsizeR6StringS0_PKciE3blk, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0), i64 %24) #2
  %26 = load %class.Buf*, %class.Buf** %5, align 8
  call void @_ZN6StringpLEPKc(%class.Buf* %26, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZZ7putsizeR6StringS0_PKciE3blk, i64 0, i64 0))
  %27 = load i8*, i8** %7, align 8
  %28 = load i32, i32* %8, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %27, i64 %29
  %31 = load %class.Buf*, %class.Buf** %5, align 8
  call void @_ZN6StringpLEPKc(%class.Buf* %31, i8* %30)
  %32 = load %class.Buf*, %class.Buf** %5, align 8
  call void @_ZN6StringpLEPKc(%class.Buf* %32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0))
  %33 = load i8*, i8** %7, align 8
  %34 = load %class.Buf*, %class.Buf** %6, align 8
  call void @_ZN6StringpLEPKc(%class.Buf* %34, i8* %33)
  %35 = load %class.Buf*, %class.Buf** %6, align 8
  call void @_ZN6StringpLEPKc(%class.Buf* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0))
  %36 = load i32, i32* %9, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %9, align 4
  br label %38

38:                                               ; preds = %23, %16
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %40 = call i32 @fclose(%struct._IO_FILE* %39)
  br label %41

41:                                               ; preds = %38, %4
  %42 = load i32, i32* %9, align 4
  ret i32 %42
}

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #3

; Function Attrs: noinline uwtable
define dso_local i32 @_Z6expandR6StringS0_PKci(%class.Buf* dereferenceable(24) %0, %class.Buf* dereferenceable(24) %1, i8* %2, i32 %3) #0 {
  %5 = alloca %class.Buf*, align 8
  %6 = alloca %class.Buf*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store %class.Buf* %0, %class.Buf** %5, align 8
  store %class.Buf* %1, %class.Buf** %6, align 8
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load %class.Buf*, %class.Buf** %5, align 8
  %10 = load %class.Buf*, %class.Buf** %6, align 8
  %11 = load i8*, i8** %7, align 8
  %12 = load i32, i32* %8, align 4
  %13 = call i32 @_Z7putsizeR6StringS0_PKci(%class.Buf* dereferenceable(24) %9, %class.Buf* dereferenceable(24) %10, i8* %11, i32 %12)
  ret i32 %13
}

; Function Attrs: noinline uwtable
define dso_local i32 @_Z7paqmainiPPc(i32 %0, i8** %1) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca %struct._IO_FILE*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %class.Array.6, align 8
  %13 = alloca %class.Array.14, align 8
  %14 = alloca i32, align 4
  %15 = alloca %class.Buf, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %class.Buf, align 8
  %19 = alloca %class.Buf, align 8
  %20 = alloca i32, align 4
  %21 = alloca %class.Buf, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i64, align 8
  %30 = alloca i8*, align 8
  %31 = alloca i32, align 4
  %32 = alloca i64, align 8
  %33 = alloca i32, align 4
  %34 = alloca %class.Encoder, align 8
  %35 = alloca i32, align 4
  %36 = alloca %class.Buf, align 8
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca %class.Buf, align 8
  %40 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %41 = load i8**, i8*** %4, align 8
  %42 = getelementptr inbounds i8*, i8** %41, i64 0
  %43 = load i8*, i8** %42, align 8
  %44 = call i8* @_ZL10mybasenamePKc(i8* %43)
  store i8* %44, i8** %5, align 8
  %45 = load i32, i32* %3, align 4
  %46 = icmp sle i32 %45, 2
  %47 = zext i1 %46 to i8
  store i8 %47, i8* %6, align 1
  store i8 0, i8* %7, align 1
  %48 = load i32, i32* %3, align 4
  %49 = icmp sgt i32 %48, 1
  br i1 %49, label %50, label %117

50:                                               ; preds = %2
  %51 = load i8**, i8*** %4, align 8
  %52 = getelementptr inbounds i8*, i8** %51, i64 1
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 0
  %55 = load i8, i8* %54, align 1
  %56 = sext i8 %55 to i32
  %57 = icmp eq i32 %56, 45
  br i1 %57, label %58, label %117

58:                                               ; preds = %50
  %59 = load i8**, i8*** %4, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i64 1
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 1
  %63 = load i8, i8* %62, align 1
  %64 = icmp ne i8 %63, 0
  br i1 %64, label %65, label %117

65:                                               ; preds = %58
  %66 = load i8**, i8*** %4, align 8
  %67 = getelementptr inbounds i8*, i8** %66, i64 1
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 2
  %70 = load i8, i8* %69, align 1
  %71 = icmp ne i8 %70, 0
  br i1 %71, label %117, label %72

72:                                               ; preds = %65
  %73 = load i8**, i8*** %4, align 8
  %74 = getelementptr inbounds i8*, i8** %73, i64 1
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 1
  %77 = load i8, i8* %76, align 1
  %78 = sext i8 %77 to i32
  %79 = icmp sge i32 %78, 48
  br i1 %79, label %80, label %96

80:                                               ; preds = %72
  %81 = load i8**, i8*** %4, align 8
  %82 = getelementptr inbounds i8*, i8** %81, i64 1
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 1
  %85 = load i8, i8* %84, align 1
  %86 = sext i8 %85 to i32
  %87 = icmp sle i32 %86, 57
  br i1 %87, label %88, label %96

88:                                               ; preds = %80
  %89 = load i8**, i8*** %4, align 8
  %90 = getelementptr inbounds i8*, i8** %89, i64 1
  %91 = load i8*, i8** %90, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 1
  %93 = load i8, i8* %92, align 1
  %94 = sext i8 %93 to i32
  %95 = sub nsw i32 %94, 48
  store i32 %95, i32* @level, align 4
  br label %112

96:                                               ; preds = %80, %72
  %97 = load i8**, i8*** %4, align 8
  %98 = getelementptr inbounds i8*, i8** %97, i64 1
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds i8, i8* %99, i64 1
  %101 = load i8, i8* %100, align 1
  %102 = sext i8 %101 to i32
  %103 = icmp eq i32 %102, 100
  br i1 %103, label %104, label %105

104:                                              ; preds = %96
  store i8 1, i8* %7, align 1
  br label %111

105:                                              ; preds = %96
  invoke void @_Z4quitPKc(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.39, i64 0, i64 0))
          to label %106 unwind label %107

106:                                              ; preds = %105
  br label %111

107:                                              ; preds = %124, %122, %120, %105
  %108 = landingpad { i8*, i32 }
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
  %109 = extractvalue { i8*, i32 } %108, 0
  store i8* %109, i8** %8, align 8
  %110 = extractvalue { i8*, i32 } %108, 1
  store i32 %110, i32* %9, align 4
  br label %758

111:                                              ; preds = %106, %104
  br label %112

112:                                              ; preds = %111, %88
  %113 = load i32, i32* %3, align 4
  %114 = add nsw i32 %113, -1
  store i32 %114, i32* %3, align 4
  %115 = load i8**, i8*** %4, align 8
  %116 = getelementptr inbounds i8*, i8** %115, i32 1
  store i8** %116, i8*** %4, align 8
  store i8 0, i8* %6, align 1
  br label %117

117:                                              ; preds = %112, %65, %58, %50, %2
  %118 = load i32, i32* %3, align 4
  %119 = icmp slt i32 %118, 2
  br i1 %119, label %120, label %124

120:                                              ; preds = %117
  %121 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([645 x i8], [645 x i8]* @.str.40, i64 0, i64 0), i32 5)
          to label %122 unwind label %107

122:                                              ; preds = %120
  invoke void @_Z4quitPKc(i8* null)
          to label %123 unwind label %107

123:                                              ; preds = %122
  br label %124

124:                                              ; preds = %123, %117
  store %struct._IO_FILE* null, %struct._IO_FILE** %10, align 8
  store i32 0, i32* %11, align 4
  invoke void @_ZN5ArrayIPcLi0EEC2Ei(%class.Array.6* %12, i32 1)
          to label %125 unwind label %107

125:                                              ; preds = %124
  invoke void @_ZN5ArrayIlLi0EEC2Ei(%class.Array.14* %13, i32 1)
          to label %126 unwind label %174

126:                                              ; preds = %125
  store i32 0, i32* %14, align 4
  %127 = load i8**, i8*** %4, align 8
  %128 = getelementptr inbounds i8*, i8** %127, i64 1
  %129 = load i8*, i8** %128, align 8
  %130 = invoke i8* @_ZL10mybasenamePKc(i8* %129)
          to label %131 unwind label %178

131:                                              ; preds = %126
  invoke void @_ZN6StringC2EPKc(%class.Buf* %15, i8* %130)
          to label %132 unwind label %178

132:                                              ; preds = %131
  %133 = load i8*, i8** %5, align 8
  %134 = call i64 @strlen(i8* %133) #19
  %135 = trunc i64 %134 to i32
  store i32 %135, i32* %16, align 4
  %136 = load i8**, i8*** %4, align 8
  %137 = getelementptr inbounds i8*, i8** %136, i64 1
  %138 = load i8*, i8** %137, align 8
  %139 = call i64 @strlen(i8* %138) #19
  %140 = trunc i64 %139 to i32
  store i32 %140, i32* %17, align 4
  %141 = load i32, i32* %17, align 4
  %142 = load i32, i32* %16, align 4
  %143 = add nsw i32 %142, 1
  %144 = icmp sgt i32 %141, %143
  br i1 %144, label %145, label %186

145:                                              ; preds = %132
  %146 = load i8**, i8*** %4, align 8
  %147 = getelementptr inbounds i8*, i8** %146, i64 1
  %148 = load i8*, i8** %147, align 8
  %149 = load i32, i32* %17, align 4
  %150 = load i32, i32* %16, align 4
  %151 = sub nsw i32 %149, %150
  %152 = sub nsw i32 %151, 1
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* %148, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = sext i8 %155 to i32
  %157 = icmp eq i32 %156, 46
  br i1 %157, label %158, label %186

158:                                              ; preds = %145
  %159 = load i8*, i8** %5, align 8
  %160 = load i8**, i8*** %4, align 8
  %161 = getelementptr inbounds i8*, i8** %160, i64 1
  %162 = load i8*, i8** %161, align 8
  %163 = load i32, i32* %17, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i8, i8* %162, i64 %164
  %166 = load i32, i32* %16, align 4
  %167 = sext i32 %166 to i64
  %168 = sub i64 0, %167
  %169 = getelementptr inbounds i8, i8* %165, i64 %168
  %170 = invoke i32 @_Z6equalsPKcS0_(i8* %159, i8* %169)
          to label %171 unwind label %182

171:                                              ; preds = %158
  %172 = icmp ne i32 %170, 0
  br i1 %172, label %173, label %186

173:                                              ; preds = %171
  store i32 1, i32* %14, align 4
  br label %195

174:                                              ; preds = %125
  %175 = landingpad { i8*, i32 }
          cleanup
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
  %176 = extractvalue { i8*, i32 } %175, 0
  store i8* %176, i8** %8, align 8
  %177 = extractvalue { i8*, i32 } %175, 1
  store i32 %177, i32* %9, align 4
  br label %757

178:                                              ; preds = %131, %126
  %179 = landingpad { i8*, i32 }
          cleanup
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
  %180 = extractvalue { i8*, i32 } %179, 0
  store i8* %180, i8** %8, align 8
  %181 = extractvalue { i8*, i32 } %179, 1
  store i32 %181, i32* %9, align 4
  br label %756

182:                                              ; preds = %195, %191, %190, %158
  %183 = landingpad { i8*, i32 }
          cleanup
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
  %184 = extractvalue { i8*, i32 } %183, 0
  store i8* %184, i8** %8, align 8
  %185 = extractvalue { i8*, i32 } %183, 1
  store i32 %185, i32* %9, align 4
  br label %755

186:                                              ; preds = %171, %145, %132
  %187 = load i8, i8* %7, align 1
  %188 = trunc i8 %187 to i1
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  store i32 1, i32* %14, align 4
  br label %194

190:                                              ; preds = %186
  invoke void @_ZN6StringpLEPKc(%class.Buf* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0))
          to label %191 unwind label %182

191:                                              ; preds = %190
  %192 = load i8*, i8** %5, align 8
  invoke void @_ZN6StringpLEPKc(%class.Buf* %15, i8* %192)
          to label %193 unwind label %182

193:                                              ; preds = %191
  br label %194

194:                                              ; preds = %193, %189
  br label %195

195:                                              ; preds = %194, %173
  invoke void @_ZN6StringC2EPKc(%class.Buf* %18, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.36, i64 0, i64 0))
          to label %196 unwind label %182

196:                                              ; preds = %195
  %197 = load i32, i32* %14, align 4
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %406

199:                                              ; preds = %196
  invoke void @_ZN6StringC2EPKc(%class.Buf* %19, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.36, i64 0, i64 0))
          to label %200 unwind label %233

200:                                              ; preds = %199
  store i32 1, i32* %20, align 4
  br label %201

201:                                              ; preds = %328, %200
  %202 = load i32, i32* %20, align 4
  %203 = load i32, i32* %3, align 4
  %204 = icmp slt i32 %202, %203
  br i1 %204, label %205, label %331

205:                                              ; preds = %201
  %206 = load i8**, i8*** %4, align 8
  %207 = load i32, i32* %20, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds i8*, i8** %206, i64 %208
  %210 = load i8*, i8** %209, align 8
  invoke void @_ZN6StringC2EPKc(%class.Buf* %21, i8* %210)
          to label %211 unwind label %237

211:                                              ; preds = %205
  %212 = bitcast %class.Buf* %21 to %class.Array.0*
  %213 = invoke i32 @_ZNK5ArrayIcLi0EE4sizeEv(%class.Array.0* %212)
          to label %214 unwind label %241

214:                                              ; preds = %211
  %215 = sub nsw i32 %213, 1
  store i32 %215, i32* %22, align 4
  store i32 0, i32* %23, align 4
  br label %216

216:                                              ; preds = %246, %214
  %217 = load i32, i32* %23, align 4
  %218 = load i32, i32* %22, align 4
  %219 = icmp sle i32 %217, %218
  br i1 %219, label %220, label %249

220:                                              ; preds = %216
  %221 = bitcast %class.Buf* %21 to %class.Array.0*
  %222 = load i32, i32* %23, align 4
  %223 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %221, i32 %222)
          to label %224 unwind label %241

224:                                              ; preds = %220
  %225 = load i8, i8* %223, align 1
  %226 = sext i8 %225 to i32
  %227 = icmp eq i32 %226, 92
  br i1 %227, label %228, label %245

228:                                              ; preds = %224
  %229 = bitcast %class.Buf* %21 to %class.Array.0*
  %230 = load i32, i32* %23, align 4
  %231 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %229, i32 %230)
          to label %232 unwind label %241

232:                                              ; preds = %228
  store i8 47, i8* %231, align 1
  br label %245

233:                                              ; preds = %752, %749, %631, %617, %614, %613, %607, %603, %600, %589, %579, %570, %561, %556, %552, %550, %526, %505, %480, %478, %476, %472, %469, %467, %462, %459, %455, %447, %432, %430, %428, %421, %419, %418, %416, %411, %409, %199
  %234 = landingpad { i8*, i32 }
          cleanup
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
  %235 = extractvalue { i8*, i32 } %234, 0
  store i8* %235, i8** %8, align 8
  %236 = extractvalue { i8*, i32 } %234, 1
  store i32 %236, i32* %9, align 4
  br label %754

237:                                              ; preds = %401, %382, %377, %374, %366, %364, %361, %359, %357, %354, %352, %348, %346, %345, %343, %338, %336, %334, %205
  %238 = landingpad { i8*, i32 }
          cleanup
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
  %239 = extractvalue { i8*, i32 } %238, 0
  store i8* %239, i8** %8, align 8
  %240 = extractvalue { i8*, i32 } %238, 1
  store i32 %240, i32* %9, align 4
  br label %405

241:                                              ; preds = %321, %319, %307, %305, %297, %276, %264, %253, %228, %220, %211
  %242 = landingpad { i8*, i32 }
          cleanup
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
  %243 = extractvalue { i8*, i32 } %242, 0
  store i8* %243, i8** %8, align 8
  %244 = extractvalue { i8*, i32 } %242, 1
  store i32 %244, i32* %9, align 4
  call void @_ZN6StringD2Ev(%class.Buf* %21) #2
  br label %405

245:                                              ; preds = %232, %224
  br label %246

246:                                              ; preds = %245
  %247 = load i32, i32* %23, align 4
  %248 = add nsw i32 %247, 1
  store i32 %248, i32* %23, align 4
  br label %216

249:                                              ; preds = %216
  br label %250

250:                                              ; preds = %269, %249
  %251 = load i32, i32* %22, align 4
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %253, label %262

253:                                              ; preds = %250
  %254 = bitcast %class.Buf* %21 to %class.Array.0*
  %255 = load i32, i32* %22, align 4
  %256 = sub nsw i32 %255, 1
  %257 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %254, i32 %256)
          to label %258 unwind label %241

258:                                              ; preds = %253
  %259 = load i8, i8* %257, align 1
  %260 = sext i8 %259 to i32
  %261 = icmp eq i32 %260, 47
  br label %262

262:                                              ; preds = %258, %250
  %263 = phi i1 [ false, %250 ], [ %261, %258 ]
  br i1 %263, label %264, label %270

264:                                              ; preds = %262
  %265 = bitcast %class.Buf* %21 to %class.Array.0*
  %266 = load i32, i32* %22, align 4
  %267 = add nsw i32 %266, -1
  store i32 %267, i32* %22, align 4
  %268 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %265, i32 %267)
          to label %269 unwind label %241

269:                                              ; preds = %264
  store i8 0, i8* %268, align 1
  br label %250

270:                                              ; preds = %262
  %271 = load i32, i32* %22, align 4
  %272 = sub nsw i32 %271, 1
  store i32 %272, i32* %24, align 4
  br label %273

273:                                              ; preds = %286, %270
  %274 = load i32, i32* %24, align 4
  %275 = icmp sge i32 %274, 0
  br i1 %275, label %276, label %284

276:                                              ; preds = %273
  %277 = bitcast %class.Buf* %21 to %class.Array.0*
  %278 = load i32, i32* %24, align 4
  %279 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %277, i32 %278)
          to label %280 unwind label %241

280:                                              ; preds = %276
  %281 = load i8, i8* %279, align 1
  %282 = sext i8 %281 to i32
  %283 = icmp ne i32 %282, 47
  br label %284

284:                                              ; preds = %280, %273
  %285 = phi i1 [ false, %273 ], [ %283, %280 ]
  br i1 %285, label %286, label %289

286:                                              ; preds = %284
  %287 = load i32, i32* %24, align 4
  %288 = add nsw i32 %287, -1
  store i32 %288, i32* %24, align 4
  br label %273

289:                                              ; preds = %284
  %290 = load i32, i32* %24, align 4
  %291 = add nsw i32 %290, 1
  store i32 %291, i32* %24, align 4
  %292 = load i32, i32* %24, align 4
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %305

294:                                              ; preds = %289
  %295 = load i32, i32* %22, align 4
  %296 = icmp sge i32 %295, 2
  br i1 %296, label %297, label %305

297:                                              ; preds = %294
  %298 = bitcast %class.Buf* %21 to %class.Array.0*
  %299 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %298, i32 1)
          to label %300 unwind label %241

300:                                              ; preds = %297
  %301 = load i8, i8* %299, align 1
  %302 = sext i8 %301 to i32
  %303 = icmp eq i32 %302, 58
  br i1 %303, label %304, label %305

304:                                              ; preds = %300
  store i32 2, i32* %24, align 4
  br label %305

305:                                              ; preds = %304, %300, %294, %289
  %306 = invoke i8* @_ZNK6String5c_strEv(%class.Buf* %21)
          to label %307 unwind label %241

307:                                              ; preds = %305
  %308 = load i32, i32* %24, align 4
  %309 = invoke i32 @_Z6expandR6StringS0_PKci(%class.Buf* dereferenceable(24) %19, %class.Buf* dereferenceable(24) %18, i8* %306, i32 %308)
          to label %310 unwind label %241

310:                                              ; preds = %307
  store i32 %309, i32* %25, align 4
  %311 = load i32, i32* %25, align 4
  %312 = icmp ne i32 %311, 0
  br i1 %312, label %324, label %313

313:                                              ; preds = %310
  %314 = load i32, i32* %20, align 4
  %315 = icmp sgt i32 %314, 1
  br i1 %315, label %319, label %316

316:                                              ; preds = %313
  %317 = load i32, i32* %3, align 4
  %318 = icmp eq i32 %317, 2
  br i1 %318, label %319, label %324

319:                                              ; preds = %316, %313
  %320 = invoke i8* @_ZNK6String5c_strEv(%class.Buf* %21)
          to label %321 unwind label %241

321:                                              ; preds = %319
  %322 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.42, i64 0, i64 0), i8* %320)
          to label %323 unwind label %241

323:                                              ; preds = %321
  br label %324

324:                                              ; preds = %323, %316, %310
  %325 = load i32, i32* %25, align 4
  %326 = load i32, i32* %11, align 4
  %327 = add nsw i32 %326, %325
  store i32 %327, i32* %11, align 4
  call void @_ZN6StringD2Ev(%class.Buf* %21) #2
  br label %328

328:                                              ; preds = %324
  %329 = load i32, i32* %20, align 4
  %330 = add nsw i32 %329, 1
  store i32 %330, i32* %20, align 4
  br label %201

331:                                              ; preds = %201
  %332 = load i32, i32* %11, align 4
  %333 = icmp slt i32 %332, 1
  br i1 %333, label %334, label %336

334:                                              ; preds = %331
  invoke void @_Z4quitPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0))
          to label %335 unwind label %237

335:                                              ; preds = %334
  br label %336

336:                                              ; preds = %335, %331
  %337 = invoke i8* @_ZNK6String5c_strEv(%class.Buf* %15)
          to label %338 unwind label %237

338:                                              ; preds = %336
  %339 = invoke %struct._IO_FILE* @fopen(i8* %337, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0))
          to label %340 unwind label %237

340:                                              ; preds = %338
  store %struct._IO_FILE* %339, %struct._IO_FILE** %10, align 8
  %341 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %342 = icmp ne %struct._IO_FILE* %341, null
  br i1 %342, label %348, label %343

343:                                              ; preds = %340
  %344 = invoke i8* @_ZNK6String5c_strEv(%class.Buf* %15)
          to label %345 unwind label %237

345:                                              ; preds = %343
  invoke void @perror(i8* %344)
          to label %346 unwind label %237

346:                                              ; preds = %345
  invoke void @_Z4quitPKc(i8* null)
          to label %347 unwind label %237

347:                                              ; preds = %346
  br label %348

348:                                              ; preds = %347, %340
  %349 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %350 = load i32, i32* @level, align 4
  %351 = invoke i8* @_ZNK6String5c_strEv(%class.Buf* %19)
          to label %352 unwind label %237

352:                                              ; preds = %348
  %353 = invoke i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %349, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i64 0, i64 0), i32 %350, i8* %351)
          to label %354 unwind label %237

354:                                              ; preds = %352
  %355 = load i32, i32* %11, align 4
  %356 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.46, i64 0, i64 0), i32 %355)
          to label %357 unwind label %237

357:                                              ; preds = %354
  %358 = load i32, i32* %11, align 4
  invoke void @_ZN5ArrayIPcLi0EE6resizeEi(%class.Array.6* %12, i32 %358)
          to label %359 unwind label %237

359:                                              ; preds = %357
  %360 = load i32, i32* %11, align 4
  invoke void @_ZN5ArrayIlLi0EE6resizeEi(%class.Array.14* %13, i32 %360)
          to label %361 unwind label %237

361:                                              ; preds = %359
  %362 = bitcast %class.Buf* %18 to %class.Array.0*
  %363 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %362, i32 0)
          to label %364 unwind label %237

364:                                              ; preds = %361
  store i8* %363, i8** %26, align 8
  %365 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  invoke void @rewind(%struct._IO_FILE* %365)
          to label %366 unwind label %237

366:                                              ; preds = %364
  %367 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %368 = invoke i8* @_Z7getlineP8_IO_FILE(%struct._IO_FILE* %367)
          to label %369 unwind label %237

369:                                              ; preds = %366
  store i32 0, i32* %20, align 4
  br label %370

370:                                              ; preds = %398, %369
  %371 = load i32, i32* %20, align 4
  %372 = load i32, i32* %11, align 4
  %373 = icmp slt i32 %371, %372
  br i1 %373, label %374, label %401

374:                                              ; preds = %370
  %375 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %376 = invoke i8* @_Z7getlineP8_IO_FILE(%struct._IO_FILE* %375)
          to label %377 unwind label %237

377:                                              ; preds = %374
  store i8* %376, i8** %27, align 8
  %378 = load i8*, i8** %27, align 8
  %379 = call i64 @atol(i8* %378) #19
  %380 = load i32, i32* %20, align 4
  %381 = invoke dereferenceable(8) i64* @_ZN5ArrayIlLi0EEixEi(%class.Array.14* %13, i32 %380)
          to label %382 unwind label %237

382:                                              ; preds = %377
  store i64 %379, i64* %381, align 8
  %383 = load i8*, i8** %26, align 8
  %384 = load i32, i32* %20, align 4
  %385 = invoke dereferenceable(8) i8** @_ZN5ArrayIPcLi0EEixEi(%class.Array.6* %12, i32 %384)
          to label %386 unwind label %237

386:                                              ; preds = %382
  store i8* %383, i8** %385, align 8
  br label %387

387:                                              ; preds = %392, %386
  %388 = load i8*, i8** %26, align 8
  %389 = load i8, i8* %388, align 1
  %390 = sext i8 %389 to i32
  %391 = icmp ne i32 %390, 10
  br i1 %391, label %392, label %395

392:                                              ; preds = %387
  %393 = load i8*, i8** %26, align 8
  %394 = getelementptr inbounds i8, i8* %393, i32 1
  store i8* %394, i8** %26, align 8
  br label %387

395:                                              ; preds = %387
  %396 = load i8*, i8** %26, align 8
  %397 = getelementptr inbounds i8, i8* %396, i32 1
  store i8* %397, i8** %26, align 8
  store i8 0, i8* %396, align 1
  br label %398

398:                                              ; preds = %395
  %399 = load i32, i32* %20, align 4
  %400 = add nsw i32 %399, 1
  store i32 %400, i32* %20, align 4
  br label %370

401:                                              ; preds = %370
  %402 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %403 = invoke i32 @fseek(%struct._IO_FILE* %402, i64 0, i32 2)
          to label %404 unwind label %237

404:                                              ; preds = %401
  call void @_ZN6StringD2Ev(%class.Buf* %19) #2
  br label %406

405:                                              ; preds = %241, %237
  call void @_ZN6StringD2Ev(%class.Buf* %19) #2
  br label %754

406:                                              ; preds = %404, %196
  %407 = load i32, i32* %14, align 4
  %408 = icmp eq i32 %407, 1
  br i1 %408, label %409, label %570

409:                                              ; preds = %406
  %410 = invoke i8* @_ZNK6String5c_strEv(%class.Buf* %15)
          to label %411 unwind label %233

411:                                              ; preds = %409
  %412 = invoke %struct._IO_FILE* @fopen(i8* %410, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0))
          to label %413 unwind label %233

413:                                              ; preds = %411
  store %struct._IO_FILE* %412, %struct._IO_FILE** %10, align 8
  %414 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %415 = icmp ne %struct._IO_FILE* %414, null
  br i1 %415, label %421, label %416

416:                                              ; preds = %413
  %417 = invoke i8* @_ZNK6String5c_strEv(%class.Buf* %15)
          to label %418 unwind label %233

418:                                              ; preds = %416
  invoke void @perror(i8* %417)
          to label %419 unwind label %233

419:                                              ; preds = %418
  invoke void @_Z4quitPKc(i8* null)
          to label %420 unwind label %233

420:                                              ; preds = %419
  br label %421

421:                                              ; preds = %420, %413
  %422 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %423 = invoke i8* @_Z7getlineP8_IO_FILE(%struct._IO_FILE* %422)
          to label %424 unwind label %233

424:                                              ; preds = %421
  store i8* %423, i8** %28, align 8
  %425 = load i8*, i8** %28, align 8
  %426 = call i32 @strncmp(i8* %425, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48, i64 0, i64 0), i64 7) #19
  %427 = icmp ne i32 %426, 0
  br i1 %427, label %428, label %434

428:                                              ; preds = %424
  %429 = invoke i8* @_ZNK6String5c_strEv(%class.Buf* %15)
          to label %430 unwind label %233

430:                                              ; preds = %428
  %431 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i64 0, i64 0), i8* %429, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i64 0, i64 0))
          to label %432 unwind label %233

432:                                              ; preds = %430
  invoke void @_Z4quitPKc(i8* null)
          to label %433 unwind label %233

433:                                              ; preds = %432
  br label %434

434:                                              ; preds = %433, %424
  %435 = load i8*, i8** %28, align 8
  %436 = getelementptr inbounds i8, i8* %435, i64 7
  %437 = load i8, i8* %436, align 1
  %438 = sext i8 %437 to i32
  %439 = sub nsw i32 %438, 48
  store i32 %439, i32* @level, align 4
  %440 = load i32, i32* @level, align 4
  %441 = icmp slt i32 %440, 0
  br i1 %441, label %445, label %442

442:                                              ; preds = %434
  %443 = load i32, i32* @level, align 4
  %444 = icmp sgt i32 %443, 9
  br i1 %444, label %445, label %446

445:                                              ; preds = %442, %434
  store i32 5, i32* @level, align 4
  br label %446

446:                                              ; preds = %445, %442
  br label %447

447:                                              ; preds = %452, %446
  %448 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %449 = invoke i8* @_Z7getlineP8_IO_FILE(%struct._IO_FILE* %448)
          to label %450 unwind label %233

450:                                              ; preds = %447
  %451 = icmp ne i8* %449, null
  br i1 %451, label %452, label %455

452:                                              ; preds = %450
  %453 = load i32, i32* %11, align 4
  %454 = add nsw i32 %453, 1
  store i32 %454, i32* %11, align 4
  br label %447

455:                                              ; preds = %450
  %456 = load i32, i32* %11, align 4
  %457 = load i32, i32* @level, align 4
  %458 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.51, i64 0, i64 0), i32 %456, i32 %457)
          to label %459 unwind label %233

459:                                              ; preds = %455
  %460 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %461 = invoke i64 @ftell(%struct._IO_FILE* %460)
          to label %462 unwind label %233

462:                                              ; preds = %459
  store i64 %461, i64* %29, align 8
  %463 = bitcast %class.Buf* %18 to %class.Array.0*
  %464 = load i64, i64* %29, align 8
  %465 = add nsw i64 %464, 4
  %466 = trunc i64 %465 to i32
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(%class.Array.0* %463, i32 %466)
          to label %467 unwind label %233

467:                                              ; preds = %462
  %468 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  invoke void @rewind(%struct._IO_FILE* %468)
          to label %469 unwind label %233

469:                                              ; preds = %467
  %470 = bitcast %class.Buf* %18 to %class.Array.0*
  %471 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %470, i32 0)
          to label %472 unwind label %233

472:                                              ; preds = %469
  %473 = load i64, i64* %29, align 8
  %474 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %475 = invoke i64 @fread(i8* %471, i64 1, i64 %473, %struct._IO_FILE* %474)
          to label %476 unwind label %233

476:                                              ; preds = %472
  %477 = load i32, i32* %11, align 4
  invoke void @_ZN5ArrayIPcLi0EE6resizeEi(%class.Array.6* %12, i32 %477)
          to label %478 unwind label %233

478:                                              ; preds = %476
  %479 = load i32, i32* %11, align 4
  invoke void @_ZN5ArrayIlLi0EE6resizeEi(%class.Array.14* %13, i32 %479)
          to label %480 unwind label %233

480:                                              ; preds = %478
  %481 = bitcast %class.Buf* %18 to %class.Array.0*
  %482 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %481, i32 0)
          to label %483 unwind label %233

483:                                              ; preds = %480
  store i8* %482, i8** %30, align 8
  br label %484

484:                                              ; preds = %495, %483
  %485 = load i8*, i8** %30, align 8
  %486 = load i8, i8* %485, align 1
  %487 = icmp ne i8 %486, 0
  br i1 %487, label %488, label %493

488:                                              ; preds = %484
  %489 = load i8*, i8** %30, align 8
  %490 = load i8, i8* %489, align 1
  %491 = sext i8 %490 to i32
  %492 = icmp ne i32 %491, 13
  br label %493

493:                                              ; preds = %488, %484
  %494 = phi i1 [ false, %484 ], [ %492, %488 ]
  br i1 %494, label %495, label %498

495:                                              ; preds = %493
  %496 = load i8*, i8** %30, align 8
  %497 = getelementptr inbounds i8, i8* %496, i32 1
  store i8* %497, i8** %30, align 8
  br label %484

498:                                              ; preds = %493
  %499 = load i8*, i8** %30, align 8
  %500 = getelementptr inbounds i8, i8* %499, i32 1
  store i8* %500, i8** %30, align 8
  store i32 0, i32* %31, align 4
  br label %501

501:                                              ; preds = %566, %498
  %502 = load i32, i32* %31, align 4
  %503 = load i32, i32* %11, align 4
  %504 = icmp slt i32 %502, %503
  br i1 %504, label %505, label %569

505:                                              ; preds = %501
  %506 = load i8*, i8** %30, align 8
  %507 = getelementptr inbounds i8, i8* %506, i64 1
  %508 = call i64 @atol(i8* %507) #19
  %509 = load i32, i32* %31, align 4
  %510 = invoke dereferenceable(8) i64* @_ZN5ArrayIlLi0EEixEi(%class.Array.14* %13, i32 %509)
          to label %511 unwind label %233

511:                                              ; preds = %505
  store i64 %508, i64* %510, align 8
  br label %512

512:                                              ; preds = %523, %511
  %513 = load i8*, i8** %30, align 8
  %514 = load i8, i8* %513, align 1
  %515 = icmp ne i8 %514, 0
  br i1 %515, label %516, label %521

516:                                              ; preds = %512
  %517 = load i8*, i8** %30, align 8
  %518 = load i8, i8* %517, align 1
  %519 = sext i8 %518 to i32
  %520 = icmp ne i32 %519, 9
  br label %521

521:                                              ; preds = %516, %512
  %522 = phi i1 [ false, %512 ], [ %520, %516 ]
  br i1 %522, label %523, label %526

523:                                              ; preds = %521
  %524 = load i8*, i8** %30, align 8
  %525 = getelementptr inbounds i8, i8* %524, i32 1
  store i8* %525, i8** %30, align 8
  br label %512

526:                                              ; preds = %521
  %527 = load i8*, i8** %30, align 8
  %528 = getelementptr inbounds i8, i8* %527, i64 1
  %529 = load i32, i32* %31, align 4
  %530 = invoke dereferenceable(8) i8** @_ZN5ArrayIPcLi0EEixEi(%class.Array.6* %12, i32 %529)
          to label %531 unwind label %233

531:                                              ; preds = %526
  store i8* %528, i8** %530, align 8
  br label %532

532:                                              ; preds = %543, %531
  %533 = load i8*, i8** %30, align 8
  %534 = load i8, i8* %533, align 1
  %535 = icmp ne i8 %534, 0
  br i1 %535, label %536, label %541

536:                                              ; preds = %532
  %537 = load i8*, i8** %30, align 8
  %538 = load i8, i8* %537, align 1
  %539 = sext i8 %538 to i32
  %540 = icmp ne i32 %539, 13
  br label %541

541:                                              ; preds = %536, %532
  %542 = phi i1 [ false, %532 ], [ %540, %536 ]
  br i1 %542, label %543, label %546

543:                                              ; preds = %541
  %544 = load i8*, i8** %30, align 8
  %545 = getelementptr inbounds i8, i8* %544, i32 1
  store i8* %545, i8** %30, align 8
  br label %532

546:                                              ; preds = %541
  %547 = load i8*, i8** %30, align 8
  %548 = load i8, i8* %547, align 1
  %549 = icmp ne i8 %548, 0
  br i1 %549, label %563, label %550

550:                                              ; preds = %546
  %551 = invoke i8* @_ZNK6String5c_strEv(%class.Buf* %15)
          to label %552 unwind label %233

552:                                              ; preds = %550
  %553 = load i8*, i8** %30, align 8
  %554 = bitcast %class.Buf* %18 to %class.Array.0*
  %555 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %554, i32 0)
          to label %556 unwind label %233

556:                                              ; preds = %552
  %557 = ptrtoint i8* %553 to i64
  %558 = ptrtoint i8* %555 to i64
  %559 = sub i64 %557, %558
  %560 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i64 0, i64 0), i8* %551, i64 %559)
          to label %561 unwind label %233

561:                                              ; preds = %556
  invoke void @_Z4quitPKc(i8* null)
          to label %562 unwind label %233

562:                                              ; preds = %561
  br label %563

563:                                              ; preds = %562, %546
  %564 = load i8*, i8** %30, align 8
  %565 = getelementptr inbounds i8, i8* %564, i32 1
  store i8* %565, i8** %30, align 8
  store i8 0, i8* %564, align 1
  br label %566

566:                                              ; preds = %563
  %567 = load i32, i32* %31, align 4
  %568 = add nsw i32 %567, 1
  store i32 %568, i32* %31, align 4
  br label %501

569:                                              ; preds = %501
  br label %570

570:                                              ; preds = %569, %406
  %571 = load i32, i32* @level, align 4
  %572 = shl i32 65536, %571
  %573 = mul nsw i32 %572, 8
  invoke void @_ZN3Buf7setsizeEi(%class.Buf* @buf, i32 %573)
          to label %574 unwind label %233

574:                                              ; preds = %570
  store i64 0, i64* %32, align 8
  store i32 0, i32* %33, align 4
  br label %575

575:                                              ; preds = %586, %574
  %576 = load i32, i32* %33, align 4
  %577 = load i32, i32* %11, align 4
  %578 = icmp slt i32 %576, %577
  br i1 %578, label %579, label %589

579:                                              ; preds = %575
  %580 = load i32, i32* %33, align 4
  %581 = invoke dereferenceable(8) i64* @_ZN5ArrayIlLi0EEixEi(%class.Array.14* %13, i32 %580)
          to label %582 unwind label %233

582:                                              ; preds = %579
  %583 = load i64, i64* %581, align 8
  %584 = load i64, i64* %32, align 8
  %585 = add nsw i64 %584, %583
  store i64 %585, i64* %32, align 8
  br label %586

586:                                              ; preds = %582
  %587 = load i32, i32* %33, align 4
  %588 = add nsw i32 %587, 1
  store i32 %588, i32* %33, align 4
  br label %575

589:                                              ; preds = %575
  %590 = load i32, i32* %14, align 4
  %591 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  invoke void @_ZN7EncoderC1E4ModeP8_IO_FILE(%class.Encoder* %34, i32 %590, %struct._IO_FILE* %591)
          to label %592 unwind label %233

592:                                              ; preds = %589
  %593 = load i32, i32* %14, align 4
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %620

595:                                              ; preds = %592
  store i32 0, i32* %35, align 4
  br label %596

596:                                              ; preds = %610, %595
  %597 = load i32, i32* %35, align 4
  %598 = load i32, i32* %11, align 4
  %599 = icmp slt i32 %597, %598
  br i1 %599, label %600, label %613

600:                                              ; preds = %596
  %601 = load i32, i32* %35, align 4
  %602 = invoke dereferenceable(8) i8** @_ZN5ArrayIPcLi0EEixEi(%class.Array.6* %12, i32 %601)
          to label %603 unwind label %233

603:                                              ; preds = %600
  %604 = load i8*, i8** %602, align 8
  %605 = load i32, i32* %35, align 4
  %606 = invoke dereferenceable(8) i64* @_ZN5ArrayIlLi0EEixEi(%class.Array.14* %13, i32 %605)
          to label %607 unwind label %233

607:                                              ; preds = %603
  %608 = load i64, i64* %606, align 8
  invoke void @_Z8compressPKclR7Encoder(i8* %604, i64 %608, %class.Encoder* dereferenceable(40) %34)
          to label %609 unwind label %233

609:                                              ; preds = %607
  br label %610

610:                                              ; preds = %609
  %611 = load i32, i32* %35, align 4
  %612 = add nsw i32 %611, 1
  store i32 %612, i32* %35, align 4
  br label %596

613:                                              ; preds = %596
  invoke void @_ZN7Encoder5flushEv(%class.Encoder* %34)
          to label %614 unwind label %233

614:                                              ; preds = %613
  %615 = load i64, i64* %32, align 8
  %616 = invoke i64 @_ZNK7Encoder4sizeEv(%class.Encoder* %34)
          to label %617 unwind label %233

617:                                              ; preds = %614
  %618 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53, i64 0, i64 0), i64 %615, i64 %616)
          to label %619 unwind label %233

619:                                              ; preds = %617
  br label %749

620:                                              ; preds = %592
  %621 = load i32, i32* %3, align 4
  %622 = icmp sgt i32 %621, 2
  br i1 %622, label %623, label %627

623:                                              ; preds = %620
  %624 = load i8**, i8*** %4, align 8
  %625 = getelementptr inbounds i8*, i8** %624, i64 2
  %626 = load i8*, i8** %625, align 8
  br label %631

627:                                              ; preds = %620
  %628 = load i8**, i8*** %4, align 8
  %629 = getelementptr inbounds i8*, i8** %628, i64 1
  %630 = load i8*, i8** %629, align 8
  br label %631

631:                                              ; preds = %627, %623
  %632 = phi i8* [ %626, %623 ], [ %630, %627 ]
  invoke void @_ZN6StringC2EPKc(%class.Buf* %36, i8* %632)
          to label %633 unwind label %233

633:                                              ; preds = %631
  %634 = load i32, i32* %3, align 4
  %635 = icmp eq i32 %634, 2
  br i1 %635, label %636, label %696

636:                                              ; preds = %633
  %637 = bitcast %class.Buf* %36 to %class.Array.0*
  %638 = invoke i32 @_ZNK5ArrayIcLi0EE4sizeEv(%class.Array.0* %637)
          to label %639 unwind label %665

639:                                              ; preds = %636
  %640 = sub nsw i32 %638, 2
  store i32 %640, i32* %37, align 4
  br label %641

641:                                              ; preds = %687, %639
  %642 = load i32, i32* %37, align 4
  %643 = icmp sge i32 %642, 0
  br i1 %643, label %644, label %690

644:                                              ; preds = %641
  %645 = bitcast %class.Buf* %36 to %class.Array.0*
  %646 = load i32, i32* %37, align 4
  %647 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %645, i32 %646)
          to label %648 unwind label %665

648:                                              ; preds = %644
  %649 = load i8, i8* %647, align 1
  %650 = sext i8 %649 to i32
  %651 = icmp eq i32 %650, 47
  br i1 %651, label %660, label %652

652:                                              ; preds = %648
  %653 = bitcast %class.Buf* %36 to %class.Array.0*
  %654 = load i32, i32* %37, align 4
  %655 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %653, i32 %654)
          to label %656 unwind label %665

656:                                              ; preds = %652
  %657 = load i8, i8* %655, align 1
  %658 = sext i8 %657 to i32
  %659 = icmp eq i32 %658, 92
  br i1 %659, label %660, label %669

660:                                              ; preds = %656, %648
  %661 = bitcast %class.Buf* %36 to %class.Array.0*
  %662 = load i32, i32* %37, align 4
  %663 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %661, i32 %662)
          to label %664 unwind label %665

664:                                              ; preds = %660
  store i8 0, i8* %663, align 1
  br label %690

665:                                              ; preds = %726, %724, %717, %710, %705, %699, %698, %696, %693, %680, %672, %660, %652, %644, %636
  %666 = landingpad { i8*, i32 }
          cleanup
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
  %667 = extractvalue { i8*, i32 } %666, 0
  store i8* %667, i8** %8, align 8
  %668 = extractvalue { i8*, i32 } %666, 1
  store i32 %668, i32* %9, align 4
  br label %748

669:                                              ; preds = %656
  %670 = load i32, i32* %37, align 4
  %671 = icmp eq i32 %670, 1
  br i1 %671, label %672, label %686

672:                                              ; preds = %669
  %673 = bitcast %class.Buf* %36 to %class.Array.0*
  %674 = load i32, i32* %37, align 4
  %675 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %673, i32 %674)
          to label %676 unwind label %665

676:                                              ; preds = %672
  %677 = load i8, i8* %675, align 1
  %678 = sext i8 %677 to i32
  %679 = icmp eq i32 %678, 58
  br i1 %679, label %680, label %686

680:                                              ; preds = %676
  %681 = bitcast %class.Buf* %36 to %class.Array.0*
  %682 = load i32, i32* %37, align 4
  %683 = add nsw i32 %682, 1
  %684 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %681, i32 %683)
          to label %685 unwind label %665

685:                                              ; preds = %680
  store i8 0, i8* %684, align 1
  br label %690

686:                                              ; preds = %676, %669
  br label %687

687:                                              ; preds = %686
  %688 = load i32, i32* %37, align 4
  %689 = add nsw i32 %688, -1
  store i32 %689, i32* %37, align 4
  br label %641

690:                                              ; preds = %685, %664, %641
  %691 = load i32, i32* %37, align 4
  %692 = icmp eq i32 %691, -1
  br i1 %692, label %693, label %695

693:                                              ; preds = %690
  invoke void @_ZN6StringaSEPKc(%class.Buf* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0))
          to label %694 unwind label %665

694:                                              ; preds = %693
  br label %695

695:                                              ; preds = %694, %690
  br label %696

696:                                              ; preds = %695, %633
  %697 = invoke i8* @_ZNK6String5c_strEv(%class.Buf* %36)
          to label %698 unwind label %665

698:                                              ; preds = %696
  invoke void @_ZN6StringaSEPKc(%class.Buf* %36, i8* %697)
          to label %699 unwind label %665

699:                                              ; preds = %698
  %700 = bitcast %class.Buf* %36 to %class.Array.0*
  %701 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %700, i32 0)
          to label %702 unwind label %665

702:                                              ; preds = %699
  %703 = load i8, i8* %701, align 1
  %704 = icmp ne i8 %703, 0
  br i1 %704, label %705, label %719

705:                                              ; preds = %702
  %706 = bitcast %class.Buf* %36 to %class.Array.0*
  %707 = invoke i32 @_ZNK5ArrayIcLi0EE4sizeEv(%class.Array.0* %706)
          to label %708 unwind label %665

708:                                              ; preds = %705
  %709 = icmp ne i32 %707, 3
  br i1 %709, label %717, label %710

710:                                              ; preds = %708
  %711 = bitcast %class.Buf* %36 to %class.Array.0*
  %712 = invoke dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %711, i32 1)
          to label %713 unwind label %665

713:                                              ; preds = %710
  %714 = load i8, i8* %712, align 1
  %715 = sext i8 %714 to i32
  %716 = icmp ne i32 %715, 58
  br i1 %716, label %717, label %719

717:                                              ; preds = %713, %708
  invoke void @_ZN6StringpLEPKc(%class.Buf* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0))
          to label %718 unwind label %665

718:                                              ; preds = %717
  br label %719

719:                                              ; preds = %718, %713, %702
  store i32 0, i32* %38, align 4
  br label %720

720:                                              ; preds = %740, %719
  %721 = load i32, i32* %38, align 4
  %722 = load i32, i32* %11, align 4
  %723 = icmp slt i32 %721, %722
  br i1 %723, label %724, label %747

724:                                              ; preds = %720
  %725 = invoke i8* @_ZNK6String5c_strEv(%class.Buf* %36)
          to label %726 unwind label %665

726:                                              ; preds = %724
  invoke void @_ZN6StringC2EPKc(%class.Buf* %39, i8* %725)
          to label %727 unwind label %665

727:                                              ; preds = %726
  %728 = load i32, i32* %38, align 4
  %729 = invoke dereferenceable(8) i8** @_ZN5ArrayIPcLi0EEixEi(%class.Array.6* %12, i32 %728)
          to label %730 unwind label %743

730:                                              ; preds = %727
  %731 = load i8*, i8** %729, align 8
  invoke void @_ZN6StringpLEPKc(%class.Buf* %39, i8* %731)
          to label %732 unwind label %743

732:                                              ; preds = %730
  %733 = invoke i8* @_ZNK6String5c_strEv(%class.Buf* %39)
          to label %734 unwind label %743

734:                                              ; preds = %732
  %735 = load i32, i32* %38, align 4
  %736 = invoke dereferenceable(8) i64* @_ZN5ArrayIlLi0EEixEi(%class.Array.14* %13, i32 %735)
          to label %737 unwind label %743

737:                                              ; preds = %734
  %738 = load i64, i64* %736, align 8
  invoke void @_Z10decompressPKclR7Encoder(i8* %733, i64 %738, %class.Encoder* dereferenceable(40) %34)
          to label %739 unwind label %743

739:                                              ; preds = %737
  call void @_ZN6StringD2Ev(%class.Buf* %39) #2
  br label %740

740:                                              ; preds = %739
  %741 = load i32, i32* %38, align 4
  %742 = add nsw i32 %741, 1
  store i32 %742, i32* %38, align 4
  br label %720

743:                                              ; preds = %737, %734, %732, %730, %727
  %744 = landingpad { i8*, i32 }
          cleanup
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
  %745 = extractvalue { i8*, i32 } %744, 0
  store i8* %745, i8** %8, align 8
  %746 = extractvalue { i8*, i32 } %744, 1
  store i32 %746, i32* %9, align 4
  call void @_ZN6StringD2Ev(%class.Buf* %39) #2
  br label %748

747:                                              ; preds = %720
  call void @_ZN6StringD2Ev(%class.Buf* %36) #2
  br label %749

748:                                              ; preds = %743, %665
  call void @_ZN6StringD2Ev(%class.Buf* %36) #2
  br label %754

749:                                              ; preds = %747, %619
  %750 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %751 = invoke i32 @fclose(%struct._IO_FILE* %750)
          to label %752 unwind label %233

752:                                              ; preds = %749
  invoke void @_ZNK14ProgramChecker5printEv(%class.ProgramChecker* @programChecker)
          to label %753 unwind label %233

753:                                              ; preds = %752
  call void @_ZN6StringD2Ev(%class.Buf* %18) #2
  call void @_ZN6StringD2Ev(%class.Buf* %15) #2
  call void @_ZN5ArrayIlLi0EED2Ev(%class.Array.14* %13) #2
  call void @_ZN5ArrayIPcLi0EED2Ev(%class.Array.6* %12) #2
  br label %776

754:                                              ; preds = %748, %405, %233
  call void @_ZN6StringD2Ev(%class.Buf* %18) #2
  br label %755

755:                                              ; preds = %754, %182
  call void @_ZN6StringD2Ev(%class.Buf* %15) #2
  br label %756

756:                                              ; preds = %755, %178
  call void @_ZN5ArrayIlLi0EED2Ev(%class.Array.14* %13) #2
  br label %757

757:                                              ; preds = %756, %174
  call void @_ZN5ArrayIPcLi0EED2Ev(%class.Array.6* %12) #2
  br label %758

758:                                              ; preds = %757, %107
  %759 = load i32, i32* %9, align 4
  %760 = call i32 @llvm.eh.typeid.for(i8* bitcast (i8** @_ZTIPKc to i8*)) #2
  %761 = icmp eq i32 %759, %760
  br i1 %761, label %762, label %783

762:                                              ; preds = %758
  %763 = load i8*, i8** %8, align 8
  %764 = call i8* @__cxa_begin_catch(i8* %763) #2
  store i8* %764, i8** %40, align 8
  %765 = load i8*, i8** %40, align 8
  %766 = icmp ne i8* %765, null
  br i1 %766, label %767, label %775

767:                                              ; preds = %762
  %768 = load i8*, i8** %40, align 8
  %769 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i8* %768)
          to label %770 unwind label %771

770:                                              ; preds = %767
  br label %775

771:                                              ; preds = %767
  %772 = landingpad { i8*, i32 }
          cleanup
  %773 = extractvalue { i8*, i32 } %772, 0
  store i8* %773, i8** %8, align 8
  %774 = extractvalue { i8*, i32 } %772, 1
  store i32 %774, i32* %9, align 4
  call void @__cxa_end_catch() #2
  br label %783

775:                                              ; preds = %770, %762
  call void @__cxa_end_catch() #2
  br label %776

776:                                              ; preds = %775, %753
  %777 = load i8, i8* %6, align 1
  %778 = trunc i8 %777 to i1
  br i1 %778, label %779, label %782

779:                                              ; preds = %776
  %780 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.56, i64 0, i64 0))
  %781 = call i32 @getchar()
  br label %782

782:                                              ; preds = %779, %776
  ret i32 0

783:                                              ; preds = %771, %758
  %784 = load i8*, i8** %8, align 8
  %785 = load i32, i32* %9, align 4
  %786 = insertvalue { i8*, i32 } undef, i8* %784, 0
  %787 = insertvalue { i8*, i32 } %786, i32 %785, 1
  resume { i8*, i32 } %787
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIPcLi0EEC2Ei(%class.Array.6* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Array.6*, align 8
  %4 = alloca i32, align 4
  store %class.Array.6* %0, %class.Array.6** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.6*, %class.Array.6** %3, align 8
  %6 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIPcLi0EE6createEi(%class.Array.6* %5, i32 %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIlLi0EEC2Ei(%class.Array.14* %0, i32 %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Array.14*, align 8
  %4 = alloca i32, align 4
  store %class.Array.14* %0, %class.Array.14** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.14*, %class.Array.14** %3, align 8
  %6 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIlLi0EE6createEi(%class.Array.14* %5, i32 %6)
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #9

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIPcLi0EE6resizeEi(%class.Array.6* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array.6*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i32, align 4
  store %class.Array.6* %0, %class.Array.6** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load %class.Array.6*, %class.Array.6** %3, align 8
  %9 = load i32, i32* %4, align 4
  %10 = getelementptr inbounds %class.Array.6, %class.Array.6* %8, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp sle i32 %9, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = load i32, i32* %4, align 4
  %15 = getelementptr inbounds %class.Array.6, %class.Array.6* %8, i32 0, i32 0
  store i32 %14, i32* %15, align 8
  br label %48

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.Array.6, %class.Array.6* %8, i32 0, i32 2
  %18 = load i8*, i8** %17, align 8
  store i8* %18, i8** %5, align 8
  %19 = getelementptr inbounds %class.Array.6, %class.Array.6* %8, i32 0, i32 3
  %20 = load i8**, i8*** %19, align 8
  store i8** %20, i8*** %6, align 8
  %21 = getelementptr inbounds %class.Array.6, %class.Array.6* %8, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %7, align 4
  %23 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIPcLi0EE6createEi(%class.Array.6* %8, i32 %23)
  %24 = load i8*, i8** %5, align 8
  %25 = icmp ne i8* %24, null
  br i1 %25, label %26, label %48

26:                                               ; preds = %16
  %27 = load i8**, i8*** %6, align 8
  %28 = icmp ne i8** %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.Array.6, %class.Array.6* %8, i32 0, i32 3
  %31 = load i8**, i8*** %30, align 8
  %32 = bitcast i8** %31 to i8*
  %33 = load i8**, i8*** %6, align 8
  %34 = bitcast i8** %33 to i8*
  %35 = load i32, i32* %4, align 4
  %36 = load i32, i32* %7, align 4
  %37 = call i32 @_Z3minii(i32 %35, i32 %36)
  %38 = sext i32 %37 to i64
  %39 = mul i64 8, %38
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %34, i64 %39, i1 false)
  %40 = getelementptr inbounds %class.Array.6, %class.Array.6* %8, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = mul i64 %42, 8
  %44 = sub i64 0, %43
  %45 = trunc i64 %44 to i32
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %45)
  br label %46

46:                                               ; preds = %29, %26
  %47 = load i8*, i8** %5, align 8
  call void @free(i8* %47) #2
  br label %48

48:                                               ; preds = %46, %16, %13
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIlLi0EE6resizeEi(%class.Array.14* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array.14*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i32, align 4
  store %class.Array.14* %0, %class.Array.14** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load %class.Array.14*, %class.Array.14** %3, align 8
  %9 = load i32, i32* %4, align 4
  %10 = getelementptr inbounds %class.Array.14, %class.Array.14* %8, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp sle i32 %9, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = load i32, i32* %4, align 4
  %15 = getelementptr inbounds %class.Array.14, %class.Array.14* %8, i32 0, i32 0
  store i32 %14, i32* %15, align 8
  br label %48

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.Array.14, %class.Array.14* %8, i32 0, i32 2
  %18 = load i8*, i8** %17, align 8
  store i8* %18, i8** %5, align 8
  %19 = getelementptr inbounds %class.Array.14, %class.Array.14* %8, i32 0, i32 3
  %20 = load i64*, i64** %19, align 8
  store i64* %20, i64** %6, align 8
  %21 = getelementptr inbounds %class.Array.14, %class.Array.14* %8, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %7, align 4
  %23 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIlLi0EE6createEi(%class.Array.14* %8, i32 %23)
  %24 = load i8*, i8** %5, align 8
  %25 = icmp ne i8* %24, null
  br i1 %25, label %26, label %48

26:                                               ; preds = %16
  %27 = load i64*, i64** %6, align 8
  %28 = icmp ne i64* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.Array.14, %class.Array.14* %8, i32 0, i32 3
  %31 = load i64*, i64** %30, align 8
  %32 = bitcast i64* %31 to i8*
  %33 = load i64*, i64** %6, align 8
  %34 = bitcast i64* %33 to i8*
  %35 = load i32, i32* %4, align 4
  %36 = load i32, i32* %7, align 4
  %37 = call i32 @_Z3minii(i32 %35, i32 %36)
  %38 = sext i32 %37 to i64
  %39 = mul i64 8, %38
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %34, i64 %39, i1 false)
  %40 = getelementptr inbounds %class.Array.14, %class.Array.14* %8, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = mul i64 %42, 8
  %44 = sub i64 0, %43
  %45 = trunc i64 %44 to i32
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %45)
  br label %46

46:                                               ; preds = %29, %26
  %47 = load i8*, i8** %5, align 8
  call void @free(i8* %47) #2
  br label %48

48:                                               ; preds = %46, %16, %13
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i64 @atol(i8*) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) i64* @_ZN5ArrayIlLi0EEixEi(%class.Array.14* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array.14*, align 8
  %4 = alloca i32, align 4
  store %class.Array.14* %0, %class.Array.14** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.14*, %class.Array.14** %3, align 8
  %6 = getelementptr inbounds %class.Array.14, %class.Array.14* %5, i32 0, i32 3
  %7 = load i64*, i64** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i64, i64* %7, i64 %9
  ret i64* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) i8** @_ZN5ArrayIPcLi0EEixEi(%class.Array.6* %0, i32 %1) #1 comdat align 2 {
  %3 = alloca %class.Array.6*, align 8
  %4 = alloca i32, align 4
  store %class.Array.6* %0, %class.Array.6** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Array.6*, %class.Array.6** %3, align 8
  %6 = getelementptr inbounds %class.Array.6, %class.Array.6* %5, i32 0, i32 3
  %7 = load i8**, i8*** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8*, i8** %7, i64 %9
  ret i8** %10
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #9

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN3Buf7setsizeEi(%class.Buf* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Buf*, align 8
  %4 = alloca i32, align 4
  store %class.Buf* %0, %class.Buf** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Buf*, %class.Buf** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.Buf, %class.Buf* %5, i32 0, i32 0
  %11 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIhLi0EE6resizeEi(%class.Array.0* %10, i32 %11)
  br label %12

12:                                               ; preds = %9, %8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN6StringaSEPKc(%class.Buf* %0, i8* %1) #0 comdat align 2 {
  %3 = alloca %class.Buf*, align 8
  %4 = alloca i8*, align 8
  store %class.Buf* %0, %class.Buf** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %class.Buf*, %class.Buf** %3, align 8
  %6 = bitcast %class.Buf* %5 to %class.Array.0*
  %7 = load i8*, i8** %4, align 8
  %8 = call i64 @strlen(i8* %7) #19
  %9 = add i64 %8, 1
  %10 = trunc i64 %9 to i32
  call void @_ZN5ArrayIcLi0EE6resizeEi(%class.Array.0* %6, i32 %10)
  %11 = bitcast %class.Buf* %5 to %class.Array.0*
  %12 = call dereferenceable(1) i8* @_ZN5ArrayIcLi0EEixEi(%class.Array.0* %11, i32 0)
  %13 = load i8*, i8** %4, align 8
  %14 = call i8* @strcpy(i8* %12, i8* %13) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNK14ProgramChecker5printEv(%class.ProgramChecker* %0) #1 comdat align 2 {
  %2 = alloca %class.ProgramChecker*, align 8
  store %class.ProgramChecker* %0, %class.ProgramChecker** %2, align 8
  %3 = load %class.ProgramChecker*, %class.ProgramChecker** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIlLi0EED2Ev(%class.Array.14* %0) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Array.14*, align 8
  store %class.Array.14* %0, %class.Array.14** %2, align 8
  %3 = load %class.Array.14*, %class.Array.14** %2, align 8
  %4 = getelementptr inbounds %class.Array.14, %class.Array.14* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = mul i64 %6, 8
  %8 = sub i64 0, %7
  %9 = trunc i64 %8 to i32
  invoke void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %9)
          to label %10 unwind label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.Array.14, %class.Array.14* %3, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  call void @free(i8* %12) #2
  ret void

13:                                               ; preds = %1
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  call void @__clang_call_terminate(i8* %15) #15
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIPcLi0EED2Ev(%class.Array.6* %0) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Array.6*, align 8
  store %class.Array.6* %0, %class.Array.6** %2, align 8
  %3 = load %class.Array.6*, %class.Array.6** %2, align 8
  %4 = getelementptr inbounds %class.Array.6, %class.Array.6* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = mul i64 %6, 8
  %8 = sub i64 0, %7
  %9 = trunc i64 %8 to i32
  invoke void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %9)
          to label %10 unwind label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.Array.6, %class.Array.6* %3, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  call void @free(i8* %12) #2
  ret void

13:                                               ; preds = %1
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  call void @__clang_call_terminate(i8* %15) #15
  unreachable
}

; Function Attrs: nounwind readnone
declare i32 @llvm.eh.typeid.for(i8*) #12

declare dso_local void @__cxa_end_catch()

declare dso_local i32 @getchar() #10

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #3

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIhLi0EE6resizeEi(%class.Array.0* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array.0*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store %class.Array.0* %0, %class.Array.0** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load %class.Array.0*, %class.Array.0** %3, align 8
  %9 = load i32, i32* %4, align 4
  %10 = getelementptr inbounds %class.Array.0, %class.Array.0* %8, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp sle i32 %9, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = load i32, i32* %4, align 4
  %15 = getelementptr inbounds %class.Array.0, %class.Array.0* %8, i32 0, i32 0
  store i32 %14, i32* %15, align 8
  br label %46

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.Array.0, %class.Array.0* %8, i32 0, i32 2
  %18 = load i8*, i8** %17, align 8
  store i8* %18, i8** %5, align 8
  %19 = getelementptr inbounds %class.Array.0, %class.Array.0* %8, i32 0, i32 3
  %20 = load i8*, i8** %19, align 8
  store i8* %20, i8** %6, align 8
  %21 = getelementptr inbounds %class.Array.0, %class.Array.0* %8, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %7, align 4
  %23 = load i32, i32* %4, align 4
  call void @_ZN5ArrayIhLi0EE6createEi(%class.Array.0* %8, i32 %23)
  %24 = load i8*, i8** %5, align 8
  %25 = icmp ne i8* %24, null
  br i1 %25, label %26, label %46

26:                                               ; preds = %16
  %27 = load i8*, i8** %6, align 8
  %28 = icmp ne i8* %27, null
  br i1 %28, label %29, label %44

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.Array.0, %class.Array.0* %8, i32 0, i32 3
  %31 = load i8*, i8** %30, align 8
  %32 = load i8*, i8** %6, align 8
  %33 = load i32, i32* %4, align 4
  %34 = load i32, i32* %7, align 4
  %35 = call i32 @_Z3minii(i32 %33, i32 %34)
  %36 = sext i32 %35 to i64
  %37 = mul i64 1, %36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %32, i64 %37, i1 false)
  %38 = getelementptr inbounds %class.Array.0, %class.Array.0* %8, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = sext i32 %39 to i64
  %41 = mul i64 %40, 1
  %42 = sub i64 0, %41
  %43 = trunc i64 %42 to i32
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %43)
  br label %44

44:                                               ; preds = %29, %26
  %45 = load i8*, i8** %5, align 8
  call void @free(i8* %45) #2
  br label %46

46:                                               ; preds = %44, %16, %13
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIlLi0EE6createEi(%class.Array.14* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array.14*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.Array.14* %0, %class.Array.14** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.Array.14*, %class.Array.14** %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.Array.14, %class.Array.14* %6, i32 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %class.Array.14, %class.Array.14* %6, i32 0, i32 0
  store i32 %7, i32* %9, align 8
  %10 = load i32, i32* %4, align 4
  %11 = icmp sle i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.Array.14, %class.Array.14* %6, i32 0, i32 3
  store i64* null, i64** %13, align 8
  %14 = getelementptr inbounds %class.Array.14, %class.Array.14* %6, i32 0, i32 2
  store i8* null, i8** %14, align 8
  br label %36

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.Array.14, %class.Array.14* %6, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 8
  %20 = add i64 0, %19
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* %5, align 4
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %22)
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = call noalias i8* @calloc(i64 %24, i64 1) #2
  %26 = getelementptr inbounds %class.Array.14, %class.Array.14* %6, i32 0, i32 2
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %class.Array.14, %class.Array.14* %6, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %15
  call void @_Z4quitPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0))
  br label %31

31:                                               ; preds = %30, %15
  %32 = getelementptr inbounds %class.Array.14, %class.Array.14* %6, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast i8* %33 to i64*
  %35 = getelementptr inbounds %class.Array.14, %class.Array.14* %6, i32 0, i32 3
  store i64* %34, i64** %35, align 8
  br label %36

36:                                               ; preds = %31, %12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5ArrayIPcLi0EE6createEi(%class.Array.6* %0, i32 %1) #0 comdat align 2 {
  %3 = alloca %class.Array.6*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.Array.6* %0, %class.Array.6** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.Array.6*, %class.Array.6** %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 0
  store i32 %7, i32* %9, align 8
  %10 = load i32, i32* %4, align 4
  %11 = icmp sle i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 3
  store i8** null, i8*** %13, align 8
  %14 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 2
  store i8* null, i8** %14, align 8
  br label %36

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 8
  %20 = add i64 0, %19
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* %5, align 4
  call void @_ZN14ProgramChecker5allocEi(%class.ProgramChecker* @programChecker, i32 %22)
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = call noalias i8* @calloc(i64 %24, i64 1) #2
  %26 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 2
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %15
  call void @_Z4quitPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0))
  br label %31

31:                                               ; preds = %30, %15
  %32 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast i8* %33 to i8**
  %35 = getelementptr inbounds %class.Array.6, %class.Array.6* %6, i32 0, i32 3
  store i8** %34, i8*** %35, align 8
  br label %36

36:                                               ; preds = %31, %12
  ret void
}

; Function Attrs: noinline norecurse uwtable
define dso_local i32 @main(i32 %0, i8** %1) #13 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [3 x i8*], align 16
  %9 = alloca %class.Buf, align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 1, i32* %6, align 4
  %13 = call i32 @fork() #2
  store i32 %13, i32* %7, align 4
  %14 = load i32, i32* %7, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %2
  %17 = load i32, i32* %4, align 4
  %18 = load i8**, i8*** %5, align 8
  %19 = call i32 @_Z7paqmainiPPc(i32 %17, i8** %18)
  call void @exit(i32 %19) #15
  unreachable

20:                                               ; preds = %2
  %21 = load i32, i32* %7, align 4
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  call void @perror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i64 0, i64 0))
  call void @exit(i32 1) #15
  unreachable

24:                                               ; preds = %20
  br label %25

25:                                               ; preds = %24
  %26 = call i32 @wait(i32* %6)
  %27 = load i32, i32* %6, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = load i32, i32* %6, align 4
  store i32 %30, i32* %3, align 4
  br label %92

31:                                               ; preds = %25
  %32 = load i8**, i8*** %5, align 8
  %33 = getelementptr inbounds i8*, i8** %32, i64 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds [3 x i8*], [3 x i8*]* %8, i64 0, i64 0
  store i8* %34, i8** %35, align 16
  %36 = call noalias i8* @strdup(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i64 0, i64 0)) #2
  %37 = getelementptr inbounds [3 x i8*], [3 x i8*]* %8, i64 0, i64 1
  store i8* %36, i8** %37, align 8
  %38 = load i32, i32* %4, align 4
  %39 = add nsw i32 %38, -1
  store i32 %39, i32* %4, align 4
  %40 = load i8**, i8*** %5, align 8
  %41 = getelementptr inbounds i8*, i8** %40, i32 1
  store i8** %41, i8*** %5, align 8
  br label %42

42:                                               ; preds = %55, %31
  %43 = load i32, i32* %4, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %53

45:                                               ; preds = %42
  %46 = load i8**, i8*** %5, align 8
  %47 = getelementptr inbounds i8*, i8** %46, i64 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 0
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = icmp eq i32 %51, 45
  br label %53

53:                                               ; preds = %45, %42
  %54 = phi i1 [ false, %42 ], [ %52, %45 ]
  br i1 %54, label %55, label %60

55:                                               ; preds = %53
  %56 = load i32, i32* %4, align 4
  %57 = add nsw i32 %56, -1
  store i32 %57, i32* %4, align 4
  %58 = load i8**, i8*** %5, align 8
  %59 = getelementptr inbounds i8*, i8** %58, i32 1
  store i8** %59, i8*** %5, align 8
  br label %42

60:                                               ; preds = %53
  %61 = load i8**, i8*** %5, align 8
  %62 = getelementptr inbounds i8*, i8** %61, i64 0
  %63 = load i8*, i8** %62, align 8
  call void @_ZN6StringC2EPKc(%class.Buf* %9, i8* %63)
  invoke void @_ZN6StringpLEPKc(%class.Buf* %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0))
          to label %64 unwind label %79

64:                                               ; preds = %60
  %65 = getelementptr inbounds [3 x i8*], [3 x i8*]* %8, i64 0, i64 0
  %66 = load i8*, i8** %65, align 16
  %67 = invoke i8* @_ZL10mybasenamePKc(i8* %66)
          to label %68 unwind label %79

68:                                               ; preds = %64
  invoke void @_ZN6StringpLEPKc(%class.Buf* %9, i8* %67)
          to label %69 unwind label %79

69:                                               ; preds = %68
  %70 = invoke i8* @_ZNK6String5c_strEv(%class.Buf* %9)
          to label %71 unwind label %79

71:                                               ; preds = %69
  %72 = call noalias i8* @strdup(i8* %70) #2
  %73 = getelementptr inbounds [3 x i8*], [3 x i8*]* %8, i64 0, i64 2
  store i8* %72, i8** %73, align 16
  %74 = getelementptr inbounds [3 x i8*], [3 x i8*]* %8, i64 0, i64 0
  %75 = invoke i32 @_Z7paqmainiPPc(i32 3, i8** %74)
          to label %76 unwind label %79

76:                                               ; preds = %71
  %77 = icmp ne i32 %75, 0
  br i1 %77, label %78, label %83

78:                                               ; preds = %76
  store i32 1, i32* %3, align 4
  store i32 1, i32* %12, align 4
  br label %91

79:                                               ; preds = %71, %69, %68, %64, %60
  %80 = landingpad { i8*, i32 }
          cleanup
  %81 = extractvalue { i8*, i32 } %80, 0
  store i8* %81, i8** %10, align 8
  %82 = extractvalue { i8*, i32 } %80, 1
  store i32 %82, i32* %11, align 4
  call void @_ZN6StringD2Ev(%class.Buf* %9) #2
  br label %94

83:                                               ; preds = %76
  %84 = getelementptr inbounds [3 x i8*], [3 x i8*]* %8, i64 0, i64 1
  %85 = load i8*, i8** %84, align 8
  call void @free(i8* %85) #2
  %86 = getelementptr inbounds [3 x i8*], [3 x i8*]* %8, i64 0, i64 2
  %87 = load i8*, i8** %86, align 16
  %88 = call i32 @unlink(i8* %87) #2
  %89 = getelementptr inbounds [3 x i8*], [3 x i8*]* %8, i64 0, i64 2
  %90 = load i8*, i8** %89, align 16
  call void @free(i8* %90) #2
  store i32 0, i32* %3, align 4
  store i32 1, i32* %12, align 4
  br label %91

91:                                               ; preds = %83, %78
  call void @_ZN6StringD2Ev(%class.Buf* %9) #2
  br label %92

92:                                               ; preds = %91, %29
  %93 = load i32, i32* %3, align 4
  ret i32 %93

94:                                               ; preds = %79
  %95 = load i8*, i8** %10, align 8
  %96 = load i32, i32* %11, align 4
  %97 = insertvalue { i8*, i32 } undef, i8* %95, 0
  %98 = insertvalue { i8*, i32 } %97, i32 %96, 1
  resume { i8*, i32 } %98
}

; Function Attrs: nounwind
declare dso_local i32 @fork() #3

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #14

declare dso_local i32 @wait(i32*) #10

; Function Attrs: nounwind
declare dso_local noalias i8* @strdup(i8*) #3

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #3

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable willreturn }
attributes #8 = { argmemonly nounwind willreturn }
attributes #9 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone }
attributes #13 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind }
attributes #16 = { noreturn }
attributes #17 = { builtin nounwind }
attributes #18 = { builtin }
attributes #19 = { nounwind readonly }

!llvm.ident = !{!0}
!llvm.module.flags = !{!1}

!0 = !{!"Debian clang version 10.0.1-++20200708124224+ef32c611aa2-1~exp1~20200707224822.188 "}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{!"branch_weights", i32 1, i32 1048575}
