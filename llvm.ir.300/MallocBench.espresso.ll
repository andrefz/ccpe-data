; ModuleID = 'llvm-link'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.set_family = type { i32, i32, i32, i32, i32, i32*, %struct.set_family* }
%struct.pla_types_struct = type { i8*, i32 }
%struct.cube_struct = type { i32, i32, i32, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32**, i32**, i32*, i32*, i32, i32, i32*, i32, i32 }
%struct.cdata_struct = type { i32*, i32*, i32*, i32*, i32, i32, i32 }
%struct.anon = type { i8*, i32, i32, i32, i32 }
%struct.anon.1 = type { i8*, i32*, i32 }
%struct.pair_struct = type { i32, i32*, i32* }
%struct.PLA_t = type { %struct.set_family*, %struct.set_family*, %struct.set_family*, i8*, i32, i32*, %struct.pair_struct*, i8**, %struct.symbolic_struct*, %struct.symbolic_struct* }
%struct.symbolic_struct = type { %struct.symbolic_list_struct*, i32, %struct.symbolic_label_struct*, i32, %struct.symbolic_struct* }
%struct.symbolic_list_struct = type { i32, i32, %struct.symbolic_list_struct* }
%struct.symbolic_label_struct = type { i8*, %struct.symbolic_label_struct* }
%struct.sm_col_struct = type { i32, i32, i32, %struct.sm_element_struct*, %struct.sm_element_struct*, %struct.sm_col_struct*, %struct.sm_col_struct*, i8* }
%struct.sm_element_struct = type { i32, i32, %struct.sm_element_struct*, %struct.sm_element_struct*, %struct.sm_element_struct*, %struct.sm_element_struct*, i8* }
%struct.cost_struct = type { i32, i32, i32, i32, i32, i32 }
%struct.sm_matrix_struct = type { %struct.sm_row_struct**, i32, %struct.sm_col_struct**, i32, %struct.sm_row_struct*, %struct.sm_row_struct*, i32, %struct.sm_col_struct*, %struct.sm_col_struct*, i32, i8* }
%struct.sm_row_struct = type { i32, i32, i32, %struct.sm_element_struct*, %struct.sm_element_struct*, %struct.sm_row_struct*, %struct.sm_row_struct*, i8* }
%struct.solution_struct = type { %struct.sm_row_struct*, i32 }
%struct.stats_struct = type { i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.anon.206 = type { %struct.set_family*, i32 }
%struct.rusage = type { %struct.timeval, %struct.timeval, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon }
%struct.timeval = type { i64, i64 }
%union.anon = type { i64 }

@.str = private unnamed_addr constant [39 x i8] c"BINATE_SPLIT_SELECT: split against %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"cl=%s\0Acr=%s\0A\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@complement.compl_level = internal global i32 0, align 4
@.str.3 = private unnamed_addr constant [11 x i8] c"COMPLEMENT\00", align 1
@.str.1.4 = private unnamed_addr constant [16 x i8] c"exit COMPLEMENT\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"compl_merge: left %d, right %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"%s (cl)\0A%s (cr)\0ALeft is\0A\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"Right is\0A\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"Result %d\0A\00", align 1
@.str.11 = private unnamed_addr constant [45 x i8] c"compl: ON-set and OFF-set are not orthogonal\00", align 1
@simp_comp.simplify_level = internal global i32 0, align 4
@.str.2.5 = private unnamed_addr constant [9 x i8] c"SIMPCOMP\00", align 1
@.str.3.6 = private unnamed_addr constant [20 x i8] c"exit SIMPCOMP (new)\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"exit SIMPCOMP (compl)\00", align 1
@simplify.simplify_level = internal global i32 0, align 4
@.str.5 = private unnamed_addr constant [9 x i8] c"SIMPLIFY\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"exit SIMPLIFY\00", align 1
@.str.12 = private unnamed_addr constant [42 x i8] c"cube size is silly, error in .i/.o or .mv\00", align 1
@lineno = internal global i32 0, align 4
@line_length_error = internal global i32 0, align 4
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.13 = private unnamed_addr constant [20 x i8] c"product term(s) %s\0A\00", align 1
@.str.1.14 = private unnamed_addr constant [39 x i8] c"span more than one line (warning only)\00", align 1
@.str.2.15 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.3.16 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.4.17 = private unnamed_addr constant [4 x i8] c"ANY\00", align 1
@.str.5.18 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.6.19 = private unnamed_addr constant [70 x i8] c"declared size of variable %d (counting from variable 0) is too small\0A\00", align 1
@.str.7.20 = private unnamed_addr constant [35 x i8] c"(warning): input line #%d ignored\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.8.21 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.9.22 = private unnamed_addr constant [18 x i8] c"extra .i ignored\0A\00", align 1
@.str.10.23 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.11.24 = private unnamed_addr constant [17 x i8] c"error reading .i\00", align 1
@.str.12.25 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@.str.13.26 = private unnamed_addr constant [18 x i8] c"extra .o ignored\0A\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c".o cannot appear before .i\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"error reading .o\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"mv\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"extra .mv ignored\0A\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"cannot mix .i and .mv\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"error reading .mv\00", align 1
@.str.21 = private unnamed_addr constant [57 x i8] c"num_binary_vars (second field of .mv) cannot be negative\00", align 1
@.str.22 = private unnamed_addr constant [75 x i8] c"num_vars (1st field of .mv) must exceed num_binary_vars (2nd field of .mv)\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"kiss\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.28 = private unnamed_addr constant [30 x i8] c"unknown type in .type command\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"ilb\00", align 1
@.str.30 = private unnamed_addr constant [45 x i8] c"PLA size must be declared before .ilb or .ob\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"%s.bar\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"ob\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"label\00", align 1
@.str.34 = private unnamed_addr constant [40 x i8] c"PLA size must be declared before .label\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"var=%d\00", align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"Error reading labels\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"symbolic\00", align 1
@.str.38 = private unnamed_addr constant [24 x i8] c"error reading .symbolic\00", align 1
@.str.39 = private unnamed_addr constant [16 x i8] c"symbolic-output\00", align 1
@.str.40 = private unnamed_addr constant [31 x i8] c"error reading .symbolic-output\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"phase\00", align 1
@.str.42 = private unnamed_addr constant [40 x i8] c"PLA size must be declared before .phase\00", align 1
@.str.43 = private unnamed_addr constant [22 x i8] c"extra .phase ignored\0A\00", align 1
@.str.44 = private unnamed_addr constant [41 x i8] c"only 0 or 1 allowed in phase description\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"pair\00", align 1
@.str.46 = private unnamed_addr constant [21 x i8] c"extra .pair ignored\0A\00", align 1
@.str.47 = private unnamed_addr constant [22 x i8] c"syntax error in .pair\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"%c%s \00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.49 = private unnamed_addr constant [46 x i8] c" with .kiss option, third to last and second\0A\00", align 1
@.str.50 = private unnamed_addr constant [42 x i8] c"to last variables must be the same size.\0A\00", align 1
@.str.51 = private unnamed_addr constant [12 x i8] c"MAP-INPUT  \00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"MAP-OUTPUT \00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"# PLA is %s\00", align 1
@.str.54 = private unnamed_addr constant [32 x i8] c" with %d inputs and %d outputs\0A\00", align 1
@.str.55 = private unnamed_addr constant [40 x i8] c" with %d variables (%d binary, mv sizes\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.58 = private unnamed_addr constant [22 x i8] c"# ON-set cost is  %s\0A\00", align 1
@.str.59 = private unnamed_addr constant [22 x i8] c"# OFF-set cost is %s\0A\00", align 1
@.str.60 = private unnamed_addr constant [22 x i8] c"# DC-set cost is  %s\0A\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"# phase is %s\0A\00", align 1
@.str.62 = private unnamed_addr constant [20 x i8] c"# two-bit decoders:\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c" (%d %d)\00", align 1
@.str.64 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.65 = private unnamed_addr constant [13 x i8] c"# symbolic: \00", align 1
@.str.66 = private unnamed_addr constant [20 x i8] c"# output symbolic: \00", align 1
@fmt_cost.s = internal global [200 x i8] zeroinitializer, align 16
@.str.68 = private unnamed_addr constant [25 x i8] c"c=%d in=%d out=%d tot=%d\00", align 1
@.str.1.69 = private unnamed_addr constant [24 x i8] c"c=%d in=%d mv=%d out=%d\00", align 1
@.str.2.72 = private unnamed_addr constant [17 x i8] c"# %s\09Cost is %s\0A\00", align 1
@.str.3.75 = private unnamed_addr constant [30 x i8] c"# %s\09Time was %s, cost is %s\0A\00", align 1
@.str.4.80 = private unnamed_addr constant [14 x i8] c"espresso: %s\0A\00", align 1
@.str.81 = private unnamed_addr constant [34 x i8] c"unreasonable expansion in unravel\00", align 1
@.str.1.82 = private unnamed_addr constant [39 x i8] c"COMPONENT_REDUCTION: split into %d %d\0A\00", align 1
@Fmin = internal global %struct.set_family* null, align 8
@.str.3.83 = private unnamed_addr constant [14 x i8] c"EXACT-POS(%d)\00", align 1
@.str.2.84 = private unnamed_addr constant [17 x i8] c"ESPRESSO-POS(%d)\00", align 1
@phase = internal global i32* null, align 8
@.str.5.85 = private unnamed_addr constant [14 x i8] c"EXACT-NEG(%d)\00", align 1
@.str.4.86 = private unnamed_addr constant [17 x i8] c"ESPRESSO-NEG(%d)\00", align 1
@.str.87 = private unnamed_addr constant [7 x i8] c".p %d\0A\00", align 1
@.str.1.88 = private unnamed_addr constant [3 x i8] c"01\00", align 1
@.str.2.89 = private unnamed_addr constant [4 x i8] c".e\0A\00", align 1
@.str.3.90 = private unnamed_addr constant [3 x i8] c"~1\00", align 1
@.str.4.91 = private unnamed_addr constant [3 x i8] c"~2\00", align 1
@.str.5.92 = private unnamed_addr constant [3 x i8] c"~0\00", align 1
@.str.6.93 = private unnamed_addr constant [6 x i8] c".end\0A\00", align 1
@.str.34.94 = private unnamed_addr constant [5 x i8] c"?01-\00", align 1
@.str.7.95 = private unnamed_addr constant [7 x i8] c".type \00", align 1
@.str.8.96 = private unnamed_addr constant [7 x i8] c".i %d\0A\00", align 1
@.str.9.97 = private unnamed_addr constant [7 x i8] c".o %d\0A\00", align 1
@.str.10.98 = private unnamed_addr constant [10 x i8] c".mv %d %d\00", align 1
@.str.11.99 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.12.100 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.13.101 = private unnamed_addr constant [5 x i8] c".ilb\00", align 1
@.str.14.102 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str.15.103 = private unnamed_addr constant [4 x i8] c".ob\00", align 1
@.str.16.104 = private unnamed_addr constant [14 x i8] c".label var=%d\00", align 1
@.str.17.105 = private unnamed_addr constant [9 x i8] c"#.phase \00", align 1
@.str.43.106 = private unnamed_addr constant [41 x i8] c"more than 1 part in a symbolic variable\0A\00", align 1
@.str.25.107 = private unnamed_addr constant [55 x i8] c"Cannot have no-output function for EQNTOTT output mode\00", align 1
@.str.26.108 = private unnamed_addr constant [57 x i8] c"Must have binary-valued function for EQNTOTT output mode\00", align 1
@.str.27.109 = private unnamed_addr constant [6 x i8] c"%s = \00", align 1
@.str.28.110 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.29.111 = private unnamed_addr constant [5 x i8] c" | (\00", align 1
@.str.30.112 = private unnamed_addr constant [6 x i8] c"\0A    \00", align 1
@.str.31.113 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.32.114 = private unnamed_addr constant [2 x i8] c"!\00", align 1
@.str.22.115 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.23.116 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.33.117 = private unnamed_addr constant [4 x i8] c";\0A\0A\00", align 1
@.str.40.118 = private unnamed_addr constant [8 x i8] c"v%d.bar\00", align 1
@.str.41.119 = private unnamed_addr constant [4 x i8] c"v%d\00", align 1
@.str.42.120 = private unnamed_addr constant [7 x i8] c"v%d.%d\00", align 1
@.str.18.121 = private unnamed_addr constant [18 x i8] c".option unmerged\0A\00", align 1
@.str.35.122 = private unnamed_addr constant [3 x i8] c"1~\00", align 1
@.str.19.123 = private unnamed_addr constant [8 x i8] c"\0A.group\00", align 1
@.str.20.124 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.21.125 = private unnamed_addr constant [4 x i8] c" \\\0A\00", align 1
@.str.24.126 = private unnamed_addr constant [7 x i8] c".label\00", align 1
@.str.44.127 = private unnamed_addr constant [55 x i8] c"# Symbolic constraints for variable %d (Numeric form)\0A\00", align 1
@.str.45.128 = private unnamed_addr constant [29 x i8] c"# unconstrained weight = %d\0A\00", align 1
@.str.46.129 = private unnamed_addr constant [14 x i8] c"num_codes=%d\0A\00", align 1
@.str.47.130 = private unnamed_addr constant [12 x i8] c"weight=%d: \00", align 1
@.str.48.131 = private unnamed_addr constant [56 x i8] c"# Symbolic constraints for variable %d (Symbolic form)\0A\00", align 1
@.str.49.132 = private unnamed_addr constant [12 x i8] c"#   w=%d: (\00", align 1
@.str.50.133 = private unnamed_addr constant [4 x i8] c" )\0A\00", align 1
@pc1.s1 = internal global [256 x i8] zeroinitializer, align 16
@pc2.s2 = internal global [256 x i8] zeroinitializer, align 16
@.str.36.140 = private unnamed_addr constant [19 x i8] c"%s[%d]: ord(T)=%d\0A\00", align 1
@.str.37.141 = private unnamed_addr constant [13 x i8] c"cofactor=%s\0A\00", align 1
@.str.38.142 = private unnamed_addr constant [9 x i8] c"%4d. %s\0A\00", align 1
@.str.39.147 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.148 = private unnamed_addr constant [48 x i8] c"# Outputs %d and %d (%s and %s) are equivalent\0A\00", align 1
@.str.1.149 = private unnamed_addr constant [52 x i8] c"# Outputs %d and NOT %d (%s and %s) are equivalent\0A\00", align 1
@.str.2.150 = private unnamed_addr constant [52 x i8] c"# Outputs NOT %d and %d (%s and %s) are equivalent\0A\00", align 1
@.str.3.151 = private unnamed_addr constant [56 x i8] c"# Outputs NOT %d and NOT %d (%s and %s) are equivalent\0A\00", align 1
@.str.4.152 = private unnamed_addr constant [29 x i8] c"# No outputs are equivalent\0A\00", align 1
@.str.155 = private unnamed_addr constant [12 x i8] c"SIMPLIFY   \00", align 1
@.str.1.156 = private unnamed_addr constant [12 x i8] c"SETUP      \00", align 1
@.str.2.157 = private unnamed_addr constant [12 x i8] c"ADJUST     \00", align 1
@.str.160 = private unnamed_addr constant [15 x i8] c"ESSENTIAL: %s\0A\00", align 1
@.str.163 = private unnamed_addr constant [12 x i8] c"PRIMES     \00", align 1
@.str.1.164 = private unnamed_addr constant [12 x i8] c"ESSENTIALS \00", align 1
@.str.2.165 = private unnamed_addr constant [12 x i8] c"PI-TABLE   \00", align 1
@.str.3.166 = private unnamed_addr constant [12 x i8] c"MINCOV     \00", align 1
@.str.4.167 = private unnamed_addr constant [8 x i8] c"(stdin)\00", align 1
@.str.5.168 = private unnamed_addr constant [10 x i8] c"%s.primes\00", align 1
@.str.6.169 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.7.170 = private unnamed_addr constant [29 x i8] c"espresso: Unable to open %s\0A\00", align 1
@.str.8.171 = private unnamed_addr constant [6 x i8] c"%s.pi\00", align 1
@.str.9.172 = private unnamed_addr constant [24 x i8] c"# Essential primes are\0A\00", align 1
@.str.10.173 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.11.174 = private unnamed_addr constant [32 x i8] c"# Totally redundant primes are\0A\00", align 1
@.str.12.175 = private unnamed_addr constant [34 x i8] c"# Partially redundant primes are\0A\00", align 1
@.str.178 = private unnamed_addr constant [25 x i8] c"EXPAND: %s (covered %d)\0A\00", align 1
@.str.1.179 = private unnamed_addr constant [18 x i8] c"\0AEXPAND1:    \09%s\0A\00", align 1
@.str.8.180 = private unnamed_addr constant [33 x i8] c"MINCOV:    \09RAISE=%s FREESET=%s\0A\00", align 1
@.str.5.181 = private unnamed_addr constant [35 x i8] c"MOST_FREQUENT:\09best=%d FREESET=%s\0A\00", align 1
@.str.6.182 = private unnamed_addr constant [58 x i8] c"SELECT_FEASIBLE: started with %d pfcc, ended with %d fcc\0A\00", align 1
@.str.7.183 = private unnamed_addr constant [33 x i8] c"FEASIBLE:  \09RAISE=%s FREESET=%s\0A\00", align 1
@.str.4.184 = private unnamed_addr constant [36 x i8] c"ESSEN_RAISING:\09RAISE=%s FREESET=%s\0A\00", align 1
@.str.2.185 = private unnamed_addr constant [38 x i8] c"ON-set and OFF-set are not orthogonal\00", align 1
@.str.3.186 = private unnamed_addr constant [34 x i8] c"ESSEN_PARTS:\09RAISE=%s FREESET=%s\0A\00", align 1
@.str.187 = private unnamed_addr constant [23 x i8] c"\0AEXPAND1_GASP:    \09%s\0A\00", align 1
@.str.2.190 = private unnamed_addr constant [49 x i8] c"empty reduction in reduce_gasp, shouldn't happen\00", align 1
@.str.3.191 = private unnamed_addr constant [31 x i8] c"REDUCE_GASP: %s reduced to %s\0A\00", align 1
@.str.1.194 = private unnamed_addr constant [10 x i8] c"NEWPRIMES\00", align 1
@optind = dso_local global i32 0, align 4
@optarg = common dso_local global i8* null, align 8
@espresso_getopt.scan = internal global i8* null, align 8
@.str.195 = private unnamed_addr constant [23 x i8] c"%s: unknown option %c\0A\00", align 1
@pla_types = dso_local global [21 x %struct.pla_types_struct] [%struct.pla_types_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i32 1 }, %struct.pla_types_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.199, i32 0, i32 0), i32 4 }, %struct.pla_types_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.200, i32 0, i32 0), i32 2 }, %struct.pla_types_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.201, i32 0, i32 0), i32 3 }, %struct.pla_types_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.202, i32 0, i32 0), i32 5 }, %struct.pla_types_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.203, i32 0, i32 0), i32 6 }, %struct.pla_types_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.204, i32 0, i32 0), i32 7 }, %struct.pla_types_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.205, i32 0, i32 0), i32 257 }, %struct.pla_types_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8.206, i32 0, i32 0), i32 260 }, %struct.pla_types_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.207, i32 0, i32 0), i32 258 }, %struct.pla_types_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.208, i32 0, i32 0), i32 259 }, %struct.pla_types_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11.209, i32 0, i32 0), i32 261 }, %struct.pla_types_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.210, i32 0, i32 0), i32 262 }, %struct.pla_types_struct { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.211, i32 0, i32 0), i32 263 }, %struct.pla_types_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14.212, i32 0, i32 0), i32 8 }, %struct.pla_types_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.213, i32 0, i32 0), i32 16 }, %struct.pla_types_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16.214, i32 0, i32 0), i32 16 }, %struct.pla_types_struct { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17.215, i32 0, i32 0), i32 128 }, %struct.pla_types_struct { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18.216, i32 0, i32 0), i32 256 }, %struct.pla_types_struct { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19.217, i32 0, i32 0), i32 512 }, %struct.pla_types_struct zeroinitializer], align 16
@.str.198 = private unnamed_addr constant [3 x i8] c"-f\00", align 1
@.str.1.199 = private unnamed_addr constant [3 x i8] c"-r\00", align 1
@.str.2.200 = private unnamed_addr constant [3 x i8] c"-d\00", align 1
@.str.3.201 = private unnamed_addr constant [4 x i8] c"-fd\00", align 1
@.str.4.202 = private unnamed_addr constant [4 x i8] c"-fr\00", align 1
@.str.5.203 = private unnamed_addr constant [4 x i8] c"-dr\00", align 1
@.str.6.204 = private unnamed_addr constant [5 x i8] c"-fdr\00", align 1
@.str.7.205 = private unnamed_addr constant [4 x i8] c"-fc\00", align 1
@.str.8.206 = private unnamed_addr constant [4 x i8] c"-rc\00", align 1
@.str.9.207 = private unnamed_addr constant [4 x i8] c"-dc\00", align 1
@.str.10.208 = private unnamed_addr constant [5 x i8] c"-fdc\00", align 1
@.str.11.209 = private unnamed_addr constant [5 x i8] c"-frc\00", align 1
@.str.12.210 = private unnamed_addr constant [5 x i8] c"-drc\00", align 1
@.str.13.211 = private unnamed_addr constant [6 x i8] c"-fdrc\00", align 1
@.str.14.212 = private unnamed_addr constant [10 x i8] c"-pleasure\00", align 1
@.str.15.213 = private unnamed_addr constant [5 x i8] c"-eqn\00", align 1
@.str.16.214 = private unnamed_addr constant [9 x i8] c"-eqntott\00", align 1
@.str.17.215 = private unnamed_addr constant [6 x i8] c"-kiss\00", align 1
@.str.18.216 = private unnamed_addr constant [6 x i8] c"-cons\00", align 1
@.str.19.217 = private unnamed_addr constant [7 x i8] c"-scons\00", align 1
@bit_count = dso_local global [256 x i32] [i32 0, i32 1, i32 1, i32 2, i32 1, i32 2, i32 2, i32 3, i32 1, i32 2, i32 2, i32 3, i32 2, i32 3, i32 3, i32 4, i32 1, i32 2, i32 2, i32 3, i32 2, i32 3, i32 3, i32 4, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 1, i32 2, i32 2, i32 3, i32 2, i32 3, i32 3, i32 4, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 1, i32 2, i32 2, i32 3, i32 2, i32 3, i32 3, i32 4, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 4, i32 5, i32 5, i32 6, i32 5, i32 6, i32 6, i32 7, i32 1, i32 2, i32 2, i32 3, i32 2, i32 3, i32 3, i32 4, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 4, i32 5, i32 5, i32 6, i32 5, i32 6, i32 6, i32 7, i32 2, i32 3, i32 3, i32 4, i32 3, i32 4, i32 4, i32 5, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 4, i32 5, i32 5, i32 6, i32 5, i32 6, i32 6, i32 7, i32 3, i32 4, i32 4, i32 5, i32 4, i32 5, i32 5, i32 6, i32 4, i32 5, i32 5, i32 6, i32 5, i32 6, i32 6, i32 7, i32 4, i32 5, i32 5, i32 6, i32 5, i32 6, i32 6, i32 7, i32 5, i32 6, i32 6, i32 7, i32 6, i32 7, i32 7, i32 8], align 16
@debug = common dso_local global i32 0, align 4
@verbose_debug = common dso_local global i32 0, align 4
@total_name = common dso_local global [16 x i8*] zeroinitializer, align 16
@total_time = common dso_local global [16 x i64] zeroinitializer, align 16
@total_calls = common dso_local global [16 x i32] zeroinitializer, align 16
@echo_comments = common dso_local global i32 0, align 4
@echo_unknown_commands = common dso_local global i32 0, align 4
@force_irredundant = common dso_local global i32 0, align 4
@skip_make_sparse = common dso_local global i32 0, align 4
@kiss = common dso_local global i32 0, align 4
@pos = common dso_local global i32 0, align 4
@print_solution = common dso_local global i32 0, align 4
@recompute_onset = common dso_local global i32 0, align 4
@remove_essential = common dso_local global i32 0, align 4
@single_expand = common dso_local global i32 0, align 4
@summary = common dso_local global i32 0, align 4
@trace = common dso_local global i32 0, align 4
@unwrap_onset = common dso_local global i32 0, align 4
@use_random_order = common dso_local global i32 0, align 4
@use_super_gasp = common dso_local global i32 0, align 4
@filename = common dso_local global i8* null, align 8
@cube = common dso_local global %struct.cube_struct zeroinitializer, align 8
@temp_cube_save = common dso_local global %struct.cube_struct zeroinitializer, align 8
@cdata = common dso_local global %struct.cdata_struct zeroinitializer, align 8
@temp_cdata_save = common dso_local global %struct.cdata_struct zeroinitializer, align 8
@.str.266 = private unnamed_addr constant [10 x i8] c"DONT_CARE\00", align 1
@.str.1.267 = private unnamed_addr constant [9 x i8] c"DONTCARE\00", align 1
@.str.2.268 = private unnamed_addr constant [10 x i8] c"dont_care\00", align 1
@.str.3.269 = private unnamed_addr constant [9 x i8] c"dontcare\00", align 1
@.str.4.270 = private unnamed_addr constant [10 x i8] c"simpcomp+\00", align 1
@.str.5.271 = private unnamed_addr constant [10 x i8] c"simpcomp-\00", align 1
@.str.6.272 = private unnamed_addr constant [10 x i8] c"term1    \00", align 1
@.str.7.273 = private unnamed_addr constant [10 x i8] c"term2    \00", align 1
@.str.8.274 = private unnamed_addr constant [11 x i8] c"union     \00", align 1
@.str.9.275 = private unnamed_addr constant [9 x i8] c"simplify\00", align 1
@.str.10.276 = private unnamed_addr constant [11 x i8] c"separate  \00", align 1
@.str.11.279 = private unnamed_addr constant [35 x i8] c"symbolic-output index out of range\00", align 1
@.str.12.280 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.15.281 = private unnamed_addr constant [4 x i8] c"X%d\00", align 1
@.str.13.284 = private unnamed_addr constant [36 x i8] c".symbolic requires binary variables\00", align 1
@.str.14.285 = private unnamed_addr constant [27 x i8] c"bad cube in form_bitvector\00", align 1
@.str.16.286 = private unnamed_addr constant [47 x i8] c"use .symbolic and .symbolic-output to specify\0A\00", align 1
@.str.17.287 = private unnamed_addr constant [52 x i8] c"the present state and next state field information\0A\00", align 1
@.str.18.288 = private unnamed_addr constant [53 x i8] c"disassemble_pla: need two multiple-valued variables\0A\00", align 1
@.str.19.289 = private unnamed_addr constant [39 x i8] c"disassemble_pla: # outputs < # states\0A\00", align 1
@.str.20.290 = private unnamed_addr constant [41 x i8] c"# state EVERY to %d, before=%d after=%d\0A\00", align 1
@.str.21.291 = private unnamed_addr constant [44 x i8] c"# state ANY to NOWHERE, before=%d after=%d\0A\00", align 1
@.str.22.292 = private unnamed_addr constant [38 x i8] c"# state %d to %d, before=%d after=%d\0A\00", align 1
@.str.23.293 = private unnamed_addr constant [3 x i8] c"~1\00", align 1
@.str.300 = private unnamed_addr constant [18 x i8] c"setp_equal(p1, p)\00", align 1
@.str.1.301 = private unnamed_addr constant [8 x i8] c"irred.c\00", align 1
@__PRETTY_FUNCTION__.mark_irredundant = private unnamed_addr constant [24 x i8] c"void mark_irredundant()\00", align 1
@.str.2.302 = private unnamed_addr constant [61 x i8] c"# IRRED: F=%d E=%d R=%d Rt=%d Rp=%d Rc=%d Final=%d Bound=%d\0A\00", align 1
@Rp_current = internal global i32 0, align 4
@.str.5.303 = private unnamed_addr constant [48 x i8] c"IRRED1: %d of %d to-go=%d, table=%dx%d time=%s\0A\00", align 1
@.str.6.304 = private unnamed_addr constant [42 x i8] c"IRRED1: delete redundant rows, now %dx%d\0A\00", align 1
@ftautology.ftaut_level = internal global i32 0, align 4
@.str.13.305 = private unnamed_addr constant [15 x i8] c"FIND_TAUTOLOGY\00", align 1
@.str.14.306 = private unnamed_addr constant [44 x i8] c"exit FIND_TAUTOLOGY[%d]: table is %d by %d\0A\00", align 1
@.str.12.307 = private unnamed_addr constant [52 x i8] c"UNATE_REDUCTION: %d unate variables, reduced to %d\0A\00", align 1
@.str.3.310 = private unnamed_addr constant [38 x i8] c"IRRED1: zr=%d ze=%d to-go=%d time=%s\0A\00", align 1
@.str.4.311 = private unnamed_addr constant [39 x i8] c"IRRED1: zr=%d zrt=%d to-go=%d time=%s\0A\00", align 1
@tautology.taut_level = internal global i32 0, align 4
@.str.7.312 = private unnamed_addr constant [10 x i8] c"TAUTOLOGY\00", align 1
@.str.10.313 = private unnamed_addr constant [5 x i8] c"TRUE\00", align 1
@.str.11.314 = private unnamed_addr constant [6 x i8] c"MAYBE\00", align 1
@.str.9.315 = private unnamed_addr constant [6 x i8] c"FALSE\00", align 1
@.str.8.316 = private unnamed_addr constant [24 x i8] c"exit TAUTOLOGY[%d]: %s\0A\00", align 1
@option_table = dso_local global [44 x %struct.anon] [%struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.317, i32 0, i32 0), i32 0, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.318, i32 0, i32 0), i32 37, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.319, i32 0, i32 0), i32 9, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.320, i32 0, i32 0), i32 24, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.321, i32 0, i32 0), i32 28, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.322, i32 0, i32 0), i32 28, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.323, i32 0, i32 0), i32 29, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.324, i32 0, i32 0), i32 27, i32 1, i32 0, i32 0 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.325, i32 0, i32 0), i32 7, i32 1, i32 0, i32 0 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.326, i32 0, i32 0), i32 19, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10.327, i32 0, i32 0), i32 20, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11.328, i32 0, i32 0), i32 21, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12.329, i32 0, i32 0), i32 22, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.330, i32 0, i32 0), i32 2, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14.331, i32 0, i32 0), i32 30, i32 1, i32 0, i32 0 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.332, i32 0, i32 0), i32 36, i32 2, i32 0, i32 1 }, %struct.anon { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.333, i32 0, i32 0), i32 1, i32 2, i32 0, i32 1 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17.334, i32 0, i32 0), i32 34, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18.335, i32 0, i32 0), i32 16, i32 1, i32 0, i32 0 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19.336, i32 0, i32 0), i32 17, i32 1, i32 0, i32 0 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.337, i32 0, i32 0), i32 41, i32 1, i32 0, i32 1 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21.338, i32 0, i32 0), i32 3, i32 1, i32 0, i32 0 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22.339, i32 0, i32 0), i32 4, i32 1, i32 0, i32 0 }, %struct.anon { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23.340, i32 0, i32 0), i32 40, i32 1, i32 0, i32 0 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24.341, i32 0, i32 0), i32 5, i32 1, i32 1, i32 0 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25.342, i32 0, i32 0), i32 6, i32 2, i32 0, i32 0 }, %struct.anon { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26.343, i32 0, i32 0), i32 12, i32 2, i32 0, i32 0 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27.344, i32 0, i32 0), i32 18, i32 1, i32 0, i32 0 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28.345, i32 0, i32 0), i32 23, i32 1, i32 0, i32 1 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29.346, i32 0, i32 0), i32 38, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30.347, i32 0, i32 0), i32 26, i32 2, i32 0, i32 0 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31.348, i32 0, i32 0), i32 35, i32 2, i32 0, i32 0 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32.349, i32 0, i32 0), i32 39, i32 2, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33.350, i32 0, i32 0), i32 8, i32 1, i32 0, i32 1 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34.351, i32 0, i32 0), i32 10, i32 1, i32 1, i32 0 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35.352, i32 0, i32 0), i32 11, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36.353, i32 0, i32 0), i32 13, i32 1, i32 0, i32 1 }, %struct.anon { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37.354, i32 0, i32 0), i32 15, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38.355, i32 0, i32 0), i32 25, i32 1, i32 0, i32 1 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39.356, i32 0, i32 0), i32 32, i32 1, i32 0, i32 0 }, %struct.anon { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40.357, i32 0, i32 0), i32 31, i32 1, i32 1, i32 1 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41.358, i32 0, i32 0), i32 14, i32 1, i32 0, i32 0 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42.359, i32 0, i32 0), i32 33, i32 1, i32 1, i32 1 }, %struct.anon { i8* null, i32 42, i32 0, i32 0, i32 0 }], align 16
@.str.317 = private unnamed_addr constant [9 x i8] c"ESPRESSO\00", align 1
@.str.1.318 = private unnamed_addr constant [5 x i8] c"many\00", align 1
@.str.2.319 = private unnamed_addr constant [6 x i8] c"exact\00", align 1
@.str.3.320 = private unnamed_addr constant [3 x i8] c"qm\00", align 1
@.str.4.321 = private unnamed_addr constant [14 x i8] c"single_output\00", align 1
@.str.5.322 = private unnamed_addr constant [3 x i8] c"so\00", align 1
@.str.6.323 = private unnamed_addr constant [8 x i8] c"so_both\00", align 1
@.str.7.324 = private unnamed_addr constant [9 x i8] c"simplify\00", align 1
@.str.8.325 = private unnamed_addr constant [5 x i8] c"echo\00", align 1
@.str.9.326 = private unnamed_addr constant [4 x i8] c"opo\00", align 1
@.str.10.327 = private unnamed_addr constant [7 x i8] c"opoall\00", align 1
@.str.11.328 = private unnamed_addr constant [5 x i8] c"pair\00", align 1
@.str.12.329 = private unnamed_addr constant [8 x i8] c"pairall\00", align 1
@.str.13.330 = private unnamed_addr constant [6 x i8] c"check\00", align 1
@.str.14.331 = private unnamed_addr constant [6 x i8] c"stats\00", align 1
@.str.15.332 = private unnamed_addr constant [7 x i8] c"verify\00", align 1
@.str.16.333 = private unnamed_addr constant [10 x i8] c"PLAverify\00", align 1
@.str.17.334 = private unnamed_addr constant [6 x i8] c"equiv\00", align 1
@.str.18.335 = private unnamed_addr constant [4 x i8] c"map\00", align 1
@.str.19.336 = private unnamed_addr constant [6 x i8] c"mapdc\00", align 1
@.str.20.337 = private unnamed_addr constant [4 x i8] c"fsm\00", align 1
@.str.21.338 = private unnamed_addr constant [8 x i8] c"contain\00", align 1
@.str.22.339 = private unnamed_addr constant [8 x i8] c"d1merge\00", align 1
@.str.23.340 = private unnamed_addr constant [11 x i8] c"d1merge_in\00", align 1
@.str.24.341 = private unnamed_addr constant [9 x i8] c"disjoint\00", align 1
@.str.25.342 = private unnamed_addr constant [7 x i8] c"dsharp\00", align 1
@.str.26.343 = private unnamed_addr constant [10 x i8] c"intersect\00", align 1
@.str.27.344 = private unnamed_addr constant [9 x i8] c"minterms\00", align 1
@.str.28.345 = private unnamed_addr constant [7 x i8] c"primes\00", align 1
@.str.29.346 = private unnamed_addr constant [9 x i8] c"separate\00", align 1
@.str.30.347 = private unnamed_addr constant [6 x i8] c"sharp\00", align 1
@.str.31.348 = private unnamed_addr constant [6 x i8] c"union\00", align 1
@.str.32.349 = private unnamed_addr constant [4 x i8] c"xor\00", align 1
@.str.33.350 = private unnamed_addr constant [6 x i8] c"essen\00", align 1
@.str.34.351 = private unnamed_addr constant [7 x i8] c"expand\00", align 1
@.str.35.352 = private unnamed_addr constant [5 x i8] c"gasp\00", align 1
@.str.36.353 = private unnamed_addr constant [6 x i8] c"irred\00", align 1
@.str.37.354 = private unnamed_addr constant [12 x i8] c"make_sparse\00", align 1
@.str.38.355 = private unnamed_addr constant [7 x i8] c"reduce\00", align 1
@.str.39.356 = private unnamed_addr constant [5 x i8] c"taut\00", align 1
@.str.40.357 = private unnamed_addr constant [11 x i8] c"super_gasp\00", align 1
@.str.41.358 = private unnamed_addr constant [8 x i8] c"lexsort\00", align 1
@.str.42.359 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@debug_table = dso_local global [17 x %struct.pla_types_struct] [%struct.pla_types_struct { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.43.360, i32 0, i32 0), i32 10614 }, %struct.pla_types_struct { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44.361, i32 0, i32 0), i32 1 }, %struct.pla_types_struct { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33.350, i32 0, i32 0), i32 2 }, %struct.pla_types_struct { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34.351, i32 0, i32 0), i32 4 }, %struct.pla_types_struct { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45.362, i32 0, i32 0), i32 12 }, %struct.pla_types_struct { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36.353, i32 0, i32 0), i32 32 }, %struct.pla_types_struct { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46.363, i32 0, i32 0), i32 16416 }, %struct.pla_types_struct { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38.355, i32 0, i32 0), i32 64 }, %struct.pla_types_struct { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47.364, i32 0, i32 0), i32 192 }, %struct.pla_types_struct { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48.365, i32 0, i32 0), i32 2048 }, %struct.pla_types_struct { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49.366, i32 0, i32 0), i32 6144 }, %struct.pla_types_struct { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50.367, i32 0, i32 0), i32 256 }, %struct.pla_types_struct { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30.347, i32 0, i32 0), i32 8192 }, %struct.pla_types_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39.356, i32 0, i32 0), i32 512 }, %struct.pla_types_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35.352, i32 0, i32 0), i32 16 }, %struct.pla_types_struct { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.319, i32 0, i32 0), i32 1024 }, %struct.pla_types_struct zeroinitializer], align 16
@.str.43.360 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.44.361 = private unnamed_addr constant [6 x i8] c"compl\00", align 1
@.str.45.362 = private unnamed_addr constant [8 x i8] c"expand1\00", align 1
@.str.46.363 = private unnamed_addr constant [7 x i8] c"irred1\00", align 1
@.str.47.364 = private unnamed_addr constant [8 x i8] c"reduce1\00", align 1
@.str.48.365 = private unnamed_addr constant [7 x i8] c"mincov\00", align 1
@.str.49.366 = private unnamed_addr constant [8 x i8] c"mincov1\00", align 1
@.str.50.367 = private unnamed_addr constant [7 x i8] c"sparse\00", align 1
@esp_opt_table = dso_local global [12 x %struct.anon.1] [%struct.anon.1 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51.368, i32 0, i32 0), i32* @echo_comments, i32 0 }, %struct.anon.1 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52.369, i32 0, i32 0), i32* @echo_unknown_commands, i32 0 }, %struct.anon.1 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53.370, i32 0, i32 0), i32* @single_expand, i32 1 }, %struct.anon.1 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54.371, i32 0, i32 0), i32* @kiss, i32 1 }, %struct.anon.1 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55.372, i32 0, i32 0), i32* @remove_essential, i32 0 }, %struct.anon.1 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56.373, i32 0, i32 0), i32* @force_irredundant, i32 0 }, %struct.anon.1 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57.374, i32 0, i32 0), i32* @unwrap_onset, i32 0 }, %struct.anon.1 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58.375, i32 0, i32 0), i32* @recompute_onset, i32 1 }, %struct.anon.1 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59.376, i32 0, i32 0), i32* @pos, i32 1 }, %struct.anon.1 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60.377, i32 0, i32 0), i32* @use_random_order, i32 1 }, %struct.anon.1 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61.378, i32 0, i32 0), i32* @use_super_gasp, i32 1 }, %struct.anon.1 zeroinitializer], align 16
@.str.51.368 = private unnamed_addr constant [4 x i8] c"eat\00", align 1
@.str.52.369 = private unnamed_addr constant [8 x i8] c"eatdots\00", align 1
@.str.53.370 = private unnamed_addr constant [5 x i8] c"fast\00", align 1
@.str.54.371 = private unnamed_addr constant [5 x i8] c"kiss\00", align 1
@.str.55.372 = private unnamed_addr constant [5 x i8] c"ness\00", align 1
@.str.56.373 = private unnamed_addr constant [5 x i8] c"nirr\00", align 1
@.str.57.374 = private unnamed_addr constant [8 x i8] c"nunwrap\00", align 1
@.str.58.375 = private unnamed_addr constant [6 x i8] c"onset\00", align 1
@.str.59.376 = private unnamed_addr constant [4 x i8] c"pos\00", align 1
@.str.60.377 = private unnamed_addr constant [7 x i8] c"random\00", align 1
@.str.61.378 = private unnamed_addr constant [7 x i8] c"strong\00", align 1
@.str.62.379 = private unnamed_addr constant [17 x i8] c"D:S:de:o:r:stv:x\00", align 1
@.str.63.380 = private unnamed_addr constant [25 x i8] c"%s: bad subcommand \22%s\22\0A\00", align 1
@.str.64.381 = private unnamed_addr constant [26 x i8] c"%s: bad output type \22%s\22\0A\00", align 1
@.str.65.382 = private unnamed_addr constant [30 x i8] c"%s: bad espresso option \22%s\22\0A\00", align 1
@.str.66.383 = private unnamed_addr constant [25 x i8] c"%s: bad debug type \22%s\22\0A\00", align 1
@.str.67.384 = private unnamed_addr constant [6 x i8] c"%d-%d\00", align 1
@.str.68.385 = private unnamed_addr constant [27 x i8] c"%s: bad output range \22%s\22\0A\00", align 1
@.str.69 = private unnamed_addr constant [11 x i8] c"# espresso\00", align 1
@.str.70 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str.71 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.72 = private unnamed_addr constant [6 x i8] c"# %s\0A\00", align 1
@.str.73 = private unnamed_addr constant [58 x i8] c"UC Berkeley, Espresso Version #2.3, Release date 01/31/88\00", align 1
@.str.74 = private unnamed_addr constant [35 x i8] c"trailing arguments on command line\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"ESPRESSO   \00", align 1
@last_fp = internal global %struct._IO_FILE* null, align 8
@.str.76 = private unnamed_addr constant [11 x i8] c"SIMPLIFY  \00", align 1
@.str.77 = private unnamed_addr constant [12 x i8] c"PRIMES     \00", align 1
@.str.79 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.80 = private unnamed_addr constant [6 x i8] c" not \00", align 1
@.str.78 = private unnamed_addr constant [24 x i8] c"ON-set is%sa tautology\0A\00", align 1
@.str.81.387 = private unnamed_addr constant [53 x i8] c"PLA comparison failed; the PLA's are not equivalent\0A\00", align 1
@.str.82 = private unnamed_addr constant [22 x i8] c"PLA's compared equal\0A\00", align 1
@.str.83 = private unnamed_addr constant [26 x i8] c"cover verification failed\00", align 1
@.str.89 = private unnamed_addr constant [40 x i8] c"# %s\09%2d call(s) for %s (%2ld.%01ld%%)\0A\00", align 1
@stdin = external dso_local global %struct._IO_FILE*, align 8
@.str.84 = private unnamed_addr constant [8 x i8] c"(stdin)\00", align 1
@.str.85 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.86 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.87.388 = private unnamed_addr constant [23 x i8] c"%s: Unable to open %s\0A\00", align 1
@input_type = internal global i32 3, align 4
@.str.88 = private unnamed_addr constant [35 x i8] c"%s: Unable to find PLA on file %s\0A\00", align 1
@.str.108 = private unnamed_addr constant [5 x i8] c"%s\0A\0A\00", align 1
@.str.109 = private unnamed_addr constant [38 x i8] c"SYNOPSIS: espresso [options] [file]\0A\0A\00", align 1
@.str.110 = private unnamed_addr constant [30 x i8] c"  -d        Enable debugging\0A\00", align 1
@.str.111 = private unnamed_addr constant [37 x i8] c"  -e[opt]   Select espresso option:\0A\00", align 1
@.str.112 = private unnamed_addr constant [64 x i8] c"                fast, ness, nirr, nunwrap, onset, pos, strong,\0A\00", align 1
@.str.113 = private unnamed_addr constant [44 x i8] c"                eat, eatdots, kiss, random\0A\00", align 1
@.str.114 = private unnamed_addr constant [35 x i8] c"  -o[type]  Select output format:\0A\00", align 1
@.str.115 = private unnamed_addr constant [63 x i8] c"                f, fd, fr, fdr, pleasure, eqntott, kiss, cons\0A\00", align 1
@.str.116 = private unnamed_addr constant [43 x i8] c"  -rn-m     Select range for subcommands:\0A\00", align 1
@.str.117 = private unnamed_addr constant [63 x i8] c"                d1merge: first and last variables (0 ... m-1)\0A\00", align 1
@.str.118 = private unnamed_addr constant [64 x i8] c"                minterms: first and last variables (0 ... m-1)\0A\00", align 1
@.str.119 = private unnamed_addr constant [60 x i8] c"                opoall: first and last outputs (0 ... m-1)\0A\00", align 1
@.str.120 = private unnamed_addr constant [45 x i8] c"  -s        Provide short execution summary\0A\00", align 1
@.str.121 = private unnamed_addr constant [44 x i8] c"  -t        Provide longer execution trace\0A\00", align 1
@.str.122 = private unnamed_addr constant [43 x i8] c"  -x        Suppress printing of solution\0A\00", align 1
@.str.123 = private unnamed_addr constant [54 x i8] c"  -v[type]  Verbose debugging detail (-v '' for all)\0A\00", align 1
@.str.124 = private unnamed_addr constant [39 x i8] c"  -D[cmd]   Execute subcommand 'cmd':\0A\00", align 1
@.str.125 = private unnamed_addr constant [46 x i8] c"  -Sn       Select strategy for subcommands:\0A\00", align 1
@.str.126 = private unnamed_addr constant [64 x i8] c"                opo: bit2=exact bit1=repeated bit0=skip sparse\0A\00", align 1
@.str.127 = private unnamed_addr constant [45 x i8] c"                opoall: 0=minimize, 1=exact\0A\00", align 1
@.str.128 = private unnamed_addr constant [67 x i8] c"                pair: 0=algebraic, 1=strongd, 2=espresso, 3=exact\0A\00", align 1
@.str.129 = private unnamed_addr constant [53 x i8] c"                pairall: 0=minimize, 1=exact, 2=opo\0A\00", align 1
@.str.130 = private unnamed_addr constant [50 x i8] c"                so_espresso: 0=minimize, 1=exact\0A\00", align 1
@.str.131 = private unnamed_addr constant [46 x i8] c"                so_both: 0=minimize, 1=exact\0A\00", align 1
@.str.104 = private unnamed_addr constant [17 x i8] c"                \00", align 1
@.str.105 = private unnamed_addr constant [19 x i8] c",\0A                \00", align 1
@.str.106 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.107 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.132 = private unnamed_addr constant [4 x i8] c"-do\00", align 1
@.str.133 = private unnamed_addr constant [42 x i8] c"espresso: bad keyword \22%s\22 following -do\0A\00", align 1
@.str.134 = private unnamed_addr constant [5 x i8] c"-out\00", align 1
@.str.135 = private unnamed_addr constant [43 x i8] c"espresso: bad keyword \22%s\22 following -out\0A\00", align 1
@.str.136 = private unnamed_addr constant [5 x i8] c"-fdr\00", align 1
@.str.137 = private unnamed_addr constant [4 x i8] c"-fr\00", align 1
@.str.138 = private unnamed_addr constant [3 x i8] c"-f\00", align 1
@.str.90 = private unnamed_addr constant [12 x i8] c"READ       \00", align 1
@.str.91 = private unnamed_addr constant [12 x i8] c"WRITE      \00", align 1
@.str.92 = private unnamed_addr constant [12 x i8] c"COMPL      \00", align 1
@.str.93 = private unnamed_addr constant [12 x i8] c"REDUCE     \00", align 1
@.str.94 = private unnamed_addr constant [12 x i8] c"EXPAND     \00", align 1
@.str.95 = private unnamed_addr constant [12 x i8] c"ESSEN      \00", align 1
@.str.96 = private unnamed_addr constant [12 x i8] c"IRRED      \00", align 1
@.str.97 = private unnamed_addr constant [12 x i8] c"REDUCE_GASP\00", align 1
@.str.98 = private unnamed_addr constant [12 x i8] c"EXPAND_GASP\00", align 1
@.str.99 = private unnamed_addr constant [12 x i8] c"IRRED_GASP \00", align 1
@.str.100 = private unnamed_addr constant [12 x i8] c"MV_REDUCE  \00", align 1
@.str.101 = private unnamed_addr constant [12 x i8] c"RAISE_IN   \00", align 1
@.str.102 = private unnamed_addr constant [12 x i8] c"VERIFY     \00", align 1
@.str.103 = private unnamed_addr constant [12 x i8] c"MINCOV     \00", align 1
@Gminterm = internal global i32* null, align 8
@Gcube = internal global i32* null, align 8
@.str.391 = private unnamed_addr constant [21 x i8] c"\0A\0AOutput space # %d\0A\00", align 1
@mapindex = internal global [16 x [16 x i32]] [[16 x i32] [i32 0, i32 1, i32 3, i32 2, i32 16, i32 17, i32 19, i32 18, i32 80, i32 81, i32 83, i32 82, i32 64, i32 65, i32 67, i32 66], [16 x i32] [i32 4, i32 5, i32 7, i32 6, i32 20, i32 21, i32 23, i32 22, i32 84, i32 85, i32 87, i32 86, i32 68, i32 69, i32 71, i32 70], [16 x i32] [i32 12, i32 13, i32 15, i32 14, i32 28, i32 29, i32 31, i32 30, i32 92, i32 93, i32 95, i32 94, i32 76, i32 77, i32 79, i32 78], [16 x i32] [i32 8, i32 9, i32 11, i32 10, i32 24, i32 25, i32 27, i32 26, i32 88, i32 89, i32 91, i32 90, i32 72, i32 73, i32 75, i32 74], [16 x i32] [i32 32, i32 33, i32 35, i32 34, i32 48, i32 49, i32 51, i32 50, i32 112, i32 113, i32 115, i32 114, i32 96, i32 97, i32 99, i32 98], [16 x i32] [i32 36, i32 37, i32 39, i32 38, i32 52, i32 53, i32 55, i32 54, i32 116, i32 117, i32 119, i32 118, i32 100, i32 101, i32 103, i32 102], [16 x i32] [i32 44, i32 45, i32 47, i32 46, i32 60, i32 61, i32 63, i32 62, i32 124, i32 125, i32 127, i32 126, i32 108, i32 109, i32 111, i32 110], [16 x i32] [i32 40, i32 41, i32 43, i32 42, i32 56, i32 57, i32 59, i32 58, i32 120, i32 121, i32 123, i32 122, i32 104, i32 105, i32 107, i32 106], [16 x i32] [i32 160, i32 161, i32 163, i32 162, i32 176, i32 177, i32 179, i32 178, i32 240, i32 241, i32 243, i32 242, i32 224, i32 225, i32 227, i32 226], [16 x i32] [i32 164, i32 165, i32 167, i32 166, i32 180, i32 181, i32 183, i32 182, i32 244, i32 245, i32 247, i32 246, i32 228, i32 229, i32 231, i32 230], [16 x i32] [i32 172, i32 173, i32 175, i32 174, i32 188, i32 189, i32 191, i32 190, i32 252, i32 253, i32 255, i32 254, i32 236, i32 237, i32 239, i32 238], [16 x i32] [i32 168, i32 169, i32 171, i32 170, i32 184, i32 185, i32 187, i32 186, i32 248, i32 249, i32 251, i32 250, i32 232, i32 233, i32 235, i32 234], [16 x i32] [i32 128, i32 129, i32 131, i32 130, i32 144, i32 145, i32 147, i32 146, i32 208, i32 209, i32 211, i32 210, i32 192, i32 193, i32 195, i32 194], [16 x i32] [i32 132, i32 133, i32 135, i32 134, i32 148, i32 149, i32 151, i32 150, i32 212, i32 213, i32 215, i32 214, i32 196, i32 197, i32 199, i32 198], [16 x i32] [i32 140, i32 141, i32 143, i32 142, i32 156, i32 157, i32 159, i32 158, i32 220, i32 221, i32 223, i32 222, i32 204, i32 205, i32 207, i32 206], [16 x i32] [i32 136, i32 137, i32 139, i32 138, i32 152, i32 153, i32 155, i32 154, i32 216, i32 217, i32 219, i32 218, i32 200, i32 201, i32 203, i32 202]], align 16
@.str.1.392 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.403 = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@.str.1.404 = private unnamed_addr constant [4 x i8] c"%lx\00", align 1
@.str.2.407 = private unnamed_addr constant [7 x i8] c"%d %d\0A\00", align 1
@.str.3.408 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.4.409 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.5.410 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.6.411 = private unnamed_addr constant [5 x i8] c"%3d:\00", align 1
@.str.7.412 = private unnamed_addr constant [23 x i8] c"%s %d rows by %d cols\0A\00", align 1
@.str.419 = private unnamed_addr constant [29 x i8] c"**** heuristic covering ...\0A\00", align 1
@.str.1.420 = private unnamed_addr constant [18 x i8] c"lower bound = %d\0A\00", align 1
@.str.2.421 = private unnamed_addr constant [50 x i8] c"matrix     = %d by %d with %d elements (%4.3f%%)\0A\00", align 1
@.str.3.422 = private unnamed_addr constant [26 x i8] c"cover size = %d elements\0A\00", align 1
@.str.4.423 = private unnamed_addr constant [17 x i8] c"cover cost = %d\0A\00", align 1
@.str.5.424 = private unnamed_addr constant [17 x i8] c"time       = %s\0A\00", align 1
@.str.6.425 = private unnamed_addr constant [17 x i8] c"components = %d\0A\00", align 1
@.str.7.426 = private unnamed_addr constant [17 x i8] c"gimpel     = %d\0A\00", align 1
@.str.8.427 = private unnamed_addr constant [17 x i8] c"nodes      = %d\0A\00", align 1
@.str.9.428 = private unnamed_addr constant [17 x i8] c"max_depth  = %d\0A\00", align 1
@.str.10.429 = private unnamed_addr constant [34 x i8] c"Fatal error: file %s, line %d\0A%s\0A\00", align 1
@.str.11.430 = private unnamed_addr constant [9 x i8] c"mincov.c\00", align 1
@.str.12.431 = private unnamed_addr constant [53 x i8] c"mincov: internal error -- cover verification failed\0A\00", align 1
@.str.14.432 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.15.433 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.13.434 = private unnamed_addr constant [14 x i8] c"ABSMIN[%2d]%s\00", align 1
@.str.16.435 = private unnamed_addr constant [38 x i8] c" %3dx%3d sel=%3d bnd=%3d lb=%3d %12s \00", align 1
@.str.17.436 = private unnamed_addr constant [9 x i8] c"bounded\0A\00", align 1
@.str.18.437 = private unnamed_addr constant [6 x i8] c"BEST\0A\00", align 1
@.str.19.438 = private unnamed_addr constant [49 x i8] c"new 'best' solution %d at level %d (time is %s)\0A\00", align 1
@.str.20.439 = private unnamed_addr constant [12 x i8] c"comp %d %d\0A\00", align 1
@.str.21.440 = private unnamed_addr constant [9 x i8] c"pick=%d\0A\00", align 1
@opo_no_make_sparse = internal global i32 0, align 4
@opo_repeated = internal global i32 0, align 4
@opo_exact = internal global i32 0, align 4
@.str.9.445 = private unnamed_addr constant [6 x i8] c"EXACT\00", align 1
@.str.10.446 = private unnamed_addr constant [11 x i8] c"ESPRESSO  \00", align 1
@.str.3.447 = private unnamed_addr constant [11 x i8] c"OPO-SETUP \00", align 1
@.str.4.448 = private unnamed_addr constant [11 x i8] c"OPO       \00", align 1
@.str.5.449 = private unnamed_addr constant [33 x i8] c"error in output phase assignment\00", align 1
@opo_recur.level = internal global i32 0, align 4
@.str.6.450 = private unnamed_addr constant [39 x i8] c"# OPO[%d]: %4d = %4d x %4d, time = %s\0A\00", align 1
@.str.7.451 = private unnamed_addr constant [40 x i8] c"output_phase_setup: must have an output\00", align 1
@.str.452 = private unnamed_addr constant [26 x i8] c"\0AOPO loop for output #%d\0A\00", align 1
@.str.1.453 = private unnamed_addr constant [18 x i8] c"PLA->phase is %s\0A\00", align 1
@.str.2.454 = private unnamed_addr constant [18 x i8] c"phase      is %s\0A\00", align 1
@.str.8.457 = private unnamed_addr constant [15 x i8] c"# phase is %s\0A\00", align 1
@.str.460 = private unnamed_addr constant [38 x i8] c"can only pair binary-valued variables\00", align 1
@.str.1.461 = private unnamed_addr constant [6 x i8] c"%s+%s\00", align 1
@.str.2.464 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.3.465 = private unnamed_addr constant [5 x i8] c"%3d \00", align 1
@.str.4.466 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.5.467 = private unnamed_addr constant [3 x i8] c"# \00", align 1
@.str.6.468 = private unnamed_addr constant [11 x i8] c"ESPRESSO  \00", align 1
@.str.7.469 = private unnamed_addr constant [8 x i8] c"pair is\00", align 1
@.str.8.470 = private unnamed_addr constant [9 x i8] c" (%d %d)\00", align 1
@best_cost = internal global i32 0, align 4
@best_pair = internal global %struct.pair_struct* null, align 8
@cost_array = internal global i32** null, align 8
@.str.9.471 = private unnamed_addr constant [12 x i8] c"cost is %d \00", align 1
@global_PLA = internal global %struct.PLA_t* null, align 8
@pair_minim_strategy = internal global i32 0, align 4
@best_phase = internal global i32* null, align 8
@best_R = internal global %struct.set_family* null, align 8
@best_D = internal global %struct.set_family* null, align 8
@best_F = internal global %struct.set_family* null, align 8
@.str.10.474 = private unnamed_addr constant [11 x i8] c"OPO       \00", align 1
@.str.11.475 = private unnamed_addr constant [15 x i8] c"# phase is %s\0A\00", align 1
@.str.12.476 = private unnamed_addr constant [11 x i8] c"EXACT     \00", align 1
@toggle = internal global i32 1, align 4
@.str.485 = private unnamed_addr constant [21 x i8] c"REDUCE: %s to %s %s\0A\00", align 1
@sccc.sccc_level = internal global i32 0, align 4
@.str.1.486 = private unnamed_addr constant [5 x i8] c"SCCC\00", align 1
@.str.2.487 = private unnamed_addr constant [24 x i8] c"SCCC[%d]: result is %s\0A\00", align 1
@.str.506 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.569 = private unnamed_addr constant [26 x i8] c"sf_join: sf_size mismatch\00", align 1
@set_family_garbage = internal global %struct.set_family* null, align 8
@.str.1.574 = private unnamed_addr constant [28 x i8] c"sf_append: sf_size mismatch\00", align 1
@.str.2.585 = private unnamed_addr constant [12 x i8] c"A[%d] = %s\0A\00", align 1
@s1 = internal global [120 x i8] zeroinitializer, align 16
@.str.3.586 = private unnamed_addr constant [10 x i8] c"[%4d] %s\0A\00", align 1
@.str.4.587 = private unnamed_addr constant [7 x i8] c"%d %d\0A\00", align 1
@.str.6.588 = private unnamed_addr constant [4 x i8] c"%x \00", align 1
@.str.7.589 = private unnamed_addr constant [3 x i8] c"\0A\09\00", align 1
@.str.8.590 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.5.591 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@.str.9.592 = private unnamed_addr constant [25 x i8] c"Error reading set family\00", align 1
@.str.10.593 = private unnamed_addr constant [42 x i8] c"Error reading set family (at end of line)\00", align 1
@start_time = common dso_local global i64 0, align 8
@.str.612 = private unnamed_addr constant [41 x i8] c"# SHARP[%d]: %4d = %4d x %4d, time = %s\0A\00", align 1
@.str.637 = private unnamed_addr constant [25 x i8] c"ncol <= cdata.vars_unate\00", align 1
@.str.1.638 = private unnamed_addr constant [8 x i8] c"unate.c\00", align 1
@__PRETTY_FUNCTION__.map_cover_to_unate = private unnamed_addr constant [33 x i8] c"pset_family map_cover_to_unate()\00", align 1
@.str.4.643 = private unnamed_addr constant [54 x i8] c"abs_select_restricted: should not have best_var == -1\00", align 1
@.str.2.648 = private unnamed_addr constant [48 x i8] c"# EXACT_MINCOV[%d]: %4d = %4d x %4d, time = %s\0A\00", align 1
@.str.3.649 = private unnamed_addr constant [44 x i8] c"MINCOV: family of all minimal coverings is\0A\00", align 1
@.str.654 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.659 = private unnamed_addr constant [49 x i8] c"some minterm in F is not covered by Fold u Dold\0A\00", align 1
@.str.1.660 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.2.661 = private unnamed_addr constant [49 x i8] c"some minterm in Fold is not covered by F u Dold\0A\00", align 1
@.str.3.664 = private unnamed_addr constant [47 x i8] c"Warning: cannot permute columns without names\0A\00", align 1
@.str.4.665 = private unnamed_addr constant [41 x i8] c"PLA_verify: PLA's are not the same size\0A\00", align 1
@.str.5.668 = private unnamed_addr constant [32 x i8] c"ON-SET and DC-SET are disjoint\0A\00", align 1
@.str.6.669 = private unnamed_addr constant [56 x i8] c"Some minterm(s) belong to both the ON-SET and DC-SET !\0A\00", align 1
@.str.7.670 = private unnamed_addr constant [33 x i8] c"ON-SET and OFF-SET are disjoint\0A\00", align 1
@.str.8.671 = private unnamed_addr constant [57 x i8] c"Some minterm(s) belong to both the ON-SET and OFF-SET !\0A\00", align 1
@.str.9.672 = private unnamed_addr constant [33 x i8] c"DC-SET and OFF-SET are disjoint\0A\00", align 1
@.str.10.673 = private unnamed_addr constant [57 x i8] c"Some minterm(s) belong to both the OFF-SET and DC-SET !\0A\00", align 1
@.str.11.674 = private unnamed_addr constant [53 x i8] c"Union of ON-SET, OFF-SET and DC-SET is the universe\0A\00", align 1
@.str.12.675 = private unnamed_addr constant [39 x i8] c"There are minterms left unspecified !\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32** @cofactor(i32** %0, i32* %1) #0 {
  %3 = alloca i32**, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32*, align 8
  store i32** %0, i32*** %3, align 8
  store i32* %1, i32** %4, align 8
  %18 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %19 = getelementptr inbounds i32*, i32** %18, i64 0
  %20 = load i32*, i32** %19, align 8
  store i32* %20, i32** %5, align 8
  %21 = load i32**, i32*** %3, align 8
  %22 = getelementptr inbounds i32*, i32** %21, i64 1
  %23 = load i32*, i32** %22, align 8
  %24 = bitcast i32* %23 to i32**
  %25 = load i32**, i32*** %3, align 8
  %26 = ptrtoint i32** %24 to i64
  %27 = ptrtoint i32** %25 to i64
  %28 = sub i64 %26, %27
  %29 = sdiv exact i64 %28, 8
  %30 = sub nsw i64 %29, 3
  %31 = add nsw i64 %30, 5
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %10, align 4
  %33 = load i32, i32* %10, align 4
  %34 = sext i32 %33 to i64
  %35 = mul i64 8, %34
  %36 = call noalias i8* @malloc(i64 %35) #7
  %37 = bitcast i8* %36 to i32**
  store i32** %37, i32*** %7, align 8
  store i32** %37, i32*** %6, align 8
  %38 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %39 = icmp sle i32 %38, 32
  br i1 %39, label %40, label %41

40:                                               ; preds = %2
  br label %47

41:                                               ; preds = %2
  %42 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %43 = sub nsw i32 %42, 1
  %44 = ashr i32 %43, 5
  %45 = add nsw i32 %44, 1
  %46 = add nsw i32 %45, 1
  br label %47

47:                                               ; preds = %41, %40
  %48 = phi i32 [ 2, %40 ], [ %46, %41 ]
  %49 = sext i32 %48 to i64
  %50 = mul i64 4, %49
  %51 = call noalias i8* @malloc(i64 %50) #7
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %54 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %52, i32 %53)
  %55 = load i32**, i32*** %3, align 8
  %56 = getelementptr inbounds i32*, i32** %55, i64 0
  %57 = load i32*, i32** %56, align 8
  %58 = load i32*, i32** %5, align 8
  %59 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %60 = load i32*, i32** %4, align 8
  %61 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %58, i32* %59, i32* %60)
  %62 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %54, i32* %57, i32* %61)
  %63 = load i32**, i32*** %7, align 8
  %64 = getelementptr inbounds i32*, i32** %63, i32 1
  store i32** %64, i32*** %7, align 8
  store i32* %62, i32** %63, align 8
  %65 = load i32**, i32*** %7, align 8
  %66 = getelementptr inbounds i32*, i32** %65, i32 1
  store i32** %66, i32*** %7, align 8
  %67 = load i32**, i32*** %3, align 8
  %68 = getelementptr inbounds i32*, i32** %67, i64 2
  store i32** %68, i32*** %8, align 8
  br label %69

69:                                               ; preds = %192, %47
  %70 = load i32**, i32*** %8, align 8
  %71 = getelementptr inbounds i32*, i32** %70, i32 1
  store i32** %71, i32*** %8, align 8
  %72 = load i32*, i32** %70, align 8
  store i32* %72, i32** %9, align 8
  %73 = icmp ne i32* %72, null
  br i1 %73, label %74, label %193

74:                                               ; preds = %69
  %75 = load i32*, i32** %9, align 8
  %76 = load i32*, i32** %4, align 8
  %77 = icmp ne i32* %75, %76
  br i1 %77, label %78, label %192

78:                                               ; preds = %74
  %79 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 15), align 4
  store i32 %79, i32* %12, align 4
  %80 = icmp ne i32 %79, -1
  br i1 %80, label %81, label %132

81:                                               ; preds = %78
  %82 = load i32*, i32** %9, align 8
  %83 = load i32, i32* %12, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i32, i32* %82, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = load i32*, i32** %4, align 8
  %88 = load i32, i32* %12, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i32, i32* %87, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = and i32 %86, %91
  store i32 %92, i32* %13, align 4
  %93 = load i32, i32* %13, align 4
  %94 = load i32, i32* %13, align 4
  %95 = lshr i32 %94, 1
  %96 = or i32 %93, %95
  %97 = xor i32 %96, -1
  %98 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 14), align 8
  %99 = and i32 %97, %98
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %81
  br label %191

102:                                              ; preds = %81
  store i32 1, i32* %11, align 4
  br label %103

103:                                              ; preds = %128, %102
  %104 = load i32, i32* %11, align 4
  %105 = load i32, i32* %12, align 4
  %106 = icmp slt i32 %104, %105
  br i1 %106, label %107, label %131

107:                                              ; preds = %103
  %108 = load i32*, i32** %9, align 8
  %109 = load i32, i32* %11, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i32, i32* %108, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = load i32*, i32** %4, align 8
  %114 = load i32, i32* %11, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i32, i32* %113, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = and i32 %112, %117
  store i32 %118, i32* %13, align 4
  %119 = load i32, i32* %13, align 4
  %120 = load i32, i32* %13, align 4
  %121 = lshr i32 %120, 1
  %122 = or i32 %119, %121
  %123 = xor i32 %122, -1
  %124 = and i32 %123, 1431655765
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %107
  br label %191

127:                                              ; preds = %107
  br label %128

128:                                              ; preds = %127
  %129 = load i32, i32* %11, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %11, align 4
  br label %103

131:                                              ; preds = %103
  br label %132

132:                                              ; preds = %131, %78
  %133 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %133, i32* %15, align 4
  br label %134

134:                                              ; preds = %184, %132
  %135 = load i32, i32* %15, align 4
  %136 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %137 = icmp slt i32 %135, %136
  br i1 %137, label %138, label %187

138:                                              ; preds = %134
  %139 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %140 = load i32, i32* %15, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i32*, i32** %139, i64 %141
  %143 = load i32*, i32** %142, align 8
  store i32* %143, i32** %17, align 8
  %144 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  %145 = load i32, i32* %15, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i32, i32* %144, i64 %146
  %148 = load i32, i32* %147, align 4
  store i32 %148, i32* %16, align 4
  %149 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %150 = load i32, i32* %15, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i32, i32* %149, i64 %151
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %14, align 4
  br label %154

154:                                              ; preds = %179, %138
  %155 = load i32, i32* %14, align 4
  %156 = load i32, i32* %16, align 4
  %157 = icmp sle i32 %155, %156
  br i1 %157, label %158, label %182

158:                                              ; preds = %154
  %159 = load i32*, i32** %9, align 8
  %160 = load i32, i32* %14, align 4
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i32, i32* %159, i64 %161
  %163 = load i32, i32* %162, align 4
  %164 = load i32*, i32** %4, align 8
  %165 = load i32, i32* %14, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i32, i32* %164, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = and i32 %163, %168
  %170 = load i32*, i32** %17, align 8
  %171 = load i32, i32* %14, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i32, i32* %170, i64 %172
  %174 = load i32, i32* %173, align 4
  %175 = and i32 %169, %174
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %158
  br label %183

178:                                              ; preds = %158
  br label %179

179:                                              ; preds = %178
  %180 = load i32, i32* %14, align 4
  %181 = add nsw i32 %180, 1
  store i32 %181, i32* %14, align 4
  br label %154

182:                                              ; preds = %154
  br label %191

183:                                              ; preds = %177
  br label %184

184:                                              ; preds = %183
  %185 = load i32, i32* %15, align 4
  %186 = add nsw i32 %185, 1
  store i32 %186, i32* %15, align 4
  br label %134

187:                                              ; preds = %134
  %188 = load i32*, i32** %9, align 8
  %189 = load i32**, i32*** %7, align 8
  %190 = getelementptr inbounds i32*, i32** %189, i32 1
  store i32** %190, i32*** %7, align 8
  store i32* %188, i32** %189, align 8
  br label %191

191:                                              ; preds = %187, %182, %126, %101
  br label %192

192:                                              ; preds = %191, %74
  br label %69

193:                                              ; preds = %69
  %194 = load i32**, i32*** %7, align 8
  %195 = getelementptr inbounds i32*, i32** %194, i32 1
  store i32** %195, i32*** %7, align 8
  store i32* null, i32** %194, align 8
  %196 = load i32**, i32*** %7, align 8
  %197 = bitcast i32** %196 to i32*
  %198 = load i32**, i32*** %6, align 8
  %199 = getelementptr inbounds i32*, i32** %198, i64 1
  store i32* %197, i32** %199, align 8
  %200 = load i32**, i32*** %6, align 8
  ret i32** %200
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32** @scofactor(i32** %0, i32* %1, i32 %2) #0 {
  %4 = alloca i32**, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32**, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i32** %0, i32*** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32 %2, i32* %6, align 4
  %16 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %17 = getelementptr inbounds i32*, i32** %16, i64 1
  %18 = load i32*, i32** %17, align 8
  store i32* %18, i32** %10, align 8
  %19 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %20 = load i32, i32* %6, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %19, i64 %21
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %12, align 4
  %24 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  %25 = load i32, i32* %6, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %24, i64 %26
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %13, align 4
  %29 = load i32**, i32*** %4, align 8
  %30 = getelementptr inbounds i32*, i32** %29, i64 1
  %31 = load i32*, i32** %30, align 8
  %32 = bitcast i32* %31 to i32**
  %33 = load i32**, i32*** %4, align 8
  %34 = ptrtoint i32** %32 to i64
  %35 = ptrtoint i32** %33 to i64
  %36 = sub i64 %34, %35
  %37 = sdiv exact i64 %36, 8
  %38 = sub nsw i64 %37, 3
  %39 = add nsw i64 %38, 5
  %40 = trunc i64 %39 to i32
  store i32 %40, i32* %14, align 4
  %41 = load i32, i32* %14, align 4
  %42 = sext i32 %41 to i64
  %43 = mul i64 8, %42
  %44 = call noalias i8* @malloc(i64 %43) #7
  %45 = bitcast i8* %44 to i32**
  store i32** %45, i32*** %7, align 8
  store i32** %45, i32*** %8, align 8
  %46 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %47 = icmp sle i32 %46, 32
  br i1 %47, label %48, label %49

48:                                               ; preds = %3
  br label %55

49:                                               ; preds = %3
  %50 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %51 = sub nsw i32 %50, 1
  %52 = ashr i32 %51, 5
  %53 = add nsw i32 %52, 1
  %54 = add nsw i32 %53, 1
  br label %55

55:                                               ; preds = %49, %48
  %56 = phi i32 [ 2, %48 ], [ %54, %49 ]
  %57 = sext i32 %56 to i64
  %58 = mul i64 4, %57
  %59 = call noalias i8* @malloc(i64 %58) #7
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %62 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %60, i32 %61)
  %63 = load i32**, i32*** %4, align 8
  %64 = getelementptr inbounds i32*, i32** %63, i64 0
  %65 = load i32*, i32** %64, align 8
  %66 = load i32*, i32** %10, align 8
  %67 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %68 = load i32*, i32** %5, align 8
  %69 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %66, i32* %67, i32* %68)
  %70 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %62, i32* %65, i32* %69)
  %71 = load i32**, i32*** %7, align 8
  %72 = getelementptr inbounds i32*, i32** %71, i32 1
  store i32** %72, i32*** %7, align 8
  store i32* %70, i32** %71, align 8
  %73 = load i32**, i32*** %7, align 8
  %74 = getelementptr inbounds i32*, i32** %73, i32 1
  store i32** %74, i32*** %7, align 8
  %75 = load i32*, i32** %10, align 8
  %76 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %77 = load i32, i32* %6, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i32*, i32** %76, i64 %78
  %80 = load i32*, i32** %79, align 8
  %81 = load i32*, i32** %5, align 8
  %82 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_and to i32* (i32*, i32*, i32*, ...)*)(i32* %75, i32* %80, i32* %81)
  %83 = load i32**, i32*** %4, align 8
  %84 = getelementptr inbounds i32*, i32** %83, i64 2
  store i32** %84, i32*** %11, align 8
  br label %85

85:                                               ; preds = %120, %55
  %86 = load i32**, i32*** %11, align 8
  %87 = getelementptr inbounds i32*, i32** %86, i32 1
  store i32** %87, i32*** %11, align 8
  %88 = load i32*, i32** %86, align 8
  store i32* %88, i32** %9, align 8
  %89 = icmp ne i32* %88, null
  br i1 %89, label %90, label %121

90:                                               ; preds = %85
  %91 = load i32*, i32** %9, align 8
  %92 = load i32*, i32** %5, align 8
  %93 = icmp ne i32* %91, %92
  br i1 %93, label %94, label %120

94:                                               ; preds = %90
  %95 = load i32, i32* %12, align 4
  store i32 %95, i32* %15, align 4
  br label %96

96:                                               ; preds = %114, %94
  %97 = load i32*, i32** %9, align 8
  %98 = load i32, i32* %15, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i32, i32* %97, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = load i32*, i32** %10, align 8
  %103 = load i32, i32* %15, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i32, i32* %102, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %101, %106
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %113

109:                                              ; preds = %96
  %110 = load i32*, i32** %9, align 8
  %111 = load i32**, i32*** %7, align 8
  %112 = getelementptr inbounds i32*, i32** %111, i32 1
  store i32** %112, i32*** %7, align 8
  store i32* %110, i32** %111, align 8
  br label %119

113:                                              ; preds = %96
  br label %114

114:                                              ; preds = %113
  %115 = load i32, i32* %15, align 4
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %15, align 4
  %117 = load i32, i32* %13, align 4
  %118 = icmp sle i32 %116, %117
  br i1 %118, label %96, label %119

119:                                              ; preds = %114, %109
  br label %120

120:                                              ; preds = %119, %90
  br label %85

121:                                              ; preds = %85
  %122 = load i32**, i32*** %7, align 8
  %123 = getelementptr inbounds i32*, i32** %122, i32 1
  store i32** %123, i32*** %7, align 8
  store i32* null, i32** %122, align 8
  %124 = load i32**, i32*** %7, align 8
  %125 = bitcast i32** %124 to i32*
  %126 = load i32**, i32*** %8, align 8
  %127 = getelementptr inbounds i32*, i32** %126, i64 1
  store i32* %125, i32** %127, align 8
  %128 = load i32**, i32*** %8, align 8
  ret i32** %128
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @massive_count(i32** %0) #0 {
  %2 = alloca i32**, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store i32** %0, i32*** %2, align 8
  %21 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 0), align 8
  store i32* %21, i32** %3, align 8
  %22 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %23 = sub nsw i32 %22, 1
  store i32 %23, i32* %5, align 4
  br label %24

24:                                               ; preds = %32, %1
  %25 = load i32, i32* %5, align 4
  %26 = icmp sge i32 %25, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %24
  %28 = load i32*, i32** %3, align 8
  %29 = load i32, i32* %5, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i32, i32* %28, i64 %30
  store i32 0, i32* %31, align 4
  br label %32

32:                                               ; preds = %27
  %33 = load i32, i32* %5, align 4
  %34 = add nsw i32 %33, -1
  store i32 %34, i32* %5, align 4
  br label %24

35:                                               ; preds = %24
  %36 = load i32**, i32*** %2, align 8
  %37 = getelementptr inbounds i32*, i32** %36, i64 0
  %38 = load i32*, i32** %37, align 8
  store i32* %38, i32** %10, align 8
  %39 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  store i32* %39, i32** %11, align 8
  %40 = load i32**, i32*** %2, align 8
  %41 = getelementptr inbounds i32*, i32** %40, i64 2
  store i32** %41, i32*** %4, align 8
  br label %42

42:                                               ; preds = %394, %35
  %43 = load i32**, i32*** %4, align 8
  %44 = getelementptr inbounds i32*, i32** %43, i32 1
  store i32** %44, i32*** %4, align 8
  %45 = load i32*, i32** %43, align 8
  store i32* %45, i32** %9, align 8
  %46 = icmp ne i32* %45, null
  br i1 %46, label %47, label %395

47:                                               ; preds = %42
  %48 = load i32*, i32** %9, align 8
  %49 = getelementptr inbounds i32, i32* %48, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 1023
  store i32 %51, i32* %6, align 4
  br label %52

52:                                               ; preds = %391, %47
  %53 = load i32, i32* %6, align 4
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %55, label %394

55:                                               ; preds = %52
  %56 = load i32*, i32** %11, align 8
  %57 = load i32, i32* %6, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %56, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = load i32*, i32** %9, align 8
  %62 = load i32, i32* %6, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %61, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = load i32*, i32** %10, align 8
  %67 = load i32, i32* %6, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %66, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = or i32 %65, %70
  %72 = xor i32 %71, -1
  %73 = and i32 %60, %72
  store i32 %73, i32* %8, align 4
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %390

75:                                               ; preds = %55
  %76 = load i32*, i32** %3, align 8
  %77 = load i32, i32* %6, align 4
  %78 = sub nsw i32 %77, 1
  %79 = shl i32 %78, 5
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %76, i64 %80
  store i32* %81, i32** %7, align 8
  %82 = load i32, i32* %8, align 4
  %83 = and i32 %82, -16777216
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %158

85:                                               ; preds = %75
  %86 = load i32, i32* %8, align 4
  %87 = and i32 %86, -2147483648
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %94

89:                                               ; preds = %85
  %90 = load i32*, i32** %7, align 8
  %91 = getelementptr inbounds i32, i32* %90, i64 31
  %92 = load i32, i32* %91, align 4
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %91, align 4
  br label %94

94:                                               ; preds = %89, %85
  %95 = load i32, i32* %8, align 4
  %96 = and i32 %95, 1073741824
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %103

98:                                               ; preds = %94
  %99 = load i32*, i32** %7, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 30
  %101 = load i32, i32* %100, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %100, align 4
  br label %103

103:                                              ; preds = %98, %94
  %104 = load i32, i32* %8, align 4
  %105 = and i32 %104, 536870912
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %112

107:                                              ; preds = %103
  %108 = load i32*, i32** %7, align 8
  %109 = getelementptr inbounds i32, i32* %108, i64 29
  %110 = load i32, i32* %109, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %109, align 4
  br label %112

112:                                              ; preds = %107, %103
  %113 = load i32, i32* %8, align 4
  %114 = and i32 %113, 268435456
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %116, label %121

116:                                              ; preds = %112
  %117 = load i32*, i32** %7, align 8
  %118 = getelementptr inbounds i32, i32* %117, i64 28
  %119 = load i32, i32* %118, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %118, align 4
  br label %121

121:                                              ; preds = %116, %112
  %122 = load i32, i32* %8, align 4
  %123 = and i32 %122, 134217728
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %130

125:                                              ; preds = %121
  %126 = load i32*, i32** %7, align 8
  %127 = getelementptr inbounds i32, i32* %126, i64 27
  %128 = load i32, i32* %127, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %127, align 4
  br label %130

130:                                              ; preds = %125, %121
  %131 = load i32, i32* %8, align 4
  %132 = and i32 %131, 67108864
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %134, label %139

134:                                              ; preds = %130
  %135 = load i32*, i32** %7, align 8
  %136 = getelementptr inbounds i32, i32* %135, i64 26
  %137 = load i32, i32* %136, align 4
  %138 = add nsw i32 %137, 1
  store i32 %138, i32* %136, align 4
  br label %139

139:                                              ; preds = %134, %130
  %140 = load i32, i32* %8, align 4
  %141 = and i32 %140, 33554432
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %143, label %148

143:                                              ; preds = %139
  %144 = load i32*, i32** %7, align 8
  %145 = getelementptr inbounds i32, i32* %144, i64 25
  %146 = load i32, i32* %145, align 4
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* %145, align 4
  br label %148

148:                                              ; preds = %143, %139
  %149 = load i32, i32* %8, align 4
  %150 = and i32 %149, 16777216
  %151 = icmp ne i32 %150, 0
  br i1 %151, label %152, label %157

152:                                              ; preds = %148
  %153 = load i32*, i32** %7, align 8
  %154 = getelementptr inbounds i32, i32* %153, i64 24
  %155 = load i32, i32* %154, align 4
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %154, align 4
  br label %157

157:                                              ; preds = %152, %148
  br label %158

158:                                              ; preds = %157, %75
  %159 = load i32, i32* %8, align 4
  %160 = and i32 %159, 16711680
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %162, label %235

162:                                              ; preds = %158
  %163 = load i32, i32* %8, align 4
  %164 = and i32 %163, 8388608
  %165 = icmp ne i32 %164, 0
  br i1 %165, label %166, label %171

166:                                              ; preds = %162
  %167 = load i32*, i32** %7, align 8
  %168 = getelementptr inbounds i32, i32* %167, i64 23
  %169 = load i32, i32* %168, align 4
  %170 = add nsw i32 %169, 1
  store i32 %170, i32* %168, align 4
  br label %171

171:                                              ; preds = %166, %162
  %172 = load i32, i32* %8, align 4
  %173 = and i32 %172, 4194304
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %175, label %180

175:                                              ; preds = %171
  %176 = load i32*, i32** %7, align 8
  %177 = getelementptr inbounds i32, i32* %176, i64 22
  %178 = load i32, i32* %177, align 4
  %179 = add nsw i32 %178, 1
  store i32 %179, i32* %177, align 4
  br label %180

180:                                              ; preds = %175, %171
  %181 = load i32, i32* %8, align 4
  %182 = and i32 %181, 2097152
  %183 = icmp ne i32 %182, 0
  br i1 %183, label %184, label %189

184:                                              ; preds = %180
  %185 = load i32*, i32** %7, align 8
  %186 = getelementptr inbounds i32, i32* %185, i64 21
  %187 = load i32, i32* %186, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* %186, align 4
  br label %189

189:                                              ; preds = %184, %180
  %190 = load i32, i32* %8, align 4
  %191 = and i32 %190, 1048576
  %192 = icmp ne i32 %191, 0
  br i1 %192, label %193, label %198

193:                                              ; preds = %189
  %194 = load i32*, i32** %7, align 8
  %195 = getelementptr inbounds i32, i32* %194, i64 20
  %196 = load i32, i32* %195, align 4
  %197 = add nsw i32 %196, 1
  store i32 %197, i32* %195, align 4
  br label %198

198:                                              ; preds = %193, %189
  %199 = load i32, i32* %8, align 4
  %200 = and i32 %199, 524288
  %201 = icmp ne i32 %200, 0
  br i1 %201, label %202, label %207

202:                                              ; preds = %198
  %203 = load i32*, i32** %7, align 8
  %204 = getelementptr inbounds i32, i32* %203, i64 19
  %205 = load i32, i32* %204, align 4
  %206 = add nsw i32 %205, 1
  store i32 %206, i32* %204, align 4
  br label %207

207:                                              ; preds = %202, %198
  %208 = load i32, i32* %8, align 4
  %209 = and i32 %208, 262144
  %210 = icmp ne i32 %209, 0
  br i1 %210, label %211, label %216

211:                                              ; preds = %207
  %212 = load i32*, i32** %7, align 8
  %213 = getelementptr inbounds i32, i32* %212, i64 18
  %214 = load i32, i32* %213, align 4
  %215 = add nsw i32 %214, 1
  store i32 %215, i32* %213, align 4
  br label %216

216:                                              ; preds = %211, %207
  %217 = load i32, i32* %8, align 4
  %218 = and i32 %217, 131072
  %219 = icmp ne i32 %218, 0
  br i1 %219, label %220, label %225

220:                                              ; preds = %216
  %221 = load i32*, i32** %7, align 8
  %222 = getelementptr inbounds i32, i32* %221, i64 17
  %223 = load i32, i32* %222, align 4
  %224 = add nsw i32 %223, 1
  store i32 %224, i32* %222, align 4
  br label %225

225:                                              ; preds = %220, %216
  %226 = load i32, i32* %8, align 4
  %227 = and i32 %226, 65536
  %228 = icmp ne i32 %227, 0
  br i1 %228, label %229, label %234

229:                                              ; preds = %225
  %230 = load i32*, i32** %7, align 8
  %231 = getelementptr inbounds i32, i32* %230, i64 16
  %232 = load i32, i32* %231, align 4
  %233 = add nsw i32 %232, 1
  store i32 %233, i32* %231, align 4
  br label %234

234:                                              ; preds = %229, %225
  br label %235

235:                                              ; preds = %234, %158
  %236 = load i32, i32* %8, align 4
  %237 = and i32 %236, 65280
  %238 = icmp ne i32 %237, 0
  br i1 %238, label %239, label %312

239:                                              ; preds = %235
  %240 = load i32, i32* %8, align 4
  %241 = and i32 %240, 32768
  %242 = icmp ne i32 %241, 0
  br i1 %242, label %243, label %248

243:                                              ; preds = %239
  %244 = load i32*, i32** %7, align 8
  %245 = getelementptr inbounds i32, i32* %244, i64 15
  %246 = load i32, i32* %245, align 4
  %247 = add nsw i32 %246, 1
  store i32 %247, i32* %245, align 4
  br label %248

248:                                              ; preds = %243, %239
  %249 = load i32, i32* %8, align 4
  %250 = and i32 %249, 16384
  %251 = icmp ne i32 %250, 0
  br i1 %251, label %252, label %257

252:                                              ; preds = %248
  %253 = load i32*, i32** %7, align 8
  %254 = getelementptr inbounds i32, i32* %253, i64 14
  %255 = load i32, i32* %254, align 4
  %256 = add nsw i32 %255, 1
  store i32 %256, i32* %254, align 4
  br label %257

257:                                              ; preds = %252, %248
  %258 = load i32, i32* %8, align 4
  %259 = and i32 %258, 8192
  %260 = icmp ne i32 %259, 0
  br i1 %260, label %261, label %266

261:                                              ; preds = %257
  %262 = load i32*, i32** %7, align 8
  %263 = getelementptr inbounds i32, i32* %262, i64 13
  %264 = load i32, i32* %263, align 4
  %265 = add nsw i32 %264, 1
  store i32 %265, i32* %263, align 4
  br label %266

266:                                              ; preds = %261, %257
  %267 = load i32, i32* %8, align 4
  %268 = and i32 %267, 4096
  %269 = icmp ne i32 %268, 0
  br i1 %269, label %270, label %275

270:                                              ; preds = %266
  %271 = load i32*, i32** %7, align 8
  %272 = getelementptr inbounds i32, i32* %271, i64 12
  %273 = load i32, i32* %272, align 4
  %274 = add nsw i32 %273, 1
  store i32 %274, i32* %272, align 4
  br label %275

275:                                              ; preds = %270, %266
  %276 = load i32, i32* %8, align 4
  %277 = and i32 %276, 2048
  %278 = icmp ne i32 %277, 0
  br i1 %278, label %279, label %284

279:                                              ; preds = %275
  %280 = load i32*, i32** %7, align 8
  %281 = getelementptr inbounds i32, i32* %280, i64 11
  %282 = load i32, i32* %281, align 4
  %283 = add nsw i32 %282, 1
  store i32 %283, i32* %281, align 4
  br label %284

284:                                              ; preds = %279, %275
  %285 = load i32, i32* %8, align 4
  %286 = and i32 %285, 1024
  %287 = icmp ne i32 %286, 0
  br i1 %287, label %288, label %293

288:                                              ; preds = %284
  %289 = load i32*, i32** %7, align 8
  %290 = getelementptr inbounds i32, i32* %289, i64 10
  %291 = load i32, i32* %290, align 4
  %292 = add nsw i32 %291, 1
  store i32 %292, i32* %290, align 4
  br label %293

293:                                              ; preds = %288, %284
  %294 = load i32, i32* %8, align 4
  %295 = and i32 %294, 512
  %296 = icmp ne i32 %295, 0
  br i1 %296, label %297, label %302

297:                                              ; preds = %293
  %298 = load i32*, i32** %7, align 8
  %299 = getelementptr inbounds i32, i32* %298, i64 9
  %300 = load i32, i32* %299, align 4
  %301 = add nsw i32 %300, 1
  store i32 %301, i32* %299, align 4
  br label %302

302:                                              ; preds = %297, %293
  %303 = load i32, i32* %8, align 4
  %304 = and i32 %303, 256
  %305 = icmp ne i32 %304, 0
  br i1 %305, label %306, label %311

306:                                              ; preds = %302
  %307 = load i32*, i32** %7, align 8
  %308 = getelementptr inbounds i32, i32* %307, i64 8
  %309 = load i32, i32* %308, align 4
  %310 = add nsw i32 %309, 1
  store i32 %310, i32* %308, align 4
  br label %311

311:                                              ; preds = %306, %302
  br label %312

312:                                              ; preds = %311, %235
  %313 = load i32, i32* %8, align 4
  %314 = and i32 %313, 255
  %315 = icmp ne i32 %314, 0
  br i1 %315, label %316, label %389

316:                                              ; preds = %312
  %317 = load i32, i32* %8, align 4
  %318 = and i32 %317, 128
  %319 = icmp ne i32 %318, 0
  br i1 %319, label %320, label %325

320:                                              ; preds = %316
  %321 = load i32*, i32** %7, align 8
  %322 = getelementptr inbounds i32, i32* %321, i64 7
  %323 = load i32, i32* %322, align 4
  %324 = add nsw i32 %323, 1
  store i32 %324, i32* %322, align 4
  br label %325

325:                                              ; preds = %320, %316
  %326 = load i32, i32* %8, align 4
  %327 = and i32 %326, 64
  %328 = icmp ne i32 %327, 0
  br i1 %328, label %329, label %334

329:                                              ; preds = %325
  %330 = load i32*, i32** %7, align 8
  %331 = getelementptr inbounds i32, i32* %330, i64 6
  %332 = load i32, i32* %331, align 4
  %333 = add nsw i32 %332, 1
  store i32 %333, i32* %331, align 4
  br label %334

334:                                              ; preds = %329, %325
  %335 = load i32, i32* %8, align 4
  %336 = and i32 %335, 32
  %337 = icmp ne i32 %336, 0
  br i1 %337, label %338, label %343

338:                                              ; preds = %334
  %339 = load i32*, i32** %7, align 8
  %340 = getelementptr inbounds i32, i32* %339, i64 5
  %341 = load i32, i32* %340, align 4
  %342 = add nsw i32 %341, 1
  store i32 %342, i32* %340, align 4
  br label %343

343:                                              ; preds = %338, %334
  %344 = load i32, i32* %8, align 4
  %345 = and i32 %344, 16
  %346 = icmp ne i32 %345, 0
  br i1 %346, label %347, label %352

347:                                              ; preds = %343
  %348 = load i32*, i32** %7, align 8
  %349 = getelementptr inbounds i32, i32* %348, i64 4
  %350 = load i32, i32* %349, align 4
  %351 = add nsw i32 %350, 1
  store i32 %351, i32* %349, align 4
  br label %352

352:                                              ; preds = %347, %343
  %353 = load i32, i32* %8, align 4
  %354 = and i32 %353, 8
  %355 = icmp ne i32 %354, 0
  br i1 %355, label %356, label %361

356:                                              ; preds = %352
  %357 = load i32*, i32** %7, align 8
  %358 = getelementptr inbounds i32, i32* %357, i64 3
  %359 = load i32, i32* %358, align 4
  %360 = add nsw i32 %359, 1
  store i32 %360, i32* %358, align 4
  br label %361

361:                                              ; preds = %356, %352
  %362 = load i32, i32* %8, align 4
  %363 = and i32 %362, 4
  %364 = icmp ne i32 %363, 0
  br i1 %364, label %365, label %370

365:                                              ; preds = %361
  %366 = load i32*, i32** %7, align 8
  %367 = getelementptr inbounds i32, i32* %366, i64 2
  %368 = load i32, i32* %367, align 4
  %369 = add nsw i32 %368, 1
  store i32 %369, i32* %367, align 4
  br label %370

370:                                              ; preds = %365, %361
  %371 = load i32, i32* %8, align 4
  %372 = and i32 %371, 2
  %373 = icmp ne i32 %372, 0
  br i1 %373, label %374, label %379

374:                                              ; preds = %370
  %375 = load i32*, i32** %7, align 8
  %376 = getelementptr inbounds i32, i32* %375, i64 1
  %377 = load i32, i32* %376, align 4
  %378 = add nsw i32 %377, 1
  store i32 %378, i32* %376, align 4
  br label %379

379:                                              ; preds = %374, %370
  %380 = load i32, i32* %8, align 4
  %381 = and i32 %380, 1
  %382 = icmp ne i32 %381, 0
  br i1 %382, label %383, label %388

383:                                              ; preds = %379
  %384 = load i32*, i32** %7, align 8
  %385 = getelementptr inbounds i32, i32* %384, i64 0
  %386 = load i32, i32* %385, align 4
  %387 = add nsw i32 %386, 1
  store i32 %387, i32* %385, align 4
  br label %388

388:                                              ; preds = %383, %379
  br label %389

389:                                              ; preds = %388, %312
  br label %390

390:                                              ; preds = %389, %55
  br label %391

391:                                              ; preds = %390
  %392 = load i32, i32* %6, align 4
  %393 = add nsw i32 %392, -1
  store i32 %393, i32* %6, align 4
  br label %52

394:                                              ; preds = %52
  br label %42

395:                                              ; preds = %42
  store i32 -1, i32* %17, align 4
  store i32 0, i32* %18, align 4
  store i32 0, i32* %19, align 4
  store i32 32000, i32* %20, align 4
  store i32 0, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 4), align 8
  store i32 0, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 5), align 4
  store i32 0, i32* %12, align 4
  br label %396

396:                                              ; preds = %566, %395
  %397 = load i32, i32* %12, align 4
  %398 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %399 = icmp slt i32 %397, %398
  br i1 %399, label %400, label %569

400:                                              ; preds = %396
  %401 = load i32, i32* %12, align 4
  %402 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %403 = icmp slt i32 %401, %402
  br i1 %403, label %404, label %441

404:                                              ; preds = %400
  %405 = load i32*, i32** %3, align 8
  %406 = load i32, i32* %12, align 4
  %407 = mul nsw i32 %406, 2
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds i32, i32* %405, i64 %408
  %410 = load i32, i32* %409, align 4
  store i32 %410, i32* %13, align 4
  %411 = load i32*, i32** %3, align 8
  %412 = load i32, i32* %12, align 4
  %413 = mul nsw i32 %412, 2
  %414 = add nsw i32 %413, 1
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds i32, i32* %411, i64 %415
  %417 = load i32, i32* %416, align 4
  store i32 %417, i32* %14, align 4
  %418 = load i32, i32* %13, align 4
  %419 = icmp sgt i32 %418, 0
  %420 = zext i1 %419 to i32
  %421 = load i32, i32* %14, align 4
  %422 = icmp sgt i32 %421, 0
  %423 = zext i1 %422 to i32
  %424 = add nsw i32 %420, %423
  store i32 %424, i32* %15, align 4
  %425 = load i32, i32* %13, align 4
  %426 = load i32, i32* %14, align 4
  %427 = add nsw i32 %425, %426
  %428 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  %429 = load i32, i32* %12, align 4
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds i32, i32* %428, i64 %430
  store i32 %427, i32* %431, align 4
  %432 = load i32, i32* %13, align 4
  %433 = load i32, i32* %14, align 4
  %434 = icmp sgt i32 %432, %433
  br i1 %434, label %435, label %437

435:                                              ; preds = %404
  %436 = load i32, i32* %13, align 4
  br label %439

437:                                              ; preds = %404
  %438 = load i32, i32* %14, align 4
  br label %439

439:                                              ; preds = %437, %435
  %440 = phi i32 [ %436, %435 ], [ %438, %437 ]
  store i32 %440, i32* %16, align 4
  br label %491

441:                                              ; preds = %400
  %442 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  %443 = load i32, i32* %12, align 4
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds i32, i32* %442, i64 %444
  store i32 0, i32* %445, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %16, align 4
  %446 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %447 = load i32, i32* %12, align 4
  %448 = sext i32 %447 to i64
  %449 = getelementptr inbounds i32, i32* %446, i64 %448
  %450 = load i32, i32* %449, align 4
  store i32 %450, i32* %14, align 4
  %451 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %452 = load i32, i32* %12, align 4
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds i32, i32* %451, i64 %453
  %455 = load i32, i32* %454, align 4
  store i32 %455, i32* %13, align 4
  br label %456

456:                                              ; preds = %487, %441
  %457 = load i32, i32* %13, align 4
  %458 = load i32, i32* %14, align 4
  %459 = icmp sle i32 %457, %458
  br i1 %459, label %460, label %490

460:                                              ; preds = %456
  %461 = load i32*, i32** %3, align 8
  %462 = load i32, i32* %13, align 4
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds i32, i32* %461, i64 %463
  %465 = load i32, i32* %464, align 4
  %466 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  %467 = load i32, i32* %12, align 4
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds i32, i32* %466, i64 %468
  %470 = load i32, i32* %469, align 4
  %471 = add nsw i32 %470, %465
  store i32 %471, i32* %469, align 4
  %472 = load i32*, i32** %3, align 8
  %473 = load i32, i32* %13, align 4
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds i32, i32* %472, i64 %474
  %476 = load i32, i32* %475, align 4
  %477 = icmp sgt i32 %476, 0
  %478 = zext i1 %477 to i32
  %479 = load i32, i32* %15, align 4
  %480 = add nsw i32 %479, %478
  store i32 %480, i32* %15, align 4
  %481 = load i32, i32* %15, align 4
  %482 = load i32, i32* %16, align 4
  %483 = icmp sgt i32 %481, %482
  br i1 %483, label %484, label %486

484:                                              ; preds = %460
  %485 = load i32, i32* %15, align 4
  store i32 %485, i32* %16, align 4
  br label %486

486:                                              ; preds = %484, %460
  br label %487

487:                                              ; preds = %486
  %488 = load i32, i32* %13, align 4
  %489 = add nsw i32 %488, 1
  store i32 %489, i32* %13, align 4
  br label %456

490:                                              ; preds = %456
  br label %491

491:                                              ; preds = %490, %439
  %492 = load i32, i32* %15, align 4
  %493 = load i32, i32* %18, align 4
  %494 = icmp sgt i32 %492, %493
  br i1 %494, label %495, label %504

495:                                              ; preds = %491
  %496 = load i32, i32* %12, align 4
  store i32 %496, i32* %17, align 4
  %497 = load i32, i32* %15, align 4
  store i32 %497, i32* %18, align 4
  %498 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  %499 = load i32, i32* %17, align 4
  %500 = sext i32 %499 to i64
  %501 = getelementptr inbounds i32, i32* %498, i64 %500
  %502 = load i32, i32* %501, align 4
  store i32 %502, i32* %19, align 4
  %503 = load i32, i32* %16, align 4
  store i32 %503, i32* %20, align 4
  br label %543

504:                                              ; preds = %491
  %505 = load i32, i32* %15, align 4
  %506 = load i32, i32* %18, align 4
  %507 = icmp eq i32 %505, %506
  br i1 %507, label %508, label %542

508:                                              ; preds = %504
  %509 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  %510 = load i32, i32* %12, align 4
  %511 = sext i32 %510 to i64
  %512 = getelementptr inbounds i32, i32* %509, i64 %511
  %513 = load i32, i32* %512, align 4
  %514 = load i32, i32* %19, align 4
  %515 = icmp sgt i32 %513, %514
  br i1 %515, label %516, label %524

516:                                              ; preds = %508
  %517 = load i32, i32* %12, align 4
  store i32 %517, i32* %17, align 4
  %518 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  %519 = load i32, i32* %17, align 4
  %520 = sext i32 %519 to i64
  %521 = getelementptr inbounds i32, i32* %518, i64 %520
  %522 = load i32, i32* %521, align 4
  store i32 %522, i32* %19, align 4
  %523 = load i32, i32* %16, align 4
  store i32 %523, i32* %20, align 4
  br label %541

524:                                              ; preds = %508
  %525 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  %526 = load i32, i32* %12, align 4
  %527 = sext i32 %526 to i64
  %528 = getelementptr inbounds i32, i32* %525, i64 %527
  %529 = load i32, i32* %528, align 4
  %530 = load i32, i32* %19, align 4
  %531 = icmp eq i32 %529, %530
  br i1 %531, label %532, label %540

532:                                              ; preds = %524
  %533 = load i32, i32* %16, align 4
  %534 = load i32, i32* %20, align 4
  %535 = icmp slt i32 %533, %534
  br i1 %535, label %536, label %539

536:                                              ; preds = %532
  %537 = load i32, i32* %12, align 4
  store i32 %537, i32* %17, align 4
  %538 = load i32, i32* %16, align 4
  store i32 %538, i32* %20, align 4
  br label %539

539:                                              ; preds = %536, %532
  br label %540

540:                                              ; preds = %539, %524
  br label %541

541:                                              ; preds = %540, %516
  br label %542

542:                                              ; preds = %541, %504
  br label %543

543:                                              ; preds = %542, %495
  %544 = load i32, i32* %15, align 4
  %545 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 2), align 8
  %546 = load i32, i32* %12, align 4
  %547 = sext i32 %546 to i64
  %548 = getelementptr inbounds i32, i32* %545, i64 %547
  store i32 %544, i32* %548, align 4
  %549 = load i32, i32* %15, align 4
  %550 = icmp eq i32 %549, 1
  %551 = zext i1 %550 to i32
  %552 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 3), align 8
  %553 = load i32, i32* %12, align 4
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds i32, i32* %552, i64 %554
  store i32 %551, i32* %555, align 4
  %556 = load i32, i32* %15, align 4
  %557 = icmp sgt i32 %556, 0
  %558 = zext i1 %557 to i32
  %559 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 4), align 8
  %560 = add nsw i32 %559, %558
  store i32 %560, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 4), align 8
  %561 = load i32, i32* %15, align 4
  %562 = icmp eq i32 %561, 1
  %563 = zext i1 %562 to i32
  %564 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 5), align 4
  %565 = add nsw i32 %564, %563
  store i32 %565, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 5), align 4
  br label %566

566:                                              ; preds = %543
  %567 = load i32, i32* %12, align 4
  %568 = add nsw i32 %567, 1
  store i32 %568, i32* %12, align 4
  br label %396

569:                                              ; preds = %396
  %570 = load i32, i32* %17, align 4
  store i32 %570, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 6), align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @binate_split_select(i32** %0, i32* %1, i32* %2, i32 %3) #0 {
  %5 = alloca i32**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  store i32** %0, i32*** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32 %3, i32* %8, align 4
  %14 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 6), align 8
  store i32 %14, i32* %9, align 4
  %15 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %16 = load i32, i32* %9, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %15, i64 %17
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %11, align 4
  store i32 0, i32* %12, align 4
  %20 = load i32**, i32*** %5, align 8
  %21 = getelementptr inbounds i32*, i32** %20, i64 0
  %22 = load i32*, i32** %21, align 8
  store i32* %22, i32** %13, align 8
  %23 = load i32*, i32** %6, align 8
  %24 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %25 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %26 = load i32, i32* %9, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i32*, i32** %25, i64 %27
  %29 = load i32*, i32** %28, align 8
  %30 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %23, i32* %24, i32* %29)
  %31 = load i32*, i32** %7, align 8
  %32 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %33 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %34 = load i32, i32* %9, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32*, i32** %33, i64 %35
  %37 = load i32*, i32** %36, align 8
  %38 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %31, i32* %32, i32* %37)
  %39 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %40 = load i32, i32* %9, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i32, i32* %39, i64 %41
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %10, align 4
  br label %44

44:                                               ; preds = %65, %4
  %45 = load i32, i32* %10, align 4
  %46 = load i32, i32* %11, align 4
  %47 = icmp sle i32 %45, %46
  br i1 %47, label %48, label %68

48:                                               ; preds = %44
  %49 = load i32*, i32** %13, align 8
  %50 = load i32, i32* %10, align 4
  %51 = ashr i32 %50, 5
  %52 = add nsw i32 %51, 1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, i32* %49, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = load i32, i32* %10, align 4
  %57 = and i32 %56, 31
  %58 = shl i32 1, %57
  %59 = and i32 %55, %58
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %48
  %62 = load i32, i32* %12, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %12, align 4
  br label %64

64:                                               ; preds = %61, %48
  br label %65

65:                                               ; preds = %64
  %66 = load i32, i32* %10, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %10, align 4
  br label %44

68:                                               ; preds = %44
  %69 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %70 = load i32, i32* %9, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i32, i32* %69, i64 %71
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %10, align 4
  %74 = load i32, i32* %12, align 4
  %75 = sdiv i32 %74, 2
  store i32 %75, i32* %12, align 4
  br label %76

76:                                               ; preds = %107, %68
  %77 = load i32, i32* %12, align 4
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %110

79:                                               ; preds = %76
  %80 = load i32*, i32** %13, align 8
  %81 = load i32, i32* %10, align 4
  %82 = ashr i32 %81, 5
  %83 = add nsw i32 %82, 1
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i32, i32* %80, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = load i32, i32* %10, align 4
  %88 = and i32 %87, 31
  %89 = shl i32 1, %88
  %90 = and i32 %86, %89
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %106, label %92

92:                                               ; preds = %79
  %93 = load i32, i32* %12, align 4
  %94 = add nsw i32 %93, -1
  store i32 %94, i32* %12, align 4
  %95 = load i32, i32* %10, align 4
  %96 = and i32 %95, 31
  %97 = shl i32 1, %96
  %98 = load i32*, i32** %6, align 8
  %99 = load i32, i32* %10, align 4
  %100 = ashr i32 %99, 5
  %101 = add nsw i32 %100, 1
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i32, i32* %98, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = or i32 %104, %97
  store i32 %105, i32* %103, align 4
  br label %106

106:                                              ; preds = %92, %79
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %10, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %10, align 4
  br label %76

110:                                              ; preds = %76
  br label %111

111:                                              ; preds = %141, %110
  %112 = load i32, i32* %10, align 4
  %113 = load i32, i32* %11, align 4
  %114 = icmp sle i32 %112, %113
  br i1 %114, label %115, label %144

115:                                              ; preds = %111
  %116 = load i32*, i32** %13, align 8
  %117 = load i32, i32* %10, align 4
  %118 = ashr i32 %117, 5
  %119 = add nsw i32 %118, 1
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i32, i32* %116, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = load i32, i32* %10, align 4
  %124 = and i32 %123, 31
  %125 = shl i32 1, %124
  %126 = and i32 %122, %125
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %140, label %128

128:                                              ; preds = %115
  %129 = load i32, i32* %10, align 4
  %130 = and i32 %129, 31
  %131 = shl i32 1, %130
  %132 = load i32*, i32** %7, align 8
  %133 = load i32, i32* %10, align 4
  %134 = ashr i32 %133, 5
  %135 = add nsw i32 %134, 1
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i32, i32* %132, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = or i32 %138, %131
  store i32 %139, i32* %137, align 4
  br label %140

140:                                              ; preds = %128, %115
  br label %141

141:                                              ; preds = %140
  %142 = load i32, i32* %10, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %10, align 4
  br label %111

144:                                              ; preds = %111
  %145 = load i32, i32* @debug, align 4
  %146 = load i32, i32* %8, align 4
  %147 = and i32 %145, %146
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %161

149:                                              ; preds = %144
  %150 = load i32, i32* %9, align 4
  %151 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %150)
  %152 = load i32, i32* @verbose_debug, align 4
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %154, label %160

154:                                              ; preds = %149
  %155 = load i32*, i32** %6, align 8
  %156 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %155)
  %157 = load i32*, i32** %7, align 8
  %158 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc2 to i8* (i32*, ...)*)(i32* %157)
  %159 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i8* %156, i8* %158)
  br label %160

160:                                              ; preds = %154, %149
  br label %161

161:                                              ; preds = %160, %144
  %162 = load i32, i32* %9, align 4
  ret i32 %162
}

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32** @cube1list(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %7 = load %struct.set_family*, %struct.set_family** %2, align 8
  %8 = getelementptr inbounds %struct.set_family, %struct.set_family* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, 3
  %11 = sext i32 %10 to i64
  %12 = mul i64 8, %11
  %13 = call noalias i8* @malloc(i64 %12) #7
  %14 = bitcast i8* %13 to i32**
  store i32** %14, i32*** %5, align 8
  store i32** %14, i32*** %6, align 8
  %15 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %16 = icmp sle i32 %15, 32
  br i1 %16, label %17, label %18

17:                                               ; preds = %1
  br label %24

18:                                               ; preds = %1
  %19 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %20 = sub nsw i32 %19, 1
  %21 = ashr i32 %20, 5
  %22 = add nsw i32 %21, 1
  %23 = add nsw i32 %22, 1
  br label %24

24:                                               ; preds = %18, %17
  %25 = phi i32 [ 2, %17 ], [ %23, %18 ]
  %26 = sext i32 %25 to i64
  %27 = mul i64 4, %26
  %28 = call noalias i8* @malloc(i64 %27) #7
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %31 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %29, i32 %30)
  %32 = load i32**, i32*** %5, align 8
  %33 = getelementptr inbounds i32*, i32** %32, i32 1
  store i32** %33, i32*** %5, align 8
  store i32* %31, i32** %32, align 8
  %34 = load i32**, i32*** %5, align 8
  %35 = getelementptr inbounds i32*, i32** %34, i32 1
  store i32** %35, i32*** %5, align 8
  %36 = load %struct.set_family*, %struct.set_family** %2, align 8
  %37 = getelementptr inbounds %struct.set_family, %struct.set_family* %36, i32 0, i32 5
  %38 = load i32*, i32** %37, align 8
  store i32* %38, i32** %4, align 8
  %39 = load i32*, i32** %4, align 8
  %40 = load %struct.set_family*, %struct.set_family** %2, align 8
  %41 = getelementptr inbounds %struct.set_family, %struct.set_family* %40, i32 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = load %struct.set_family*, %struct.set_family** %2, align 8
  %44 = getelementptr inbounds %struct.set_family, %struct.set_family* %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = mul nsw i32 %42, %45
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i32, i32* %39, i64 %47
  store i32* %48, i32** %3, align 8
  br label %49

49:                                               ; preds = %57, %24
  %50 = load i32*, i32** %4, align 8
  %51 = load i32*, i32** %3, align 8
  %52 = icmp ult i32* %50, %51
  br i1 %52, label %53, label %64

53:                                               ; preds = %49
  %54 = load i32*, i32** %4, align 8
  %55 = load i32**, i32*** %5, align 8
  %56 = getelementptr inbounds i32*, i32** %55, i32 1
  store i32** %56, i32*** %5, align 8
  store i32* %54, i32** %55, align 8
  br label %57

57:                                               ; preds = %53
  %58 = load %struct.set_family*, %struct.set_family** %2, align 8
  %59 = getelementptr inbounds %struct.set_family, %struct.set_family* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = load i32*, i32** %4, align 8
  %62 = sext i32 %60 to i64
  %63 = getelementptr inbounds i32, i32* %61, i64 %62
  store i32* %63, i32** %4, align 8
  br label %49

64:                                               ; preds = %49
  %65 = load i32**, i32*** %5, align 8
  %66 = getelementptr inbounds i32*, i32** %65, i32 1
  store i32** %66, i32*** %5, align 8
  store i32* null, i32** %65, align 8
  %67 = load i32**, i32*** %5, align 8
  %68 = bitcast i32** %67 to i32*
  %69 = load i32**, i32*** %6, align 8
  %70 = getelementptr inbounds i32*, i32** %69, i64 1
  store i32* %68, i32** %70, align 8
  %71 = load i32**, i32*** %6, align 8
  ret i32** %71
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32** @cube2list(%struct.set_family* %0, %struct.set_family* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  %9 = load %struct.set_family*, %struct.set_family** %3, align 8
  %10 = getelementptr inbounds %struct.set_family, %struct.set_family* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = load %struct.set_family*, %struct.set_family** %4, align 8
  %13 = getelementptr inbounds %struct.set_family, %struct.set_family* %12, i32 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = add nsw i32 %11, %14
  %16 = add nsw i32 %15, 3
  %17 = sext i32 %16 to i64
  %18 = mul i64 8, %17
  %19 = call noalias i8* @malloc(i64 %18) #7
  %20 = bitcast i8* %19 to i32**
  store i32** %20, i32*** %7, align 8
  store i32** %20, i32*** %8, align 8
  %21 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %22 = icmp sle i32 %21, 32
  br i1 %22, label %23, label %24

23:                                               ; preds = %2
  br label %30

24:                                               ; preds = %2
  %25 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %26 = sub nsw i32 %25, 1
  %27 = ashr i32 %26, 5
  %28 = add nsw i32 %27, 1
  %29 = add nsw i32 %28, 1
  br label %30

30:                                               ; preds = %24, %23
  %31 = phi i32 [ 2, %23 ], [ %29, %24 ]
  %32 = sext i32 %31 to i64
  %33 = mul i64 4, %32
  %34 = call noalias i8* @malloc(i64 %33) #7
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %37 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %35, i32 %36)
  %38 = load i32**, i32*** %7, align 8
  %39 = getelementptr inbounds i32*, i32** %38, i32 1
  store i32** %39, i32*** %7, align 8
  store i32* %37, i32** %38, align 8
  %40 = load i32**, i32*** %7, align 8
  %41 = getelementptr inbounds i32*, i32** %40, i32 1
  store i32** %41, i32*** %7, align 8
  %42 = load %struct.set_family*, %struct.set_family** %3, align 8
  %43 = getelementptr inbounds %struct.set_family, %struct.set_family* %42, i32 0, i32 5
  %44 = load i32*, i32** %43, align 8
  store i32* %44, i32** %6, align 8
  %45 = load i32*, i32** %6, align 8
  %46 = load %struct.set_family*, %struct.set_family** %3, align 8
  %47 = getelementptr inbounds %struct.set_family, %struct.set_family* %46, i32 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = load %struct.set_family*, %struct.set_family** %3, align 8
  %50 = getelementptr inbounds %struct.set_family, %struct.set_family* %49, i32 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = mul nsw i32 %48, %51
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, i32* %45, i64 %53
  store i32* %54, i32** %5, align 8
  br label %55

55:                                               ; preds = %63, %30
  %56 = load i32*, i32** %6, align 8
  %57 = load i32*, i32** %5, align 8
  %58 = icmp ult i32* %56, %57
  br i1 %58, label %59, label %70

59:                                               ; preds = %55
  %60 = load i32*, i32** %6, align 8
  %61 = load i32**, i32*** %7, align 8
  %62 = getelementptr inbounds i32*, i32** %61, i32 1
  store i32** %62, i32*** %7, align 8
  store i32* %60, i32** %61, align 8
  br label %63

63:                                               ; preds = %59
  %64 = load %struct.set_family*, %struct.set_family** %3, align 8
  %65 = getelementptr inbounds %struct.set_family, %struct.set_family* %64, i32 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = load i32*, i32** %6, align 8
  %68 = sext i32 %66 to i64
  %69 = getelementptr inbounds i32, i32* %67, i64 %68
  store i32* %69, i32** %6, align 8
  br label %55

70:                                               ; preds = %55
  %71 = load %struct.set_family*, %struct.set_family** %4, align 8
  %72 = getelementptr inbounds %struct.set_family, %struct.set_family* %71, i32 0, i32 5
  %73 = load i32*, i32** %72, align 8
  store i32* %73, i32** %6, align 8
  %74 = load i32*, i32** %6, align 8
  %75 = load %struct.set_family*, %struct.set_family** %4, align 8
  %76 = getelementptr inbounds %struct.set_family, %struct.set_family* %75, i32 0, i32 3
  %77 = load i32, i32* %76, align 4
  %78 = load %struct.set_family*, %struct.set_family** %4, align 8
  %79 = getelementptr inbounds %struct.set_family, %struct.set_family* %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = mul nsw i32 %77, %80
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i32, i32* %74, i64 %82
  store i32* %83, i32** %5, align 8
  br label %84

84:                                               ; preds = %92, %70
  %85 = load i32*, i32** %6, align 8
  %86 = load i32*, i32** %5, align 8
  %87 = icmp ult i32* %85, %86
  br i1 %87, label %88, label %99

88:                                               ; preds = %84
  %89 = load i32*, i32** %6, align 8
  %90 = load i32**, i32*** %7, align 8
  %91 = getelementptr inbounds i32*, i32** %90, i32 1
  store i32** %91, i32*** %7, align 8
  store i32* %89, i32** %90, align 8
  br label %92

92:                                               ; preds = %88
  %93 = load %struct.set_family*, %struct.set_family** %4, align 8
  %94 = getelementptr inbounds %struct.set_family, %struct.set_family* %93, i32 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = load i32*, i32** %6, align 8
  %97 = sext i32 %95 to i64
  %98 = getelementptr inbounds i32, i32* %96, i64 %97
  store i32* %98, i32** %6, align 8
  br label %84

99:                                               ; preds = %84
  %100 = load i32**, i32*** %7, align 8
  %101 = getelementptr inbounds i32*, i32** %100, i32 1
  store i32** %101, i32*** %7, align 8
  store i32* null, i32** %100, align 8
  %102 = load i32**, i32*** %7, align 8
  %103 = bitcast i32** %102 to i32*
  %104 = load i32**, i32*** %8, align 8
  %105 = getelementptr inbounds i32*, i32** %104, i64 1
  store i32* %103, i32** %105, align 8
  %106 = load i32**, i32*** %8, align 8
  ret i32** %106
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32** @cube3list(%struct.set_family* %0, %struct.set_family* %1, %struct.set_family* %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i32**, align 8
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store %struct.set_family* %1, %struct.set_family** %5, align 8
  store %struct.set_family* %2, %struct.set_family** %6, align 8
  %11 = load %struct.set_family*, %struct.set_family** %4, align 8
  %12 = getelementptr inbounds %struct.set_family, %struct.set_family* %11, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = load %struct.set_family*, %struct.set_family** %5, align 8
  %15 = getelementptr inbounds %struct.set_family, %struct.set_family* %14, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %13, %16
  %18 = load %struct.set_family*, %struct.set_family** %6, align 8
  %19 = getelementptr inbounds %struct.set_family, %struct.set_family* %18, i32 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = add nsw i32 %17, %20
  %22 = add nsw i32 %21, 3
  %23 = sext i32 %22 to i64
  %24 = mul i64 8, %23
  %25 = call noalias i8* @malloc(i64 %24) #7
  %26 = bitcast i8* %25 to i32**
  store i32** %26, i32*** %9, align 8
  %27 = load i32**, i32*** %9, align 8
  store i32** %27, i32*** %10, align 8
  %28 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %29 = icmp sle i32 %28, 32
  br i1 %29, label %30, label %31

30:                                               ; preds = %3
  br label %37

31:                                               ; preds = %3
  %32 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %33 = sub nsw i32 %32, 1
  %34 = ashr i32 %33, 5
  %35 = add nsw i32 %34, 1
  %36 = add nsw i32 %35, 1
  br label %37

37:                                               ; preds = %31, %30
  %38 = phi i32 [ 2, %30 ], [ %36, %31 ]
  %39 = sext i32 %38 to i64
  %40 = mul i64 4, %39
  %41 = call noalias i8* @malloc(i64 %40) #7
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %44 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %42, i32 %43)
  %45 = load i32**, i32*** %9, align 8
  %46 = getelementptr inbounds i32*, i32** %45, i32 1
  store i32** %46, i32*** %9, align 8
  store i32* %44, i32** %45, align 8
  %47 = load i32**, i32*** %9, align 8
  %48 = getelementptr inbounds i32*, i32** %47, i32 1
  store i32** %48, i32*** %9, align 8
  %49 = load %struct.set_family*, %struct.set_family** %4, align 8
  %50 = getelementptr inbounds %struct.set_family, %struct.set_family* %49, i32 0, i32 5
  %51 = load i32*, i32** %50, align 8
  store i32* %51, i32** %8, align 8
  %52 = load i32*, i32** %8, align 8
  %53 = load %struct.set_family*, %struct.set_family** %4, align 8
  %54 = getelementptr inbounds %struct.set_family, %struct.set_family* %53, i32 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = load %struct.set_family*, %struct.set_family** %4, align 8
  %57 = getelementptr inbounds %struct.set_family, %struct.set_family* %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = mul nsw i32 %55, %58
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %52, i64 %60
  store i32* %61, i32** %7, align 8
  br label %62

62:                                               ; preds = %70, %37
  %63 = load i32*, i32** %8, align 8
  %64 = load i32*, i32** %7, align 8
  %65 = icmp ult i32* %63, %64
  br i1 %65, label %66, label %77

66:                                               ; preds = %62
  %67 = load i32*, i32** %8, align 8
  %68 = load i32**, i32*** %9, align 8
  %69 = getelementptr inbounds i32*, i32** %68, i32 1
  store i32** %69, i32*** %9, align 8
  store i32* %67, i32** %68, align 8
  br label %70

70:                                               ; preds = %66
  %71 = load %struct.set_family*, %struct.set_family** %4, align 8
  %72 = getelementptr inbounds %struct.set_family, %struct.set_family* %71, i32 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = load i32*, i32** %8, align 8
  %75 = sext i32 %73 to i64
  %76 = getelementptr inbounds i32, i32* %74, i64 %75
  store i32* %76, i32** %8, align 8
  br label %62

77:                                               ; preds = %62
  %78 = load %struct.set_family*, %struct.set_family** %5, align 8
  %79 = getelementptr inbounds %struct.set_family, %struct.set_family* %78, i32 0, i32 5
  %80 = load i32*, i32** %79, align 8
  store i32* %80, i32** %8, align 8
  %81 = load i32*, i32** %8, align 8
  %82 = load %struct.set_family*, %struct.set_family** %5, align 8
  %83 = getelementptr inbounds %struct.set_family, %struct.set_family* %82, i32 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = load %struct.set_family*, %struct.set_family** %5, align 8
  %86 = getelementptr inbounds %struct.set_family, %struct.set_family* %85, i32 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = mul nsw i32 %84, %87
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i32, i32* %81, i64 %89
  store i32* %90, i32** %7, align 8
  br label %91

91:                                               ; preds = %99, %77
  %92 = load i32*, i32** %8, align 8
  %93 = load i32*, i32** %7, align 8
  %94 = icmp ult i32* %92, %93
  br i1 %94, label %95, label %106

95:                                               ; preds = %91
  %96 = load i32*, i32** %8, align 8
  %97 = load i32**, i32*** %9, align 8
  %98 = getelementptr inbounds i32*, i32** %97, i32 1
  store i32** %98, i32*** %9, align 8
  store i32* %96, i32** %97, align 8
  br label %99

99:                                               ; preds = %95
  %100 = load %struct.set_family*, %struct.set_family** %5, align 8
  %101 = getelementptr inbounds %struct.set_family, %struct.set_family* %100, i32 0, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = load i32*, i32** %8, align 8
  %104 = sext i32 %102 to i64
  %105 = getelementptr inbounds i32, i32* %103, i64 %104
  store i32* %105, i32** %8, align 8
  br label %91

106:                                              ; preds = %91
  %107 = load %struct.set_family*, %struct.set_family** %6, align 8
  %108 = getelementptr inbounds %struct.set_family, %struct.set_family* %107, i32 0, i32 5
  %109 = load i32*, i32** %108, align 8
  store i32* %109, i32** %8, align 8
  %110 = load i32*, i32** %8, align 8
  %111 = load %struct.set_family*, %struct.set_family** %6, align 8
  %112 = getelementptr inbounds %struct.set_family, %struct.set_family* %111, i32 0, i32 3
  %113 = load i32, i32* %112, align 4
  %114 = load %struct.set_family*, %struct.set_family** %6, align 8
  %115 = getelementptr inbounds %struct.set_family, %struct.set_family* %114, i32 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = mul nsw i32 %113, %116
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i32, i32* %110, i64 %118
  store i32* %119, i32** %7, align 8
  br label %120

120:                                              ; preds = %128, %106
  %121 = load i32*, i32** %8, align 8
  %122 = load i32*, i32** %7, align 8
  %123 = icmp ult i32* %121, %122
  br i1 %123, label %124, label %135

124:                                              ; preds = %120
  %125 = load i32*, i32** %8, align 8
  %126 = load i32**, i32*** %9, align 8
  %127 = getelementptr inbounds i32*, i32** %126, i32 1
  store i32** %127, i32*** %9, align 8
  store i32* %125, i32** %126, align 8
  br label %128

128:                                              ; preds = %124
  %129 = load %struct.set_family*, %struct.set_family** %6, align 8
  %130 = getelementptr inbounds %struct.set_family, %struct.set_family* %129, i32 0, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = load i32*, i32** %8, align 8
  %133 = sext i32 %131 to i64
  %134 = getelementptr inbounds i32, i32* %132, i64 %133
  store i32* %134, i32** %8, align 8
  br label %120

135:                                              ; preds = %120
  %136 = load i32**, i32*** %9, align 8
  %137 = getelementptr inbounds i32*, i32** %136, i32 1
  store i32** %137, i32*** %9, align 8
  store i32* null, i32** %136, align 8
  %138 = load i32**, i32*** %9, align 8
  %139 = bitcast i32** %138 to i32*
  %140 = load i32**, i32*** %10, align 8
  %141 = getelementptr inbounds i32*, i32** %140, i64 1
  store i32* %139, i32** %141, align 8
  %142 = load i32**, i32*** %10, align 8
  ret i32** %142
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @cubeunlist(i32** %0) #0 {
  %2 = alloca i32**, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca i32, align 4
  store i32** %0, i32*** %2, align 8
  %9 = load i32**, i32*** %2, align 8
  %10 = getelementptr inbounds i32*, i32** %9, i64 0
  %11 = load i32*, i32** %10, align 8
  store i32* %11, i32** %6, align 8
  %12 = load i32**, i32*** %2, align 8
  %13 = getelementptr inbounds i32*, i32** %12, i64 1
  %14 = load i32*, i32** %13, align 8
  %15 = bitcast i32* %14 to i32**
  %16 = load i32**, i32*** %2, align 8
  %17 = ptrtoint i32** %15 to i64
  %18 = ptrtoint i32** %16 to i64
  %19 = sub i64 %17, %18
  %20 = sdiv exact i64 %19, 8
  %21 = sub nsw i64 %20, 3
  %22 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %23 = call %struct.set_family* (i64, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i64, i32, ...)*)(i64 %21, i32 %22)
  store %struct.set_family* %23, %struct.set_family** %7, align 8
  store i32 2, i32* %3, align 4
  br label %24

24:                                               ; preds = %77, %1
  %25 = load i32**, i32*** %2, align 8
  %26 = load i32, i32* %3, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i32*, i32** %25, i64 %27
  %29 = load i32*, i32** %28, align 8
  store i32* %29, i32** %4, align 8
  %30 = icmp ne i32* %29, null
  br i1 %30, label %31, label %80

31:                                               ; preds = %24
  %32 = load %struct.set_family*, %struct.set_family** %7, align 8
  %33 = getelementptr inbounds %struct.set_family, %struct.set_family* %32, i32 0, i32 5
  %34 = load i32*, i32** %33, align 8
  %35 = load %struct.set_family*, %struct.set_family** %7, align 8
  %36 = getelementptr inbounds %struct.set_family, %struct.set_family* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = load i32, i32* %3, align 4
  %39 = sub nsw i32 %38, 2
  %40 = mul nsw i32 %37, %39
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i32, i32* %34, i64 %41
  store i32* %42, i32** %5, align 8
  %43 = load i32*, i32** %4, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 0
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 1023
  store i32 %46, i32* %8, align 4
  %47 = load i32*, i32** %5, align 8
  %48 = getelementptr inbounds i32, i32* %47, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, -1024
  store i32 %50, i32* %48, align 4
  %51 = load i32, i32* %8, align 4
  %52 = load i32*, i32** %5, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 0
  %54 = load i32, i32* %53, align 4
  %55 = or i32 %54, %51
  store i32 %55, i32* %53, align 4
  br label %56

56:                                               ; preds = %72, %31
  %57 = load i32*, i32** %4, align 8
  %58 = load i32, i32* %8, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, i32* %57, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = load i32*, i32** %6, align 8
  %63 = load i32, i32* %8, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %62, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = or i32 %61, %66
  %68 = load i32*, i32** %5, align 8
  %69 = load i32, i32* %8, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, i32* %68, i64 %70
  store i32 %67, i32* %71, align 4
  br label %72

72:                                               ; preds = %56
  %73 = load i32, i32* %8, align 4
  %74 = add nsw i32 %73, -1
  store i32 %74, i32* %8, align 4
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %56, label %76

76:                                               ; preds = %72
  br label %77

77:                                               ; preds = %76
  %78 = load i32, i32* %3, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %3, align 4
  br label %24

80:                                               ; preds = %24
  %81 = load i32**, i32*** %2, align 8
  %82 = getelementptr inbounds i32*, i32** %81, i64 1
  %83 = load i32*, i32** %82, align 8
  %84 = bitcast i32* %83 to i32**
  %85 = load i32**, i32*** %2, align 8
  %86 = ptrtoint i32** %84 to i64
  %87 = ptrtoint i32** %85 to i64
  %88 = sub i64 %86, %87
  %89 = sdiv exact i64 %88, 8
  %90 = sub nsw i64 %89, 3
  %91 = trunc i64 %90 to i32
  %92 = load %struct.set_family*, %struct.set_family** %7, align 8
  %93 = getelementptr inbounds %struct.set_family, %struct.set_family* %92, i32 0, i32 3
  store i32 %91, i32* %93, align 4
  %94 = load %struct.set_family*, %struct.set_family** %7, align 8
  ret %struct.set_family* %94
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @simplify_cubelist(i32** %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32**, align 8
  %4 = alloca i32**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32** %0, i32*** %3, align 8
  %7 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %8 = getelementptr inbounds i32*, i32** %7, i64 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i32**, i32*** %3, align 8
  %11 = getelementptr inbounds i32*, i32** %10, i64 0
  %12 = load i32*, i32** %11, align 8
  %13 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %9, i32* %12)
  %14 = load i32**, i32*** %3, align 8
  %15 = getelementptr inbounds i32*, i32** %14, i64 1
  %16 = load i32*, i32** %15, align 8
  %17 = bitcast i32* %16 to i32**
  %18 = load i32**, i32*** %3, align 8
  %19 = ptrtoint i32** %17 to i64
  %20 = ptrtoint i32** %18 to i64
  %21 = sub i64 %19, %20
  %22 = sdiv exact i64 %21, 8
  %23 = sub nsw i64 %22, 3
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %6, align 4
  %25 = load i32**, i32*** %3, align 8
  %26 = getelementptr inbounds i32*, i32** %25, i64 2
  %27 = bitcast i32** %26 to i8*
  %28 = load i32, i32* %6, align 4
  %29 = sext i32 %28 to i64
  call void @qsort(i8* %27, i64 %29, i64 8, i32 (i8*, i8*)* bitcast (i32 (i32**, i32**)* @d1_order to i32 (i8*, i8*)*))
  %30 = load i32**, i32*** %3, align 8
  %31 = getelementptr inbounds i32*, i32** %30, i64 2
  store i32** %31, i32*** %4, align 8
  store i32 3, i32* %5, align 4
  br label %32

32:                                               ; preds = %57, %1
  %33 = load i32, i32* %5, align 4
  %34 = load i32, i32* %6, align 4
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %36, label %60

36:                                               ; preds = %32
  %37 = load i32**, i32*** %3, align 8
  %38 = load i32, i32* %5, align 4
  %39 = sub nsw i32 %38, 1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32*, i32** %37, i64 %40
  %42 = load i32**, i32*** %3, align 8
  %43 = load i32, i32* %5, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i32*, i32** %42, i64 %44
  %46 = call i32 (i32**, i32**, ...) bitcast (i32 (i32**, i32**)* @d1_order to i32 (i32**, i32**, ...)*)(i32** %41, i32** %45)
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %56

48:                                               ; preds = %36
  %49 = load i32**, i32*** %3, align 8
  %50 = load i32, i32* %5, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32*, i32** %49, i64 %51
  %53 = load i32*, i32** %52, align 8
  %54 = load i32**, i32*** %4, align 8
  %55 = getelementptr inbounds i32*, i32** %54, i32 1
  store i32** %55, i32*** %4, align 8
  store i32* %53, i32** %54, align 8
  br label %56

56:                                               ; preds = %48, %36
  br label %57

57:                                               ; preds = %56
  %58 = load i32, i32* %5, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %5, align 4
  br label %32

60:                                               ; preds = %32
  %61 = load i32**, i32*** %4, align 8
  %62 = getelementptr inbounds i32*, i32** %61, i32 1
  store i32** %62, i32*** %4, align 8
  store i32* null, i32** %61, align 8
  %63 = load i32**, i32*** %4, align 8
  %64 = bitcast i32** %63 to i32*
  %65 = load i32**, i32*** %4, align 8
  %66 = getelementptr inbounds i32*, i32** %65, i64 1
  store i32* %64, i32** %66, align 8
  %67 = load i32, i32* %2, align 4
  ret i32 %67
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_col_struct* @sm_col_alloc() #0 {
  %1 = alloca %struct.sm_col_struct*, align 8
  %2 = call noalias i8* @malloc(i64 56) #7
  %3 = bitcast i8* %2 to %struct.sm_col_struct*
  store %struct.sm_col_struct* %3, %struct.sm_col_struct** %1, align 8
  %4 = load %struct.sm_col_struct*, %struct.sm_col_struct** %1, align 8
  %5 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %4, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = load %struct.sm_col_struct*, %struct.sm_col_struct** %1, align 8
  %7 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %6, i32 0, i32 1
  store i32 0, i32* %7, align 4
  %8 = load %struct.sm_col_struct*, %struct.sm_col_struct** %1, align 8
  %9 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %8, i32 0, i32 4
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %9, align 8
  %10 = load %struct.sm_col_struct*, %struct.sm_col_struct** %1, align 8
  %11 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %10, i32 0, i32 3
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %11, align 8
  %12 = load %struct.sm_col_struct*, %struct.sm_col_struct** %1, align 8
  %13 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %12, i32 0, i32 6
  store %struct.sm_col_struct* null, %struct.sm_col_struct** %13, align 8
  %14 = load %struct.sm_col_struct*, %struct.sm_col_struct** %1, align 8
  %15 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %14, i32 0, i32 5
  store %struct.sm_col_struct* null, %struct.sm_col_struct** %15, align 8
  %16 = load %struct.sm_col_struct*, %struct.sm_col_struct** %1, align 8
  %17 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %16, i32 0, i32 2
  store i32 0, i32* %17, align 8
  %18 = load %struct.sm_col_struct*, %struct.sm_col_struct** %1, align 8
  %19 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %18, i32 0, i32 7
  store i8* null, i8** %19, align 8
  %20 = load %struct.sm_col_struct*, %struct.sm_col_struct** %1, align 8
  ret %struct.sm_col_struct* %20
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_col_free(%struct.sm_col_struct* %0) #0 {
  %2 = alloca %struct.sm_col_struct*, align 8
  %3 = alloca %struct.sm_element_struct*, align 8
  %4 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_col_struct* %0, %struct.sm_col_struct** %2, align 8
  %5 = load %struct.sm_col_struct*, %struct.sm_col_struct** %2, align 8
  %6 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %5, i32 0, i32 3
  %7 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  store %struct.sm_element_struct* %7, %struct.sm_element_struct** %3, align 8
  br label %8

8:                                                ; preds = %21, %1
  %9 = load %struct.sm_element_struct*, %struct.sm_element_struct** %3, align 8
  %10 = icmp ne %struct.sm_element_struct* %9, null
  br i1 %10, label %11, label %23

11:                                               ; preds = %8
  %12 = load %struct.sm_element_struct*, %struct.sm_element_struct** %3, align 8
  %13 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %12, i32 0, i32 2
  %14 = load %struct.sm_element_struct*, %struct.sm_element_struct** %13, align 8
  store %struct.sm_element_struct* %14, %struct.sm_element_struct** %4, align 8
  %15 = load %struct.sm_element_struct*, %struct.sm_element_struct** %3, align 8
  %16 = icmp ne %struct.sm_element_struct* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = load %struct.sm_element_struct*, %struct.sm_element_struct** %3, align 8
  %19 = bitcast %struct.sm_element_struct* %18 to i8*
  call void @free(i8* %19) #7
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %3, align 8
  br label %20

20:                                               ; preds = %17, %11
  br label %21

21:                                               ; preds = %20
  %22 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  store %struct.sm_element_struct* %22, %struct.sm_element_struct** %3, align 8
  br label %8

23:                                               ; preds = %8
  %24 = load %struct.sm_col_struct*, %struct.sm_col_struct** %2, align 8
  %25 = icmp ne %struct.sm_col_struct* %24, null
  br i1 %25, label %26, label %29

26:                                               ; preds = %23
  %27 = load %struct.sm_col_struct*, %struct.sm_col_struct** %2, align 8
  %28 = bitcast %struct.sm_col_struct* %27 to i8*
  call void @free(i8* %28) #7
  store %struct.sm_col_struct* null, %struct.sm_col_struct** %2, align 8
  br label %29

29:                                               ; preds = %26, %23
  ret void
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_col_struct* @sm_col_dup(%struct.sm_col_struct* %0) #0 {
  %2 = alloca %struct.sm_col_struct*, align 8
  %3 = alloca %struct.sm_col_struct*, align 8
  %4 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_col_struct* %0, %struct.sm_col_struct** %2, align 8
  %5 = call %struct.sm_col_struct* @sm_col_alloc()
  store %struct.sm_col_struct* %5, %struct.sm_col_struct** %3, align 8
  %6 = load %struct.sm_col_struct*, %struct.sm_col_struct** %2, align 8
  %7 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %6, i32 0, i32 3
  %8 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  store %struct.sm_element_struct* %8, %struct.sm_element_struct** %4, align 8
  br label %9

9:                                                ; preds = %18, %1
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %11 = icmp ne %struct.sm_element_struct* %10, null
  br i1 %11, label %12, label %22

12:                                               ; preds = %9
  %13 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %14 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %15 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = call %struct.sm_element_struct* @sm_col_insert(%struct.sm_col_struct* %13, i32 %16)
  br label %18

18:                                               ; preds = %12
  %19 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %20 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %19, i32 0, i32 2
  %21 = load %struct.sm_element_struct*, %struct.sm_element_struct** %20, align 8
  store %struct.sm_element_struct* %21, %struct.sm_element_struct** %4, align 8
  br label %9

22:                                               ; preds = %9
  %23 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  ret %struct.sm_col_struct* %23
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_element_struct* @sm_col_insert(%struct.sm_col_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.sm_col_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.sm_element_struct*, align 8
  %6 = alloca %struct.sm_element_struct*, align 8
  %7 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_col_struct* %0, %struct.sm_col_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = call noalias i8* @malloc(i64 48) #7
  %9 = bitcast i8* %8 to %struct.sm_element_struct*
  store %struct.sm_element_struct* %9, %struct.sm_element_struct** %6, align 8
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %11 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %10, i32 0, i32 6
  store i8* null, i8** %11, align 8
  %12 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  store %struct.sm_element_struct* %12, %struct.sm_element_struct** %5, align 8
  %13 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %14 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %13, i32 0, i32 4
  %15 = load %struct.sm_element_struct*, %struct.sm_element_struct** %14, align 8
  %16 = icmp eq %struct.sm_element_struct* %15, null
  br i1 %16, label %17, label %35

17:                                               ; preds = %2
  %18 = load i32, i32* %4, align 4
  %19 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %20 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %19, i32 0, i32 0
  store i32 %18, i32* %20, align 8
  %21 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %22 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %23 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %22, i32 0, i32 3
  store %struct.sm_element_struct* %21, %struct.sm_element_struct** %23, align 8
  %24 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %25 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %26 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %25, i32 0, i32 4
  store %struct.sm_element_struct* %24, %struct.sm_element_struct** %26, align 8
  %27 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %28 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %27, i32 0, i32 2
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %28, align 8
  %29 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %30 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %29, i32 0, i32 3
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %30, align 8
  %31 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %32 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %31, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %32, align 4
  br label %150

35:                                               ; preds = %2
  %36 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %37 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %36, i32 0, i32 4
  %38 = load %struct.sm_element_struct*, %struct.sm_element_struct** %37, align 8
  %39 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %38, i32 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = load i32, i32* %4, align 4
  %42 = icmp slt i32 %40, %41
  br i1 %42, label %43, label %66

43:                                               ; preds = %35
  %44 = load i32, i32* %4, align 4
  %45 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %46 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %45, i32 0, i32 0
  store i32 %44, i32* %46, align 8
  %47 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %48 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %49 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %48, i32 0, i32 4
  %50 = load %struct.sm_element_struct*, %struct.sm_element_struct** %49, align 8
  %51 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %50, i32 0, i32 2
  store %struct.sm_element_struct* %47, %struct.sm_element_struct** %51, align 8
  %52 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %53 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %52, i32 0, i32 4
  %54 = load %struct.sm_element_struct*, %struct.sm_element_struct** %53, align 8
  %55 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %56 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %55, i32 0, i32 3
  store %struct.sm_element_struct* %54, %struct.sm_element_struct** %56, align 8
  %57 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %58 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %59 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %58, i32 0, i32 4
  store %struct.sm_element_struct* %57, %struct.sm_element_struct** %59, align 8
  %60 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %61 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %60, i32 0, i32 2
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %61, align 8
  %62 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %63 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %62, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %63, align 4
  br label %149

66:                                               ; preds = %35
  %67 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %68 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %67, i32 0, i32 3
  %69 = load %struct.sm_element_struct*, %struct.sm_element_struct** %68, align 8
  %70 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %69, i32 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = load i32, i32* %4, align 4
  %73 = icmp sgt i32 %71, %72
  br i1 %73, label %74, label %97

74:                                               ; preds = %66
  %75 = load i32, i32* %4, align 4
  %76 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %77 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %76, i32 0, i32 0
  store i32 %75, i32* %77, align 8
  %78 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %79 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %80 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %79, i32 0, i32 3
  %81 = load %struct.sm_element_struct*, %struct.sm_element_struct** %80, align 8
  %82 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %81, i32 0, i32 3
  store %struct.sm_element_struct* %78, %struct.sm_element_struct** %82, align 8
  %83 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %84 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %83, i32 0, i32 3
  %85 = load %struct.sm_element_struct*, %struct.sm_element_struct** %84, align 8
  %86 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %87 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %86, i32 0, i32 2
  store %struct.sm_element_struct* %85, %struct.sm_element_struct** %87, align 8
  %88 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %89 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %90 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %89, i32 0, i32 3
  store %struct.sm_element_struct* %88, %struct.sm_element_struct** %90, align 8
  %91 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %92 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %91, i32 0, i32 3
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %92, align 8
  %93 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %94 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %94, align 4
  br label %148

97:                                               ; preds = %66
  %98 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %99 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %98, i32 0, i32 3
  %100 = load %struct.sm_element_struct*, %struct.sm_element_struct** %99, align 8
  store %struct.sm_element_struct* %100, %struct.sm_element_struct** %7, align 8
  br label %101

101:                                              ; preds = %108, %97
  %102 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %103 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %102, i32 0, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = load i32, i32* %4, align 4
  %106 = icmp slt i32 %104, %105
  br i1 %106, label %107, label %112

107:                                              ; preds = %101
  br label %108

108:                                              ; preds = %107
  %109 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %110 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %109, i32 0, i32 2
  %111 = load %struct.sm_element_struct*, %struct.sm_element_struct** %110, align 8
  store %struct.sm_element_struct* %111, %struct.sm_element_struct** %7, align 8
  br label %101

112:                                              ; preds = %101
  %113 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %114 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %113, i32 0, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = load i32, i32* %4, align 4
  %117 = icmp sgt i32 %115, %116
  br i1 %117, label %118, label %145

118:                                              ; preds = %112
  %119 = load i32, i32* %4, align 4
  %120 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %121 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %120, i32 0, i32 0
  store i32 %119, i32* %121, align 8
  %122 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %123 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %122, i32 0, i32 3
  %124 = load %struct.sm_element_struct*, %struct.sm_element_struct** %123, align 8
  store %struct.sm_element_struct* %124, %struct.sm_element_struct** %7, align 8
  %125 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %126 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %127 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %126, i32 0, i32 2
  %128 = load %struct.sm_element_struct*, %struct.sm_element_struct** %127, align 8
  %129 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %128, i32 0, i32 3
  store %struct.sm_element_struct* %125, %struct.sm_element_struct** %129, align 8
  %130 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %131 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %130, i32 0, i32 2
  %132 = load %struct.sm_element_struct*, %struct.sm_element_struct** %131, align 8
  %133 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %134 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %133, i32 0, i32 2
  store %struct.sm_element_struct* %132, %struct.sm_element_struct** %134, align 8
  %135 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %136 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %137 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %136, i32 0, i32 2
  store %struct.sm_element_struct* %135, %struct.sm_element_struct** %137, align 8
  %138 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %139 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %140 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %139, i32 0, i32 3
  store %struct.sm_element_struct* %138, %struct.sm_element_struct** %140, align 8
  %141 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %142 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %141, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %142, align 4
  br label %147

145:                                              ; preds = %112
  %146 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  store %struct.sm_element_struct* %146, %struct.sm_element_struct** %5, align 8
  br label %147

147:                                              ; preds = %145, %118
  br label %148

148:                                              ; preds = %147, %74
  br label %149

149:                                              ; preds = %148, %43
  br label %150

150:                                              ; preds = %149, %17
  %151 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %152 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %153 = icmp ne %struct.sm_element_struct* %151, %152
  br i1 %153, label %154, label %161

154:                                              ; preds = %150
  %155 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %156 = icmp ne %struct.sm_element_struct* %155, null
  br i1 %156, label %157, label %160

157:                                              ; preds = %154
  %158 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %159 = bitcast %struct.sm_element_struct* %158 to i8*
  call void @free(i8* %159) #7
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %6, align 8
  br label %160

160:                                              ; preds = %157, %154
  br label %161

161:                                              ; preds = %160, %150
  %162 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  ret %struct.sm_element_struct* %162
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_col_remove(%struct.sm_col_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.sm_col_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_col_struct* %0, %struct.sm_col_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %7 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %6, i32 0, i32 3
  %8 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  store %struct.sm_element_struct* %8, %struct.sm_element_struct** %5, align 8
  br label %9

9:                                                ; preds = %21, %2
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %11 = icmp ne %struct.sm_element_struct* %10, null
  br i1 %11, label %12, label %18

12:                                               ; preds = %9
  %13 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %14 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %13, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = load i32, i32* %4, align 4
  %17 = icmp slt i32 %15, %16
  br label %18

18:                                               ; preds = %12, %9
  %19 = phi i1 [ false, %9 ], [ %17, %12 ]
  br i1 %19, label %20, label %25

20:                                               ; preds = %18
  br label %21

21:                                               ; preds = %20
  %22 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %23 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %22, i32 0, i32 2
  %24 = load %struct.sm_element_struct*, %struct.sm_element_struct** %23, align 8
  store %struct.sm_element_struct* %24, %struct.sm_element_struct** %5, align 8
  br label %9

25:                                               ; preds = %18
  %26 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %27 = icmp ne %struct.sm_element_struct* %26, null
  br i1 %27, label %28, label %83

28:                                               ; preds = %25
  %29 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %30 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %29, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = load i32, i32* %4, align 4
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %34, label %83

34:                                               ; preds = %28
  %35 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %36 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %35, i32 0, i32 3
  %37 = load %struct.sm_element_struct*, %struct.sm_element_struct** %36, align 8
  %38 = icmp eq %struct.sm_element_struct* %37, null
  br i1 %38, label %39, label %45

39:                                               ; preds = %34
  %40 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %41 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %40, i32 0, i32 2
  %42 = load %struct.sm_element_struct*, %struct.sm_element_struct** %41, align 8
  %43 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %44 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %43, i32 0, i32 3
  store %struct.sm_element_struct* %42, %struct.sm_element_struct** %44, align 8
  br label %53

45:                                               ; preds = %34
  %46 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %47 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %46, i32 0, i32 2
  %48 = load %struct.sm_element_struct*, %struct.sm_element_struct** %47, align 8
  %49 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %50 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %49, i32 0, i32 3
  %51 = load %struct.sm_element_struct*, %struct.sm_element_struct** %50, align 8
  %52 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %51, i32 0, i32 2
  store %struct.sm_element_struct* %48, %struct.sm_element_struct** %52, align 8
  br label %53

53:                                               ; preds = %45, %39
  %54 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %55 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %54, i32 0, i32 2
  %56 = load %struct.sm_element_struct*, %struct.sm_element_struct** %55, align 8
  %57 = icmp eq %struct.sm_element_struct* %56, null
  br i1 %57, label %58, label %64

58:                                               ; preds = %53
  %59 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %60 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %59, i32 0, i32 3
  %61 = load %struct.sm_element_struct*, %struct.sm_element_struct** %60, align 8
  %62 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %63 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %62, i32 0, i32 4
  store %struct.sm_element_struct* %61, %struct.sm_element_struct** %63, align 8
  br label %72

64:                                               ; preds = %53
  %65 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %66 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %65, i32 0, i32 3
  %67 = load %struct.sm_element_struct*, %struct.sm_element_struct** %66, align 8
  %68 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %69 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %68, i32 0, i32 2
  %70 = load %struct.sm_element_struct*, %struct.sm_element_struct** %69, align 8
  %71 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %70, i32 0, i32 3
  store %struct.sm_element_struct* %67, %struct.sm_element_struct** %71, align 8
  br label %72

72:                                               ; preds = %64, %58
  %73 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %74 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %73, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = add nsw i32 %75, -1
  store i32 %76, i32* %74, align 4
  %77 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %78 = icmp ne %struct.sm_element_struct* %77, null
  br i1 %78, label %79, label %82

79:                                               ; preds = %72
  %80 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %81 = bitcast %struct.sm_element_struct* %80 to i8*
  call void @free(i8* %81) #7
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %5, align 8
  br label %82

82:                                               ; preds = %79, %72
  br label %83

83:                                               ; preds = %82, %28, %25
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_element_struct* @sm_col_find(%struct.sm_col_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.sm_element_struct*, align 8
  %4 = alloca %struct.sm_col_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_col_struct* %0, %struct.sm_col_struct** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = load %struct.sm_col_struct*, %struct.sm_col_struct** %4, align 8
  %8 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %7, i32 0, i32 3
  %9 = load %struct.sm_element_struct*, %struct.sm_element_struct** %8, align 8
  store %struct.sm_element_struct* %9, %struct.sm_element_struct** %6, align 8
  br label %10

10:                                               ; preds = %22, %2
  %11 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %12 = icmp ne %struct.sm_element_struct* %11, null
  br i1 %12, label %13, label %19

13:                                               ; preds = %10
  %14 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %15 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = load i32, i32* %5, align 4
  %18 = icmp slt i32 %16, %17
  br label %19

19:                                               ; preds = %13, %10
  %20 = phi i1 [ false, %10 ], [ %18, %13 ]
  br i1 %20, label %21, label %26

21:                                               ; preds = %19
  br label %22

22:                                               ; preds = %21
  %23 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %24 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %23, i32 0, i32 2
  %25 = load %struct.sm_element_struct*, %struct.sm_element_struct** %24, align 8
  store %struct.sm_element_struct* %25, %struct.sm_element_struct** %6, align 8
  br label %10

26:                                               ; preds = %19
  %27 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %28 = icmp ne %struct.sm_element_struct* %27, null
  br i1 %28, label %29, label %37

29:                                               ; preds = %26
  %30 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %31 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = load i32, i32* %5, align 4
  %34 = icmp eq i32 %32, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  store %struct.sm_element_struct* %36, %struct.sm_element_struct** %3, align 8
  br label %38

37:                                               ; preds = %29, %26
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %3, align 8
  br label %38

38:                                               ; preds = %37, %35
  %39 = load %struct.sm_element_struct*, %struct.sm_element_struct** %3, align 8
  ret %struct.sm_element_struct* %39
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sm_col_contains(%struct.sm_col_struct* %0, %struct.sm_col_struct* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.sm_col_struct*, align 8
  %5 = alloca %struct.sm_col_struct*, align 8
  %6 = alloca %struct.sm_element_struct*, align 8
  %7 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_col_struct* %0, %struct.sm_col_struct** %4, align 8
  store %struct.sm_col_struct* %1, %struct.sm_col_struct** %5, align 8
  %8 = load %struct.sm_col_struct*, %struct.sm_col_struct** %4, align 8
  %9 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %8, i32 0, i32 3
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  store %struct.sm_element_struct* %10, %struct.sm_element_struct** %6, align 8
  %11 = load %struct.sm_col_struct*, %struct.sm_col_struct** %5, align 8
  %12 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %11, i32 0, i32 3
  %13 = load %struct.sm_element_struct*, %struct.sm_element_struct** %12, align 8
  store %struct.sm_element_struct* %13, %struct.sm_element_struct** %7, align 8
  br label %14

14:                                               ; preds = %49, %2
  %15 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %16 = icmp ne %struct.sm_element_struct* %15, null
  br i1 %16, label %17, label %50

17:                                               ; preds = %14
  %18 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %19 = icmp eq %struct.sm_element_struct* %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %17
  %21 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %22 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %25 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %23, %26
  br i1 %27, label %28, label %29

28:                                               ; preds = %20, %17
  store i32 0, i32* %3, align 4
  br label %51

29:                                               ; preds = %20
  %30 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %31 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %34 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %32, %35
  br i1 %36, label %37, label %44

37:                                               ; preds = %29
  %38 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %39 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %38, i32 0, i32 2
  %40 = load %struct.sm_element_struct*, %struct.sm_element_struct** %39, align 8
  store %struct.sm_element_struct* %40, %struct.sm_element_struct** %6, align 8
  %41 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %42 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %41, i32 0, i32 2
  %43 = load %struct.sm_element_struct*, %struct.sm_element_struct** %42, align 8
  store %struct.sm_element_struct* %43, %struct.sm_element_struct** %7, align 8
  br label %48

44:                                               ; preds = %29
  %45 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %46 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %45, i32 0, i32 2
  %47 = load %struct.sm_element_struct*, %struct.sm_element_struct** %46, align 8
  store %struct.sm_element_struct* %47, %struct.sm_element_struct** %7, align 8
  br label %48

48:                                               ; preds = %44, %37
  br label %49

49:                                               ; preds = %48
  br label %14

50:                                               ; preds = %14
  store i32 1, i32* %3, align 4
  br label %51

51:                                               ; preds = %50, %28
  %52 = load i32, i32* %3, align 4
  ret i32 %52
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sm_col_intersects(%struct.sm_col_struct* %0, %struct.sm_col_struct* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.sm_col_struct*, align 8
  %5 = alloca %struct.sm_col_struct*, align 8
  %6 = alloca %struct.sm_element_struct*, align 8
  %7 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_col_struct* %0, %struct.sm_col_struct** %4, align 8
  store %struct.sm_col_struct* %1, %struct.sm_col_struct** %5, align 8
  %8 = load %struct.sm_col_struct*, %struct.sm_col_struct** %4, align 8
  %9 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %8, i32 0, i32 3
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  store %struct.sm_element_struct* %10, %struct.sm_element_struct** %6, align 8
  %11 = load %struct.sm_col_struct*, %struct.sm_col_struct** %5, align 8
  %12 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %11, i32 0, i32 3
  %13 = load %struct.sm_element_struct*, %struct.sm_element_struct** %12, align 8
  store %struct.sm_element_struct* %13, %struct.sm_element_struct** %7, align 8
  %14 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %15 = icmp eq %struct.sm_element_struct* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %18 = icmp eq %struct.sm_element_struct* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %16, %2
  store i32 0, i32* %3, align 4
  br label %54

20:                                               ; preds = %16
  br label %21

21:                                               ; preds = %53, %20
  %22 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %23 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %26 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp slt i32 %24, %27
  br i1 %28, label %29, label %36

29:                                               ; preds = %21
  %30 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %31 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %30, i32 0, i32 2
  %32 = load %struct.sm_element_struct*, %struct.sm_element_struct** %31, align 8
  store %struct.sm_element_struct* %32, %struct.sm_element_struct** %6, align 8
  %33 = icmp eq %struct.sm_element_struct* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i32 0, i32* %3, align 4
  br label %54

35:                                               ; preds = %29
  br label %53

36:                                               ; preds = %21
  %37 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %38 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %41 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %40, i32 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = icmp sgt i32 %39, %42
  br i1 %43, label %44, label %51

44:                                               ; preds = %36
  %45 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %46 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %45, i32 0, i32 2
  %47 = load %struct.sm_element_struct*, %struct.sm_element_struct** %46, align 8
  store %struct.sm_element_struct* %47, %struct.sm_element_struct** %7, align 8
  %48 = icmp eq %struct.sm_element_struct* %47, null
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  store i32 0, i32* %3, align 4
  br label %54

50:                                               ; preds = %44
  br label %52

51:                                               ; preds = %36
  store i32 1, i32* %3, align 4
  br label %54

52:                                               ; preds = %50
  br label %53

53:                                               ; preds = %52, %35
  br label %21

54:                                               ; preds = %51, %49, %34, %19
  %55 = load i32, i32* %3, align 4
  ret i32 %55
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sm_col_compare(%struct.sm_col_struct* %0, %struct.sm_col_struct* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.sm_col_struct*, align 8
  %5 = alloca %struct.sm_col_struct*, align 8
  %6 = alloca %struct.sm_element_struct*, align 8
  %7 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_col_struct* %0, %struct.sm_col_struct** %4, align 8
  store %struct.sm_col_struct* %1, %struct.sm_col_struct** %5, align 8
  %8 = load %struct.sm_col_struct*, %struct.sm_col_struct** %4, align 8
  %9 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %8, i32 0, i32 3
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  store %struct.sm_element_struct* %10, %struct.sm_element_struct** %6, align 8
  %11 = load %struct.sm_col_struct*, %struct.sm_col_struct** %5, align 8
  %12 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %11, i32 0, i32 3
  %13 = load %struct.sm_element_struct*, %struct.sm_element_struct** %12, align 8
  store %struct.sm_element_struct* %13, %struct.sm_element_struct** %7, align 8
  br label %14

14:                                               ; preds = %38, %2
  %15 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %16 = icmp ne %struct.sm_element_struct* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %14
  %18 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %19 = icmp ne %struct.sm_element_struct* %18, null
  br label %20

20:                                               ; preds = %17, %14
  %21 = phi i1 [ false, %14 ], [ %19, %17 ]
  br i1 %21, label %22, label %45

22:                                               ; preds = %20
  %23 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %24 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %27 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %26, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp ne i32 %25, %28
  br i1 %29, label %30, label %38

30:                                               ; preds = %22
  %31 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %32 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %31, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %35 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = sub nsw i32 %33, %36
  store i32 %37, i32* %3, align 4
  br label %54

38:                                               ; preds = %22
  %39 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %40 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %39, i32 0, i32 2
  %41 = load %struct.sm_element_struct*, %struct.sm_element_struct** %40, align 8
  store %struct.sm_element_struct* %41, %struct.sm_element_struct** %6, align 8
  %42 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %43 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %42, i32 0, i32 2
  %44 = load %struct.sm_element_struct*, %struct.sm_element_struct** %43, align 8
  store %struct.sm_element_struct* %44, %struct.sm_element_struct** %7, align 8
  br label %14

45:                                               ; preds = %20
  %46 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %47 = icmp ne %struct.sm_element_struct* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  store i32 1, i32* %3, align 4
  br label %54

49:                                               ; preds = %45
  %50 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %51 = icmp ne %struct.sm_element_struct* %50, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  store i32 -1, i32* %3, align 4
  br label %54

53:                                               ; preds = %49
  store i32 0, i32* %3, align 4
  br label %54

54:                                               ; preds = %53, %52, %48, %30
  %55 = load i32, i32* %3, align 4
  ret i32 %55
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_col_struct* @sm_col_and(%struct.sm_col_struct* %0, %struct.sm_col_struct* %1) #0 {
  %3 = alloca %struct.sm_col_struct*, align 8
  %4 = alloca %struct.sm_col_struct*, align 8
  %5 = alloca %struct.sm_col_struct*, align 8
  %6 = alloca %struct.sm_element_struct*, align 8
  %7 = alloca %struct.sm_element_struct*, align 8
  %8 = alloca %struct.sm_col_struct*, align 8
  store %struct.sm_col_struct* %0, %struct.sm_col_struct** %4, align 8
  store %struct.sm_col_struct* %1, %struct.sm_col_struct** %5, align 8
  %9 = call %struct.sm_col_struct* @sm_col_alloc()
  store %struct.sm_col_struct* %9, %struct.sm_col_struct** %8, align 8
  %10 = load %struct.sm_col_struct*, %struct.sm_col_struct** %4, align 8
  %11 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %10, i32 0, i32 3
  %12 = load %struct.sm_element_struct*, %struct.sm_element_struct** %11, align 8
  store %struct.sm_element_struct* %12, %struct.sm_element_struct** %6, align 8
  %13 = load %struct.sm_col_struct*, %struct.sm_col_struct** %5, align 8
  %14 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %13, i32 0, i32 3
  %15 = load %struct.sm_element_struct*, %struct.sm_element_struct** %14, align 8
  store %struct.sm_element_struct* %15, %struct.sm_element_struct** %7, align 8
  %16 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %17 = icmp eq %struct.sm_element_struct* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %2
  %19 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %20 = icmp eq %struct.sm_element_struct* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %18, %2
  %22 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  store %struct.sm_col_struct* %22, %struct.sm_col_struct** %3, align 8
  br label %78

23:                                               ; preds = %18
  br label %24

24:                                               ; preds = %77, %23
  %25 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %26 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %29 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %28, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp slt i32 %27, %30
  br i1 %31, label %32, label %40

32:                                               ; preds = %24
  %33 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %34 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %33, i32 0, i32 2
  %35 = load %struct.sm_element_struct*, %struct.sm_element_struct** %34, align 8
  store %struct.sm_element_struct* %35, %struct.sm_element_struct** %6, align 8
  %36 = icmp eq %struct.sm_element_struct* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %32
  %38 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  store %struct.sm_col_struct* %38, %struct.sm_col_struct** %3, align 8
  br label %78

39:                                               ; preds = %32
  br label %77

40:                                               ; preds = %24
  %41 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %42 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %41, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %45 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %44, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp sgt i32 %43, %46
  br i1 %47, label %48, label %56

48:                                               ; preds = %40
  %49 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %50 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %49, i32 0, i32 2
  %51 = load %struct.sm_element_struct*, %struct.sm_element_struct** %50, align 8
  store %struct.sm_element_struct* %51, %struct.sm_element_struct** %7, align 8
  %52 = icmp eq %struct.sm_element_struct* %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  store %struct.sm_col_struct* %54, %struct.sm_col_struct** %3, align 8
  br label %78

55:                                               ; preds = %48
  br label %76

56:                                               ; preds = %40
  %57 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %58 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %59 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = call %struct.sm_element_struct* @sm_col_insert(%struct.sm_col_struct* %57, i32 %60)
  %62 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %63 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %62, i32 0, i32 2
  %64 = load %struct.sm_element_struct*, %struct.sm_element_struct** %63, align 8
  store %struct.sm_element_struct* %64, %struct.sm_element_struct** %6, align 8
  %65 = icmp eq %struct.sm_element_struct* %64, null
  br i1 %65, label %66, label %68

66:                                               ; preds = %56
  %67 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  store %struct.sm_col_struct* %67, %struct.sm_col_struct** %3, align 8
  br label %78

68:                                               ; preds = %56
  %69 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %70 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %69, i32 0, i32 2
  %71 = load %struct.sm_element_struct*, %struct.sm_element_struct** %70, align 8
  store %struct.sm_element_struct* %71, %struct.sm_element_struct** %7, align 8
  %72 = icmp eq %struct.sm_element_struct* %71, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %68
  %74 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  store %struct.sm_col_struct* %74, %struct.sm_col_struct** %3, align 8
  br label %78

75:                                               ; preds = %68
  br label %76

76:                                               ; preds = %75, %55
  br label %77

77:                                               ; preds = %76, %39
  br label %24

78:                                               ; preds = %73, %66, %53, %37, %21
  %79 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  ret %struct.sm_col_struct* %79
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sm_col_hash(%struct.sm_col_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.sm_col_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_col_struct* %0, %struct.sm_col_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %7 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %8 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %7, i32 0, i32 3
  %9 = load %struct.sm_element_struct*, %struct.sm_element_struct** %8, align 8
  store %struct.sm_element_struct* %9, %struct.sm_element_struct** %6, align 8
  br label %10

10:                                               ; preds = %22, %2
  %11 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %12 = icmp ne %struct.sm_element_struct* %11, null
  br i1 %12, label %13, label %26

13:                                               ; preds = %10
  %14 = load i32, i32* %5, align 4
  %15 = mul nsw i32 %14, 17
  %16 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %17 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = add nsw i32 %15, %18
  %20 = load i32, i32* %4, align 4
  %21 = srem i32 %19, %20
  store i32 %21, i32* %5, align 4
  br label %22

22:                                               ; preds = %13
  %23 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %24 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %23, i32 0, i32 2
  %25 = load %struct.sm_element_struct*, %struct.sm_element_struct** %24, align 8
  store %struct.sm_element_struct* %25, %struct.sm_element_struct** %6, align 8
  br label %10

26:                                               ; preds = %10
  %27 = load i32, i32* %5, align 4
  ret i32 %27
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_col_remove_element(%struct.sm_col_struct* %0, %struct.sm_element_struct* %1) #0 {
  %3 = alloca %struct.sm_col_struct*, align 8
  %4 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_col_struct* %0, %struct.sm_col_struct** %3, align 8
  store %struct.sm_element_struct* %1, %struct.sm_element_struct** %4, align 8
  %5 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %6 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %5, i32 0, i32 3
  %7 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %8 = icmp eq %struct.sm_element_struct* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %11 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %10, i32 0, i32 2
  %12 = load %struct.sm_element_struct*, %struct.sm_element_struct** %11, align 8
  %13 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %14 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %13, i32 0, i32 3
  store %struct.sm_element_struct* %12, %struct.sm_element_struct** %14, align 8
  br label %23

15:                                               ; preds = %2
  %16 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %17 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %16, i32 0, i32 2
  %18 = load %struct.sm_element_struct*, %struct.sm_element_struct** %17, align 8
  %19 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %20 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %19, i32 0, i32 3
  %21 = load %struct.sm_element_struct*, %struct.sm_element_struct** %20, align 8
  %22 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %21, i32 0, i32 2
  store %struct.sm_element_struct* %18, %struct.sm_element_struct** %22, align 8
  br label %23

23:                                               ; preds = %15, %9
  %24 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %25 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %24, i32 0, i32 2
  %26 = load %struct.sm_element_struct*, %struct.sm_element_struct** %25, align 8
  %27 = icmp eq %struct.sm_element_struct* %26, null
  br i1 %27, label %28, label %34

28:                                               ; preds = %23
  %29 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %30 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %29, i32 0, i32 3
  %31 = load %struct.sm_element_struct*, %struct.sm_element_struct** %30, align 8
  %32 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %33 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %32, i32 0, i32 4
  store %struct.sm_element_struct* %31, %struct.sm_element_struct** %33, align 8
  br label %42

34:                                               ; preds = %23
  %35 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %36 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %35, i32 0, i32 3
  %37 = load %struct.sm_element_struct*, %struct.sm_element_struct** %36, align 8
  %38 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %39 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %38, i32 0, i32 2
  %40 = load %struct.sm_element_struct*, %struct.sm_element_struct** %39, align 8
  %41 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %40, i32 0, i32 3
  store %struct.sm_element_struct* %37, %struct.sm_element_struct** %41, align 8
  br label %42

42:                                               ; preds = %34, %28
  %43 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  %44 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = add nsw i32 %45, -1
  store i32 %46, i32* %44, align 4
  %47 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %48 = icmp ne %struct.sm_element_struct* %47, null
  br i1 %48, label %49, label %52

49:                                               ; preds = %42
  %50 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %51 = bitcast %struct.sm_element_struct* %50 to i8*
  call void @free(i8* %51) #7
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %4, align 8
  br label %52

52:                                               ; preds = %49, %42
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_col_print(%struct._IO_FILE* %0, %struct.sm_col_struct* %1) #0 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca %struct.sm_col_struct*, align 8
  %5 = alloca %struct.sm_element_struct*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store %struct.sm_col_struct* %1, %struct.sm_col_struct** %4, align 8
  %6 = load %struct.sm_col_struct*, %struct.sm_col_struct** %4, align 8
  %7 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %6, i32 0, i32 3
  %8 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  store %struct.sm_element_struct* %8, %struct.sm_element_struct** %5, align 8
  br label %9

9:                                                ; preds = %18, %2
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %11 = icmp ne %struct.sm_element_struct* %10, null
  br i1 %11, label %12, label %22

12:                                               ; preds = %9
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %14 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %15 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %16)
  br label %18

18:                                               ; preds = %12
  %19 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %20 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %19, i32 0, i32 2
  %21 = load %struct.sm_element_struct*, %struct.sm_element_struct** %20, align 8
  store %struct.sm_element_struct* %21, %struct.sm_element_struct** %5, align 8
  br label %9

22:                                               ; preds = %9
  ret void
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @complement(i32** %0) #0 {
  %2 = alloca i32**, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca i32, align 4
  store i32** %0, i32*** %2, align 8
  %10 = load i32, i32* @debug, align 4
  %11 = and i32 %10, 1
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = load i32**, i32*** %2, align 8
  %15 = load i32, i32* @complement.compl_level, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* @complement.compl_level, align 4
  call void (i32**, i8*, i32, ...) bitcast (void (i32**, i8*, i32)* @debug_print to void (i32**, i8*, i32, ...)*)(i32** %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 %15)
  br label %17

17:                                               ; preds = %13, %1
  %18 = load i32**, i32*** %2, align 8
  %19 = call i32 @compl_special_cases(i32** %18, %struct.set_family** %6)
  %20 = icmp eq i32 %19, 2
  br i1 %20, label %21, label %139

21:                                               ; preds = %17
  %22 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %23 = icmp sle i32 %22, 32
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  br label %31

25:                                               ; preds = %21
  %26 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %27 = sub nsw i32 %26, 1
  %28 = ashr i32 %27, 5
  %29 = add nsw i32 %28, 1
  %30 = add nsw i32 %29, 1
  br label %31

31:                                               ; preds = %25, %24
  %32 = phi i32 [ 2, %24 ], [ %30, %25 ]
  %33 = sext i32 %32 to i64
  %34 = mul i64 4, %33
  %35 = call noalias i8* @malloc(i64 %34) #7
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %38 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %36, i32 %37)
  store i32* %38, i32** %3, align 8
  %39 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %40 = icmp sle i32 %39, 32
  br i1 %40, label %41, label %42

41:                                               ; preds = %31
  br label %48

42:                                               ; preds = %31
  %43 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %44 = sub nsw i32 %43, 1
  %45 = ashr i32 %44, 5
  %46 = add nsw i32 %45, 1
  %47 = add nsw i32 %46, 1
  br label %48

48:                                               ; preds = %42, %41
  %49 = phi i32 [ 2, %41 ], [ %47, %42 ]
  %50 = sext i32 %49 to i64
  %51 = mul i64 4, %50
  %52 = call noalias i8* @malloc(i64 %51) #7
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %55 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %53, i32 %54)
  store i32* %55, i32** %4, align 8
  %56 = load i32**, i32*** %2, align 8
  %57 = load i32*, i32** %3, align 8
  %58 = load i32*, i32** %4, align 8
  %59 = call i32 (i32**, i32*, i32*, i32, ...) bitcast (i32 (i32**, i32*, i32*, i32)* @binate_split_select to i32 (i32**, i32*, i32*, i32, ...)*)(i32** %56, i32* %57, i32* %58, i32 1)
  store i32 %59, i32* %5, align 4
  %60 = load i32**, i32*** %2, align 8
  %61 = load i32*, i32** %3, align 8
  %62 = load i32, i32* %5, align 4
  %63 = call i32** (i32**, i32*, i32, ...) bitcast (i32** (i32**, i32*, i32)* @scofactor to i32** (i32**, i32*, i32, ...)*)(i32** %60, i32* %61, i32 %62)
  %64 = call %struct.set_family* @complement(i32** %63)
  store %struct.set_family* %64, %struct.set_family** %7, align 8
  %65 = load i32**, i32*** %2, align 8
  %66 = load i32*, i32** %4, align 8
  %67 = load i32, i32* %5, align 4
  %68 = call i32** (i32**, i32*, i32, ...) bitcast (i32** (i32**, i32*, i32)* @scofactor to i32** (i32**, i32*, i32, ...)*)(i32** %65, i32* %66, i32 %67)
  %69 = call %struct.set_family* @complement(i32** %68)
  store %struct.set_family* %69, %struct.set_family** %8, align 8
  %70 = load %struct.set_family*, %struct.set_family** %8, align 8
  %71 = getelementptr inbounds %struct.set_family, %struct.set_family* %70, i32 0, i32 3
  %72 = load i32, i32* %71, align 4
  %73 = load %struct.set_family*, %struct.set_family** %7, align 8
  %74 = getelementptr inbounds %struct.set_family, %struct.set_family* %73, i32 0, i32 3
  %75 = load i32, i32* %74, align 4
  %76 = mul nsw i32 %72, %75
  %77 = sext i32 %76 to i64
  %78 = load %struct.set_family*, %struct.set_family** %8, align 8
  %79 = getelementptr inbounds %struct.set_family, %struct.set_family* %78, i32 0, i32 3
  %80 = load i32, i32* %79, align 4
  %81 = load %struct.set_family*, %struct.set_family** %7, align 8
  %82 = getelementptr inbounds %struct.set_family, %struct.set_family* %81, i32 0, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = add nsw i32 %80, %83
  %85 = sext i32 %84 to i64
  %86 = load i32**, i32*** %2, align 8
  %87 = getelementptr inbounds i32*, i32** %86, i64 1
  %88 = load i32*, i32** %87, align 8
  %89 = bitcast i32* %88 to i32**
  %90 = load i32**, i32*** %2, align 8
  %91 = ptrtoint i32** %89 to i64
  %92 = ptrtoint i32** %90 to i64
  %93 = sub i64 %91, %92
  %94 = sdiv exact i64 %93, 8
  %95 = sub nsw i64 %94, 3
  %96 = mul nsw i64 %85, %95
  %97 = icmp sgt i64 %77, %96
  br i1 %97, label %98, label %99

98:                                               ; preds = %48
  store i32 1, i32* %9, align 4
  br label %100

99:                                               ; preds = %48
  store i32 0, i32* %9, align 4
  br label %100

100:                                              ; preds = %99, %98
  %101 = load i32**, i32*** %2, align 8
  %102 = load %struct.set_family*, %struct.set_family** %7, align 8
  %103 = load %struct.set_family*, %struct.set_family** %8, align 8
  %104 = load i32*, i32** %3, align 8
  %105 = load i32*, i32** %4, align 8
  %106 = load i32, i32* %5, align 4
  %107 = load i32, i32* %9, align 4
  %108 = call %struct.set_family* @compl_merge(i32** %101, %struct.set_family* %102, %struct.set_family* %103, i32* %104, i32* %105, i32 %106, i32 %107)
  store %struct.set_family* %108, %struct.set_family** %6, align 8
  %109 = load i32*, i32** %3, align 8
  %110 = icmp ne i32* %109, null
  br i1 %110, label %111, label %114

111:                                              ; preds = %100
  %112 = load i32*, i32** %3, align 8
  %113 = bitcast i32* %112 to i8*
  call void @free(i8* %113) #7
  store i32* null, i32** %3, align 8
  br label %114

114:                                              ; preds = %111, %100
  %115 = load i32*, i32** %4, align 8
  %116 = icmp ne i32* %115, null
  br i1 %116, label %117, label %120

117:                                              ; preds = %114
  %118 = load i32*, i32** %4, align 8
  %119 = bitcast i32* %118 to i8*
  call void @free(i8* %119) #7
  store i32* null, i32** %4, align 8
  br label %120

120:                                              ; preds = %117, %114
  %121 = load i32**, i32*** %2, align 8
  %122 = getelementptr inbounds i32*, i32** %121, i64 0
  %123 = load i32*, i32** %122, align 8
  %124 = icmp ne i32* %123, null
  br i1 %124, label %125, label %132

125:                                              ; preds = %120
  %126 = load i32**, i32*** %2, align 8
  %127 = getelementptr inbounds i32*, i32** %126, i64 0
  %128 = load i32*, i32** %127, align 8
  %129 = bitcast i32* %128 to i8*
  call void @free(i8* %129) #7
  %130 = load i32**, i32*** %2, align 8
  %131 = getelementptr inbounds i32*, i32** %130, i64 0
  store i32* null, i32** %131, align 8
  br label %132

132:                                              ; preds = %125, %120
  %133 = load i32**, i32*** %2, align 8
  %134 = icmp ne i32** %133, null
  br i1 %134, label %135, label %138

135:                                              ; preds = %132
  %136 = load i32**, i32*** %2, align 8
  %137 = bitcast i32** %136 to i8*
  call void @free(i8* %137) #7
  store i32** null, i32*** %2, align 8
  br label %138

138:                                              ; preds = %135, %132
  br label %139

139:                                              ; preds = %138, %17
  %140 = load i32, i32* @debug, align 4
  %141 = and i32 %140, 1
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %143, label %147

143:                                              ; preds = %139
  %144 = load %struct.set_family*, %struct.set_family** %6, align 8
  %145 = load i32, i32* @complement.compl_level, align 4
  %146 = add nsw i32 %145, -1
  store i32 %146, i32* @complement.compl_level, align 4
  call void (%struct.set_family*, i8*, i32, ...) bitcast (void (%struct.set_family*, i8*, i32)* @debug1_print to void (%struct.set_family*, i8*, i32, ...)*)(%struct.set_family* %144, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.4, i64 0, i64 0), i32 %146)
  br label %147

147:                                              ; preds = %143, %139
  %148 = load %struct.set_family*, %struct.set_family** %6, align 8
  ret %struct.set_family* %148
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @compl_special_cases(i32** %0, %struct.set_family** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32**, align 8
  %5 = alloca %struct.set_family**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %struct.set_family*, align 8
  %11 = alloca %struct.set_family*, align 8
  %12 = alloca i32, align 4
  store i32** %0, i32*** %4, align 8
  store %struct.set_family** %1, %struct.set_family*** %5, align 8
  %13 = load i32**, i32*** %4, align 8
  %14 = getelementptr inbounds i32*, i32** %13, i64 0
  %15 = load i32*, i32** %14, align 8
  store i32* %15, i32** %9, align 8
  %16 = load i32**, i32*** %4, align 8
  %17 = getelementptr inbounds i32*, i32** %16, i64 2
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %18, null
  br i1 %19, label %20, label %44

20:                                               ; preds = %2
  %21 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %22 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %21)
  %23 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %24 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %22, i32* %23)
  %25 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %24, %struct.set_family** %25, align 8
  %26 = load i32**, i32*** %4, align 8
  %27 = getelementptr inbounds i32*, i32** %26, i64 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp ne i32* %28, null
  br i1 %29, label %30, label %37

30:                                               ; preds = %20
  %31 = load i32**, i32*** %4, align 8
  %32 = getelementptr inbounds i32*, i32** %31, i64 0
  %33 = load i32*, i32** %32, align 8
  %34 = bitcast i32* %33 to i8*
  call void @free(i8* %34) #7
  %35 = load i32**, i32*** %4, align 8
  %36 = getelementptr inbounds i32*, i32** %35, i64 0
  store i32* null, i32** %36, align 8
  br label %37

37:                                               ; preds = %30, %20
  %38 = load i32**, i32*** %4, align 8
  %39 = icmp ne i32** %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = load i32**, i32*** %4, align 8
  %42 = bitcast i32** %41 to i8*
  call void @free(i8* %42) #7
  store i32** null, i32*** %4, align 8
  br label %43

43:                                               ; preds = %40, %37
  store i32 1, i32* %3, align 4
  br label %270

44:                                               ; preds = %2
  %45 = load i32**, i32*** %4, align 8
  %46 = getelementptr inbounds i32*, i32** %45, i64 3
  %47 = load i32*, i32** %46, align 8
  %48 = icmp eq i32* %47, null
  br i1 %48, label %49, label %76

49:                                               ; preds = %44
  %50 = load i32*, i32** %9, align 8
  %51 = load i32*, i32** %9, align 8
  %52 = load i32**, i32*** %4, align 8
  %53 = getelementptr inbounds i32*, i32** %52, i64 2
  %54 = load i32*, i32** %53, align 8
  %55 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %50, i32* %51, i32* %54)
  %56 = call %struct.set_family* @compl_cube(i32* %55)
  %57 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %56, %struct.set_family** %57, align 8
  %58 = load i32**, i32*** %4, align 8
  %59 = getelementptr inbounds i32*, i32** %58, i64 0
  %60 = load i32*, i32** %59, align 8
  %61 = icmp ne i32* %60, null
  br i1 %61, label %62, label %69

62:                                               ; preds = %49
  %63 = load i32**, i32*** %4, align 8
  %64 = getelementptr inbounds i32*, i32** %63, i64 0
  %65 = load i32*, i32** %64, align 8
  %66 = bitcast i32* %65 to i8*
  call void @free(i8* %66) #7
  %67 = load i32**, i32*** %4, align 8
  %68 = getelementptr inbounds i32*, i32** %67, i64 0
  store i32* null, i32** %68, align 8
  br label %69

69:                                               ; preds = %62, %49
  %70 = load i32**, i32*** %4, align 8
  %71 = icmp ne i32** %70, null
  br i1 %71, label %72, label %75

72:                                               ; preds = %69
  %73 = load i32**, i32*** %4, align 8
  %74 = bitcast i32** %73 to i8*
  call void @free(i8* %74) #7
  store i32** null, i32*** %4, align 8
  br label %75

75:                                               ; preds = %72, %69
  store i32 1, i32* %3, align 4
  br label %270

76:                                               ; preds = %44
  %77 = load i32**, i32*** %4, align 8
  %78 = getelementptr inbounds i32*, i32** %77, i64 2
  store i32** %78, i32*** %6, align 8
  br label %79

79:                                               ; preds = %111, %76
  %80 = load i32**, i32*** %6, align 8
  %81 = getelementptr inbounds i32*, i32** %80, i32 1
  store i32** %81, i32*** %6, align 8
  %82 = load i32*, i32** %80, align 8
  store i32* %82, i32** %7, align 8
  %83 = icmp ne i32* %82, null
  br i1 %83, label %84, label %112

84:                                               ; preds = %79
  %85 = load i32*, i32** %7, align 8
  %86 = load i32*, i32** %9, align 8
  %87 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @full_row to i32 (i32*, i32*, ...)*)(i32* %85, i32* %86)
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %111

89:                                               ; preds = %84
  %90 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %91 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 0, i32 %90)
  %92 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %91, %struct.set_family** %92, align 8
  %93 = load i32**, i32*** %4, align 8
  %94 = getelementptr inbounds i32*, i32** %93, i64 0
  %95 = load i32*, i32** %94, align 8
  %96 = icmp ne i32* %95, null
  br i1 %96, label %97, label %104

97:                                               ; preds = %89
  %98 = load i32**, i32*** %4, align 8
  %99 = getelementptr inbounds i32*, i32** %98, i64 0
  %100 = load i32*, i32** %99, align 8
  %101 = bitcast i32* %100 to i8*
  call void @free(i8* %101) #7
  %102 = load i32**, i32*** %4, align 8
  %103 = getelementptr inbounds i32*, i32** %102, i64 0
  store i32* null, i32** %103, align 8
  br label %104

104:                                              ; preds = %97, %89
  %105 = load i32**, i32*** %4, align 8
  %106 = icmp ne i32** %105, null
  br i1 %106, label %107, label %110

107:                                              ; preds = %104
  %108 = load i32**, i32*** %4, align 8
  %109 = bitcast i32** %108 to i8*
  call void @free(i8* %109) #7
  store i32** null, i32*** %4, align 8
  br label %110

110:                                              ; preds = %107, %104
  store i32 1, i32* %3, align 4
  br label %270

111:                                              ; preds = %84
  br label %79

112:                                              ; preds = %79
  %113 = load i32*, i32** %9, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 0
  %115 = load i32, i32* %114, align 4
  %116 = and i32 %115, 1023
  %117 = mul i32 32, %116
  %118 = icmp ule i32 %117, 32
  br i1 %118, label %119, label %120

119:                                              ; preds = %112
  br label %130

120:                                              ; preds = %112
  %121 = load i32*, i32** %9, align 8
  %122 = getelementptr inbounds i32, i32* %121, i64 0
  %123 = load i32, i32* %122, align 4
  %124 = and i32 %123, 1023
  %125 = mul i32 32, %124
  %126 = sub i32 %125, 1
  %127 = lshr i32 %126, 5
  %128 = add i32 %127, 1
  %129 = add i32 %128, 1
  br label %130

130:                                              ; preds = %120, %119
  %131 = phi i32 [ 2, %119 ], [ %129, %120 ]
  %132 = zext i32 %131 to i64
  %133 = mul i64 4, %132
  %134 = call noalias i8* @malloc(i64 %133) #7
  %135 = bitcast i8* %134 to i32*
  %136 = load i32*, i32** %9, align 8
  %137 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %135, i32* %136)
  store i32* %137, i32** %8, align 8
  %138 = load i32**, i32*** %4, align 8
  %139 = getelementptr inbounds i32*, i32** %138, i64 2
  store i32** %139, i32*** %6, align 8
  br label %140

140:                                              ; preds = %179, %130
  %141 = load i32**, i32*** %6, align 8
  %142 = getelementptr inbounds i32*, i32** %141, i32 1
  store i32** %142, i32*** %6, align 8
  %143 = load i32*, i32** %141, align 8
  store i32* %143, i32** %7, align 8
  %144 = icmp ne i32* %143, null
  br i1 %144, label %145, label %180

145:                                              ; preds = %140
  %146 = load i32*, i32** %8, align 8
  %147 = getelementptr inbounds i32, i32* %146, i64 0
  %148 = load i32, i32* %147, align 4
  %149 = and i32 %148, 1023
  store i32 %149, i32* %12, align 4
  %150 = load i32*, i32** %8, align 8
  %151 = getelementptr inbounds i32, i32* %150, i64 0
  %152 = load i32, i32* %151, align 4
  %153 = and i32 %152, -1024
  store i32 %153, i32* %151, align 4
  %154 = load i32, i32* %12, align 4
  %155 = load i32*, i32** %8, align 8
  %156 = getelementptr inbounds i32, i32* %155, i64 0
  %157 = load i32, i32* %156, align 4
  %158 = or i32 %157, %154
  store i32 %158, i32* %156, align 4
  br label %159

159:                                              ; preds = %175, %145
  %160 = load i32*, i32** %8, align 8
  %161 = load i32, i32* %12, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i32, i32* %160, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = load i32*, i32** %7, align 8
  %166 = load i32, i32* %12, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i32, i32* %165, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = or i32 %164, %169
  %171 = load i32*, i32** %8, align 8
  %172 = load i32, i32* %12, align 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i32, i32* %171, i64 %173
  store i32 %170, i32* %174, align 4
  br label %175

175:                                              ; preds = %159
  %176 = load i32, i32* %12, align 4
  %177 = add nsw i32 %176, -1
  store i32 %177, i32* %12, align 4
  %178 = icmp sgt i32 %177, 0
  br i1 %178, label %159, label %179

179:                                              ; preds = %175
  br label %140

180:                                              ; preds = %140
  %181 = load i32*, i32** %8, align 8
  %182 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %183 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_equal to i32 (i32*, i32*, ...)*)(i32* %181, i32* %182)
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %206, label %185

185:                                              ; preds = %180
  %186 = load i32*, i32** %8, align 8
  %187 = call %struct.set_family* @compl_cube(i32* %186)
  store %struct.set_family* %187, %struct.set_family** %11, align 8
  %188 = load i32*, i32** %9, align 8
  %189 = load i32*, i32** %9, align 8
  %190 = load i32*, i32** %8, align 8
  %191 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %192 = load i32*, i32** %8, align 8
  %193 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %190, i32* %191, i32* %192)
  %194 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %188, i32* %189, i32* %193)
  %195 = load i32*, i32** %8, align 8
  %196 = icmp ne i32* %195, null
  br i1 %196, label %197, label %200

197:                                              ; preds = %185
  %198 = load i32*, i32** %8, align 8
  %199 = bitcast i32* %198 to i8*
  call void @free(i8* %199) #7
  store i32* null, i32** %8, align 8
  br label %200

200:                                              ; preds = %197, %185
  %201 = load i32**, i32*** %4, align 8
  %202 = call %struct.set_family* @complement(i32** %201)
  %203 = load %struct.set_family*, %struct.set_family** %11, align 8
  %204 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_append to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %202, %struct.set_family* %203)
  %205 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %204, %struct.set_family** %205, align 8
  store i32 1, i32* %3, align 4
  br label %270

206:                                              ; preds = %180
  %207 = load i32*, i32** %8, align 8
  %208 = icmp ne i32* %207, null
  br i1 %208, label %209, label %212

209:                                              ; preds = %206
  %210 = load i32*, i32** %8, align 8
  %211 = bitcast i32* %210 to i8*
  call void @free(i8* %211) #7
  store i32* null, i32** %8, align 8
  br label %212

212:                                              ; preds = %209, %206
  %213 = load i32**, i32*** %4, align 8
  call void (i32**, ...) bitcast (void (i32**)* @massive_count to void (i32**, ...)*)(i32** %213)
  %214 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 4), align 8
  %215 = icmp eq i32 %214, 1
  br i1 %215, label %216, label %238

216:                                              ; preds = %212
  %217 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %218 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 0, i32 %217)
  %219 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %218, %struct.set_family** %219, align 8
  %220 = load i32**, i32*** %4, align 8
  %221 = getelementptr inbounds i32*, i32** %220, i64 0
  %222 = load i32*, i32** %221, align 8
  %223 = icmp ne i32* %222, null
  br i1 %223, label %224, label %231

224:                                              ; preds = %216
  %225 = load i32**, i32*** %4, align 8
  %226 = getelementptr inbounds i32*, i32** %225, i64 0
  %227 = load i32*, i32** %226, align 8
  %228 = bitcast i32* %227 to i8*
  call void @free(i8* %228) #7
  %229 = load i32**, i32*** %4, align 8
  %230 = getelementptr inbounds i32*, i32** %229, i64 0
  store i32* null, i32** %230, align 8
  br label %231

231:                                              ; preds = %224, %216
  %232 = load i32**, i32*** %4, align 8
  %233 = icmp ne i32** %232, null
  br i1 %233, label %234, label %237

234:                                              ; preds = %231
  %235 = load i32**, i32*** %4, align 8
  %236 = bitcast i32** %235 to i8*
  call void @free(i8* %236) #7
  store i32** null, i32*** %4, align 8
  br label %237

237:                                              ; preds = %234, %231
  store i32 1, i32* %3, align 4
  br label %270

238:                                              ; preds = %212
  %239 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 5), align 4
  %240 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 4), align 8
  %241 = icmp eq i32 %239, %240
  br i1 %241, label %242, label %269

242:                                              ; preds = %238
  %243 = load i32**, i32*** %4, align 8
  %244 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @map_cover_to_unate to %struct.set_family* (i32**, ...)*)(i32** %243)
  store %struct.set_family* %244, %struct.set_family** %10, align 8
  %245 = load i32**, i32*** %4, align 8
  %246 = getelementptr inbounds i32*, i32** %245, i64 0
  %247 = load i32*, i32** %246, align 8
  %248 = icmp ne i32* %247, null
  br i1 %248, label %249, label %256

249:                                              ; preds = %242
  %250 = load i32**, i32*** %4, align 8
  %251 = getelementptr inbounds i32*, i32** %250, i64 0
  %252 = load i32*, i32** %251, align 8
  %253 = bitcast i32* %252 to i8*
  call void @free(i8* %253) #7
  %254 = load i32**, i32*** %4, align 8
  %255 = getelementptr inbounds i32*, i32** %254, i64 0
  store i32* null, i32** %255, align 8
  br label %256

256:                                              ; preds = %249, %242
  %257 = load i32**, i32*** %4, align 8
  %258 = icmp ne i32** %257, null
  br i1 %258, label %259, label %262

259:                                              ; preds = %256
  %260 = load i32**, i32*** %4, align 8
  %261 = bitcast i32** %260 to i8*
  call void @free(i8* %261) #7
  store i32** null, i32*** %4, align 8
  br label %262

262:                                              ; preds = %259, %256
  %263 = load %struct.set_family*, %struct.set_family** %10, align 8
  %264 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @unate_compl to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %263)
  store %struct.set_family* %264, %struct.set_family** %10, align 8
  %265 = load %struct.set_family*, %struct.set_family** %10, align 8
  %266 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @map_unate_to_cover to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %265)
  %267 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %266, %struct.set_family** %267, align 8
  %268 = load %struct.set_family*, %struct.set_family** %10, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %268)
  store i32 1, i32* %3, align 4
  br label %270

269:                                              ; preds = %238
  store i32 2, i32* %3, align 4
  br label %270

270:                                              ; preds = %269, %262, %237, %200, %110, %75, %43
  %271 = load i32, i32* %3, align 4
  ret i32 %271
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.set_family* @compl_merge(i32** %0, %struct.set_family* %1, %struct.set_family* %2, i32* %3, i32* %4, i32 %5, i32 %6) #0 {
  %8 = alloca i32**, align 8
  %9 = alloca %struct.set_family*, align 8
  %10 = alloca %struct.set_family*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca %struct.set_family*, align 8
  %19 = alloca %struct.set_family*, align 8
  %20 = alloca i32**, align 8
  %21 = alloca i32**, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  store i32** %0, i32*** %8, align 8
  store %struct.set_family* %1, %struct.set_family** %9, align 8
  store %struct.set_family* %2, %struct.set_family** %10, align 8
  store i32* %3, i32** %11, align 8
  store i32* %4, i32** %12, align 8
  store i32 %5, i32* %13, align 4
  store i32 %6, i32* %14, align 4
  %26 = load i32, i32* @debug, align 4
  %27 = and i32 %26, 1
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %45

29:                                               ; preds = %7
  %30 = load %struct.set_family*, %struct.set_family** %9, align 8
  %31 = getelementptr inbounds %struct.set_family, %struct.set_family* %30, i32 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = load %struct.set_family*, %struct.set_family** %10, align 8
  %34 = getelementptr inbounds %struct.set_family, %struct.set_family* %33, i32 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 %32, i32 %35)
  %37 = load i32*, i32** %11, align 8
  %38 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %37)
  %39 = load i32*, i32** %12, align 8
  %40 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc2 to i8* (i32*, ...)*)(i32* %39)
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i8* %38, i8* %40)
  %42 = load %struct.set_family*, %struct.set_family** %9, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @cprint to void (%struct.set_family*, ...)*)(%struct.set_family* %42)
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0))
  %44 = load %struct.set_family*, %struct.set_family** %10, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @cprint to void (%struct.set_family*, ...)*)(%struct.set_family* %44)
  br label %45

45:                                               ; preds = %29, %7
  %46 = load %struct.set_family*, %struct.set_family** %9, align 8
  %47 = getelementptr inbounds %struct.set_family, %struct.set_family* %46, i32 0, i32 5
  %48 = load i32*, i32** %47, align 8
  store i32* %48, i32** %15, align 8
  %49 = load i32*, i32** %15, align 8
  %50 = load %struct.set_family*, %struct.set_family** %9, align 8
  %51 = getelementptr inbounds %struct.set_family, %struct.set_family* %50, i32 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = load %struct.set_family*, %struct.set_family** %9, align 8
  %54 = getelementptr inbounds %struct.set_family, %struct.set_family* %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = mul nsw i32 %52, %55
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %49, i64 %57
  store i32* %58, i32** %16, align 8
  br label %59

59:                                               ; preds = %102, %45
  %60 = load i32*, i32** %15, align 8
  %61 = load i32*, i32** %16, align 8
  %62 = icmp ult i32* %60, %61
  br i1 %62, label %63, label %109

63:                                               ; preds = %59
  %64 = load i32*, i32** %15, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 0
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 1023
  store i32 %67, i32* %22, align 4
  %68 = load i32*, i32** %15, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 0
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, -1024
  store i32 %71, i32* %69, align 4
  %72 = load i32, i32* %22, align 4
  %73 = load i32*, i32** %15, align 8
  %74 = getelementptr inbounds i32, i32* %73, i64 0
  %75 = load i32, i32* %74, align 4
  %76 = or i32 %75, %72
  store i32 %76, i32* %74, align 4
  br label %77

77:                                               ; preds = %93, %63
  %78 = load i32*, i32** %15, align 8
  %79 = load i32, i32* %22, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %78, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %11, align 8
  %84 = load i32, i32* %22, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i32, i32* %83, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = and i32 %82, %87
  %89 = load i32*, i32** %15, align 8
  %90 = load i32, i32* %22, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i32, i32* %89, i64 %91
  store i32 %88, i32* %92, align 4
  br label %93

93:                                               ; preds = %77
  %94 = load i32, i32* %22, align 4
  %95 = add nsw i32 %94, -1
  store i32 %95, i32* %22, align 4
  %96 = icmp sgt i32 %95, 0
  br i1 %96, label %77, label %97

97:                                               ; preds = %93
  %98 = load i32*, i32** %15, align 8
  %99 = getelementptr inbounds i32, i32* %98, i64 0
  %100 = load i32, i32* %99, align 4
  %101 = or i32 %100, 8192
  store i32 %101, i32* %99, align 4
  br label %102

102:                                              ; preds = %97
  %103 = load %struct.set_family*, %struct.set_family** %9, align 8
  %104 = getelementptr inbounds %struct.set_family, %struct.set_family* %103, i32 0, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = load i32*, i32** %15, align 8
  %107 = sext i32 %105 to i64
  %108 = getelementptr inbounds i32, i32* %106, i64 %107
  store i32* %108, i32** %15, align 8
  br label %59

109:                                              ; preds = %59
  %110 = load %struct.set_family*, %struct.set_family** %10, align 8
  %111 = getelementptr inbounds %struct.set_family, %struct.set_family* %110, i32 0, i32 5
  %112 = load i32*, i32** %111, align 8
  store i32* %112, i32** %15, align 8
  %113 = load i32*, i32** %15, align 8
  %114 = load %struct.set_family*, %struct.set_family** %10, align 8
  %115 = getelementptr inbounds %struct.set_family, %struct.set_family* %114, i32 0, i32 3
  %116 = load i32, i32* %115, align 4
  %117 = load %struct.set_family*, %struct.set_family** %10, align 8
  %118 = getelementptr inbounds %struct.set_family, %struct.set_family* %117, i32 0, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = mul nsw i32 %116, %119
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i32, i32* %113, i64 %121
  store i32* %122, i32** %16, align 8
  br label %123

123:                                              ; preds = %166, %109
  %124 = load i32*, i32** %15, align 8
  %125 = load i32*, i32** %16, align 8
  %126 = icmp ult i32* %124, %125
  br i1 %126, label %127, label %173

127:                                              ; preds = %123
  %128 = load i32*, i32** %15, align 8
  %129 = getelementptr inbounds i32, i32* %128, i64 0
  %130 = load i32, i32* %129, align 4
  %131 = and i32 %130, 1023
  store i32 %131, i32* %23, align 4
  %132 = load i32*, i32** %15, align 8
  %133 = getelementptr inbounds i32, i32* %132, i64 0
  %134 = load i32, i32* %133, align 4
  %135 = and i32 %134, -1024
  store i32 %135, i32* %133, align 4
  %136 = load i32, i32* %23, align 4
  %137 = load i32*, i32** %15, align 8
  %138 = getelementptr inbounds i32, i32* %137, i64 0
  %139 = load i32, i32* %138, align 4
  %140 = or i32 %139, %136
  store i32 %140, i32* %138, align 4
  br label %141

141:                                              ; preds = %157, %127
  %142 = load i32*, i32** %15, align 8
  %143 = load i32, i32* %23, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds i32, i32* %142, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = load i32*, i32** %12, align 8
  %148 = load i32, i32* %23, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i32, i32* %147, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = and i32 %146, %151
  %153 = load i32*, i32** %15, align 8
  %154 = load i32, i32* %23, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i32, i32* %153, i64 %155
  store i32 %152, i32* %156, align 4
  br label %157

157:                                              ; preds = %141
  %158 = load i32, i32* %23, align 4
  %159 = add nsw i32 %158, -1
  store i32 %159, i32* %23, align 4
  %160 = icmp sgt i32 %159, 0
  br i1 %160, label %141, label %161

161:                                              ; preds = %157
  %162 = load i32*, i32** %15, align 8
  %163 = getelementptr inbounds i32, i32* %162, i64 0
  %164 = load i32, i32* %163, align 4
  %165 = or i32 %164, 8192
  store i32 %165, i32* %163, align 4
  br label %166

166:                                              ; preds = %161
  %167 = load %struct.set_family*, %struct.set_family** %10, align 8
  %168 = getelementptr inbounds %struct.set_family, %struct.set_family* %167, i32 0, i32 0
  %169 = load i32, i32* %168, align 8
  %170 = load i32*, i32** %15, align 8
  %171 = sext i32 %169 to i64
  %172 = getelementptr inbounds i32, i32* %170, i64 %171
  store i32* %172, i32** %15, align 8
  br label %123

173:                                              ; preds = %123
  %174 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %175 = getelementptr inbounds i32*, i32** %174, i64 0
  %176 = load i32*, i32** %175, align 8
  %177 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %178 = load i32, i32* %13, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i32*, i32** %177, i64 %179
  %181 = load i32*, i32** %180, align 8
  %182 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %176, i32* %181)
  %183 = load %struct.set_family*, %struct.set_family** %9, align 8
  %184 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @sf_list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %183)
  store i32** %184, i32*** %20, align 8
  %185 = bitcast i32** %184 to i8*
  %186 = load %struct.set_family*, %struct.set_family** %9, align 8
  %187 = getelementptr inbounds %struct.set_family, %struct.set_family* %186, i32 0, i32 3
  %188 = load i32, i32* %187, align 4
  %189 = sext i32 %188 to i64
  call void @qsort(i8* %185, i64 %189, i64 8, i32 (i8*, i8*)* bitcast (i32 (i32**, i32**)* @d1_order to i32 (i8*, i8*)*))
  %190 = load %struct.set_family*, %struct.set_family** %10, align 8
  %191 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @sf_list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %190)
  store i32** %191, i32*** %21, align 8
  %192 = bitcast i32** %191 to i8*
  %193 = load %struct.set_family*, %struct.set_family** %10, align 8
  %194 = getelementptr inbounds %struct.set_family, %struct.set_family* %193, i32 0, i32 3
  %195 = load i32, i32* %194, align 4
  %196 = sext i32 %195 to i64
  call void @qsort(i8* %192, i64 %196, i64 8, i32 (i8*, i8*)* bitcast (i32 (i32**, i32**)* @d1_order to i32 (i8*, i8*)*))
  %197 = load i32**, i32*** %20, align 8
  %198 = load i32**, i32*** %21, align 8
  call void @compl_d1merge(i32** %197, i32** %198)
  %199 = load i32, i32* %14, align 4
  switch i32 %199, label %232 [
    i32 1, label %200
    i32 2, label %212
    i32 0, label %222
    i32 3, label %231
  ]

200:                                              ; preds = %173
  %201 = load i32**, i32*** %8, align 8
  %202 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @cubeunlist to %struct.set_family* (i32**, ...)*)(i32** %201)
  store %struct.set_family* %202, %struct.set_family** %18, align 8
  %203 = load i32**, i32*** %20, align 8
  %204 = load %struct.set_family*, %struct.set_family** %18, align 8
  %205 = load i32*, i32** %12, align 8
  %206 = load i32, i32* %13, align 4
  call void @compl_lift_onset(i32** %203, %struct.set_family* %204, i32* %205, i32 %206)
  %207 = load i32**, i32*** %21, align 8
  %208 = load %struct.set_family*, %struct.set_family** %18, align 8
  %209 = load i32*, i32** %11, align 8
  %210 = load i32, i32* %13, align 4
  call void @compl_lift_onset(i32** %207, %struct.set_family* %208, i32* %209, i32 %210)
  %211 = load %struct.set_family*, %struct.set_family** %18, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %211)
  br label %232

212:                                              ; preds = %173
  %213 = load i32**, i32*** %8, align 8
  %214 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @cubeunlist to %struct.set_family* (i32**, ...)*)(i32** %213)
  store %struct.set_family* %214, %struct.set_family** %18, align 8
  %215 = load i32**, i32*** %20, align 8
  %216 = load %struct.set_family*, %struct.set_family** %18, align 8
  %217 = load i32, i32* %13, align 4
  call void @compl_lift_onset_complex(i32** %215, %struct.set_family* %216, i32 %217)
  %218 = load i32**, i32*** %21, align 8
  %219 = load %struct.set_family*, %struct.set_family** %18, align 8
  %220 = load i32, i32* %13, align 4
  call void @compl_lift_onset_complex(i32** %218, %struct.set_family* %219, i32 %220)
  %221 = load %struct.set_family*, %struct.set_family** %18, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %221)
  br label %232

222:                                              ; preds = %173
  %223 = load i32**, i32*** %20, align 8
  %224 = load i32**, i32*** %21, align 8
  %225 = load i32*, i32** %12, align 8
  %226 = load i32, i32* %13, align 4
  call void @compl_lift(i32** %223, i32** %224, i32* %225, i32 %226)
  %227 = load i32**, i32*** %21, align 8
  %228 = load i32**, i32*** %20, align 8
  %229 = load i32*, i32** %11, align 8
  %230 = load i32, i32* %13, align 4
  call void @compl_lift(i32** %227, i32** %228, i32* %229, i32 %230)
  br label %232

231:                                              ; preds = %173
  br label %232

232:                                              ; preds = %231, %222, %212, %200, %173
  %233 = load i32**, i32*** %20, align 8
  %234 = icmp ne i32** %233, null
  br i1 %234, label %235, label %238

235:                                              ; preds = %232
  %236 = load i32**, i32*** %20, align 8
  %237 = bitcast i32** %236 to i8*
  call void @free(i8* %237) #7
  store i32** null, i32*** %20, align 8
  br label %238

238:                                              ; preds = %235, %232
  %239 = load i32**, i32*** %21, align 8
  %240 = icmp ne i32** %239, null
  br i1 %240, label %241, label %244

241:                                              ; preds = %238
  %242 = load i32**, i32*** %21, align 8
  %243 = bitcast i32** %242 to i8*
  call void @free(i8* %243) #7
  store i32** null, i32*** %21, align 8
  br label %244

244:                                              ; preds = %241, %238
  %245 = load %struct.set_family*, %struct.set_family** %9, align 8
  %246 = getelementptr inbounds %struct.set_family, %struct.set_family* %245, i32 0, i32 3
  %247 = load i32, i32* %246, align 4
  %248 = load %struct.set_family*, %struct.set_family** %10, align 8
  %249 = getelementptr inbounds %struct.set_family, %struct.set_family* %248, i32 0, i32 3
  %250 = load i32, i32* %249, align 4
  %251 = add nsw i32 %247, %250
  %252 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %253 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %251, i32 %252)
  store %struct.set_family* %253, %struct.set_family** %19, align 8
  %254 = load %struct.set_family*, %struct.set_family** %19, align 8
  %255 = getelementptr inbounds %struct.set_family, %struct.set_family* %254, i32 0, i32 5
  %256 = load i32*, i32** %255, align 8
  store i32* %256, i32** %17, align 8
  %257 = load %struct.set_family*, %struct.set_family** %9, align 8
  %258 = getelementptr inbounds %struct.set_family, %struct.set_family* %257, i32 0, i32 5
  %259 = load i32*, i32** %258, align 8
  store i32* %259, i32** %15, align 8
  %260 = load i32*, i32** %15, align 8
  %261 = load %struct.set_family*, %struct.set_family** %9, align 8
  %262 = getelementptr inbounds %struct.set_family, %struct.set_family* %261, i32 0, i32 3
  %263 = load i32, i32* %262, align 4
  %264 = load %struct.set_family*, %struct.set_family** %9, align 8
  %265 = getelementptr inbounds %struct.set_family, %struct.set_family* %264, i32 0, i32 0
  %266 = load i32, i32* %265, align 8
  %267 = mul nsw i32 %263, %266
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds i32, i32* %260, i64 %268
  store i32* %269, i32** %16, align 8
  br label %270

270:                                              ; preds = %304, %244
  %271 = load i32*, i32** %15, align 8
  %272 = load i32*, i32** %16, align 8
  %273 = icmp ult i32* %271, %272
  br i1 %273, label %274, label %311

274:                                              ; preds = %270
  %275 = load i32*, i32** %15, align 8
  %276 = getelementptr inbounds i32, i32* %275, i64 0
  %277 = load i32, i32* %276, align 4
  %278 = and i32 %277, 1023
  store i32 %278, i32* %24, align 4
  br label %279

279:                                              ; preds = %289, %274
  %280 = load i32*, i32** %15, align 8
  %281 = load i32, i32* %24, align 4
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds i32, i32* %280, i64 %282
  %284 = load i32, i32* %283, align 4
  %285 = load i32*, i32** %17, align 8
  %286 = load i32, i32* %24, align 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds i32, i32* %285, i64 %287
  store i32 %284, i32* %288, align 4
  br label %289

289:                                              ; preds = %279
  %290 = load i32, i32* %24, align 4
  %291 = add nsw i32 %290, -1
  store i32 %291, i32* %24, align 4
  %292 = icmp sge i32 %291, 0
  br i1 %292, label %279, label %293

293:                                              ; preds = %289
  %294 = load %struct.set_family*, %struct.set_family** %19, align 8
  %295 = getelementptr inbounds %struct.set_family, %struct.set_family* %294, i32 0, i32 3
  %296 = load i32, i32* %295, align 4
  %297 = add nsw i32 %296, 1
  store i32 %297, i32* %295, align 4
  %298 = load %struct.set_family*, %struct.set_family** %19, align 8
  %299 = getelementptr inbounds %struct.set_family, %struct.set_family* %298, i32 0, i32 0
  %300 = load i32, i32* %299, align 8
  %301 = load i32*, i32** %17, align 8
  %302 = sext i32 %300 to i64
  %303 = getelementptr inbounds i32, i32* %301, i64 %302
  store i32* %303, i32** %17, align 8
  br label %304

304:                                              ; preds = %293
  %305 = load %struct.set_family*, %struct.set_family** %9, align 8
  %306 = getelementptr inbounds %struct.set_family, %struct.set_family* %305, i32 0, i32 0
  %307 = load i32, i32* %306, align 8
  %308 = load i32*, i32** %15, align 8
  %309 = sext i32 %307 to i64
  %310 = getelementptr inbounds i32, i32* %308, i64 %309
  store i32* %310, i32** %15, align 8
  br label %270

311:                                              ; preds = %270
  %312 = load %struct.set_family*, %struct.set_family** %10, align 8
  %313 = getelementptr inbounds %struct.set_family, %struct.set_family* %312, i32 0, i32 5
  %314 = load i32*, i32** %313, align 8
  store i32* %314, i32** %15, align 8
  %315 = load i32*, i32** %15, align 8
  %316 = load %struct.set_family*, %struct.set_family** %10, align 8
  %317 = getelementptr inbounds %struct.set_family, %struct.set_family* %316, i32 0, i32 3
  %318 = load i32, i32* %317, align 4
  %319 = load %struct.set_family*, %struct.set_family** %10, align 8
  %320 = getelementptr inbounds %struct.set_family, %struct.set_family* %319, i32 0, i32 0
  %321 = load i32, i32* %320, align 8
  %322 = mul nsw i32 %318, %321
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds i32, i32* %315, i64 %323
  store i32* %324, i32** %16, align 8
  br label %325

325:                                              ; preds = %366, %311
  %326 = load i32*, i32** %15, align 8
  %327 = load i32*, i32** %16, align 8
  %328 = icmp ult i32* %326, %327
  br i1 %328, label %329, label %373

329:                                              ; preds = %325
  %330 = load i32*, i32** %15, align 8
  %331 = getelementptr inbounds i32, i32* %330, i64 0
  %332 = load i32, i32* %331, align 4
  %333 = and i32 %332, 8192
  %334 = icmp ne i32 %333, 0
  br i1 %334, label %335, label %365

335:                                              ; preds = %329
  %336 = load i32*, i32** %15, align 8
  %337 = getelementptr inbounds i32, i32* %336, i64 0
  %338 = load i32, i32* %337, align 4
  %339 = and i32 %338, 1023
  store i32 %339, i32* %25, align 4
  br label %340

340:                                              ; preds = %350, %335
  %341 = load i32*, i32** %15, align 8
  %342 = load i32, i32* %25, align 4
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds i32, i32* %341, i64 %343
  %345 = load i32, i32* %344, align 4
  %346 = load i32*, i32** %17, align 8
  %347 = load i32, i32* %25, align 4
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds i32, i32* %346, i64 %348
  store i32 %345, i32* %349, align 4
  br label %350

350:                                              ; preds = %340
  %351 = load i32, i32* %25, align 4
  %352 = add nsw i32 %351, -1
  store i32 %352, i32* %25, align 4
  %353 = icmp sge i32 %352, 0
  br i1 %353, label %340, label %354

354:                                              ; preds = %350
  %355 = load %struct.set_family*, %struct.set_family** %19, align 8
  %356 = getelementptr inbounds %struct.set_family, %struct.set_family* %355, i32 0, i32 3
  %357 = load i32, i32* %356, align 4
  %358 = add nsw i32 %357, 1
  store i32 %358, i32* %356, align 4
  %359 = load %struct.set_family*, %struct.set_family** %19, align 8
  %360 = getelementptr inbounds %struct.set_family, %struct.set_family* %359, i32 0, i32 0
  %361 = load i32, i32* %360, align 8
  %362 = load i32*, i32** %17, align 8
  %363 = sext i32 %361 to i64
  %364 = getelementptr inbounds i32, i32* %362, i64 %363
  store i32* %364, i32** %17, align 8
  br label %365

365:                                              ; preds = %354, %329
  br label %366

366:                                              ; preds = %365
  %367 = load %struct.set_family*, %struct.set_family** %10, align 8
  %368 = getelementptr inbounds %struct.set_family, %struct.set_family* %367, i32 0, i32 0
  %369 = load i32, i32* %368, align 8
  %370 = load i32*, i32** %15, align 8
  %371 = sext i32 %369 to i64
  %372 = getelementptr inbounds i32, i32* %370, i64 %371
  store i32* %372, i32** %15, align 8
  br label %325

373:                                              ; preds = %325
  %374 = load i32, i32* @debug, align 4
  %375 = and i32 %374, 1
  %376 = icmp ne i32 %375, 0
  br i1 %376, label %377, label %387

377:                                              ; preds = %373
  %378 = load %struct.set_family*, %struct.set_family** %19, align 8
  %379 = getelementptr inbounds %struct.set_family, %struct.set_family* %378, i32 0, i32 3
  %380 = load i32, i32* %379, align 4
  %381 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i32 %380)
  %382 = load i32, i32* @verbose_debug, align 4
  %383 = icmp ne i32 %382, 0
  br i1 %383, label %384, label %386

384:                                              ; preds = %377
  %385 = load %struct.set_family*, %struct.set_family** %19, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @cprint to void (%struct.set_family*, ...)*)(%struct.set_family* %385)
  br label %386

386:                                              ; preds = %384, %377
  br label %387

387:                                              ; preds = %386, %373
  %388 = load %struct.set_family*, %struct.set_family** %9, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %388)
  %389 = load %struct.set_family*, %struct.set_family** %10, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %389)
  %390 = load %struct.set_family*, %struct.set_family** %19, align 8
  ret %struct.set_family* %390
}

; Function Attrs: noinline nounwind uwtable
define internal void @compl_d1merge(i32** %0, i32** %1) #0 {
  %3 = alloca i32**, align 8
  %4 = alloca i32**, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i32** %0, i32*** %3, align 8
  store i32** %1, i32*** %4, align 8
  %8 = load i32**, i32*** %3, align 8
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %5, align 8
  %10 = load i32**, i32*** %4, align 8
  %11 = load i32*, i32** %10, align 8
  store i32* %11, i32** %6, align 8
  br label %12

12:                                               ; preds = %74, %2
  %13 = load i32*, i32** %5, align 8
  %14 = icmp ne i32* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  %16 = load i32*, i32** %6, align 8
  %17 = icmp ne i32* %16, null
  br label %18

18:                                               ; preds = %15, %12
  %19 = phi i1 [ false, %12 ], [ %17, %15 ]
  br i1 %19, label %20, label %75

20:                                               ; preds = %18
  %21 = load i32**, i32*** %3, align 8
  %22 = load i32**, i32*** %4, align 8
  %23 = call i32 (i32**, i32**, ...) bitcast (i32 (i32**, i32**)* @d1_order to i32 (i32**, i32**, ...)*)(i32** %21, i32** %22)
  switch i32 %23, label %74 [
    i32 1, label %24
    i32 -1, label %28
    i32 0, label %32
  ]

24:                                               ; preds = %20
  %25 = load i32**, i32*** %4, align 8
  %26 = getelementptr inbounds i32*, i32** %25, i32 1
  store i32** %26, i32*** %4, align 8
  %27 = load i32*, i32** %26, align 8
  store i32* %27, i32** %6, align 8
  br label %74

28:                                               ; preds = %20
  %29 = load i32**, i32*** %3, align 8
  %30 = getelementptr inbounds i32*, i32** %29, i32 1
  store i32** %30, i32*** %3, align 8
  %31 = load i32*, i32** %30, align 8
  store i32* %31, i32** %5, align 8
  br label %74

32:                                               ; preds = %20
  %33 = load i32*, i32** %6, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 0
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, -8193
  store i32 %36, i32* %34, align 4
  %37 = load i32*, i32** %5, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 0
  %39 = load i32, i32* %38, align 4
  %40 = and i32 %39, 1023
  store i32 %40, i32* %7, align 4
  %41 = load i32*, i32** %5, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, -1024
  store i32 %44, i32* %42, align 4
  %45 = load i32, i32* %7, align 4
  %46 = load i32*, i32** %5, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 0
  %48 = load i32, i32* %47, align 4
  %49 = or i32 %48, %45
  store i32 %49, i32* %47, align 4
  br label %50

50:                                               ; preds = %66, %32
  %51 = load i32*, i32** %5, align 8
  %52 = load i32, i32* %7, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, i32* %51, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = load i32*, i32** %6, align 8
  %57 = load i32, i32* %7, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %56, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = or i32 %55, %60
  %62 = load i32*, i32** %5, align 8
  %63 = load i32, i32* %7, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %62, i64 %64
  store i32 %61, i32* %65, align 4
  br label %66

66:                                               ; preds = %50
  %67 = load i32, i32* %7, align 4
  %68 = add nsw i32 %67, -1
  store i32 %68, i32* %7, align 4
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %50, label %70

70:                                               ; preds = %66
  %71 = load i32**, i32*** %4, align 8
  %72 = getelementptr inbounds i32*, i32** %71, i32 1
  store i32** %72, i32*** %4, align 8
  %73 = load i32*, i32** %72, align 8
  store i32* %73, i32** %6, align 8
  br label %74

74:                                               ; preds = %70, %28, %24, %20
  br label %12

75:                                               ; preds = %18
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @compl_lift_onset(i32** %0, %struct.set_family* %1, i32* %2, i32 %3) #0 {
  %5 = alloca i32**, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i32** %0, i32*** %5, align 8
  store %struct.set_family* %1, %struct.set_family** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32 %3, i32* %8, align 4
  %17 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %18 = getelementptr inbounds i32*, i32** %17, i64 4
  %19 = load i32*, i32** %18, align 8
  store i32* %19, i32** %12, align 8
  %20 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %21 = load i32, i32* %8, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i32*, i32** %20, i64 %22
  %24 = load i32*, i32** %23, align 8
  store i32* %24, i32** %13, align 8
  br label %25

25:                                               ; preds = %161, %4
  %26 = load i32**, i32*** %5, align 8
  %27 = getelementptr inbounds i32*, i32** %26, i32 1
  store i32** %27, i32*** %5, align 8
  %28 = load i32*, i32** %26, align 8
  store i32* %28, i32** %9, align 8
  %29 = icmp ne i32* %28, null
  br i1 %29, label %30, label %162

30:                                               ; preds = %25
  %31 = load i32*, i32** %9, align 8
  %32 = getelementptr inbounds i32, i32* %31, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 8192
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %161

36:                                               ; preds = %30
  %37 = load i32*, i32** %7, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 0
  %39 = load i32, i32* %38, align 4
  %40 = and i32 %39, 1023
  store i32 %40, i32* %14, align 4
  %41 = load i32*, i32** %12, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, -1024
  store i32 %44, i32* %42, align 4
  %45 = load i32, i32* %14, align 4
  %46 = load i32*, i32** %12, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 0
  %48 = load i32, i32* %47, align 4
  %49 = or i32 %48, %45
  store i32 %49, i32* %47, align 4
  br label %50

50:                                               ; preds = %66, %36
  %51 = load i32*, i32** %7, align 8
  %52 = load i32, i32* %14, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, i32* %51, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = load i32*, i32** %13, align 8
  %57 = load i32, i32* %14, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %56, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = and i32 %55, %60
  %62 = load i32*, i32** %12, align 8
  %63 = load i32, i32* %14, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %62, i64 %64
  store i32 %61, i32* %65, align 4
  br label %66

66:                                               ; preds = %50
  %67 = load i32, i32* %14, align 4
  %68 = add nsw i32 %67, -1
  store i32 %68, i32* %14, align 4
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %50, label %70

70:                                               ; preds = %66
  %71 = load i32*, i32** %9, align 8
  %72 = getelementptr inbounds i32, i32* %71, i64 0
  %73 = load i32, i32* %72, align 4
  %74 = and i32 %73, 1023
  store i32 %74, i32* %15, align 4
  %75 = load i32*, i32** %12, align 8
  %76 = getelementptr inbounds i32, i32* %75, i64 0
  %77 = load i32, i32* %76, align 4
  %78 = and i32 %77, -1024
  store i32 %78, i32* %76, align 4
  %79 = load i32, i32* %15, align 4
  %80 = load i32*, i32** %12, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 0
  %82 = load i32, i32* %81, align 4
  %83 = or i32 %82, %79
  store i32 %83, i32* %81, align 4
  br label %84

84:                                               ; preds = %100, %70
  %85 = load i32*, i32** %9, align 8
  %86 = load i32, i32* %15, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i32, i32* %85, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = load i32*, i32** %12, align 8
  %91 = load i32, i32* %15, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i32, i32* %90, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = or i32 %89, %94
  %96 = load i32*, i32** %12, align 8
  %97 = load i32, i32* %15, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, i32* %96, i64 %98
  store i32 %95, i32* %99, align 4
  br label %100

100:                                              ; preds = %84
  %101 = load i32, i32* %15, align 4
  %102 = add nsw i32 %101, -1
  store i32 %102, i32* %15, align 4
  %103 = icmp sgt i32 %102, 0
  br i1 %103, label %84, label %104

104:                                              ; preds = %100
  %105 = load %struct.set_family*, %struct.set_family** %6, align 8
  %106 = getelementptr inbounds %struct.set_family, %struct.set_family* %105, i32 0, i32 5
  %107 = load i32*, i32** %106, align 8
  store i32* %107, i32** %11, align 8
  %108 = load i32*, i32** %11, align 8
  %109 = load %struct.set_family*, %struct.set_family** %6, align 8
  %110 = getelementptr inbounds %struct.set_family, %struct.set_family* %109, i32 0, i32 3
  %111 = load i32, i32* %110, align 4
  %112 = load %struct.set_family*, %struct.set_family** %6, align 8
  %113 = getelementptr inbounds %struct.set_family, %struct.set_family* %112, i32 0, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = mul nsw i32 %111, %114
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i32, i32* %108, i64 %116
  store i32* %117, i32** %10, align 8
  br label %118

118:                                              ; preds = %129, %104
  %119 = load i32*, i32** %11, align 8
  %120 = load i32*, i32** %10, align 8
  %121 = icmp ult i32* %119, %120
  br i1 %121, label %122, label %136

122:                                              ; preds = %118
  %123 = load i32*, i32** %11, align 8
  %124 = load i32*, i32** %12, align 8
  %125 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @cdist0 to i32 (i32*, i32*, ...)*)(i32* %123, i32* %124)
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %122
  br label %160

128:                                              ; preds = %122
  br label %129

129:                                              ; preds = %128
  %130 = load %struct.set_family*, %struct.set_family** %6, align 8
  %131 = getelementptr inbounds %struct.set_family, %struct.set_family* %130, i32 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = load i32*, i32** %11, align 8
  %134 = sext i32 %132 to i64
  %135 = getelementptr inbounds i32, i32* %133, i64 %134
  store i32* %135, i32** %11, align 8
  br label %118

136:                                              ; preds = %118
  %137 = load i32*, i32** %12, align 8
  %138 = getelementptr inbounds i32, i32* %137, i64 0
  %139 = load i32, i32* %138, align 4
  %140 = and i32 %139, 1023
  store i32 %140, i32* %16, align 4
  br label %141

141:                                              ; preds = %151, %136
  %142 = load i32*, i32** %12, align 8
  %143 = load i32, i32* %16, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds i32, i32* %142, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = load i32*, i32** %9, align 8
  %148 = load i32, i32* %16, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i32, i32* %147, i64 %149
  store i32 %146, i32* %150, align 4
  br label %151

151:                                              ; preds = %141
  %152 = load i32, i32* %16, align 4
  %153 = add nsw i32 %152, -1
  store i32 %153, i32* %16, align 4
  %154 = icmp sge i32 %153, 0
  br i1 %154, label %141, label %155

155:                                              ; preds = %151
  %156 = load i32*, i32** %9, align 8
  %157 = getelementptr inbounds i32, i32* %156, i64 0
  %158 = load i32, i32* %157, align 4
  %159 = or i32 %158, 8192
  store i32 %159, i32* %157, align 4
  br label %160

160:                                              ; preds = %155, %127
  br label %161

161:                                              ; preds = %160, %30
  br label %25

162:                                              ; preds = %25
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @compl_lift_onset_complex(i32** %0, %struct.set_family* %1, i32 %2) #0 {
  %4 = alloca i32**, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  store i32** %0, i32*** %4, align 8
  store %struct.set_family* %1, %struct.set_family** %5, align 8
  store i32 %2, i32* %6, align 4
  %13 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %14 = icmp sle i32 %13, 32
  br i1 %14, label %15, label %16

15:                                               ; preds = %3
  br label %22

16:                                               ; preds = %3
  %17 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %18 = sub nsw i32 %17, 1
  %19 = ashr i32 %18, 5
  %20 = add nsw i32 %19, 1
  %21 = add nsw i32 %20, 1
  br label %22

22:                                               ; preds = %16, %15
  %23 = phi i32 [ 2, %15 ], [ %21, %16 ]
  %24 = sext i32 %23 to i64
  %25 = mul i64 4, %24
  %26 = call noalias i8* @malloc(i64 %25) #7
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %29 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %27, i32 %28)
  store i32* %29, i32** %11, align 8
  br label %30

30:                                               ; preds = %123, %22
  %31 = load i32**, i32*** %4, align 8
  %32 = getelementptr inbounds i32*, i32** %31, i32 1
  store i32** %32, i32*** %4, align 8
  %33 = load i32*, i32** %31, align 8
  store i32* %33, i32** %10, align 8
  %34 = icmp ne i32* %33, null
  br i1 %34, label %35, label %124

35:                                               ; preds = %30
  %36 = load i32*, i32** %10, align 8
  %37 = getelementptr inbounds i32, i32* %36, i64 0
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 8192
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %123

41:                                               ; preds = %35
  %42 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %43 = icmp sle i32 %42, 32
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  br label %50

45:                                               ; preds = %41
  %46 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %47 = sub nsw i32 %46, 1
  %48 = ashr i32 %47, 5
  %49 = add nsw i32 %48, 1
  br label %50

50:                                               ; preds = %45, %44
  %51 = phi i32 [ 1, %44 ], [ %49, %45 ]
  store i32 %51, i32* %12, align 4
  %52 = load i32, i32* %12, align 4
  %53 = load i32*, i32** %11, align 8
  store i32 %52, i32* %53, align 4
  br label %54

54:                                               ; preds = %59, %50
  %55 = load i32*, i32** %11, align 8
  %56 = load i32, i32* %12, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %55, i64 %57
  store i32 0, i32* %58, align 4
  br label %59

59:                                               ; preds = %54
  %60 = load i32, i32* %12, align 4
  %61 = add nsw i32 %60, -1
  store i32 %61, i32* %12, align 4
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %54, label %63

63:                                               ; preds = %59
  %64 = load %struct.set_family*, %struct.set_family** %5, align 8
  %65 = getelementptr inbounds %struct.set_family, %struct.set_family* %64, i32 0, i32 5
  %66 = load i32*, i32** %65, align 8
  store i32* %66, i32** %9, align 8
  %67 = load i32*, i32** %9, align 8
  %68 = load %struct.set_family*, %struct.set_family** %5, align 8
  %69 = getelementptr inbounds %struct.set_family, %struct.set_family* %68, i32 0, i32 3
  %70 = load i32, i32* %69, align 4
  %71 = load %struct.set_family*, %struct.set_family** %5, align 8
  %72 = getelementptr inbounds %struct.set_family, %struct.set_family* %71, i32 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = mul nsw i32 %70, %73
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %67, i64 %75
  store i32* %76, i32** %8, align 8
  br label %77

77:                                               ; preds = %97, %63
  %78 = load i32*, i32** %9, align 8
  %79 = load i32*, i32** %8, align 8
  %80 = icmp ult i32* %78, %79
  br i1 %80, label %81, label %104

81:                                               ; preds = %77
  %82 = load i32*, i32** %9, align 8
  %83 = load i32*, i32** %10, align 8
  %84 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @cdist01 to i32 (i32*, i32*, ...)*)(i32* %82, i32* %83)
  store i32 %84, i32* %7, align 4
  %85 = icmp slt i32 %84, 2
  br i1 %85, label %86, label %96

86:                                               ; preds = %81
  %87 = load i32, i32* %7, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i64 0, i64 0))
  br label %95

90:                                               ; preds = %86
  %91 = load i32*, i32** %11, align 8
  %92 = load i32*, i32** %9, align 8
  %93 = load i32*, i32** %10, align 8
  %94 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @force_lower to i32* (i32*, i32*, i32*, ...)*)(i32* %91, i32* %92, i32* %93)
  br label %95

95:                                               ; preds = %90, %89
  br label %96

96:                                               ; preds = %95, %81
  br label %97

97:                                               ; preds = %96
  %98 = load %struct.set_family*, %struct.set_family** %5, align 8
  %99 = getelementptr inbounds %struct.set_family, %struct.set_family* %98, i32 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = load i32*, i32** %9, align 8
  %102 = sext i32 %100 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  store i32* %103, i32** %9, align 8
  br label %77

104:                                              ; preds = %77
  %105 = load i32*, i32** %11, align 8
  %106 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %107 = load i32, i32* %6, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i32*, i32** %106, i64 %108
  %110 = load i32*, i32** %109, align 8
  %111 = load i32*, i32** %11, align 8
  %112 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %105, i32* %110, i32* %111)
  %113 = load i32*, i32** %10, align 8
  %114 = load i32*, i32** %10, align 8
  %115 = load i32*, i32** %11, align 8
  %116 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %113, i32* %114, i32* %115)
  %117 = load i32*, i32** %11, align 8
  %118 = icmp ne i32* %117, null
  br i1 %118, label %119, label %122

119:                                              ; preds = %104
  %120 = load i32*, i32** %11, align 8
  %121 = bitcast i32* %120 to i8*
  call void @free(i8* %121) #7
  store i32* null, i32** %11, align 8
  br label %122

122:                                              ; preds = %119, %104
  br label %123

123:                                              ; preds = %122, %35
  br label %30

124:                                              ; preds = %30
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @compl_lift(i32** %0, i32** %1, i32* %2, i32 %3) #0 {
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32**, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i32** %0, i32*** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32 %3, i32* %8, align 4
  %17 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %18 = getelementptr inbounds i32*, i32** %17, i64 4
  %19 = load i32*, i32** %18, align 8
  store i32* %19, i32** %12, align 8
  %20 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %21 = getelementptr inbounds i32*, i32** %20, i64 5
  %22 = load i32*, i32** %21, align 8
  store i32* %22, i32** %13, align 8
  %23 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %24 = load i32, i32* %8, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32*, i32** %23, i64 %25
  %27 = load i32*, i32** %26, align 8
  store i32* %27, i32** %14, align 8
  %28 = load i32*, i32** %13, align 8
  %29 = load i32*, i32** %7, align 8
  %30 = load i32*, i32** %14, align 8
  %31 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_and to i32* (i32*, i32*, i32*, ...)*)(i32* %28, i32* %29, i32* %30)
  br label %32

32:                                               ; preds = %120, %4
  %33 = load i32**, i32*** %5, align 8
  %34 = getelementptr inbounds i32*, i32** %33, i32 1
  store i32** %34, i32*** %5, align 8
  %35 = load i32*, i32** %33, align 8
  store i32* %35, i32** %9, align 8
  %36 = icmp ne i32* %35, null
  br i1 %36, label %37, label %121

37:                                               ; preds = %32
  %38 = load i32*, i32** %9, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 0
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 8192
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %120

43:                                               ; preds = %37
  %44 = load i32*, i32** %12, align 8
  %45 = load i32*, i32** %7, align 8
  %46 = load i32*, i32** %9, align 8
  %47 = load i32*, i32** %14, align 8
  %48 = call i32* (i32*, i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*, i32*)* @set_merge to i32* (i32*, i32*, i32*, i32*, ...)*)(i32* %44, i32* %45, i32* %46, i32* %47)
  %49 = load i32**, i32*** %6, align 8
  store i32** %49, i32*** %11, align 8
  br label %50

50:                                               ; preds = %83, %43
  %51 = load i32**, i32*** %11, align 8
  %52 = getelementptr inbounds i32*, i32** %51, i32 1
  store i32** %52, i32*** %11, align 8
  %53 = load i32*, i32** %51, align 8
  store i32* %53, i32** %10, align 8
  %54 = icmp ne i32* %53, null
  br i1 %54, label %55, label %119

55:                                               ; preds = %50
  %56 = load i32*, i32** %12, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 0
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, 1023
  store i32 %59, i32* %15, align 4
  br label %60

60:                                               ; preds = %76, %55
  %61 = load i32*, i32** %12, align 8
  %62 = load i32, i32* %15, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %61, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = load i32*, i32** %10, align 8
  %67 = load i32, i32* %15, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %66, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = xor i32 %70, -1
  %72 = and i32 %65, %71
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %60
  br label %80

75:                                               ; preds = %60
  br label %76

76:                                               ; preds = %75
  %77 = load i32, i32* %15, align 4
  %78 = add nsw i32 %77, -1
  store i32 %78, i32* %15, align 4
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %60, label %80

80:                                               ; preds = %76, %74
  %81 = load i32, i32* %15, align 4
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  br label %50

84:                                               ; preds = %80
  %85 = load i32*, i32** %9, align 8
  %86 = getelementptr inbounds i32, i32* %85, i64 0
  %87 = load i32, i32* %86, align 4
  %88 = and i32 %87, 1023
  store i32 %88, i32* %16, align 4
  %89 = load i32*, i32** %9, align 8
  %90 = getelementptr inbounds i32, i32* %89, i64 0
  %91 = load i32, i32* %90, align 4
  %92 = and i32 %91, -1024
  store i32 %92, i32* %90, align 4
  %93 = load i32, i32* %16, align 4
  %94 = load i32*, i32** %9, align 8
  %95 = getelementptr inbounds i32, i32* %94, i64 0
  %96 = load i32, i32* %95, align 4
  %97 = or i32 %96, %93
  store i32 %97, i32* %95, align 4
  br label %98

98:                                               ; preds = %114, %84
  %99 = load i32*, i32** %9, align 8
  %100 = load i32, i32* %16, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, i32* %99, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = load i32*, i32** %13, align 8
  %105 = load i32, i32* %16, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i32, i32* %104, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = or i32 %103, %108
  %110 = load i32*, i32** %9, align 8
  %111 = load i32, i32* %16, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i32, i32* %110, i64 %112
  store i32 %109, i32* %113, align 4
  br label %114

114:                                              ; preds = %98
  %115 = load i32, i32* %16, align 4
  %116 = add nsw i32 %115, -1
  store i32 %116, i32* %16, align 4
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %98, label %118

118:                                              ; preds = %114
  br label %119

119:                                              ; preds = %118, %50
  br label %120

120:                                              ; preds = %119, %37
  br label %32

121:                                              ; preds = %32
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.set_family* @compl_cube(i32* %0) #0 {
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32* %0, i32** %2, align 8
  %11 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %12 = getelementptr inbounds i32*, i32** %11, i64 7
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %3, align 8
  %14 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  store i32* %14, i32** %6, align 8
  %15 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %16 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %17 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %15, i32 %16)
  store %struct.set_family* %17, %struct.set_family** %8, align 8
  %18 = load i32*, i32** %6, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 0
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 1023
  store i32 %21, i32* %9, align 4
  %22 = load i32*, i32** %3, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, -1024
  store i32 %25, i32* %23, align 4
  %26 = load i32, i32* %9, align 4
  %27 = load i32*, i32** %3, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 0
  %29 = load i32, i32* %28, align 4
  %30 = or i32 %29, %26
  store i32 %30, i32* %28, align 4
  br label %31

31:                                               ; preds = %48, %1
  %32 = load i32*, i32** %6, align 8
  %33 = load i32, i32* %9, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %32, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = load i32*, i32** %2, align 8
  %38 = load i32, i32* %9, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %37, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = xor i32 %41, -1
  %43 = and i32 %36, %42
  %44 = load i32*, i32** %3, align 8
  %45 = load i32, i32* %9, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i32, i32* %44, i64 %46
  store i32 %43, i32* %47, align 4
  br label %48

48:                                               ; preds = %31
  %49 = load i32, i32* %9, align 4
  %50 = add nsw i32 %49, -1
  store i32 %50, i32* %9, align 4
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %31, label %52

52:                                               ; preds = %48
  store i32 0, i32* %7, align 4
  br label %53

53:                                               ; preds = %129, %52
  %54 = load i32, i32* %7, align 4
  %55 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %57, label %132

57:                                               ; preds = %53
  %58 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %59 = load i32, i32* %7, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32*, i32** %58, i64 %60
  %62 = load i32*, i32** %61, align 8
  store i32* %62, i32** %5, align 8
  %63 = load i32*, i32** %3, align 8
  %64 = load i32*, i32** %5, align 8
  %65 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_disjoint to i32 (i32*, i32*, ...)*)(i32* %63, i32* %64)
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %128, label %67

67:                                               ; preds = %57
  %68 = load %struct.set_family*, %struct.set_family** %8, align 8
  %69 = getelementptr inbounds %struct.set_family, %struct.set_family* %68, i32 0, i32 5
  %70 = load i32*, i32** %69, align 8
  %71 = load %struct.set_family*, %struct.set_family** %8, align 8
  %72 = getelementptr inbounds %struct.set_family, %struct.set_family* %71, i32 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = load %struct.set_family*, %struct.set_family** %8, align 8
  %75 = getelementptr inbounds %struct.set_family, %struct.set_family* %74, i32 0, i32 3
  %76 = load i32, i32* %75, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %75, align 4
  %78 = mul nsw i32 %73, %76
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i32, i32* %70, i64 %79
  store i32* %80, i32** %4, align 8
  %81 = load i32*, i32** %3, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 0
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, 1023
  store i32 %84, i32* %10, align 4
  %85 = load i32*, i32** %4, align 8
  %86 = getelementptr inbounds i32, i32* %85, i64 0
  %87 = load i32, i32* %86, align 4
  %88 = and i32 %87, -1024
  store i32 %88, i32* %86, align 4
  %89 = load i32, i32* %10, align 4
  %90 = load i32*, i32** %4, align 8
  %91 = getelementptr inbounds i32, i32* %90, i64 0
  %92 = load i32, i32* %91, align 4
  %93 = or i32 %92, %89
  store i32 %93, i32* %91, align 4
  br label %94

94:                                               ; preds = %123, %67
  %95 = load i32*, i32** %3, align 8
  %96 = load i32, i32* %10, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i32, i32* %95, i64 %97
  %99 = load i32, i32* %98, align 4
  %100 = load i32*, i32** %5, align 8
  %101 = load i32, i32* %10, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i32, i32* %100, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = and i32 %99, %104
  %106 = load i32*, i32** %6, align 8
  %107 = load i32, i32* %10, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i32, i32* %106, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = load i32*, i32** %5, align 8
  %112 = load i32, i32* %10, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, i32* %111, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = xor i32 %115, -1
  %117 = and i32 %110, %116
  %118 = or i32 %105, %117
  %119 = load i32*, i32** %4, align 8
  %120 = load i32, i32* %10, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i32, i32* %119, i64 %121
  store i32 %118, i32* %122, align 4
  br label %123

123:                                              ; preds = %94
  %124 = load i32, i32* %10, align 4
  %125 = add nsw i32 %124, -1
  store i32 %125, i32* %10, align 4
  %126 = icmp sgt i32 %125, 0
  br i1 %126, label %94, label %127

127:                                              ; preds = %123
  br label %128

128:                                              ; preds = %127, %57
  br label %129

129:                                              ; preds = %128
  %130 = load i32, i32* %7, align 4
  %131 = add nsw i32 %130, 1
  store i32 %131, i32* %7, align 4
  br label %53

132:                                              ; preds = %53
  %133 = load %struct.set_family*, %struct.set_family** %8, align 8
  ret %struct.set_family* %133
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @simp_comp(i32** %0, %struct.set_family** %1, %struct.set_family** %2) #0 {
  %4 = alloca i32**, align 8
  %5 = alloca %struct.set_family**, align 8
  %6 = alloca %struct.set_family**, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.set_family*, align 8
  %11 = alloca %struct.set_family*, align 8
  %12 = alloca %struct.set_family*, align 8
  %13 = alloca %struct.set_family*, align 8
  %14 = alloca i32, align 4
  store i32** %0, i32*** %4, align 8
  store %struct.set_family** %1, %struct.set_family*** %5, align 8
  store %struct.set_family** %2, %struct.set_family*** %6, align 8
  %15 = load i32, i32* @debug, align 4
  %16 = and i32 %15, 1
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %3
  %19 = load i32**, i32*** %4, align 8
  %20 = load i32, i32* @simp_comp.simplify_level, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* @simp_comp.simplify_level, align 4
  call void (i32**, i8*, i32, ...) bitcast (void (i32**, i8*, i32)* @debug_print to void (i32**, i8*, i32, ...)*)(i32** %19, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.5, i64 0, i64 0), i32 %20)
  br label %22

22:                                               ; preds = %18, %3
  %23 = load i32**, i32*** %4, align 8
  %24 = load %struct.set_family**, %struct.set_family*** %5, align 8
  %25 = load %struct.set_family**, %struct.set_family*** %6, align 8
  %26 = call i32 @simp_comp_special_cases(i32** %23, %struct.set_family** %24, %struct.set_family** %25)
  %27 = icmp eq i32 %26, 2
  br i1 %27, label %28, label %146

28:                                               ; preds = %22
  %29 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %30 = icmp sle i32 %29, 32
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  br label %38

32:                                               ; preds = %28
  %33 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %34 = sub nsw i32 %33, 1
  %35 = ashr i32 %34, 5
  %36 = add nsw i32 %35, 1
  %37 = add nsw i32 %36, 1
  br label %38

38:                                               ; preds = %32, %31
  %39 = phi i32 [ 2, %31 ], [ %37, %32 ]
  %40 = sext i32 %39 to i64
  %41 = mul i64 4, %40
  %42 = call noalias i8* @malloc(i64 %41) #7
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %45 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %43, i32 %44)
  store i32* %45, i32** %7, align 8
  %46 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %47 = icmp sle i32 %46, 32
  br i1 %47, label %48, label %49

48:                                               ; preds = %38
  br label %55

49:                                               ; preds = %38
  %50 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %51 = sub nsw i32 %50, 1
  %52 = ashr i32 %51, 5
  %53 = add nsw i32 %52, 1
  %54 = add nsw i32 %53, 1
  br label %55

55:                                               ; preds = %49, %48
  %56 = phi i32 [ 2, %48 ], [ %54, %49 ]
  %57 = sext i32 %56 to i64
  %58 = mul i64 4, %57
  %59 = call noalias i8* @malloc(i64 %58) #7
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %62 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %60, i32 %61)
  store i32* %62, i32** %8, align 8
  %63 = load i32**, i32*** %4, align 8
  %64 = load i32*, i32** %7, align 8
  %65 = load i32*, i32** %8, align 8
  %66 = call i32 (i32**, i32*, i32*, i32, ...) bitcast (i32 (i32**, i32*, i32*, i32)* @binate_split_select to i32 (i32**, i32*, i32*, i32, ...)*)(i32** %63, i32* %64, i32* %65, i32 1)
  store i32 %66, i32* %9, align 4
  %67 = load i32**, i32*** %4, align 8
  %68 = load i32*, i32** %7, align 8
  %69 = load i32, i32* %9, align 4
  %70 = call i32** (i32**, i32*, i32, ...) bitcast (i32** (i32**, i32*, i32)* @scofactor to i32** (i32**, i32*, i32, ...)*)(i32** %67, i32* %68, i32 %69)
  call void @simp_comp(i32** %70, %struct.set_family** %10, %struct.set_family** %12)
  %71 = load i32**, i32*** %4, align 8
  %72 = load i32*, i32** %8, align 8
  %73 = load i32, i32* %9, align 4
  %74 = call i32** (i32**, i32*, i32, ...) bitcast (i32** (i32**, i32*, i32)* @scofactor to i32** (i32**, i32*, i32, ...)*)(i32** %71, i32* %72, i32 %73)
  call void @simp_comp(i32** %74, %struct.set_family** %11, %struct.set_family** %13)
  store i32 0, i32* %14, align 4
  %75 = load i32**, i32*** %4, align 8
  %76 = load %struct.set_family*, %struct.set_family** %10, align 8
  %77 = load %struct.set_family*, %struct.set_family** %11, align 8
  %78 = load i32*, i32** %7, align 8
  %79 = load i32*, i32** %8, align 8
  %80 = load i32, i32* %9, align 4
  %81 = load i32, i32* %14, align 4
  %82 = call %struct.set_family* @compl_merge(i32** %75, %struct.set_family* %76, %struct.set_family* %77, i32* %78, i32* %79, i32 %80, i32 %81)
  %83 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %82, %struct.set_family** %83, align 8
  store i32 0, i32* %14, align 4
  %84 = load i32**, i32*** %4, align 8
  %85 = load %struct.set_family*, %struct.set_family** %12, align 8
  %86 = load %struct.set_family*, %struct.set_family** %13, align 8
  %87 = load i32*, i32** %7, align 8
  %88 = load i32*, i32** %8, align 8
  %89 = load i32, i32* %9, align 4
  %90 = load i32, i32* %14, align 4
  %91 = call %struct.set_family* @compl_merge(i32** %84, %struct.set_family* %85, %struct.set_family* %86, i32* %87, i32* %88, i32 %89, i32 %90)
  %92 = load %struct.set_family**, %struct.set_family*** %6, align 8
  store %struct.set_family* %91, %struct.set_family** %92, align 8
  %93 = load %struct.set_family**, %struct.set_family*** %5, align 8
  %94 = load %struct.set_family*, %struct.set_family** %93, align 8
  %95 = getelementptr inbounds %struct.set_family, %struct.set_family* %94, i32 0, i32 3
  %96 = load i32, i32* %95, align 4
  %97 = sext i32 %96 to i64
  %98 = load i32**, i32*** %4, align 8
  %99 = getelementptr inbounds i32*, i32** %98, i64 1
  %100 = load i32*, i32** %99, align 8
  %101 = bitcast i32* %100 to i32**
  %102 = load i32**, i32*** %4, align 8
  %103 = ptrtoint i32** %101 to i64
  %104 = ptrtoint i32** %102 to i64
  %105 = sub i64 %103, %104
  %106 = sdiv exact i64 %105, 8
  %107 = sub nsw i64 %106, 3
  %108 = icmp sgt i64 %97, %107
  br i1 %108, label %109, label %115

109:                                              ; preds = %55
  %110 = load %struct.set_family**, %struct.set_family*** %5, align 8
  %111 = load %struct.set_family*, %struct.set_family** %110, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %111)
  %112 = load i32**, i32*** %4, align 8
  %113 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @cubeunlist to %struct.set_family* (i32**, ...)*)(i32** %112)
  %114 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %113, %struct.set_family** %114, align 8
  br label %115

115:                                              ; preds = %109, %55
  %116 = load i32*, i32** %7, align 8
  %117 = icmp ne i32* %116, null
  br i1 %117, label %118, label %121

118:                                              ; preds = %115
  %119 = load i32*, i32** %7, align 8
  %120 = bitcast i32* %119 to i8*
  call void @free(i8* %120) #7
  store i32* null, i32** %7, align 8
  br label %121

121:                                              ; preds = %118, %115
  %122 = load i32*, i32** %8, align 8
  %123 = icmp ne i32* %122, null
  br i1 %123, label %124, label %127

124:                                              ; preds = %121
  %125 = load i32*, i32** %8, align 8
  %126 = bitcast i32* %125 to i8*
  call void @free(i8* %126) #7
  store i32* null, i32** %8, align 8
  br label %127

127:                                              ; preds = %124, %121
  %128 = load i32**, i32*** %4, align 8
  %129 = getelementptr inbounds i32*, i32** %128, i64 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp ne i32* %130, null
  br i1 %131, label %132, label %139

132:                                              ; preds = %127
  %133 = load i32**, i32*** %4, align 8
  %134 = getelementptr inbounds i32*, i32** %133, i64 0
  %135 = load i32*, i32** %134, align 8
  %136 = bitcast i32* %135 to i8*
  call void @free(i8* %136) #7
  %137 = load i32**, i32*** %4, align 8
  %138 = getelementptr inbounds i32*, i32** %137, i64 0
  store i32* null, i32** %138, align 8
  br label %139

139:                                              ; preds = %132, %127
  %140 = load i32**, i32*** %4, align 8
  %141 = icmp ne i32** %140, null
  br i1 %141, label %142, label %145

142:                                              ; preds = %139
  %143 = load i32**, i32*** %4, align 8
  %144 = bitcast i32** %143 to i8*
  call void @free(i8* %144) #7
  store i32** null, i32*** %4, align 8
  br label %145

145:                                              ; preds = %142, %139
  br label %146

146:                                              ; preds = %145, %22
  %147 = load i32, i32* @debug, align 4
  %148 = and i32 %147, 1
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %150, label %159

150:                                              ; preds = %146
  %151 = load %struct.set_family**, %struct.set_family*** %5, align 8
  %152 = load %struct.set_family*, %struct.set_family** %151, align 8
  %153 = load i32, i32* @simp_comp.simplify_level, align 4
  call void (%struct.set_family*, i8*, i32, ...) bitcast (void (%struct.set_family*, i8*, i32)* @debug1_print to void (%struct.set_family*, i8*, i32, ...)*)(%struct.set_family* %152, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3.6, i64 0, i64 0), i32 %153)
  %154 = load %struct.set_family**, %struct.set_family*** %6, align 8
  %155 = load %struct.set_family*, %struct.set_family** %154, align 8
  %156 = load i32, i32* @simp_comp.simplify_level, align 4
  call void (%struct.set_family*, i8*, i32, ...) bitcast (void (%struct.set_family*, i8*, i32)* @debug1_print to void (%struct.set_family*, i8*, i32, ...)*)(%struct.set_family* %155, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i32 %156)
  %157 = load i32, i32* @simp_comp.simplify_level, align 4
  %158 = add nsw i32 %157, -1
  store i32 %158, i32* @simp_comp.simplify_level, align 4
  br label %159

159:                                              ; preds = %150, %146
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @simp_comp_special_cases(i32** %0, %struct.set_family** %1, %struct.set_family** %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32**, align 8
  %6 = alloca %struct.set_family**, align 8
  %7 = alloca %struct.set_family**, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca %struct.set_family*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i32** %0, i32*** %5, align 8
  store %struct.set_family** %1, %struct.set_family*** %6, align 8
  store %struct.set_family** %2, %struct.set_family*** %7, align 8
  %16 = load i32**, i32*** %5, align 8
  %17 = getelementptr inbounds i32*, i32** %16, i64 0
  %18 = load i32*, i32** %17, align 8
  store i32* %18, i32** %11, align 8
  %19 = load i32**, i32*** %5, align 8
  %20 = getelementptr inbounds i32*, i32** %19, i64 2
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %21, null
  br i1 %22, label %23, label %50

23:                                               ; preds = %3
  %24 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %25 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %24)
  %26 = load %struct.set_family**, %struct.set_family*** %6, align 8
  store %struct.set_family* %25, %struct.set_family** %26, align 8
  %27 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %28 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %27)
  %29 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %30 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %28, i32* %29)
  %31 = load %struct.set_family**, %struct.set_family*** %7, align 8
  store %struct.set_family* %30, %struct.set_family** %31, align 8
  %32 = load i32**, i32*** %5, align 8
  %33 = getelementptr inbounds i32*, i32** %32, i64 0
  %34 = load i32*, i32** %33, align 8
  %35 = icmp ne i32* %34, null
  br i1 %35, label %36, label %43

36:                                               ; preds = %23
  %37 = load i32**, i32*** %5, align 8
  %38 = getelementptr inbounds i32*, i32** %37, i64 0
  %39 = load i32*, i32** %38, align 8
  %40 = bitcast i32* %39 to i8*
  call void @free(i8* %40) #7
  %41 = load i32**, i32*** %5, align 8
  %42 = getelementptr inbounds i32*, i32** %41, i64 0
  store i32* null, i32** %42, align 8
  br label %43

43:                                               ; preds = %36, %23
  %44 = load i32**, i32*** %5, align 8
  %45 = icmp ne i32** %44, null
  br i1 %45, label %46, label %49

46:                                               ; preds = %43
  %47 = load i32**, i32*** %5, align 8
  %48 = bitcast i32** %47 to i8*
  call void @free(i8* %48) #7
  store i32** null, i32*** %5, align 8
  br label %49

49:                                               ; preds = %46, %43
  store i32 1, i32* %4, align 4
  br label %385

50:                                               ; preds = %3
  %51 = load i32**, i32*** %5, align 8
  %52 = getelementptr inbounds i32*, i32** %51, i64 3
  %53 = load i32*, i32** %52, align 8
  %54 = icmp eq i32* %53, null
  br i1 %54, label %55, label %88

55:                                               ; preds = %50
  %56 = load i32*, i32** %11, align 8
  %57 = load i32*, i32** %11, align 8
  %58 = load i32**, i32*** %5, align 8
  %59 = getelementptr inbounds i32*, i32** %58, i64 2
  %60 = load i32*, i32** %59, align 8
  %61 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %56, i32* %57, i32* %60)
  %62 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %63 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %62)
  %64 = load i32*, i32** %11, align 8
  %65 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %63, i32* %64)
  %66 = load %struct.set_family**, %struct.set_family*** %6, align 8
  store %struct.set_family* %65, %struct.set_family** %66, align 8
  %67 = load i32*, i32** %11, align 8
  %68 = call %struct.set_family* @compl_cube(i32* %67)
  %69 = load %struct.set_family**, %struct.set_family*** %7, align 8
  store %struct.set_family* %68, %struct.set_family** %69, align 8
  %70 = load i32**, i32*** %5, align 8
  %71 = getelementptr inbounds i32*, i32** %70, i64 0
  %72 = load i32*, i32** %71, align 8
  %73 = icmp ne i32* %72, null
  br i1 %73, label %74, label %81

74:                                               ; preds = %55
  %75 = load i32**, i32*** %5, align 8
  %76 = getelementptr inbounds i32*, i32** %75, i64 0
  %77 = load i32*, i32** %76, align 8
  %78 = bitcast i32* %77 to i8*
  call void @free(i8* %78) #7
  %79 = load i32**, i32*** %5, align 8
  %80 = getelementptr inbounds i32*, i32** %79, i64 0
  store i32* null, i32** %80, align 8
  br label %81

81:                                               ; preds = %74, %55
  %82 = load i32**, i32*** %5, align 8
  %83 = icmp ne i32** %82, null
  br i1 %83, label %84, label %87

84:                                               ; preds = %81
  %85 = load i32**, i32*** %5, align 8
  %86 = bitcast i32** %85 to i8*
  call void @free(i8* %86) #7
  store i32** null, i32*** %5, align 8
  br label %87

87:                                               ; preds = %84, %81
  store i32 1, i32* %4, align 4
  br label %385

88:                                               ; preds = %50
  %89 = load i32**, i32*** %5, align 8
  %90 = getelementptr inbounds i32*, i32** %89, i64 2
  store i32** %90, i32*** %8, align 8
  br label %91

91:                                               ; preds = %128, %88
  %92 = load i32**, i32*** %8, align 8
  %93 = getelementptr inbounds i32*, i32** %92, i32 1
  store i32** %93, i32*** %8, align 8
  %94 = load i32*, i32** %92, align 8
  store i32* %94, i32** %9, align 8
  %95 = icmp ne i32* %94, null
  br i1 %95, label %96, label %129

96:                                               ; preds = %91
  %97 = load i32*, i32** %9, align 8
  %98 = load i32*, i32** %11, align 8
  %99 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @full_row to i32 (i32*, i32*, ...)*)(i32* %97, i32* %98)
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %128

101:                                              ; preds = %96
  %102 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %103 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %102)
  %104 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %105 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %103, i32* %104)
  %106 = load %struct.set_family**, %struct.set_family*** %6, align 8
  store %struct.set_family* %105, %struct.set_family** %106, align 8
  %107 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %108 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %107)
  %109 = load %struct.set_family**, %struct.set_family*** %7, align 8
  store %struct.set_family* %108, %struct.set_family** %109, align 8
  %110 = load i32**, i32*** %5, align 8
  %111 = getelementptr inbounds i32*, i32** %110, i64 0
  %112 = load i32*, i32** %111, align 8
  %113 = icmp ne i32* %112, null
  br i1 %113, label %114, label %121

114:                                              ; preds = %101
  %115 = load i32**, i32*** %5, align 8
  %116 = getelementptr inbounds i32*, i32** %115, i64 0
  %117 = load i32*, i32** %116, align 8
  %118 = bitcast i32* %117 to i8*
  call void @free(i8* %118) #7
  %119 = load i32**, i32*** %5, align 8
  %120 = getelementptr inbounds i32*, i32** %119, i64 0
  store i32* null, i32** %120, align 8
  br label %121

121:                                              ; preds = %114, %101
  %122 = load i32**, i32*** %5, align 8
  %123 = icmp ne i32** %122, null
  br i1 %123, label %124, label %127

124:                                              ; preds = %121
  %125 = load i32**, i32*** %5, align 8
  %126 = bitcast i32** %125 to i8*
  call void @free(i8* %126) #7
  store i32** null, i32*** %5, align 8
  br label %127

127:                                              ; preds = %124, %121
  store i32 1, i32* %4, align 4
  br label %385

128:                                              ; preds = %96
  br label %91

129:                                              ; preds = %91
  %130 = load i32*, i32** %11, align 8
  %131 = getelementptr inbounds i32, i32* %130, i64 0
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, 1023
  %134 = mul i32 32, %133
  %135 = icmp ule i32 %134, 32
  br i1 %135, label %136, label %137

136:                                              ; preds = %129
  br label %147

137:                                              ; preds = %129
  %138 = load i32*, i32** %11, align 8
  %139 = getelementptr inbounds i32, i32* %138, i64 0
  %140 = load i32, i32* %139, align 4
  %141 = and i32 %140, 1023
  %142 = mul i32 32, %141
  %143 = sub i32 %142, 1
  %144 = lshr i32 %143, 5
  %145 = add i32 %144, 1
  %146 = add i32 %145, 1
  br label %147

147:                                              ; preds = %137, %136
  %148 = phi i32 [ 2, %136 ], [ %146, %137 ]
  %149 = zext i32 %148 to i64
  %150 = mul i64 4, %149
  %151 = call noalias i8* @malloc(i64 %150) #7
  %152 = bitcast i8* %151 to i32*
  %153 = load i32*, i32** %11, align 8
  %154 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %152, i32* %153)
  store i32* %154, i32** %10, align 8
  %155 = load i32**, i32*** %5, align 8
  %156 = getelementptr inbounds i32*, i32** %155, i64 2
  store i32** %156, i32*** %8, align 8
  br label %157

157:                                              ; preds = %196, %147
  %158 = load i32**, i32*** %8, align 8
  %159 = getelementptr inbounds i32*, i32** %158, i32 1
  store i32** %159, i32*** %8, align 8
  %160 = load i32*, i32** %158, align 8
  store i32* %160, i32** %9, align 8
  %161 = icmp ne i32* %160, null
  br i1 %161, label %162, label %197

162:                                              ; preds = %157
  %163 = load i32*, i32** %10, align 8
  %164 = getelementptr inbounds i32, i32* %163, i64 0
  %165 = load i32, i32* %164, align 4
  %166 = and i32 %165, 1023
  store i32 %166, i32* %14, align 4
  %167 = load i32*, i32** %10, align 8
  %168 = getelementptr inbounds i32, i32* %167, i64 0
  %169 = load i32, i32* %168, align 4
  %170 = and i32 %169, -1024
  store i32 %170, i32* %168, align 4
  %171 = load i32, i32* %14, align 4
  %172 = load i32*, i32** %10, align 8
  %173 = getelementptr inbounds i32, i32* %172, i64 0
  %174 = load i32, i32* %173, align 4
  %175 = or i32 %174, %171
  store i32 %175, i32* %173, align 4
  br label %176

176:                                              ; preds = %192, %162
  %177 = load i32*, i32** %10, align 8
  %178 = load i32, i32* %14, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i32, i32* %177, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = load i32*, i32** %9, align 8
  %183 = load i32, i32* %14, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i32, i32* %182, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = or i32 %181, %186
  %188 = load i32*, i32** %10, align 8
  %189 = load i32, i32* %14, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds i32, i32* %188, i64 %190
  store i32 %187, i32* %191, align 4
  br label %192

192:                                              ; preds = %176
  %193 = load i32, i32* %14, align 4
  %194 = add nsw i32 %193, -1
  store i32 %194, i32* %14, align 4
  %195 = icmp sgt i32 %194, 0
  br i1 %195, label %176, label %196

196:                                              ; preds = %192
  br label %157

197:                                              ; preds = %157
  %198 = load i32*, i32** %10, align 8
  %199 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %200 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_equal to i32 (i32*, i32*, ...)*)(i32* %198, i32* %199)
  %201 = icmp ne i32 %200, 0
  br i1 %201, label %311, label %202

202:                                              ; preds = %197
  %203 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %204 = icmp sle i32 %203, 32
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  br label %212

206:                                              ; preds = %202
  %207 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %208 = sub nsw i32 %207, 1
  %209 = ashr i32 %208, 5
  %210 = add nsw i32 %209, 1
  %211 = add nsw i32 %210, 1
  br label %212

212:                                              ; preds = %206, %205
  %213 = phi i32 [ 2, %205 ], [ %211, %206 ]
  %214 = sext i32 %213 to i64
  %215 = mul i64 4, %214
  %216 = call noalias i8* @malloc(i64 %215) #7
  %217 = bitcast i8* %216 to i32*
  %218 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %219 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %217, i32 %218)
  store i32* %219, i32** %9, align 8
  %220 = load i32*, i32** %9, align 8
  %221 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %222 = load i32*, i32** %10, align 8
  %223 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %220, i32* %221, i32* %222)
  %224 = load i32*, i32** %11, align 8
  %225 = load i32*, i32** %11, align 8
  %226 = load i32*, i32** %9, align 8
  %227 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %224, i32* %225, i32* %226)
  %228 = load i32*, i32** %9, align 8
  %229 = icmp ne i32* %228, null
  br i1 %229, label %230, label %233

230:                                              ; preds = %212
  %231 = load i32*, i32** %9, align 8
  %232 = bitcast i32* %231 to i8*
  call void @free(i8* %232) #7
  store i32* null, i32** %9, align 8
  br label %233

233:                                              ; preds = %230, %212
  %234 = load i32**, i32*** %5, align 8
  %235 = load %struct.set_family**, %struct.set_family*** %6, align 8
  %236 = load %struct.set_family**, %struct.set_family*** %7, align 8
  call void @simp_comp(i32** %234, %struct.set_family** %235, %struct.set_family** %236)
  %237 = load %struct.set_family**, %struct.set_family*** %6, align 8
  %238 = load %struct.set_family*, %struct.set_family** %237, align 8
  store %struct.set_family* %238, %struct.set_family** %13, align 8
  %239 = load %struct.set_family*, %struct.set_family** %13, align 8
  %240 = getelementptr inbounds %struct.set_family, %struct.set_family* %239, i32 0, i32 5
  %241 = load i32*, i32** %240, align 8
  store i32* %241, i32** %9, align 8
  %242 = load i32*, i32** %9, align 8
  %243 = load %struct.set_family*, %struct.set_family** %13, align 8
  %244 = getelementptr inbounds %struct.set_family, %struct.set_family* %243, i32 0, i32 3
  %245 = load i32, i32* %244, align 4
  %246 = load %struct.set_family*, %struct.set_family** %13, align 8
  %247 = getelementptr inbounds %struct.set_family, %struct.set_family* %246, i32 0, i32 0
  %248 = load i32, i32* %247, align 8
  %249 = mul nsw i32 %245, %248
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds i32, i32* %242, i64 %250
  store i32* %251, i32** %12, align 8
  br label %252

252:                                              ; preds = %291, %233
  %253 = load i32*, i32** %9, align 8
  %254 = load i32*, i32** %12, align 8
  %255 = icmp ult i32* %253, %254
  br i1 %255, label %256, label %298

256:                                              ; preds = %252
  %257 = load i32*, i32** %9, align 8
  %258 = getelementptr inbounds i32, i32* %257, i64 0
  %259 = load i32, i32* %258, align 4
  %260 = and i32 %259, 1023
  store i32 %260, i32* %15, align 4
  %261 = load i32*, i32** %9, align 8
  %262 = getelementptr inbounds i32, i32* %261, i64 0
  %263 = load i32, i32* %262, align 4
  %264 = and i32 %263, -1024
  store i32 %264, i32* %262, align 4
  %265 = load i32, i32* %15, align 4
  %266 = load i32*, i32** %9, align 8
  %267 = getelementptr inbounds i32, i32* %266, i64 0
  %268 = load i32, i32* %267, align 4
  %269 = or i32 %268, %265
  store i32 %269, i32* %267, align 4
  br label %270

270:                                              ; preds = %286, %256
  %271 = load i32*, i32** %9, align 8
  %272 = load i32, i32* %15, align 4
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds i32, i32* %271, i64 %273
  %275 = load i32, i32* %274, align 4
  %276 = load i32*, i32** %10, align 8
  %277 = load i32, i32* %15, align 4
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds i32, i32* %276, i64 %278
  %280 = load i32, i32* %279, align 4
  %281 = and i32 %275, %280
  %282 = load i32*, i32** %9, align 8
  %283 = load i32, i32* %15, align 4
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds i32, i32* %282, i64 %284
  store i32 %281, i32* %285, align 4
  br label %286

286:                                              ; preds = %270
  %287 = load i32, i32* %15, align 4
  %288 = add nsw i32 %287, -1
  store i32 %288, i32* %15, align 4
  %289 = icmp sgt i32 %288, 0
  br i1 %289, label %270, label %290

290:                                              ; preds = %286
  br label %291

291:                                              ; preds = %290
  %292 = load %struct.set_family*, %struct.set_family** %13, align 8
  %293 = getelementptr inbounds %struct.set_family, %struct.set_family* %292, i32 0, i32 0
  %294 = load i32, i32* %293, align 8
  %295 = load i32*, i32** %9, align 8
  %296 = sext i32 %294 to i64
  %297 = getelementptr inbounds i32, i32* %295, i64 %296
  store i32* %297, i32** %9, align 8
  br label %252

298:                                              ; preds = %252
  %299 = load %struct.set_family**, %struct.set_family*** %7, align 8
  %300 = load %struct.set_family*, %struct.set_family** %299, align 8
  %301 = load i32*, i32** %10, align 8
  %302 = call %struct.set_family* @compl_cube(i32* %301)
  %303 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_append to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %300, %struct.set_family* %302)
  %304 = load %struct.set_family**, %struct.set_family*** %7, align 8
  store %struct.set_family* %303, %struct.set_family** %304, align 8
  %305 = load i32*, i32** %10, align 8
  %306 = icmp ne i32* %305, null
  br i1 %306, label %307, label %310

307:                                              ; preds = %298
  %308 = load i32*, i32** %10, align 8
  %309 = bitcast i32* %308 to i8*
  call void @free(i8* %309) #7
  store i32* null, i32** %10, align 8
  br label %310

310:                                              ; preds = %307, %298
  store i32 1, i32* %4, align 4
  br label %385

311:                                              ; preds = %197
  %312 = load i32*, i32** %10, align 8
  %313 = icmp ne i32* %312, null
  br i1 %313, label %314, label %317

314:                                              ; preds = %311
  %315 = load i32*, i32** %10, align 8
  %316 = bitcast i32* %315 to i8*
  call void @free(i8* %316) #7
  store i32* null, i32** %10, align 8
  br label %317

317:                                              ; preds = %314, %311
  %318 = load i32**, i32*** %5, align 8
  call void (i32**, ...) bitcast (void (i32**)* @massive_count to void (i32**, ...)*)(i32** %318)
  %319 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 4), align 8
  %320 = icmp eq i32 %319, 1
  br i1 %320, label %321, label %348

321:                                              ; preds = %317
  %322 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %323 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %322)
  %324 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %325 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %323, i32* %324)
  %326 = load %struct.set_family**, %struct.set_family*** %6, align 8
  store %struct.set_family* %325, %struct.set_family** %326, align 8
  %327 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %328 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %327)
  %329 = load %struct.set_family**, %struct.set_family*** %7, align 8
  store %struct.set_family* %328, %struct.set_family** %329, align 8
  %330 = load i32**, i32*** %5, align 8
  %331 = getelementptr inbounds i32*, i32** %330, i64 0
  %332 = load i32*, i32** %331, align 8
  %333 = icmp ne i32* %332, null
  br i1 %333, label %334, label %341

334:                                              ; preds = %321
  %335 = load i32**, i32*** %5, align 8
  %336 = getelementptr inbounds i32*, i32** %335, i64 0
  %337 = load i32*, i32** %336, align 8
  %338 = bitcast i32* %337 to i8*
  call void @free(i8* %338) #7
  %339 = load i32**, i32*** %5, align 8
  %340 = getelementptr inbounds i32*, i32** %339, i64 0
  store i32* null, i32** %340, align 8
  br label %341

341:                                              ; preds = %334, %321
  %342 = load i32**, i32*** %5, align 8
  %343 = icmp ne i32** %342, null
  br i1 %343, label %344, label %347

344:                                              ; preds = %341
  %345 = load i32**, i32*** %5, align 8
  %346 = bitcast i32** %345 to i8*
  call void @free(i8* %346) #7
  store i32** null, i32*** %5, align 8
  br label %347

347:                                              ; preds = %344, %341
  store i32 1, i32* %4, align 4
  br label %385

348:                                              ; preds = %317
  %349 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 5), align 4
  %350 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 4), align 8
  %351 = icmp eq i32 %349, %350
  br i1 %351, label %352, label %384

352:                                              ; preds = %348
  %353 = load i32**, i32*** %5, align 8
  %354 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @cubeunlist to %struct.set_family* (i32**, ...)*)(i32** %353)
  store %struct.set_family* %354, %struct.set_family** %13, align 8
  %355 = load %struct.set_family*, %struct.set_family** %13, align 8
  %356 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %355)
  %357 = load %struct.set_family**, %struct.set_family*** %6, align 8
  store %struct.set_family* %356, %struct.set_family** %357, align 8
  %358 = load i32**, i32*** %5, align 8
  %359 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @map_cover_to_unate to %struct.set_family* (i32**, ...)*)(i32** %358)
  store %struct.set_family* %359, %struct.set_family** %13, align 8
  %360 = load %struct.set_family*, %struct.set_family** %13, align 8
  %361 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @unate_compl to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %360)
  store %struct.set_family* %361, %struct.set_family** %13, align 8
  %362 = load %struct.set_family*, %struct.set_family** %13, align 8
  %363 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @map_unate_to_cover to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %362)
  %364 = load %struct.set_family**, %struct.set_family*** %7, align 8
  store %struct.set_family* %363, %struct.set_family** %364, align 8
  %365 = load %struct.set_family*, %struct.set_family** %13, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %365)
  %366 = load i32**, i32*** %5, align 8
  %367 = getelementptr inbounds i32*, i32** %366, i64 0
  %368 = load i32*, i32** %367, align 8
  %369 = icmp ne i32* %368, null
  br i1 %369, label %370, label %377

370:                                              ; preds = %352
  %371 = load i32**, i32*** %5, align 8
  %372 = getelementptr inbounds i32*, i32** %371, i64 0
  %373 = load i32*, i32** %372, align 8
  %374 = bitcast i32* %373 to i8*
  call void @free(i8* %374) #7
  %375 = load i32**, i32*** %5, align 8
  %376 = getelementptr inbounds i32*, i32** %375, i64 0
  store i32* null, i32** %376, align 8
  br label %377

377:                                              ; preds = %370, %352
  %378 = load i32**, i32*** %5, align 8
  %379 = icmp ne i32** %378, null
  br i1 %379, label %380, label %383

380:                                              ; preds = %377
  %381 = load i32**, i32*** %5, align 8
  %382 = bitcast i32** %381 to i8*
  call void @free(i8* %382) #7
  store i32** null, i32*** %5, align 8
  br label %383

383:                                              ; preds = %380, %377
  store i32 1, i32* %4, align 4
  br label %385

384:                                              ; preds = %348
  store i32 2, i32* %4, align 4
  br label %385

385:                                              ; preds = %384, %383, %347, %310, %127, %87, %49
  %386 = load i32, i32* %4, align 4
  ret i32 %386
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @simplify(i32** %0) #0 {
  %2 = alloca i32**, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca i32, align 4
  store i32** %0, i32*** %2, align 8
  %10 = load i32, i32* @debug, align 4
  %11 = and i32 %10, 1
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = load i32**, i32*** %2, align 8
  %15 = load i32, i32* @simplify.simplify_level, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* @simplify.simplify_level, align 4
  call void (i32**, i8*, i32, ...) bitcast (void (i32**, i8*, i32)* @debug_print to void (i32**, i8*, i32, ...)*)(i32** %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i32 %15)
  br label %17

17:                                               ; preds = %13, %1
  %18 = load i32**, i32*** %2, align 8
  %19 = call i32 @simplify_special_cases(i32** %18, %struct.set_family** %6)
  %20 = icmp eq i32 %19, 2
  br i1 %20, label %21, label %128

21:                                               ; preds = %17
  %22 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %23 = icmp sle i32 %22, 32
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  br label %31

25:                                               ; preds = %21
  %26 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %27 = sub nsw i32 %26, 1
  %28 = ashr i32 %27, 5
  %29 = add nsw i32 %28, 1
  %30 = add nsw i32 %29, 1
  br label %31

31:                                               ; preds = %25, %24
  %32 = phi i32 [ 2, %24 ], [ %30, %25 ]
  %33 = sext i32 %32 to i64
  %34 = mul i64 4, %33
  %35 = call noalias i8* @malloc(i64 %34) #7
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %38 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %36, i32 %37)
  store i32* %38, i32** %3, align 8
  %39 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %40 = icmp sle i32 %39, 32
  br i1 %40, label %41, label %42

41:                                               ; preds = %31
  br label %48

42:                                               ; preds = %31
  %43 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %44 = sub nsw i32 %43, 1
  %45 = ashr i32 %44, 5
  %46 = add nsw i32 %45, 1
  %47 = add nsw i32 %46, 1
  br label %48

48:                                               ; preds = %42, %41
  %49 = phi i32 [ 2, %41 ], [ %47, %42 ]
  %50 = sext i32 %49 to i64
  %51 = mul i64 4, %50
  %52 = call noalias i8* @malloc(i64 %51) #7
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %55 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %53, i32 %54)
  store i32* %55, i32** %4, align 8
  %56 = load i32**, i32*** %2, align 8
  %57 = load i32*, i32** %3, align 8
  %58 = load i32*, i32** %4, align 8
  %59 = call i32 (i32**, i32*, i32*, i32, ...) bitcast (i32 (i32**, i32*, i32*, i32)* @binate_split_select to i32 (i32**, i32*, i32*, i32, ...)*)(i32** %56, i32* %57, i32* %58, i32 1)
  store i32 %59, i32* %5, align 4
  %60 = load i32**, i32*** %2, align 8
  %61 = load i32*, i32** %3, align 8
  %62 = load i32, i32* %5, align 4
  %63 = call i32** (i32**, i32*, i32, ...) bitcast (i32** (i32**, i32*, i32)* @scofactor to i32** (i32**, i32*, i32, ...)*)(i32** %60, i32* %61, i32 %62)
  %64 = call %struct.set_family* @simplify(i32** %63)
  store %struct.set_family* %64, %struct.set_family** %7, align 8
  %65 = load i32**, i32*** %2, align 8
  %66 = load i32*, i32** %4, align 8
  %67 = load i32, i32* %5, align 4
  %68 = call i32** (i32**, i32*, i32, ...) bitcast (i32** (i32**, i32*, i32)* @scofactor to i32** (i32**, i32*, i32, ...)*)(i32** %65, i32* %66, i32 %67)
  %69 = call %struct.set_family* @simplify(i32** %68)
  store %struct.set_family* %69, %struct.set_family** %8, align 8
  store i32 0, i32* %9, align 4
  %70 = load i32**, i32*** %2, align 8
  %71 = load %struct.set_family*, %struct.set_family** %7, align 8
  %72 = load %struct.set_family*, %struct.set_family** %8, align 8
  %73 = load i32*, i32** %3, align 8
  %74 = load i32*, i32** %4, align 8
  %75 = load i32, i32* %5, align 4
  %76 = load i32, i32* %9, align 4
  %77 = call %struct.set_family* @compl_merge(i32** %70, %struct.set_family* %71, %struct.set_family* %72, i32* %73, i32* %74, i32 %75, i32 %76)
  store %struct.set_family* %77, %struct.set_family** %6, align 8
  %78 = load %struct.set_family*, %struct.set_family** %6, align 8
  %79 = getelementptr inbounds %struct.set_family, %struct.set_family* %78, i32 0, i32 3
  %80 = load i32, i32* %79, align 4
  %81 = sext i32 %80 to i64
  %82 = load i32**, i32*** %2, align 8
  %83 = getelementptr inbounds i32*, i32** %82, i64 1
  %84 = load i32*, i32** %83, align 8
  %85 = bitcast i32* %84 to i32**
  %86 = load i32**, i32*** %2, align 8
  %87 = ptrtoint i32** %85 to i64
  %88 = ptrtoint i32** %86 to i64
  %89 = sub i64 %87, %88
  %90 = sdiv exact i64 %89, 8
  %91 = sub nsw i64 %90, 3
  %92 = icmp sgt i64 %81, %91
  br i1 %92, label %93, label %97

93:                                               ; preds = %48
  %94 = load %struct.set_family*, %struct.set_family** %6, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %94)
  %95 = load i32**, i32*** %2, align 8
  %96 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @cubeunlist to %struct.set_family* (i32**, ...)*)(i32** %95)
  store %struct.set_family* %96, %struct.set_family** %6, align 8
  br label %97

97:                                               ; preds = %93, %48
  %98 = load i32*, i32** %3, align 8
  %99 = icmp ne i32* %98, null
  br i1 %99, label %100, label %103

100:                                              ; preds = %97
  %101 = load i32*, i32** %3, align 8
  %102 = bitcast i32* %101 to i8*
  call void @free(i8* %102) #7
  store i32* null, i32** %3, align 8
  br label %103

103:                                              ; preds = %100, %97
  %104 = load i32*, i32** %4, align 8
  %105 = icmp ne i32* %104, null
  br i1 %105, label %106, label %109

106:                                              ; preds = %103
  %107 = load i32*, i32** %4, align 8
  %108 = bitcast i32* %107 to i8*
  call void @free(i8* %108) #7
  store i32* null, i32** %4, align 8
  br label %109

109:                                              ; preds = %106, %103
  %110 = load i32**, i32*** %2, align 8
  %111 = getelementptr inbounds i32*, i32** %110, i64 0
  %112 = load i32*, i32** %111, align 8
  %113 = icmp ne i32* %112, null
  br i1 %113, label %114, label %121

114:                                              ; preds = %109
  %115 = load i32**, i32*** %2, align 8
  %116 = getelementptr inbounds i32*, i32** %115, i64 0
  %117 = load i32*, i32** %116, align 8
  %118 = bitcast i32* %117 to i8*
  call void @free(i8* %118) #7
  %119 = load i32**, i32*** %2, align 8
  %120 = getelementptr inbounds i32*, i32** %119, i64 0
  store i32* null, i32** %120, align 8
  br label %121

121:                                              ; preds = %114, %109
  %122 = load i32**, i32*** %2, align 8
  %123 = icmp ne i32** %122, null
  br i1 %123, label %124, label %127

124:                                              ; preds = %121
  %125 = load i32**, i32*** %2, align 8
  %126 = bitcast i32** %125 to i8*
  call void @free(i8* %126) #7
  store i32** null, i32*** %2, align 8
  br label %127

127:                                              ; preds = %124, %121
  br label %128

128:                                              ; preds = %127, %17
  %129 = load i32, i32* @debug, align 4
  %130 = and i32 %129, 1
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %136

132:                                              ; preds = %128
  %133 = load %struct.set_family*, %struct.set_family** %6, align 8
  %134 = load i32, i32* @simplify.simplify_level, align 4
  %135 = add nsw i32 %134, -1
  store i32 %135, i32* @simplify.simplify_level, align 4
  call void (%struct.set_family*, i8*, i32, ...) bitcast (void (%struct.set_family*, i8*, i32)* @debug1_print to void (%struct.set_family*, i8*, i32, ...)*)(%struct.set_family* %133, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i32 %135)
  br label %136

136:                                              ; preds = %132, %128
  %137 = load %struct.set_family*, %struct.set_family** %6, align 8
  ret %struct.set_family* %137
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @simplify_special_cases(i32** %0, %struct.set_family** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32**, align 8
  %5 = alloca %struct.set_family**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca %struct.set_family*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32** %0, i32*** %4, align 8
  store %struct.set_family** %1, %struct.set_family*** %5, align 8
  %14 = load i32**, i32*** %4, align 8
  %15 = getelementptr inbounds i32*, i32** %14, i64 0
  %16 = load i32*, i32** %15, align 8
  store i32* %16, i32** %9, align 8
  %17 = load i32**, i32*** %4, align 8
  %18 = getelementptr inbounds i32*, i32** %17, i64 2
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %21, label %43

21:                                               ; preds = %2
  %22 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %23 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 0, i32 %22)
  %24 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %23, %struct.set_family** %24, align 8
  %25 = load i32**, i32*** %4, align 8
  %26 = getelementptr inbounds i32*, i32** %25, i64 0
  %27 = load i32*, i32** %26, align 8
  %28 = icmp ne i32* %27, null
  br i1 %28, label %29, label %36

29:                                               ; preds = %21
  %30 = load i32**, i32*** %4, align 8
  %31 = getelementptr inbounds i32*, i32** %30, i64 0
  %32 = load i32*, i32** %31, align 8
  %33 = bitcast i32* %32 to i8*
  call void @free(i8* %33) #7
  %34 = load i32**, i32*** %4, align 8
  %35 = getelementptr inbounds i32*, i32** %34, i64 0
  store i32* null, i32** %35, align 8
  br label %36

36:                                               ; preds = %29, %21
  %37 = load i32**, i32*** %4, align 8
  %38 = icmp ne i32** %37, null
  br i1 %38, label %39, label %42

39:                                               ; preds = %36
  %40 = load i32**, i32*** %4, align 8
  %41 = bitcast i32** %40 to i8*
  call void @free(i8* %41) #7
  store i32** null, i32*** %4, align 8
  br label %42

42:                                               ; preds = %39, %36
  store i32 1, i32* %3, align 4
  br label %353

43:                                               ; preds = %2
  %44 = load i32**, i32*** %4, align 8
  %45 = getelementptr inbounds i32*, i32** %44, i64 3
  %46 = load i32*, i32** %45, align 8
  %47 = icmp eq i32* %46, null
  br i1 %47, label %48, label %77

48:                                               ; preds = %43
  %49 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %50 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %49)
  %51 = load i32*, i32** %9, align 8
  %52 = load i32*, i32** %9, align 8
  %53 = load i32**, i32*** %4, align 8
  %54 = getelementptr inbounds i32*, i32** %53, i64 2
  %55 = load i32*, i32** %54, align 8
  %56 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %51, i32* %52, i32* %55)
  %57 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %50, i32* %56)
  %58 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %57, %struct.set_family** %58, align 8
  %59 = load i32**, i32*** %4, align 8
  %60 = getelementptr inbounds i32*, i32** %59, i64 0
  %61 = load i32*, i32** %60, align 8
  %62 = icmp ne i32* %61, null
  br i1 %62, label %63, label %70

63:                                               ; preds = %48
  %64 = load i32**, i32*** %4, align 8
  %65 = getelementptr inbounds i32*, i32** %64, i64 0
  %66 = load i32*, i32** %65, align 8
  %67 = bitcast i32* %66 to i8*
  call void @free(i8* %67) #7
  %68 = load i32**, i32*** %4, align 8
  %69 = getelementptr inbounds i32*, i32** %68, i64 0
  store i32* null, i32** %69, align 8
  br label %70

70:                                               ; preds = %63, %48
  %71 = load i32**, i32*** %4, align 8
  %72 = icmp ne i32** %71, null
  br i1 %72, label %73, label %76

73:                                               ; preds = %70
  %74 = load i32**, i32*** %4, align 8
  %75 = bitcast i32** %74 to i8*
  call void @free(i8* %75) #7
  store i32** null, i32*** %4, align 8
  br label %76

76:                                               ; preds = %73, %70
  store i32 1, i32* %3, align 4
  br label %353

77:                                               ; preds = %43
  %78 = load i32**, i32*** %4, align 8
  %79 = getelementptr inbounds i32*, i32** %78, i64 2
  store i32** %79, i32*** %6, align 8
  br label %80

80:                                               ; preds = %114, %77
  %81 = load i32**, i32*** %6, align 8
  %82 = getelementptr inbounds i32*, i32** %81, i32 1
  store i32** %82, i32*** %6, align 8
  %83 = load i32*, i32** %81, align 8
  store i32* %83, i32** %7, align 8
  %84 = icmp ne i32* %83, null
  br i1 %84, label %85, label %115

85:                                               ; preds = %80
  %86 = load i32*, i32** %7, align 8
  %87 = load i32*, i32** %9, align 8
  %88 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @full_row to i32 (i32*, i32*, ...)*)(i32* %86, i32* %87)
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %90, label %114

90:                                               ; preds = %85
  %91 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %92 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %91)
  %93 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %94 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %92, i32* %93)
  %95 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %94, %struct.set_family** %95, align 8
  %96 = load i32**, i32*** %4, align 8
  %97 = getelementptr inbounds i32*, i32** %96, i64 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp ne i32* %98, null
  br i1 %99, label %100, label %107

100:                                              ; preds = %90
  %101 = load i32**, i32*** %4, align 8
  %102 = getelementptr inbounds i32*, i32** %101, i64 0
  %103 = load i32*, i32** %102, align 8
  %104 = bitcast i32* %103 to i8*
  call void @free(i8* %104) #7
  %105 = load i32**, i32*** %4, align 8
  %106 = getelementptr inbounds i32*, i32** %105, i64 0
  store i32* null, i32** %106, align 8
  br label %107

107:                                              ; preds = %100, %90
  %108 = load i32**, i32*** %4, align 8
  %109 = icmp ne i32** %108, null
  br i1 %109, label %110, label %113

110:                                              ; preds = %107
  %111 = load i32**, i32*** %4, align 8
  %112 = bitcast i32** %111 to i8*
  call void @free(i8* %112) #7
  store i32** null, i32*** %4, align 8
  br label %113

113:                                              ; preds = %110, %107
  store i32 1, i32* %3, align 4
  br label %353

114:                                              ; preds = %85
  br label %80

115:                                              ; preds = %80
  %116 = load i32*, i32** %9, align 8
  %117 = getelementptr inbounds i32, i32* %116, i64 0
  %118 = load i32, i32* %117, align 4
  %119 = and i32 %118, 1023
  %120 = mul i32 32, %119
  %121 = icmp ule i32 %120, 32
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  br label %133

123:                                              ; preds = %115
  %124 = load i32*, i32** %9, align 8
  %125 = getelementptr inbounds i32, i32* %124, i64 0
  %126 = load i32, i32* %125, align 4
  %127 = and i32 %126, 1023
  %128 = mul i32 32, %127
  %129 = sub i32 %128, 1
  %130 = lshr i32 %129, 5
  %131 = add i32 %130, 1
  %132 = add i32 %131, 1
  br label %133

133:                                              ; preds = %123, %122
  %134 = phi i32 [ 2, %122 ], [ %132, %123 ]
  %135 = zext i32 %134 to i64
  %136 = mul i64 4, %135
  %137 = call noalias i8* @malloc(i64 %136) #7
  %138 = bitcast i8* %137 to i32*
  %139 = load i32*, i32** %9, align 8
  %140 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %138, i32* %139)
  store i32* %140, i32** %8, align 8
  %141 = load i32**, i32*** %4, align 8
  %142 = getelementptr inbounds i32*, i32** %141, i64 2
  store i32** %142, i32*** %6, align 8
  br label %143

143:                                              ; preds = %182, %133
  %144 = load i32**, i32*** %6, align 8
  %145 = getelementptr inbounds i32*, i32** %144, i32 1
  store i32** %145, i32*** %6, align 8
  %146 = load i32*, i32** %144, align 8
  store i32* %146, i32** %7, align 8
  %147 = icmp ne i32* %146, null
  br i1 %147, label %148, label %183

148:                                              ; preds = %143
  %149 = load i32*, i32** %8, align 8
  %150 = getelementptr inbounds i32, i32* %149, i64 0
  %151 = load i32, i32* %150, align 4
  %152 = and i32 %151, 1023
  store i32 %152, i32* %12, align 4
  %153 = load i32*, i32** %8, align 8
  %154 = getelementptr inbounds i32, i32* %153, i64 0
  %155 = load i32, i32* %154, align 4
  %156 = and i32 %155, -1024
  store i32 %156, i32* %154, align 4
  %157 = load i32, i32* %12, align 4
  %158 = load i32*, i32** %8, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 0
  %160 = load i32, i32* %159, align 4
  %161 = or i32 %160, %157
  store i32 %161, i32* %159, align 4
  br label %162

162:                                              ; preds = %178, %148
  %163 = load i32*, i32** %8, align 8
  %164 = load i32, i32* %12, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i32, i32* %163, i64 %165
  %167 = load i32, i32* %166, align 4
  %168 = load i32*, i32** %7, align 8
  %169 = load i32, i32* %12, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i32, i32* %168, i64 %170
  %172 = load i32, i32* %171, align 4
  %173 = or i32 %167, %172
  %174 = load i32*, i32** %8, align 8
  %175 = load i32, i32* %12, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i32, i32* %174, i64 %176
  store i32 %173, i32* %177, align 4
  br label %178

178:                                              ; preds = %162
  %179 = load i32, i32* %12, align 4
  %180 = add nsw i32 %179, -1
  store i32 %180, i32* %12, align 4
  %181 = icmp sgt i32 %180, 0
  br i1 %181, label %162, label %182

182:                                              ; preds = %178
  br label %143

183:                                              ; preds = %143
  %184 = load i32*, i32** %8, align 8
  %185 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %186 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_equal to i32 (i32*, i32*, ...)*)(i32* %184, i32* %185)
  %187 = icmp ne i32 %186, 0
  br i1 %187, label %290, label %188

188:                                              ; preds = %183
  %189 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %190 = icmp sle i32 %189, 32
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  br label %198

192:                                              ; preds = %188
  %193 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %194 = sub nsw i32 %193, 1
  %195 = ashr i32 %194, 5
  %196 = add nsw i32 %195, 1
  %197 = add nsw i32 %196, 1
  br label %198

198:                                              ; preds = %192, %191
  %199 = phi i32 [ 2, %191 ], [ %197, %192 ]
  %200 = sext i32 %199 to i64
  %201 = mul i64 4, %200
  %202 = call noalias i8* @malloc(i64 %201) #7
  %203 = bitcast i8* %202 to i32*
  %204 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %205 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %203, i32 %204)
  store i32* %205, i32** %7, align 8
  %206 = load i32*, i32** %7, align 8
  %207 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %208 = load i32*, i32** %8, align 8
  %209 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %206, i32* %207, i32* %208)
  %210 = load i32*, i32** %9, align 8
  %211 = load i32*, i32** %9, align 8
  %212 = load i32*, i32** %7, align 8
  %213 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %210, i32* %211, i32* %212)
  %214 = load i32*, i32** %7, align 8
  %215 = icmp ne i32* %214, null
  br i1 %215, label %216, label %219

216:                                              ; preds = %198
  %217 = load i32*, i32** %7, align 8
  %218 = bitcast i32* %217 to i8*
  call void @free(i8* %218) #7
  store i32* null, i32** %7, align 8
  br label %219

219:                                              ; preds = %216, %198
  %220 = load i32**, i32*** %4, align 8
  %221 = call %struct.set_family* @simplify(i32** %220)
  store %struct.set_family* %221, %struct.set_family** %11, align 8
  %222 = load %struct.set_family*, %struct.set_family** %11, align 8
  %223 = getelementptr inbounds %struct.set_family, %struct.set_family* %222, i32 0, i32 5
  %224 = load i32*, i32** %223, align 8
  store i32* %224, i32** %7, align 8
  %225 = load i32*, i32** %7, align 8
  %226 = load %struct.set_family*, %struct.set_family** %11, align 8
  %227 = getelementptr inbounds %struct.set_family, %struct.set_family* %226, i32 0, i32 3
  %228 = load i32, i32* %227, align 4
  %229 = load %struct.set_family*, %struct.set_family** %11, align 8
  %230 = getelementptr inbounds %struct.set_family, %struct.set_family* %229, i32 0, i32 0
  %231 = load i32, i32* %230, align 8
  %232 = mul nsw i32 %228, %231
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds i32, i32* %225, i64 %233
  store i32* %234, i32** %10, align 8
  br label %235

235:                                              ; preds = %274, %219
  %236 = load i32*, i32** %7, align 8
  %237 = load i32*, i32** %10, align 8
  %238 = icmp ult i32* %236, %237
  br i1 %238, label %239, label %281

239:                                              ; preds = %235
  %240 = load i32*, i32** %7, align 8
  %241 = getelementptr inbounds i32, i32* %240, i64 0
  %242 = load i32, i32* %241, align 4
  %243 = and i32 %242, 1023
  store i32 %243, i32* %13, align 4
  %244 = load i32*, i32** %7, align 8
  %245 = getelementptr inbounds i32, i32* %244, i64 0
  %246 = load i32, i32* %245, align 4
  %247 = and i32 %246, -1024
  store i32 %247, i32* %245, align 4
  %248 = load i32, i32* %13, align 4
  %249 = load i32*, i32** %7, align 8
  %250 = getelementptr inbounds i32, i32* %249, i64 0
  %251 = load i32, i32* %250, align 4
  %252 = or i32 %251, %248
  store i32 %252, i32* %250, align 4
  br label %253

253:                                              ; preds = %269, %239
  %254 = load i32*, i32** %7, align 8
  %255 = load i32, i32* %13, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds i32, i32* %254, i64 %256
  %258 = load i32, i32* %257, align 4
  %259 = load i32*, i32** %8, align 8
  %260 = load i32, i32* %13, align 4
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds i32, i32* %259, i64 %261
  %263 = load i32, i32* %262, align 4
  %264 = and i32 %258, %263
  %265 = load i32*, i32** %7, align 8
  %266 = load i32, i32* %13, align 4
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds i32, i32* %265, i64 %267
  store i32 %264, i32* %268, align 4
  br label %269

269:                                              ; preds = %253
  %270 = load i32, i32* %13, align 4
  %271 = add nsw i32 %270, -1
  store i32 %271, i32* %13, align 4
  %272 = icmp sgt i32 %271, 0
  br i1 %272, label %253, label %273

273:                                              ; preds = %269
  br label %274

274:                                              ; preds = %273
  %275 = load %struct.set_family*, %struct.set_family** %11, align 8
  %276 = getelementptr inbounds %struct.set_family, %struct.set_family* %275, i32 0, i32 0
  %277 = load i32, i32* %276, align 8
  %278 = load i32*, i32** %7, align 8
  %279 = sext i32 %277 to i64
  %280 = getelementptr inbounds i32, i32* %278, i64 %279
  store i32* %280, i32** %7, align 8
  br label %235

281:                                              ; preds = %235
  %282 = load %struct.set_family*, %struct.set_family** %11, align 8
  %283 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %282, %struct.set_family** %283, align 8
  %284 = load i32*, i32** %8, align 8
  %285 = icmp ne i32* %284, null
  br i1 %285, label %286, label %289

286:                                              ; preds = %281
  %287 = load i32*, i32** %8, align 8
  %288 = bitcast i32* %287 to i8*
  call void @free(i8* %288) #7
  store i32* null, i32** %8, align 8
  br label %289

289:                                              ; preds = %286, %281
  store i32 1, i32* %3, align 4
  br label %353

290:                                              ; preds = %183
  %291 = load i32*, i32** %8, align 8
  %292 = icmp ne i32* %291, null
  br i1 %292, label %293, label %296

293:                                              ; preds = %290
  %294 = load i32*, i32** %8, align 8
  %295 = bitcast i32* %294 to i8*
  call void @free(i8* %295) #7
  store i32* null, i32** %8, align 8
  br label %296

296:                                              ; preds = %293, %290
  %297 = load i32**, i32*** %4, align 8
  call void (i32**, ...) bitcast (void (i32**)* @massive_count to void (i32**, ...)*)(i32** %297)
  %298 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 4), align 8
  %299 = icmp eq i32 %298, 1
  br i1 %299, label %300, label %324

300:                                              ; preds = %296
  %301 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %302 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %301)
  %303 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %304 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %302, i32* %303)
  %305 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %304, %struct.set_family** %305, align 8
  %306 = load i32**, i32*** %4, align 8
  %307 = getelementptr inbounds i32*, i32** %306, i64 0
  %308 = load i32*, i32** %307, align 8
  %309 = icmp ne i32* %308, null
  br i1 %309, label %310, label %317

310:                                              ; preds = %300
  %311 = load i32**, i32*** %4, align 8
  %312 = getelementptr inbounds i32*, i32** %311, i64 0
  %313 = load i32*, i32** %312, align 8
  %314 = bitcast i32* %313 to i8*
  call void @free(i8* %314) #7
  %315 = load i32**, i32*** %4, align 8
  %316 = getelementptr inbounds i32*, i32** %315, i64 0
  store i32* null, i32** %316, align 8
  br label %317

317:                                              ; preds = %310, %300
  %318 = load i32**, i32*** %4, align 8
  %319 = icmp ne i32** %318, null
  br i1 %319, label %320, label %323

320:                                              ; preds = %317
  %321 = load i32**, i32*** %4, align 8
  %322 = bitcast i32** %321 to i8*
  call void @free(i8* %322) #7
  store i32** null, i32*** %4, align 8
  br label %323

323:                                              ; preds = %320, %317
  store i32 1, i32* %3, align 4
  br label %353

324:                                              ; preds = %296
  %325 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 5), align 4
  %326 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 4), align 8
  %327 = icmp eq i32 %325, %326
  br i1 %327, label %328, label %352

328:                                              ; preds = %324
  %329 = load i32**, i32*** %4, align 8
  %330 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @cubeunlist to %struct.set_family* (i32**, ...)*)(i32** %329)
  store %struct.set_family* %330, %struct.set_family** %11, align 8
  %331 = load %struct.set_family*, %struct.set_family** %11, align 8
  %332 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %331)
  %333 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %332, %struct.set_family** %333, align 8
  %334 = load i32**, i32*** %4, align 8
  %335 = getelementptr inbounds i32*, i32** %334, i64 0
  %336 = load i32*, i32** %335, align 8
  %337 = icmp ne i32* %336, null
  br i1 %337, label %338, label %345

338:                                              ; preds = %328
  %339 = load i32**, i32*** %4, align 8
  %340 = getelementptr inbounds i32*, i32** %339, i64 0
  %341 = load i32*, i32** %340, align 8
  %342 = bitcast i32* %341 to i8*
  call void @free(i8* %342) #7
  %343 = load i32**, i32*** %4, align 8
  %344 = getelementptr inbounds i32*, i32** %343, i64 0
  store i32* null, i32** %344, align 8
  br label %345

345:                                              ; preds = %338, %328
  %346 = load i32**, i32*** %4, align 8
  %347 = icmp ne i32** %346, null
  br i1 %347, label %348, label %351

348:                                              ; preds = %345
  %349 = load i32**, i32*** %4, align 8
  %350 = bitcast i32** %349 to i8*
  call void @free(i8* %350) #7
  store i32** null, i32*** %4, align 8
  br label %351

351:                                              ; preds = %348, %345
  store i32 1, i32* %3, align 4
  br label %353

352:                                              ; preds = %324
  store i32 2, i32* %3, align 4
  br label %353

353:                                              ; preds = %352, %351, %323, %289, %113, %76, %42
  %354 = load i32, i32* %3, align 4
  ret i32 %354
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_contain(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32**, align 8
  %5 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %6 = load %struct.set_family*, %struct.set_family** %2, align 8
  %7 = call i32** @sf_sort(%struct.set_family* %6, i32 (...)* bitcast (i32 (i32**, i32**)* @descend to i32 (...)*))
  store i32** %7, i32*** %4, align 8
  %8 = load i32**, i32*** %4, align 8
  %9 = call i32 @rm_equal(i32** %8, i32 (...)* bitcast (i32 (i32**, i32**)* @descend to i32 (...)*))
  store i32 %9, i32* %3, align 4
  %10 = load i32**, i32*** %4, align 8
  %11 = call i32 @rm_contain(i32** %10)
  store i32 %11, i32* %3, align 4
  %12 = load i32**, i32*** %4, align 8
  %13 = load i32, i32* %3, align 4
  %14 = load %struct.set_family*, %struct.set_family** %2, align 8
  %15 = getelementptr inbounds %struct.set_family, %struct.set_family* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = call %struct.set_family* @sf_unlist(i32** %12, i32 %13, i32 %16)
  store %struct.set_family* %17, %struct.set_family** %5, align 8
  %18 = load %struct.set_family*, %struct.set_family** %2, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %18)
  %19 = load %struct.set_family*, %struct.set_family** %5, align 8
  ret %struct.set_family* %19
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32** @sf_sort(%struct.set_family* %0, i32 (...)* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32 (...)*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32 (...)* %1, i32 (...)** %4, align 8
  %9 = load %struct.set_family*, %struct.set_family** %3, align 8
  %10 = getelementptr inbounds %struct.set_family, %struct.set_family* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, 1
  %13 = sext i32 %12 to i64
  %14 = mul i64 8, %13
  %15 = call noalias i8* @malloc(i64 %14) #7
  %16 = bitcast i8* %15 to i32**
  store i32** %16, i32*** %8, align 8
  store i32** %16, i32*** %7, align 8
  %17 = load %struct.set_family*, %struct.set_family** %3, align 8
  %18 = getelementptr inbounds %struct.set_family, %struct.set_family* %17, i32 0, i32 5
  %19 = load i32*, i32** %18, align 8
  store i32* %19, i32** %5, align 8
  %20 = load i32*, i32** %5, align 8
  %21 = load %struct.set_family*, %struct.set_family** %3, align 8
  %22 = getelementptr inbounds %struct.set_family, %struct.set_family* %21, i32 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = load %struct.set_family*, %struct.set_family** %3, align 8
  %25 = getelementptr inbounds %struct.set_family, %struct.set_family* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = mul nsw i32 %23, %26
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, i32* %20, i64 %28
  store i32* %29, i32** %6, align 8
  br label %30

30:                                               ; preds = %49, %2
  %31 = load i32*, i32** %5, align 8
  %32 = load i32*, i32** %6, align 8
  %33 = icmp ult i32* %31, %32
  br i1 %33, label %34, label %56

34:                                               ; preds = %30
  %35 = load i32*, i32** %5, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 0
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 65535
  store i32 %38, i32* %36, align 4
  %39 = load i32*, i32** %5, align 8
  %40 = call i32 (i32*, ...) bitcast (i32 (i32*)* @set_ord to i32 (i32*, ...)*)(i32* %39)
  %41 = shl i32 %40, 16
  %42 = load i32*, i32** %5, align 8
  %43 = getelementptr inbounds i32, i32* %42, i64 0
  %44 = load i32, i32* %43, align 4
  %45 = or i32 %44, %41
  store i32 %45, i32* %43, align 4
  %46 = load i32*, i32** %5, align 8
  %47 = load i32**, i32*** %7, align 8
  %48 = getelementptr inbounds i32*, i32** %47, i32 1
  store i32** %48, i32*** %7, align 8
  store i32* %46, i32** %47, align 8
  br label %49

49:                                               ; preds = %34
  %50 = load %struct.set_family*, %struct.set_family** %3, align 8
  %51 = getelementptr inbounds %struct.set_family, %struct.set_family* %50, i32 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = load i32*, i32** %5, align 8
  %54 = sext i32 %52 to i64
  %55 = getelementptr inbounds i32, i32* %53, i64 %54
  store i32* %55, i32** %5, align 8
  br label %30

56:                                               ; preds = %30
  %57 = load i32**, i32*** %7, align 8
  store i32* null, i32** %57, align 8
  %58 = load i32**, i32*** %8, align 8
  %59 = bitcast i32** %58 to i8*
  %60 = load %struct.set_family*, %struct.set_family** %3, align 8
  %61 = getelementptr inbounds %struct.set_family, %struct.set_family* %60, i32 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = load i32 (...)*, i32 (...)** %4, align 8
  %65 = bitcast i32 (...)* %64 to i32 (i8*, i8*)*
  call void @qsort(i8* %59, i64 %63, i64 8, i32 (i8*, i8*)* %65)
  %66 = load i32**, i32*** %8, align 8
  ret i32** %66
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @rm_equal(i32** %0, i32 (...)* %1) #0 {
  %3 = alloca i32**, align 8
  %4 = alloca i32 (...)*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %3, align 8
  store i32 (...)* %1, i32 (...)** %4, align 8
  %7 = load i32**, i32*** %3, align 8
  store i32** %7, i32*** %6, align 8
  %8 = load i32**, i32*** %3, align 8
  %9 = load i32*, i32** %8, align 8
  %10 = icmp ne i32* %9, null
  br i1 %10, label %11, label %43

11:                                               ; preds = %2
  %12 = load i32**, i32*** %3, align 8
  %13 = getelementptr inbounds i32*, i32** %12, i64 1
  store i32** %13, i32*** %5, align 8
  br label %14

14:                                               ; preds = %33, %11
  %15 = load i32**, i32*** %5, align 8
  %16 = load i32*, i32** %15, align 8
  %17 = icmp ne i32* %16, null
  br i1 %17, label %18, label %36

18:                                               ; preds = %14
  %19 = load i32 (...)*, i32 (...)** %4, align 8
  %20 = load i32**, i32*** %5, align 8
  %21 = load i32**, i32*** %5, align 8
  %22 = getelementptr inbounds i32*, i32** %21, i64 -1
  %23 = bitcast i32 (...)* %19 to i32 (i32**, i32**, ...)*
  %24 = call i32 (i32**, i32**, ...) %23(i32** %20, i32** %22)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %18
  %27 = load i32**, i32*** %5, align 8
  %28 = getelementptr inbounds i32*, i32** %27, i64 -1
  %29 = load i32*, i32** %28, align 8
  %30 = load i32**, i32*** %6, align 8
  %31 = getelementptr inbounds i32*, i32** %30, i32 1
  store i32** %31, i32*** %6, align 8
  store i32* %29, i32** %30, align 8
  br label %32

32:                                               ; preds = %26, %18
  br label %33

33:                                               ; preds = %32
  %34 = load i32**, i32*** %5, align 8
  %35 = getelementptr inbounds i32*, i32** %34, i32 1
  store i32** %35, i32*** %5, align 8
  br label %14

36:                                               ; preds = %14
  %37 = load i32**, i32*** %5, align 8
  %38 = getelementptr inbounds i32*, i32** %37, i64 -1
  %39 = load i32*, i32** %38, align 8
  %40 = load i32**, i32*** %6, align 8
  %41 = getelementptr inbounds i32*, i32** %40, i32 1
  store i32** %41, i32*** %6, align 8
  store i32* %39, i32** %40, align 8
  %42 = load i32**, i32*** %6, align 8
  store i32* null, i32** %42, align 8
  br label %43

43:                                               ; preds = %36, %2
  %44 = load i32**, i32*** %6, align 8
  %45 = load i32**, i32*** %3, align 8
  %46 = ptrtoint i32** %44 to i64
  %47 = ptrtoint i32** %45 to i64
  %48 = sub i64 %46, %47
  %49 = sdiv exact i64 %48, 8
  %50 = trunc i64 %49 to i32
  ret i32 %50
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @rm_contain(i32** %0) #0 {
  %2 = alloca i32**, align 8
  %3 = alloca i32**, align 8
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32** %0, i32*** %2, align 8
  %11 = load i32**, i32*** %2, align 8
  store i32** %11, i32*** %8, align 8
  store i32 -1, i32* %9, align 4
  %12 = load i32**, i32*** %2, align 8
  store i32** %12, i32*** %3, align 8
  br label %13

13:                                               ; preds = %74, %1
  %14 = load i32**, i32*** %3, align 8
  %15 = getelementptr inbounds i32*, i32** %14, i32 1
  store i32** %15, i32*** %3, align 8
  %16 = load i32*, i32** %14, align 8
  store i32* %16, i32** %6, align 8
  %17 = icmp ne i32* %16, null
  br i1 %17, label %18, label %75

18:                                               ; preds = %13
  %19 = load i32*, i32** %6, align 8
  %20 = getelementptr inbounds i32, i32* %19, i64 0
  %21 = load i32, i32* %20, align 4
  %22 = lshr i32 %21, 16
  %23 = load i32, i32* %9, align 4
  %24 = icmp ne i32 %22, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %18
  %26 = load i32*, i32** %6, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 0
  %28 = load i32, i32* %27, align 4
  %29 = lshr i32 %28, 16
  store i32 %29, i32* %9, align 4
  %30 = load i32**, i32*** %8, align 8
  store i32** %30, i32*** %5, align 8
  br label %31

31:                                               ; preds = %25, %18
  %32 = load i32**, i32*** %2, align 8
  store i32** %32, i32*** %4, align 8
  br label %33

33:                                               ; preds = %68, %31
  %34 = load i32**, i32*** %4, align 8
  %35 = load i32**, i32*** %5, align 8
  %36 = icmp ne i32** %34, %35
  br i1 %36, label %37, label %70

37:                                               ; preds = %33
  %38 = load i32**, i32*** %4, align 8
  %39 = getelementptr inbounds i32*, i32** %38, i32 1
  store i32** %39, i32*** %4, align 8
  %40 = load i32*, i32** %38, align 8
  store i32* %40, i32** %7, align 8
  %41 = load i32*, i32** %6, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 1023
  store i32 %44, i32* %10, align 4
  br label %45

45:                                               ; preds = %61, %37
  %46 = load i32*, i32** %6, align 8
  %47 = load i32, i32* %10, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, i32* %46, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = load i32*, i32** %7, align 8
  %52 = load i32, i32* %10, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, i32* %51, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = xor i32 %55, -1
  %57 = and i32 %50, %56
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %45
  br label %65

60:                                               ; preds = %45
  br label %61

61:                                               ; preds = %60
  %62 = load i32, i32* %10, align 4
  %63 = add nsw i32 %62, -1
  store i32 %63, i32* %10, align 4
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %45, label %65

65:                                               ; preds = %61, %59
  %66 = load i32, i32* %10, align 4
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  br label %33

69:                                               ; preds = %65
  br label %74

70:                                               ; preds = %33
  %71 = load i32*, i32** %6, align 8
  %72 = load i32**, i32*** %8, align 8
  %73 = getelementptr inbounds i32*, i32** %72, i32 1
  store i32** %73, i32*** %8, align 8
  store i32* %71, i32** %72, align 8
  br label %74

74:                                               ; preds = %70, %69
  br label %13

75:                                               ; preds = %13
  %76 = load i32**, i32*** %8, align 8
  store i32* null, i32** %76, align 8
  %77 = load i32**, i32*** %8, align 8
  %78 = load i32**, i32*** %2, align 8
  %79 = ptrtoint i32** %77 to i64
  %80 = ptrtoint i32** %78 to i64
  %81 = sub i64 %79, %80
  %82 = sdiv exact i64 %81, 8
  %83 = trunc i64 %82 to i32
  ret i32 %83
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_unlist(i32** %0, i32 %1, i32 %2) #0 {
  %4 = alloca i32**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32**, align 8
  %10 = alloca %struct.set_family*, align 8
  %11 = alloca i32, align 4
  store i32** %0, i32*** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %12 = load i32, i32* %5, align 4
  %13 = load i32, i32* %6, align 4
  %14 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %12, i32 %13)
  store %struct.set_family* %14, %struct.set_family** %10, align 8
  %15 = load i32, i32* %5, align 4
  %16 = load %struct.set_family*, %struct.set_family** %10, align 8
  %17 = getelementptr inbounds %struct.set_family, %struct.set_family* %16, i32 0, i32 3
  store i32 %15, i32* %17, align 4
  %18 = load %struct.set_family*, %struct.set_family** %10, align 8
  %19 = getelementptr inbounds %struct.set_family, %struct.set_family* %18, i32 0, i32 5
  %20 = load i32*, i32** %19, align 8
  store i32* %20, i32** %7, align 8
  %21 = load i32**, i32*** %4, align 8
  store i32** %21, i32*** %9, align 8
  br label %22

22:                                               ; preds = %47, %3
  %23 = load i32**, i32*** %9, align 8
  %24 = getelementptr inbounds i32*, i32** %23, i32 1
  store i32** %24, i32*** %9, align 8
  %25 = load i32*, i32** %23, align 8
  store i32* %25, i32** %8, align 8
  %26 = icmp ne i32* %25, null
  br i1 %26, label %27, label %54

27:                                               ; preds = %22
  %28 = load i32*, i32** %8, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 0
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 1023
  store i32 %31, i32* %11, align 4
  br label %32

32:                                               ; preds = %42, %27
  %33 = load i32*, i32** %8, align 8
  %34 = load i32, i32* %11, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %33, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = load i32*, i32** %7, align 8
  %39 = load i32, i32* %11, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32, i32* %38, i64 %40
  store i32 %37, i32* %41, align 4
  br label %42

42:                                               ; preds = %32
  %43 = load i32, i32* %11, align 4
  %44 = add nsw i32 %43, -1
  store i32 %44, i32* %11, align 4
  %45 = icmp sge i32 %44, 0
  br i1 %45, label %32, label %46

46:                                               ; preds = %42
  br label %47

47:                                               ; preds = %46
  %48 = load %struct.set_family*, %struct.set_family** %10, align 8
  %49 = getelementptr inbounds %struct.set_family, %struct.set_family* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = load i32*, i32** %7, align 8
  %52 = sext i32 %50 to i64
  %53 = getelementptr inbounds i32, i32* %51, i64 %52
  store i32* %53, i32** %7, align 8
  br label %22

54:                                               ; preds = %22
  %55 = load i32**, i32*** %4, align 8
  %56 = icmp ne i32** %55, null
  br i1 %56, label %57, label %60

57:                                               ; preds = %54
  %58 = load i32**, i32*** %4, align 8
  %59 = bitcast i32** %58 to i8*
  call void @free(i8* %59) #7
  store i32** null, i32*** %4, align 8
  br label %60

60:                                               ; preds = %57, %54
  %61 = load %struct.set_family*, %struct.set_family** %10, align 8
  ret %struct.set_family* %61
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_rev_contain(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32**, align 8
  %5 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %6 = load %struct.set_family*, %struct.set_family** %2, align 8
  %7 = call i32** @sf_sort(%struct.set_family* %6, i32 (...)* bitcast (i32 (i32**, i32**)* @ascend to i32 (...)*))
  store i32** %7, i32*** %4, align 8
  %8 = load i32**, i32*** %4, align 8
  %9 = call i32 @rm_equal(i32** %8, i32 (...)* bitcast (i32 (i32**, i32**)* @ascend to i32 (...)*))
  store i32 %9, i32* %3, align 4
  %10 = load i32**, i32*** %4, align 8
  %11 = call i32 @rm_rev_contain(i32** %10)
  store i32 %11, i32* %3, align 4
  %12 = load i32**, i32*** %4, align 8
  %13 = load i32, i32* %3, align 4
  %14 = load %struct.set_family*, %struct.set_family** %2, align 8
  %15 = getelementptr inbounds %struct.set_family, %struct.set_family* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = call %struct.set_family* @sf_unlist(i32** %12, i32 %13, i32 %16)
  store %struct.set_family* %17, %struct.set_family** %5, align 8
  %18 = load %struct.set_family*, %struct.set_family** %2, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %18)
  %19 = load %struct.set_family*, %struct.set_family** %5, align 8
  ret %struct.set_family* %19
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @rm_rev_contain(i32** %0) #0 {
  %2 = alloca i32**, align 8
  %3 = alloca i32**, align 8
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32** %0, i32*** %2, align 8
  %11 = load i32**, i32*** %2, align 8
  store i32** %11, i32*** %8, align 8
  store i32 -1, i32* %9, align 4
  %12 = load i32**, i32*** %2, align 8
  store i32** %12, i32*** %3, align 8
  br label %13

13:                                               ; preds = %74, %1
  %14 = load i32**, i32*** %3, align 8
  %15 = getelementptr inbounds i32*, i32** %14, i32 1
  store i32** %15, i32*** %3, align 8
  %16 = load i32*, i32** %14, align 8
  store i32* %16, i32** %6, align 8
  %17 = icmp ne i32* %16, null
  br i1 %17, label %18, label %75

18:                                               ; preds = %13
  %19 = load i32*, i32** %6, align 8
  %20 = getelementptr inbounds i32, i32* %19, i64 0
  %21 = load i32, i32* %20, align 4
  %22 = lshr i32 %21, 16
  %23 = load i32, i32* %9, align 4
  %24 = icmp ne i32 %22, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %18
  %26 = load i32*, i32** %6, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 0
  %28 = load i32, i32* %27, align 4
  %29 = lshr i32 %28, 16
  store i32 %29, i32* %9, align 4
  %30 = load i32**, i32*** %8, align 8
  store i32** %30, i32*** %5, align 8
  br label %31

31:                                               ; preds = %25, %18
  %32 = load i32**, i32*** %2, align 8
  store i32** %32, i32*** %4, align 8
  br label %33

33:                                               ; preds = %68, %31
  %34 = load i32**, i32*** %4, align 8
  %35 = load i32**, i32*** %5, align 8
  %36 = icmp ne i32** %34, %35
  br i1 %36, label %37, label %70

37:                                               ; preds = %33
  %38 = load i32**, i32*** %4, align 8
  %39 = getelementptr inbounds i32*, i32** %38, i32 1
  store i32** %39, i32*** %4, align 8
  %40 = load i32*, i32** %38, align 8
  store i32* %40, i32** %7, align 8
  %41 = load i32*, i32** %7, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 1023
  store i32 %44, i32* %10, align 4
  br label %45

45:                                               ; preds = %61, %37
  %46 = load i32*, i32** %7, align 8
  %47 = load i32, i32* %10, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, i32* %46, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = load i32*, i32** %6, align 8
  %52 = load i32, i32* %10, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, i32* %51, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = xor i32 %55, -1
  %57 = and i32 %50, %56
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %45
  br label %65

60:                                               ; preds = %45
  br label %61

61:                                               ; preds = %60
  %62 = load i32, i32* %10, align 4
  %63 = add nsw i32 %62, -1
  store i32 %63, i32* %10, align 4
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %45, label %65

65:                                               ; preds = %61, %59
  %66 = load i32, i32* %10, align 4
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  br label %33

69:                                               ; preds = %65
  br label %74

70:                                               ; preds = %33
  %71 = load i32*, i32** %6, align 8
  %72 = load i32**, i32*** %8, align 8
  %73 = getelementptr inbounds i32*, i32** %72, i32 1
  store i32** %73, i32*** %8, align 8
  store i32* %71, i32** %72, align 8
  br label %74

74:                                               ; preds = %70, %69
  br label %13

75:                                               ; preds = %13
  %76 = load i32**, i32*** %8, align 8
  store i32* null, i32** %76, align 8
  %77 = load i32**, i32*** %8, align 8
  %78 = load i32**, i32*** %2, align 8
  %79 = ptrtoint i32** %77 to i64
  %80 = ptrtoint i32** %78 to i64
  %81 = sub i64 %79, %80
  %82 = sdiv exact i64 %81, 8
  %83 = trunc i64 %82 to i32
  ret i32 %83
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_ind_contain(%struct.set_family* %0, i32* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32**, align 8
  %7 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32* %1, i32** %4, align 8
  %8 = load %struct.set_family*, %struct.set_family** %3, align 8
  %9 = call i32** @sf_sort(%struct.set_family* %8, i32 (...)* bitcast (i32 (i32**, i32**)* @descend to i32 (...)*))
  store i32** %9, i32*** %6, align 8
  %10 = load i32**, i32*** %6, align 8
  %11 = call i32 @rm_equal(i32** %10, i32 (...)* bitcast (i32 (i32**, i32**)* @descend to i32 (...)*))
  store i32 %11, i32* %5, align 4
  %12 = load i32**, i32*** %6, align 8
  %13 = call i32 @rm_contain(i32** %12)
  store i32 %13, i32* %5, align 4
  %14 = load i32**, i32*** %6, align 8
  %15 = load i32, i32* %5, align 4
  %16 = load %struct.set_family*, %struct.set_family** %3, align 8
  %17 = getelementptr inbounds %struct.set_family, %struct.set_family* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = load i32*, i32** %4, align 8
  %20 = load %struct.set_family*, %struct.set_family** %3, align 8
  %21 = getelementptr inbounds %struct.set_family, %struct.set_family* %20, i32 0, i32 5
  %22 = load i32*, i32** %21, align 8
  %23 = call %struct.set_family* @sf_ind_unlist(i32** %14, i32 %15, i32 %18, i32* %19, i32* %22)
  store %struct.set_family* %23, %struct.set_family** %7, align 8
  %24 = load %struct.set_family*, %struct.set_family** %3, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %24)
  %25 = load %struct.set_family*, %struct.set_family** %7, align 8
  ret %struct.set_family* %25
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_ind_unlist(i32** %0, i32 %1, i32 %2, i32* %3, i32* %4) #0 {
  %6 = alloca i32**, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32**, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32*, align 8
  %16 = alloca %struct.set_family*, align 8
  %17 = alloca i32, align 4
  store i32** %0, i32*** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32* %3, i32** %9, align 8
  store i32* %4, i32** %10, align 8
  %18 = load i32, i32* %7, align 4
  %19 = load i32, i32* %8, align 4
  %20 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %18, i32 %19)
  store %struct.set_family* %20, %struct.set_family** %16, align 8
  %21 = load i32, i32* %7, align 4
  %22 = load %struct.set_family*, %struct.set_family** %16, align 8
  %23 = getelementptr inbounds %struct.set_family, %struct.set_family* %22, i32 0, i32 3
  store i32 %21, i32* %23, align 4
  %24 = load i32, i32* %7, align 4
  %25 = sext i32 %24 to i64
  %26 = mul i64 4, %25
  %27 = call noalias i8* @malloc(i64 %26) #7
  %28 = bitcast i8* %27 to i32*
  store i32* %28, i32** %15, align 8
  %29 = load %struct.set_family*, %struct.set_family** %16, align 8
  %30 = getelementptr inbounds %struct.set_family, %struct.set_family* %29, i32 0, i32 5
  %31 = load i32*, i32** %30, align 8
  store i32* %31, i32** %11, align 8
  %32 = load i32**, i32*** %6, align 8
  store i32** %32, i32*** %13, align 8
  store i32 0, i32* %14, align 4
  br label %33

33:                                               ; preds = %76, %5
  %34 = load i32**, i32*** %13, align 8
  %35 = getelementptr inbounds i32*, i32** %34, i32 1
  store i32** %35, i32*** %13, align 8
  %36 = load i32*, i32** %34, align 8
  store i32* %36, i32** %12, align 8
  %37 = icmp ne i32* %36, null
  br i1 %37, label %38, label %85

38:                                               ; preds = %33
  %39 = load i32*, i32** %12, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 0
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, 1023
  store i32 %42, i32* %17, align 4
  br label %43

43:                                               ; preds = %53, %38
  %44 = load i32*, i32** %12, align 8
  %45 = load i32, i32* %17, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i32, i32* %44, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = load i32*, i32** %11, align 8
  %50 = load i32, i32* %17, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, i32* %49, i64 %51
  store i32 %48, i32* %52, align 4
  br label %53

53:                                               ; preds = %43
  %54 = load i32, i32* %17, align 4
  %55 = add nsw i32 %54, -1
  store i32 %55, i32* %17, align 4
  %56 = icmp sge i32 %55, 0
  br i1 %56, label %43, label %57

57:                                               ; preds = %53
  %58 = load i32*, i32** %9, align 8
  %59 = load i32*, i32** %12, align 8
  %60 = load i32*, i32** %10, align 8
  %61 = ptrtoint i32* %59 to i64
  %62 = ptrtoint i32* %60 to i64
  %63 = sub i64 %61, %62
  %64 = sdiv exact i64 %63, 4
  %65 = load %struct.set_family*, %struct.set_family** %16, align 8
  %66 = getelementptr inbounds %struct.set_family, %struct.set_family* %65, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = sext i32 %67 to i64
  %69 = sdiv i64 %64, %68
  %70 = getelementptr inbounds i32, i32* %58, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = load i32*, i32** %15, align 8
  %73 = load i32, i32* %14, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, i32* %72, i64 %74
  store i32 %71, i32* %75, align 4
  br label %76

76:                                               ; preds = %57
  %77 = load %struct.set_family*, %struct.set_family** %16, align 8
  %78 = getelementptr inbounds %struct.set_family, %struct.set_family* %77, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = load i32*, i32** %11, align 8
  %81 = sext i32 %79 to i64
  %82 = getelementptr inbounds i32, i32* %80, i64 %81
  store i32* %82, i32** %11, align 8
  %83 = load i32, i32* %14, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %14, align 4
  br label %33

85:                                               ; preds = %33
  store i32 0, i32* %14, align 4
  br label %86

86:                                               ; preds = %100, %85
  %87 = load i32, i32* %14, align 4
  %88 = load i32, i32* %7, align 4
  %89 = icmp slt i32 %87, %88
  br i1 %89, label %90, label %103

90:                                               ; preds = %86
  %91 = load i32*, i32** %15, align 8
  %92 = load i32, i32* %14, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i32, i32* %91, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = load i32*, i32** %9, align 8
  %97 = load i32, i32* %14, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, i32* %96, i64 %98
  store i32 %95, i32* %99, align 4
  br label %100

100:                                              ; preds = %90
  %101 = load i32, i32* %14, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %14, align 4
  br label %86

103:                                              ; preds = %86
  %104 = load i32*, i32** %15, align 8
  %105 = icmp ne i32* %104, null
  br i1 %105, label %106, label %109

106:                                              ; preds = %103
  %107 = load i32*, i32** %15, align 8
  %108 = bitcast i32* %107 to i8*
  call void @free(i8* %108) #7
  store i32* null, i32** %15, align 8
  br label %109

109:                                              ; preds = %106, %103
  %110 = load i32**, i32*** %6, align 8
  %111 = icmp ne i32** %110, null
  br i1 %111, label %112, label %115

112:                                              ; preds = %109
  %113 = load i32**, i32*** %6, align 8
  %114 = bitcast i32** %113 to i8*
  call void @free(i8* %114) #7
  store i32** null, i32*** %6, align 8
  br label %115

115:                                              ; preds = %112, %109
  %116 = load %struct.set_family*, %struct.set_family** %16, align 8
  ret %struct.set_family* %116
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_dupl(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32**, align 8
  %5 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %6 = load %struct.set_family*, %struct.set_family** %2, align 8
  %7 = call i32** @sf_sort(%struct.set_family* %6, i32 (...)* bitcast (i32 (i32**, i32**)* @descend to i32 (...)*))
  store i32** %7, i32*** %4, align 8
  %8 = load i32**, i32*** %4, align 8
  %9 = call i32 @rm_equal(i32** %8, i32 (...)* bitcast (i32 (i32**, i32**)* @descend to i32 (...)*))
  store i32 %9, i32* %3, align 4
  %10 = load i32**, i32*** %4, align 8
  %11 = load i32, i32* %3, align 4
  %12 = load %struct.set_family*, %struct.set_family** %2, align 8
  %13 = getelementptr inbounds %struct.set_family, %struct.set_family* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = call %struct.set_family* @sf_unlist(i32** %10, i32 %11, i32 %14)
  store %struct.set_family* %15, %struct.set_family** %5, align 8
  %16 = load %struct.set_family*, %struct.set_family** %2, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %16)
  %17 = load %struct.set_family*, %struct.set_family** %5, align 8
  ret %struct.set_family* %17
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_union(%struct.set_family* %0, %struct.set_family* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32**, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  %10 = load %struct.set_family*, %struct.set_family** %3, align 8
  %11 = call i32** @sf_list(%struct.set_family* %10)
  store i32** %11, i32*** %7, align 8
  %12 = load %struct.set_family*, %struct.set_family** %4, align 8
  %13 = call i32** @sf_list(%struct.set_family* %12)
  store i32** %13, i32*** %8, align 8
  %14 = load %struct.set_family*, %struct.set_family** %3, align 8
  %15 = getelementptr inbounds %struct.set_family, %struct.set_family* %14, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = load %struct.set_family*, %struct.set_family** %4, align 8
  %18 = getelementptr inbounds %struct.set_family, %struct.set_family* %17, i32 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %16, %19
  br i1 %20, label %21, label %25

21:                                               ; preds = %2
  %22 = load %struct.set_family*, %struct.set_family** %3, align 8
  %23 = getelementptr inbounds %struct.set_family, %struct.set_family* %22, i32 0, i32 3
  %24 = load i32, i32* %23, align 4
  br label %29

25:                                               ; preds = %2
  %26 = load %struct.set_family*, %struct.set_family** %4, align 8
  %27 = getelementptr inbounds %struct.set_family, %struct.set_family* %26, i32 0, i32 3
  %28 = load i32, i32* %27, align 4
  br label %29

29:                                               ; preds = %25, %21
  %30 = phi i32 [ %24, %21 ], [ %28, %25 ]
  %31 = add nsw i32 %30, 1
  %32 = sext i32 %31 to i64
  %33 = mul i64 8, %32
  %34 = call noalias i8* @malloc(i64 %33) #7
  %35 = bitcast i8* %34 to i32**
  store i32** %35, i32*** %9, align 8
  %36 = load i32**, i32*** %7, align 8
  %37 = load i32**, i32*** %8, align 8
  %38 = load i32**, i32*** %9, align 8
  %39 = call i32 @rm2_equal(i32** %36, i32** %37, i32** %38, i32 (...)* bitcast (i32 (i32**, i32**)* @descend to i32 (...)*))
  store i32 %39, i32* %5, align 4
  %40 = load i32**, i32*** %7, align 8
  %41 = load i32**, i32*** %8, align 8
  %42 = call i32 @rm2_contain(i32** %40, i32** %41)
  %43 = load i32**, i32*** %8, align 8
  %44 = load i32**, i32*** %7, align 8
  %45 = call i32 @rm2_contain(i32** %43, i32** %44)
  %46 = add nsw i32 %42, %45
  %47 = load i32, i32* %5, align 4
  %48 = add nsw i32 %47, %46
  store i32 %48, i32* %5, align 4
  %49 = load i32**, i32*** %7, align 8
  %50 = load i32**, i32*** %8, align 8
  %51 = load i32**, i32*** %9, align 8
  %52 = load i32, i32* %5, align 4
  %53 = load %struct.set_family*, %struct.set_family** %3, align 8
  %54 = getelementptr inbounds %struct.set_family, %struct.set_family* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = call %struct.set_family* @sf_merge(i32** %49, i32** %50, i32** %51, i32 %52, i32 %55)
  store %struct.set_family* %56, %struct.set_family** %6, align 8
  %57 = load %struct.set_family*, %struct.set_family** %3, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %57)
  %58 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %58)
  %59 = load %struct.set_family*, %struct.set_family** %6, align 8
  ret %struct.set_family* %59
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32** @sf_list(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %7 = load %struct.set_family*, %struct.set_family** %2, align 8
  %8 = getelementptr inbounds %struct.set_family, %struct.set_family* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, 1
  %11 = sext i32 %10 to i64
  %12 = mul i64 8, %11
  %13 = call noalias i8* @malloc(i64 %12) #7
  %14 = bitcast i8* %13 to i32**
  store i32** %14, i32*** %6, align 8
  store i32** %14, i32*** %5, align 8
  %15 = load %struct.set_family*, %struct.set_family** %2, align 8
  %16 = getelementptr inbounds %struct.set_family, %struct.set_family* %15, i32 0, i32 5
  %17 = load i32*, i32** %16, align 8
  store i32* %17, i32** %3, align 8
  %18 = load i32*, i32** %3, align 8
  %19 = load %struct.set_family*, %struct.set_family** %2, align 8
  %20 = getelementptr inbounds %struct.set_family, %struct.set_family* %19, i32 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = load %struct.set_family*, %struct.set_family** %2, align 8
  %23 = getelementptr inbounds %struct.set_family, %struct.set_family* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = mul nsw i32 %21, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %18, i64 %26
  store i32* %27, i32** %4, align 8
  br label %28

28:                                               ; preds = %36, %1
  %29 = load i32*, i32** %3, align 8
  %30 = load i32*, i32** %4, align 8
  %31 = icmp ult i32* %29, %30
  br i1 %31, label %32, label %43

32:                                               ; preds = %28
  %33 = load i32*, i32** %3, align 8
  %34 = load i32**, i32*** %5, align 8
  %35 = getelementptr inbounds i32*, i32** %34, i32 1
  store i32** %35, i32*** %5, align 8
  store i32* %33, i32** %34, align 8
  br label %36

36:                                               ; preds = %32
  %37 = load %struct.set_family*, %struct.set_family** %2, align 8
  %38 = getelementptr inbounds %struct.set_family, %struct.set_family* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = load i32*, i32** %3, align 8
  %41 = sext i32 %39 to i64
  %42 = getelementptr inbounds i32, i32* %40, i64 %41
  store i32* %42, i32** %3, align 8
  br label %28

43:                                               ; preds = %28
  %44 = load i32**, i32*** %5, align 8
  store i32* null, i32** %44, align 8
  %45 = load i32**, i32*** %6, align 8
  ret i32** %45
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @rm2_equal(i32** %0, i32** %1, i32** %2, i32 (...)* %3) #0 {
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32 (...)*, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i32**, align 8
  %11 = alloca i32**, align 8
  store i32** %0, i32*** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  store i32 (...)* %3, i32 (...)** %8, align 8
  %12 = load i32**, i32*** %5, align 8
  store i32** %12, i32*** %9, align 8
  %13 = load i32**, i32*** %6, align 8
  store i32** %13, i32*** %10, align 8
  %14 = load i32**, i32*** %7, align 8
  store i32** %14, i32*** %11, align 8
  br label %15

15:                                               ; preds = %51, %4
  %16 = load i32**, i32*** %5, align 8
  %17 = load i32*, i32** %16, align 8
  %18 = icmp ne i32* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = load i32**, i32*** %6, align 8
  %21 = load i32*, i32** %20, align 8
  %22 = icmp ne i32* %21, null
  br label %23

23:                                               ; preds = %19, %15
  %24 = phi i1 [ false, %15 ], [ %22, %19 ]
  br i1 %24, label %25, label %52

25:                                               ; preds = %23
  %26 = load i32 (...)*, i32 (...)** %8, align 8
  %27 = load i32**, i32*** %5, align 8
  %28 = load i32**, i32*** %6, align 8
  %29 = bitcast i32 (...)* %26 to i32 (i32**, i32**, ...)*
  %30 = call i32 (i32**, i32**, ...) %29(i32** %27, i32** %28)
  switch i32 %30, label %51 [
    i32 -1, label %31
    i32 0, label %37
    i32 1, label %45
  ]

31:                                               ; preds = %25
  %32 = load i32**, i32*** %5, align 8
  %33 = getelementptr inbounds i32*, i32** %32, i32 1
  store i32** %33, i32*** %5, align 8
  %34 = load i32*, i32** %32, align 8
  %35 = load i32**, i32*** %9, align 8
  %36 = getelementptr inbounds i32*, i32** %35, i32 1
  store i32** %36, i32*** %9, align 8
  store i32* %34, i32** %35, align 8
  br label %51

37:                                               ; preds = %25
  %38 = load i32**, i32*** %5, align 8
  %39 = getelementptr inbounds i32*, i32** %38, i32 1
  store i32** %39, i32*** %5, align 8
  %40 = load i32*, i32** %38, align 8
  %41 = load i32**, i32*** %11, align 8
  %42 = getelementptr inbounds i32*, i32** %41, i32 1
  store i32** %42, i32*** %11, align 8
  store i32* %40, i32** %41, align 8
  %43 = load i32**, i32*** %6, align 8
  %44 = getelementptr inbounds i32*, i32** %43, i32 1
  store i32** %44, i32*** %6, align 8
  br label %51

45:                                               ; preds = %25
  %46 = load i32**, i32*** %6, align 8
  %47 = getelementptr inbounds i32*, i32** %46, i32 1
  store i32** %47, i32*** %6, align 8
  %48 = load i32*, i32** %46, align 8
  %49 = load i32**, i32*** %10, align 8
  %50 = getelementptr inbounds i32*, i32** %49, i32 1
  store i32** %50, i32*** %10, align 8
  store i32* %48, i32** %49, align 8
  br label %51

51:                                               ; preds = %45, %37, %31, %25
  br label %15

52:                                               ; preds = %23
  br label %53

53:                                               ; preds = %57, %52
  %54 = load i32**, i32*** %5, align 8
  %55 = load i32*, i32** %54, align 8
  %56 = icmp ne i32* %55, null
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = load i32**, i32*** %5, align 8
  %59 = getelementptr inbounds i32*, i32** %58, i32 1
  store i32** %59, i32*** %5, align 8
  %60 = load i32*, i32** %58, align 8
  %61 = load i32**, i32*** %9, align 8
  %62 = getelementptr inbounds i32*, i32** %61, i32 1
  store i32** %62, i32*** %9, align 8
  store i32* %60, i32** %61, align 8
  br label %53

63:                                               ; preds = %53
  br label %64

64:                                               ; preds = %68, %63
  %65 = load i32**, i32*** %6, align 8
  %66 = load i32*, i32** %65, align 8
  %67 = icmp ne i32* %66, null
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = load i32**, i32*** %6, align 8
  %70 = getelementptr inbounds i32*, i32** %69, i32 1
  store i32** %70, i32*** %6, align 8
  %71 = load i32*, i32** %69, align 8
  %72 = load i32**, i32*** %10, align 8
  %73 = getelementptr inbounds i32*, i32** %72, i32 1
  store i32** %73, i32*** %10, align 8
  store i32* %71, i32** %72, align 8
  br label %64

74:                                               ; preds = %64
  %75 = load i32**, i32*** %11, align 8
  store i32* null, i32** %75, align 8
  %76 = load i32**, i32*** %10, align 8
  store i32* null, i32** %76, align 8
  %77 = load i32**, i32*** %9, align 8
  store i32* null, i32** %77, align 8
  %78 = load i32**, i32*** %11, align 8
  %79 = load i32**, i32*** %7, align 8
  %80 = ptrtoint i32** %78 to i64
  %81 = ptrtoint i32** %79 to i64
  %82 = sub i64 %80, %81
  %83 = sdiv exact i64 %82, 8
  %84 = trunc i64 %83 to i32
  ret i32 %84
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @rm2_contain(i32** %0, i32** %1) #0 {
  %3 = alloca i32**, align 8
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i32, align 4
  store i32** %0, i32*** %3, align 8
  store i32** %1, i32*** %4, align 8
  %11 = load i32**, i32*** %3, align 8
  store i32** %11, i32*** %9, align 8
  %12 = load i32**, i32*** %3, align 8
  store i32** %12, i32*** %5, align 8
  br label %13

13:                                               ; preds = %71, %2
  %14 = load i32**, i32*** %5, align 8
  %15 = getelementptr inbounds i32*, i32** %14, i32 1
  store i32** %15, i32*** %5, align 8
  %16 = load i32*, i32** %14, align 8
  store i32* %16, i32** %7, align 8
  %17 = icmp ne i32* %16, null
  br i1 %17, label %18, label %72

18:                                               ; preds = %13
  %19 = load i32**, i32*** %4, align 8
  store i32** %19, i32*** %6, align 8
  br label %20

20:                                               ; preds = %65, %18
  %21 = load i32**, i32*** %6, align 8
  %22 = getelementptr inbounds i32*, i32** %21, i32 1
  store i32** %22, i32*** %6, align 8
  %23 = load i32*, i32** %21, align 8
  store i32* %23, i32** %8, align 8
  %24 = icmp ne i32* %23, null
  br i1 %24, label %25, label %35

25:                                               ; preds = %20
  %26 = load i32*, i32** %8, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 0
  %28 = load i32, i32* %27, align 4
  %29 = lshr i32 %28, 16
  %30 = load i32*, i32** %7, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 0
  %32 = load i32, i32* %31, align 4
  %33 = lshr i32 %32, 16
  %34 = icmp ugt i32 %29, %33
  br label %35

35:                                               ; preds = %25, %20
  %36 = phi i1 [ false, %20 ], [ %34, %25 ]
  br i1 %36, label %37, label %67

37:                                               ; preds = %35
  %38 = load i32*, i32** %7, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 0
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 1023
  store i32 %41, i32* %10, align 4
  br label %42

42:                                               ; preds = %58, %37
  %43 = load i32*, i32** %7, align 8
  %44 = load i32, i32* %10, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %43, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = load i32*, i32** %8, align 8
  %49 = load i32, i32* %10, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, i32* %48, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = xor i32 %52, -1
  %54 = and i32 %47, %53
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %42
  br label %62

57:                                               ; preds = %42
  br label %58

58:                                               ; preds = %57
  %59 = load i32, i32* %10, align 4
  %60 = add nsw i32 %59, -1
  store i32 %60, i32* %10, align 4
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %42, label %62

62:                                               ; preds = %58, %56
  %63 = load i32, i32* %10, align 4
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  br label %20

66:                                               ; preds = %62
  br label %71

67:                                               ; preds = %35
  %68 = load i32*, i32** %7, align 8
  %69 = load i32**, i32*** %9, align 8
  %70 = getelementptr inbounds i32*, i32** %69, i32 1
  store i32** %70, i32*** %9, align 8
  store i32* %68, i32** %69, align 8
  br label %71

71:                                               ; preds = %67, %66
  br label %13

72:                                               ; preds = %13
  %73 = load i32**, i32*** %9, align 8
  store i32* null, i32** %73, align 8
  %74 = load i32**, i32*** %9, align 8
  %75 = load i32**, i32*** %3, align 8
  %76 = ptrtoint i32** %74 to i64
  %77 = ptrtoint i32** %75 to i64
  %78 = sub i64 %76, %77
  %79 = sdiv exact i64 %78, 8
  %80 = trunc i64 %79 to i32
  ret i32 %80
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_merge(i32** %0, i32** %1, i32** %2, i32 %3, i32 %4) #0 {
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32**, align 8
  %14 = alloca i32**, align 8
  %15 = alloca i32**, align 8
  %16 = alloca %struct.set_family*, align 8
  %17 = alloca [3 x i32**], align 16
  %18 = alloca i32**, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  store i32** %0, i32*** %6, align 8
  store i32** %1, i32*** %7, align 8
  store i32** %2, i32*** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %23 = load i32, i32* %9, align 4
  %24 = load i32, i32* %10, align 4
  %25 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %23, i32 %24)
  store %struct.set_family* %25, %struct.set_family** %16, align 8
  %26 = load i32, i32* %9, align 4
  %27 = load %struct.set_family*, %struct.set_family** %16, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 3
  store i32 %26, i32* %28, align 4
  %29 = load %struct.set_family*, %struct.set_family** %16, align 8
  %30 = getelementptr inbounds %struct.set_family, %struct.set_family* %29, i32 0, i32 5
  %31 = load i32*, i32** %30, align 8
  store i32* %31, i32** %11, align 8
  store i32 3, i32* %21, align 4
  %32 = load i32**, i32*** %6, align 8
  %33 = getelementptr inbounds [3 x i32**], [3 x i32**]* %17, i64 0, i64 0
  store i32** %32, i32*** %33, align 16
  %34 = load i32**, i32*** %7, align 8
  %35 = getelementptr inbounds [3 x i32**], [3 x i32**]* %17, i64 0, i64 1
  store i32** %34, i32*** %35, align 8
  %36 = load i32**, i32*** %8, align 8
  %37 = getelementptr inbounds [3 x i32**], [3 x i32**]* %17, i64 0, i64 2
  store i32** %36, i32*** %37, align 16
  store i32 0, i32* %19, align 4
  br label %38

38:                                               ; preds = %84, %5
  %39 = load i32, i32* %19, align 4
  %40 = load i32, i32* %21, align 4
  %41 = sub nsw i32 %40, 1
  %42 = icmp slt i32 %39, %41
  br i1 %42, label %43, label %87

43:                                               ; preds = %38
  %44 = load i32, i32* %19, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %20, align 4
  br label %46

46:                                               ; preds = %80, %43
  %47 = load i32, i32* %20, align 4
  %48 = load i32, i32* %21, align 4
  %49 = icmp slt i32 %47, %48
  br i1 %49, label %50, label %83

50:                                               ; preds = %46
  %51 = load i32, i32* %19, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [3 x i32**], [3 x i32**]* %17, i64 0, i64 %52
  %54 = load i32**, i32*** %53, align 8
  %55 = load i32*, i32** %54, align 8
  %56 = load i32, i32* %20, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [3 x i32**], [3 x i32**]* %17, i64 0, i64 %57
  %59 = load i32**, i32*** %58, align 8
  %60 = load i32*, i32** %59, align 8
  %61 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @desc1 to i32 (i32*, i32*, ...)*)(i32* %55, i32* %60)
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %79

63:                                               ; preds = %50
  %64 = load i32, i32* %20, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [3 x i32**], [3 x i32**]* %17, i64 0, i64 %65
  %67 = load i32**, i32*** %66, align 8
  store i32** %67, i32*** %18, align 8
  %68 = load i32, i32* %19, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [3 x i32**], [3 x i32**]* %17, i64 0, i64 %69
  %71 = load i32**, i32*** %70, align 8
  %72 = load i32, i32* %20, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [3 x i32**], [3 x i32**]* %17, i64 0, i64 %73
  store i32** %71, i32*** %74, align 8
  %75 = load i32**, i32*** %18, align 8
  %76 = load i32, i32* %19, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [3 x i32**], [3 x i32**]* %17, i64 0, i64 %77
  store i32** %75, i32*** %78, align 8
  br label %79

79:                                               ; preds = %63, %50
  br label %80

80:                                               ; preds = %79
  %81 = load i32, i32* %20, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %20, align 4
  br label %46

83:                                               ; preds = %46
  br label %84

84:                                               ; preds = %83
  %85 = load i32, i32* %19, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %19, align 4
  br label %38

87:                                               ; preds = %38
  %88 = getelementptr inbounds [3 x i32**], [3 x i32**]* %17, i64 0, i64 0
  %89 = load i32**, i32*** %88, align 16
  store i32** %89, i32*** %13, align 8
  %90 = getelementptr inbounds [3 x i32**], [3 x i32**]* %17, i64 0, i64 1
  %91 = load i32**, i32*** %90, align 8
  store i32** %91, i32*** %14, align 8
  %92 = getelementptr inbounds [3 x i32**], [3 x i32**]* %17, i64 0, i64 2
  %93 = load i32**, i32*** %92, align 16
  store i32** %93, i32*** %15, align 8
  br label %94

94:                                               ; preds = %150, %87
  %95 = load i32**, i32*** %13, align 8
  %96 = load i32*, i32** %95, align 8
  %97 = icmp ne i32* %96, null
  br i1 %97, label %98, label %151

98:                                               ; preds = %94
  %99 = load i32**, i32*** %13, align 8
  %100 = getelementptr inbounds i32*, i32** %99, i32 1
  store i32** %100, i32*** %13, align 8
  %101 = load i32*, i32** %99, align 8
  store i32* %101, i32** %12, align 8
  %102 = load i32*, i32** %12, align 8
  %103 = getelementptr inbounds i32, i32* %102, i64 0
  %104 = load i32, i32* %103, align 4
  %105 = and i32 %104, 1023
  store i32 %105, i32* %22, align 4
  br label %106

106:                                              ; preds = %116, %98
  %107 = load i32*, i32** %12, align 8
  %108 = load i32, i32* %22, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i32, i32* %107, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = load i32*, i32** %11, align 8
  %113 = load i32, i32* %22, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %112, i64 %114
  store i32 %111, i32* %115, align 4
  br label %116

116:                                              ; preds = %106
  %117 = load i32, i32* %22, align 4
  %118 = add nsw i32 %117, -1
  store i32 %118, i32* %22, align 4
  %119 = icmp sge i32 %118, 0
  br i1 %119, label %106, label %120

120:                                              ; preds = %116
  %121 = load %struct.set_family*, %struct.set_family** %16, align 8
  %122 = getelementptr inbounds %struct.set_family, %struct.set_family* %121, i32 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = load i32*, i32** %11, align 8
  %125 = sext i32 %123 to i64
  %126 = getelementptr inbounds i32, i32* %124, i64 %125
  store i32* %126, i32** %11, align 8
  %127 = load i32**, i32*** %13, align 8
  %128 = load i32*, i32** %127, align 8
  %129 = load i32**, i32*** %15, align 8
  %130 = load i32*, i32** %129, align 8
  %131 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @desc1 to i32 (i32*, i32*, ...)*)(i32* %128, i32* %130)
  %132 = icmp sgt i32 %131, 0
  br i1 %132, label %133, label %138

133:                                              ; preds = %120
  %134 = load i32**, i32*** %15, align 8
  store i32** %134, i32*** %18, align 8
  %135 = load i32**, i32*** %13, align 8
  store i32** %135, i32*** %15, align 8
  %136 = load i32**, i32*** %14, align 8
  store i32** %136, i32*** %13, align 8
  %137 = load i32**, i32*** %18, align 8
  store i32** %137, i32*** %14, align 8
  br label %150

138:                                              ; preds = %120
  %139 = load i32**, i32*** %13, align 8
  %140 = load i32*, i32** %139, align 8
  %141 = load i32**, i32*** %14, align 8
  %142 = load i32*, i32** %141, align 8
  %143 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @desc1 to i32 (i32*, i32*, ...)*)(i32* %140, i32* %142)
  %144 = icmp sgt i32 %143, 0
  br i1 %144, label %145, label %149

145:                                              ; preds = %138
  %146 = load i32**, i32*** %13, align 8
  store i32** %146, i32*** %18, align 8
  %147 = load i32**, i32*** %14, align 8
  store i32** %147, i32*** %13, align 8
  %148 = load i32**, i32*** %18, align 8
  store i32** %148, i32*** %14, align 8
  br label %149

149:                                              ; preds = %145, %138
  br label %150

150:                                              ; preds = %149, %133
  br label %94

151:                                              ; preds = %94
  %152 = load i32**, i32*** %6, align 8
  %153 = icmp ne i32** %152, null
  br i1 %153, label %154, label %157

154:                                              ; preds = %151
  %155 = load i32**, i32*** %6, align 8
  %156 = bitcast i32** %155 to i8*
  call void @free(i8* %156) #7
  store i32** null, i32*** %6, align 8
  br label %157

157:                                              ; preds = %154, %151
  %158 = load i32**, i32*** %7, align 8
  %159 = icmp ne i32** %158, null
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = load i32**, i32*** %7, align 8
  %162 = bitcast i32** %161 to i8*
  call void @free(i8* %162) #7
  store i32** null, i32*** %7, align 8
  br label %163

163:                                              ; preds = %160, %157
  %164 = load i32**, i32*** %8, align 8
  %165 = icmp ne i32** %164, null
  br i1 %165, label %166, label %169

166:                                              ; preds = %163
  %167 = load i32**, i32*** %8, align 8
  %168 = bitcast i32** %167 to i8*
  call void @free(i8* %168) #7
  store i32** null, i32*** %8, align 8
  br label %169

169:                                              ; preds = %166, %163
  %170 = load %struct.set_family*, %struct.set_family** %16, align 8
  ret %struct.set_family* %170
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @dist_merge(%struct.set_family* %0, i32* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32* %1, i32** %4, align 8
  %8 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %9 = getelementptr inbounds i32*, i32** %8, i64 0
  %10 = load i32*, i32** %9, align 8
  %11 = load i32*, i32** %4, align 8
  %12 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %10, i32* %11)
  %13 = load %struct.set_family*, %struct.set_family** %3, align 8
  %14 = call i32** @sf_sort(%struct.set_family* %13, i32 (...)* bitcast (i32 (i32**, i32**)* @d1_order to i32 (...)*))
  store i32** %14, i32*** %5, align 8
  %15 = load i32**, i32*** %5, align 8
  %16 = call i32 @d1_rm_equal(i32** %15, i32 (...)* bitcast (i32 (i32**, i32**)* @d1_order to i32 (...)*))
  store i32 %16, i32* %6, align 4
  %17 = load i32**, i32*** %5, align 8
  %18 = load i32, i32* %6, align 4
  %19 = load %struct.set_family*, %struct.set_family** %3, align 8
  %20 = getelementptr inbounds %struct.set_family, %struct.set_family* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = call %struct.set_family* @sf_unlist(i32** %17, i32 %18, i32 %21)
  store %struct.set_family* %22, %struct.set_family** %7, align 8
  %23 = load %struct.set_family*, %struct.set_family** %3, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %23)
  %24 = load %struct.set_family*, %struct.set_family** %7, align 8
  ret %struct.set_family* %24
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @d1_rm_equal(i32** %0, i32 (...)* %1) #0 {
  %3 = alloca i32**, align 8
  %4 = alloca i32 (...)*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32** %0, i32*** %3, align 8
  store i32 (...)* %1, i32 (...)** %4, align 8
  store i32 0, i32* %7, align 4
  %8 = load i32**, i32*** %3, align 8
  %9 = getelementptr inbounds i32*, i32** %8, i64 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ne i32* %10, null
  br i1 %11, label %12, label %77

12:                                               ; preds = %2
  store i32 0, i32* %5, align 4
  store i32 1, i32* %6, align 4
  br label %13

13:                                               ; preds = %63, %12
  %14 = load i32**, i32*** %3, align 8
  %15 = load i32, i32* %6, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i32*, i32** %14, i64 %16
  %18 = load i32*, i32** %17, align 8
  %19 = icmp ne i32* %18, null
  br i1 %19, label %20, label %66

20:                                               ; preds = %13
  %21 = load i32 (...)*, i32 (...)** %4, align 8
  %22 = load i32**, i32*** %3, align 8
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32*, i32** %22, i64 %24
  %26 = load i32**, i32*** %3, align 8
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32*, i32** %26, i64 %28
  %30 = bitcast i32 (...)* %21 to i32 (i32**, i32**, ...)*
  %31 = call i32 (i32**, i32**, ...) %30(i32** %25, i32** %29)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %50

33:                                               ; preds = %20
  %34 = load i32**, i32*** %3, align 8
  %35 = load i32, i32* %5, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i32*, i32** %34, i64 %36
  %38 = load i32*, i32** %37, align 8
  %39 = load i32**, i32*** %3, align 8
  %40 = load i32, i32* %5, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i32*, i32** %39, i64 %41
  %43 = load i32*, i32** %42, align 8
  %44 = load i32**, i32*** %3, align 8
  %45 = load i32, i32* %6, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i32*, i32** %44, i64 %46
  %48 = load i32*, i32** %47, align 8
  %49 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %38, i32* %43, i32* %48)
  br label %62

50:                                               ; preds = %20
  %51 = load i32**, i32*** %3, align 8
  %52 = load i32, i32* %5, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32*, i32** %51, i64 %53
  %55 = load i32*, i32** %54, align 8
  %56 = load i32**, i32*** %3, align 8
  %57 = load i32, i32* %7, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %7, align 4
  %59 = sext i32 %57 to i64
  %60 = getelementptr inbounds i32*, i32** %56, i64 %59
  store i32* %55, i32** %60, align 8
  %61 = load i32, i32* %6, align 4
  store i32 %61, i32* %5, align 4
  br label %62

62:                                               ; preds = %50, %33
  br label %63

63:                                               ; preds = %62
  %64 = load i32, i32* %6, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %6, align 4
  br label %13

66:                                               ; preds = %13
  %67 = load i32**, i32*** %3, align 8
  %68 = load i32, i32* %5, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i32*, i32** %67, i64 %69
  %71 = load i32*, i32** %70, align 8
  %72 = load i32**, i32*** %3, align 8
  %73 = load i32, i32* %7, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %7, align 4
  %75 = sext i32 %73 to i64
  %76 = getelementptr inbounds i32*, i32** %72, i64 %75
  store i32* %71, i32** %76, align 8
  br label %77

77:                                               ; preds = %66, %2
  %78 = load i32**, i32*** %3, align 8
  %79 = load i32, i32* %7, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32*, i32** %78, i64 %80
  store i32* null, i32** %81, align 8
  %82 = load i32, i32* %7, align 4
  ret i32 %82
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @d1merge(%struct.set_family* %0, i32 %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.set_family*, %struct.set_family** %3, align 8
  %6 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %7 = load i32, i32* %4, align 4
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds i32*, i32** %6, i64 %8
  %10 = load i32*, i32** %9, align 8
  %11 = call %struct.set_family* @dist_merge(%struct.set_family* %5, i32* %10)
  ret %struct.set_family* %11
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @cube_setup() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %0
  %9 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %10 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %11 = icmp slt i32 %9, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %8, %0
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.12, i64 0, i64 0))
  br label %13

13:                                               ; preds = %12, %8
  %14 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %15 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %16 = sub nsw i32 %14, %15
  store i32 %16, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 17), align 8
  %17 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 17), align 8
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %21 = sub nsw i32 %20, 1
  br label %23

22:                                               ; preds = %13
  br label %23

23:                                               ; preds = %22, %19
  %24 = phi i32 [ %21, %19 ], [ -1, %22 ]
  store i32 %24, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  store i32 0, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %25 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %26 = sext i32 %25 to i64
  %27 = mul i64 4, %26
  %28 = call noalias i8* @malloc(i64 %27) #7
  %29 = bitcast i8* %28 to i32*
  store i32* %29, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %30 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %31 = sext i32 %30 to i64
  %32 = mul i64 4, %31
  %33 = call noalias i8* @malloc(i64 %32) #7
  %34 = bitcast i8* %33 to i32*
  store i32* %34, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %35 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %36 = sext i32 %35 to i64
  %37 = mul i64 4, %36
  %38 = call noalias i8* @malloc(i64 %37) #7
  %39 = bitcast i8* %38 to i32*
  store i32* %39, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %40 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %41 = sext i32 %40 to i64
  %42 = mul i64 4, %41
  %43 = call noalias i8* @malloc(i64 %42) #7
  %44 = bitcast i8* %43 to i32*
  store i32* %44, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  store i32 0, i32* %2, align 4
  br label %45

45:                                               ; preds = %108, %23
  %46 = load i32, i32* %2, align 4
  %47 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %49, label %111

49:                                               ; preds = %45
  %50 = load i32, i32* %2, align 4
  %51 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %52 = icmp slt i32 %50, %51
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %55 = load i32, i32* %2, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i32, i32* %54, i64 %56
  store i32 2, i32* %57, align 4
  br label %58

58:                                               ; preds = %53, %49
  %59 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %60 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %61 = load i32, i32* %2, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %60, i64 %62
  store i32 %59, i32* %63, align 4
  %64 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %65 = ashr i32 %64, 5
  %66 = add nsw i32 %65, 1
  %67 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %68 = load i32, i32* %2, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %67, i64 %69
  store i32 %66, i32* %70, align 4
  %71 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %72 = load i32, i32* %2, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i32, i32* %71, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %83

77:                                               ; preds = %58
  %78 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %79 = load i32, i32* %2, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %78, i64 %80
  %82 = load i32, i32* %81, align 4
  br label %90

83:                                               ; preds = %58
  %84 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %85 = load i32, i32* %2, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i32, i32* %84, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = sub nsw i32 0, %88
  br label %90

90:                                               ; preds = %83, %77
  %91 = phi i32 [ %82, %77 ], [ %89, %83 ]
  %92 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %93 = add nsw i32 %92, %91
  store i32 %93, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %94 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %95 = sub nsw i32 %94, 1
  %96 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %97 = load i32, i32* %2, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, i32* %96, i64 %98
  store i32 %95, i32* %99, align 4
  %100 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %101 = sub nsw i32 %100, 1
  %102 = ashr i32 %101, 5
  %103 = add nsw i32 %102, 1
  %104 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  %105 = load i32, i32* %2, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i32, i32* %104, i64 %106
  store i32 %103, i32* %107, align 4
  br label %108

108:                                              ; preds = %90
  %109 = load i32, i32* %2, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %2, align 4
  br label %45

111:                                              ; preds = %45
  %112 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %113 = sext i32 %112 to i64
  %114 = mul i64 8, %113
  %115 = call noalias i8* @malloc(i64 %114) #7
  %116 = bitcast i8* %115 to i32**
  store i32** %116, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %117 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %118 = sext i32 %117 to i64
  %119 = mul i64 4, %118
  %120 = call noalias i8* @malloc(i64 %119) #7
  %121 = bitcast i8* %120 to i32*
  store i32* %121, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 16), align 8
  %122 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %123 = icmp sle i32 %122, 32
  br i1 %123, label %124, label %125

124:                                              ; preds = %111
  br label %131

125:                                              ; preds = %111
  %126 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %127 = sub nsw i32 %126, 1
  %128 = ashr i32 %127, 5
  %129 = add nsw i32 %128, 1
  %130 = add nsw i32 %129, 1
  br label %131

131:                                              ; preds = %125, %124
  %132 = phi i32 [ 2, %124 ], [ %130, %125 ]
  %133 = sext i32 %132 to i64
  %134 = mul i64 4, %133
  %135 = call noalias i8* @malloc(i64 %134) #7
  %136 = bitcast i8* %135 to i32*
  %137 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %138 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %136, i32 %137)
  store i32* %138, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 8), align 8
  %139 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %140 = icmp sle i32 %139, 32
  br i1 %140, label %141, label %142

141:                                              ; preds = %131
  br label %148

142:                                              ; preds = %131
  %143 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %144 = sub nsw i32 %143, 1
  %145 = ashr i32 %144, 5
  %146 = add nsw i32 %145, 1
  %147 = add nsw i32 %146, 1
  br label %148

148:                                              ; preds = %142, %141
  %149 = phi i32 [ 2, %141 ], [ %147, %142 ]
  %150 = sext i32 %149 to i64
  %151 = mul i64 4, %150
  %152 = call noalias i8* @malloc(i64 %151) #7
  %153 = bitcast i8* %152 to i32*
  %154 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %155 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %153, i32 %154)
  store i32* %155, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 9), align 8
  store i32 0, i32* %2, align 4
  br label %156

156:                                              ; preds = %293, %148
  %157 = load i32, i32* %2, align 4
  %158 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %159 = icmp slt i32 %157, %158
  br i1 %159, label %160, label %296

160:                                              ; preds = %156
  %161 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %162 = icmp sle i32 %161, 32
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  br label %170

164:                                              ; preds = %160
  %165 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %166 = sub nsw i32 %165, 1
  %167 = ashr i32 %166, 5
  %168 = add nsw i32 %167, 1
  %169 = add nsw i32 %168, 1
  br label %170

170:                                              ; preds = %164, %163
  %171 = phi i32 [ 2, %163 ], [ %169, %164 ]
  %172 = sext i32 %171 to i64
  %173 = mul i64 4, %172
  %174 = call noalias i8* @malloc(i64 %173) #7
  %175 = bitcast i8* %174 to i32*
  %176 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %177 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %175, i32 %176)
  %178 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %179 = load i32, i32* %2, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i32*, i32** %178, i64 %180
  store i32* %177, i32** %181, align 8
  store i32* %177, i32** %3, align 8
  %182 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %183 = load i32, i32* %2, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i32, i32* %182, i64 %184
  %186 = load i32, i32* %185, align 4
  store i32 %186, i32* %1, align 4
  br label %187

187:                                              ; preds = %207, %170
  %188 = load i32, i32* %1, align 4
  %189 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %190 = load i32, i32* %2, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i32, i32* %189, i64 %191
  %193 = load i32, i32* %192, align 4
  %194 = icmp sle i32 %188, %193
  br i1 %194, label %195, label %210

195:                                              ; preds = %187
  %196 = load i32, i32* %1, align 4
  %197 = and i32 %196, 31
  %198 = shl i32 1, %197
  %199 = load i32*, i32** %3, align 8
  %200 = load i32, i32* %1, align 4
  %201 = ashr i32 %200, 5
  %202 = add nsw i32 %201, 1
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i32, i32* %199, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = or i32 %205, %198
  store i32 %206, i32* %204, align 4
  br label %207

207:                                              ; preds = %195
  %208 = load i32, i32* %1, align 4
  %209 = add nsw i32 %208, 1
  store i32 %209, i32* %1, align 4
  br label %187

210:                                              ; preds = %187
  %211 = load i32, i32* %2, align 4
  %212 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %213 = icmp slt i32 %211, %212
  br i1 %213, label %214, label %253

214:                                              ; preds = %210
  %215 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 8), align 8
  %216 = getelementptr inbounds i32, i32* %215, i64 0
  %217 = load i32, i32* %216, align 4
  %218 = and i32 %217, 1023
  store i32 %218, i32* %4, align 4
  %219 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 8), align 8
  %220 = getelementptr inbounds i32, i32* %219, i64 0
  %221 = load i32, i32* %220, align 4
  %222 = and i32 %221, -1024
  store i32 %222, i32* %220, align 4
  %223 = load i32, i32* %4, align 4
  %224 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 8), align 8
  %225 = getelementptr inbounds i32, i32* %224, i64 0
  %226 = load i32, i32* %225, align 4
  %227 = or i32 %226, %223
  store i32 %227, i32* %225, align 4
  br label %228

228:                                              ; preds = %244, %214
  %229 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 8), align 8
  %230 = load i32, i32* %4, align 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i32, i32* %229, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = load i32*, i32** %3, align 8
  %235 = load i32, i32* %4, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i32, i32* %234, i64 %236
  %238 = load i32, i32* %237, align 4
  %239 = or i32 %233, %238
  %240 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 8), align 8
  %241 = load i32, i32* %4, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds i32, i32* %240, i64 %242
  store i32 %239, i32* %243, align 4
  br label %244

244:                                              ; preds = %228
  %245 = load i32, i32* %4, align 4
  %246 = add nsw i32 %245, -1
  store i32 %246, i32* %4, align 4
  %247 = icmp sgt i32 %246, 0
  br i1 %247, label %228, label %248

248:                                              ; preds = %244
  %249 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 16), align 8
  %250 = load i32, i32* %2, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds i32, i32* %249, i64 %251
  store i32 0, i32* %252, align 4
  br label %292

253:                                              ; preds = %210
  %254 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 9), align 8
  %255 = getelementptr inbounds i32, i32* %254, i64 0
  %256 = load i32, i32* %255, align 4
  %257 = and i32 %256, 1023
  store i32 %257, i32* %5, align 4
  %258 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 9), align 8
  %259 = getelementptr inbounds i32, i32* %258, i64 0
  %260 = load i32, i32* %259, align 4
  %261 = and i32 %260, -1024
  store i32 %261, i32* %259, align 4
  %262 = load i32, i32* %5, align 4
  %263 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 9), align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 0
  %265 = load i32, i32* %264, align 4
  %266 = or i32 %265, %262
  store i32 %266, i32* %264, align 4
  br label %267

267:                                              ; preds = %283, %253
  %268 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 9), align 8
  %269 = load i32, i32* %5, align 4
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds i32, i32* %268, i64 %270
  %272 = load i32, i32* %271, align 4
  %273 = load i32*, i32** %3, align 8
  %274 = load i32, i32* %5, align 4
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds i32, i32* %273, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = or i32 %272, %277
  %279 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 9), align 8
  %280 = load i32, i32* %5, align 4
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds i32, i32* %279, i64 %281
  store i32 %278, i32* %282, align 4
  br label %283

283:                                              ; preds = %267
  %284 = load i32, i32* %5, align 4
  %285 = add nsw i32 %284, -1
  store i32 %285, i32* %5, align 4
  %286 = icmp sgt i32 %285, 0
  br i1 %286, label %267, label %287

287:                                              ; preds = %283
  %288 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 16), align 8
  %289 = load i32, i32* %2, align 4
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds i32, i32* %288, i64 %290
  store i32 1, i32* %291, align 4
  br label %292

292:                                              ; preds = %287, %248
  br label %293

293:                                              ; preds = %292
  %294 = load i32, i32* %2, align 4
  %295 = add nsw i32 %294, 1
  store i32 %295, i32* %2, align 4
  br label %156

296:                                              ; preds = %156
  %297 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  store i32 -1, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 15), align 4
  br label %313

300:                                              ; preds = %296
  %301 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  %302 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %303 = sub nsw i32 %302, 1
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds i32, i32* %301, i64 %304
  %306 = load i32, i32* %305, align 4
  store i32 %306, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 15), align 4
  %307 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 8), align 8
  %308 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 15), align 4
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds i32, i32* %307, i64 %309
  %311 = load i32, i32* %310, align 4
  %312 = and i32 %311, 1431655765
  store i32 %312, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 14), align 8
  br label %313

313:                                              ; preds = %300, %299
  %314 = call noalias i8* @malloc(i64 80) #7
  %315 = bitcast i8* %314 to i32**
  store i32** %315, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  store i32 0, i32* %1, align 4
  br label %316

316:                                              ; preds = %341, %313
  %317 = load i32, i32* %1, align 4
  %318 = icmp slt i32 %317, 10
  br i1 %318, label %319, label %344

319:                                              ; preds = %316
  %320 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %321 = icmp sle i32 %320, 32
  br i1 %321, label %322, label %323

322:                                              ; preds = %319
  br label %329

323:                                              ; preds = %319
  %324 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %325 = sub nsw i32 %324, 1
  %326 = ashr i32 %325, 5
  %327 = add nsw i32 %326, 1
  %328 = add nsw i32 %327, 1
  br label %329

329:                                              ; preds = %323, %322
  %330 = phi i32 [ 2, %322 ], [ %328, %323 ]
  %331 = sext i32 %330 to i64
  %332 = mul i64 4, %331
  %333 = call noalias i8* @malloc(i64 %332) #7
  %334 = bitcast i8* %333 to i32*
  %335 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %336 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %334, i32 %335)
  %337 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %338 = load i32, i32* %1, align 4
  %339 = sext i32 %338 to i64
  %340 = getelementptr inbounds i32*, i32** %337, i64 %339
  store i32* %336, i32** %340, align 8
  br label %341

341:                                              ; preds = %329
  %342 = load i32, i32* %1, align 4
  %343 = add nsw i32 %342, 1
  store i32 %343, i32* %1, align 4
  br label %316

344:                                              ; preds = %316
  %345 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %346 = icmp sle i32 %345, 32
  br i1 %346, label %347, label %348

347:                                              ; preds = %344
  br label %354

348:                                              ; preds = %344
  %349 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %350 = sub nsw i32 %349, 1
  %351 = ashr i32 %350, 5
  %352 = add nsw i32 %351, 1
  %353 = add nsw i32 %352, 1
  br label %354

354:                                              ; preds = %348, %347
  %355 = phi i32 [ 2, %347 ], [ %353, %348 ]
  %356 = sext i32 %355 to i64
  %357 = mul i64 4, %356
  %358 = call noalias i8* @malloc(i64 %357) #7
  %359 = bitcast i8* %358 to i32*
  %360 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %361 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %359, i32 %360)
  %362 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %363 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_fill to i32* (i32*, i32, ...)*)(i32* %361, i32 %362)
  store i32* %363, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %364 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %365 = icmp sle i32 %364, 32
  br i1 %365, label %366, label %367

366:                                              ; preds = %354
  br label %373

367:                                              ; preds = %354
  %368 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %369 = sub nsw i32 %368, 1
  %370 = ashr i32 %369, 5
  %371 = add nsw i32 %370, 1
  %372 = add nsw i32 %371, 1
  br label %373

373:                                              ; preds = %367, %366
  %374 = phi i32 [ 2, %366 ], [ %372, %367 ]
  %375 = sext i32 %374 to i64
  %376 = mul i64 4, %375
  %377 = call noalias i8* @malloc(i64 %376) #7
  %378 = bitcast i8* %377 to i32*
  %379 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %380 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %378, i32 %379)
  store i32* %380, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 13), align 8
  %381 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %382 = sext i32 %381 to i64
  %383 = mul i64 4, %382
  %384 = call noalias i8* @malloc(i64 %383) #7
  %385 = bitcast i8* %384 to i32*
  store i32* %385, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 0), align 8
  %386 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %387 = sext i32 %386 to i64
  %388 = mul i64 4, %387
  %389 = call noalias i8* @malloc(i64 %388) #7
  %390 = bitcast i8* %389 to i32*
  store i32* %390, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  %391 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %392 = sext i32 %391 to i64
  %393 = mul i64 4, %392
  %394 = call noalias i8* @malloc(i64 %393) #7
  %395 = bitcast i8* %394 to i32*
  store i32* %395, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 2), align 8
  %396 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %397 = sext i32 %396 to i64
  %398 = mul i64 4, %397
  %399 = call noalias i8* @malloc(i64 %398) #7
  %400 = bitcast i8* %399 to i32*
  store i32* %400, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 3), align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @setdown_cube() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %4 = icmp ne i32* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %0
  %6 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %7 = bitcast i32* %6 to i8*
  call void @free(i8* %7) #7
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  br label %8

8:                                                ; preds = %5, %0
  %9 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %10 = icmp ne i32* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %8
  %12 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %13 = bitcast i32* %12 to i8*
  call void @free(i8* %13) #7
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  br label %14

14:                                               ; preds = %11, %8
  %15 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %16 = icmp ne i32* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %14
  %18 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %19 = bitcast i32* %18 to i8*
  call void @free(i8* %19) #7
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  br label %20

20:                                               ; preds = %17, %14
  %21 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  %22 = icmp ne i32* %21, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %20
  %24 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  %25 = bitcast i32* %24 to i8*
  call void @free(i8* %25) #7
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  br label %26

26:                                               ; preds = %23, %20
  %27 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 16), align 8
  %28 = icmp ne i32* %27, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %26
  %30 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 16), align 8
  %31 = bitcast i32* %30 to i8*
  call void @free(i8* %31) #7
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 16), align 8
  br label %32

32:                                               ; preds = %29, %26
  %33 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 8), align 8
  %34 = icmp ne i32* %33, null
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 8), align 8
  %37 = bitcast i32* %36 to i8*
  call void @free(i8* %37) #7
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 8), align 8
  br label %38

38:                                               ; preds = %35, %32
  %39 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 9), align 8
  %40 = icmp ne i32* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 9), align 8
  %43 = bitcast i32* %42 to i8*
  call void @free(i8* %43) #7
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 9), align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %46 = icmp ne i32* %45, null
  br i1 %46, label %47, label %50

47:                                               ; preds = %44
  %48 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %49 = bitcast i32* %48 to i8*
  call void @free(i8* %49) #7
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  br label %50

50:                                               ; preds = %47, %44
  %51 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 13), align 8
  %52 = icmp ne i32* %51, null
  br i1 %52, label %53, label %56

53:                                               ; preds = %50
  %54 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 13), align 8
  %55 = bitcast i32* %54 to i8*
  call void @free(i8* %55) #7
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 13), align 8
  br label %56

56:                                               ; preds = %53, %50
  store i32 0, i32* %2, align 4
  br label %57

57:                                               ; preds = %80, %56
  %58 = load i32, i32* %2, align 4
  %59 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %83

61:                                               ; preds = %57
  %62 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %63 = load i32, i32* %2, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32*, i32** %62, i64 %64
  %66 = load i32*, i32** %65, align 8
  %67 = icmp ne i32* %66, null
  br i1 %67, label %68, label %79

68:                                               ; preds = %61
  %69 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %70 = load i32, i32* %2, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i32*, i32** %69, i64 %71
  %73 = load i32*, i32** %72, align 8
  %74 = bitcast i32* %73 to i8*
  call void @free(i8* %74) #7
  %75 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %76 = load i32, i32* %2, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i32*, i32** %75, i64 %77
  store i32* null, i32** %78, align 8
  br label %79

79:                                               ; preds = %68, %61
  br label %80

80:                                               ; preds = %79
  %81 = load i32, i32* %2, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %2, align 4
  br label %57

83:                                               ; preds = %57
  %84 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %85 = icmp ne i32** %84, null
  br i1 %85, label %86, label %89

86:                                               ; preds = %83
  %87 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %88 = bitcast i32** %87 to i8*
  call void @free(i8* %88) #7
  store i32** null, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  br label %89

89:                                               ; preds = %86, %83
  store i32 0, i32* %1, align 4
  br label %90

90:                                               ; preds = %112, %89
  %91 = load i32, i32* %1, align 4
  %92 = icmp slt i32 %91, 10
  br i1 %92, label %93, label %115

93:                                               ; preds = %90
  %94 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %95 = load i32, i32* %1, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i32*, i32** %94, i64 %96
  %98 = load i32*, i32** %97, align 8
  %99 = icmp ne i32* %98, null
  br i1 %99, label %100, label %111

100:                                              ; preds = %93
  %101 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %102 = load i32, i32* %1, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32*, i32** %101, i64 %103
  %105 = load i32*, i32** %104, align 8
  %106 = bitcast i32* %105 to i8*
  call void @free(i8* %106) #7
  %107 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %108 = load i32, i32* %1, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i32*, i32** %107, i64 %109
  store i32* null, i32** %110, align 8
  br label %111

111:                                              ; preds = %100, %93
  br label %112

112:                                              ; preds = %111
  %113 = load i32, i32* %1, align 4
  %114 = add nsw i32 %113, 1
  store i32 %114, i32* %1, align 4
  br label %90

115:                                              ; preds = %90
  %116 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %117 = icmp ne i32** %116, null
  br i1 %117, label %118, label %121

118:                                              ; preds = %115
  %119 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %120 = bitcast i32** %119 to i8*
  call void @free(i8* %120) #7
  store i32** null, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  br label %121

121:                                              ; preds = %118, %115
  %122 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 0), align 8
  %123 = icmp ne i32* %122, null
  br i1 %123, label %124, label %127

124:                                              ; preds = %121
  %125 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 0), align 8
  %126 = bitcast i32* %125 to i8*
  call void @free(i8* %126) #7
  store i32* null, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 0), align 8
  br label %127

127:                                              ; preds = %124, %121
  %128 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  %129 = icmp ne i32* %128, null
  br i1 %129, label %130, label %133

130:                                              ; preds = %127
  %131 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  %132 = bitcast i32* %131 to i8*
  call void @free(i8* %132) #7
  store i32* null, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  br label %133

133:                                              ; preds = %130, %127
  %134 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 2), align 8
  %135 = icmp ne i32* %134, null
  br i1 %135, label %136, label %139

136:                                              ; preds = %133
  %137 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 2), align 8
  %138 = bitcast i32* %137 to i8*
  call void @free(i8* %138) #7
  store i32* null, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 2), align 8
  br label %139

139:                                              ; preds = %136, %133
  %140 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 3), align 8
  %141 = icmp ne i32* %140, null
  br i1 %141, label %142, label %145

142:                                              ; preds = %139
  %143 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 3), align 8
  %144 = bitcast i32* %143 to i8*
  call void @free(i8* %144) #7
  store i32* null, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 3), align 8
  br label %145

145:                                              ; preds = %142, %139
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 16), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 9), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 8), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 13), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  store i32** null, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  store i32** null, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 2), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 0), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 3), align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @save_cube_struct() #0 {
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.cube_struct* @temp_cube_save to i8*), i8* align 8 bitcast (%struct.cube_struct* @cube to i8*), i64 128, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.cdata_struct* @temp_cdata_save to i8*), i8* align 8 bitcast (%struct.cdata_struct* @cdata to i8*), i64 48, i1 false)
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 9), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 8), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 13), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  store i32** null, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  store i32** null, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 2), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 0), align 8
  store i32* null, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 3), align 8
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @restore_cube_struct() #0 {
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.cube_struct* @cube to i8*), i8* align 8 bitcast (%struct.cube_struct* @temp_cube_save to i8*), i64 128, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.cdata_struct* @cdata to i8*), i8* align 8 bitcast (%struct.cdata_struct* @temp_cdata_save to i8*), i64 48, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @skip_line(%struct._IO_FILE* %0, %struct._IO_FILE* %1, i32 %2) #0 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %5, align 8
  store i32 %2, i32* %6, align 4
  br label %8

8:                                                ; preds = %24, %3
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %10 = call i32 @getc(%struct._IO_FILE* %9)
  store i32 %10, i32* %7, align 4
  %11 = icmp ne i32 %10, -1
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = load i32, i32* %7, align 4
  %14 = icmp ne i32 %13, 10
  br label %15

15:                                               ; preds = %12, %8
  %16 = phi i1 [ false, %8 ], [ %14, %12 ]
  br i1 %16, label %17, label %25

17:                                               ; preds = %15
  %18 = load i32, i32* %6, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %17
  %21 = load i32, i32* %7, align 4
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %23 = call i32 @putc(i32 %21, %struct._IO_FILE* %22)
  br label %24

24:                                               ; preds = %20, %17
  br label %8

25:                                               ; preds = %15
  %26 = load i32, i32* %6, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %25
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %30 = call i32 @putc(i32 10, %struct._IO_FILE* %29)
  br label %31

31:                                               ; preds = %28, %25
  %32 = load i32, i32* @lineno, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* @lineno, align 4
  ret void
}

declare dso_local i32 @getc(%struct._IO_FILE*) #2

declare dso_local i32 @putc(i32, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @get_word(%struct._IO_FILE* %0, i8* %1) #0 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store i8* %1, i8** %4, align 8
  store i32 0, i32* %6, align 4
  br label %7

7:                                                ; preds = %23, %2
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %9 = call i32 @getc(%struct._IO_FILE* %8)
  store i32 %9, i32* %5, align 4
  %10 = icmp ne i32 %9, -1
  br i1 %10, label %11, label %21

11:                                               ; preds = %7
  %12 = call i16** @__ctype_b_loc() #8
  %13 = load i16*, i16** %12, align 8
  %14 = load i32, i32* %5, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i16, i16* %13, i64 %15
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  %19 = and i32 %18, 8192
  %20 = icmp ne i32 %19, 0
  br label %21

21:                                               ; preds = %11, %7
  %22 = phi i1 [ false, %7 ], [ %20, %11 ]
  br i1 %22, label %23, label %24

23:                                               ; preds = %21
  br label %7

24:                                               ; preds = %21
  %25 = load i32, i32* %5, align 4
  %26 = trunc i32 %25 to i8
  %27 = load i8*, i8** %4, align 8
  %28 = load i32, i32* %6, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %6, align 4
  %30 = sext i32 %28 to i64
  %31 = getelementptr inbounds i8, i8* %27, i64 %30
  store i8 %26, i8* %31, align 1
  br label %32

32:                                               ; preds = %49, %24
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %34 = call i32 @getc(%struct._IO_FILE* %33)
  store i32 %34, i32* %5, align 4
  %35 = icmp ne i32 %34, -1
  br i1 %35, label %36, label %47

36:                                               ; preds = %32
  %37 = call i16** @__ctype_b_loc() #8
  %38 = load i16*, i16** %37, align 8
  %39 = load i32, i32* %5, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i16, i16* %38, i64 %40
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = and i32 %43, 8192
  %45 = icmp ne i32 %44, 0
  %46 = xor i1 %45, true
  br label %47

47:                                               ; preds = %36, %32
  %48 = phi i1 [ false, %32 ], [ %46, %36 ]
  br i1 %48, label %49, label %57

49:                                               ; preds = %47
  %50 = load i32, i32* %5, align 4
  %51 = trunc i32 %50 to i8
  %52 = load i8*, i8** %4, align 8
  %53 = load i32, i32* %6, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %6, align 4
  %55 = sext i32 %53 to i64
  %56 = getelementptr inbounds i8, i8* %52, i64 %55
  store i8 %51, i8* %56, align 1
  br label %32

57:                                               ; preds = %47
  %58 = load i8*, i8** %4, align 8
  %59 = load i32, i32* %6, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %6, align 4
  %61 = sext i32 %59 to i64
  %62 = getelementptr inbounds i8, i8* %58, i64 %61
  store i8 0, i8* %62, align 1
  %63 = load i8*, i8** %4, align 8
  ret i8* %63
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @read_cube(%struct._IO_FILE* %0, %struct.PLA_t* %1) #0 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca %struct.PLA_t*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [256 x i8], align 16
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store %struct.PLA_t* %1, %struct.PLA_t** %4, align 8
  %18 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %19 = getelementptr inbounds i32*, i32** %18, i64 0
  %20 = load i32*, i32** %19, align 8
  store i32* %20, i32** %7, align 8
  %21 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %22 = getelementptr inbounds i32*, i32** %21, i64 1
  %23 = load i32*, i32** %22, align 8
  store i32* %23, i32** %8, align 8
  %24 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %25 = getelementptr inbounds i32*, i32** %24, i64 2
  %26 = load i32*, i32** %25, align 8
  store i32* %26, i32** %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  %27 = load i32*, i32** %7, align 8
  %28 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %29 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %27, i32 %28)
  store i32 0, i32* %5, align 4
  br label %30

30:                                               ; preds = %101, %2
  %31 = load i32, i32* %5, align 4
  %32 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %34, label %104

34:                                               ; preds = %30
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %36 = call i32 @getc(%struct._IO_FILE* %35)
  switch i32 %36, label %99 [
    i32 -1, label %37
    i32 10, label %38
    i32 32, label %49
    i32 124, label %49
    i32 9, label %49
    i32 50, label %52
    i32 45, label %52
    i32 48, label %68
    i32 49, label %82
    i32 63, label %98
  ]

37:                                               ; preds = %34
  br label %486

38:                                               ; preds = %34
  %39 = load i32, i32* @line_length_error, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %38
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1.14, i64 0, i64 0))
  br label %44

44:                                               ; preds = %41, %38
  store i32 1, i32* @line_length_error, align 4
  %45 = load i32, i32* @lineno, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* @lineno, align 4
  %47 = load i32, i32* %5, align 4
  %48 = add nsw i32 %47, -1
  store i32 %48, i32* %5, align 4
  br label %100

49:                                               ; preds = %34, %34, %34
  %50 = load i32, i32* %5, align 4
  %51 = add nsw i32 %50, -1
  store i32 %51, i32* %5, align 4
  br label %100

52:                                               ; preds = %34, %34
  %53 = load i32, i32* %5, align 4
  %54 = mul nsw i32 %53, 2
  %55 = add nsw i32 %54, 1
  %56 = and i32 %55, 31
  %57 = shl i32 1, %56
  %58 = load i32*, i32** %7, align 8
  %59 = load i32, i32* %5, align 4
  %60 = mul nsw i32 %59, 2
  %61 = add nsw i32 %60, 1
  %62 = ashr i32 %61, 5
  %63 = add nsw i32 %62, 1
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %58, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = or i32 %66, %57
  store i32 %67, i32* %65, align 4
  br label %68

68:                                               ; preds = %52, %34
  %69 = load i32, i32* %5, align 4
  %70 = mul nsw i32 %69, 2
  %71 = and i32 %70, 31
  %72 = shl i32 1, %71
  %73 = load i32*, i32** %7, align 8
  %74 = load i32, i32* %5, align 4
  %75 = mul nsw i32 %74, 2
  %76 = ashr i32 %75, 5
  %77 = add nsw i32 %76, 1
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i32, i32* %73, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = or i32 %80, %72
  store i32 %81, i32* %79, align 4
  br label %100

82:                                               ; preds = %34
  %83 = load i32, i32* %5, align 4
  %84 = mul nsw i32 %83, 2
  %85 = add nsw i32 %84, 1
  %86 = and i32 %85, 31
  %87 = shl i32 1, %86
  %88 = load i32*, i32** %7, align 8
  %89 = load i32, i32* %5, align 4
  %90 = mul nsw i32 %89, 2
  %91 = add nsw i32 %90, 1
  %92 = ashr i32 %91, 5
  %93 = add nsw i32 %92, 1
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i32, i32* %88, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = or i32 %96, %87
  store i32 %97, i32* %95, align 4
  br label %100

98:                                               ; preds = %34
  br label %100

99:                                               ; preds = %34
  br label %486

100:                                              ; preds = %98, %82, %68, %49, %44
  br label %101

101:                                              ; preds = %100
  %102 = load i32, i32* %5, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %5, align 4
  br label %30

104:                                              ; preds = %30
  %105 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %105, i32* %5, align 4
  br label %106

106:                                              ; preds = %334, %104
  %107 = load i32, i32* %5, align 4
  %108 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %109 = sub nsw i32 %108, 1
  %110 = icmp slt i32 %107, %109
  br i1 %110, label %111, label %337

111:                                              ; preds = %106
  %112 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %113 = load i32, i32* %5, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %112, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = icmp slt i32 %116, 0
  br i1 %117, label %118, label %282

118:                                              ; preds = %111
  %119 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %120 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 0
  %121 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %119, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.15, i64 0, i64 0), i8* %120)
  %122 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 0
  %123 = call i32 @strcmp(i8* %122, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.16, i64 0, i64 0)) #9
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %129, label %125

125:                                              ; preds = %118
  %126 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 0
  %127 = call i32 @strcmp(i8* %126, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.17, i64 0, i64 0)) #9
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %148

129:                                              ; preds = %125, %118
  %130 = load i32, i32* @kiss, align 4
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %138

132:                                              ; preds = %129
  %133 = load i32, i32* %5, align 4
  %134 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %135 = sub nsw i32 %134, 2
  %136 = icmp eq i32 %133, %135
  br i1 %136, label %137, label %138

137:                                              ; preds = %132
  br label %147

138:                                              ; preds = %132, %129
  %139 = load i32*, i32** %7, align 8
  %140 = load i32*, i32** %7, align 8
  %141 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %142 = load i32, i32* %5, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds i32*, i32** %141, i64 %143
  %145 = load i32*, i32** %144, align 8
  %146 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %139, i32* %140, i32* %145)
  br label %147

147:                                              ; preds = %138, %137
  br label %281

148:                                              ; preds = %125
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 0
  %150 = call i32 @strcmp(i8* %149, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.18, i64 0, i64 0)) #9
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %148
  br label %280

153:                                              ; preds = %148
  %154 = load i32, i32* @kiss, align 4
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %156, label %188

156:                                              ; preds = %153
  %157 = load i32, i32* %5, align 4
  %158 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %159 = sub nsw i32 %158, 2
  %160 = icmp eq i32 %157, %159
  br i1 %160, label %161, label %188

161:                                              ; preds = %156
  %162 = load i32, i32* %5, align 4
  %163 = sub nsw i32 %162, 1
  store i32 %163, i32* %14, align 4
  %164 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %165 = load i32, i32* %5, align 4
  %166 = sub nsw i32 %165, 1
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i32, i32* %164, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %178

171:                                              ; preds = %161
  %172 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %173 = load i32, i32* %5, align 4
  %174 = sub nsw i32 %173, 1
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i32, i32* %172, i64 %175
  %177 = load i32, i32* %176, align 4
  br label %186

178:                                              ; preds = %161
  %179 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %180 = load i32, i32* %5, align 4
  %181 = sub nsw i32 %180, 1
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds i32, i32* %179, i64 %182
  %184 = load i32, i32* %183, align 4
  %185 = sub nsw i32 0, %184
  br label %186

186:                                              ; preds = %178, %171
  %187 = phi i32 [ %177, %171 ], [ %185, %178 ]
  store i32 %187, i32* %17, align 4
  br label %190

188:                                              ; preds = %156, %153
  %189 = load i32, i32* %5, align 4
  store i32 %189, i32* %14, align 4
  store i32 0, i32* %17, align 4
  br label %190

190:                                              ; preds = %188, %186
  %191 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %192 = load i32, i32* %14, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds i32, i32* %191, i64 %193
  %195 = load i32, i32* %194, align 4
  store i32 %195, i32* %15, align 4
  %196 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %197 = load i32, i32* %14, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i32, i32* %196, i64 %198
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %16, align 4
  %201 = load i32, i32* %15, align 4
  store i32 %201, i32* %6, align 4
  br label %202

202:                                              ; preds = %268, %190
  %203 = load i32, i32* %6, align 4
  %204 = load i32, i32* %16, align 4
  %205 = icmp sle i32 %203, %204
  br i1 %205, label %206, label %271

206:                                              ; preds = %202
  %207 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %208 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %207, i32 0, i32 7
  %209 = load i8**, i8*** %208, align 8
  %210 = load i32, i32* %6, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i8*, i8** %209, i64 %211
  %213 = load i8*, i8** %212, align 8
  %214 = icmp eq i8* %213, null
  br i1 %214, label %215, label %239

215:                                              ; preds = %206
  %216 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 0
  %217 = call i8* @util_strsav(i8* %216)
  %218 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %219 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %218, i32 0, i32 7
  %220 = load i8**, i8*** %219, align 8
  %221 = load i32, i32* %6, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i8*, i8** %220, i64 %222
  store i8* %217, i8** %223, align 8
  %224 = load i32, i32* %6, align 4
  %225 = load i32, i32* %17, align 4
  %226 = add nsw i32 %224, %225
  %227 = and i32 %226, 31
  %228 = shl i32 1, %227
  %229 = load i32*, i32** %7, align 8
  %230 = load i32, i32* %6, align 4
  %231 = load i32, i32* %17, align 4
  %232 = add nsw i32 %230, %231
  %233 = ashr i32 %232, 5
  %234 = add nsw i32 %233, 1
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds i32, i32* %229, i64 %235
  %237 = load i32, i32* %236, align 4
  %238 = or i32 %237, %228
  store i32 %238, i32* %236, align 4
  br label %271

239:                                              ; preds = %206
  %240 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %241 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %240, i32 0, i32 7
  %242 = load i8**, i8*** %241, align 8
  %243 = load i32, i32* %6, align 4
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds i8*, i8** %242, i64 %244
  %246 = load i8*, i8** %245, align 8
  %247 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 0
  %248 = call i32 @strcmp(i8* %246, i8* %247) #9
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %266

250:                                              ; preds = %239
  %251 = load i32, i32* %6, align 4
  %252 = load i32, i32* %17, align 4
  %253 = add nsw i32 %251, %252
  %254 = and i32 %253, 31
  %255 = shl i32 1, %254
  %256 = load i32*, i32** %7, align 8
  %257 = load i32, i32* %6, align 4
  %258 = load i32, i32* %17, align 4
  %259 = add nsw i32 %257, %258
  %260 = ashr i32 %259, 5
  %261 = add nsw i32 %260, 1
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds i32, i32* %256, i64 %262
  %264 = load i32, i32* %263, align 4
  %265 = or i32 %264, %255
  store i32 %265, i32* %263, align 4
  br label %271

266:                                              ; preds = %239
  br label %267

267:                                              ; preds = %266
  br label %268

268:                                              ; preds = %267
  %269 = load i32, i32* %6, align 4
  %270 = add nsw i32 %269, 1
  store i32 %270, i32* %6, align 4
  br label %202

271:                                              ; preds = %250, %215, %202
  %272 = load i32, i32* %6, align 4
  %273 = load i32, i32* %16, align 4
  %274 = icmp sgt i32 %272, %273
  br i1 %274, label %275, label %279

275:                                              ; preds = %271
  %276 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %277 = load i32, i32* %5, align 4
  %278 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %276, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6.19, i64 0, i64 0), i32 %277)
  call void @exit(i32 -1) #10
  unreachable

279:                                              ; preds = %271
  br label %280

280:                                              ; preds = %279, %152
  br label %281

281:                                              ; preds = %280, %147
  br label %333

282:                                              ; preds = %111
  %283 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %284 = load i32, i32* %5, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds i32, i32* %283, i64 %285
  %287 = load i32, i32* %286, align 4
  store i32 %287, i32* %6, align 4
  br label %288

288:                                              ; preds = %329, %282
  %289 = load i32, i32* %6, align 4
  %290 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %291 = load i32, i32* %5, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds i32, i32* %290, i64 %292
  %294 = load i32, i32* %293, align 4
  %295 = icmp sle i32 %289, %294
  br i1 %295, label %296, label %332

296:                                              ; preds = %288
  %297 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %298 = call i32 @getc(%struct._IO_FILE* %297)
  switch i32 %298, label %327 [
    i32 -1, label %299
    i32 10, label %300
    i32 32, label %311
    i32 124, label %311
    i32 9, label %311
    i32 49, label %314
    i32 48, label %326
  ]

299:                                              ; preds = %296
  br label %486

300:                                              ; preds = %296
  %301 = load i32, i32* @line_length_error, align 4
  %302 = icmp ne i32 %301, 0
  br i1 %302, label %306, label %303

303:                                              ; preds = %300
  %304 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %305 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %304, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1.14, i64 0, i64 0))
  br label %306

306:                                              ; preds = %303, %300
  store i32 1, i32* @line_length_error, align 4
  %307 = load i32, i32* @lineno, align 4
  %308 = add nsw i32 %307, 1
  store i32 %308, i32* @lineno, align 4
  %309 = load i32, i32* %6, align 4
  %310 = add nsw i32 %309, -1
  store i32 %310, i32* %6, align 4
  br label %328

311:                                              ; preds = %296, %296, %296
  %312 = load i32, i32* %6, align 4
  %313 = add nsw i32 %312, -1
  store i32 %313, i32* %6, align 4
  br label %328

314:                                              ; preds = %296
  %315 = load i32, i32* %6, align 4
  %316 = and i32 %315, 31
  %317 = shl i32 1, %316
  %318 = load i32*, i32** %7, align 8
  %319 = load i32, i32* %6, align 4
  %320 = ashr i32 %319, 5
  %321 = add nsw i32 %320, 1
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds i32, i32* %318, i64 %322
  %324 = load i32, i32* %323, align 4
  %325 = or i32 %324, %317
  store i32 %325, i32* %323, align 4
  br label %326

326:                                              ; preds = %314, %296
  br label %328

327:                                              ; preds = %296
  br label %486

328:                                              ; preds = %326, %311, %306
  br label %329

329:                                              ; preds = %328
  %330 = load i32, i32* %6, align 4
  %331 = add nsw i32 %330, 1
  store i32 %331, i32* %6, align 4
  br label %288

332:                                              ; preds = %288
  br label %333

333:                                              ; preds = %332, %281
  br label %334

334:                                              ; preds = %333
  %335 = load i32, i32* %5, align 4
  %336 = add nsw i32 %335, 1
  store i32 %336, i32* %5, align 4
  br label %106

337:                                              ; preds = %106
  %338 = load i32, i32* @kiss, align 4
  %339 = icmp ne i32 %338, 0
  br i1 %339, label %340, label %350

340:                                              ; preds = %337
  store i32 1, i32* %10, align 4
  store i32 1, i32* %12, align 4
  %341 = load i32*, i32** %8, align 8
  %342 = load i32*, i32** %7, align 8
  %343 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %344 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %345 = sub nsw i32 %344, 2
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds i32*, i32** %343, i64 %346
  %348 = load i32*, i32** %347, align 8
  %349 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_xor to i32* (i32*, i32*, i32*, ...)*)(i32* %341, i32* %342, i32* %348)
  br label %354

350:                                              ; preds = %337
  %351 = load i32*, i32** %8, align 8
  %352 = load i32*, i32** %7, align 8
  %353 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %351, i32* %352)
  br label %354

354:                                              ; preds = %350, %340
  %355 = load i32*, i32** %9, align 8
  %356 = load i32*, i32** %7, align 8
  %357 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %355, i32* %356)
  %358 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %359 = load i32, i32* %5, align 4
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds i32, i32* %358, i64 %360
  %362 = load i32, i32* %361, align 4
  store i32 %362, i32* %6, align 4
  br label %363

363:                                              ; preds = %449, %354
  %364 = load i32, i32* %6, align 4
  %365 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %366 = load i32, i32* %5, align 4
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds i32, i32* %365, i64 %367
  %369 = load i32, i32* %368, align 4
  %370 = icmp sle i32 %364, %369
  br i1 %370, label %371, label %452

371:                                              ; preds = %363
  %372 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %373 = call i32 @getc(%struct._IO_FILE* %372)
  switch i32 %373, label %447 [
    i32 -1, label %374
    i32 10, label %375
    i32 32, label %386
    i32 124, label %386
    i32 9, label %386
    i32 52, label %389
    i32 49, label %389
    i32 51, label %408
    i32 48, label %408
    i32 50, label %427
    i32 45, label %427
    i32 126, label %446
  ]

374:                                              ; preds = %371
  br label %486

375:                                              ; preds = %371
  %376 = load i32, i32* @line_length_error, align 4
  %377 = icmp ne i32 %376, 0
  br i1 %377, label %381, label %378

378:                                              ; preds = %375
  %379 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %380 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %379, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1.14, i64 0, i64 0))
  br label %381

381:                                              ; preds = %378, %375
  store i32 1, i32* @line_length_error, align 4
  %382 = load i32, i32* @lineno, align 4
  %383 = add nsw i32 %382, 1
  store i32 %383, i32* @lineno, align 4
  %384 = load i32, i32* %6, align 4
  %385 = add nsw i32 %384, -1
  store i32 %385, i32* %6, align 4
  br label %448

386:                                              ; preds = %371, %371, %371
  %387 = load i32, i32* %6, align 4
  %388 = add nsw i32 %387, -1
  store i32 %388, i32* %6, align 4
  br label %448

389:                                              ; preds = %371, %371
  %390 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %391 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %390, i32 0, i32 4
  %392 = load i32, i32* %391, align 8
  %393 = and i32 %392, 1
  %394 = icmp ne i32 %393, 0
  br i1 %394, label %395, label %407

395:                                              ; preds = %389
  %396 = load i32, i32* %6, align 4
  %397 = and i32 %396, 31
  %398 = shl i32 1, %397
  %399 = load i32*, i32** %7, align 8
  %400 = load i32, i32* %6, align 4
  %401 = ashr i32 %400, 5
  %402 = add nsw i32 %401, 1
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds i32, i32* %399, i64 %403
  %405 = load i32, i32* %404, align 4
  %406 = or i32 %405, %398
  store i32 %406, i32* %404, align 4
  store i32 1, i32* %10, align 4
  br label %407

407:                                              ; preds = %395, %389
  br label %448

408:                                              ; preds = %371, %371
  %409 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %410 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %409, i32 0, i32 4
  %411 = load i32, i32* %410, align 8
  %412 = and i32 %411, 4
  %413 = icmp ne i32 %412, 0
  br i1 %413, label %414, label %426

414:                                              ; preds = %408
  %415 = load i32, i32* %6, align 4
  %416 = and i32 %415, 31
  %417 = shl i32 1, %416
  %418 = load i32*, i32** %8, align 8
  %419 = load i32, i32* %6, align 4
  %420 = ashr i32 %419, 5
  %421 = add nsw i32 %420, 1
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds i32, i32* %418, i64 %422
  %424 = load i32, i32* %423, align 4
  %425 = or i32 %424, %417
  store i32 %425, i32* %423, align 4
  store i32 1, i32* %12, align 4
  br label %426

426:                                              ; preds = %414, %408
  br label %448

427:                                              ; preds = %371, %371
  %428 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %429 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %428, i32 0, i32 4
  %430 = load i32, i32* %429, align 8
  %431 = and i32 %430, 2
  %432 = icmp ne i32 %431, 0
  br i1 %432, label %433, label %445

433:                                              ; preds = %427
  %434 = load i32, i32* %6, align 4
  %435 = and i32 %434, 31
  %436 = shl i32 1, %435
  %437 = load i32*, i32** %9, align 8
  %438 = load i32, i32* %6, align 4
  %439 = ashr i32 %438, 5
  %440 = add nsw i32 %439, 1
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds i32, i32* %437, i64 %441
  %443 = load i32, i32* %442, align 4
  %444 = or i32 %443, %436
  store i32 %444, i32* %442, align 4
  store i32 1, i32* %11, align 4
  br label %445

445:                                              ; preds = %433, %427
  br label %446

446:                                              ; preds = %445, %371
  br label %448

447:                                              ; preds = %371
  br label %486

448:                                              ; preds = %446, %426, %407, %386, %381
  br label %449

449:                                              ; preds = %448
  %450 = load i32, i32* %6, align 4
  %451 = add nsw i32 %450, 1
  store i32 %451, i32* %6, align 4
  br label %363

452:                                              ; preds = %363
  %453 = load i32, i32* %10, align 4
  %454 = icmp ne i32 %453, 0
  br i1 %454, label %455, label %463

455:                                              ; preds = %452
  %456 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %457 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %456, i32 0, i32 0
  %458 = load %struct.set_family*, %struct.set_family** %457, align 8
  %459 = load i32*, i32** %7, align 8
  %460 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %458, i32* %459)
  %461 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %462 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %461, i32 0, i32 0
  store %struct.set_family* %460, %struct.set_family** %462, align 8
  br label %463

463:                                              ; preds = %455, %452
  %464 = load i32, i32* %11, align 4
  %465 = icmp ne i32 %464, 0
  br i1 %465, label %466, label %474

466:                                              ; preds = %463
  %467 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %468 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %467, i32 0, i32 1
  %469 = load %struct.set_family*, %struct.set_family** %468, align 8
  %470 = load i32*, i32** %9, align 8
  %471 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %469, i32* %470)
  %472 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %473 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %472, i32 0, i32 1
  store %struct.set_family* %471, %struct.set_family** %473, align 8
  br label %474

474:                                              ; preds = %466, %463
  %475 = load i32, i32* %12, align 4
  %476 = icmp ne i32 %475, 0
  br i1 %476, label %477, label %485

477:                                              ; preds = %474
  %478 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %479 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %478, i32 0, i32 2
  %480 = load %struct.set_family*, %struct.set_family** %479, align 8
  %481 = load i32*, i32** %8, align 8
  %482 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %480, i32* %481)
  %483 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %484 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %483, i32 0, i32 2
  store %struct.set_family* %482, %struct.set_family** %484, align 8
  br label %485

485:                                              ; preds = %477, %474
  br label %492

486:                                              ; preds = %447, %374, %327, %299, %99, %37
  %487 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %488 = load i32, i32* @lineno, align 4
  %489 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %487, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.20, i64 0, i64 0), i32 %488)
  %490 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %491 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @skip_line(%struct._IO_FILE* %490, %struct._IO_FILE* %491, i32 1)
  br label %492

492:                                              ; preds = %486, %485
  ret void
}

declare dso_local i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #5

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #6

; Function Attrs: noinline nounwind uwtable
define dso_local void @parse_pla(%struct._IO_FILE* %0, %struct.PLA_t* %1) #0 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca %struct.PLA_t*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [256 x i8], align 16
  %11 = alloca %struct.symbolic_struct*, align 8
  %12 = alloca %struct.symbolic_struct*, align 8
  %13 = alloca %struct.symbolic_struct*, align 8
  %14 = alloca %struct.symbolic_struct*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.pair_struct*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store %struct.PLA_t* %1, %struct.PLA_t** %4, align 8
  store i32 1, i32* @lineno, align 4
  store i32 0, i32* @line_length_error, align 4
  br label %17

17:                                               ; preds = %738, %2
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %19 = call i32 @getc(%struct._IO_FILE* %18)
  store i32 %19, i32* %7, align 4
  switch i32 %19, label %702 [
    i32 -1, label %20
    i32 10, label %21
    i32 32, label %24
    i32 9, label %24
    i32 12, label %24
    i32 13, label %24
    i32 35, label %25
    i32 46, label %32
  ]

20:                                               ; preds = %17
  br label %739

21:                                               ; preds = %17
  %22 = load i32, i32* @lineno, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* @lineno, align 4
  br label %24

24:                                               ; preds = %21, %17, %17, %17, %17
  br label %738

25:                                               ; preds = %17
  %26 = load i32, i32* %7, align 4
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %28 = call i32 @ungetc(i32 %26, %struct._IO_FILE* %27)
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %31 = load i32, i32* @echo_comments, align 4
  call void @skip_line(%struct._IO_FILE* %29, %struct._IO_FILE* %30, i32 %31)
  br label %738

32:                                               ; preds = %17
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %34 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %35 = call i8* @get_word(%struct._IO_FILE* %33, i8* %34)
  %36 = call i32 @strcmp(i8* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.21, i64 0, i64 0)) #9
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %60

38:                                               ; preds = %32
  %39 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %40 = icmp ne i32* %39, null
  br i1 %40, label %41, label %46

41:                                               ; preds = %38
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9.22, i64 0, i64 0))
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @skip_line(%struct._IO_FILE* %44, %struct._IO_FILE* %45, i32 0)
  br label %59

46:                                               ; preds = %38
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %48 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.23, i64 0, i64 0), i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2))
  %49 = icmp ne i32 %48, 1
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11.24, i64 0, i64 0))
  br label %51

51:                                               ; preds = %50, %46
  %52 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %54 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %55 = sext i32 %54 to i64
  %56 = mul i64 4, %55
  %57 = call noalias i8* @malloc(i64 %56) #7
  %58 = bitcast i8* %57 to i32*
  store i32* %58, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  br label %59

59:                                               ; preds = %51, %41
  br label %701

60:                                               ; preds = %32
  %61 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %62 = call i32 @strcmp(i8* %61, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.25, i64 0, i64 0)) #9
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %90

64:                                               ; preds = %60
  %65 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %66 = icmp ne i32* %65, null
  br i1 %66, label %67, label %72

67:                                               ; preds = %64
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %69 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.26, i64 0, i64 0))
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @skip_line(%struct._IO_FILE* %70, %struct._IO_FILE* %71, i32 0)
  br label %89

72:                                               ; preds = %64
  %73 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %74 = icmp eq i32* %73, null
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0))
  br label %76

76:                                               ; preds = %75, %72
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %78 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %79 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %80 = sub nsw i32 %79, 1
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i32, i32* %78, i64 %81
  %83 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %77, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.23, i64 0, i64 0), i32* %82)
  %84 = icmp ne i32 %83, 1
  br i1 %84, label %85, label %86

85:                                               ; preds = %76
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0))
  br label %86

86:                                               ; preds = %85, %76
  call void (...) bitcast (void ()* @cube_setup to void (...)*)()
  %87 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %88 = call i32 @PLA_labels(%struct.PLA_t* %87)
  br label %89

89:                                               ; preds = %86, %67
  br label %700

90:                                               ; preds = %60
  %91 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %92 = call i32 @strcmp(i8* %91, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0)) #9
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %148

94:                                               ; preds = %90
  %95 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %96 = icmp ne i32* %95, null
  br i1 %96, label %97, label %102

97:                                               ; preds = %94
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %99 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %98, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0))
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @skip_line(%struct._IO_FILE* %100, %struct._IO_FILE* %101, i32 0)
  br label %147

102:                                              ; preds = %94
  %103 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %104 = icmp ne i32* %103, null
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i64 0, i64 0))
  br label %106

106:                                              ; preds = %105, %102
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %108 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %107, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2))
  %109 = icmp ne i32 %108, 2
  br i1 %109, label %110, label %111

110:                                              ; preds = %106
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0))
  br label %111

111:                                              ; preds = %110, %106
  %112 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %113 = icmp slt i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.21, i64 0, i64 0))
  br label %115

115:                                              ; preds = %114, %111
  %116 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %117 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %118 = icmp slt i32 %116, %117
  br i1 %118, label %119, label %120

119:                                              ; preds = %115
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.22, i64 0, i64 0))
  br label %120

120:                                              ; preds = %119, %115
  %121 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %122 = sext i32 %121 to i64
  %123 = mul i64 4, %122
  %124 = call noalias i8* @malloc(i64 %123) #7
  %125 = bitcast i8* %124 to i32*
  store i32* %125, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %126 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %126, i32* %6, align 4
  br label %127

127:                                              ; preds = %141, %120
  %128 = load i32, i32* %6, align 4
  %129 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %130 = icmp slt i32 %128, %129
  br i1 %130, label %131, label %144

131:                                              ; preds = %127
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %133 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %134 = load i32, i32* %6, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i32, i32* %133, i64 %135
  %137 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.23, i64 0, i64 0), i32* %136)
  %138 = icmp ne i32 %137, 1
  br i1 %138, label %139, label %140

139:                                              ; preds = %131
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0))
  br label %140

140:                                              ; preds = %139, %131
  br label %141

141:                                              ; preds = %140
  %142 = load i32, i32* %6, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %6, align 4
  br label %127

144:                                              ; preds = %127
  call void (...) bitcast (void ()* @cube_setup to void (...)*)()
  %145 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %146 = call i32 @PLA_labels(%struct.PLA_t* %145)
  br label %147

147:                                              ; preds = %144, %97
  br label %699

148:                                              ; preds = %90
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %150 = call i32 @strcmp(i8* %149, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #9
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %148
  %153 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %154 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %153, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.23, i64 0, i64 0), i32* %8)
  br label %698

155:                                              ; preds = %148
  %156 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %157 = call i32 @strcmp(i8* %156, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0)) #9
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %163, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %161 = call i32 @strcmp(i8* %160, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i64 0, i64 0)) #9
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %159, %155
  br label %739

164:                                              ; preds = %159
  %165 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %166 = call i32 @strcmp(i8* %165, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0)) #9
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %164
  store i32 1, i32* @kiss, align 4
  br label %696

169:                                              ; preds = %164
  %170 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %171 = call i32 @strcmp(i8* %170, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0)) #9
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %215

173:                                              ; preds = %169
  %174 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %176 = call i8* @get_word(%struct._IO_FILE* %174, i8* %175)
  store i32 0, i32* %5, align 4
  br label %177

177:                                              ; preds = %203, %173
  %178 = load i32, i32* %5, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds [0 x %struct.pla_types_struct], [0 x %struct.pla_types_struct]* bitcast ([21 x %struct.pla_types_struct]* @pla_types to [0 x %struct.pla_types_struct]*), i64 0, i64 %179
  %181 = getelementptr inbounds %struct.pla_types_struct, %struct.pla_types_struct* %180, i32 0, i32 0
  %182 = load i8*, i8** %181, align 8
  %183 = icmp ne i8* %182, null
  br i1 %183, label %184, label %206

184:                                              ; preds = %177
  %185 = load i32, i32* %5, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [0 x %struct.pla_types_struct], [0 x %struct.pla_types_struct]* bitcast ([21 x %struct.pla_types_struct]* @pla_types to [0 x %struct.pla_types_struct]*), i64 0, i64 %186
  %188 = getelementptr inbounds %struct.pla_types_struct, %struct.pla_types_struct* %187, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  %190 = getelementptr inbounds i8, i8* %189, i64 1
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %192 = call i32 @strcmp(i8* %190, i8* %191) #9
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %202

194:                                              ; preds = %184
  %195 = load i32, i32* %5, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds [0 x %struct.pla_types_struct], [0 x %struct.pla_types_struct]* bitcast ([21 x %struct.pla_types_struct]* @pla_types to [0 x %struct.pla_types_struct]*), i64 0, i64 %196
  %198 = getelementptr inbounds %struct.pla_types_struct, %struct.pla_types_struct* %197, i32 0, i32 1
  %199 = load i32, i32* %198, align 8
  %200 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %201 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %200, i32 0, i32 4
  store i32 %199, i32* %201, align 8
  br label %206

202:                                              ; preds = %184
  br label %203

203:                                              ; preds = %202
  %204 = load i32, i32* %5, align 4
  %205 = add nsw i32 %204, 1
  store i32 %205, i32* %5, align 4
  br label %177

206:                                              ; preds = %194, %177
  %207 = load i32, i32* %5, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [0 x %struct.pla_types_struct], [0 x %struct.pla_types_struct]* bitcast ([21 x %struct.pla_types_struct]* @pla_types to [0 x %struct.pla_types_struct]*), i64 0, i64 %208
  %210 = getelementptr inbounds %struct.pla_types_struct, %struct.pla_types_struct* %209, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  %212 = icmp eq i8* %211, null
  br i1 %212, label %213, label %214

213:                                              ; preds = %206
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i64 0, i64 0))
  br label %214

214:                                              ; preds = %213, %206
  br label %695

215:                                              ; preds = %169
  %216 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %217 = call i32 @strcmp(i8* %216, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0)) #9
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %278

219:                                              ; preds = %215
  %220 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %221 = icmp eq i32* %220, null
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.30, i64 0, i64 0))
  br label %223

223:                                              ; preds = %222, %219
  %224 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %225 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %224, i32 0, i32 7
  %226 = load i8**, i8*** %225, align 8
  %227 = icmp eq i8** %226, null
  br i1 %227, label %228, label %231

228:                                              ; preds = %223
  %229 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %230 = call i32 @PLA_labels(%struct.PLA_t* %229)
  br label %231

231:                                              ; preds = %228, %223
  store i32 0, i32* %6, align 4
  br label %232

232:                                              ; preds = %274, %231
  %233 = load i32, i32* %6, align 4
  %234 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %235 = icmp slt i32 %233, %234
  br i1 %235, label %236, label %277

236:                                              ; preds = %232
  %237 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %238 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %239 = call i8* @get_word(%struct._IO_FILE* %237, i8* %238)
  %240 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %241 = load i32, i32* %6, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds i32, i32* %240, i64 %242
  %244 = load i32, i32* %243, align 4
  store i32 %244, i32* %5, align 4
  %245 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %246 = call i8* @util_strsav(i8* %245)
  %247 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %248 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %247, i32 0, i32 7
  %249 = load i8**, i8*** %248, align 8
  %250 = load i32, i32* %5, align 4
  %251 = add nsw i32 %250, 1
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds i8*, i8** %249, i64 %252
  store i8* %246, i8** %253, align 8
  %254 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %255 = call i64 @strlen(i8* %254) #9
  %256 = add i64 %255, 6
  %257 = mul i64 1, %256
  %258 = call noalias i8* @malloc(i64 %257) #7
  %259 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %260 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %259, i32 0, i32 7
  %261 = load i8**, i8*** %260, align 8
  %262 = load i32, i32* %5, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds i8*, i8** %261, i64 %263
  store i8* %258, i8** %264, align 8
  %265 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %266 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %265, i32 0, i32 7
  %267 = load i8**, i8*** %266, align 8
  %268 = load i32, i32* %5, align 4
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds i8*, i8** %267, i64 %269
  %271 = load i8*, i8** %270, align 8
  %272 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %273 = call i32 (i8*, i8*, ...) @sprintf(i8* %271, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), i8* %272) #7
  br label %274

274:                                              ; preds = %236
  %275 = load i32, i32* %6, align 4
  %276 = add nsw i32 %275, 1
  store i32 %276, i32* %6, align 4
  br label %232

277:                                              ; preds = %232
  br label %694

278:                                              ; preds = %215
  %279 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %280 = call i32 @strcmp(i8* %279, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i64 0, i64 0)) #9
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %326

282:                                              ; preds = %278
  %283 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %284 = icmp eq i32* %283, null
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.30, i64 0, i64 0))
  br label %286

286:                                              ; preds = %285, %282
  %287 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %288 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %287, i32 0, i32 7
  %289 = load i8**, i8*** %288, align 8
  %290 = icmp eq i8** %289, null
  br i1 %290, label %291, label %294

291:                                              ; preds = %286
  %292 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %293 = call i32 @PLA_labels(%struct.PLA_t* %292)
  br label %294

294:                                              ; preds = %291, %286
  %295 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %296 = sub nsw i32 %295, 1
  store i32 %296, i32* %6, align 4
  %297 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %298 = load i32, i32* %6, align 4
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds i32, i32* %297, i64 %299
  %301 = load i32, i32* %300, align 4
  store i32 %301, i32* %5, align 4
  br label %302

302:                                              ; preds = %322, %294
  %303 = load i32, i32* %5, align 4
  %304 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %305 = load i32, i32* %6, align 4
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds i32, i32* %304, i64 %306
  %308 = load i32, i32* %307, align 4
  %309 = icmp sle i32 %303, %308
  br i1 %309, label %310, label %325

310:                                              ; preds = %302
  %311 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %312 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %313 = call i8* @get_word(%struct._IO_FILE* %311, i8* %312)
  %314 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %315 = call i8* @util_strsav(i8* %314)
  %316 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %317 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %316, i32 0, i32 7
  %318 = load i8**, i8*** %317, align 8
  %319 = load i32, i32* %5, align 4
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds i8*, i8** %318, i64 %320
  store i8* %315, i8** %321, align 8
  br label %322

322:                                              ; preds = %310
  %323 = load i32, i32* %5, align 4
  %324 = add nsw i32 %323, 1
  store i32 %324, i32* %5, align 4
  br label %302

325:                                              ; preds = %302
  br label %693

326:                                              ; preds = %278
  %327 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %328 = call i32 @strcmp(i8* %327, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0)) #9
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %377

330:                                              ; preds = %326
  %331 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %332 = icmp eq i32* %331, null
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0))
  br label %334

334:                                              ; preds = %333, %330
  %335 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %336 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %335, i32 0, i32 7
  %337 = load i8**, i8*** %336, align 8
  %338 = icmp eq i8** %337, null
  br i1 %338, label %339, label %342

339:                                              ; preds = %334
  %340 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %341 = call i32 @PLA_labels(%struct.PLA_t* %340)
  br label %342

342:                                              ; preds = %339, %334
  %343 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %344 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %343, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), i32* %6)
  %345 = icmp ne i32 %344, 1
  br i1 %345, label %346, label %347

346:                                              ; preds = %342
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i64 0, i64 0))
  br label %347

347:                                              ; preds = %346, %342
  %348 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %349 = load i32, i32* %6, align 4
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds i32, i32* %348, i64 %350
  %352 = load i32, i32* %351, align 4
  store i32 %352, i32* %5, align 4
  br label %353

353:                                              ; preds = %373, %347
  %354 = load i32, i32* %5, align 4
  %355 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %356 = load i32, i32* %6, align 4
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds i32, i32* %355, i64 %357
  %359 = load i32, i32* %358, align 4
  %360 = icmp sle i32 %354, %359
  br i1 %360, label %361, label %376

361:                                              ; preds = %353
  %362 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %363 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %364 = call i8* @get_word(%struct._IO_FILE* %362, i8* %363)
  %365 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %366 = call i8* @util_strsav(i8* %365)
  %367 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %368 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %367, i32 0, i32 7
  %369 = load i8**, i8*** %368, align 8
  %370 = load i32, i32* %5, align 4
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds i8*, i8** %369, i64 %371
  store i8* %366, i8** %372, align 8
  br label %373

373:                                              ; preds = %361
  %374 = load i32, i32* %5, align 4
  %375 = add nsw i32 %374, 1
  store i32 %375, i32* %5, align 4
  br label %353

376:                                              ; preds = %353
  br label %692

377:                                              ; preds = %326
  %378 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %379 = call i32 @strcmp(i8* %378, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0)) #9
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %417

381:                                              ; preds = %377
  %382 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %383 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %384 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %385 = call i32 @read_symbolic(%struct._IO_FILE* %382, %struct.PLA_t* %383, i8* %384, %struct.symbolic_struct** %11)
  %386 = icmp ne i32 %385, 0
  br i1 %386, label %387, label %415

387:                                              ; preds = %381
  %388 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %389 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %388, i32 0, i32 8
  %390 = load %struct.symbolic_struct*, %struct.symbolic_struct** %389, align 8
  %391 = icmp eq %struct.symbolic_struct* %390, null
  br i1 %391, label %392, label %396

392:                                              ; preds = %387
  %393 = load %struct.symbolic_struct*, %struct.symbolic_struct** %11, align 8
  %394 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %395 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %394, i32 0, i32 8
  store %struct.symbolic_struct* %393, %struct.symbolic_struct** %395, align 8
  br label %414

396:                                              ; preds = %387
  %397 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %398 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %397, i32 0, i32 8
  %399 = load %struct.symbolic_struct*, %struct.symbolic_struct** %398, align 8
  store %struct.symbolic_struct* %399, %struct.symbolic_struct** %12, align 8
  br label %400

400:                                              ; preds = %406, %396
  %401 = load %struct.symbolic_struct*, %struct.symbolic_struct** %12, align 8
  %402 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %401, i32 0, i32 4
  %403 = load %struct.symbolic_struct*, %struct.symbolic_struct** %402, align 8
  %404 = icmp ne %struct.symbolic_struct* %403, null
  br i1 %404, label %405, label %410

405:                                              ; preds = %400
  br label %406

406:                                              ; preds = %405
  %407 = load %struct.symbolic_struct*, %struct.symbolic_struct** %12, align 8
  %408 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %407, i32 0, i32 4
  %409 = load %struct.symbolic_struct*, %struct.symbolic_struct** %408, align 8
  store %struct.symbolic_struct* %409, %struct.symbolic_struct** %12, align 8
  br label %400

410:                                              ; preds = %400
  %411 = load %struct.symbolic_struct*, %struct.symbolic_struct** %11, align 8
  %412 = load %struct.symbolic_struct*, %struct.symbolic_struct** %12, align 8
  %413 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %412, i32 0, i32 4
  store %struct.symbolic_struct* %411, %struct.symbolic_struct** %413, align 8
  br label %414

414:                                              ; preds = %410, %392
  br label %416

415:                                              ; preds = %381
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38, i64 0, i64 0))
  br label %416

416:                                              ; preds = %415, %414
  br label %691

417:                                              ; preds = %377
  %418 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %419 = call i32 @strcmp(i8* %418, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.39, i64 0, i64 0)) #9
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %421, label %457

421:                                              ; preds = %417
  %422 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %423 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %424 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %425 = call i32 @read_symbolic(%struct._IO_FILE* %422, %struct.PLA_t* %423, i8* %424, %struct.symbolic_struct** %13)
  %426 = icmp ne i32 %425, 0
  br i1 %426, label %427, label %455

427:                                              ; preds = %421
  %428 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %429 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %428, i32 0, i32 9
  %430 = load %struct.symbolic_struct*, %struct.symbolic_struct** %429, align 8
  %431 = icmp eq %struct.symbolic_struct* %430, null
  br i1 %431, label %432, label %436

432:                                              ; preds = %427
  %433 = load %struct.symbolic_struct*, %struct.symbolic_struct** %13, align 8
  %434 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %435 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %434, i32 0, i32 9
  store %struct.symbolic_struct* %433, %struct.symbolic_struct** %435, align 8
  br label %454

436:                                              ; preds = %427
  %437 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %438 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %437, i32 0, i32 9
  %439 = load %struct.symbolic_struct*, %struct.symbolic_struct** %438, align 8
  store %struct.symbolic_struct* %439, %struct.symbolic_struct** %14, align 8
  br label %440

440:                                              ; preds = %446, %436
  %441 = load %struct.symbolic_struct*, %struct.symbolic_struct** %14, align 8
  %442 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %441, i32 0, i32 4
  %443 = load %struct.symbolic_struct*, %struct.symbolic_struct** %442, align 8
  %444 = icmp ne %struct.symbolic_struct* %443, null
  br i1 %444, label %445, label %450

445:                                              ; preds = %440
  br label %446

446:                                              ; preds = %445
  %447 = load %struct.symbolic_struct*, %struct.symbolic_struct** %14, align 8
  %448 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %447, i32 0, i32 4
  %449 = load %struct.symbolic_struct*, %struct.symbolic_struct** %448, align 8
  store %struct.symbolic_struct* %449, %struct.symbolic_struct** %14, align 8
  br label %440

450:                                              ; preds = %440
  %451 = load %struct.symbolic_struct*, %struct.symbolic_struct** %13, align 8
  %452 = load %struct.symbolic_struct*, %struct.symbolic_struct** %14, align 8
  %453 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %452, i32 0, i32 4
  store %struct.symbolic_struct* %451, %struct.symbolic_struct** %453, align 8
  br label %454

454:                                              ; preds = %450, %432
  br label %456

455:                                              ; preds = %421
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.40, i64 0, i64 0))
  br label %456

456:                                              ; preds = %455, %454
  br label %690

457:                                              ; preds = %417
  %458 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %459 = call i32 @strcmp(i8* %458, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0)) #9
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %461, label %564

461:                                              ; preds = %457
  %462 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %463 = icmp eq i32* %462, null
  br i1 %463, label %464, label %465

464:                                              ; preds = %461
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.42, i64 0, i64 0))
  br label %465

465:                                              ; preds = %464, %461
  %466 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %467 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %466, i32 0, i32 5
  %468 = load i32*, i32** %467, align 8
  %469 = icmp ne i32* %468, null
  br i1 %469, label %470, label %475

470:                                              ; preds = %465
  %471 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %472 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %471, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i64 0, i64 0))
  %473 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %474 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @skip_line(%struct._IO_FILE* %473, %struct._IO_FILE* %474, i32 0)
  br label %563

475:                                              ; preds = %465
  br label %476

476:                                              ; preds = %485, %475
  %477 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %478 = call i32 @getc(%struct._IO_FILE* %477)
  store i32 %478, i32* %7, align 4
  br label %479

479:                                              ; preds = %476
  %480 = load i32, i32* %7, align 4
  %481 = icmp eq i32 %480, 32
  br i1 %481, label %485, label %482

482:                                              ; preds = %479
  %483 = load i32, i32* %7, align 4
  %484 = icmp eq i32 %483, 9
  br label %485

485:                                              ; preds = %482, %479
  %486 = phi i1 [ true, %479 ], [ %484, %482 ]
  br i1 %486, label %476, label %487

487:                                              ; preds = %485
  %488 = load i32, i32* %7, align 4
  %489 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %490 = call i32 @ungetc(i32 %488, %struct._IO_FILE* %489)
  %491 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %492 = getelementptr inbounds i32, i32* %491, i64 0
  %493 = load i32, i32* %492, align 4
  %494 = and i32 %493, 1023
  %495 = mul i32 32, %494
  %496 = icmp ule i32 %495, 32
  br i1 %496, label %497, label %498

497:                                              ; preds = %487
  br label %508

498:                                              ; preds = %487
  %499 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %500 = getelementptr inbounds i32, i32* %499, i64 0
  %501 = load i32, i32* %500, align 4
  %502 = and i32 %501, 1023
  %503 = mul i32 32, %502
  %504 = sub i32 %503, 1
  %505 = lshr i32 %504, 5
  %506 = add i32 %505, 1
  %507 = add i32 %506, 1
  br label %508

508:                                              ; preds = %498, %497
  %509 = phi i32 [ 2, %497 ], [ %507, %498 ]
  %510 = zext i32 %509 to i64
  %511 = mul i64 4, %510
  %512 = call noalias i8* @malloc(i64 %511) #7
  %513 = bitcast i8* %512 to i32*
  %514 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %515 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %513, i32* %514)
  %516 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %517 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %516, i32 0, i32 5
  store i32* %515, i32** %517, align 8
  %518 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %519 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %520 = sub nsw i32 %519, 1
  %521 = sext i32 %520 to i64
  %522 = getelementptr inbounds i32, i32* %518, i64 %521
  %523 = load i32, i32* %522, align 4
  store i32 %523, i32* %9, align 4
  %524 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %525 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %526 = sub nsw i32 %525, 1
  %527 = sext i32 %526 to i64
  %528 = getelementptr inbounds i32, i32* %524, i64 %527
  %529 = load i32, i32* %528, align 4
  store i32 %529, i32* %5, align 4
  br label %530

530:                                              ; preds = %559, %508
  %531 = load i32, i32* %5, align 4
  %532 = load i32, i32* %9, align 4
  %533 = icmp sle i32 %531, %532
  br i1 %533, label %534, label %562

534:                                              ; preds = %530
  %535 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %536 = call i32 @getc(%struct._IO_FILE* %535)
  store i32 %536, i32* %7, align 4
  %537 = icmp eq i32 %536, 48
  br i1 %537, label %538, label %553

538:                                              ; preds = %534
  %539 = load i32, i32* %5, align 4
  %540 = and i32 %539, 31
  %541 = shl i32 1, %540
  %542 = xor i32 %541, -1
  %543 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %544 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %543, i32 0, i32 5
  %545 = load i32*, i32** %544, align 8
  %546 = load i32, i32* %5, align 4
  %547 = ashr i32 %546, 5
  %548 = add nsw i32 %547, 1
  %549 = sext i32 %548 to i64
  %550 = getelementptr inbounds i32, i32* %545, i64 %549
  %551 = load i32, i32* %550, align 4
  %552 = and i32 %551, %542
  store i32 %552, i32* %550, align 4
  br label %558

553:                                              ; preds = %534
  %554 = load i32, i32* %7, align 4
  %555 = icmp ne i32 %554, 49
  br i1 %555, label %556, label %557

556:                                              ; preds = %553
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.44, i64 0, i64 0))
  br label %557

557:                                              ; preds = %556, %553
  br label %558

558:                                              ; preds = %557, %538
  br label %559

559:                                              ; preds = %558
  %560 = load i32, i32* %5, align 4
  %561 = add nsw i32 %560, 1
  store i32 %561, i32* %5, align 4
  br label %530

562:                                              ; preds = %530
  br label %563

563:                                              ; preds = %562, %470
  br label %689

564:                                              ; preds = %457
  %565 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %566 = call i32 @strcmp(i8* %565, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0)) #9
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %568, label %677

568:                                              ; preds = %564
  %569 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %570 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %569, i32 0, i32 6
  %571 = load %struct.pair_struct*, %struct.pair_struct** %570, align 8
  %572 = icmp ne %struct.pair_struct* %571, null
  br i1 %572, label %573, label %576

573:                                              ; preds = %568
  %574 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %575 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %574, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i64 0, i64 0))
  br label %676

576:                                              ; preds = %568
  %577 = call noalias i8* @malloc(i64 24) #7
  %578 = bitcast i8* %577 to %struct.pair_struct*
  store %struct.pair_struct* %578, %struct.pair_struct** %16, align 8
  %579 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %580 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %579, i32 0, i32 6
  store %struct.pair_struct* %578, %struct.pair_struct** %580, align 8
  %581 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %582 = load %struct.pair_struct*, %struct.pair_struct** %16, align 8
  %583 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %582, i32 0, i32 0
  %584 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %581, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.23, i64 0, i64 0), i32* %583)
  %585 = icmp ne i32 %584, 1
  br i1 %585, label %586, label %587

586:                                              ; preds = %576
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i64 0, i64 0))
  br label %587

587:                                              ; preds = %586, %576
  %588 = load %struct.pair_struct*, %struct.pair_struct** %16, align 8
  %589 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %588, i32 0, i32 0
  %590 = load i32, i32* %589, align 8
  %591 = sext i32 %590 to i64
  %592 = mul i64 4, %591
  %593 = call noalias i8* @malloc(i64 %592) #7
  %594 = bitcast i8* %593 to i32*
  %595 = load %struct.pair_struct*, %struct.pair_struct** %16, align 8
  %596 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %595, i32 0, i32 1
  store i32* %594, i32** %596, align 8
  %597 = load %struct.pair_struct*, %struct.pair_struct** %16, align 8
  %598 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %597, i32 0, i32 0
  %599 = load i32, i32* %598, align 8
  %600 = sext i32 %599 to i64
  %601 = mul i64 4, %600
  %602 = call noalias i8* @malloc(i64 %601) #7
  %603 = bitcast i8* %602 to i32*
  %604 = load %struct.pair_struct*, %struct.pair_struct** %16, align 8
  %605 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %604, i32 0, i32 2
  store i32* %603, i32** %605, align 8
  store i32 0, i32* %5, align 4
  br label %606

606:                                              ; preds = %672, %587
  %607 = load i32, i32* %5, align 4
  %608 = load %struct.pair_struct*, %struct.pair_struct** %16, align 8
  %609 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %608, i32 0, i32 0
  %610 = load i32, i32* %609, align 8
  %611 = icmp slt i32 %607, %610
  br i1 %611, label %612, label %675

612:                                              ; preds = %606
  %613 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %614 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %615 = call i8* @get_word(%struct._IO_FILE* %613, i8* %614)
  %616 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %617 = load i8, i8* %616, align 16
  %618 = sext i8 %617 to i32
  %619 = icmp eq i32 %618, 40
  br i1 %619, label %620, label %625

620:                                              ; preds = %612
  %621 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %622 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %623 = getelementptr inbounds i8, i8* %622, i64 1
  %624 = call i8* @strcpy(i8* %621, i8* %623) #7
  br label %625

625:                                              ; preds = %620, %612
  %626 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %627 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %628 = call i32 @label_index(%struct.PLA_t* %626, i8* %627, i32* %6, i32* %15)
  %629 = icmp ne i32 %628, 0
  br i1 %629, label %630, label %639

630:                                              ; preds = %625
  %631 = load i32, i32* %6, align 4
  %632 = add nsw i32 %631, 1
  %633 = load %struct.pair_struct*, %struct.pair_struct** %16, align 8
  %634 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %633, i32 0, i32 1
  %635 = load i32*, i32** %634, align 8
  %636 = load i32, i32* %5, align 4
  %637 = sext i32 %636 to i64
  %638 = getelementptr inbounds i32, i32* %635, i64 %637
  store i32 %632, i32* %638, align 4
  br label %640

639:                                              ; preds = %625
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i64 0, i64 0))
  br label %640

640:                                              ; preds = %639, %630
  %641 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %642 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %643 = call i8* @get_word(%struct._IO_FILE* %641, i8* %642)
  %644 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %645 = call i64 @strlen(i8* %644) #9
  %646 = sub i64 %645, 1
  %647 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 %646
  %648 = load i8, i8* %647, align 1
  %649 = sext i8 %648 to i32
  %650 = icmp eq i32 %649, 41
  br i1 %650, label %651, label %656

651:                                              ; preds = %640
  %652 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %653 = call i64 @strlen(i8* %652) #9
  %654 = sub i64 %653, 1
  %655 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 %654
  store i8 0, i8* %655, align 1
  br label %656

656:                                              ; preds = %651, %640
  %657 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %658 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %659 = call i32 @label_index(%struct.PLA_t* %657, i8* %658, i32* %6, i32* %15)
  %660 = icmp ne i32 %659, 0
  br i1 %660, label %661, label %670

661:                                              ; preds = %656
  %662 = load i32, i32* %6, align 4
  %663 = add nsw i32 %662, 1
  %664 = load %struct.pair_struct*, %struct.pair_struct** %16, align 8
  %665 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %664, i32 0, i32 2
  %666 = load i32*, i32** %665, align 8
  %667 = load i32, i32* %5, align 4
  %668 = sext i32 %667 to i64
  %669 = getelementptr inbounds i32, i32* %666, i64 %668
  store i32 %663, i32* %669, align 4
  br label %671

670:                                              ; preds = %656
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i64 0, i64 0))
  br label %671

671:                                              ; preds = %670, %661
  br label %672

672:                                              ; preds = %671
  %673 = load i32, i32* %5, align 4
  %674 = add nsw i32 %673, 1
  store i32 %674, i32* %5, align 4
  br label %606

675:                                              ; preds = %606
  br label %676

676:                                              ; preds = %675, %573
  br label %688

677:                                              ; preds = %564
  %678 = load i32, i32* @echo_unknown_commands, align 4
  %679 = icmp ne i32 %678, 0
  br i1 %679, label %680, label %684

680:                                              ; preds = %677
  %681 = load i32, i32* %7, align 4
  %682 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %683 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0), i32 %681, i8* %682)
  br label %684

684:                                              ; preds = %680, %677
  %685 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %686 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %687 = load i32, i32* @echo_unknown_commands, align 4
  call void @skip_line(%struct._IO_FILE* %685, %struct._IO_FILE* %686, i32 %687)
  br label %688

688:                                              ; preds = %684, %676
  br label %689

689:                                              ; preds = %688, %563
  br label %690

690:                                              ; preds = %689, %456
  br label %691

691:                                              ; preds = %690, %416
  br label %692

692:                                              ; preds = %691, %376
  br label %693

693:                                              ; preds = %692, %325
  br label %694

694:                                              ; preds = %693, %277
  br label %695

695:                                              ; preds = %694, %214
  br label %696

696:                                              ; preds = %695, %168
  br label %697

697:                                              ; preds = %696
  br label %698

698:                                              ; preds = %697, %152
  br label %699

699:                                              ; preds = %698, %147
  br label %700

700:                                              ; preds = %699, %89
  br label %701

701:                                              ; preds = %700, %59
  br label %738

702:                                              ; preds = %17
  %703 = load i32, i32* %7, align 4
  %704 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %705 = call i32 @ungetc(i32 %703, %struct._IO_FILE* %704)
  %706 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %707 = icmp eq i32* %706, null
  br i1 %707, label %708, label %717

708:                                              ; preds = %702
  %709 = load i32, i32* @echo_comments, align 4
  %710 = icmp ne i32 %709, 0
  br i1 %710, label %711, label %713

711:                                              ; preds = %708
  %712 = call i32 @putchar(i32 35)
  br label %713

713:                                              ; preds = %711, %708
  %714 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %715 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %716 = load i32, i32* @echo_comments, align 4
  call void @skip_line(%struct._IO_FILE* %714, %struct._IO_FILE* %715, i32 %716)
  br label %738

717:                                              ; preds = %702
  %718 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %719 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %718, i32 0, i32 0
  %720 = load %struct.set_family*, %struct.set_family** %719, align 8
  %721 = icmp eq %struct.set_family* %720, null
  br i1 %721, label %722, label %735

722:                                              ; preds = %717
  %723 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %724 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 10, i32 %723)
  %725 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %726 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %725, i32 0, i32 0
  store %struct.set_family* %724, %struct.set_family** %726, align 8
  %727 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %728 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 10, i32 %727)
  %729 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %730 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %729, i32 0, i32 1
  store %struct.set_family* %728, %struct.set_family** %730, align 8
  %731 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %732 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 10, i32 %731)
  %733 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %734 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %733, i32 0, i32 2
  store %struct.set_family* %732, %struct.set_family** %734, align 8
  br label %735

735:                                              ; preds = %722, %717
  %736 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %737 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  call void @read_cube(%struct._IO_FILE* %736, %struct.PLA_t* %737)
  br label %738

738:                                              ; preds = %735, %713, %701, %25, %24
  br label %17

739:                                              ; preds = %163, %20
  ret void
}

declare dso_local i32 @ungetc(i32, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @PLA_labels(%struct.PLA_t* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca i32, align 4
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  %5 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %6 = sext i32 %5 to i64
  %7 = mul i64 8, %6
  %8 = call noalias i8* @malloc(i64 %7) #7
  %9 = bitcast i8* %8 to i8**
  %10 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %11 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %10, i32 0, i32 7
  store i8** %9, i8*** %11, align 8
  store i32 0, i32* %4, align 4
  br label %12

12:                                               ; preds = %23, %1
  %13 = load i32, i32* %4, align 4
  %14 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %15 = icmp slt i32 %13, %14
  br i1 %15, label %16, label %26

16:                                               ; preds = %12
  %17 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %18 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %17, i32 0, i32 7
  %19 = load i8**, i8*** %18, align 8
  %20 = load i32, i32* %4, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8*, i8** %19, i64 %21
  store i8* null, i8** %22, align 8
  br label %23

23:                                               ; preds = %16
  %24 = load i32, i32* %4, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %4, align 4
  br label %12

26:                                               ; preds = %12
  %27 = load i32, i32* %2, align 4
  ret i32 %27
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #5

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @read_symbolic(%struct._IO_FILE* %0, %struct.PLA_t* %1, i8* %2, %struct.symbolic_struct** %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca %struct.PLA_t*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct.symbolic_struct**, align 8
  %10 = alloca %struct.symbolic_list_struct*, align 8
  %11 = alloca %struct.symbolic_list_struct*, align 8
  %12 = alloca %struct.symbolic_label_struct*, align 8
  %13 = alloca %struct.symbolic_label_struct*, align 8
  %14 = alloca %struct.symbolic_struct*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  store %struct.PLA_t* %1, %struct.PLA_t** %7, align 8
  store i8* %2, i8** %8, align 8
  store %struct.symbolic_struct** %3, %struct.symbolic_struct*** %9, align 8
  %17 = call noalias i8* @malloc(i64 40) #7
  %18 = bitcast i8* %17 to %struct.symbolic_struct*
  store %struct.symbolic_struct* %18, %struct.symbolic_struct** %14, align 8
  %19 = load %struct.symbolic_struct*, %struct.symbolic_struct** %14, align 8
  %20 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %19, i32 0, i32 4
  store %struct.symbolic_struct* null, %struct.symbolic_struct** %20, align 8
  %21 = load %struct.symbolic_struct*, %struct.symbolic_struct** %14, align 8
  %22 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %21, i32 0, i32 0
  store %struct.symbolic_list_struct* null, %struct.symbolic_list_struct** %22, align 8
  %23 = load %struct.symbolic_struct*, %struct.symbolic_struct** %14, align 8
  %24 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %23, i32 0, i32 1
  store i32 0, i32* %24, align 8
  %25 = load %struct.symbolic_struct*, %struct.symbolic_struct** %14, align 8
  %26 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %25, i32 0, i32 2
  store %struct.symbolic_label_struct* null, %struct.symbolic_label_struct** %26, align 8
  %27 = load %struct.symbolic_struct*, %struct.symbolic_struct** %14, align 8
  %28 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %27, i32 0, i32 3
  store i32 0, i32* %28, align 8
  store %struct.symbolic_list_struct* null, %struct.symbolic_list_struct** %11, align 8
  store %struct.symbolic_label_struct* null, %struct.symbolic_label_struct** %13, align 8
  br label %29

29:                                               ; preds = %70, %4
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %31 = load i8*, i8** %8, align 8
  %32 = call i8* @get_word(%struct._IO_FILE* %30, i8* %31)
  %33 = load i8*, i8** %8, align 8
  %34 = call i32 @strcmp(i8* %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i64 0, i64 0)) #9
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %29
  br label %71

37:                                               ; preds = %29
  %38 = load %struct.PLA_t*, %struct.PLA_t** %7, align 8
  %39 = load i8*, i8** %8, align 8
  %40 = call i32 @label_index(%struct.PLA_t* %38, i8* %39, i32* %16, i32* %15)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %69

42:                                               ; preds = %37
  %43 = call noalias i8* @malloc(i64 16) #7
  %44 = bitcast i8* %43 to %struct.symbolic_list_struct*
  store %struct.symbolic_list_struct* %44, %struct.symbolic_list_struct** %10, align 8
  %45 = load i32, i32* %16, align 4
  %46 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %10, align 8
  %47 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %46, i32 0, i32 0
  store i32 %45, i32* %47, align 8
  %48 = load i32, i32* %15, align 4
  %49 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %10, align 8
  %50 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %49, i32 0, i32 1
  store i32 %48, i32* %50, align 4
  %51 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %10, align 8
  %52 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %51, i32 0, i32 2
  store %struct.symbolic_list_struct* null, %struct.symbolic_list_struct** %52, align 8
  %53 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %11, align 8
  %54 = icmp eq %struct.symbolic_list_struct* %53, null
  br i1 %54, label %55, label %59

55:                                               ; preds = %42
  %56 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %10, align 8
  %57 = load %struct.symbolic_struct*, %struct.symbolic_struct** %14, align 8
  %58 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %57, i32 0, i32 0
  store %struct.symbolic_list_struct* %56, %struct.symbolic_list_struct** %58, align 8
  br label %63

59:                                               ; preds = %42
  %60 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %10, align 8
  %61 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %11, align 8
  %62 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %61, i32 0, i32 2
  store %struct.symbolic_list_struct* %60, %struct.symbolic_list_struct** %62, align 8
  br label %63

63:                                               ; preds = %59, %55
  %64 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %10, align 8
  store %struct.symbolic_list_struct* %64, %struct.symbolic_list_struct** %11, align 8
  %65 = load %struct.symbolic_struct*, %struct.symbolic_struct** %14, align 8
  %66 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %65, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %66, align 8
  br label %70

69:                                               ; preds = %37
  store i32 0, i32* %5, align 4
  br label %108

70:                                               ; preds = %63
  br label %29

71:                                               ; preds = %36
  br label %72

72:                                               ; preds = %99, %71
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %74 = load i8*, i8** %8, align 8
  %75 = call i8* @get_word(%struct._IO_FILE* %73, i8* %74)
  %76 = load i8*, i8** %8, align 8
  %77 = call i32 @strcmp(i8* %76, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i64 0, i64 0)) #9
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %72
  br label %105

80:                                               ; preds = %72
  %81 = call noalias i8* @malloc(i64 16) #7
  %82 = bitcast i8* %81 to %struct.symbolic_label_struct*
  store %struct.symbolic_label_struct* %82, %struct.symbolic_label_struct** %12, align 8
  %83 = load i8*, i8** %8, align 8
  %84 = call i8* @util_strsav(i8* %83)
  %85 = load %struct.symbolic_label_struct*, %struct.symbolic_label_struct** %12, align 8
  %86 = getelementptr inbounds %struct.symbolic_label_struct, %struct.symbolic_label_struct* %85, i32 0, i32 0
  store i8* %84, i8** %86, align 8
  %87 = load %struct.symbolic_label_struct*, %struct.symbolic_label_struct** %12, align 8
  %88 = getelementptr inbounds %struct.symbolic_label_struct, %struct.symbolic_label_struct* %87, i32 0, i32 1
  store %struct.symbolic_label_struct* null, %struct.symbolic_label_struct** %88, align 8
  %89 = load %struct.symbolic_label_struct*, %struct.symbolic_label_struct** %13, align 8
  %90 = icmp eq %struct.symbolic_label_struct* %89, null
  br i1 %90, label %91, label %95

91:                                               ; preds = %80
  %92 = load %struct.symbolic_label_struct*, %struct.symbolic_label_struct** %12, align 8
  %93 = load %struct.symbolic_struct*, %struct.symbolic_struct** %14, align 8
  %94 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %93, i32 0, i32 2
  store %struct.symbolic_label_struct* %92, %struct.symbolic_label_struct** %94, align 8
  br label %99

95:                                               ; preds = %80
  %96 = load %struct.symbolic_label_struct*, %struct.symbolic_label_struct** %12, align 8
  %97 = load %struct.symbolic_label_struct*, %struct.symbolic_label_struct** %13, align 8
  %98 = getelementptr inbounds %struct.symbolic_label_struct, %struct.symbolic_label_struct* %97, i32 0, i32 1
  store %struct.symbolic_label_struct* %96, %struct.symbolic_label_struct** %98, align 8
  br label %99

99:                                               ; preds = %95, %91
  %100 = load %struct.symbolic_label_struct*, %struct.symbolic_label_struct** %12, align 8
  store %struct.symbolic_label_struct* %100, %struct.symbolic_label_struct** %13, align 8
  %101 = load %struct.symbolic_struct*, %struct.symbolic_struct** %14, align 8
  %102 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %101, i32 0, i32 3
  %103 = load i32, i32* %102, align 8
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %102, align 8
  br label %72

105:                                              ; preds = %79
  %106 = load %struct.symbolic_struct*, %struct.symbolic_struct** %14, align 8
  %107 = load %struct.symbolic_struct**, %struct.symbolic_struct*** %9, align 8
  store %struct.symbolic_struct* %106, %struct.symbolic_struct** %107, align 8
  store i32 1, i32* %5, align 4
  br label %108

108:                                              ; preds = %105, %69
  %109 = load i32, i32* %5, align 4
  ret i32 %109
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @label_index(%struct.PLA_t* %0, i8* %1, i32* %2, i32* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.PLA_t*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.PLA_t* %0, %struct.PLA_t** %6, align 8
  store i8* %1, i8** %7, align 8
  store i32* %2, i32** %8, align 8
  store i32* %3, i32** %9, align 8
  %12 = load %struct.PLA_t*, %struct.PLA_t** %6, align 8
  %13 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %12, i32 0, i32 7
  %14 = load i8**, i8*** %13, align 8
  %15 = icmp eq i8** %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %4
  %17 = load %struct.PLA_t*, %struct.PLA_t** %6, align 8
  %18 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %17, i32 0, i32 7
  %19 = load i8**, i8*** %18, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %33

23:                                               ; preds = %16, %4
  %24 = load i8*, i8** %7, align 8
  %25 = load i32*, i32** %8, align 8
  %26 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.23, i64 0, i64 0), i32* %25) #7
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %23
  %29 = load i32*, i32** %8, align 8
  %30 = load i32, i32* %29, align 4
  %31 = load i32*, i32** %9, align 8
  store i32 %30, i32* %31, align 4
  store i32 1, i32* %5, align 4
  br label %79

32:                                               ; preds = %23
  br label %78

33:                                               ; preds = %16
  store i32 0, i32* %10, align 4
  br label %34

34:                                               ; preds = %74, %33
  %35 = load i32, i32* %10, align 4
  %36 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %38, label %77

38:                                               ; preds = %34
  store i32 0, i32* %11, align 4
  br label %39

39:                                               ; preds = %70, %38
  %40 = load i32, i32* %11, align 4
  %41 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %42 = load i32, i32* %10, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %41, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %40, %45
  br i1 %46, label %47, label %73

47:                                               ; preds = %39
  %48 = load %struct.PLA_t*, %struct.PLA_t** %6, align 8
  %49 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %48, i32 0, i32 7
  %50 = load i8**, i8*** %49, align 8
  %51 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %52 = load i32, i32* %10, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, i32* %51, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = load i32, i32* %11, align 4
  %57 = add nsw i32 %55, %56
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8*, i8** %50, i64 %58
  %60 = load i8*, i8** %59, align 8
  %61 = load i8*, i8** %7, align 8
  %62 = call i32 @strcmp(i8* %60, i8* %61) #9
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %69

64:                                               ; preds = %47
  %65 = load i32, i32* %10, align 4
  %66 = load i32*, i32** %8, align 8
  store i32 %65, i32* %66, align 4
  %67 = load i32, i32* %11, align 4
  %68 = load i32*, i32** %9, align 8
  store i32 %67, i32* %68, align 4
  store i32 1, i32* %5, align 4
  br label %79

69:                                               ; preds = %47
  br label %70

70:                                               ; preds = %69
  %71 = load i32, i32* %11, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %11, align 4
  br label %39

73:                                               ; preds = %39
  br label %74

74:                                               ; preds = %73
  %75 = load i32, i32* %10, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %10, align 4
  br label %34

77:                                               ; preds = %34
  br label %78

78:                                               ; preds = %77, %32
  store i32 0, i32* %5, align 4
  br label %79

79:                                               ; preds = %78, %64, %28
  %80 = load i32, i32* %5, align 4
  ret i32 %80
}

declare dso_local i32 @putchar(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @__isoc99_sscanf(i8*, i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @read_pla(%struct._IO_FILE* %0, i32 %1, i32 %2, i32 %3, %struct.PLA_t** %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.PLA_t**, align 8
  %12 = alloca %struct.PLA_t*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca %struct.cost_struct, align 4
  %18 = alloca %struct.set_family*, align 8
  %19 = alloca %struct.set_family*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %7, align 8
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store %struct.PLA_t** %4, %struct.PLA_t*** %11, align 8
  %23 = call %struct.PLA_t* @new_PLA()
  %24 = load %struct.PLA_t**, %struct.PLA_t*** %11, align 8
  store %struct.PLA_t* %23, %struct.PLA_t** %24, align 8
  store %struct.PLA_t* %23, %struct.PLA_t** %12, align 8
  %25 = load i32, i32* %10, align 4
  %26 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %27 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %26, i32 0, i32 4
  store i32 %25, i32* %27, align 8
  %28 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %28, i64* %16, align 8
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %30 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  call void @parse_pla(%struct._IO_FILE* %29, %struct.PLA_t* %30)
  %31 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %32 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %31, i32 0, i32 0
  %33 = load %struct.set_family*, %struct.set_family** %32, align 8
  %34 = icmp eq %struct.set_family* %33, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %5
  store i32 -1, i32* %6, align 4
  br label %382

36:                                               ; preds = %5
  store i32 0, i32* %13, align 4
  br label %37

37:                                               ; preds = %67, %36
  %38 = load i32, i32* %13, align 4
  %39 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %40 = icmp slt i32 %38, %39
  br i1 %40, label %41, label %70

41:                                               ; preds = %37
  %42 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %43 = load i32, i32* %13, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %42, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %41
  %49 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %50 = load i32, i32* %13, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, i32* %49, i64 %51
  %53 = load i32, i32* %52, align 4
  br label %61

54:                                               ; preds = %41
  %55 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %56 = load i32, i32* %13, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %55, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = sub nsw i32 0, %59
  br label %61

61:                                               ; preds = %54, %48
  %62 = phi i32 [ %53, %48 ], [ %60, %54 ]
  %63 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %64 = load i32, i32* %13, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i32, i32* %63, i64 %65
  store i32 %62, i32* %66, align 4
  br label %67

67:                                               ; preds = %61
  %68 = load i32, i32* %13, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %13, align 4
  br label %37

70:                                               ; preds = %37
  %71 = load i32, i32* @kiss, align 4
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %148

73:                                               ; preds = %70
  %74 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %75 = sub nsw i32 %74, 3
  store i32 %75, i32* %15, align 4
  %76 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %77 = sub nsw i32 %76, 2
  store i32 %77, i32* %14, align 4
  %78 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %79 = load i32, i32* %15, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %78, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %84 = load i32, i32* %14, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i32, i32* %83, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = icmp ne i32 %82, %87
  br i1 %88, label %89, label %94

89:                                               ; preds = %73
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %91 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %90, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.49, i64 0, i64 0))
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.50, i64 0, i64 0))
  store i32 -1, i32* %6, align 4
  br label %382

94:                                               ; preds = %73
  store i32 0, i32* %13, align 4
  br label %95

95:                                               ; preds = %130, %94
  %96 = load i32, i32* %13, align 4
  %97 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %98 = load i32, i32* %14, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i32, i32* %97, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = icmp slt i32 %96, %101
  br i1 %102, label %103, label %133

103:                                              ; preds = %95
  %104 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %105 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %104, i32 0, i32 7
  %106 = load i8**, i8*** %105, align 8
  %107 = load i32, i32* %13, align 4
  %108 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %109 = load i32, i32* %15, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i32, i32* %108, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = add nsw i32 %107, %112
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i8*, i8** %106, i64 %114
  %116 = load i8*, i8** %115, align 8
  %117 = call i8* @util_strsav(i8* %116)
  %118 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %119 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %118, i32 0, i32 7
  %120 = load i8**, i8*** %119, align 8
  %121 = load i32, i32* %13, align 4
  %122 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %123 = load i32, i32* %14, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i32, i32* %122, i64 %124
  %126 = load i32, i32* %125, align 4
  %127 = add nsw i32 %121, %126
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8*, i8** %120, i64 %128
  store i8* %117, i8** %129, align 8
  br label %130

130:                                              ; preds = %103
  %131 = load i32, i32* %13, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %13, align 4
  br label %95

133:                                              ; preds = %95
  %134 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %135 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %136 = sub nsw i32 %135, 1
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i32, i32* %134, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %141 = load i32, i32* %14, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i32, i32* %140, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = add nsw i32 %144, %139
  store i32 %145, i32* %143, align 4
  %146 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %147 = add nsw i32 %146, -1
  store i32 %147, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  call void (...) bitcast (void ()* @setdown_cube to void (...)*)()
  call void (...) bitcast (void ()* @cube_setup to void (...)*)()
  br label %148

148:                                              ; preds = %133, %70
  %149 = load i32, i32* @trace, align 4
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %151, label %156

151:                                              ; preds = %148
  %152 = load i64, i64* %16, align 8
  %153 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %154 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %153, i32 0, i32 0
  %155 = load %struct.set_family*, %struct.set_family** %154, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %152, i32 0, %struct.set_family* %155, %struct.cost_struct* %17)
  br label %156

156:                                              ; preds = %151, %148
  %157 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %157, i64* %16, align 8
  %158 = load i32, i32* @pos, align 4
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %170, label %160

160:                                              ; preds = %156
  %161 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %162 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %161, i32 0, i32 5
  %163 = load i32*, i32** %162, align 8
  %164 = icmp ne i32* %163, null
  br i1 %164, label %170, label %165

165:                                              ; preds = %160
  %166 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %167 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %166, i32 0, i32 9
  %168 = load %struct.symbolic_struct*, %struct.symbolic_struct** %167, align 8
  %169 = icmp ne %struct.symbolic_struct* %168, null
  br i1 %169, label %170, label %171

170:                                              ; preds = %165, %160, %156
  store i32 1, i32* %9, align 4
  br label %171

171:                                              ; preds = %170, %165
  %172 = load i32, i32* %9, align 4
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %198

174:                                              ; preds = %171
  %175 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %176 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %175, i32 0, i32 4
  %177 = load i32, i32* %176, align 8
  %178 = icmp eq i32 %177, 1
  br i1 %178, label %184, label %179

179:                                              ; preds = %174
  %180 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %181 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %180, i32 0, i32 4
  %182 = load i32, i32* %181, align 8
  %183 = icmp eq i32 %182, 3
  br i1 %183, label %184, label %198

184:                                              ; preds = %179, %174
  %185 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %186 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %185, i32 0, i32 2
  %187 = load %struct.set_family*, %struct.set_family** %186, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %187)
  %188 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %189 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %188, i32 0, i32 0
  %190 = load %struct.set_family*, %struct.set_family** %189, align 8
  %191 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %192 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %191, i32 0, i32 1
  %193 = load %struct.set_family*, %struct.set_family** %192, align 8
  %194 = call i32** (%struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*)* @cube2list to i32** (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %190, %struct.set_family* %193)
  %195 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @complement to %struct.set_family* (i32**, ...)*)(i32** %194)
  %196 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %197 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %196, i32 0, i32 2
  store %struct.set_family* %195, %struct.set_family** %197, align 8
  br label %252

198:                                              ; preds = %179, %171
  %199 = load i32, i32* %8, align 4
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %201, label %226

201:                                              ; preds = %198
  %202 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %203 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %202, i32 0, i32 4
  %204 = load i32, i32* %203, align 8
  %205 = icmp eq i32 %204, 5
  br i1 %205, label %206, label %226

206:                                              ; preds = %201
  %207 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %208 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %207, i32 0, i32 1
  %209 = load %struct.set_family*, %struct.set_family** %208, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %209)
  %210 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %211 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %210, i32 0, i32 0
  %212 = load %struct.set_family*, %struct.set_family** %211, align 8
  %213 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %214 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %213, i32 0, i32 2
  %215 = load %struct.set_family*, %struct.set_family** %214, align 8
  %216 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_join to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %212, %struct.set_family* %215)
  %217 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %218 = sub nsw i32 %217, 1
  %219 = call %struct.set_family* (%struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32)* @d1merge to %struct.set_family* (%struct.set_family*, i32, ...)*)(%struct.set_family* %216, i32 %218)
  store %struct.set_family* %219, %struct.set_family** %18, align 8
  %220 = load %struct.set_family*, %struct.set_family** %18, align 8
  %221 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @cube1list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %220)
  %222 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @complement to %struct.set_family* (i32**, ...)*)(i32** %221)
  %223 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %224 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %223, i32 0, i32 1
  store %struct.set_family* %222, %struct.set_family** %224, align 8
  %225 = load %struct.set_family*, %struct.set_family** %18, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %225)
  br label %251

226:                                              ; preds = %201, %198
  %227 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %228 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %227, i32 0, i32 4
  %229 = load i32, i32* %228, align 8
  %230 = icmp eq i32 %229, 4
  br i1 %230, label %236, label %231

231:                                              ; preds = %226
  %232 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %233 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %232, i32 0, i32 4
  %234 = load i32, i32* %233, align 8
  %235 = icmp eq i32 %234, 6
  br i1 %235, label %236, label %250

236:                                              ; preds = %231, %226
  %237 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %238 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %237, i32 0, i32 0
  %239 = load %struct.set_family*, %struct.set_family** %238, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %239)
  %240 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %241 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %240, i32 0, i32 1
  %242 = load %struct.set_family*, %struct.set_family** %241, align 8
  %243 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %244 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %243, i32 0, i32 2
  %245 = load %struct.set_family*, %struct.set_family** %244, align 8
  %246 = call i32** (%struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*)* @cube2list to i32** (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %242, %struct.set_family* %245)
  %247 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @complement to %struct.set_family* (i32**, ...)*)(i32** %246)
  %248 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %249 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %248, i32 0, i32 0
  store %struct.set_family* %247, %struct.set_family** %249, align 8
  br label %250

250:                                              ; preds = %236, %231
  br label %251

251:                                              ; preds = %250, %206
  br label %252

252:                                              ; preds = %251, %184
  %253 = load i32, i32* @trace, align 4
  %254 = icmp ne i32 %253, 0
  br i1 %254, label %255, label %260

255:                                              ; preds = %252
  %256 = load i64, i64* %16, align 8
  %257 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %258 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %257, i32 0, i32 2
  %259 = load %struct.set_family*, %struct.set_family** %258, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %256, i32 1, %struct.set_family* %259, %struct.cost_struct* %17)
  br label %260

260:                                              ; preds = %255, %252
  %261 = load i32, i32* @pos, align 4
  %262 = icmp ne i32 %261, 0
  br i1 %262, label %263, label %305

263:                                              ; preds = %260
  %264 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %265 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %264, i32 0, i32 0
  %266 = load %struct.set_family*, %struct.set_family** %265, align 8
  store %struct.set_family* %266, %struct.set_family** %19, align 8
  %267 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %268 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %267, i32 0, i32 2
  %269 = load %struct.set_family*, %struct.set_family** %268, align 8
  %270 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %271 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %270, i32 0, i32 0
  store %struct.set_family* %269, %struct.set_family** %271, align 8
  %272 = load %struct.set_family*, %struct.set_family** %19, align 8
  %273 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %274 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %273, i32 0, i32 2
  store %struct.set_family* %272, %struct.set_family** %274, align 8
  %275 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %276 = icmp sle i32 %275, 32
  br i1 %276, label %277, label %278

277:                                              ; preds = %263
  br label %284

278:                                              ; preds = %263
  %279 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %280 = sub nsw i32 %279, 1
  %281 = ashr i32 %280, 5
  %282 = add nsw i32 %281, 1
  %283 = add nsw i32 %282, 1
  br label %284

284:                                              ; preds = %278, %277
  %285 = phi i32 [ 2, %277 ], [ %283, %278 ]
  %286 = sext i32 %285 to i64
  %287 = mul i64 4, %286
  %288 = call noalias i8* @malloc(i64 %287) #7
  %289 = bitcast i8* %288 to i32*
  %290 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %291 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %289, i32 %290)
  %292 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %293 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %292, i32 0, i32 5
  store i32* %291, i32** %293, align 8
  %294 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %295 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %294, i32 0, i32 5
  %296 = load i32*, i32** %295, align 8
  %297 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %298 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %299 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %300 = sub nsw i32 %299, 1
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds i32*, i32** %298, i64 %301
  %303 = load i32*, i32** %302, align 8
  %304 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %296, i32* %297, i32* %303)
  br label %314

305:                                              ; preds = %260
  %306 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %307 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %306, i32 0, i32 5
  %308 = load i32*, i32** %307, align 8
  %309 = icmp ne i32* %308, null
  br i1 %309, label %310, label %313

310:                                              ; preds = %305
  %311 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %312 = call %struct.PLA_t* (%struct.PLA_t*, ...) bitcast (%struct.PLA_t* (%struct.PLA_t*)* @set_phase to %struct.PLA_t* (%struct.PLA_t*, ...)*)(%struct.PLA_t* %311)
  br label %313

313:                                              ; preds = %310, %305
  br label %314

314:                                              ; preds = %313, %284
  %315 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %316 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %315, i32 0, i32 6
  %317 = load %struct.pair_struct*, %struct.pair_struct** %316, align 8
  %318 = icmp ne %struct.pair_struct* %317, null
  br i1 %318, label %319, label %321

319:                                              ; preds = %314
  %320 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  call void (%struct.PLA_t*, ...) bitcast (void (%struct.PLA_t*)* @set_pair to void (%struct.PLA_t*, ...)*)(%struct.PLA_t* %320)
  br label %321

321:                                              ; preds = %319, %314
  %322 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %323 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %322, i32 0, i32 8
  %324 = load %struct.symbolic_struct*, %struct.symbolic_struct** %323, align 8
  %325 = icmp ne %struct.symbolic_struct* %324, null
  br i1 %325, label %326, label %340

326:                                              ; preds = %321
  %327 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %327, i64* %20, align 8
  %328 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %329 = call i32 (%struct.PLA_t*, ...) bitcast (i32 (%struct.PLA_t*)* @map_symbolic to i32 (%struct.PLA_t*, ...)*)(%struct.PLA_t* %328)
  %330 = load i32, i32* @trace, align 4
  %331 = icmp ne i32 %330, 0
  br i1 %331, label %332, label %339

332:                                              ; preds = %326
  %333 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %334 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %333, i32 0, i32 0
  %335 = load %struct.set_family*, %struct.set_family** %334, align 8
  %336 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %337 = load i64, i64* %20, align 8
  %338 = sub nsw i64 %336, %337
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %335, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i64 0, i64 0), i64 %338)
  br label %339

339:                                              ; preds = %332, %326
  br label %340

340:                                              ; preds = %339, %321
  %341 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %342 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %341, i32 0, i32 9
  %343 = load %struct.symbolic_struct*, %struct.symbolic_struct** %342, align 8
  %344 = icmp ne %struct.symbolic_struct* %343, null
  br i1 %344, label %345, label %381

345:                                              ; preds = %340
  %346 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %346, i64* %21, align 8
  %347 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %348 = call i32 (%struct.PLA_t*, ...) bitcast (i32 (%struct.PLA_t*)* @map_output_symbolic to i32 (%struct.PLA_t*, ...)*)(%struct.PLA_t* %347)
  %349 = load i32, i32* @trace, align 4
  %350 = icmp ne i32 %349, 0
  br i1 %350, label %351, label %358

351:                                              ; preds = %345
  %352 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %353 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %352, i32 0, i32 0
  %354 = load %struct.set_family*, %struct.set_family** %353, align 8
  %355 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %356 = load i64, i64* %21, align 8
  %357 = sub nsw i64 %355, %356
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %354, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i64 0, i64 0), i64 %357)
  br label %358

358:                                              ; preds = %351, %345
  %359 = load i32, i32* %9, align 4
  %360 = icmp ne i32 %359, 0
  br i1 %360, label %361, label %380

361:                                              ; preds = %358
  %362 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %363 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %362, i32 0, i32 2
  %364 = load %struct.set_family*, %struct.set_family** %363, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %364)
  %365 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %365, i64* %22, align 8
  %366 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %367 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %366, i32 0, i32 0
  %368 = load %struct.set_family*, %struct.set_family** %367, align 8
  %369 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %370 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %369, i32 0, i32 1
  %371 = load %struct.set_family*, %struct.set_family** %370, align 8
  %372 = call i32** (%struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*)* @cube2list to i32** (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %368, %struct.set_family* %371)
  %373 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @complement to %struct.set_family* (i32**, ...)*)(i32** %372)
  %374 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %375 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %374, i32 0, i32 2
  store %struct.set_family* %373, %struct.set_family** %375, align 8
  %376 = load i64, i64* %22, align 8
  %377 = load %struct.PLA_t*, %struct.PLA_t** %12, align 8
  %378 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %377, i32 0, i32 2
  %379 = load %struct.set_family*, %struct.set_family** %378, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %376, i32 1, %struct.set_family* %379, %struct.cost_struct* %17)
  br label %380

380:                                              ; preds = %361, %358
  br label %381

381:                                              ; preds = %380, %340
  store i32 1, i32* %6, align 4
  br label %382

382:                                              ; preds = %381, %89, %35
  %383 = load i32, i32* %6, align 4
  ret i32 %383
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.PLA_t* @new_PLA() #0 {
  %1 = alloca %struct.PLA_t*, align 8
  %2 = call noalias i8* @malloc(i64 80) #7
  %3 = bitcast i8* %2 to %struct.PLA_t*
  store %struct.PLA_t* %3, %struct.PLA_t** %1, align 8
  %4 = load %struct.PLA_t*, %struct.PLA_t** %1, align 8
  %5 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %4, i32 0, i32 2
  store %struct.set_family* null, %struct.set_family** %5, align 8
  %6 = load %struct.PLA_t*, %struct.PLA_t** %1, align 8
  %7 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %6, i32 0, i32 1
  store %struct.set_family* null, %struct.set_family** %7, align 8
  %8 = load %struct.PLA_t*, %struct.PLA_t** %1, align 8
  %9 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %8, i32 0, i32 0
  store %struct.set_family* null, %struct.set_family** %9, align 8
  %10 = load %struct.PLA_t*, %struct.PLA_t** %1, align 8
  %11 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %10, i32 0, i32 5
  store i32* null, i32** %11, align 8
  %12 = load %struct.PLA_t*, %struct.PLA_t** %1, align 8
  %13 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %12, i32 0, i32 6
  store %struct.pair_struct* null, %struct.pair_struct** %13, align 8
  %14 = load %struct.PLA_t*, %struct.PLA_t** %1, align 8
  %15 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %14, i32 0, i32 7
  store i8** null, i8*** %15, align 8
  %16 = load %struct.PLA_t*, %struct.PLA_t** %1, align 8
  %17 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %16, i32 0, i32 3
  store i8* null, i8** %17, align 8
  %18 = load %struct.PLA_t*, %struct.PLA_t** %1, align 8
  %19 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %18, i32 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = load %struct.PLA_t*, %struct.PLA_t** %1, align 8
  %21 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %20, i32 0, i32 8
  store %struct.symbolic_struct* null, %struct.symbolic_struct** %21, align 8
  %22 = load %struct.PLA_t*, %struct.PLA_t** %1, align 8
  %23 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %22, i32 0, i32 9
  store %struct.symbolic_struct* null, %struct.symbolic_struct** %23, align 8
  %24 = load %struct.PLA_t*, %struct.PLA_t** %1, align 8
  ret %struct.PLA_t* %24
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @PLA_summary(%struct.PLA_t* %0) #0 {
  %2 = alloca %struct.PLA_t*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.symbolic_list_struct*, align 8
  %6 = alloca %struct.symbolic_struct*, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %2, align 8
  %7 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %8 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %7, i32 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = call i8* @mybasename(i8* %9)
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53, i64 0, i64 0), i8* %10)
  %12 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %13 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %25

16:                                               ; preds = %1
  %17 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %18 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %19 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %20 = sub nsw i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %18, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.54, i64 0, i64 0), i32 %17, i32 %23)
  br label %46

25:                                               ; preds = %1
  %26 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %27 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.55, i64 0, i64 0), i32 %26, i32 %27)
  %29 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %29, i32* %3, align 4
  br label %30

30:                                               ; preds = %41, %25
  %31 = load i32, i32* %3, align 4
  %32 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %34, label %44

34:                                               ; preds = %30
  %35 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %36 = load i32, i32* %3, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %35, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0), i32 %39)
  br label %41

41:                                               ; preds = %34
  %42 = load i32, i32* %3, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %3, align 4
  br label %30

44:                                               ; preds = %30
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0))
  br label %46

46:                                               ; preds = %44, %16
  %47 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %48 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %47, i32 0, i32 0
  %49 = load %struct.set_family*, %struct.set_family** %48, align 8
  %50 = call i8* (%struct.set_family*, ...) bitcast (i8* (%struct.set_family*)* @print_cost to i8* (%struct.set_family*, ...)*)(%struct.set_family* %49)
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.58, i64 0, i64 0), i8* %50)
  %52 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %53 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %52, i32 0, i32 2
  %54 = load %struct.set_family*, %struct.set_family** %53, align 8
  %55 = call i8* (%struct.set_family*, ...) bitcast (i8* (%struct.set_family*)* @print_cost to i8* (%struct.set_family*, ...)*)(%struct.set_family* %54)
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.59, i64 0, i64 0), i8* %55)
  %57 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %58 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %57, i32 0, i32 1
  %59 = load %struct.set_family*, %struct.set_family** %58, align 8
  %60 = call i8* (%struct.set_family*, ...) bitcast (i8* (%struct.set_family*)* @print_cost to i8* (%struct.set_family*, ...)*)(%struct.set_family* %59)
  %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.60, i64 0, i64 0), i8* %60)
  %62 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %63 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %62, i32 0, i32 5
  %64 = load i32*, i32** %63, align 8
  %65 = icmp ne i32* %64, null
  br i1 %65, label %66, label %72

66:                                               ; preds = %46
  %67 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %68 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %67, i32 0, i32 5
  %69 = load i32*, i32** %68, align 8
  %70 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %69)
  %71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0), i8* %70)
  br label %72

72:                                               ; preds = %66, %46
  %73 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %74 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %73, i32 0, i32 6
  %75 = load %struct.pair_struct*, %struct.pair_struct** %74, align 8
  %76 = icmp ne %struct.pair_struct* %75, null
  br i1 %76, label %77, label %112

77:                                               ; preds = %72
  %78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.62, i64 0, i64 0))
  store i32 0, i32* %4, align 4
  br label %79

79:                                               ; preds = %107, %77
  %80 = load i32, i32* %4, align 4
  %81 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %82 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %81, i32 0, i32 6
  %83 = load %struct.pair_struct*, %struct.pair_struct** %82, align 8
  %84 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %83, i32 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = icmp slt i32 %80, %85
  br i1 %86, label %87, label %110

87:                                               ; preds = %79
  %88 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %89 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %88, i32 0, i32 6
  %90 = load %struct.pair_struct*, %struct.pair_struct** %89, align 8
  %91 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %90, i32 0, i32 1
  %92 = load i32*, i32** %91, align 8
  %93 = load i32, i32* %4, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i32, i32* %92, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %98 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %97, i32 0, i32 6
  %99 = load %struct.pair_struct*, %struct.pair_struct** %98, align 8
  %100 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %99, i32 0, i32 2
  %101 = load i32*, i32** %100, align 8
  %102 = load i32, i32* %4, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %101, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i64 0, i64 0), i32 %96, i32 %105)
  br label %107

107:                                              ; preds = %87
  %108 = load i32, i32* %4, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %4, align 4
  br label %79

110:                                              ; preds = %79
  %111 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64, i64 0, i64 0))
  br label %112

112:                                              ; preds = %110, %72
  %113 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %114 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %113, i32 0, i32 8
  %115 = load %struct.symbolic_struct*, %struct.symbolic_struct** %114, align 8
  %116 = icmp ne %struct.symbolic_struct* %115, null
  br i1 %116, label %117, label %148

117:                                              ; preds = %112
  %118 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %119 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %118, i32 0, i32 8
  %120 = load %struct.symbolic_struct*, %struct.symbolic_struct** %119, align 8
  store %struct.symbolic_struct* %120, %struct.symbolic_struct** %6, align 8
  br label %121

121:                                              ; preds = %143, %117
  %122 = load %struct.symbolic_struct*, %struct.symbolic_struct** %6, align 8
  %123 = icmp ne %struct.symbolic_struct* %122, null
  br i1 %123, label %124, label %147

124:                                              ; preds = %121
  %125 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0))
  %126 = load %struct.symbolic_struct*, %struct.symbolic_struct** %6, align 8
  %127 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %126, i32 0, i32 0
  %128 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %127, align 8
  store %struct.symbolic_list_struct* %128, %struct.symbolic_list_struct** %5, align 8
  br label %129

129:                                              ; preds = %137, %124
  %130 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %131 = icmp ne %struct.symbolic_list_struct* %130, null
  br i1 %131, label %132, label %141

132:                                              ; preds = %129
  %133 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %134 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %133, i32 0, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0), i32 %135)
  br label %137

137:                                              ; preds = %132
  %138 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %139 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %138, i32 0, i32 2
  %140 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %139, align 8
  store %struct.symbolic_list_struct* %140, %struct.symbolic_list_struct** %5, align 8
  br label %129

141:                                              ; preds = %129
  %142 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64, i64 0, i64 0))
  br label %143

143:                                              ; preds = %141
  %144 = load %struct.symbolic_struct*, %struct.symbolic_struct** %6, align 8
  %145 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %144, i32 0, i32 4
  %146 = load %struct.symbolic_struct*, %struct.symbolic_struct** %145, align 8
  store %struct.symbolic_struct* %146, %struct.symbolic_struct** %6, align 8
  br label %121

147:                                              ; preds = %121
  br label %148

148:                                              ; preds = %147, %112
  %149 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %150 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %149, i32 0, i32 9
  %151 = load %struct.symbolic_struct*, %struct.symbolic_struct** %150, align 8
  %152 = icmp ne %struct.symbolic_struct* %151, null
  br i1 %152, label %153, label %184

153:                                              ; preds = %148
  %154 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %155 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %154, i32 0, i32 9
  %156 = load %struct.symbolic_struct*, %struct.symbolic_struct** %155, align 8
  store %struct.symbolic_struct* %156, %struct.symbolic_struct** %6, align 8
  br label %157

157:                                              ; preds = %179, %153
  %158 = load %struct.symbolic_struct*, %struct.symbolic_struct** %6, align 8
  %159 = icmp ne %struct.symbolic_struct* %158, null
  br i1 %159, label %160, label %183

160:                                              ; preds = %157
  %161 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66, i64 0, i64 0))
  %162 = load %struct.symbolic_struct*, %struct.symbolic_struct** %6, align 8
  %163 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %162, i32 0, i32 0
  %164 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %163, align 8
  store %struct.symbolic_list_struct* %164, %struct.symbolic_list_struct** %5, align 8
  br label %165

165:                                              ; preds = %173, %160
  %166 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %167 = icmp ne %struct.symbolic_list_struct* %166, null
  br i1 %167, label %168, label %177

168:                                              ; preds = %165
  %169 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %170 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %169, i32 0, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0), i32 %171)
  br label %173

173:                                              ; preds = %168
  %174 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %175 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %174, i32 0, i32 2
  %176 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %175, align 8
  store %struct.symbolic_list_struct* %176, %struct.symbolic_list_struct** %5, align 8
  br label %165

177:                                              ; preds = %165
  %178 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64, i64 0, i64 0))
  br label %179

179:                                              ; preds = %177
  %180 = load %struct.symbolic_struct*, %struct.symbolic_struct** %6, align 8
  %181 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %180, i32 0, i32 4
  %182 = load %struct.symbolic_struct*, %struct.symbolic_struct** %181, align 8
  store %struct.symbolic_struct* %182, %struct.symbolic_struct** %6, align 8
  br label %157

183:                                              ; preds = %157
  br label %184

184:                                              ; preds = %183, %148
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %186 = call i32 @fflush(%struct._IO_FILE* %185)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @mybasename(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call i8* @strrchr(i8* %4, i32 47) #9
  store i8* %5, i8** %3, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = load i8*, i8** %3, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 1
  br label %13

11:                                               ; preds = %1
  %12 = load i8*, i8** %2, align 8
  br label %13

13:                                               ; preds = %11, %8
  %14 = phi i8* [ %10, %8 ], [ %12, %11 ]
  ret i8* %14
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @free_PLA(%struct.PLA_t* %0) #0 {
  %2 = alloca %struct.PLA_t*, align 8
  %3 = alloca %struct.symbolic_list_struct*, align 8
  %4 = alloca %struct.symbolic_list_struct*, align 8
  %5 = alloca %struct.symbolic_struct*, align 8
  %6 = alloca %struct.symbolic_struct*, align 8
  %7 = alloca i32, align 4
  store %struct.PLA_t* %0, %struct.PLA_t** %2, align 8
  %8 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %9 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %8, i32 0, i32 0
  %10 = load %struct.set_family*, %struct.set_family** %9, align 8
  %11 = icmp ne %struct.set_family* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %14 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %13, i32 0, i32 0
  %15 = load %struct.set_family*, %struct.set_family** %14, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %15)
  br label %16

16:                                               ; preds = %12, %1
  %17 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %18 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %17, i32 0, i32 2
  %19 = load %struct.set_family*, %struct.set_family** %18, align 8
  %20 = icmp ne %struct.set_family* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %23 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %22, i32 0, i32 2
  %24 = load %struct.set_family*, %struct.set_family** %23, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %24)
  br label %25

25:                                               ; preds = %21, %16
  %26 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %27 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %26, i32 0, i32 1
  %28 = load %struct.set_family*, %struct.set_family** %27, align 8
  %29 = icmp ne %struct.set_family* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %25
  %31 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %32 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %31, i32 0, i32 1
  %33 = load %struct.set_family*, %struct.set_family** %32, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %33)
  br label %34

34:                                               ; preds = %30, %25
  %35 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %36 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %35, i32 0, i32 5
  %37 = load i32*, i32** %36, align 8
  %38 = icmp ne i32* %37, null
  br i1 %38, label %39, label %52

39:                                               ; preds = %34
  %40 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %41 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %40, i32 0, i32 5
  %42 = load i32*, i32** %41, align 8
  %43 = icmp ne i32* %42, null
  br i1 %43, label %44, label %51

44:                                               ; preds = %39
  %45 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %46 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %45, i32 0, i32 5
  %47 = load i32*, i32** %46, align 8
  %48 = bitcast i32* %47 to i8*
  call void @free(i8* %48) #7
  %49 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %50 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %49, i32 0, i32 5
  store i32* null, i32** %50, align 8
  br label %51

51:                                               ; preds = %44, %39
  br label %52

52:                                               ; preds = %51, %34
  %53 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %54 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %53, i32 0, i32 6
  %55 = load %struct.pair_struct*, %struct.pair_struct** %54, align 8
  %56 = icmp ne %struct.pair_struct* %55, null
  br i1 %56, label %57, label %106

57:                                               ; preds = %52
  %58 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %59 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %58, i32 0, i32 6
  %60 = load %struct.pair_struct*, %struct.pair_struct** %59, align 8
  %61 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %60, i32 0, i32 1
  %62 = load i32*, i32** %61, align 8
  %63 = icmp ne i32* %62, null
  br i1 %63, label %64, label %75

64:                                               ; preds = %57
  %65 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %66 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %65, i32 0, i32 6
  %67 = load %struct.pair_struct*, %struct.pair_struct** %66, align 8
  %68 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %67, i32 0, i32 1
  %69 = load i32*, i32** %68, align 8
  %70 = bitcast i32* %69 to i8*
  call void @free(i8* %70) #7
  %71 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %72 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %71, i32 0, i32 6
  %73 = load %struct.pair_struct*, %struct.pair_struct** %72, align 8
  %74 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %73, i32 0, i32 1
  store i32* null, i32** %74, align 8
  br label %75

75:                                               ; preds = %64, %57
  %76 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %77 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %76, i32 0, i32 6
  %78 = load %struct.pair_struct*, %struct.pair_struct** %77, align 8
  %79 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %78, i32 0, i32 2
  %80 = load i32*, i32** %79, align 8
  %81 = icmp ne i32* %80, null
  br i1 %81, label %82, label %93

82:                                               ; preds = %75
  %83 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %84 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %83, i32 0, i32 6
  %85 = load %struct.pair_struct*, %struct.pair_struct** %84, align 8
  %86 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %85, i32 0, i32 2
  %87 = load i32*, i32** %86, align 8
  %88 = bitcast i32* %87 to i8*
  call void @free(i8* %88) #7
  %89 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %90 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %89, i32 0, i32 6
  %91 = load %struct.pair_struct*, %struct.pair_struct** %90, align 8
  %92 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %91, i32 0, i32 2
  store i32* null, i32** %92, align 8
  br label %93

93:                                               ; preds = %82, %75
  %94 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %95 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %94, i32 0, i32 6
  %96 = load %struct.pair_struct*, %struct.pair_struct** %95, align 8
  %97 = icmp ne %struct.pair_struct* %96, null
  br i1 %97, label %98, label %105

98:                                               ; preds = %93
  %99 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %100 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %99, i32 0, i32 6
  %101 = load %struct.pair_struct*, %struct.pair_struct** %100, align 8
  %102 = bitcast %struct.pair_struct* %101 to i8*
  call void @free(i8* %102) #7
  %103 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %104 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %103, i32 0, i32 6
  store %struct.pair_struct* null, %struct.pair_struct** %104, align 8
  br label %105

105:                                              ; preds = %98, %93
  br label %106

106:                                              ; preds = %105, %52
  %107 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %108 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %107, i32 0, i32 7
  %109 = load i8**, i8*** %108, align 8
  %110 = icmp ne i8** %109, null
  br i1 %110, label %111, label %166

111:                                              ; preds = %106
  store i32 0, i32* %7, align 4
  br label %112

112:                                              ; preds = %150, %111
  %113 = load i32, i32* %7, align 4
  %114 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %115 = icmp slt i32 %113, %114
  br i1 %115, label %116, label %153

116:                                              ; preds = %112
  %117 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %118 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %117, i32 0, i32 7
  %119 = load i8**, i8*** %118, align 8
  %120 = load i32, i32* %7, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8*, i8** %119, i64 %121
  %123 = load i8*, i8** %122, align 8
  %124 = icmp ne i8* %123, null
  br i1 %124, label %125, label %149

125:                                              ; preds = %116
  %126 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %127 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %126, i32 0, i32 7
  %128 = load i8**, i8*** %127, align 8
  %129 = load i32, i32* %7, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i8*, i8** %128, i64 %130
  %132 = load i8*, i8** %131, align 8
  %133 = icmp ne i8* %132, null
  br i1 %133, label %134, label %148

134:                                              ; preds = %125
  %135 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %136 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %135, i32 0, i32 7
  %137 = load i8**, i8*** %136, align 8
  %138 = load i32, i32* %7, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i8*, i8** %137, i64 %139
  %141 = load i8*, i8** %140, align 8
  call void @free(i8* %141) #7
  %142 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %143 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %142, i32 0, i32 7
  %144 = load i8**, i8*** %143, align 8
  %145 = load i32, i32* %7, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8*, i8** %144, i64 %146
  store i8* null, i8** %147, align 8
  br label %148

148:                                              ; preds = %134, %125
  br label %149

149:                                              ; preds = %148, %116
  br label %150

150:                                              ; preds = %149
  %151 = load i32, i32* %7, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %7, align 4
  br label %112

153:                                              ; preds = %112
  %154 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %155 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %154, i32 0, i32 7
  %156 = load i8**, i8*** %155, align 8
  %157 = icmp ne i8** %156, null
  br i1 %157, label %158, label %165

158:                                              ; preds = %153
  %159 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %160 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %159, i32 0, i32 7
  %161 = load i8**, i8*** %160, align 8
  %162 = bitcast i8** %161 to i8*
  call void @free(i8* %162) #7
  %163 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %164 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %163, i32 0, i32 7
  store i8** null, i8*** %164, align 8
  br label %165

165:                                              ; preds = %158, %153
  br label %166

166:                                              ; preds = %165, %106
  %167 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %168 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %167, i32 0, i32 3
  %169 = load i8*, i8** %168, align 8
  %170 = icmp ne i8* %169, null
  br i1 %170, label %171, label %183

171:                                              ; preds = %166
  %172 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %173 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %172, i32 0, i32 3
  %174 = load i8*, i8** %173, align 8
  %175 = icmp ne i8* %174, null
  br i1 %175, label %176, label %182

176:                                              ; preds = %171
  %177 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %178 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %177, i32 0, i32 3
  %179 = load i8*, i8** %178, align 8
  call void @free(i8* %179) #7
  %180 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %181 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %180, i32 0, i32 3
  store i8* null, i8** %181, align 8
  br label %182

182:                                              ; preds = %176, %171
  br label %183

183:                                              ; preds = %182, %166
  %184 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %185 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %184, i32 0, i32 8
  %186 = load %struct.symbolic_struct*, %struct.symbolic_struct** %185, align 8
  store %struct.symbolic_struct* %186, %struct.symbolic_struct** %5, align 8
  br label %187

187:                                              ; preds = %219, %183
  %188 = load %struct.symbolic_struct*, %struct.symbolic_struct** %5, align 8
  %189 = icmp ne %struct.symbolic_struct* %188, null
  br i1 %189, label %190, label %221

190:                                              ; preds = %187
  %191 = load %struct.symbolic_struct*, %struct.symbolic_struct** %5, align 8
  %192 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %191, i32 0, i32 0
  %193 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %192, align 8
  store %struct.symbolic_list_struct* %193, %struct.symbolic_list_struct** %3, align 8
  br label %194

194:                                              ; preds = %207, %190
  %195 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %3, align 8
  %196 = icmp ne %struct.symbolic_list_struct* %195, null
  br i1 %196, label %197, label %209

197:                                              ; preds = %194
  %198 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %3, align 8
  %199 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %198, i32 0, i32 2
  %200 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %199, align 8
  store %struct.symbolic_list_struct* %200, %struct.symbolic_list_struct** %4, align 8
  %201 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %3, align 8
  %202 = icmp ne %struct.symbolic_list_struct* %201, null
  br i1 %202, label %203, label %206

203:                                              ; preds = %197
  %204 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %3, align 8
  %205 = bitcast %struct.symbolic_list_struct* %204 to i8*
  call void @free(i8* %205) #7
  store %struct.symbolic_list_struct* null, %struct.symbolic_list_struct** %3, align 8
  br label %206

206:                                              ; preds = %203, %197
  br label %207

207:                                              ; preds = %206
  %208 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %4, align 8
  store %struct.symbolic_list_struct* %208, %struct.symbolic_list_struct** %3, align 8
  br label %194

209:                                              ; preds = %194
  %210 = load %struct.symbolic_struct*, %struct.symbolic_struct** %5, align 8
  %211 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %210, i32 0, i32 4
  %212 = load %struct.symbolic_struct*, %struct.symbolic_struct** %211, align 8
  store %struct.symbolic_struct* %212, %struct.symbolic_struct** %6, align 8
  %213 = load %struct.symbolic_struct*, %struct.symbolic_struct** %5, align 8
  %214 = icmp ne %struct.symbolic_struct* %213, null
  br i1 %214, label %215, label %218

215:                                              ; preds = %209
  %216 = load %struct.symbolic_struct*, %struct.symbolic_struct** %5, align 8
  %217 = bitcast %struct.symbolic_struct* %216 to i8*
  call void @free(i8* %217) #7
  store %struct.symbolic_struct* null, %struct.symbolic_struct** %5, align 8
  br label %218

218:                                              ; preds = %215, %209
  br label %219

219:                                              ; preds = %218
  %220 = load %struct.symbolic_struct*, %struct.symbolic_struct** %6, align 8
  store %struct.symbolic_struct* %220, %struct.symbolic_struct** %5, align 8
  br label %187

221:                                              ; preds = %187
  %222 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %223 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %222, i32 0, i32 8
  store %struct.symbolic_struct* null, %struct.symbolic_struct** %223, align 8
  %224 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %225 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %224, i32 0, i32 9
  %226 = load %struct.symbolic_struct*, %struct.symbolic_struct** %225, align 8
  store %struct.symbolic_struct* %226, %struct.symbolic_struct** %5, align 8
  br label %227

227:                                              ; preds = %259, %221
  %228 = load %struct.symbolic_struct*, %struct.symbolic_struct** %5, align 8
  %229 = icmp ne %struct.symbolic_struct* %228, null
  br i1 %229, label %230, label %261

230:                                              ; preds = %227
  %231 = load %struct.symbolic_struct*, %struct.symbolic_struct** %5, align 8
  %232 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %231, i32 0, i32 0
  %233 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %232, align 8
  store %struct.symbolic_list_struct* %233, %struct.symbolic_list_struct** %3, align 8
  br label %234

234:                                              ; preds = %247, %230
  %235 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %3, align 8
  %236 = icmp ne %struct.symbolic_list_struct* %235, null
  br i1 %236, label %237, label %249

237:                                              ; preds = %234
  %238 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %3, align 8
  %239 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %238, i32 0, i32 2
  %240 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %239, align 8
  store %struct.symbolic_list_struct* %240, %struct.symbolic_list_struct** %4, align 8
  %241 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %3, align 8
  %242 = icmp ne %struct.symbolic_list_struct* %241, null
  br i1 %242, label %243, label %246

243:                                              ; preds = %237
  %244 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %3, align 8
  %245 = bitcast %struct.symbolic_list_struct* %244 to i8*
  call void @free(i8* %245) #7
  store %struct.symbolic_list_struct* null, %struct.symbolic_list_struct** %3, align 8
  br label %246

246:                                              ; preds = %243, %237
  br label %247

247:                                              ; preds = %246
  %248 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %4, align 8
  store %struct.symbolic_list_struct* %248, %struct.symbolic_list_struct** %3, align 8
  br label %234

249:                                              ; preds = %234
  %250 = load %struct.symbolic_struct*, %struct.symbolic_struct** %5, align 8
  %251 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %250, i32 0, i32 4
  %252 = load %struct.symbolic_struct*, %struct.symbolic_struct** %251, align 8
  store %struct.symbolic_struct* %252, %struct.symbolic_struct** %6, align 8
  %253 = load %struct.symbolic_struct*, %struct.symbolic_struct** %5, align 8
  %254 = icmp ne %struct.symbolic_struct* %253, null
  br i1 %254, label %255, label %258

255:                                              ; preds = %249
  %256 = load %struct.symbolic_struct*, %struct.symbolic_struct** %5, align 8
  %257 = bitcast %struct.symbolic_struct* %256 to i8*
  call void @free(i8* %257) #7
  store %struct.symbolic_struct* null, %struct.symbolic_struct** %5, align 8
  br label %258

258:                                              ; preds = %255, %249
  br label %259

259:                                              ; preds = %258
  %260 = load %struct.symbolic_struct*, %struct.symbolic_struct** %6, align 8
  store %struct.symbolic_struct* %260, %struct.symbolic_struct** %5, align 8
  br label %227

261:                                              ; preds = %227
  %262 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %263 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %262, i32 0, i32 9
  store %struct.symbolic_struct* null, %struct.symbolic_struct** %263, align 8
  %264 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %265 = icmp ne %struct.PLA_t* %264, null
  br i1 %265, label %266, label %269

266:                                              ; preds = %261
  %267 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %268 = bitcast %struct.PLA_t* %267 to i8*
  call void @free(i8* %268) #7
  store %struct.PLA_t* null, %struct.PLA_t** %2, align 8
  br label %269

269:                                              ; preds = %266, %261
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @cover_cost(%struct.set_family* %0, %struct.cost_struct* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.cost_struct*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.cost_struct* %1, %struct.cost_struct** %4, align 8
  %9 = load %struct.set_family*, %struct.set_family** %3, align 8
  %10 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @cube1list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %9)
  store i32** %10, i32*** %7, align 8
  call void (i32**, ...) bitcast (void (i32**)* @massive_count to void (i32**, ...)*)(i32** %10)
  %11 = load i32**, i32*** %7, align 8
  %12 = getelementptr inbounds i32*, i32** %11, i64 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp ne i32* %13, null
  br i1 %14, label %15, label %22

15:                                               ; preds = %2
  %16 = load i32**, i32*** %7, align 8
  %17 = getelementptr inbounds i32*, i32** %16, i64 0
  %18 = load i32*, i32** %17, align 8
  %19 = bitcast i32* %18 to i8*
  call void @free(i8* %19) #7
  %20 = load i32**, i32*** %7, align 8
  %21 = getelementptr inbounds i32*, i32** %20, i64 0
  store i32* null, i32** %21, align 8
  br label %22

22:                                               ; preds = %15, %2
  %23 = load i32**, i32*** %7, align 8
  %24 = icmp ne i32** %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = load i32**, i32*** %7, align 8
  %27 = bitcast i32** %26 to i8*
  call void @free(i8* %27) #7
  store i32** null, i32*** %7, align 8
  br label %28

28:                                               ; preds = %25, %22
  %29 = load %struct.set_family*, %struct.set_family** %3, align 8
  %30 = getelementptr inbounds %struct.set_family, %struct.set_family* %29, i32 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %33 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %32, i32 0, i32 0
  store i32 %31, i32* %33, align 4
  %34 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %35 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %34, i32 0, i32 5
  store i32 0, i32* %35, align 4
  %36 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %37 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %36, i32 0, i32 3
  store i32 0, i32* %37, align 4
  %38 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %39 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %38, i32 0, i32 2
  store i32 0, i32* %39, align 4
  %40 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %41 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %40, i32 0, i32 1
  store i32 0, i32* %41, align 4
  %42 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %43 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %42, i32 0, i32 4
  store i32 0, i32* %43, align 4
  store i32 0, i32* %8, align 4
  br label %44

44:                                               ; preds = %58, %28
  %45 = load i32, i32* %8, align 4
  %46 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %47 = icmp slt i32 %45, %46
  br i1 %47, label %48, label %61

48:                                               ; preds = %44
  %49 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  %50 = load i32, i32* %8, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, i32* %49, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %55 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %54, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = add nsw i32 %56, %53
  store i32 %57, i32* %55, align 4
  br label %58

58:                                               ; preds = %48
  %59 = load i32, i32* %8, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %8, align 4
  br label %44

61:                                               ; preds = %44
  %62 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %62, i32* %8, align 4
  br label %63

63:                                               ; preds = %106, %61
  %64 = load i32, i32* %8, align 4
  %65 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %66 = sub nsw i32 %65, 1
  %67 = icmp slt i32 %64, %66
  br i1 %67, label %68, label %109

68:                                               ; preds = %63
  %69 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 16), align 8
  %70 = load i32, i32* %8, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i32, i32* %69, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %95

75:                                               ; preds = %68
  %76 = load %struct.set_family*, %struct.set_family** %3, align 8
  %77 = getelementptr inbounds %struct.set_family, %struct.set_family* %76, i32 0, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %80 = load i32, i32* %8, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i32, i32* %79, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %78, %83
  %85 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  %86 = load i32, i32* %8, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i32, i32* %85, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = sub nsw i32 %84, %89
  %91 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %92 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %91, i32 0, i32 3
  %93 = load i32, i32* %92, align 4
  %94 = add nsw i32 %93, %90
  store i32 %94, i32* %92, align 4
  br label %105

95:                                               ; preds = %68
  %96 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  %97 = load i32, i32* %8, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, i32* %96, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %102 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %101, i32 0, i32 3
  %103 = load i32, i32* %102, align 4
  %104 = add nsw i32 %103, %100
  store i32 %104, i32* %102, align 4
  br label %105

105:                                              ; preds = %95, %75
  br label %106

106:                                              ; preds = %105
  %107 = load i32, i32* %8, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, i32* %8, align 4
  br label %63

109:                                              ; preds = %63
  %110 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %111 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %112 = icmp ne i32 %110, %111
  br i1 %112, label %113, label %133

113:                                              ; preds = %109
  %114 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %115 = sub nsw i32 %114, 1
  store i32 %115, i32* %8, align 4
  %116 = load %struct.set_family*, %struct.set_family** %3, align 8
  %117 = getelementptr inbounds %struct.set_family, %struct.set_family* %116, i32 0, i32 3
  %118 = load i32, i32* %117, align 4
  %119 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %120 = load i32, i32* %8, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i32, i32* %119, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = mul nsw i32 %118, %123
  %125 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  %126 = load i32, i32* %8, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i32, i32* %125, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = sub nsw i32 %124, %129
  %131 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %132 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %131, i32 0, i32 2
  store i32 %130, i32* %132, align 4
  br label %133

133:                                              ; preds = %113, %109
  %134 = load %struct.set_family*, %struct.set_family** %3, align 8
  %135 = getelementptr inbounds %struct.set_family, %struct.set_family* %134, i32 0, i32 5
  %136 = load i32*, i32** %135, align 8
  store i32* %136, i32** %5, align 8
  %137 = load i32*, i32** %5, align 8
  %138 = load %struct.set_family*, %struct.set_family** %3, align 8
  %139 = getelementptr inbounds %struct.set_family, %struct.set_family* %138, i32 0, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = load %struct.set_family*, %struct.set_family** %3, align 8
  %142 = getelementptr inbounds %struct.set_family, %struct.set_family* %141, i32 0, i32 0
  %143 = load i32, i32* %142, align 8
  %144 = mul nsw i32 %140, %143
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i32, i32* %137, i64 %145
  store i32* %146, i32** %6, align 8
  br label %147

147:                                              ; preds = %162, %133
  %148 = load i32*, i32** %5, align 8
  %149 = load i32*, i32** %6, align 8
  %150 = icmp ult i32* %148, %149
  br i1 %150, label %151, label %169

151:                                              ; preds = %147
  %152 = load i32*, i32** %5, align 8
  %153 = getelementptr inbounds i32, i32* %152, i64 0
  %154 = load i32, i32* %153, align 4
  %155 = and i32 %154, 32768
  %156 = icmp ne i32 %155, 0
  %157 = zext i1 %156 to i32
  %158 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %159 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %158, i32 0, i32 5
  %160 = load i32, i32* %159, align 4
  %161 = add nsw i32 %160, %157
  store i32 %161, i32* %159, align 4
  br label %162

162:                                              ; preds = %151
  %163 = load %struct.set_family*, %struct.set_family** %3, align 8
  %164 = getelementptr inbounds %struct.set_family, %struct.set_family* %163, i32 0, i32 0
  %165 = load i32, i32* %164, align 8
  %166 = load i32*, i32** %5, align 8
  %167 = sext i32 %165 to i64
  %168 = getelementptr inbounds i32, i32* %166, i64 %167
  store i32* %168, i32** %5, align 8
  br label %147

169:                                              ; preds = %147
  %170 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %171 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %174 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %173, i32 0, i32 2
  %175 = load i32, i32* %174, align 4
  %176 = add nsw i32 %172, %175
  %177 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %178 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %177, i32 0, i32 3
  %179 = load i32, i32* %178, align 4
  %180 = add nsw i32 %176, %179
  %181 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %182 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %181, i32 0, i32 4
  store i32 %180, i32* %182, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @fmt_cost(%struct.cost_struct* %0) #0 {
  %2 = alloca %struct.cost_struct*, align 8
  store %struct.cost_struct* %0, %struct.cost_struct** %2, align 8
  %3 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %4 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %5 = sub nsw i32 %4, 1
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %7, label %21

7:                                                ; preds = %1
  %8 = load %struct.cost_struct*, %struct.cost_struct** %2, align 8
  %9 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = load %struct.cost_struct*, %struct.cost_struct** %2, align 8
  %12 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = load %struct.cost_struct*, %struct.cost_struct** %2, align 8
  %15 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = load %struct.cost_struct*, %struct.cost_struct** %2, align 8
  %18 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %17, i32 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([200 x i8], [200 x i8]* @fmt_cost.s, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.68, i64 0, i64 0), i32 %10, i32 %13, i32 %16, i32 %19) #7
  br label %35

21:                                               ; preds = %1
  %22 = load %struct.cost_struct*, %struct.cost_struct** %2, align 8
  %23 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = load %struct.cost_struct*, %struct.cost_struct** %2, align 8
  %26 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = load %struct.cost_struct*, %struct.cost_struct** %2, align 8
  %29 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %28, i32 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = load %struct.cost_struct*, %struct.cost_struct** %2, align 8
  %32 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %31, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([200 x i8], [200 x i8]* @fmt_cost.s, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.69, i64 0, i64 0), i32 %24, i32 %27, i32 %30, i32 %33) #7
  br label %35

35:                                               ; preds = %21, %7
  ret i8* getelementptr inbounds ([200 x i8], [200 x i8]* @fmt_cost.s, i64 0, i64 0)
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @print_cost(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca %struct.cost_struct, align 4
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %4 = load %struct.set_family*, %struct.set_family** %2, align 8
  call void @cover_cost(%struct.set_family* %4, %struct.cost_struct* %3)
  %5 = call i8* @fmt_cost(%struct.cost_struct* %3)
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @copy_cost(%struct.cost_struct* %0, %struct.cost_struct* %1) #0 {
  %3 = alloca %struct.cost_struct*, align 8
  %4 = alloca %struct.cost_struct*, align 8
  store %struct.cost_struct* %0, %struct.cost_struct** %3, align 8
  store %struct.cost_struct* %1, %struct.cost_struct** %4, align 8
  %5 = load %struct.cost_struct*, %struct.cost_struct** %3, align 8
  %6 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %5, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %9 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %8, i32 0, i32 0
  store i32 %7, i32* %9, align 4
  %10 = load %struct.cost_struct*, %struct.cost_struct** %3, align 8
  %11 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %14 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %13, i32 0, i32 1
  store i32 %12, i32* %14, align 4
  %15 = load %struct.cost_struct*, %struct.cost_struct** %3, align 8
  %16 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %15, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %19 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %18, i32 0, i32 2
  store i32 %17, i32* %19, align 4
  %20 = load %struct.cost_struct*, %struct.cost_struct** %3, align 8
  %21 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %20, i32 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %24 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %23, i32 0, i32 3
  store i32 %22, i32* %24, align 4
  %25 = load %struct.cost_struct*, %struct.cost_struct** %3, align 8
  %26 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %25, i32 0, i32 4
  %27 = load i32, i32* %26, align 4
  %28 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %29 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %28, i32 0, i32 4
  store i32 %27, i32* %29, align 4
  %30 = load %struct.cost_struct*, %struct.cost_struct** %3, align 8
  %31 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %30, i32 0, i32 5
  %32 = load i32, i32* %31, align 4
  %33 = load %struct.cost_struct*, %struct.cost_struct** %4, align 8
  %34 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %33, i32 0, i32 5
  store i32 %32, i32* %34, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @size_stamp(%struct.set_family* %0, i8* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i8*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %4, align 8
  %6 = load %struct.set_family*, %struct.set_family** %3, align 8
  %7 = call i8* @print_cost(%struct.set_family* %6)
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.72, i64 0, i64 0), i8* %5, i8* %7)
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %10 = call i32 @fflush(%struct._IO_FILE* %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @print_trace(%struct.set_family* %0, i8* %1, i64 %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load i8*, i8** %5, align 8
  %8 = load i64, i64* %6, align 8
  %9 = call i8* @util_print_time(i64 %8)
  %10 = load %struct.set_family*, %struct.set_family** %4, align 8
  %11 = call i8* @print_cost(%struct.set_family* %10)
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3.75, i64 0, i64 0), i8* %7, i8* %9, i8* %11)
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %14 = call i32 @fflush(%struct._IO_FILE* %13)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @totals(i64 %0, i32 %1, %struct.set_family* %2, %struct.cost_struct* %3) #0 {
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.cost_struct*, align 8
  store i64 %0, i64* %5, align 8
  store i32 %1, i32* %6, align 4
  store %struct.set_family* %2, %struct.set_family** %7, align 8
  store %struct.cost_struct* %3, %struct.cost_struct** %8, align 8
  %9 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %10 = load i64, i64* %5, align 8
  %11 = sub nsw i64 %9, %10
  store i64 %11, i64* %5, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i32, i32* %6, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [16 x i64], [16 x i64]* @total_time, i64 0, i64 %14
  %16 = load i64, i64* %15, align 8
  %17 = add nsw i64 %16, %12
  store i64 %17, i64* %15, align 8
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [16 x i32], [16 x i32]* @total_calls, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %20, align 4
  %23 = load %struct.set_family*, %struct.set_family** %7, align 8
  %24 = load %struct.cost_struct*, %struct.cost_struct** %8, align 8
  call void @cover_cost(%struct.set_family* %23, %struct.cost_struct* %24)
  %25 = load i32, i32* @trace, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %4
  %28 = load i32, i32* %6, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [16 x i8*], [16 x i8*]* @total_name, i64 0, i64 %29
  %31 = load i8*, i8** %30, align 8
  %32 = load i64, i64* %5, align 8
  %33 = call i8* @util_print_time(i64 %32)
  %34 = load %struct.cost_struct*, %struct.cost_struct** %8, align 8
  %35 = call i8* @fmt_cost(%struct.cost_struct* %34)
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3.75, i64 0, i64 0), i8* %31, i8* %33, i8* %35)
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %38 = call i32 @fflush(%struct._IO_FILE* %37)
  br label %39

39:                                               ; preds = %27, %4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @fatal(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.80, i64 0, i64 0), i8* %4)
  call void @exit(i32 1) #10
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @unravel_range(%struct.set_family* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %15 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %16 = getelementptr inbounds i32*, i32** %15, i64 1
  %17 = load i32*, i32** %16, align 8
  store i32* %17, i32** %14, align 8
  %18 = load i32*, i32** %14, align 8
  %19 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 13), align 8
  %20 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %18, i32* %19)
  store i32 0, i32* %8, align 4
  br label %21

21:                                               ; preds = %34, %3
  %22 = load i32, i32* %8, align 4
  %23 = load i32, i32* %5, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %25, label %37

25:                                               ; preds = %21
  %26 = load i32*, i32** %14, align 8
  %27 = load i32*, i32** %14, align 8
  %28 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %29 = load i32, i32* %8, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i32*, i32** %28, i64 %30
  %32 = load i32*, i32** %31, align 8
  %33 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %26, i32* %27, i32* %32)
  br label %34

34:                                               ; preds = %25
  %35 = load i32, i32* %8, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %8, align 4
  br label %21

37:                                               ; preds = %21
  %38 = load i32, i32* %6, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %8, align 4
  br label %40

40:                                               ; preds = %53, %37
  %41 = load i32, i32* %8, align 4
  %42 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %43 = icmp slt i32 %41, %42
  br i1 %43, label %44, label %56

44:                                               ; preds = %40
  %45 = load i32*, i32** %14, align 8
  %46 = load i32*, i32** %14, align 8
  %47 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %48 = load i32, i32* %8, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32*, i32** %47, i64 %49
  %51 = load i32*, i32** %50, align 8
  %52 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %45, i32* %46, i32* %51)
  br label %53

53:                                               ; preds = %44
  %54 = load i32, i32* %8, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %8, align 4
  br label %40

56:                                               ; preds = %40
  store i32 0, i32* %9, align 4
  %57 = load %struct.set_family*, %struct.set_family** %4, align 8
  %58 = getelementptr inbounds %struct.set_family, %struct.set_family* %57, i32 0, i32 5
  %59 = load i32*, i32** %58, align 8
  store i32* %59, i32** %12, align 8
  %60 = load i32*, i32** %12, align 8
  %61 = load %struct.set_family*, %struct.set_family** %4, align 8
  %62 = getelementptr inbounds %struct.set_family, %struct.set_family* %61, i32 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = load %struct.set_family*, %struct.set_family** %4, align 8
  %65 = getelementptr inbounds %struct.set_family, %struct.set_family* %64, i32 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = mul nsw i32 %63, %66
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %60, i64 %68
  store i32* %69, i32** %13, align 8
  br label %70

70:                                               ; preds = %104, %56
  %71 = load i32*, i32** %12, align 8
  %72 = load i32*, i32** %13, align 8
  %73 = icmp ult i32* %71, %72
  br i1 %73, label %74, label %111

74:                                               ; preds = %70
  store i32 1, i32* %10, align 4
  %75 = load i32, i32* %5, align 4
  store i32 %75, i32* %8, align 4
  br label %76

76:                                               ; preds = %97, %74
  %77 = load i32, i32* %8, align 4
  %78 = load i32, i32* %6, align 4
  %79 = icmp sle i32 %77, %78
  br i1 %79, label %80, label %100

80:                                               ; preds = %76
  %81 = load i32*, i32** %12, align 8
  %82 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %83 = load i32, i32* %8, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i32*, i32** %82, i64 %84
  %86 = load i32*, i32** %85, align 8
  %87 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @set_dist to i32 (i32*, i32*, ...)*)(i32* %81, i32* %86)
  store i32 %87, i32* %11, align 4
  %88 = icmp sge i32 %87, 2
  br i1 %88, label %89, label %96

89:                                               ; preds = %80
  %90 = load i32, i32* %11, align 4
  %91 = load i32, i32* %10, align 4
  %92 = mul nsw i32 %91, %90
  store i32 %92, i32* %10, align 4
  %93 = icmp sgt i32 %92, 1000000
  br i1 %93, label %94, label %95

94:                                               ; preds = %89
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.81, i64 0, i64 0))
  br label %95

95:                                               ; preds = %94, %89
  br label %96

96:                                               ; preds = %95, %80
  br label %97

97:                                               ; preds = %96
  %98 = load i32, i32* %8, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %8, align 4
  br label %76

100:                                              ; preds = %76
  %101 = load i32, i32* %10, align 4
  %102 = load i32, i32* %9, align 4
  %103 = add nsw i32 %102, %101
  store i32 %103, i32* %9, align 4
  br label %104

104:                                              ; preds = %100
  %105 = load %struct.set_family*, %struct.set_family** %4, align 8
  %106 = getelementptr inbounds %struct.set_family, %struct.set_family* %105, i32 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = load i32*, i32** %12, align 8
  %109 = sext i32 %107 to i64
  %110 = getelementptr inbounds i32, i32* %108, i64 %109
  store i32* %110, i32** %12, align 8
  br label %70

111:                                              ; preds = %70
  %112 = load i32, i32* %9, align 4
  %113 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %114 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %112, i32 %113)
  store %struct.set_family* %114, %struct.set_family** %7, align 8
  %115 = load %struct.set_family*, %struct.set_family** %4, align 8
  %116 = getelementptr inbounds %struct.set_family, %struct.set_family* %115, i32 0, i32 5
  %117 = load i32*, i32** %116, align 8
  store i32* %117, i32** %12, align 8
  %118 = load i32*, i32** %12, align 8
  %119 = load %struct.set_family*, %struct.set_family** %4, align 8
  %120 = getelementptr inbounds %struct.set_family, %struct.set_family* %119, i32 0, i32 3
  %121 = load i32, i32* %120, align 4
  %122 = load %struct.set_family*, %struct.set_family** %4, align 8
  %123 = getelementptr inbounds %struct.set_family, %struct.set_family* %122, i32 0, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = mul nsw i32 %121, %124
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i32, i32* %118, i64 %126
  store i32* %127, i32** %13, align 8
  br label %128

128:                                              ; preds = %138, %111
  %129 = load i32*, i32** %12, align 8
  %130 = load i32*, i32** %13, align 8
  %131 = icmp ult i32* %129, %130
  br i1 %131, label %132, label %145

132:                                              ; preds = %128
  %133 = load i32*, i32** %12, align 8
  %134 = load i32, i32* %5, align 4
  %135 = load i32, i32* %6, align 4
  %136 = load i32*, i32** %14, align 8
  %137 = load %struct.set_family*, %struct.set_family** %7, align 8
  call void @cb_unravel(i32* %133, i32 %134, i32 %135, i32* %136, %struct.set_family* %137)
  br label %138

138:                                              ; preds = %132
  %139 = load %struct.set_family*, %struct.set_family** %4, align 8
  %140 = getelementptr inbounds %struct.set_family, %struct.set_family* %139, i32 0, i32 0
  %141 = load i32, i32* %140, align 8
  %142 = load i32*, i32** %12, align 8
  %143 = sext i32 %141 to i64
  %144 = getelementptr inbounds i32, i32* %142, i64 %143
  store i32* %144, i32** %12, align 8
  br label %128

145:                                              ; preds = %128
  %146 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %146)
  %147 = load %struct.set_family*, %struct.set_family** %7, align 8
  ret %struct.set_family* %147
}

; Function Attrs: noinline nounwind uwtable
define internal void @cb_unravel(i32* %0, i32 %1, i32 %2, i32* %3, %struct.set_family* %4) #0 {
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca %struct.set_family*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  store i32* %0, i32** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32* %3, i32** %9, align 8
  store %struct.set_family* %4, %struct.set_family** %10, align 8
  %25 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %26 = getelementptr inbounds i32*, i32** %25, i64 0
  %27 = load i32*, i32** %26, align 8
  store i32* %27, i32** %11, align 8
  store i32 1, i32* %14, align 4
  %28 = load i32*, i32** %11, align 8
  %29 = load i32*, i32** %9, align 8
  %30 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %28, i32* %29)
  %31 = load i32, i32* %7, align 4
  store i32 %31, i32* %17, align 4
  br label %32

32:                                               ; preds = %59, %5
  %33 = load i32, i32* %17, align 4
  %34 = load i32, i32* %8, align 4
  %35 = icmp sle i32 %33, %34
  br i1 %35, label %36, label %62

36:                                               ; preds = %32
  %37 = load i32*, i32** %6, align 8
  %38 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %39 = load i32, i32* %17, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32*, i32** %38, i64 %40
  %42 = load i32*, i32** %41, align 8
  %43 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @set_dist to i32 (i32*, i32*, ...)*)(i32* %37, i32* %42)
  store i32 %43, i32* %18, align 4
  %44 = icmp slt i32 %43, 2
  br i1 %44, label %45, label %54

45:                                               ; preds = %36
  %46 = load i32*, i32** %11, align 8
  %47 = load i32*, i32** %11, align 8
  %48 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %49 = load i32, i32* %17, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32*, i32** %48, i64 %50
  %52 = load i32*, i32** %51, align 8
  %53 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %46, i32* %47, i32* %52)
  br label %58

54:                                               ; preds = %36
  %55 = load i32, i32* %18, align 4
  %56 = load i32, i32* %14, align 4
  %57 = mul nsw i32 %56, %55
  store i32 %57, i32* %14, align 4
  br label %58

58:                                               ; preds = %54, %45
  br label %59

59:                                               ; preds = %58
  %60 = load i32, i32* %17, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %17, align 4
  br label %32

62:                                               ; preds = %32
  %63 = load i32*, i32** %11, align 8
  %64 = load i32*, i32** %6, align 8
  %65 = load i32*, i32** %11, align 8
  %66 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_and to i32* (i32*, i32*, i32*, ...)*)(i32* %63, i32* %64, i32* %65)
  %67 = load %struct.set_family*, %struct.set_family** %10, align 8
  %68 = getelementptr inbounds %struct.set_family, %struct.set_family* %67, i32 0, i32 3
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %19, align 4
  %70 = load i32, i32* %14, align 4
  %71 = load %struct.set_family*, %struct.set_family** %10, align 8
  %72 = getelementptr inbounds %struct.set_family, %struct.set_family* %71, i32 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = add nsw i32 %73, %70
  store i32 %74, i32* %72, align 4
  %75 = load %struct.set_family*, %struct.set_family** %10, align 8
  %76 = getelementptr inbounds %struct.set_family, %struct.set_family* %75, i32 0, i32 5
  %77 = load i32*, i32** %76, align 8
  %78 = load %struct.set_family*, %struct.set_family** %10, align 8
  %79 = getelementptr inbounds %struct.set_family, %struct.set_family* %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = load i32, i32* %19, align 4
  %82 = sub nsw i32 %81, 1
  %83 = mul nsw i32 %80, %82
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i32, i32* %77, i64 %84
  %86 = load %struct.set_family*, %struct.set_family** %10, align 8
  %87 = getelementptr inbounds %struct.set_family, %struct.set_family* %86, i32 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i32, i32* %85, i64 %89
  store i32* %90, i32** %12, align 8
  %91 = load %struct.set_family*, %struct.set_family** %10, align 8
  %92 = getelementptr inbounds %struct.set_family, %struct.set_family* %91, i32 0, i32 5
  %93 = load i32*, i32** %92, align 8
  %94 = load %struct.set_family*, %struct.set_family** %10, align 8
  %95 = getelementptr inbounds %struct.set_family, %struct.set_family* %94, i32 0, i32 3
  %96 = load i32, i32* %95, align 4
  %97 = load %struct.set_family*, %struct.set_family** %10, align 8
  %98 = getelementptr inbounds %struct.set_family, %struct.set_family* %97, i32 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = mul nsw i32 %96, %99
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, i32* %93, i64 %101
  store i32* %102, i32** %13, align 8
  br label %103

103:                                              ; preds = %127, %62
  %104 = load i32*, i32** %12, align 8
  %105 = load i32*, i32** %13, align 8
  %106 = icmp ult i32* %104, %105
  br i1 %106, label %107, label %134

107:                                              ; preds = %103
  %108 = load i32*, i32** %11, align 8
  %109 = getelementptr inbounds i32, i32* %108, i64 0
  %110 = load i32, i32* %109, align 4
  %111 = and i32 %110, 1023
  store i32 %111, i32* %24, align 4
  br label %112

112:                                              ; preds = %122, %107
  %113 = load i32*, i32** %11, align 8
  %114 = load i32, i32* %24, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i32, i32* %113, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = load i32*, i32** %12, align 8
  %119 = load i32, i32* %24, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i32, i32* %118, i64 %120
  store i32 %117, i32* %121, align 4
  br label %122

122:                                              ; preds = %112
  %123 = load i32, i32* %24, align 4
  %124 = add nsw i32 %123, -1
  store i32 %124, i32* %24, align 4
  %125 = icmp sge i32 %124, 0
  br i1 %125, label %112, label %126

126:                                              ; preds = %122
  br label %127

127:                                              ; preds = %126
  %128 = load %struct.set_family*, %struct.set_family** %10, align 8
  %129 = getelementptr inbounds %struct.set_family, %struct.set_family* %128, i32 0, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = load i32*, i32** %12, align 8
  %132 = sext i32 %130 to i64
  %133 = getelementptr inbounds i32, i32* %131, i64 %132
  store i32* %133, i32** %12, align 8
  br label %103

134:                                              ; preds = %103
  %135 = load i32, i32* %14, align 4
  store i32 %135, i32* %15, align 4
  %136 = load i32, i32* %7, align 4
  store i32 %136, i32* %17, align 4
  br label %137

137:                                              ; preds = %236, %134
  %138 = load i32, i32* %17, align 4
  %139 = load i32, i32* %8, align 4
  %140 = icmp sle i32 %138, %139
  br i1 %140, label %141, label %239

141:                                              ; preds = %137
  %142 = load i32*, i32** %6, align 8
  %143 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %144 = load i32, i32* %17, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i32*, i32** %143, i64 %145
  %147 = load i32*, i32** %146, align 8
  %148 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @set_dist to i32 (i32*, i32*, ...)*)(i32* %142, i32* %147)
  store i32 %148, i32* %18, align 4
  %149 = icmp sgt i32 %148, 1
  br i1 %149, label %150, label %235

150:                                              ; preds = %141
  %151 = load i32, i32* %15, align 4
  store i32 %151, i32* %16, align 4
  %152 = load i32, i32* %15, align 4
  %153 = load i32, i32* %18, align 4
  %154 = sdiv i32 %152, %153
  store i32 %154, i32* %15, align 4
  store i32 0, i32* %23, align 4
  %155 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %156 = load i32, i32* %17, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i32, i32* %155, i64 %157
  %159 = load i32, i32* %158, align 4
  store i32 %159, i32* %20, align 4
  br label %160

160:                                              ; preds = %231, %150
  %161 = load i32, i32* %20, align 4
  %162 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %163 = load i32, i32* %17, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i32, i32* %162, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = icmp sle i32 %161, %166
  br i1 %167, label %168, label %234

168:                                              ; preds = %160
  %169 = load i32*, i32** %6, align 8
  %170 = load i32, i32* %20, align 4
  %171 = ashr i32 %170, 5
  %172 = add nsw i32 %171, 1
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i32, i32* %169, i64 %173
  %175 = load i32, i32* %174, align 4
  %176 = load i32, i32* %20, align 4
  %177 = and i32 %176, 31
  %178 = shl i32 1, %177
  %179 = and i32 %175, %178
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %181, label %230

181:                                              ; preds = %168
  %182 = load i32, i32* %23, align 4
  store i32 %182, i32* %21, align 4
  br label %183

183:                                              ; preds = %222, %181
  %184 = load i32, i32* %21, align 4
  %185 = load i32, i32* %14, align 4
  %186 = icmp slt i32 %184, %185
  br i1 %186, label %187, label %226

187:                                              ; preds = %183
  store i32 0, i32* %22, align 4
  br label %188

188:                                              ; preds = %218, %187
  %189 = load i32, i32* %22, align 4
  %190 = load i32, i32* %15, align 4
  %191 = icmp slt i32 %189, %190
  br i1 %191, label %192, label %221

192:                                              ; preds = %188
  %193 = load %struct.set_family*, %struct.set_family** %10, align 8
  %194 = getelementptr inbounds %struct.set_family, %struct.set_family* %193, i32 0, i32 5
  %195 = load i32*, i32** %194, align 8
  %196 = load %struct.set_family*, %struct.set_family** %10, align 8
  %197 = getelementptr inbounds %struct.set_family, %struct.set_family* %196, i32 0, i32 0
  %198 = load i32, i32* %197, align 8
  %199 = load i32, i32* %21, align 4
  %200 = load i32, i32* %22, align 4
  %201 = add nsw i32 %199, %200
  %202 = load i32, i32* %19, align 4
  %203 = add nsw i32 %201, %202
  %204 = mul nsw i32 %198, %203
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds i32, i32* %195, i64 %205
  store i32* %206, i32** %12, align 8
  %207 = load i32, i32* %20, align 4
  %208 = and i32 %207, 31
  %209 = shl i32 1, %208
  %210 = load i32*, i32** %12, align 8
  %211 = load i32, i32* %20, align 4
  %212 = ashr i32 %211, 5
  %213 = add nsw i32 %212, 1
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i32, i32* %210, i64 %214
  %216 = load i32, i32* %215, align 4
  %217 = or i32 %216, %209
  store i32 %217, i32* %215, align 4
  br label %218

218:                                              ; preds = %192
  %219 = load i32, i32* %22, align 4
  %220 = add nsw i32 %219, 1
  store i32 %220, i32* %22, align 4
  br label %188

221:                                              ; preds = %188
  br label %222

222:                                              ; preds = %221
  %223 = load i32, i32* %16, align 4
  %224 = load i32, i32* %21, align 4
  %225 = add nsw i32 %224, %223
  store i32 %225, i32* %21, align 4
  br label %183

226:                                              ; preds = %183
  %227 = load i32, i32* %15, align 4
  %228 = load i32, i32* %23, align 4
  %229 = add nsw i32 %228, %227
  store i32 %229, i32* %23, align 4
  br label %230

230:                                              ; preds = %226, %168
  br label %231

231:                                              ; preds = %230
  %232 = load i32, i32* %20, align 4
  %233 = add nsw i32 %232, 1
  store i32 %233, i32* %20, align 4
  br label %160

234:                                              ; preds = %160
  br label %235

235:                                              ; preds = %234, %141
  br label %236

236:                                              ; preds = %235
  %237 = load i32, i32* %17, align 4
  %238 = add nsw i32 %237, 1
  store i32 %238, i32* %17, align 4
  br label %137

239:                                              ; preds = %137
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @unravel(%struct.set_family* %0, i32 %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.set_family*, %struct.set_family** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %8 = sub nsw i32 %7, 1
  %9 = call %struct.set_family* @unravel_range(%struct.set_family* %5, i32 %6, i32 %8)
  ret %struct.set_family* %9
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @lex_sort(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %4 = load %struct.set_family*, %struct.set_family** %2, align 8
  %5 = call i32** (%struct.set_family*, i32 (...)*, ...) bitcast (i32** (%struct.set_family*, i32 (...)*)* @sf_sort to i32** (%struct.set_family*, i32 (...)*, ...)*)(%struct.set_family* %4, i32 (...)* bitcast (i32 (i32**, i32**)* @lex_order to i32 (...)*))
  %6 = load %struct.set_family*, %struct.set_family** %2, align 8
  %7 = getelementptr inbounds %struct.set_family, %struct.set_family* %6, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = load %struct.set_family*, %struct.set_family** %2, align 8
  %10 = getelementptr inbounds %struct.set_family, %struct.set_family* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = call %struct.set_family* (i32**, i32, i32, ...) bitcast (%struct.set_family* (i32**, i32, i32)* @sf_unlist to %struct.set_family* (i32**, i32, i32, ...)*)(i32** %5, i32 %8, i32 %11)
  store %struct.set_family* %12, %struct.set_family** %3, align 8
  %13 = load %struct.set_family*, %struct.set_family** %2, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %13)
  %14 = load %struct.set_family*, %struct.set_family** %3, align 8
  ret %struct.set_family* %14
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @size_sort(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %4 = load %struct.set_family*, %struct.set_family** %2, align 8
  %5 = call i32** (%struct.set_family*, i32 (...)*, ...) bitcast (i32** (%struct.set_family*, i32 (...)*)* @sf_sort to i32** (%struct.set_family*, i32 (...)*, ...)*)(%struct.set_family* %4, i32 (...)* bitcast (i32 (i32**, i32**)* @descend to i32 (...)*))
  %6 = load %struct.set_family*, %struct.set_family** %2, align 8
  %7 = getelementptr inbounds %struct.set_family, %struct.set_family* %6, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = load %struct.set_family*, %struct.set_family** %2, align 8
  %10 = getelementptr inbounds %struct.set_family, %struct.set_family* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = call %struct.set_family* (i32**, i32, i32, ...) bitcast (%struct.set_family* (i32**, i32, i32)* @sf_unlist to %struct.set_family* (i32**, i32, i32, ...)*)(i32** %5, i32 %8, i32 %11)
  store %struct.set_family* %12, %struct.set_family** %3, align 8
  %13 = load %struct.set_family*, %struct.set_family** %2, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %13)
  %14 = load %struct.set_family*, %struct.set_family** %3, align 8
  ret %struct.set_family* %14
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @mini_sort(%struct.set_family* %0, i32 (...)* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32 (...)*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca %struct.set_family*, align 8
  %12 = alloca i32**, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32 (...)* %1, i32 (...)** %4, align 8
  %13 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  store i32 %13, i32* %7, align 4
  %14 = load %struct.set_family*, %struct.set_family** %3, align 8
  %15 = call i32* (%struct.set_family*, ...) bitcast (i32* (%struct.set_family*)* @sf_count to i32* (%struct.set_family*, ...)*)(%struct.set_family* %14)
  store i32* %15, i32** %5, align 8
  %16 = load %struct.set_family*, %struct.set_family** %3, align 8
  %17 = getelementptr inbounds %struct.set_family, %struct.set_family* %16, i32 0, i32 5
  %18 = load i32*, i32** %17, align 8
  store i32* %18, i32** %9, align 8
  %19 = load i32*, i32** %9, align 8
  %20 = load %struct.set_family*, %struct.set_family** %3, align 8
  %21 = getelementptr inbounds %struct.set_family, %struct.set_family* %20, i32 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = load %struct.set_family*, %struct.set_family** %3, align 8
  %24 = getelementptr inbounds %struct.set_family, %struct.set_family* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = mul nsw i32 %22, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %19, i64 %27
  store i32* %28, i32** %10, align 8
  br label %29

29:                                               ; preds = %74, %2
  %30 = load i32*, i32** %9, align 8
  %31 = load i32*, i32** %10, align 8
  %32 = icmp ult i32* %30, %31
  br i1 %32, label %33, label %81

33:                                               ; preds = %29
  store i32 0, i32* %6, align 4
  store i32 0, i32* %8, align 4
  br label %34

34:                                               ; preds = %60, %33
  %35 = load i32, i32* %8, align 4
  %36 = load i32, i32* %7, align 4
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %38, label %63

38:                                               ; preds = %34
  %39 = load i32*, i32** %9, align 8
  %40 = load i32, i32* %8, align 4
  %41 = ashr i32 %40, 5
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %39, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = load i32, i32* %8, align 4
  %47 = and i32 %46, 31
  %48 = shl i32 1, %47
  %49 = and i32 %45, %48
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %59

51:                                               ; preds = %38
  %52 = load i32*, i32** %5, align 8
  %53 = load i32, i32* %8, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32* %52, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = load i32, i32* %6, align 4
  %58 = add nsw i32 %57, %56
  store i32 %58, i32* %6, align 4
  br label %59

59:                                               ; preds = %51, %38
  br label %60

60:                                               ; preds = %59
  %61 = load i32, i32* %8, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %8, align 4
  br label %34

63:                                               ; preds = %34
  %64 = load i32*, i32** %9, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 0
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 65535
  store i32 %67, i32* %65, align 4
  %68 = load i32, i32* %6, align 4
  %69 = shl i32 %68, 16
  %70 = load i32*, i32** %9, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 0
  %72 = load i32, i32* %71, align 4
  %73 = or i32 %72, %69
  store i32 %73, i32* %71, align 4
  br label %74

74:                                               ; preds = %63
  %75 = load %struct.set_family*, %struct.set_family** %3, align 8
  %76 = getelementptr inbounds %struct.set_family, %struct.set_family* %75, i32 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = load i32*, i32** %9, align 8
  %79 = sext i32 %77 to i64
  %80 = getelementptr inbounds i32, i32* %78, i64 %79
  store i32* %80, i32** %9, align 8
  br label %29

81:                                               ; preds = %29
  %82 = load i32*, i32** %5, align 8
  %83 = icmp ne i32* %82, null
  br i1 %83, label %84, label %87

84:                                               ; preds = %81
  %85 = load i32*, i32** %5, align 8
  %86 = bitcast i32* %85 to i8*
  call void @free(i8* %86) #7
  store i32* null, i32** %5, align 8
  br label %87

87:                                               ; preds = %84, %81
  %88 = load %struct.set_family*, %struct.set_family** %3, align 8
  %89 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @sf_list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %88)
  store i32** %89, i32*** %12, align 8
  %90 = bitcast i32** %89 to i8*
  %91 = load %struct.set_family*, %struct.set_family** %3, align 8
  %92 = getelementptr inbounds %struct.set_family, %struct.set_family* %91, i32 0, i32 3
  %93 = load i32, i32* %92, align 4
  %94 = sext i32 %93 to i64
  %95 = load i32 (...)*, i32 (...)** %4, align 8
  %96 = bitcast i32 (...)* %95 to i32 (i8*, i8*)*
  call void @qsort(i8* %90, i64 %94, i64 8, i32 (i8*, i8*)* %96)
  %97 = load i32**, i32*** %12, align 8
  %98 = load %struct.set_family*, %struct.set_family** %3, align 8
  %99 = getelementptr inbounds %struct.set_family, %struct.set_family* %98, i32 0, i32 3
  %100 = load i32, i32* %99, align 4
  %101 = load %struct.set_family*, %struct.set_family** %3, align 8
  %102 = getelementptr inbounds %struct.set_family, %struct.set_family* %101, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = call %struct.set_family* (i32**, i32, i32, ...) bitcast (%struct.set_family* (i32**, i32, i32)* @sf_unlist to %struct.set_family* (i32**, i32, i32, ...)*)(i32** %97, i32 %100, i32 %103)
  store %struct.set_family* %104, %struct.set_family** %11, align 8
  %105 = load %struct.set_family*, %struct.set_family** %3, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %105)
  %106 = load %struct.set_family*, %struct.set_family** %11, align 8
  ret %struct.set_family* %106
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sort_reduce(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.set_family*, align 8
  %11 = alloca i32**, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32* null, i32** %6, align 8
  store i32 -1, i32* %7, align 4
  %12 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  store i32 %12, i32* %9, align 4
  %13 = load %struct.set_family*, %struct.set_family** %3, align 8
  %14 = getelementptr inbounds %struct.set_family, %struct.set_family* %13, i32 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %1
  %18 = load %struct.set_family*, %struct.set_family** %3, align 8
  store %struct.set_family* %18, %struct.set_family** %2, align 8
  br label %122

19:                                               ; preds = %1
  %20 = load %struct.set_family*, %struct.set_family** %3, align 8
  %21 = getelementptr inbounds %struct.set_family, %struct.set_family* %20, i32 0, i32 5
  %22 = load i32*, i32** %21, align 8
  store i32* %22, i32** %4, align 8
  %23 = load i32*, i32** %4, align 8
  %24 = load %struct.set_family*, %struct.set_family** %3, align 8
  %25 = getelementptr inbounds %struct.set_family, %struct.set_family* %24, i32 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = load %struct.set_family*, %struct.set_family** %3, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = mul nsw i32 %26, %29
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %23, i64 %31
  store i32* %32, i32** %5, align 8
  br label %33

33:                                               ; preds = %46, %19
  %34 = load i32*, i32** %4, align 8
  %35 = load i32*, i32** %5, align 8
  %36 = icmp ult i32* %34, %35
  br i1 %36, label %37, label %53

37:                                               ; preds = %33
  %38 = load i32*, i32** %4, align 8
  %39 = call i32 (i32*, ...) bitcast (i32 (i32*)* @set_ord to i32 (i32*, ...)*)(i32* %38)
  store i32 %39, i32* %8, align 4
  %40 = load i32, i32* %7, align 4
  %41 = icmp sgt i32 %39, %40
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = load i32*, i32** %4, align 8
  store i32* %43, i32** %6, align 8
  %44 = load i32, i32* %8, align 4
  store i32 %44, i32* %7, align 4
  br label %45

45:                                               ; preds = %42, %37
  br label %46

46:                                               ; preds = %45
  %47 = load %struct.set_family*, %struct.set_family** %3, align 8
  %48 = getelementptr inbounds %struct.set_family, %struct.set_family* %47, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = load i32*, i32** %4, align 8
  %51 = sext i32 %49 to i64
  %52 = getelementptr inbounds i32, i32* %50, i64 %51
  store i32* %52, i32** %4, align 8
  br label %33

53:                                               ; preds = %33
  %54 = load %struct.set_family*, %struct.set_family** %3, align 8
  %55 = getelementptr inbounds %struct.set_family, %struct.set_family* %54, i32 0, i32 5
  %56 = load i32*, i32** %55, align 8
  store i32* %56, i32** %4, align 8
  %57 = load i32*, i32** %4, align 8
  %58 = load %struct.set_family*, %struct.set_family** %3, align 8
  %59 = getelementptr inbounds %struct.set_family, %struct.set_family* %58, i32 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = load %struct.set_family*, %struct.set_family** %3, align 8
  %62 = getelementptr inbounds %struct.set_family, %struct.set_family* %61, i32 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = mul nsw i32 %60, %63
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i32, i32* %57, i64 %65
  store i32* %66, i32** %5, align 8
  br label %67

67:                                               ; preds = %97, %53
  %68 = load i32*, i32** %4, align 8
  %69 = load i32*, i32** %5, align 8
  %70 = icmp ult i32* %68, %69
  br i1 %70, label %71, label %104

71:                                               ; preds = %67
  %72 = load i32*, i32** %4, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 0
  %74 = load i32, i32* %73, align 4
  %75 = and i32 %74, 65535
  store i32 %75, i32* %73, align 4
  %76 = load i32, i32* %9, align 4
  %77 = load i32*, i32** %6, align 8
  %78 = load i32*, i32** %4, align 8
  %79 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @cdist to i32 (i32*, i32*, ...)*)(i32* %77, i32* %78)
  %80 = sub nsw i32 %76, %79
  %81 = shl i32 %80, 7
  %82 = load i32*, i32** %4, align 8
  %83 = call i32 (i32*, ...) bitcast (i32 (i32*)* @set_ord to i32 (i32*, ...)*)(i32* %82)
  %84 = icmp slt i32 %83, 127
  br i1 %84, label %85, label %88

85:                                               ; preds = %71
  %86 = load i32*, i32** %4, align 8
  %87 = call i32 (i32*, ...) bitcast (i32 (i32*)* @set_ord to i32 (i32*, ...)*)(i32* %86)
  br label %89

88:                                               ; preds = %71
  br label %89

89:                                               ; preds = %88, %85
  %90 = phi i32 [ %87, %85 ], [ 127, %88 ]
  %91 = add nsw i32 %81, %90
  %92 = shl i32 %91, 16
  %93 = load i32*, i32** %4, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 0
  %95 = load i32, i32* %94, align 4
  %96 = or i32 %95, %92
  store i32 %96, i32* %94, align 4
  br label %97

97:                                               ; preds = %89
  %98 = load %struct.set_family*, %struct.set_family** %3, align 8
  %99 = getelementptr inbounds %struct.set_family, %struct.set_family* %98, i32 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = load i32*, i32** %4, align 8
  %102 = sext i32 %100 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  store i32* %103, i32** %4, align 8
  br label %67

104:                                              ; preds = %67
  %105 = load %struct.set_family*, %struct.set_family** %3, align 8
  %106 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @sf_list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %105)
  store i32** %106, i32*** %11, align 8
  %107 = bitcast i32** %106 to i8*
  %108 = load %struct.set_family*, %struct.set_family** %3, align 8
  %109 = getelementptr inbounds %struct.set_family, %struct.set_family* %108, i32 0, i32 3
  %110 = load i32, i32* %109, align 4
  %111 = sext i32 %110 to i64
  call void @qsort(i8* %107, i64 %111, i64 8, i32 (i8*, i8*)* bitcast (i32 (i32**, i32**)* @descend to i32 (i8*, i8*)*))
  %112 = load i32**, i32*** %11, align 8
  %113 = load %struct.set_family*, %struct.set_family** %3, align 8
  %114 = getelementptr inbounds %struct.set_family, %struct.set_family* %113, i32 0, i32 3
  %115 = load i32, i32* %114, align 4
  %116 = load %struct.set_family*, %struct.set_family** %3, align 8
  %117 = getelementptr inbounds %struct.set_family, %struct.set_family* %116, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = call %struct.set_family* (i32**, i32, i32, ...) bitcast (%struct.set_family* (i32**, i32, i32)* @sf_unlist to %struct.set_family* (i32**, i32, i32, ...)*)(i32** %112, i32 %115, i32 %118)
  store %struct.set_family* %119, %struct.set_family** %10, align 8
  %120 = load %struct.set_family*, %struct.set_family** %3, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %120)
  %121 = load %struct.set_family*, %struct.set_family** %10, align 8
  store %struct.set_family* %121, %struct.set_family** %2, align 8
  br label %122

122:                                              ; preds = %104, %17
  %123 = load %struct.set_family*, %struct.set_family** %2, align 8
  ret %struct.set_family* %123
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @random_order(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %6 = load %struct.set_family*, %struct.set_family** %2, align 8
  %7 = getelementptr inbounds %struct.set_family, %struct.set_family* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp sle i32 %8, 32
  br i1 %9, label %10, label %11

10:                                               ; preds = %1
  br label %19

11:                                               ; preds = %1
  %12 = load %struct.set_family*, %struct.set_family** %2, align 8
  %13 = getelementptr inbounds %struct.set_family, %struct.set_family* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sub nsw i32 %14, 1
  %16 = ashr i32 %15, 5
  %17 = add nsw i32 %16, 1
  %18 = add nsw i32 %17, 1
  br label %19

19:                                               ; preds = %11, %10
  %20 = phi i32 [ 2, %10 ], [ %18, %11 ]
  %21 = sext i32 %20 to i64
  %22 = mul i64 4, %21
  %23 = call noalias i8* @malloc(i64 %22) #7
  %24 = bitcast i8* %23 to i32*
  %25 = load %struct.set_family*, %struct.set_family** %2, align 8
  %26 = getelementptr inbounds %struct.set_family, %struct.set_family* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %24, i32 %27)
  store i32* %28, i32** %3, align 8
  %29 = load %struct.set_family*, %struct.set_family** %2, align 8
  %30 = getelementptr inbounds %struct.set_family, %struct.set_family* %29, i32 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = sub nsw i32 %31, 1
  store i32 %32, i32* %4, align 4
  br label %33

33:                                               ; preds = %87, %19
  %34 = load i32, i32* %4, align 4
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %90

36:                                               ; preds = %33
  %37 = load i32, i32* %4, align 4
  %38 = mul nsw i32 %37, 23
  %39 = add nsw i32 %38, 997
  %40 = load i32, i32* %4, align 4
  %41 = srem i32 %39, %40
  store i32 %41, i32* %5, align 4
  %42 = load i32*, i32** %3, align 8
  %43 = load %struct.set_family*, %struct.set_family** %2, align 8
  %44 = getelementptr inbounds %struct.set_family, %struct.set_family* %43, i32 0, i32 5
  %45 = load i32*, i32** %44, align 8
  %46 = load %struct.set_family*, %struct.set_family** %2, align 8
  %47 = getelementptr inbounds %struct.set_family, %struct.set_family* %46, i32 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = load i32, i32* %5, align 4
  %50 = mul nsw i32 %48, %49
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, i32* %45, i64 %51
  %53 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %42, i32* %52)
  %54 = load %struct.set_family*, %struct.set_family** %2, align 8
  %55 = getelementptr inbounds %struct.set_family, %struct.set_family* %54, i32 0, i32 5
  %56 = load i32*, i32** %55, align 8
  %57 = load %struct.set_family*, %struct.set_family** %2, align 8
  %58 = getelementptr inbounds %struct.set_family, %struct.set_family* %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = load i32, i32* %5, align 4
  %61 = mul nsw i32 %59, %60
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %56, i64 %62
  %64 = load %struct.set_family*, %struct.set_family** %2, align 8
  %65 = getelementptr inbounds %struct.set_family, %struct.set_family* %64, i32 0, i32 5
  %66 = load i32*, i32** %65, align 8
  %67 = load %struct.set_family*, %struct.set_family** %2, align 8
  %68 = getelementptr inbounds %struct.set_family, %struct.set_family* %67, i32 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = load i32, i32* %4, align 4
  %71 = mul nsw i32 %69, %70
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %66, i64 %72
  %74 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %63, i32* %73)
  %75 = load %struct.set_family*, %struct.set_family** %2, align 8
  %76 = getelementptr inbounds %struct.set_family, %struct.set_family* %75, i32 0, i32 5
  %77 = load i32*, i32** %76, align 8
  %78 = load %struct.set_family*, %struct.set_family** %2, align 8
  %79 = getelementptr inbounds %struct.set_family, %struct.set_family* %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = load i32, i32* %4, align 4
  %82 = mul nsw i32 %80, %81
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i32, i32* %77, i64 %83
  %85 = load i32*, i32** %3, align 8
  %86 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %84, i32* %85)
  br label %87

87:                                               ; preds = %36
  %88 = load i32, i32* %4, align 4
  %89 = add nsw i32 %88, -1
  store i32 %89, i32* %4, align 4
  br label %33

90:                                               ; preds = %33
  %91 = load i32*, i32** %3, align 8
  %92 = icmp ne i32* %91, null
  br i1 %92, label %93, label %96

93:                                               ; preds = %90
  %94 = load i32*, i32** %3, align 8
  %95 = bitcast i32* %94 to i8*
  call void @free(i8* %95) #7
  store i32* null, i32** %3, align 8
  br label %96

96:                                               ; preds = %93, %90
  %97 = load %struct.set_family*, %struct.set_family** %2, align 8
  ret %struct.set_family* %97
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @cubelist_partition(i32** %0, i32*** %1, i32*** %2, i32 %3) #0 {
  %5 = alloca i32**, align 8
  %6 = alloca i32***, align 8
  %7 = alloca i32***, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32**, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32**, align 8
  %14 = alloca i32**, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i32** %0, i32*** %5, align 8
  store i32*** %1, i32**** %6, align 8
  store i32*** %2, i32**** %7, align 8
  store i32 %3, i32* %8, align 4
  %19 = load i32**, i32*** %5, align 8
  %20 = getelementptr inbounds i32*, i32** %19, i64 1
  %21 = load i32*, i32** %20, align 8
  %22 = bitcast i32* %21 to i32**
  %23 = load i32**, i32*** %5, align 8
  %24 = ptrtoint i32** %22 to i64
  %25 = ptrtoint i32** %23 to i64
  %26 = sub i64 %24, %25
  %27 = sdiv exact i64 %26, 8
  %28 = sub nsw i64 %27, 3
  %29 = trunc i64 %28 to i32
  store i32 %29, i32* %17, align 4
  %30 = load i32**, i32*** %5, align 8
  %31 = getelementptr inbounds i32*, i32** %30, i64 2
  store i32** %31, i32*** %9, align 8
  br label %32

32:                                               ; preds = %37, %4
  %33 = load i32**, i32*** %9, align 8
  %34 = getelementptr inbounds i32*, i32** %33, i32 1
  store i32** %34, i32*** %9, align 8
  %35 = load i32*, i32** %33, align 8
  store i32* %35, i32** %10, align 8
  %36 = icmp ne i32* %35, null
  br i1 %36, label %37, label %42

37:                                               ; preds = %32
  %38 = load i32*, i32** %10, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 0
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, -2049
  store i32 %41, i32* %39, align 4
  br label %32

42:                                               ; preds = %32
  %43 = load i32**, i32*** %5, align 8
  %44 = getelementptr inbounds i32*, i32** %43, i64 2
  %45 = load i32*, i32** %44, align 8
  %46 = getelementptr inbounds i32, i32* %45, i64 0
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, 1023
  %49 = mul i32 32, %48
  %50 = icmp ule i32 %49, 32
  br i1 %50, label %51, label %52

51:                                               ; preds = %42
  br label %64

52:                                               ; preds = %42
  %53 = load i32**, i32*** %5, align 8
  %54 = getelementptr inbounds i32*, i32** %53, i64 2
  %55 = load i32*, i32** %54, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 0
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, 1023
  %59 = mul i32 32, %58
  %60 = sub i32 %59, 1
  %61 = lshr i32 %60, 5
  %62 = add i32 %61, 1
  %63 = add i32 %62, 1
  br label %64

64:                                               ; preds = %52, %51
  %65 = phi i32 [ 2, %51 ], [ %63, %52 ]
  %66 = zext i32 %65 to i64
  %67 = mul i64 4, %66
  %68 = call noalias i8* @malloc(i64 %67) #7
  %69 = bitcast i8* %68 to i32*
  %70 = load i32**, i32*** %5, align 8
  %71 = getelementptr inbounds i32*, i32** %70, i64 2
  %72 = load i32*, i32** %71, align 8
  %73 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %69, i32* %72)
  store i32* %73, i32** %11, align 8
  %74 = load i32**, i32*** %5, align 8
  %75 = getelementptr inbounds i32*, i32** %74, i64 0
  %76 = load i32*, i32** %75, align 8
  store i32* %76, i32** %12, align 8
  %77 = load i32**, i32*** %5, align 8
  %78 = getelementptr inbounds i32*, i32** %77, i64 2
  %79 = load i32*, i32** %78, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 0
  %81 = load i32, i32* %80, align 4
  %82 = or i32 %81, 2048
  store i32 %82, i32* %80, align 4
  store i32 1, i32* %16, align 4
  br label %83

83:                                               ; preds = %146, %64
  store i32 0, i32* %15, align 4
  %84 = load i32**, i32*** %5, align 8
  %85 = getelementptr inbounds i32*, i32** %84, i64 2
  store i32** %85, i32*** %9, align 8
  br label %86

86:                                               ; preds = %144, %83
  %87 = load i32**, i32*** %9, align 8
  %88 = getelementptr inbounds i32*, i32** %87, i32 1
  store i32** %88, i32*** %9, align 8
  %89 = load i32*, i32** %87, align 8
  store i32* %89, i32** %10, align 8
  %90 = icmp ne i32* %89, null
  br i1 %90, label %91, label %145

91:                                               ; preds = %86
  %92 = load i32*, i32** %10, align 8
  %93 = getelementptr inbounds i32, i32* %92, i64 0
  %94 = load i32, i32* %93, align 4
  %95 = and i32 %94, 2048
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %144, label %97

97:                                               ; preds = %91
  %98 = load i32*, i32** %10, align 8
  %99 = load i32*, i32** %11, align 8
  %100 = load i32*, i32** %12, align 8
  %101 = call i32 (i32*, i32*, i32*, ...) bitcast (i32 (i32*, i32*, i32*)* @ccommon to i32 (i32*, i32*, i32*, ...)*)(i32* %98, i32* %99, i32* %100)
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %144

103:                                              ; preds = %97
  %104 = load i32*, i32** %11, align 8
  %105 = getelementptr inbounds i32, i32* %104, i64 0
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 1023
  store i32 %107, i32* %18, align 4
  %108 = load i32*, i32** %11, align 8
  %109 = getelementptr inbounds i32, i32* %108, i64 0
  %110 = load i32, i32* %109, align 4
  %111 = and i32 %110, -1024
  store i32 %111, i32* %109, align 4
  %112 = load i32, i32* %18, align 4
  %113 = load i32*, i32** %11, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 0
  %115 = load i32, i32* %114, align 4
  %116 = or i32 %115, %112
  store i32 %116, i32* %114, align 4
  br label %117

117:                                              ; preds = %133, %103
  %118 = load i32*, i32** %11, align 8
  %119 = load i32, i32* %18, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i32, i32* %118, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = load i32*, i32** %10, align 8
  %124 = load i32, i32* %18, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i32, i32* %123, i64 %125
  %127 = load i32, i32* %126, align 4
  %128 = and i32 %122, %127
  %129 = load i32*, i32** %11, align 8
  %130 = load i32, i32* %18, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i32, i32* %129, i64 %131
  store i32 %128, i32* %132, align 4
  br label %133

133:                                              ; preds = %117
  %134 = load i32, i32* %18, align 4
  %135 = add nsw i32 %134, -1
  store i32 %135, i32* %18, align 4
  %136 = icmp sgt i32 %135, 0
  br i1 %136, label %117, label %137

137:                                              ; preds = %133
  %138 = load i32*, i32** %10, align 8
  %139 = getelementptr inbounds i32, i32* %138, i64 0
  %140 = load i32, i32* %139, align 4
  %141 = or i32 %140, 2048
  store i32 %141, i32* %139, align 4
  store i32 1, i32* %15, align 4
  %142 = load i32, i32* %16, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %16, align 4
  br label %144

144:                                              ; preds = %137, %97, %91
  br label %86

145:                                              ; preds = %86
  br label %146

146:                                              ; preds = %145
  %147 = load i32, i32* %15, align 4
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %83, label %149

149:                                              ; preds = %146
  %150 = load i32*, i32** %11, align 8
  %151 = icmp ne i32* %150, null
  br i1 %151, label %152, label %155

152:                                              ; preds = %149
  %153 = load i32*, i32** %11, align 8
  %154 = bitcast i32* %153 to i8*
  call void @free(i8* %154) #7
  store i32* null, i32** %11, align 8
  br label %155

155:                                              ; preds = %152, %149
  %156 = load i32, i32* %8, align 4
  %157 = icmp ne i32 %156, 0
  br i1 %157, label %158, label %164

158:                                              ; preds = %155
  %159 = load i32, i32* %16, align 4
  %160 = load i32, i32* %17, align 4
  %161 = load i32, i32* %16, align 4
  %162 = sub nsw i32 %160, %161
  %163 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1.82, i64 0, i64 0), i32 %159, i32 %162)
  br label %164

164:                                              ; preds = %158, %155
  %165 = load i32, i32* %16, align 4
  %166 = load i32, i32* %17, align 4
  %167 = icmp ne i32 %165, %166
  br i1 %167, label %168, label %294

168:                                              ; preds = %164
  %169 = load i32, i32* %17, align 4
  %170 = add nsw i32 %169, 3
  %171 = sext i32 %170 to i64
  %172 = mul i64 8, %171
  %173 = call noalias i8* @malloc(i64 %172) #7
  %174 = bitcast i8* %173 to i32**
  store i32** %174, i32*** %13, align 8
  %175 = load i32***, i32**** %6, align 8
  store i32** %174, i32*** %175, align 8
  %176 = load i32, i32* %17, align 4
  %177 = add nsw i32 %176, 3
  %178 = sext i32 %177 to i64
  %179 = mul i64 8, %178
  %180 = call noalias i8* @malloc(i64 %179) #7
  %181 = bitcast i8* %180 to i32**
  store i32** %181, i32*** %14, align 8
  %182 = load i32***, i32**** %7, align 8
  store i32** %181, i32*** %182, align 8
  %183 = load i32**, i32*** %5, align 8
  %184 = getelementptr inbounds i32*, i32** %183, i64 0
  %185 = load i32*, i32** %184, align 8
  %186 = getelementptr inbounds i32, i32* %185, i64 0
  %187 = load i32, i32* %186, align 4
  %188 = and i32 %187, 1023
  %189 = mul i32 32, %188
  %190 = icmp ule i32 %189, 32
  br i1 %190, label %191, label %192

191:                                              ; preds = %168
  br label %204

192:                                              ; preds = %168
  %193 = load i32**, i32*** %5, align 8
  %194 = getelementptr inbounds i32*, i32** %193, i64 0
  %195 = load i32*, i32** %194, align 8
  %196 = getelementptr inbounds i32, i32* %195, i64 0
  %197 = load i32, i32* %196, align 4
  %198 = and i32 %197, 1023
  %199 = mul i32 32, %198
  %200 = sub i32 %199, 1
  %201 = lshr i32 %200, 5
  %202 = add i32 %201, 1
  %203 = add i32 %202, 1
  br label %204

204:                                              ; preds = %192, %191
  %205 = phi i32 [ 2, %191 ], [ %203, %192 ]
  %206 = zext i32 %205 to i64
  %207 = mul i64 4, %206
  %208 = call noalias i8* @malloc(i64 %207) #7
  %209 = bitcast i8* %208 to i32*
  %210 = load i32**, i32*** %5, align 8
  %211 = getelementptr inbounds i32*, i32** %210, i64 0
  %212 = load i32*, i32** %211, align 8
  %213 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %209, i32* %212)
  %214 = load i32***, i32**** %6, align 8
  %215 = load i32**, i32*** %214, align 8
  %216 = getelementptr inbounds i32*, i32** %215, i64 0
  store i32* %213, i32** %216, align 8
  %217 = load i32**, i32*** %5, align 8
  %218 = getelementptr inbounds i32*, i32** %217, i64 0
  %219 = load i32*, i32** %218, align 8
  %220 = getelementptr inbounds i32, i32* %219, i64 0
  %221 = load i32, i32* %220, align 4
  %222 = and i32 %221, 1023
  %223 = mul i32 32, %222
  %224 = icmp ule i32 %223, 32
  br i1 %224, label %225, label %226

225:                                              ; preds = %204
  br label %238

226:                                              ; preds = %204
  %227 = load i32**, i32*** %5, align 8
  %228 = getelementptr inbounds i32*, i32** %227, i64 0
  %229 = load i32*, i32** %228, align 8
  %230 = getelementptr inbounds i32, i32* %229, i64 0
  %231 = load i32, i32* %230, align 4
  %232 = and i32 %231, 1023
  %233 = mul i32 32, %232
  %234 = sub i32 %233, 1
  %235 = lshr i32 %234, 5
  %236 = add i32 %235, 1
  %237 = add i32 %236, 1
  br label %238

238:                                              ; preds = %226, %225
  %239 = phi i32 [ 2, %225 ], [ %237, %226 ]
  %240 = zext i32 %239 to i64
  %241 = mul i64 4, %240
  %242 = call noalias i8* @malloc(i64 %241) #7
  %243 = bitcast i8* %242 to i32*
  %244 = load i32**, i32*** %5, align 8
  %245 = getelementptr inbounds i32*, i32** %244, i64 0
  %246 = load i32*, i32** %245, align 8
  %247 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %243, i32* %246)
  %248 = load i32***, i32**** %7, align 8
  %249 = load i32**, i32*** %248, align 8
  %250 = getelementptr inbounds i32*, i32** %249, i64 0
  store i32* %247, i32** %250, align 8
  %251 = load i32***, i32**** %6, align 8
  %252 = load i32**, i32*** %251, align 8
  %253 = getelementptr inbounds i32*, i32** %252, i64 2
  store i32** %253, i32*** %13, align 8
  %254 = load i32***, i32**** %7, align 8
  %255 = load i32**, i32*** %254, align 8
  %256 = getelementptr inbounds i32*, i32** %255, i64 2
  store i32** %256, i32*** %14, align 8
  %257 = load i32**, i32*** %5, align 8
  %258 = getelementptr inbounds i32*, i32** %257, i64 2
  store i32** %258, i32*** %9, align 8
  br label %259

259:                                              ; preds = %278, %238
  %260 = load i32**, i32*** %9, align 8
  %261 = getelementptr inbounds i32*, i32** %260, i32 1
  store i32** %261, i32*** %9, align 8
  %262 = load i32*, i32** %260, align 8
  store i32* %262, i32** %10, align 8
  %263 = icmp ne i32* %262, null
  br i1 %263, label %264, label %279

264:                                              ; preds = %259
  %265 = load i32*, i32** %10, align 8
  %266 = getelementptr inbounds i32, i32* %265, i64 0
  %267 = load i32, i32* %266, align 4
  %268 = and i32 %267, 2048
  %269 = icmp ne i32 %268, 0
  br i1 %269, label %270, label %274

270:                                              ; preds = %264
  %271 = load i32*, i32** %10, align 8
  %272 = load i32**, i32*** %13, align 8
  %273 = getelementptr inbounds i32*, i32** %272, i32 1
  store i32** %273, i32*** %13, align 8
  store i32* %271, i32** %272, align 8
  br label %278

274:                                              ; preds = %264
  %275 = load i32*, i32** %10, align 8
  %276 = load i32**, i32*** %14, align 8
  %277 = getelementptr inbounds i32*, i32** %276, i32 1
  store i32** %277, i32*** %14, align 8
  store i32* %275, i32** %276, align 8
  br label %278

278:                                              ; preds = %274, %270
  br label %259

279:                                              ; preds = %259
  %280 = load i32**, i32*** %13, align 8
  %281 = getelementptr inbounds i32*, i32** %280, i32 1
  store i32** %281, i32*** %13, align 8
  store i32* null, i32** %280, align 8
  %282 = load i32**, i32*** %13, align 8
  %283 = bitcast i32** %282 to i32*
  %284 = load i32***, i32**** %6, align 8
  %285 = load i32**, i32*** %284, align 8
  %286 = getelementptr inbounds i32*, i32** %285, i64 1
  store i32* %283, i32** %286, align 8
  %287 = load i32**, i32*** %14, align 8
  %288 = getelementptr inbounds i32*, i32** %287, i32 1
  store i32** %288, i32*** %14, align 8
  store i32* null, i32** %287, align 8
  %289 = load i32**, i32*** %14, align 8
  %290 = bitcast i32** %289 to i32*
  %291 = load i32***, i32**** %7, align 8
  %292 = load i32**, i32*** %291, align 8
  %293 = getelementptr inbounds i32*, i32** %292, i64 1
  store i32* %290, i32** %293, align 8
  br label %294

294:                                              ; preds = %279, %164
  %295 = load i32, i32* %17, align 4
  %296 = load i32, i32* %16, align 4
  %297 = sub nsw i32 %295, %296
  ret i32 %297
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @cof_output(%struct.set_family* %0, i32 %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32 %1, i32* %4, align 4
  %11 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %12 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i32*, i32** %11, i64 %13
  %15 = load i32*, i32** %14, align 8
  store i32* %15, i32** %9, align 8
  %16 = load %struct.set_family*, %struct.set_family** %3, align 8
  %17 = getelementptr inbounds %struct.set_family, %struct.set_family* %16, i32 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %20 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %18, i32 %19)
  store %struct.set_family* %20, %struct.set_family** %5, align 8
  %21 = load %struct.set_family*, %struct.set_family** %3, align 8
  %22 = getelementptr inbounds %struct.set_family, %struct.set_family* %21, i32 0, i32 5
  %23 = load i32*, i32** %22, align 8
  store i32* %23, i32** %6, align 8
  %24 = load i32*, i32** %6, align 8
  %25 = load %struct.set_family*, %struct.set_family** %3, align 8
  %26 = getelementptr inbounds %struct.set_family, %struct.set_family* %25, i32 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = load %struct.set_family*, %struct.set_family** %3, align 8
  %29 = getelementptr inbounds %struct.set_family, %struct.set_family* %28, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = mul nsw i32 %27, %30
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i32, i32* %24, i64 %32
  store i32* %33, i32** %7, align 8
  br label %34

34:                                               ; preds = %104, %2
  %35 = load i32*, i32** %6, align 8
  %36 = load i32*, i32** %7, align 8
  %37 = icmp ult i32* %35, %36
  br i1 %37, label %38, label %111

38:                                               ; preds = %34
  %39 = load i32*, i32** %6, align 8
  %40 = load i32, i32* %4, align 4
  %41 = ashr i32 %40, 5
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %39, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = load i32, i32* %4, align 4
  %47 = and i32 %46, 31
  %48 = shl i32 1, %47
  %49 = and i32 %45, %48
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %103

51:                                               ; preds = %38
  %52 = load %struct.set_family*, %struct.set_family** %5, align 8
  %53 = getelementptr inbounds %struct.set_family, %struct.set_family* %52, i32 0, i32 5
  %54 = load i32*, i32** %53, align 8
  %55 = load %struct.set_family*, %struct.set_family** %5, align 8
  %56 = getelementptr inbounds %struct.set_family, %struct.set_family* %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = load %struct.set_family*, %struct.set_family** %5, align 8
  %59 = getelementptr inbounds %struct.set_family, %struct.set_family* %58, i32 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %59, align 4
  %62 = mul nsw i32 %57, %60
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %54, i64 %63
  store i32* %64, i32** %8, align 8
  %65 = load i32*, i32** %6, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 0
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 1023
  store i32 %68, i32* %10, align 4
  %69 = load i32*, i32** %8, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 0
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, -1024
  store i32 %72, i32* %70, align 4
  %73 = load i32, i32* %10, align 4
  %74 = load i32*, i32** %8, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 0
  %76 = load i32, i32* %75, align 4
  %77 = or i32 %76, %73
  store i32 %77, i32* %75, align 4
  br label %78

78:                                               ; preds = %94, %51
  %79 = load i32*, i32** %6, align 8
  %80 = load i32, i32* %10, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i32, i32* %79, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = load i32*, i32** %9, align 8
  %85 = load i32, i32* %10, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i32, i32* %84, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = or i32 %83, %88
  %90 = load i32*, i32** %8, align 8
  %91 = load i32, i32* %10, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i32, i32* %90, i64 %92
  store i32 %89, i32* %93, align 4
  br label %94

94:                                               ; preds = %78
  %95 = load i32, i32* %10, align 4
  %96 = add nsw i32 %95, -1
  store i32 %96, i32* %10, align 4
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %78, label %98

98:                                               ; preds = %94
  %99 = load i32*, i32** %8, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 0
  %101 = load i32, i32* %100, align 4
  %102 = and i32 %101, -32769
  store i32 %102, i32* %100, align 4
  br label %103

103:                                              ; preds = %98, %38
  br label %104

104:                                              ; preds = %103
  %105 = load %struct.set_family*, %struct.set_family** %3, align 8
  %106 = getelementptr inbounds %struct.set_family, %struct.set_family* %105, i32 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = load i32*, i32** %6, align 8
  %109 = sext i32 %107 to i64
  %110 = getelementptr inbounds i32, i32* %108, i64 %109
  store i32* %110, i32** %6, align 8
  br label %34

111:                                              ; preds = %34
  %112 = load %struct.set_family*, %struct.set_family** %5, align 8
  ret %struct.set_family* %112
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @uncof_output(%struct.set_family* %0, i32 %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store i32 %1, i32* %5, align 4
  %10 = load %struct.set_family*, %struct.set_family** %4, align 8
  %11 = icmp eq %struct.set_family* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = load %struct.set_family*, %struct.set_family** %4, align 8
  store %struct.set_family* %13, %struct.set_family** %3, align 8
  br label %93

14:                                               ; preds = %2
  %15 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %16 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i32*, i32** %15, i64 %17
  %19 = load i32*, i32** %18, align 8
  store i32* %19, i32** %8, align 8
  %20 = load %struct.set_family*, %struct.set_family** %4, align 8
  %21 = getelementptr inbounds %struct.set_family, %struct.set_family* %20, i32 0, i32 5
  %22 = load i32*, i32** %21, align 8
  store i32* %22, i32** %6, align 8
  %23 = load i32*, i32** %6, align 8
  %24 = load %struct.set_family*, %struct.set_family** %4, align 8
  %25 = getelementptr inbounds %struct.set_family, %struct.set_family* %24, i32 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = load %struct.set_family*, %struct.set_family** %4, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = mul nsw i32 %26, %29
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %23, i64 %31
  store i32* %32, i32** %7, align 8
  br label %33

33:                                               ; preds = %84, %14
  %34 = load i32*, i32** %6, align 8
  %35 = load i32*, i32** %7, align 8
  %36 = icmp ult i32* %34, %35
  br i1 %36, label %37, label %91

37:                                               ; preds = %33
  %38 = load i32*, i32** %6, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 0
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 1023
  store i32 %41, i32* %9, align 4
  %42 = load i32*, i32** %6, align 8
  %43 = getelementptr inbounds i32, i32* %42, i64 0
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, -1024
  store i32 %45, i32* %43, align 4
  %46 = load i32, i32* %9, align 4
  %47 = load i32*, i32** %6, align 8
  %48 = getelementptr inbounds i32, i32* %47, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = or i32 %49, %46
  store i32 %50, i32* %48, align 4
  br label %51

51:                                               ; preds = %68, %37
  %52 = load i32*, i32** %6, align 8
  %53 = load i32, i32* %9, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32* %52, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = load i32*, i32** %8, align 8
  %58 = load i32, i32* %9, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, i32* %57, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = xor i32 %61, -1
  %63 = and i32 %56, %62
  %64 = load i32*, i32** %6, align 8
  %65 = load i32, i32* %9, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i32, i32* %64, i64 %66
  store i32 %63, i32* %67, align 4
  br label %68

68:                                               ; preds = %51
  %69 = load i32, i32* %9, align 4
  %70 = add nsw i32 %69, -1
  store i32 %70, i32* %9, align 4
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %51, label %72

72:                                               ; preds = %68
  %73 = load i32, i32* %5, align 4
  %74 = and i32 %73, 31
  %75 = shl i32 1, %74
  %76 = load i32*, i32** %6, align 8
  %77 = load i32, i32* %5, align 4
  %78 = ashr i32 %77, 5
  %79 = add nsw i32 %78, 1
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %76, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = or i32 %82, %75
  store i32 %83, i32* %81, align 4
  br label %84

84:                                               ; preds = %72
  %85 = load %struct.set_family*, %struct.set_family** %4, align 8
  %86 = getelementptr inbounds %struct.set_family, %struct.set_family* %85, i32 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = load i32*, i32** %6, align 8
  %89 = sext i32 %87 to i64
  %90 = getelementptr inbounds i32, i32* %88, i64 %89
  store i32* %90, i32** %6, align 8
  br label %33

91:                                               ; preds = %33
  %92 = load %struct.set_family*, %struct.set_family** %4, align 8
  store %struct.set_family* %92, %struct.set_family** %3, align 8
  br label %93

93:                                               ; preds = %91, %12
  %94 = load %struct.set_family*, %struct.set_family** %3, align 8
  ret %struct.set_family* %94
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @foreach_output_function(%struct.PLA_t* %0, i32 (...)* %1, i32 (...)* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.PLA_t*, align 8
  %6 = alloca i32 (...)*, align 8
  %7 = alloca i32 (...)*, align 8
  %8 = alloca %struct.PLA_t*, align 8
  %9 = alloca i32, align 4
  store %struct.PLA_t* %0, %struct.PLA_t** %5, align 8
  store i32 (...)* %1, i32 (...)** %6, align 8
  store i32 (...)* %2, i32 (...)** %7, align 8
  store i32 0, i32* %9, align 4
  br label %10

10:                                               ; preds = %117, %3
  %11 = load i32, i32* %9, align 4
  %12 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %13 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %12, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %11, %16
  br i1 %17, label %18, label %120

18:                                               ; preds = %10
  %19 = call %struct.PLA_t* (...) bitcast (%struct.PLA_t* ()* @new_PLA to %struct.PLA_t* (...)*)()
  store %struct.PLA_t* %19, %struct.PLA_t** %8, align 8
  %20 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %21 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %20, i32 0, i32 0
  %22 = load %struct.set_family*, %struct.set_family** %21, align 8
  %23 = load i32, i32* %9, align 4
  %24 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %25 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %24, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = add nsw i32 %23, %28
  %30 = call %struct.set_family* @cof_output(%struct.set_family* %22, i32 %29)
  %31 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %32 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %31, i32 0, i32 0
  store %struct.set_family* %30, %struct.set_family** %32, align 8
  %33 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %34 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %33, i32 0, i32 2
  %35 = load %struct.set_family*, %struct.set_family** %34, align 8
  %36 = load i32, i32* %9, align 4
  %37 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %38 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %37, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = add nsw i32 %36, %41
  %43 = call %struct.set_family* @cof_output(%struct.set_family* %35, i32 %42)
  %44 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %45 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %44, i32 0, i32 2
  store %struct.set_family* %43, %struct.set_family** %45, align 8
  %46 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %47 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %46, i32 0, i32 1
  %48 = load %struct.set_family*, %struct.set_family** %47, align 8
  %49 = load i32, i32* %9, align 4
  %50 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %51 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, i32* %50, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = add nsw i32 %49, %54
  %56 = call %struct.set_family* @cof_output(%struct.set_family* %48, i32 %55)
  %57 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %58 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %57, i32 0, i32 1
  store %struct.set_family* %56, %struct.set_family** %58, align 8
  %59 = load i32 (...)*, i32 (...)** %6, align 8
  %60 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %61 = load i32, i32* %9, align 4
  %62 = bitcast i32 (...)* %59 to i32 (%struct.PLA_t*, i32, ...)*
  %63 = call i32 (%struct.PLA_t*, i32, ...) %62(%struct.PLA_t* %60, i32 %61)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %18
  %66 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  call void (%struct.PLA_t*, ...) bitcast (void (%struct.PLA_t*)* @free_PLA to void (%struct.PLA_t*, ...)*)(%struct.PLA_t* %66)
  store i32 0, i32* %4, align 4
  br label %120

67:                                               ; preds = %18
  %68 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %69 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %68, i32 0, i32 0
  %70 = load %struct.set_family*, %struct.set_family** %69, align 8
  %71 = load i32, i32* %9, align 4
  %72 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %73 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, i32* %72, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = add nsw i32 %71, %76
  %78 = call %struct.set_family* @uncof_output(%struct.set_family* %70, i32 %77)
  %79 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %80 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %79, i32 0, i32 0
  store %struct.set_family* %78, %struct.set_family** %80, align 8
  %81 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %82 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %81, i32 0, i32 2
  %83 = load %struct.set_family*, %struct.set_family** %82, align 8
  %84 = load i32, i32* %9, align 4
  %85 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %86 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i32, i32* %85, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = add nsw i32 %84, %89
  %91 = call %struct.set_family* @uncof_output(%struct.set_family* %83, i32 %90)
  %92 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %93 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %92, i32 0, i32 2
  store %struct.set_family* %91, %struct.set_family** %93, align 8
  %94 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %95 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %94, i32 0, i32 1
  %96 = load %struct.set_family*, %struct.set_family** %95, align 8
  %97 = load i32, i32* %9, align 4
  %98 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %99 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i32, i32* %98, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = add nsw i32 %97, %102
  %104 = call %struct.set_family* @uncof_output(%struct.set_family* %96, i32 %103)
  %105 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %106 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %105, i32 0, i32 1
  store %struct.set_family* %104, %struct.set_family** %106, align 8
  %107 = load i32 (...)*, i32 (...)** %7, align 8
  %108 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %109 = load i32, i32* %9, align 4
  %110 = bitcast i32 (...)* %107 to i32 (%struct.PLA_t*, i32, ...)*
  %111 = call i32 (%struct.PLA_t*, i32, ...) %110(%struct.PLA_t* %108, i32 %109)
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %67
  %114 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  call void (%struct.PLA_t*, ...) bitcast (void (%struct.PLA_t*)* @free_PLA to void (%struct.PLA_t*, ...)*)(%struct.PLA_t* %114)
  store i32 0, i32* %4, align 4
  br label %120

115:                                              ; preds = %67
  %116 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  call void (%struct.PLA_t*, ...) bitcast (void (%struct.PLA_t*)* @free_PLA to void (%struct.PLA_t*, ...)*)(%struct.PLA_t* %116)
  br label %117

117:                                              ; preds = %115
  %118 = load i32, i32* %9, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %9, align 4
  br label %10

120:                                              ; preds = %113, %65, %10
  %121 = load i32, i32* %4, align 4
  ret i32 %121
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @so_espresso(%struct.PLA_t* %0, i32 %1) #0 {
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca i32, align 4
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %6 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %5, i32 0, i32 0
  %7 = load %struct.set_family*, %struct.set_family** %6, align 8
  %8 = getelementptr inbounds %struct.set_family, %struct.set_family* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %11 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %9, i32 %10)
  store %struct.set_family* %11, %struct.set_family** @Fmin, align 8
  %12 = load i32, i32* %4, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %16 = call i32 @foreach_output_function(%struct.PLA_t* %15, i32 (...)* bitcast (i32 (%struct.PLA_t*, i32)* @so_do_espresso to i32 (...)*), i32 (...)* bitcast (i32 (%struct.PLA_t*, i32)* @so_save to i32 (...)*))
  br label %20

17:                                               ; preds = %2
  %18 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %19 = call i32 @foreach_output_function(%struct.PLA_t* %18, i32 (...)* bitcast (i32 (%struct.PLA_t*, i32)* @so_do_exact to i32 (...)*), i32 (...)* bitcast (i32 (%struct.PLA_t*, i32)* @so_save to i32 (...)*))
  br label %20

20:                                               ; preds = %17, %14
  %21 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %22 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %21, i32 0, i32 0
  %23 = load %struct.set_family*, %struct.set_family** %22, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %23)
  %24 = load %struct.set_family*, %struct.set_family** @Fmin, align 8
  %25 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %26 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %25, i32 0, i32 0
  store %struct.set_family* %24, %struct.set_family** %26, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @so_do_espresso(%struct.PLA_t* %0, i32 %1) #0 {
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca i32, align 4
  %5 = alloca [32 x i8], align 16
  %6 = alloca i64, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 1, i32* @skip_make_sparse, align 4
  %7 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %8 = load i32, i32* %4, align 4
  %9 = call i32 (i8*, i8*, ...) @sprintf(i8* %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.84, i64 0, i64 0), i32 %8) #7
  %10 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %10, i64* %6, align 8
  %11 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %12 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %11, i32 0, i32 0
  %13 = load %struct.set_family*, %struct.set_family** %12, align 8
  %14 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %15 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %14, i32 0, i32 1
  %16 = load %struct.set_family*, %struct.set_family** %15, align 8
  %17 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %18 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %17, i32 0, i32 2
  %19 = load %struct.set_family*, %struct.set_family** %18, align 8
  %20 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @espresso to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %13, %struct.set_family* %16, %struct.set_family* %19)
  %21 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %22 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %21, i32 0, i32 0
  store %struct.set_family* %20, %struct.set_family** %22, align 8
  %23 = load i32, i32* @summary, align 4
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %33

25:                                               ; preds = %2
  %26 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %27 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %26, i32 0, i32 0
  %28 = load %struct.set_family*, %struct.set_family** %27, align 8
  %29 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %30 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %31 = load i64, i64* %6, align 8
  %32 = sub nsw i64 %30, %31
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %28, i8* %29, i64 %32)
  br label %33

33:                                               ; preds = %25, %2
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @so_save(%struct.PLA_t* %0, i32 %1) #0 {
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca i32, align 4
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.set_family*, %struct.set_family** @Fmin, align 8
  %6 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %7 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %6, i32 0, i32 0
  %8 = load %struct.set_family*, %struct.set_family** %7, align 8
  %9 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_append to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %5, %struct.set_family* %8)
  store %struct.set_family* %9, %struct.set_family** @Fmin, align 8
  %10 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %11 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %10, i32 0, i32 0
  store %struct.set_family* null, %struct.set_family** %11, align 8
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @so_do_exact(%struct.PLA_t* %0, i32 %1) #0 {
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca i32, align 4
  %5 = alloca [32 x i8], align 16
  %6 = alloca i64, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 1, i32* @skip_make_sparse, align 4
  %7 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %8 = load i32, i32* %4, align 4
  %9 = call i32 (i8*, i8*, ...) @sprintf(i8* %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.83, i64 0, i64 0), i32 %8) #7
  %10 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %10, i64* %6, align 8
  %11 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %12 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %11, i32 0, i32 0
  %13 = load %struct.set_family*, %struct.set_family** %12, align 8
  %14 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %15 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %14, i32 0, i32 1
  %16 = load %struct.set_family*, %struct.set_family** %15, align 8
  %17 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %18 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %17, i32 0, i32 2
  %19 = load %struct.set_family*, %struct.set_family** %18, align 8
  %20 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32)* @minimize_exact to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32, ...)*)(%struct.set_family* %13, %struct.set_family* %16, %struct.set_family* %19, i32 1)
  %21 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %22 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %21, i32 0, i32 0
  store %struct.set_family* %20, %struct.set_family** %22, align 8
  %23 = load i32, i32* @summary, align 4
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %33

25:                                               ; preds = %2
  %26 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %27 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %26, i32 0, i32 0
  %28 = load %struct.set_family*, %struct.set_family** %27, align 8
  %29 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %30 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %31 = load i64, i64* %6, align 8
  %32 = sub nsw i64 %30, %31
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %28, i8* %29, i64 %32)
  br label %33

33:                                               ; preds = %25, %2
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @so_both_espresso(%struct.PLA_t* %0, i32 %1) #0 {
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca i32, align 4
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %6 = getelementptr inbounds i32, i32* %5, i64 0
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 1023
  %9 = mul i32 32, %8
  %10 = icmp ule i32 %9, 32
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  br label %22

12:                                               ; preds = %2
  %13 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 0
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 1023
  %17 = mul i32 32, %16
  %18 = sub i32 %17, 1
  %19 = lshr i32 %18, 5
  %20 = add i32 %19, 1
  %21 = add i32 %20, 1
  br label %22

22:                                               ; preds = %12, %11
  %23 = phi i32 [ 2, %11 ], [ %21, %12 ]
  %24 = zext i32 %23 to i64
  %25 = mul i64 4, %24
  %26 = call noalias i8* @malloc(i64 %25) #7
  %27 = bitcast i8* %26 to i32*
  %28 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %29 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %27, i32* %28)
  store i32* %29, i32** @phase, align 8
  %30 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %31 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %30, i32 0, i32 0
  %32 = load %struct.set_family*, %struct.set_family** %31, align 8
  %33 = getelementptr inbounds %struct.set_family, %struct.set_family* %32, i32 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %36 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %34, i32 %35)
  store %struct.set_family* %36, %struct.set_family** @Fmin, align 8
  %37 = load i32, i32* %4, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %22
  %40 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %41 = call i32 @foreach_output_function(%struct.PLA_t* %40, i32 (...)* bitcast (i32 (%struct.PLA_t*, i32)* @so_both_do_espresso to i32 (...)*), i32 (...)* bitcast (i32 (%struct.PLA_t*, i32)* @so_both_save to i32 (...)*))
  br label %45

42:                                               ; preds = %22
  %43 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %44 = call i32 @foreach_output_function(%struct.PLA_t* %43, i32 (...)* bitcast (i32 (%struct.PLA_t*, i32)* @so_both_do_exact to i32 (...)*), i32 (...)* bitcast (i32 (%struct.PLA_t*, i32)* @so_both_save to i32 (...)*))
  br label %45

45:                                               ; preds = %42, %39
  %46 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %47 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %46, i32 0, i32 0
  %48 = load %struct.set_family*, %struct.set_family** %47, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %48)
  %49 = load %struct.set_family*, %struct.set_family** @Fmin, align 8
  %50 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %51 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %50, i32 0, i32 0
  store %struct.set_family* %49, %struct.set_family** %51, align 8
  %52 = load i32*, i32** @phase, align 8
  %53 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %54 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %53, i32 0, i32 5
  store i32* %52, i32** %54, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @so_both_do_espresso(%struct.PLA_t* %0, i32 %1) #0 {
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca i32, align 4
  %5 = alloca [32 x i8], align 16
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %9 = load i32, i32* %4, align 4
  %10 = call i32 (i8*, i8*, ...) @sprintf(i8* %8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.84, i64 0, i64 0), i32 %9) #7
  store i32 1, i32* @skip_make_sparse, align 4
  %11 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %11, i64* %6, align 8
  %12 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %13 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %12, i32 0, i32 0
  %14 = load %struct.set_family*, %struct.set_family** %13, align 8
  %15 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %16 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %15, i32 0, i32 1
  %17 = load %struct.set_family*, %struct.set_family** %16, align 8
  %18 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %19 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %18, i32 0, i32 2
  %20 = load %struct.set_family*, %struct.set_family** %19, align 8
  %21 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @espresso to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %14, %struct.set_family* %17, %struct.set_family* %20)
  %22 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %23 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %22, i32 0, i32 0
  store %struct.set_family* %21, %struct.set_family** %23, align 8
  %24 = load i32, i32* @summary, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %2
  %27 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %28 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %27, i32 0, i32 0
  %29 = load %struct.set_family*, %struct.set_family** %28, align 8
  %30 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %31 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %32 = load i64, i64* %6, align 8
  %33 = sub nsw i64 %31, %32
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %29, i8* %30, i64 %33)
  br label %34

34:                                               ; preds = %26, %2
  %35 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %36 = load i32, i32* %4, align 4
  %37 = call i32 (i8*, i8*, ...) @sprintf(i8* %35, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.86, i64 0, i64 0), i32 %36) #7
  store i32 1, i32* @skip_make_sparse, align 4
  %38 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %38, i64* %7, align 8
  %39 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %40 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %39, i32 0, i32 2
  %41 = load %struct.set_family*, %struct.set_family** %40, align 8
  %42 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %43 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %42, i32 0, i32 1
  %44 = load %struct.set_family*, %struct.set_family** %43, align 8
  %45 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %46 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %45, i32 0, i32 0
  %47 = load %struct.set_family*, %struct.set_family** %46, align 8
  %48 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @espresso to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %41, %struct.set_family* %44, %struct.set_family* %47)
  %49 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %50 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %49, i32 0, i32 2
  store %struct.set_family* %48, %struct.set_family** %50, align 8
  %51 = load i32, i32* @summary, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %61

53:                                               ; preds = %34
  %54 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %55 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %54, i32 0, i32 2
  %56 = load %struct.set_family*, %struct.set_family** %55, align 8
  %57 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %58 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %59 = load i64, i64* %7, align 8
  %60 = sub nsw i64 %58, %59
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %56, i8* %57, i64 %60)
  br label %61

61:                                               ; preds = %53, %34
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @so_both_save(%struct.PLA_t* %0, i32 %1) #0 {
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca i32, align 4
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %6 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %5, i32 0, i32 0
  %7 = load %struct.set_family*, %struct.set_family** %6, align 8
  %8 = getelementptr inbounds %struct.set_family, %struct.set_family* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %11 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %10, i32 0, i32 2
  %12 = load %struct.set_family*, %struct.set_family** %11, align 8
  %13 = getelementptr inbounds %struct.set_family, %struct.set_family* %12, i32 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %9, %14
  br i1 %15, label %16, label %46

16:                                               ; preds = %2
  %17 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %18 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %17, i32 0, i32 0
  %19 = load %struct.set_family*, %struct.set_family** %18, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %19)
  %20 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %21 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %20, i32 0, i32 2
  %22 = load %struct.set_family*, %struct.set_family** %21, align 8
  %23 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %24 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %23, i32 0, i32 0
  store %struct.set_family* %22, %struct.set_family** %24, align 8
  %25 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %26 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %25, i32 0, i32 2
  store %struct.set_family* null, %struct.set_family** %26, align 8
  %27 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %28 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %27, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = load i32, i32* %4, align 4
  %33 = add nsw i32 %32, %31
  store i32 %33, i32* %4, align 4
  %34 = load i32, i32* %4, align 4
  %35 = and i32 %34, 31
  %36 = shl i32 1, %35
  %37 = xor i32 %36, -1
  %38 = load i32*, i32** @phase, align 8
  %39 = load i32, i32* %4, align 4
  %40 = ashr i32 %39, 5
  %41 = add nsw i32 %40, 1
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %38, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, %37
  store i32 %45, i32* %43, align 4
  br label %52

46:                                               ; preds = %2
  %47 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %48 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %47, i32 0, i32 2
  %49 = load %struct.set_family*, %struct.set_family** %48, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %49)
  %50 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %51 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %50, i32 0, i32 2
  store %struct.set_family* null, %struct.set_family** %51, align 8
  br label %52

52:                                               ; preds = %46, %16
  %53 = load %struct.set_family*, %struct.set_family** @Fmin, align 8
  %54 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %55 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %54, i32 0, i32 0
  %56 = load %struct.set_family*, %struct.set_family** %55, align 8
  %57 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_append to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %53, %struct.set_family* %56)
  store %struct.set_family* %57, %struct.set_family** @Fmin, align 8
  %58 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %59 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %58, i32 0, i32 0
  store %struct.set_family* null, %struct.set_family** %59, align 8
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @so_both_do_exact(%struct.PLA_t* %0, i32 %1) #0 {
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca i32, align 4
  %5 = alloca [32 x i8], align 16
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %9 = load i32, i32* %4, align 4
  %10 = call i32 (i8*, i8*, ...) @sprintf(i8* %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.83, i64 0, i64 0), i32 %9) #7
  store i32 1, i32* @skip_make_sparse, align 4
  %11 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %11, i64* %6, align 8
  %12 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %13 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %12, i32 0, i32 0
  %14 = load %struct.set_family*, %struct.set_family** %13, align 8
  %15 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %16 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %15, i32 0, i32 1
  %17 = load %struct.set_family*, %struct.set_family** %16, align 8
  %18 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %19 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %18, i32 0, i32 2
  %20 = load %struct.set_family*, %struct.set_family** %19, align 8
  %21 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32)* @minimize_exact to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32, ...)*)(%struct.set_family* %14, %struct.set_family* %17, %struct.set_family* %20, i32 1)
  %22 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %23 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %22, i32 0, i32 0
  store %struct.set_family* %21, %struct.set_family** %23, align 8
  %24 = load i32, i32* @summary, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %2
  %27 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %28 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %27, i32 0, i32 0
  %29 = load %struct.set_family*, %struct.set_family** %28, align 8
  %30 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %31 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %32 = load i64, i64* %6, align 8
  %33 = sub nsw i64 %31, %32
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %29, i8* %30, i64 %33)
  br label %34

34:                                               ; preds = %26, %2
  %35 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %36 = load i32, i32* %4, align 4
  %37 = call i32 (i8*, i8*, ...) @sprintf(i8* %35, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.85, i64 0, i64 0), i32 %36) #7
  store i32 1, i32* @skip_make_sparse, align 4
  %38 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %38, i64* %7, align 8
  %39 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %40 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %39, i32 0, i32 2
  %41 = load %struct.set_family*, %struct.set_family** %40, align 8
  %42 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %43 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %42, i32 0, i32 1
  %44 = load %struct.set_family*, %struct.set_family** %43, align 8
  %45 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %46 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %45, i32 0, i32 0
  %47 = load %struct.set_family*, %struct.set_family** %46, align 8
  %48 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32)* @minimize_exact to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32, ...)*)(%struct.set_family* %41, %struct.set_family* %44, %struct.set_family* %47, i32 1)
  %49 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %50 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %49, i32 0, i32 2
  store %struct.set_family* %48, %struct.set_family** %50, align 8
  %51 = load i32, i32* @summary, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %61

53:                                               ; preds = %34
  %54 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %55 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %54, i32 0, i32 2
  %56 = load %struct.set_family*, %struct.set_family** %55, align 8
  %57 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %58 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %59 = load i64, i64* %7, align 8
  %60 = sub nsw i64 %58, %59
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %56, i8* %57, i64 %60)
  br label %61

61:                                               ; preds = %53, %34
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @fprint_pla(%struct._IO_FILE* %0, %struct.PLA_t* %1, i32 %2) #0 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct.PLA_t*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store %struct.PLA_t* %1, %struct.PLA_t** %5, align 8
  store i32 %2, i32* %6, align 4
  %10 = load i32, i32* %6, align 4
  %11 = and i32 %10, 256
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %23

13:                                               ; preds = %3
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %15 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %16 = call i32 @output_symbolic_constraints(%struct._IO_FILE* %14, %struct.PLA_t* %15, i32 0)
  %17 = load i32, i32* %6, align 4
  %18 = and i32 %17, -257
  store i32 %18, i32* %6, align 4
  %19 = load i32, i32* %6, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %13
  br label %267

22:                                               ; preds = %13
  br label %23

23:                                               ; preds = %22, %3
  %24 = load i32, i32* %6, align 4
  %25 = and i32 %24, 512
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %37

27:                                               ; preds = %23
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %29 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %30 = call i32 @output_symbolic_constraints(%struct._IO_FILE* %28, %struct.PLA_t* %29, i32 1)
  %31 = load i32, i32* %6, align 4
  %32 = and i32 %31, -513
  store i32 %32, i32* %6, align 4
  %33 = load i32, i32* %6, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %27
  br label %267

36:                                               ; preds = %27
  br label %37

37:                                               ; preds = %36, %23
  %38 = load i32, i32* %6, align 4
  %39 = icmp eq i32 %38, 8
  br i1 %39, label %40, label %42

40:                                               ; preds = %37
  %41 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  call void @pls_output(%struct.PLA_t* %41)
  br label %267

42:                                               ; preds = %37
  %43 = load i32, i32* %6, align 4
  %44 = icmp eq i32 %43, 16
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  %46 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  call void @eqn_output(%struct.PLA_t* %46)
  br label %266

47:                                               ; preds = %42
  %48 = load i32, i32* %6, align 4
  %49 = icmp eq i32 %48, 128
  br i1 %49, label %50, label %54

50:                                               ; preds = %47
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %52 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %53 = call i32 @kiss_output(%struct._IO_FILE* %51, %struct.PLA_t* %52)
  br label %265

54:                                               ; preds = %47
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %56 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %57 = load i32, i32* %6, align 4
  call void @fpr_header(%struct._IO_FILE* %55, %struct.PLA_t* %56, i32 %57)
  store i32 0, i32* %7, align 4
  %58 = load i32, i32* %6, align 4
  %59 = and i32 %58, 1
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %69

61:                                               ; preds = %54
  %62 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %63 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %62, i32 0, i32 0
  %64 = load %struct.set_family*, %struct.set_family** %63, align 8
  %65 = getelementptr inbounds %struct.set_family, %struct.set_family* %64, i32 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = load i32, i32* %7, align 4
  %68 = add nsw i32 %67, %66
  store i32 %68, i32* %7, align 4
  br label %69

69:                                               ; preds = %61, %54
  %70 = load i32, i32* %6, align 4
  %71 = and i32 %70, 2
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %81

73:                                               ; preds = %69
  %74 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %75 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %74, i32 0, i32 1
  %76 = load %struct.set_family*, %struct.set_family** %75, align 8
  %77 = getelementptr inbounds %struct.set_family, %struct.set_family* %76, i32 0, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = load i32, i32* %7, align 4
  %80 = add nsw i32 %79, %78
  store i32 %80, i32* %7, align 4
  br label %81

81:                                               ; preds = %73, %69
  %82 = load i32, i32* %6, align 4
  %83 = and i32 %82, 4
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %93

85:                                               ; preds = %81
  %86 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %87 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %86, i32 0, i32 2
  %88 = load %struct.set_family*, %struct.set_family** %87, align 8
  %89 = getelementptr inbounds %struct.set_family, %struct.set_family* %88, i32 0, i32 3
  %90 = load i32, i32* %89, align 4
  %91 = load i32, i32* %7, align 4
  %92 = add nsw i32 %91, %90
  store i32 %92, i32* %7, align 4
  br label %93

93:                                               ; preds = %85, %81
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %95 = load i32, i32* %7, align 4
  %96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i64 0, i64 0), i32 %95)
  %97 = load i32, i32* %6, align 4
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %138

99:                                               ; preds = %93
  %100 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %101 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %100, i32 0, i32 0
  %102 = load %struct.set_family*, %struct.set_family** %101, align 8
  %103 = getelementptr inbounds %struct.set_family, %struct.set_family* %102, i32 0, i32 5
  %104 = load i32*, i32** %103, align 8
  store i32* %104, i32** %9, align 8
  %105 = load i32*, i32** %9, align 8
  %106 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %107 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %106, i32 0, i32 0
  %108 = load %struct.set_family*, %struct.set_family** %107, align 8
  %109 = getelementptr inbounds %struct.set_family, %struct.set_family* %108, i32 0, i32 3
  %110 = load i32, i32* %109, align 4
  %111 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %112 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %111, i32 0, i32 0
  %113 = load %struct.set_family*, %struct.set_family** %112, align 8
  %114 = getelementptr inbounds %struct.set_family, %struct.set_family* %113, i32 0, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = mul nsw i32 %110, %115
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, i32* %105, i64 %117
  store i32* %118, i32** %8, align 8
  br label %119

119:                                              ; preds = %126, %99
  %120 = load i32*, i32** %9, align 8
  %121 = load i32*, i32** %8, align 8
  %122 = icmp ult i32* %120, %121
  br i1 %122, label %123, label %135

123:                                              ; preds = %119
  %124 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %125 = load i32*, i32** %9, align 8
  call void @print_cube(%struct._IO_FILE* %124, i32* %125, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.88, i64 0, i64 0))
  br label %126

126:                                              ; preds = %123
  %127 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %128 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %127, i32 0, i32 0
  %129 = load %struct.set_family*, %struct.set_family** %128, align 8
  %130 = getelementptr inbounds %struct.set_family, %struct.set_family* %129, i32 0, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = load i32*, i32** %9, align 8
  %133 = sext i32 %131 to i64
  %134 = getelementptr inbounds i32, i32* %132, i64 %133
  store i32* %134, i32** %9, align 8
  br label %119

135:                                              ; preds = %119
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %137 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %136, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.89, i64 0, i64 0))
  br label %264

138:                                              ; preds = %93
  %139 = load i32, i32* %6, align 4
  %140 = and i32 %139, 1
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %142, label %179

142:                                              ; preds = %138
  %143 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %144 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %143, i32 0, i32 0
  %145 = load %struct.set_family*, %struct.set_family** %144, align 8
  %146 = getelementptr inbounds %struct.set_family, %struct.set_family* %145, i32 0, i32 5
  %147 = load i32*, i32** %146, align 8
  store i32* %147, i32** %9, align 8
  %148 = load i32*, i32** %9, align 8
  %149 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %150 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %149, i32 0, i32 0
  %151 = load %struct.set_family*, %struct.set_family** %150, align 8
  %152 = getelementptr inbounds %struct.set_family, %struct.set_family* %151, i32 0, i32 3
  %153 = load i32, i32* %152, align 4
  %154 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %155 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %154, i32 0, i32 0
  %156 = load %struct.set_family*, %struct.set_family** %155, align 8
  %157 = getelementptr inbounds %struct.set_family, %struct.set_family* %156, i32 0, i32 0
  %158 = load i32, i32* %157, align 8
  %159 = mul nsw i32 %153, %158
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i32, i32* %148, i64 %160
  store i32* %161, i32** %8, align 8
  br label %162

162:                                              ; preds = %169, %142
  %163 = load i32*, i32** %9, align 8
  %164 = load i32*, i32** %8, align 8
  %165 = icmp ult i32* %163, %164
  br i1 %165, label %166, label %178

166:                                              ; preds = %162
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %168 = load i32*, i32** %9, align 8
  call void @print_cube(%struct._IO_FILE* %167, i32* %168, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.90, i64 0, i64 0))
  br label %169

169:                                              ; preds = %166
  %170 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %171 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %170, i32 0, i32 0
  %172 = load %struct.set_family*, %struct.set_family** %171, align 8
  %173 = getelementptr inbounds %struct.set_family, %struct.set_family* %172, i32 0, i32 0
  %174 = load i32, i32* %173, align 8
  %175 = load i32*, i32** %9, align 8
  %176 = sext i32 %174 to i64
  %177 = getelementptr inbounds i32, i32* %175, i64 %176
  store i32* %177, i32** %9, align 8
  br label %162

178:                                              ; preds = %162
  br label %179

179:                                              ; preds = %178, %138
  %180 = load i32, i32* %6, align 4
  %181 = and i32 %180, 2
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %183, label %220

183:                                              ; preds = %179
  %184 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %185 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %184, i32 0, i32 1
  %186 = load %struct.set_family*, %struct.set_family** %185, align 8
  %187 = getelementptr inbounds %struct.set_family, %struct.set_family* %186, i32 0, i32 5
  %188 = load i32*, i32** %187, align 8
  store i32* %188, i32** %9, align 8
  %189 = load i32*, i32** %9, align 8
  %190 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %191 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %190, i32 0, i32 1
  %192 = load %struct.set_family*, %struct.set_family** %191, align 8
  %193 = getelementptr inbounds %struct.set_family, %struct.set_family* %192, i32 0, i32 3
  %194 = load i32, i32* %193, align 4
  %195 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %196 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %195, i32 0, i32 1
  %197 = load %struct.set_family*, %struct.set_family** %196, align 8
  %198 = getelementptr inbounds %struct.set_family, %struct.set_family* %197, i32 0, i32 0
  %199 = load i32, i32* %198, align 8
  %200 = mul nsw i32 %194, %199
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds i32, i32* %189, i64 %201
  store i32* %202, i32** %8, align 8
  br label %203

203:                                              ; preds = %210, %183
  %204 = load i32*, i32** %9, align 8
  %205 = load i32*, i32** %8, align 8
  %206 = icmp ult i32* %204, %205
  br i1 %206, label %207, label %219

207:                                              ; preds = %203
  %208 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %209 = load i32*, i32** %9, align 8
  call void @print_cube(%struct._IO_FILE* %208, i32* %209, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.91, i64 0, i64 0))
  br label %210

210:                                              ; preds = %207
  %211 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %212 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %211, i32 0, i32 1
  %213 = load %struct.set_family*, %struct.set_family** %212, align 8
  %214 = getelementptr inbounds %struct.set_family, %struct.set_family* %213, i32 0, i32 0
  %215 = load i32, i32* %214, align 8
  %216 = load i32*, i32** %9, align 8
  %217 = sext i32 %215 to i64
  %218 = getelementptr inbounds i32, i32* %216, i64 %217
  store i32* %218, i32** %9, align 8
  br label %203

219:                                              ; preds = %203
  br label %220

220:                                              ; preds = %219, %179
  %221 = load i32, i32* %6, align 4
  %222 = and i32 %221, 4
  %223 = icmp ne i32 %222, 0
  br i1 %223, label %224, label %261

224:                                              ; preds = %220
  %225 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %226 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %225, i32 0, i32 2
  %227 = load %struct.set_family*, %struct.set_family** %226, align 8
  %228 = getelementptr inbounds %struct.set_family, %struct.set_family* %227, i32 0, i32 5
  %229 = load i32*, i32** %228, align 8
  store i32* %229, i32** %9, align 8
  %230 = load i32*, i32** %9, align 8
  %231 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %232 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %231, i32 0, i32 2
  %233 = load %struct.set_family*, %struct.set_family** %232, align 8
  %234 = getelementptr inbounds %struct.set_family, %struct.set_family* %233, i32 0, i32 3
  %235 = load i32, i32* %234, align 4
  %236 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %237 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %236, i32 0, i32 2
  %238 = load %struct.set_family*, %struct.set_family** %237, align 8
  %239 = getelementptr inbounds %struct.set_family, %struct.set_family* %238, i32 0, i32 0
  %240 = load i32, i32* %239, align 8
  %241 = mul nsw i32 %235, %240
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds i32, i32* %230, i64 %242
  store i32* %243, i32** %8, align 8
  br label %244

244:                                              ; preds = %251, %224
  %245 = load i32*, i32** %9, align 8
  %246 = load i32*, i32** %8, align 8
  %247 = icmp ult i32* %245, %246
  br i1 %247, label %248, label %260

248:                                              ; preds = %244
  %249 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %250 = load i32*, i32** %9, align 8
  call void @print_cube(%struct._IO_FILE* %249, i32* %250, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.92, i64 0, i64 0))
  br label %251

251:                                              ; preds = %248
  %252 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %253 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %252, i32 0, i32 2
  %254 = load %struct.set_family*, %struct.set_family** %253, align 8
  %255 = getelementptr inbounds %struct.set_family, %struct.set_family* %254, i32 0, i32 0
  %256 = load i32, i32* %255, align 8
  %257 = load i32*, i32** %9, align 8
  %258 = sext i32 %256 to i64
  %259 = getelementptr inbounds i32, i32* %257, i64 %258
  store i32* %259, i32** %9, align 8
  br label %244

260:                                              ; preds = %244
  br label %261

261:                                              ; preds = %260, %220
  %262 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %263 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %262, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.93, i64 0, i64 0))
  br label %264

264:                                              ; preds = %261, %135
  br label %265

265:                                              ; preds = %264, %50
  br label %266

266:                                              ; preds = %265, %45
  br label %267

267:                                              ; preds = %266, %40, %35, %21
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @output_symbolic_constraints(%struct._IO_FILE* %0, %struct.PLA_t* %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca %struct.PLA_t*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  store %struct.PLA_t* %1, %struct.PLA_t** %6, align 8
  store i32 %2, i32* %7, align 4
  %17 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %18 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %19 = sub nsw i32 %17, %18
  %20 = icmp sle i32 %19, 1
  br i1 %20, label %21, label %22

21:                                               ; preds = %3
  store i32 0, i32* %4, align 4
  br label %406

22:                                               ; preds = %3
  %23 = load %struct.PLA_t*, %struct.PLA_t** %6, align 8
  %24 = call i32 @makeup_labels(%struct.PLA_t* %23)
  %25 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %25, i32* %12, align 4
  br label %26

26:                                               ; preds = %403, %22
  %27 = load i32, i32* %12, align 4
  %28 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %29 = sub nsw i32 %28, 1
  %30 = icmp slt i32 %27, %29
  br i1 %30, label %31, label %406

31:                                               ; preds = %26
  %32 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %33 = load i32, i32* %12, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %32, i64 %34
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %13, align 4
  %37 = load i32, i32* %13, align 4
  %38 = sext i32 %37 to i64
  %39 = mul i64 4, %38
  %40 = call noalias i8* @malloc(i64 %39) #7
  %41 = bitcast i8* %40 to i32*
  store i32* %41, i32** %14, align 8
  store i32 0, i32* %9, align 4
  br label %42

42:                                               ; preds = %58, %31
  %43 = load i32, i32* %9, align 4
  %44 = load i32, i32* %13, align 4
  %45 = icmp slt i32 %43, %44
  br i1 %45, label %46, label %61

46:                                               ; preds = %42
  %47 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %48 = load i32, i32* %12, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, i32* %47, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = load i32, i32* %9, align 4
  %53 = add nsw i32 %51, %52
  %54 = load i32*, i32** %14, align 8
  %55 = load i32, i32* %9, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i32, i32* %54, i64 %56
  store i32 %53, i32* %57, align 4
  br label %58

58:                                               ; preds = %46
  %59 = load i32, i32* %9, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %9, align 4
  br label %42

61:                                               ; preds = %42
  %62 = load %struct.PLA_t*, %struct.PLA_t** %6, align 8
  %63 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %62, i32 0, i32 0
  %64 = load %struct.set_family*, %struct.set_family** %63, align 8
  %65 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %64)
  %66 = load i32*, i32** %14, align 8
  %67 = load i32, i32* %13, align 4
  %68 = call %struct.set_family* (%struct.set_family*, i32*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*, i32)* @sf_permute to %struct.set_family* (%struct.set_family*, i32*, i32, ...)*)(%struct.set_family* %65, i32* %66, i32 %67)
  store %struct.set_family* %68, %struct.set_family** %8, align 8
  %69 = load i32*, i32** %14, align 8
  %70 = icmp ne i32* %69, null
  br i1 %70, label %71, label %74

71:                                               ; preds = %61
  %72 = load i32*, i32** %14, align 8
  %73 = bitcast i32* %72 to i8*
  call void @free(i8* %73) #7
  store i32* null, i32** %14, align 8
  br label %74

74:                                               ; preds = %71, %61
  store i32 0, i32* %16, align 4
  store i32 0, i32* %9, align 4
  br label %75

75:                                               ; preds = %108, %74
  %76 = load i32, i32* %9, align 4
  %77 = load %struct.set_family*, %struct.set_family** %8, align 8
  %78 = getelementptr inbounds %struct.set_family, %struct.set_family* %77, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %80 = icmp slt i32 %76, %79
  br i1 %80, label %81, label %111

81:                                               ; preds = %75
  %82 = load %struct.set_family*, %struct.set_family** %8, align 8
  %83 = getelementptr inbounds %struct.set_family, %struct.set_family* %82, i32 0, i32 5
  %84 = load i32*, i32** %83, align 8
  %85 = load %struct.set_family*, %struct.set_family** %8, align 8
  %86 = getelementptr inbounds %struct.set_family, %struct.set_family* %85, i32 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = load i32, i32* %9, align 4
  %89 = mul nsw i32 %87, %88
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i32, i32* %84, i64 %90
  %92 = call i32 (i32*, ...) bitcast (i32 (i32*)* @set_ord to i32 (i32*, ...)*)(i32* %91)
  store i32 %92, i32* %11, align 4
  %93 = load i32, i32* %11, align 4
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %101, label %95

95:                                               ; preds = %81
  %96 = load i32, i32* %11, align 4
  %97 = load %struct.set_family*, %struct.set_family** %8, align 8
  %98 = getelementptr inbounds %struct.set_family, %struct.set_family* %97, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %96, %99
  br i1 %100, label %101, label %107

101:                                              ; preds = %95, %81
  %102 = load %struct.set_family*, %struct.set_family** %8, align 8
  %103 = load i32, i32* %9, align 4
  %104 = add nsw i32 %103, -1
  store i32 %104, i32* %9, align 4
  call void (%struct.set_family*, i32, ...) bitcast (void (%struct.set_family*, i32)* @sf_delset to void (%struct.set_family*, i32, ...)*)(%struct.set_family* %102, i32 %103)
  %105 = load i32, i32* %16, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %16, align 4
  br label %107

107:                                              ; preds = %101, %95
  br label %108

108:                                              ; preds = %107
  %109 = load i32, i32* %9, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %9, align 4
  br label %75

111:                                              ; preds = %75
  %112 = load %struct.set_family*, %struct.set_family** %8, align 8
  %113 = getelementptr inbounds %struct.set_family, %struct.set_family* %112, i32 0, i32 3
  %114 = load i32, i32* %113, align 4
  %115 = sext i32 %114 to i64
  %116 = mul i64 4, %115
  %117 = call noalias i8* @malloc(i64 %116) #7
  %118 = bitcast i8* %117 to i32*
  store i32* %118, i32** %15, align 8
  store i32 0, i32* %9, align 4
  br label %119

119:                                              ; preds = %139, %111
  %120 = load i32, i32* %9, align 4
  %121 = load %struct.set_family*, %struct.set_family** %8, align 8
  %122 = getelementptr inbounds %struct.set_family, %struct.set_family* %121, i32 0, i32 3
  %123 = load i32, i32* %122, align 4
  %124 = icmp slt i32 %120, %123
  br i1 %124, label %125, label %142

125:                                              ; preds = %119
  %126 = load %struct.set_family*, %struct.set_family** %8, align 8
  %127 = getelementptr inbounds %struct.set_family, %struct.set_family* %126, i32 0, i32 5
  %128 = load i32*, i32** %127, align 8
  %129 = load %struct.set_family*, %struct.set_family** %8, align 8
  %130 = getelementptr inbounds %struct.set_family, %struct.set_family* %129, i32 0, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = load i32, i32* %9, align 4
  %133 = mul nsw i32 %131, %132
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i32, i32* %128, i64 %134
  %136 = getelementptr inbounds i32, i32* %135, i64 0
  %137 = load i32, i32* %136, align 4
  %138 = and i32 %137, -2049
  store i32 %138, i32* %136, align 4
  br label %139

139:                                              ; preds = %125
  %140 = load i32, i32* %9, align 4
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %9, align 4
  br label %119

142:                                              ; preds = %119
  store i32 0, i32* %9, align 4
  br label %143

143:                                              ; preds = %230, %142
  %144 = load i32, i32* %9, align 4
  %145 = load %struct.set_family*, %struct.set_family** %8, align 8
  %146 = getelementptr inbounds %struct.set_family, %struct.set_family* %145, i32 0, i32 3
  %147 = load i32, i32* %146, align 4
  %148 = icmp slt i32 %144, %147
  br i1 %148, label %149, label %233

149:                                              ; preds = %143
  %150 = load i32*, i32** %15, align 8
  %151 = load i32, i32* %9, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i32, i32* %150, i64 %152
  store i32 0, i32* %153, align 4
  %154 = load %struct.set_family*, %struct.set_family** %8, align 8
  %155 = getelementptr inbounds %struct.set_family, %struct.set_family* %154, i32 0, i32 5
  %156 = load i32*, i32** %155, align 8
  %157 = load %struct.set_family*, %struct.set_family** %8, align 8
  %158 = getelementptr inbounds %struct.set_family, %struct.set_family* %157, i32 0, i32 0
  %159 = load i32, i32* %158, align 8
  %160 = load i32, i32* %9, align 4
  %161 = mul nsw i32 %159, %160
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i32, i32* %156, i64 %162
  %164 = getelementptr inbounds i32, i32* %163, i64 0
  %165 = load i32, i32* %164, align 4
  %166 = and i32 %165, 2048
  %167 = icmp ne i32 %166, 0
  br i1 %167, label %229, label %168

168:                                              ; preds = %149
  %169 = load i32*, i32** %15, align 8
  %170 = load i32, i32* %9, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds i32, i32* %169, i64 %171
  store i32 1, i32* %172, align 4
  %173 = load i32, i32* %9, align 4
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* %10, align 4
  br label %175

175:                                              ; preds = %225, %168
  %176 = load i32, i32* %10, align 4
  %177 = load %struct.set_family*, %struct.set_family** %8, align 8
  %178 = getelementptr inbounds %struct.set_family, %struct.set_family* %177, i32 0, i32 3
  %179 = load i32, i32* %178, align 4
  %180 = icmp slt i32 %176, %179
  br i1 %180, label %181, label %228

181:                                              ; preds = %175
  %182 = load %struct.set_family*, %struct.set_family** %8, align 8
  %183 = getelementptr inbounds %struct.set_family, %struct.set_family* %182, i32 0, i32 5
  %184 = load i32*, i32** %183, align 8
  %185 = load %struct.set_family*, %struct.set_family** %8, align 8
  %186 = getelementptr inbounds %struct.set_family, %struct.set_family* %185, i32 0, i32 0
  %187 = load i32, i32* %186, align 8
  %188 = load i32, i32* %9, align 4
  %189 = mul nsw i32 %187, %188
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds i32, i32* %184, i64 %190
  %192 = load %struct.set_family*, %struct.set_family** %8, align 8
  %193 = getelementptr inbounds %struct.set_family, %struct.set_family* %192, i32 0, i32 5
  %194 = load i32*, i32** %193, align 8
  %195 = load %struct.set_family*, %struct.set_family** %8, align 8
  %196 = getelementptr inbounds %struct.set_family, %struct.set_family* %195, i32 0, i32 0
  %197 = load i32, i32* %196, align 8
  %198 = load i32, i32* %10, align 4
  %199 = mul nsw i32 %197, %198
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i32, i32* %194, i64 %200
  %202 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_equal to i32 (i32*, i32*, ...)*)(i32* %191, i32* %201)
  %203 = icmp ne i32 %202, 0
  br i1 %203, label %204, label %224

204:                                              ; preds = %181
  %205 = load i32*, i32** %15, align 8
  %206 = load i32, i32* %9, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds i32, i32* %205, i64 %207
  %209 = load i32, i32* %208, align 4
  %210 = add nsw i32 %209, 1
  store i32 %210, i32* %208, align 4
  %211 = load %struct.set_family*, %struct.set_family** %8, align 8
  %212 = getelementptr inbounds %struct.set_family, %struct.set_family* %211, i32 0, i32 5
  %213 = load i32*, i32** %212, align 8
  %214 = load %struct.set_family*, %struct.set_family** %8, align 8
  %215 = getelementptr inbounds %struct.set_family, %struct.set_family* %214, i32 0, i32 0
  %216 = load i32, i32* %215, align 8
  %217 = load i32, i32* %10, align 4
  %218 = mul nsw i32 %216, %217
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds i32, i32* %213, i64 %219
  %221 = getelementptr inbounds i32, i32* %220, i64 0
  %222 = load i32, i32* %221, align 4
  %223 = or i32 %222, 2048
  store i32 %223, i32* %221, align 4
  br label %224

224:                                              ; preds = %204, %181
  br label %225

225:                                              ; preds = %224
  %226 = load i32, i32* %10, align 4
  %227 = add nsw i32 %226, 1
  store i32 %227, i32* %10, align 4
  br label %175

228:                                              ; preds = %175
  br label %229

229:                                              ; preds = %228, %149
  br label %230

230:                                              ; preds = %229
  %231 = load i32, i32* %9, align 4
  %232 = add nsw i32 %231, 1
  store i32 %232, i32* %9, align 4
  br label %143

233:                                              ; preds = %143
  %234 = load i32, i32* %7, align 4
  %235 = icmp ne i32 %234, 0
  br i1 %235, label %315, label %236

236:                                              ; preds = %233
  %237 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %238 = load i32, i32* %12, align 4
  %239 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %237, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.44.127, i64 0, i64 0), i32 %238)
  %240 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %241 = load i32, i32* %16, align 4
  %242 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %240, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.45.128, i64 0, i64 0), i32 %241)
  %243 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %244 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %245 = load i32, i32* %12, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i32, i32* %244, i64 %246
  %248 = load i32, i32* %247, align 4
  %249 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %243, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46.129, i64 0, i64 0), i32 %248)
  store i32 0, i32* %9, align 4
  br label %250

250:                                              ; preds = %311, %236
  %251 = load i32, i32* %9, align 4
  %252 = load %struct.set_family*, %struct.set_family** %8, align 8
  %253 = getelementptr inbounds %struct.set_family, %struct.set_family* %252, i32 0, i32 3
  %254 = load i32, i32* %253, align 4
  %255 = icmp slt i32 %251, %254
  br i1 %255, label %256, label %314

256:                                              ; preds = %250
  %257 = load i32*, i32** %15, align 8
  %258 = load i32, i32* %9, align 4
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds i32, i32* %257, i64 %259
  %261 = load i32, i32* %260, align 4
  %262 = icmp sgt i32 %261, 0
  br i1 %262, label %263, label %310

263:                                              ; preds = %256
  %264 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %265 = load i32*, i32** %15, align 8
  %266 = load i32, i32* %9, align 4
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds i32, i32* %265, i64 %267
  %269 = load i32, i32* %268, align 4
  %270 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %264, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47.130, i64 0, i64 0), i32 %269)
  store i32 0, i32* %10, align 4
  br label %271

271:                                              ; preds = %304, %263
  %272 = load i32, i32* %10, align 4
  %273 = load %struct.set_family*, %struct.set_family** %8, align 8
  %274 = getelementptr inbounds %struct.set_family, %struct.set_family* %273, i32 0, i32 1
  %275 = load i32, i32* %274, align 4
  %276 = icmp slt i32 %272, %275
  br i1 %276, label %277, label %307

277:                                              ; preds = %271
  %278 = load %struct.set_family*, %struct.set_family** %8, align 8
  %279 = getelementptr inbounds %struct.set_family, %struct.set_family* %278, i32 0, i32 5
  %280 = load i32*, i32** %279, align 8
  %281 = load %struct.set_family*, %struct.set_family** %8, align 8
  %282 = getelementptr inbounds %struct.set_family, %struct.set_family* %281, i32 0, i32 0
  %283 = load i32, i32* %282, align 8
  %284 = load i32, i32* %9, align 4
  %285 = mul nsw i32 %283, %284
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds i32, i32* %280, i64 %286
  %288 = load i32, i32* %10, align 4
  %289 = ashr i32 %288, 5
  %290 = add nsw i32 %289, 1
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds i32, i32* %287, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = load i32, i32* %10, align 4
  %295 = and i32 %294, 31
  %296 = shl i32 1, %295
  %297 = and i32 %293, %296
  %298 = icmp ne i32 %297, 0
  br i1 %298, label %299, label %303

299:                                              ; preds = %277
  %300 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %301 = load i32, i32* %10, align 4
  %302 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %300, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.99, i64 0, i64 0), i32 %301)
  br label %303

303:                                              ; preds = %299, %277
  br label %304

304:                                              ; preds = %303
  %305 = load i32, i32* %10, align 4
  %306 = add nsw i32 %305, 1
  store i32 %306, i32* %10, align 4
  br label %271

307:                                              ; preds = %271
  %308 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %309 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %308, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.100, i64 0, i64 0))
  br label %310

310:                                              ; preds = %307, %256
  br label %311

311:                                              ; preds = %310
  %312 = load i32, i32* %9, align 4
  %313 = add nsw i32 %312, 1
  store i32 %313, i32* %9, align 4
  br label %250

314:                                              ; preds = %250
  br label %402

315:                                              ; preds = %233
  %316 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %317 = load i32, i32* %12, align 4
  %318 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %316, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.48.131, i64 0, i64 0), i32 %317)
  store i32 0, i32* %9, align 4
  br label %319

319:                                              ; preds = %392, %315
  %320 = load i32, i32* %9, align 4
  %321 = load %struct.set_family*, %struct.set_family** %8, align 8
  %322 = getelementptr inbounds %struct.set_family, %struct.set_family* %321, i32 0, i32 3
  %323 = load i32, i32* %322, align 4
  %324 = icmp slt i32 %320, %323
  br i1 %324, label %325, label %395

325:                                              ; preds = %319
  %326 = load i32*, i32** %15, align 8
  %327 = load i32, i32* %9, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds i32, i32* %326, i64 %328
  %330 = load i32, i32* %329, align 4
  %331 = icmp sgt i32 %330, 0
  br i1 %331, label %332, label %391

332:                                              ; preds = %325
  %333 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %334 = load i32*, i32** %15, align 8
  %335 = load i32, i32* %9, align 4
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds i32, i32* %334, i64 %336
  %338 = load i32, i32* %337, align 4
  %339 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %333, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49.132, i64 0, i64 0), i32 %338)
  store i32 0, i32* %10, align 4
  br label %340

340:                                              ; preds = %385, %332
  %341 = load i32, i32* %10, align 4
  %342 = load %struct.set_family*, %struct.set_family** %8, align 8
  %343 = getelementptr inbounds %struct.set_family, %struct.set_family* %342, i32 0, i32 1
  %344 = load i32, i32* %343, align 4
  %345 = icmp slt i32 %341, %344
  br i1 %345, label %346, label %388

346:                                              ; preds = %340
  %347 = load %struct.set_family*, %struct.set_family** %8, align 8
  %348 = getelementptr inbounds %struct.set_family, %struct.set_family* %347, i32 0, i32 5
  %349 = load i32*, i32** %348, align 8
  %350 = load %struct.set_family*, %struct.set_family** %8, align 8
  %351 = getelementptr inbounds %struct.set_family, %struct.set_family* %350, i32 0, i32 0
  %352 = load i32, i32* %351, align 8
  %353 = load i32, i32* %9, align 4
  %354 = mul nsw i32 %352, %353
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds i32, i32* %349, i64 %355
  %357 = load i32, i32* %10, align 4
  %358 = ashr i32 %357, 5
  %359 = add nsw i32 %358, 1
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds i32, i32* %356, i64 %360
  %362 = load i32, i32* %361, align 4
  %363 = load i32, i32* %10, align 4
  %364 = and i32 %363, 31
  %365 = shl i32 1, %364
  %366 = and i32 %362, %365
  %367 = icmp ne i32 %366, 0
  br i1 %367, label %368, label %384

368:                                              ; preds = %346
  %369 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %370 = load %struct.PLA_t*, %struct.PLA_t** %6, align 8
  %371 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %370, i32 0, i32 7
  %372 = load i8**, i8*** %371, align 8
  %373 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %374 = load i32, i32* %12, align 4
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds i32, i32* %373, i64 %375
  %377 = load i32, i32* %376, align 4
  %378 = load i32, i32* %10, align 4
  %379 = add nsw i32 %377, %378
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds i8*, i8** %372, i64 %380
  %382 = load i8*, i8** %381, align 8
  %383 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %369, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.102, i64 0, i64 0), i8* %382)
  br label %384

384:                                              ; preds = %368, %346
  br label %385

385:                                              ; preds = %384
  %386 = load i32, i32* %10, align 4
  %387 = add nsw i32 %386, 1
  store i32 %387, i32* %10, align 4
  br label %340

388:                                              ; preds = %340
  %389 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %390 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %389, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50.133, i64 0, i64 0))
  br label %391

391:                                              ; preds = %388, %325
  br label %392

392:                                              ; preds = %391
  %393 = load i32, i32* %9, align 4
  %394 = add nsw i32 %393, 1
  store i32 %394, i32* %9, align 4
  br label %319

395:                                              ; preds = %319
  %396 = load i32*, i32** %15, align 8
  %397 = icmp ne i32* %396, null
  br i1 %397, label %398, label %401

398:                                              ; preds = %395
  %399 = load i32*, i32** %15, align 8
  %400 = bitcast i32* %399 to i8*
  call void @free(i8* %400) #7
  store i32* null, i32** %15, align 8
  br label %401

401:                                              ; preds = %398, %395
  br label %402

402:                                              ; preds = %401, %314
  br label %403

403:                                              ; preds = %402
  %404 = load i32, i32* %12, align 4
  %405 = add nsw i32 %404, 1
  store i32 %405, i32* %12, align 4
  br label %26

406:                                              ; preds = %26, %21
  %407 = load i32, i32* %4, align 4
  ret i32 %407
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @pls_output(%struct.PLA_t* %0) #0 {
  %2 = alloca %struct.PLA_t*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %2, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18.121, i64 0, i64 0))
  %6 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %7 = call i32 @makeup_labels(%struct.PLA_t* %6)
  %8 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @pls_label(%struct.PLA_t* %8, %struct._IO_FILE* %9)
  %10 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @pls_group(%struct.PLA_t* %10, %struct._IO_FILE* %11)
  %12 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %13 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %12, i32 0, i32 0
  %14 = load %struct.set_family*, %struct.set_family** %13, align 8
  %15 = getelementptr inbounds %struct.set_family, %struct.set_family* %14, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i64 0, i64 0), i32 %16)
  %18 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %19 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %18, i32 0, i32 0
  %20 = load %struct.set_family*, %struct.set_family** %19, align 8
  %21 = getelementptr inbounds %struct.set_family, %struct.set_family* %20, i32 0, i32 5
  %22 = load i32*, i32** %21, align 8
  store i32* %22, i32** %4, align 8
  %23 = load i32*, i32** %4, align 8
  %24 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %25 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %24, i32 0, i32 0
  %26 = load %struct.set_family*, %struct.set_family** %25, align 8
  %27 = getelementptr inbounds %struct.set_family, %struct.set_family* %26, i32 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %30 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %29, i32 0, i32 0
  %31 = load %struct.set_family*, %struct.set_family** %30, align 8
  %32 = getelementptr inbounds %struct.set_family, %struct.set_family* %31, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = mul nsw i32 %28, %33
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %23, i64 %35
  store i32* %36, i32** %3, align 8
  br label %37

37:                                               ; preds = %47, %1
  %38 = load i32*, i32** %4, align 8
  %39 = load i32*, i32** %3, align 8
  %40 = icmp ult i32* %38, %39
  br i1 %40, label %41, label %56

41:                                               ; preds = %37
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %43 = load i32*, i32** %4, align 8
  %44 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %45 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %44, i32 0, i32 5
  %46 = load i32*, i32** %45, align 8
  call void @print_expanded_cube(%struct._IO_FILE* %42, i32* %43, i32* %46)
  br label %47

47:                                               ; preds = %41
  %48 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %49 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %48, i32 0, i32 0
  %50 = load %struct.set_family*, %struct.set_family** %49, align 8
  %51 = getelementptr inbounds %struct.set_family, %struct.set_family* %50, i32 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = load i32*, i32** %4, align 8
  %54 = sext i32 %52 to i64
  %55 = getelementptr inbounds i32, i32* %53, i64 %54
  store i32* %55, i32** %4, align 8
  br label %37

56:                                               ; preds = %37
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.93, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @eqn_output(%struct.PLA_t* %0) #0 {
  %2 = alloca %struct.PLA_t*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.PLA_t* %0, %struct.PLA_t** %2, align 8
  %12 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25.107, i64 0, i64 0))
  br label %15

15:                                               ; preds = %14, %1
  %16 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 17), align 8
  %17 = icmp ne i32 %16, 1
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.26.108, i64 0, i64 0))
  br label %19

19:                                               ; preds = %18, %15
  %20 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %21 = call i32 @makeup_labels(%struct.PLA_t* %20)
  store i32 0, i32* %5, align 4
  br label %22

22:                                               ; preds = %212, %19
  %23 = load i32, i32* %5, align 4
  %24 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %25 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %24, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %23, %28
  br i1 %29, label %30, label %215

30:                                               ; preds = %22
  %31 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %32 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %31, i32 0, i32 7
  %33 = load i8**, i8*** %32, align 8
  %34 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %35 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %34, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %5, align 4
  %40 = add nsw i32 %38, %39
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8*, i8** %33, i64 %41
  %43 = load i8*, i8** %42, align 8
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27.109, i64 0, i64 0), i8* %43)
  %45 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %46 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %45, i32 0, i32 7
  %47 = load i8**, i8*** %46, align 8
  %48 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %49 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, i32* %48, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = load i32, i32* %5, align 4
  %54 = add nsw i32 %52, %53
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8*, i8** %47, i64 %55
  %57 = load i8*, i8** %56, align 8
  %58 = call i64 @strlen(i8* %57) #9
  %59 = add i64 %58, 3
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %7, align 4
  store i32 1, i32* %11, align 4
  %61 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %62 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %61, i32 0, i32 0
  %63 = load %struct.set_family*, %struct.set_family** %62, align 8
  %64 = getelementptr inbounds %struct.set_family, %struct.set_family* %63, i32 0, i32 5
  %65 = load i32*, i32** %64, align 8
  store i32* %65, i32** %3, align 8
  %66 = load i32*, i32** %3, align 8
  %67 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %68 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %67, i32 0, i32 0
  %69 = load %struct.set_family*, %struct.set_family** %68, align 8
  %70 = getelementptr inbounds %struct.set_family, %struct.set_family* %69, i32 0, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %73 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %72, i32 0, i32 0
  %74 = load %struct.set_family*, %struct.set_family** %73, align 8
  %75 = getelementptr inbounds %struct.set_family, %struct.set_family* %74, i32 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = mul nsw i32 %71, %76
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i32, i32* %66, i64 %78
  store i32* %79, i32** %4, align 8
  br label %80

80:                                               ; preds = %201, %30
  %81 = load i32*, i32** %3, align 8
  %82 = load i32*, i32** %4, align 8
  %83 = icmp ult i32* %81, %82
  br i1 %83, label %84, label %210

84:                                               ; preds = %80
  %85 = load i32*, i32** %3, align 8
  %86 = load i32, i32* %5, align 4
  %87 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %88 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i32, i32* %87, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = add nsw i32 %86, %91
  %93 = ashr i32 %92, 5
  %94 = add nsw i32 %93, 1
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i32, i32* %85, i64 %95
  %97 = load i32, i32* %96, align 4
  %98 = load i32, i32* %5, align 4
  %99 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %100 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, i32* %99, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = add nsw i32 %98, %103
  %105 = and i32 %104, 31
  %106 = shl i32 1, %105
  %107 = and i32 %97, %106
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %200

109:                                              ; preds = %84
  %110 = load i32, i32* %11, align 4
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %109
  %113 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28.110, i64 0, i64 0))
  %114 = load i32, i32* %7, align 4
  %115 = add nsw i32 %114, 1
  store i32 %115, i32* %7, align 4
  br label %120

116:                                              ; preds = %109
  %117 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29.111, i64 0, i64 0))
  %118 = load i32, i32* %7, align 4
  %119 = add nsw i32 %118, 4
  store i32 %119, i32* %7, align 4
  br label %120

120:                                              ; preds = %116, %112
  store i32 0, i32* %11, align 4
  store i32 1, i32* %10, align 4
  store i32 0, i32* %6, align 4
  br label %121

121:                                              ; preds = %193, %120
  %122 = load i32, i32* %6, align 4
  %123 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %124 = icmp slt i32 %122, %123
  br i1 %124, label %125, label %196

125:                                              ; preds = %121
  %126 = load i32*, i32** %3, align 8
  %127 = load i32, i32* %6, align 4
  %128 = mul nsw i32 2, %127
  %129 = ashr i32 %128, 5
  %130 = add nsw i32 %129, 1
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i32, i32* %126, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = load i32, i32* %6, align 4
  %135 = mul nsw i32 2, %134
  %136 = and i32 %135, 31
  %137 = lshr i32 %133, %136
  %138 = and i32 %137, 3
  store i32 %138, i32* %9, align 4
  %139 = icmp ne i32 %138, 3
  br i1 %139, label %140, label %192

140:                                              ; preds = %125
  %141 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %142 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %141, i32 0, i32 7
  %143 = load i8**, i8*** %142, align 8
  %144 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %145 = load i32, i32* %6, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i32, i32* %144, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = add nsw i32 %148, 1
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i8*, i8** %143, i64 %150
  %152 = load i8*, i8** %151, align 8
  %153 = call i64 @strlen(i8* %152) #9
  %154 = trunc i64 %153 to i32
  store i32 %154, i32* %8, align 4
  %155 = load i32, i32* %7, align 4
  %156 = load i32, i32* %8, align 4
  %157 = add nsw i32 %155, %156
  %158 = icmp sgt i32 %157, 72
  br i1 %158, label %159, label %161

159:                                              ; preds = %140
  %160 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30.112, i64 0, i64 0))
  store i32 4, i32* %7, align 4
  br label %161

161:                                              ; preds = %159, %140
  %162 = load i32, i32* %10, align 4
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %168, label %164

164:                                              ; preds = %161
  %165 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.113, i64 0, i64 0))
  %166 = load i32, i32* %7, align 4
  %167 = add nsw i32 %166, 1
  store i32 %167, i32* %7, align 4
  br label %168

168:                                              ; preds = %164, %161
  store i32 0, i32* %10, align 4
  %169 = load i32, i32* %9, align 4
  %170 = icmp eq i32 %169, 1
  br i1 %170, label %171, label %175

171:                                              ; preds = %168
  %172 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32.114, i64 0, i64 0))
  %173 = load i32, i32* %7, align 4
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* %7, align 4
  br label %175

175:                                              ; preds = %171, %168
  %176 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %177 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %176, i32 0, i32 7
  %178 = load i8**, i8*** %177, align 8
  %179 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %180 = load i32, i32* %6, align 4
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds i32, i32* %179, i64 %181
  %183 = load i32, i32* %182, align 4
  %184 = add nsw i32 %183, 1
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds i8*, i8** %178, i64 %185
  %187 = load i8*, i8** %186, align 8
  %188 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.115, i64 0, i64 0), i8* %187)
  %189 = load i32, i32* %8, align 4
  %190 = load i32, i32* %7, align 4
  %191 = add nsw i32 %190, %189
  store i32 %191, i32* %7, align 4
  br label %192

192:                                              ; preds = %175, %125
  br label %193

193:                                              ; preds = %192
  %194 = load i32, i32* %6, align 4
  %195 = add nsw i32 %194, 1
  store i32 %195, i32* %6, align 4
  br label %121

196:                                              ; preds = %121
  %197 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23.116, i64 0, i64 0))
  %198 = load i32, i32* %7, align 4
  %199 = add nsw i32 %198, 1
  store i32 %199, i32* %7, align 4
  br label %200

200:                                              ; preds = %196, %84
  br label %201

201:                                              ; preds = %200
  %202 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %203 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %202, i32 0, i32 0
  %204 = load %struct.set_family*, %struct.set_family** %203, align 8
  %205 = getelementptr inbounds %struct.set_family, %struct.set_family* %204, i32 0, i32 0
  %206 = load i32, i32* %205, align 8
  %207 = load i32*, i32** %3, align 8
  %208 = sext i32 %206 to i64
  %209 = getelementptr inbounds i32, i32* %207, i64 %208
  store i32* %209, i32** %3, align 8
  br label %80

210:                                              ; preds = %80
  %211 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33.117, i64 0, i64 0))
  br label %212

212:                                              ; preds = %210
  %213 = load i32, i32* %5, align 4
  %214 = add nsw i32 %213, 1
  store i32 %214, i32* %5, align 4
  br label %22

215:                                              ; preds = %22
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @kiss_output(%struct._IO_FILE* %0, %struct.PLA_t* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct.PLA_t*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store %struct.PLA_t* %1, %struct.PLA_t** %5, align 8
  %8 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %9 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %8, i32 0, i32 0
  %10 = load %struct.set_family*, %struct.set_family** %9, align 8
  %11 = getelementptr inbounds %struct.set_family, %struct.set_family* %10, i32 0, i32 5
  %12 = load i32*, i32** %11, align 8
  store i32* %12, i32** %7, align 8
  %13 = load i32*, i32** %7, align 8
  %14 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %15 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %14, i32 0, i32 0
  %16 = load %struct.set_family*, %struct.set_family** %15, align 8
  %17 = getelementptr inbounds %struct.set_family, %struct.set_family* %16, i32 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %20 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %19, i32 0, i32 0
  %21 = load %struct.set_family*, %struct.set_family** %20, align 8
  %22 = getelementptr inbounds %struct.set_family, %struct.set_family* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = mul nsw i32 %18, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %13, i64 %25
  store i32* %26, i32** %6, align 8
  br label %27

27:                                               ; preds = %36, %2
  %28 = load i32*, i32** %7, align 8
  %29 = load i32*, i32** %6, align 8
  %30 = icmp ult i32* %28, %29
  br i1 %30, label %31, label %45

31:                                               ; preds = %27
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %33 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %34 = load i32*, i32** %7, align 8
  %35 = call i32 @kiss_print_cube(%struct._IO_FILE* %32, %struct.PLA_t* %33, i32* %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.90, i64 0, i64 0))
  br label %36

36:                                               ; preds = %31
  %37 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %38 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %37, i32 0, i32 0
  %39 = load %struct.set_family*, %struct.set_family** %38, align 8
  %40 = getelementptr inbounds %struct.set_family, %struct.set_family* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = load i32*, i32** %7, align 8
  %43 = sext i32 %41 to i64
  %44 = getelementptr inbounds i32, i32* %42, i64 %43
  store i32* %44, i32** %7, align 8
  br label %27

45:                                               ; preds = %27
  %46 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %47 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %46, i32 0, i32 1
  %48 = load %struct.set_family*, %struct.set_family** %47, align 8
  %49 = getelementptr inbounds %struct.set_family, %struct.set_family* %48, i32 0, i32 5
  %50 = load i32*, i32** %49, align 8
  store i32* %50, i32** %7, align 8
  %51 = load i32*, i32** %7, align 8
  %52 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %53 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %52, i32 0, i32 1
  %54 = load %struct.set_family*, %struct.set_family** %53, align 8
  %55 = getelementptr inbounds %struct.set_family, %struct.set_family* %54, i32 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %58 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %57, i32 0, i32 1
  %59 = load %struct.set_family*, %struct.set_family** %58, align 8
  %60 = getelementptr inbounds %struct.set_family, %struct.set_family* %59, i32 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = mul nsw i32 %56, %61
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %51, i64 %63
  store i32* %64, i32** %6, align 8
  br label %65

65:                                               ; preds = %74, %45
  %66 = load i32*, i32** %7, align 8
  %67 = load i32*, i32** %6, align 8
  %68 = icmp ult i32* %66, %67
  br i1 %68, label %69, label %83

69:                                               ; preds = %65
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %71 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %72 = load i32*, i32** %7, align 8
  %73 = call i32 @kiss_print_cube(%struct._IO_FILE* %70, %struct.PLA_t* %71, i32* %72, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.91, i64 0, i64 0))
  br label %74

74:                                               ; preds = %69
  %75 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %76 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %75, i32 0, i32 1
  %77 = load %struct.set_family*, %struct.set_family** %76, align 8
  %78 = getelementptr inbounds %struct.set_family, %struct.set_family* %77, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = load i32*, i32** %7, align 8
  %81 = sext i32 %79 to i64
  %82 = getelementptr inbounds i32, i32* %80, i64 %81
  store i32* %82, i32** %7, align 8
  br label %65

83:                                               ; preds = %65
  %84 = load i32, i32* %3, align 4
  ret i32 %84
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @fpr_header(%struct._IO_FILE* %0, %struct.PLA_t* %1, i32 %2) #0 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct.PLA_t*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store %struct.PLA_t* %1, %struct.PLA_t** %5, align 8
  store i32 %2, i32* %6, align 4
  %11 = load i32, i32* %6, align 4
  %12 = icmp ne i32 %11, 1
  br i1 %12, label %13, label %39

13:                                               ; preds = %3
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.95, i64 0, i64 0))
  %16 = load i32, i32* %6, align 4
  %17 = and i32 %16, 1
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %21 = call i32 @putc(i32 102, %struct._IO_FILE* %20)
  br label %22

22:                                               ; preds = %19, %13
  %23 = load i32, i32* %6, align 4
  %24 = and i32 %23, 2
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %22
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %28 = call i32 @putc(i32 100, %struct._IO_FILE* %27)
  br label %29

29:                                               ; preds = %26, %22
  %30 = load i32, i32* %6, align 4
  %31 = and i32 %30, 4
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %29
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %35 = call i32 @putc(i32 114, %struct._IO_FILE* %34)
  br label %36

36:                                               ; preds = %33, %29
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %38 = call i32 @putc(i32 10, %struct._IO_FILE* %37)
  br label %39

39:                                               ; preds = %36, %3
  %40 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 17), align 8
  %41 = icmp sle i32 %40, 1
  br i1 %41, label %42, label %57

42:                                               ; preds = %39
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %44 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.96, i64 0, i64 0), i32 %44)
  %46 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %47 = icmp ne i32 %46, -1
  br i1 %47, label %48, label %56

48:                                               ; preds = %42
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %50 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %51 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, i32* %50, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.97, i64 0, i64 0), i32 %54)
  br label %56

56:                                               ; preds = %48, %42
  br label %81

57:                                               ; preds = %39
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %59 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %60 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.98, i64 0, i64 0), i32 %59, i32 %60)
  %62 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %62, i32* %8, align 4
  br label %63

63:                                               ; preds = %75, %57
  %64 = load i32, i32* %8, align 4
  %65 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %66 = icmp slt i32 %64, %65
  br i1 %66, label %67, label %78

67:                                               ; preds = %63
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %69 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %70 = load i32, i32* %8, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i32, i32* %69, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.99, i64 0, i64 0), i32 %73)
  br label %75

75:                                               ; preds = %67
  %76 = load i32, i32* %8, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %8, align 4
  br label %63

78:                                               ; preds = %63
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.100, i64 0, i64 0))
  br label %81

81:                                               ; preds = %78, %56
  %82 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %83 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %82, i32 0, i32 7
  %84 = load i8**, i8*** %83, align 8
  %85 = icmp ne i8** %84, null
  br i1 %85, label %86, label %124

86:                                               ; preds = %81
  %87 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %88 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %87, i32 0, i32 7
  %89 = load i8**, i8*** %88, align 8
  %90 = getelementptr inbounds i8*, i8** %89, i64 1
  %91 = load i8*, i8** %90, align 8
  %92 = icmp ne i8* %91, null
  br i1 %92, label %93, label %124

93:                                               ; preds = %86
  %94 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %124

96:                                               ; preds = %93
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %98 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.101, i64 0, i64 0))
  store i32 0, i32* %8, align 4
  br label %99

99:                                               ; preds = %118, %96
  %100 = load i32, i32* %8, align 4
  %101 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %102 = icmp slt i32 %100, %101
  br i1 %102, label %103, label %121

103:                                              ; preds = %99
  %104 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %105 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %106 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %105, i32 0, i32 7
  %107 = load i8**, i8*** %106, align 8
  %108 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %109 = load i32, i32* %8, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i32, i32* %108, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = add nsw i32 %112, 1
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i8*, i8** %107, i64 %114
  %116 = load i8*, i8** %115, align 8
  %117 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %104, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.102, i64 0, i64 0), i8* %116)
  br label %118

118:                                              ; preds = %103
  %119 = load i32, i32* %8, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %8, align 4
  br label %99

121:                                              ; preds = %99
  %122 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %123 = call i32 @putc(i32 10, %struct._IO_FILE* %122)
  br label %124

124:                                              ; preds = %121, %93, %86, %81
  %125 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %126 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %125, i32 0, i32 7
  %127 = load i8**, i8*** %126, align 8
  %128 = icmp ne i8** %127, null
  br i1 %128, label %129, label %178

129:                                              ; preds = %124
  %130 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %131 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %130, i32 0, i32 7
  %132 = load i8**, i8*** %131, align 8
  %133 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %134 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i32, i32* %133, i64 %135
  %137 = load i32, i32* %136, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i8*, i8** %132, i64 %138
  %140 = load i8*, i8** %139, align 8
  %141 = icmp ne i8* %140, null
  br i1 %141, label %142, label %178

142:                                              ; preds = %129
  %143 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %144 = icmp ne i32 %143, -1
  br i1 %144, label %145, label %178

145:                                              ; preds = %142
  %146 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %147 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %146, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.103, i64 0, i64 0))
  store i32 0, i32* %7, align 4
  br label %148

148:                                              ; preds = %172, %145
  %149 = load i32, i32* %7, align 4
  %150 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %151 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i32, i32* %150, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = icmp slt i32 %149, %154
  br i1 %155, label %156, label %175

156:                                              ; preds = %148
  %157 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %158 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %159 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %158, i32 0, i32 7
  %160 = load i8**, i8*** %159, align 8
  %161 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %162 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i32, i32* %161, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = load i32, i32* %7, align 4
  %167 = add nsw i32 %165, %166
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i8*, i8** %160, i64 %168
  %170 = load i8*, i8** %169, align 8
  %171 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %157, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.102, i64 0, i64 0), i8* %170)
  br label %172

172:                                              ; preds = %156
  %173 = load i32, i32* %7, align 4
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* %7, align 4
  br label %148

175:                                              ; preds = %148
  %176 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %177 = call i32 @putc(i32 10, %struct._IO_FILE* %176)
  br label %178

178:                                              ; preds = %175, %142, %129, %124
  %179 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %179, i32* %8, align 4
  br label %180

180:                                              ; preds = %235, %178
  %181 = load i32, i32* %8, align 4
  %182 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %183 = sub nsw i32 %182, 1
  %184 = icmp slt i32 %181, %183
  br i1 %184, label %185, label %238

185:                                              ; preds = %180
  %186 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %187 = load i32, i32* %8, align 4
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds i32, i32* %186, i64 %188
  %190 = load i32, i32* %189, align 4
  store i32 %190, i32* %9, align 4
  %191 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %192 = load i32, i32* %8, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds i32, i32* %191, i64 %193
  %195 = load i32, i32* %194, align 4
  store i32 %195, i32* %10, align 4
  %196 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %197 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %196, i32 0, i32 7
  %198 = load i8**, i8*** %197, align 8
  %199 = icmp ne i8** %198, null
  br i1 %199, label %200, label %234

200:                                              ; preds = %185
  %201 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %202 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %201, i32 0, i32 7
  %203 = load i8**, i8*** %202, align 8
  %204 = load i32, i32* %9, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds i8*, i8** %203, i64 %205
  %207 = load i8*, i8** %206, align 8
  %208 = icmp ne i8* %207, null
  br i1 %208, label %209, label %234

209:                                              ; preds = %200
  %210 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %211 = load i32, i32* %8, align 4
  %212 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %210, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16.104, i64 0, i64 0), i32 %211)
  %213 = load i32, i32* %9, align 4
  store i32 %213, i32* %7, align 4
  br label %214

214:                                              ; preds = %228, %209
  %215 = load i32, i32* %7, align 4
  %216 = load i32, i32* %10, align 4
  %217 = icmp sle i32 %215, %216
  br i1 %217, label %218, label %231

218:                                              ; preds = %214
  %219 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %220 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %221 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %220, i32 0, i32 7
  %222 = load i8**, i8*** %221, align 8
  %223 = load i32, i32* %7, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i8*, i8** %222, i64 %224
  %226 = load i8*, i8** %225, align 8
  %227 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %219, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.102, i64 0, i64 0), i8* %226)
  br label %228

228:                                              ; preds = %218
  %229 = load i32, i32* %7, align 4
  %230 = add nsw i32 %229, 1
  store i32 %230, i32* %7, align 4
  br label %214

231:                                              ; preds = %214
  %232 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %233 = call i32 @putc(i32 10, %struct._IO_FILE* %232)
  br label %234

234:                                              ; preds = %231, %200, %185
  br label %235

235:                                              ; preds = %234
  %236 = load i32, i32* %8, align 4
  %237 = add nsw i32 %236, 1
  store i32 %237, i32* %8, align 4
  br label %180

238:                                              ; preds = %180
  %239 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %240 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %239, i32 0, i32 5
  %241 = load i32*, i32** %240, align 8
  %242 = icmp ne i32* %241, null
  br i1 %242, label %243, label %286

243:                                              ; preds = %238
  %244 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %245 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i32, i32* %244, i64 %246
  %248 = load i32, i32* %247, align 4
  store i32 %248, i32* %9, align 4
  %249 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %250 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds i32, i32* %249, i64 %251
  %253 = load i32, i32* %252, align 4
  store i32 %253, i32* %10, align 4
  %254 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %255 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %254, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17.105, i64 0, i64 0))
  %256 = load i32, i32* %9, align 4
  store i32 %256, i32* %7, align 4
  br label %257

257:                                              ; preds = %280, %243
  %258 = load i32, i32* %7, align 4
  %259 = load i32, i32* %10, align 4
  %260 = icmp sle i32 %258, %259
  br i1 %260, label %261, label %283

261:                                              ; preds = %257
  %262 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %263 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %262, i32 0, i32 5
  %264 = load i32*, i32** %263, align 8
  %265 = load i32, i32* %7, align 4
  %266 = ashr i32 %265, 5
  %267 = add nsw i32 %266, 1
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds i32, i32* %264, i64 %268
  %270 = load i32, i32* %269, align 4
  %271 = load i32, i32* %7, align 4
  %272 = and i32 %271, 31
  %273 = shl i32 1, %272
  %274 = and i32 %270, %273
  %275 = icmp ne i32 %274, 0
  %276 = zext i1 %275 to i64
  %277 = select i1 %275, i32 49, i32 48
  %278 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %279 = call i32 @putc(i32 %277, %struct._IO_FILE* %278)
  br label %280

280:                                              ; preds = %261
  %281 = load i32, i32* %7, align 4
  %282 = add nsw i32 %281, 1
  store i32 %282, i32* %7, align 4
  br label %257

283:                                              ; preds = %257
  %284 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %285 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %284, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.100, i64 0, i64 0))
  br label %286

286:                                              ; preds = %283, %238
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @print_cube(%struct._IO_FILE* %0, i32* %1, i8* %2) #0 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store i32* %1, i32** %5, align 8
  store i8* %2, i8** %6, align 8
  store i32 0, i32* %8, align 4
  br label %11

11:                                               ; preds = %36, %3
  %12 = load i32, i32* %8, align 4
  %13 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %14 = icmp slt i32 %12, %13
  br i1 %14, label %15, label %39

15:                                               ; preds = %11
  %16 = load i32*, i32** %5, align 8
  %17 = load i32, i32* %8, align 4
  %18 = mul nsw i32 2, %17
  %19 = ashr i32 %18, 5
  %20 = add nsw i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %16, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %8, align 4
  %25 = mul nsw i32 2, %24
  %26 = and i32 %25, 31
  %27 = lshr i32 %23, %26
  %28 = and i32 %27, 3
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.34.94, i64 0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  store i32 %32, i32* %9, align 4
  %33 = load i32, i32* %9, align 4
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %35 = call i32 @putc(i32 %33, %struct._IO_FILE* %34)
  br label %36

36:                                               ; preds = %15
  %37 = load i32, i32* %8, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %8, align 4
  br label %11

39:                                               ; preds = %11
  %40 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %40, i32* %8, align 4
  br label %41

41:                                               ; preds = %87, %39
  %42 = load i32, i32* %8, align 4
  %43 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %44 = sub nsw i32 %43, 1
  %45 = icmp slt i32 %42, %44
  br i1 %45, label %46, label %90

46:                                               ; preds = %41
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %48 = call i32 @putc(i32 32, %struct._IO_FILE* %47)
  %49 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %50 = load i32, i32* %8, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, i32* %49, i64 %51
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %7, align 4
  br label %54

54:                                               ; preds = %83, %46
  %55 = load i32, i32* %7, align 4
  %56 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %57 = load i32, i32* %8, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %56, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = icmp sle i32 %55, %60
  br i1 %61, label %62, label %86

62:                                               ; preds = %54
  %63 = load i32*, i32** %5, align 8
  %64 = load i32, i32* %7, align 4
  %65 = ashr i32 %64, 5
  %66 = add nsw i32 %65, 1
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %63, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = load i32, i32* %7, align 4
  %71 = and i32 %70, 31
  %72 = shl i32 1, %71
  %73 = and i32 %69, %72
  %74 = icmp ne i32 %73, 0
  %75 = zext i1 %74 to i32
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.1.88, i64 0, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  store i32 %79, i32* %9, align 4
  %80 = load i32, i32* %9, align 4
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %82 = call i32 @putc(i32 %80, %struct._IO_FILE* %81)
  br label %83

83:                                               ; preds = %62
  %84 = load i32, i32* %7, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %7, align 4
  br label %54

86:                                               ; preds = %54
  br label %87

87:                                               ; preds = %86
  %88 = load i32, i32* %8, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %8, align 4
  br label %41

90:                                               ; preds = %41
  %91 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %92 = icmp ne i32 %91, -1
  br i1 %92, label %93, label %136

93:                                               ; preds = %90
  %94 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %95 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i32, i32* %94, i64 %96
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %10, align 4
  %99 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %100 = call i32 @putc(i32 32, %struct._IO_FILE* %99)
  %101 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %102 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %101, i64 %103
  %105 = load i32, i32* %104, align 4
  store i32 %105, i32* %7, align 4
  br label %106

106:                                              ; preds = %132, %93
  %107 = load i32, i32* %7, align 4
  %108 = load i32, i32* %10, align 4
  %109 = icmp sle i32 %107, %108
  br i1 %109, label %110, label %135

110:                                              ; preds = %106
  %111 = load i8*, i8** %6, align 8
  %112 = load i32*, i32** %5, align 8
  %113 = load i32, i32* %7, align 4
  %114 = ashr i32 %113, 5
  %115 = add nsw i32 %114, 1
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i32, i32* %112, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = load i32, i32* %7, align 4
  %120 = and i32 %119, 31
  %121 = shl i32 1, %120
  %122 = and i32 %118, %121
  %123 = icmp ne i32 %122, 0
  %124 = zext i1 %123 to i32
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %111, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = sext i8 %127 to i32
  store i32 %128, i32* %9, align 4
  %129 = load i32, i32* %9, align 4
  %130 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %131 = call i32 @putc(i32 %129, %struct._IO_FILE* %130)
  br label %132

132:                                              ; preds = %110
  %133 = load i32, i32* %7, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %7, align 4
  br label %106

135:                                              ; preds = %106
  br label %136

136:                                              ; preds = %135, %90
  %137 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %138 = call i32 @putc(i32 10, %struct._IO_FILE* %137)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @kiss_print_cube(%struct._IO_FILE* %0, %struct.PLA_t* %1, i32* %2, i8* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca %struct.PLA_t*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  store %struct.PLA_t* %1, %struct.PLA_t** %7, align 8
  store i32* %2, i32** %8, align 8
  store i8* %3, i8** %9, align 8
  store i32 0, i32* %11, align 4
  br label %14

14:                                               ; preds = %39, %4
  %15 = load i32, i32* %11, align 4
  %16 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %42

18:                                               ; preds = %14
  %19 = load i32*, i32** %8, align 8
  %20 = load i32, i32* %11, align 4
  %21 = mul nsw i32 2, %20
  %22 = ashr i32 %21, 5
  %23 = add nsw i32 %22, 1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %19, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = load i32, i32* %11, align 4
  %28 = mul nsw i32 2, %27
  %29 = and i32 %28, 31
  %30 = lshr i32 %26, %29
  %31 = and i32 %30, 3
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.34.94, i64 0, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  store i32 %35, i32* %13, align 4
  %36 = load i32, i32* %13, align 4
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %38 = call i32 @putc(i32 %36, %struct._IO_FILE* %37)
  br label %39

39:                                               ; preds = %18
  %40 = load i32, i32* %11, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %11, align 4
  br label %14

42:                                               ; preds = %14
  %43 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %43, i32* %11, align 4
  br label %44

44:                                               ; preds = %118, %42
  %45 = load i32, i32* %11, align 4
  %46 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %47 = sub nsw i32 %46, 1
  %48 = icmp slt i32 %45, %47
  br i1 %48, label %49, label %121

49:                                               ; preds = %44
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %51 = call i32 @putc(i32 32, %struct._IO_FILE* %50)
  %52 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %53 = load i32, i32* %11, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32*, i32** %52, i64 %54
  %56 = load i32*, i32** %55, align 8
  %57 = load i32*, i32** %8, align 8
  %58 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_implies to i32 (i32*, i32*, ...)*)(i32* %56, i32* %57)
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %49
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %62 = call i32 @putc(i32 45, %struct._IO_FILE* %61)
  br label %117

63:                                               ; preds = %49
  store i32 -1, i32* %12, align 4
  %64 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %65 = load i32, i32* %11, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i32, i32* %64, i64 %66
  %68 = load i32, i32* %67, align 4
  store i32 %68, i32* %10, align 4
  br label %69

69:                                               ; preds = %97, %63
  %70 = load i32, i32* %10, align 4
  %71 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %72 = load i32, i32* %11, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i32, i32* %71, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = icmp sle i32 %70, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %69
  %78 = load i32*, i32** %8, align 8
  %79 = load i32, i32* %10, align 4
  %80 = ashr i32 %79, 5
  %81 = add nsw i32 %80, 1
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i32, i32* %78, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = load i32, i32* %10, align 4
  %86 = and i32 %85, 31
  %87 = shl i32 1, %86
  %88 = and i32 %84, %87
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %77
  %91 = load i32, i32* %12, align 4
  %92 = icmp ne i32 %91, -1
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.43.106, i64 0, i64 0))
  br label %94

94:                                               ; preds = %93, %90
  %95 = load i32, i32* %10, align 4
  store i32 %95, i32* %12, align 4
  br label %96

96:                                               ; preds = %94, %77
  br label %97

97:                                               ; preds = %96
  %98 = load i32, i32* %10, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %10, align 4
  br label %69

100:                                              ; preds = %69
  %101 = load i32, i32* %12, align 4
  %102 = icmp eq i32 %101, -1
  br i1 %102, label %103, label %106

103:                                              ; preds = %100
  %104 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %105 = call i32 @putc(i32 126, %struct._IO_FILE* %104)
  br label %116

106:                                              ; preds = %100
  %107 = load %struct.PLA_t*, %struct.PLA_t** %7, align 8
  %108 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %107, i32 0, i32 7
  %109 = load i8**, i8*** %108, align 8
  %110 = load i32, i32* %12, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8*, i8** %109, i64 %111
  %113 = load i8*, i8** %112, align 8
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %115 = call i32 @fputs(i8* %113, %struct._IO_FILE* %114)
  br label %116

116:                                              ; preds = %106, %103
  br label %117

117:                                              ; preds = %116, %60
  br label %118

118:                                              ; preds = %117
  %119 = load i32, i32* %11, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %11, align 4
  br label %44

121:                                              ; preds = %44
  %122 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  store i32 %122, i32* %11, align 4
  %123 = icmp ne i32 %122, -1
  br i1 %123, label %124, label %166

124:                                              ; preds = %121
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %126 = call i32 @putc(i32 32, %struct._IO_FILE* %125)
  %127 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %128 = load i32, i32* %11, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32, i32* %127, i64 %129
  %131 = load i32, i32* %130, align 4
  store i32 %131, i32* %10, align 4
  br label %132

132:                                              ; preds = %162, %124
  %133 = load i32, i32* %10, align 4
  %134 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %135 = load i32, i32* %11, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i32, i32* %134, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = icmp sle i32 %133, %138
  br i1 %139, label %140, label %165

140:                                              ; preds = %132
  %141 = load i8*, i8** %9, align 8
  %142 = load i32*, i32** %8, align 8
  %143 = load i32, i32* %10, align 4
  %144 = ashr i32 %143, 5
  %145 = add nsw i32 %144, 1
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i32, i32* %142, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = load i32, i32* %10, align 4
  %150 = and i32 %149, 31
  %151 = shl i32 1, %150
  %152 = and i32 %148, %151
  %153 = icmp ne i32 %152, 0
  %154 = zext i1 %153 to i32
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i8, i8* %141, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = sext i8 %157 to i32
  store i32 %158, i32* %13, align 4
  %159 = load i32, i32* %13, align 4
  %160 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %161 = call i32 @putc(i32 %159, %struct._IO_FILE* %160)
  br label %162

162:                                              ; preds = %140
  %163 = load i32, i32* %10, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %10, align 4
  br label %132

165:                                              ; preds = %132
  br label %166

166:                                              ; preds = %165, %121
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %168 = call i32 @putc(i32 10, %struct._IO_FILE* %167)
  %169 = load i32, i32* %5, align 4
  ret i32 %169
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @makeup_labels(%struct.PLA_t* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  %7 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %8 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %7, i32 0, i32 7
  %9 = load i8**, i8*** %8, align 8
  %10 = icmp eq i8** %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %13 = call i32 (%struct.PLA_t*, ...) bitcast (i32 (%struct.PLA_t*)* @PLA_labels to i32 (%struct.PLA_t*, ...)*)(%struct.PLA_t* %12)
  br label %14

14:                                               ; preds = %11, %1
  store i32 0, i32* %4, align 4
  br label %15

15:                                               ; preds = %97, %14
  %16 = load i32, i32* %4, align 4
  %17 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %18 = icmp slt i32 %16, %17
  br i1 %18, label %19, label %100

19:                                               ; preds = %15
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %93, %19
  %21 = load i32, i32* %5, align 4
  %22 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %23 = load i32, i32* %4, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %22, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %21, %26
  br i1 %27, label %28, label %96

28:                                               ; preds = %20
  %29 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %30 = load i32, i32* %4, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %29, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = load i32, i32* %5, align 4
  %35 = add nsw i32 %33, %34
  store i32 %35, i32* %6, align 4
  %36 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %37 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %36, i32 0, i32 7
  %38 = load i8**, i8*** %37, align 8
  %39 = load i32, i32* %6, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8*, i8** %38, i64 %40
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %92

44:                                               ; preds = %28
  %45 = call noalias i8* @malloc(i64 15) #7
  %46 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %47 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %46, i32 0, i32 7
  %48 = load i8**, i8*** %47, align 8
  %49 = load i32, i32* %6, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8*, i8** %48, i64 %50
  store i8* %45, i8** %51, align 8
  %52 = load i32, i32* %4, align 4
  %53 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %54 = icmp slt i32 %52, %53
  br i1 %54, label %55, label %80

55:                                               ; preds = %44
  %56 = load i32, i32* %5, align 4
  %57 = srem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %69

59:                                               ; preds = %55
  %60 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %61 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %60, i32 0, i32 7
  %62 = load i8**, i8*** %61, align 8
  %63 = load i32, i32* %6, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8*, i8** %62, i64 %64
  %66 = load i8*, i8** %65, align 8
  %67 = load i32, i32* %4, align 4
  %68 = call i32 (i8*, i8*, ...) @sprintf(i8* %66, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40.118, i64 0, i64 0), i32 %67) #7
  br label %79

69:                                               ; preds = %55
  %70 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %71 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %70, i32 0, i32 7
  %72 = load i8**, i8*** %71, align 8
  %73 = load i32, i32* %6, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8*, i8** %72, i64 %74
  %76 = load i8*, i8** %75, align 8
  %77 = load i32, i32* %4, align 4
  %78 = call i32 (i8*, i8*, ...) @sprintf(i8* %76, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41.119, i64 0, i64 0), i32 %77) #7
  br label %79

79:                                               ; preds = %69, %59
  br label %91

80:                                               ; preds = %44
  %81 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %82 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %81, i32 0, i32 7
  %83 = load i8**, i8*** %82, align 8
  %84 = load i32, i32* %6, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8*, i8** %83, i64 %85
  %87 = load i8*, i8** %86, align 8
  %88 = load i32, i32* %4, align 4
  %89 = load i32, i32* %5, align 4
  %90 = call i32 (i8*, i8*, ...) @sprintf(i8* %87, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42.120, i64 0, i64 0), i32 %88, i32 %89) #7
  br label %91

91:                                               ; preds = %80, %79
  br label %92

92:                                               ; preds = %91, %28
  br label %93

93:                                               ; preds = %92
  %94 = load i32, i32* %5, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %5, align 4
  br label %20

96:                                               ; preds = %20
  br label %97

97:                                               ; preds = %96
  %98 = load i32, i32* %4, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %4, align 4
  br label %15

100:                                              ; preds = %15
  %101 = load i32, i32* %2, align 4
  ret i32 %101
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @pls_label(%struct.PLA_t* %0, %struct._IO_FILE* %1) #0 {
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24.126, i64 0, i64 0))
  store i32 6, i32* %7, align 4
  store i32 0, i32* %5, align 4
  br label %11

11:                                               ; preds = %68, %2
  %12 = load i32, i32* %5, align 4
  %13 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %14 = icmp slt i32 %12, %13
  br i1 %14, label %15, label %71

15:                                               ; preds = %11
  %16 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %17 = load i32, i32* %5, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %16, i64 %18
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %6, align 4
  br label %21

21:                                               ; preds = %64, %15
  %22 = load i32, i32* %6, align 4
  %23 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %24 = load i32, i32* %5, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %23, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = icmp sle i32 %22, %27
  br i1 %28, label %29, label %67

29:                                               ; preds = %21
  %30 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %31 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %30, i32 0, i32 7
  %32 = load i8**, i8*** %31, align 8
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8*, i8** %32, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i64 @strlen(i8* %36) #9
  %38 = trunc i64 %37 to i32
  store i32 %38, i32* %8, align 4
  %39 = load i32, i32* %7, align 4
  %40 = load i32, i32* %8, align 4
  %41 = add nsw i32 %39, %40
  %42 = icmp sgt i32 %41, 75
  br i1 %42, label %43, label %46

43:                                               ; preds = %29
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21.125, i64 0, i64 0))
  store i32 0, i32* %7, align 4
  br label %51

46:                                               ; preds = %29
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %48 = call i32 @putc(i32 32, %struct._IO_FILE* %47)
  %49 = load i32, i32* %7, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %7, align 4
  br label %51

51:                                               ; preds = %46, %43
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %53 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %54 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %53, i32 0, i32 7
  %55 = load i8**, i8*** %54, align 8
  %56 = load i32, i32* %6, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8*, i8** %55, i64 %57
  %59 = load i8*, i8** %58, align 8
  %60 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.115, i64 0, i64 0), i8* %59)
  %61 = load i32, i32* %8, align 4
  %62 = load i32, i32* %7, align 4
  %63 = add nsw i32 %62, %61
  store i32 %63, i32* %7, align 4
  br label %64

64:                                               ; preds = %51
  %65 = load i32, i32* %6, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %6, align 4
  br label %21

67:                                               ; preds = %21
  br label %68

68:                                               ; preds = %67
  %69 = load i32, i32* %5, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %5, align 4
  br label %11

71:                                               ; preds = %11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @pls_group(%struct.PLA_t* %0, %struct._IO_FILE* %1) #0 {
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19.123, i64 0, i64 0))
  store i32 6, i32* %7, align 4
  store i32 0, i32* %5, align 4
  br label %11

11:                                               ; preds = %81, %2
  %12 = load i32, i32* %5, align 4
  %13 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %14 = sub nsw i32 %13, 1
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %16, label %84

16:                                               ; preds = %11
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.124, i64 0, i64 0))
  %19 = load i32, i32* %7, align 4
  %20 = add nsw i32 %19, 2
  store i32 %20, i32* %7, align 4
  %21 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %22 = load i32, i32* %5, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i32, i32* %21, i64 %23
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %6, align 4
  br label %26

26:                                               ; preds = %73, %16
  %27 = load i32, i32* %6, align 4
  %28 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %29 = load i32, i32* %5, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i32, i32* %28, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = icmp sle i32 %27, %32
  br i1 %33, label %34, label %76

34:                                               ; preds = %26
  %35 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %36 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %35, i32 0, i32 7
  %37 = load i8**, i8*** %36, align 8
  %38 = load i32, i32* %6, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8*, i8** %37, i64 %39
  %41 = load i8*, i8** %40, align 8
  %42 = call i64 @strlen(i8* %41) #9
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %8, align 4
  %44 = load i32, i32* %7, align 4
  %45 = load i32, i32* %8, align 4
  %46 = add nsw i32 %44, %45
  %47 = icmp sgt i32 %46, 75
  br i1 %47, label %48, label %51

48:                                               ; preds = %34
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21.125, i64 0, i64 0))
  store i32 0, i32* %7, align 4
  br label %60

51:                                               ; preds = %34
  %52 = load i32, i32* %6, align 4
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %51
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %56 = call i32 @putc(i32 32, %struct._IO_FILE* %55)
  %57 = load i32, i32* %7, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %7, align 4
  br label %59

59:                                               ; preds = %54, %51
  br label %60

60:                                               ; preds = %59, %48
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %62 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %63 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %62, i32 0, i32 7
  %64 = load i8**, i8*** %63, align 8
  %65 = load i32, i32* %6, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8*, i8** %64, i64 %66
  %68 = load i8*, i8** %67, align 8
  %69 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.115, i64 0, i64 0), i8* %68)
  %70 = load i32, i32* %8, align 4
  %71 = load i32, i32* %7, align 4
  %72 = add nsw i32 %71, %70
  store i32 %72, i32* %7, align 4
  br label %73

73:                                               ; preds = %60
  %74 = load i32, i32* %6, align 4
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %6, align 4
  br label %26

76:                                               ; preds = %26
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %77, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23.116, i64 0, i64 0))
  %79 = load i32, i32* %7, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %7, align 4
  br label %81

81:                                               ; preds = %76
  %82 = load i32, i32* %5, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %5, align 4
  br label %11

84:                                               ; preds = %11
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %86 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %85, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.100, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @print_expanded_cube(%struct._IO_FILE* %0, i32* %1, i32* %2) #0 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i32 0, i32* %8, align 4
  br label %11

11:                                               ; preds = %54, %3
  %12 = load i32, i32* %8, align 4
  %13 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %14 = icmp slt i32 %12, %13
  br i1 %14, label %15, label %57

15:                                               ; preds = %11
  %16 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %17 = load i32, i32* %8, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %16, i64 %18
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %7, align 4
  br label %21

21:                                               ; preds = %50, %15
  %22 = load i32, i32* %7, align 4
  %23 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %24 = load i32, i32* %8, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %23, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = icmp sle i32 %22, %27
  br i1 %28, label %29, label %53

29:                                               ; preds = %21
  %30 = load i32*, i32** %5, align 8
  %31 = load i32, i32* %7, align 4
  %32 = ashr i32 %31, 5
  %33 = add nsw i32 %32, 1
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %30, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* %7, align 4
  %38 = and i32 %37, 31
  %39 = shl i32 1, %38
  %40 = and i32 %36, %39
  %41 = icmp ne i32 %40, 0
  %42 = zext i1 %41 to i32
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.3.90, i64 0, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = sext i8 %45 to i32
  store i32 %46, i32* %9, align 4
  %47 = load i32, i32* %9, align 4
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %49 = call i32 @putc(i32 %47, %struct._IO_FILE* %48)
  br label %50

50:                                               ; preds = %29
  %51 = load i32, i32* %7, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %7, align 4
  br label %21

53:                                               ; preds = %21
  br label %54

54:                                               ; preds = %53
  %55 = load i32, i32* %8, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %8, align 4
  br label %11

57:                                               ; preds = %11
  %58 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %58, i32* %8, align 4
  br label %59

59:                                               ; preds = %103, %57
  %60 = load i32, i32* %8, align 4
  %61 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %62 = sub nsw i32 %61, 1
  %63 = icmp slt i32 %60, %62
  br i1 %63, label %64, label %106

64:                                               ; preds = %59
  %65 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %66 = load i32, i32* %8, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %65, i64 %67
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %7, align 4
  br label %70

70:                                               ; preds = %99, %64
  %71 = load i32, i32* %7, align 4
  %72 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %73 = load i32, i32* %8, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, i32* %72, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = icmp sle i32 %71, %76
  br i1 %77, label %78, label %102

78:                                               ; preds = %70
  %79 = load i32*, i32** %5, align 8
  %80 = load i32, i32* %7, align 4
  %81 = ashr i32 %80, 5
  %82 = add nsw i32 %81, 1
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i32, i32* %79, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = load i32, i32* %7, align 4
  %87 = and i32 %86, 31
  %88 = shl i32 1, %87
  %89 = and i32 %85, %88
  %90 = icmp ne i32 %89, 0
  %91 = zext i1 %90 to i32
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.35.122, i64 0, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = sext i8 %94 to i32
  store i32 %95, i32* %9, align 4
  %96 = load i32, i32* %9, align 4
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %98 = call i32 @putc(i32 %96, %struct._IO_FILE* %97)
  br label %99

99:                                               ; preds = %78
  %100 = load i32, i32* %7, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %7, align 4
  br label %70

102:                                              ; preds = %70
  br label %103

103:                                              ; preds = %102
  %104 = load i32, i32* %8, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %8, align 4
  br label %59

106:                                              ; preds = %59
  %107 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %108 = icmp ne i32 %107, -1
  br i1 %108, label %109, label %171

109:                                              ; preds = %106
  %110 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %111 = sub nsw i32 %110, 1
  store i32 %111, i32* %8, align 4
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %113 = call i32 @putc(i32 32, %struct._IO_FILE* %112)
  %114 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %115 = load i32, i32* %8, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i32, i32* %114, i64 %116
  %118 = load i32, i32* %117, align 4
  store i32 %118, i32* %7, align 4
  br label %119

119:                                              ; preds = %167, %109
  %120 = load i32, i32* %7, align 4
  %121 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %122 = load i32, i32* %8, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i32, i32* %121, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = icmp sle i32 %120, %125
  br i1 %126, label %127, label %170

127:                                              ; preds = %119
  %128 = load i32*, i32** %6, align 8
  %129 = icmp eq i32* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %127
  %131 = load i32*, i32** %6, align 8
  %132 = load i32, i32* %7, align 4
  %133 = ashr i32 %132, 5
  %134 = add nsw i32 %133, 1
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i32, i32* %131, i64 %135
  %137 = load i32, i32* %136, align 4
  %138 = load i32, i32* %7, align 4
  %139 = and i32 %138, 31
  %140 = shl i32 1, %139
  %141 = and i32 %137, %140
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %130, %127
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.90, i64 0, i64 0), i8** %10, align 8
  br label %145

144:                                              ; preds = %130
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.92, i64 0, i64 0), i8** %10, align 8
  br label %145

145:                                              ; preds = %144, %143
  %146 = load i8*, i8** %10, align 8
  %147 = load i32*, i32** %5, align 8
  %148 = load i32, i32* %7, align 4
  %149 = ashr i32 %148, 5
  %150 = add nsw i32 %149, 1
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i32, i32* %147, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = load i32, i32* %7, align 4
  %155 = and i32 %154, 31
  %156 = shl i32 1, %155
  %157 = and i32 %153, %156
  %158 = icmp ne i32 %157, 0
  %159 = zext i1 %158 to i32
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i8, i8* %146, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = sext i8 %162 to i32
  store i32 %163, i32* %9, align 4
  %164 = load i32, i32* %9, align 4
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %166 = call i32 @putc(i32 %164, %struct._IO_FILE* %165)
  br label %167

167:                                              ; preds = %145
  %168 = load i32, i32* %7, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %7, align 4
  br label %119

170:                                              ; preds = %119
  br label %171

171:                                              ; preds = %170, %106
  %172 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %173 = call i32 @putc(i32 10, %struct._IO_FILE* %172)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @fmt_cube(i32* %0, i8* %1, i8* %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %8, align 4
  br label %11

11:                                               ; preds = %37, %3
  %12 = load i32, i32* %8, align 4
  %13 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %14 = icmp slt i32 %12, %13
  br i1 %14, label %15, label %40

15:                                               ; preds = %11
  %16 = load i32*, i32** %4, align 8
  %17 = load i32, i32* %8, align 4
  %18 = mul nsw i32 2, %17
  %19 = ashr i32 %18, 5
  %20 = add nsw i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %16, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %8, align 4
  %25 = mul nsw i32 2, %24
  %26 = and i32 %25, 31
  %27 = lshr i32 %23, %26
  %28 = and i32 %27, 3
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.34.94, i64 0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = load i8*, i8** %6, align 8
  %33 = load i32, i32* %10, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %10, align 4
  %35 = sext i32 %33 to i64
  %36 = getelementptr inbounds i8, i8* %32, i64 %35
  store i8 %31, i8* %36, align 1
  br label %37

37:                                               ; preds = %15
  %38 = load i32, i32* %8, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %8, align 4
  br label %11

40:                                               ; preds = %11
  %41 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %41, i32* %8, align 4
  br label %42

42:                                               ; preds = %92, %40
  %43 = load i32, i32* %8, align 4
  %44 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %45 = sub nsw i32 %44, 1
  %46 = icmp slt i32 %43, %45
  br i1 %46, label %47, label %95

47:                                               ; preds = %42
  %48 = load i8*, i8** %6, align 8
  %49 = load i32, i32* %10, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %10, align 4
  %51 = sext i32 %49 to i64
  %52 = getelementptr inbounds i8, i8* %48, i64 %51
  store i8 32, i8* %52, align 1
  %53 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %54 = load i32, i32* %8, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %53, i64 %55
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %7, align 4
  br label %58

58:                                               ; preds = %88, %47
  %59 = load i32, i32* %7, align 4
  %60 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %61 = load i32, i32* %8, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %60, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp sle i32 %59, %64
  br i1 %65, label %66, label %91

66:                                               ; preds = %58
  %67 = load i32*, i32** %4, align 8
  %68 = load i32, i32* %7, align 4
  %69 = ashr i32 %68, 5
  %70 = add nsw i32 %69, 1
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i32, i32* %67, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = load i32, i32* %7, align 4
  %75 = and i32 %74, 31
  %76 = shl i32 1, %75
  %77 = and i32 %73, %76
  %78 = icmp ne i32 %77, 0
  %79 = zext i1 %78 to i32
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.1.88, i64 0, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = load i8*, i8** %6, align 8
  %84 = load i32, i32* %10, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %10, align 4
  %86 = sext i32 %84 to i64
  %87 = getelementptr inbounds i8, i8* %83, i64 %86
  store i8 %82, i8* %87, align 1
  br label %88

88:                                               ; preds = %66
  %89 = load i32, i32* %7, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %7, align 4
  br label %58

91:                                               ; preds = %58
  br label %92

92:                                               ; preds = %91
  %93 = load i32, i32* %8, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %8, align 4
  br label %42

95:                                               ; preds = %42
  %96 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %97 = icmp ne i32 %96, -1
  br i1 %97, label %98, label %145

98:                                               ; preds = %95
  %99 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %100 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, i32* %99, i64 %101
  %103 = load i32, i32* %102, align 4
  store i32 %103, i32* %9, align 4
  %104 = load i8*, i8** %6, align 8
  %105 = load i32, i32* %10, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %10, align 4
  %107 = sext i32 %105 to i64
  %108 = getelementptr inbounds i8, i8* %104, i64 %107
  store i8 32, i8* %108, align 1
  %109 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %110 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i32, i32* %109, i64 %111
  %113 = load i32, i32* %112, align 4
  store i32 %113, i32* %7, align 4
  br label %114

114:                                              ; preds = %141, %98
  %115 = load i32, i32* %7, align 4
  %116 = load i32, i32* %9, align 4
  %117 = icmp sle i32 %115, %116
  br i1 %117, label %118, label %144

118:                                              ; preds = %114
  %119 = load i8*, i8** %5, align 8
  %120 = load i32*, i32** %4, align 8
  %121 = load i32, i32* %7, align 4
  %122 = ashr i32 %121, 5
  %123 = add nsw i32 %122, 1
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i32, i32* %120, i64 %124
  %126 = load i32, i32* %125, align 4
  %127 = load i32, i32* %7, align 4
  %128 = and i32 %127, 31
  %129 = shl i32 1, %128
  %130 = and i32 %126, %129
  %131 = icmp ne i32 %130, 0
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8, i8* %119, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = load i8*, i8** %6, align 8
  %137 = load i32, i32* %10, align 4
  %138 = add nsw i32 %137, 1
  store i32 %138, i32* %10, align 4
  %139 = sext i32 %137 to i64
  %140 = getelementptr inbounds i8, i8* %136, i64 %139
  store i8 %135, i8* %140, align 1
  br label %141

141:                                              ; preds = %118
  %142 = load i32, i32* %7, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %7, align 4
  br label %114

144:                                              ; preds = %114
  br label %145

145:                                              ; preds = %144, %95
  %146 = load i8*, i8** %6, align 8
  %147 = load i32, i32* %10, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* %146, i64 %148
  store i8 0, i8* %149, align 1
  %150 = load i8*, i8** %6, align 8
  ret i8* %150
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @pc1(i32* %0) #0 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i8* @fmt_cube(i32* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.88, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @pc1.s1, i64 0, i64 0))
  ret i8* %4
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @pc2(i32* %0) #0 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i8* @fmt_cube(i32* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.88, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @pc2.s2, i64 0, i64 0))
  ret i8* %4
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @debug_print(i32** %0, i8* %1, i32 %2) #0 {
  %4 = alloca i32**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32**, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  store i32** %0, i32*** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %11 = load i32**, i32*** %4, align 8
  %12 = getelementptr inbounds i32*, i32** %11, i64 1
  %13 = load i32*, i32** %12, align 8
  %14 = bitcast i32* %13 to i32**
  %15 = load i32**, i32*** %4, align 8
  %16 = ptrtoint i32** %14 to i64
  %17 = ptrtoint i32** %15 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 8
  %20 = sub nsw i64 %19, 3
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %10, align 4
  %22 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %23 = icmp sle i32 %22, 32
  br i1 %23, label %24, label %25

24:                                               ; preds = %3
  br label %31

25:                                               ; preds = %3
  %26 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %27 = sub nsw i32 %26, 1
  %28 = ashr i32 %27, 5
  %29 = add nsw i32 %28, 1
  %30 = add nsw i32 %29, 1
  br label %31

31:                                               ; preds = %25, %24
  %32 = phi i32 [ 2, %24 ], [ %30, %25 ]
  %33 = sext i32 %32 to i64
  %34 = mul i64 4, %33
  %35 = call noalias i8* @malloc(i64 %34) #7
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %38 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %36, i32 %37)
  store i32* %38, i32** %9, align 8
  %39 = load i32, i32* @verbose_debug, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %31
  %42 = load i32, i32* %6, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.100, i64 0, i64 0))
  br label %46

46:                                               ; preds = %44, %41, %31
  %47 = load i8*, i8** %5, align 8
  %48 = load i32, i32* %6, align 4
  %49 = load i32, i32* %10, align 4
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.36.140, i64 0, i64 0), i8* %47, i32 %48, i32 %49)
  %51 = load i32, i32* @verbose_debug, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %80

53:                                               ; preds = %46
  %54 = load i32**, i32*** %4, align 8
  %55 = getelementptr inbounds i32*, i32** %54, i64 0
  %56 = load i32*, i32** %55, align 8
  %57 = call i8* @pc1(i32* %56)
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37.141, i64 0, i64 0), i8* %57)
  %59 = load i32**, i32*** %4, align 8
  %60 = getelementptr inbounds i32*, i32** %59, i64 2
  store i32** %60, i32*** %7, align 8
  store i32 1, i32* %10, align 4
  br label %61

61:                                               ; preds = %76, %53
  %62 = load i32**, i32*** %7, align 8
  %63 = getelementptr inbounds i32*, i32** %62, i32 1
  store i32** %63, i32*** %7, align 8
  %64 = load i32*, i32** %62, align 8
  store i32* %64, i32** %8, align 8
  %65 = icmp ne i32* %64, null
  br i1 %65, label %66, label %79

66:                                               ; preds = %61
  %67 = load i32, i32* %10, align 4
  %68 = load i32*, i32** %9, align 8
  %69 = load i32*, i32** %8, align 8
  %70 = load i32**, i32*** %4, align 8
  %71 = getelementptr inbounds i32*, i32** %70, i64 0
  %72 = load i32*, i32** %71, align 8
  %73 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %68, i32* %69, i32* %72)
  %74 = call i8* @pc1(i32* %73)
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38.142, i64 0, i64 0), i32 %67, i8* %74)
  br label %76

76:                                               ; preds = %66
  %77 = load i32, i32* %10, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %10, align 4
  br label %61

79:                                               ; preds = %61
  br label %80

80:                                               ; preds = %79, %46
  %81 = load i32*, i32** %9, align 8
  %82 = icmp ne i32* %81, null
  br i1 %82, label %83, label %86

83:                                               ; preds = %80
  %84 = load i32*, i32** %9, align 8
  %85 = bitcast i32* %84 to i8*
  call void @free(i8* %85) #7
  store i32* null, i32** %9, align 8
  br label %86

86:                                               ; preds = %83, %80
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @debug1_print(%struct.set_family* %0, i8* %1, i32 %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  store i32 1, i32* %7, align 4
  %10 = load i32, i32* @verbose_debug, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %3
  %13 = load i32, i32* %6, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %12
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.100, i64 0, i64 0))
  br label %17

17:                                               ; preds = %15, %12, %3
  %18 = load i8*, i8** %5, align 8
  %19 = load i32, i32* %6, align 4
  %20 = load %struct.set_family*, %struct.set_family** %4, align 8
  %21 = getelementptr inbounds %struct.set_family, %struct.set_family* %20, i32 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.36.140, i64 0, i64 0), i8* %18, i32 %19, i32 %22)
  %24 = load i32, i32* @verbose_debug, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %58

26:                                               ; preds = %17
  %27 = load %struct.set_family*, %struct.set_family** %4, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 5
  %29 = load i32*, i32** %28, align 8
  store i32* %29, i32** %8, align 8
  %30 = load i32*, i32** %8, align 8
  %31 = load %struct.set_family*, %struct.set_family** %4, align 8
  %32 = getelementptr inbounds %struct.set_family, %struct.set_family* %31, i32 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = load %struct.set_family*, %struct.set_family** %4, align 8
  %35 = getelementptr inbounds %struct.set_family, %struct.set_family* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = mul nsw i32 %33, %36
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i32, i32* %30, i64 %38
  store i32* %39, i32** %9, align 8
  br label %40

40:                                               ; preds = %50, %26
  %41 = load i32*, i32** %8, align 8
  %42 = load i32*, i32** %9, align 8
  %43 = icmp ult i32* %41, %42
  br i1 %43, label %44, label %57

44:                                               ; preds = %40
  %45 = load i32, i32* %7, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %7, align 4
  %47 = load i32*, i32** %8, align 8
  %48 = call i8* @pc1(i32* %47)
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38.142, i64 0, i64 0), i32 %45, i8* %48)
  br label %50

50:                                               ; preds = %44
  %51 = load %struct.set_family*, %struct.set_family** %4, align 8
  %52 = getelementptr inbounds %struct.set_family, %struct.set_family* %51, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = load i32*, i32** %8, align 8
  %55 = sext i32 %53 to i64
  %56 = getelementptr inbounds i32, i32* %54, i64 %55
  store i32* %56, i32** %8, align 8
  br label %40

57:                                               ; preds = %40
  br label %58

58:                                               ; preds = %57, %17
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @cprint(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %5 = load %struct.set_family*, %struct.set_family** %2, align 8
  %6 = getelementptr inbounds %struct.set_family, %struct.set_family* %5, i32 0, i32 5
  %7 = load i32*, i32** %6, align 8
  store i32* %7, i32** %3, align 8
  %8 = load i32*, i32** %3, align 8
  %9 = load %struct.set_family*, %struct.set_family** %2, align 8
  %10 = getelementptr inbounds %struct.set_family, %struct.set_family* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = load %struct.set_family*, %struct.set_family** %2, align 8
  %13 = getelementptr inbounds %struct.set_family, %struct.set_family* %12, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = mul nsw i32 %11, %14
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i32, i32* %8, i64 %16
  store i32* %17, i32** %4, align 8
  br label %18

18:                                               ; preds = %26, %1
  %19 = load i32*, i32** %3, align 8
  %20 = load i32*, i32** %4, align 8
  %21 = icmp ult i32* %19, %20
  br i1 %21, label %22, label %33

22:                                               ; preds = %18
  %23 = load i32*, i32** %3, align 8
  %24 = call i8* @pc1(i32* %23)
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39.147, i64 0, i64 0), i8* %24)
  br label %26

26:                                               ; preds = %22
  %27 = load %struct.set_family*, %struct.set_family** %2, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = load i32*, i32** %3, align 8
  %31 = sext i32 %29 to i64
  %32 = getelementptr inbounds i32, i32* %30, i64 %31
  store i32* %32, i32** %3, align 8
  br label %18

33:                                               ; preds = %18
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sm_row_dominance(%struct.sm_matrix_struct* %0) #0 {
  %2 = alloca %struct.sm_matrix_struct*, align 8
  %3 = alloca %struct.sm_row_struct*, align 8
  %4 = alloca %struct.sm_row_struct*, align 8
  %5 = alloca %struct.sm_col_struct*, align 8
  %6 = alloca %struct.sm_col_struct*, align 8
  %7 = alloca %struct.sm_element_struct*, align 8
  %8 = alloca %struct.sm_element_struct*, align 8
  %9 = alloca i32, align 4
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %2, align 8
  %10 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %11 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %10, i32 0, i32 6
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %9, align 4
  %13 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %14 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %13, i32 0, i32 4
  %15 = load %struct.sm_row_struct*, %struct.sm_row_struct** %14, align 8
  store %struct.sm_row_struct* %15, %struct.sm_row_struct** %3, align 8
  br label %16

16:                                               ; preds = %173, %1
  %17 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %18 = icmp ne %struct.sm_row_struct* %17, null
  br i1 %18, label %19, label %177

19:                                               ; preds = %16
  %20 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %21 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %20, i32 0, i32 3
  %22 = load %struct.sm_element_struct*, %struct.sm_element_struct** %21, align 8
  %23 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp sge i32 %24, 0
  br i1 %25, label %26, label %48

26:                                               ; preds = %19
  %27 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %28 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %27, i32 0, i32 3
  %29 = load %struct.sm_element_struct*, %struct.sm_element_struct** %28, align 8
  %30 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %33 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %32, i32 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = icmp slt i32 %31, %34
  br i1 %35, label %36, label %48

36:                                               ; preds = %26
  %37 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %38 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %37, i32 0, i32 2
  %39 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %38, align 8
  %40 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %41 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %40, i32 0, i32 3
  %42 = load %struct.sm_element_struct*, %struct.sm_element_struct** %41, align 8
  %43 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %39, i64 %45
  %47 = load %struct.sm_col_struct*, %struct.sm_col_struct** %46, align 8
  br label %49

48:                                               ; preds = %26, %19
  br label %49

49:                                               ; preds = %48, %36
  %50 = phi %struct.sm_col_struct* [ %47, %36 ], [ null, %48 ]
  store %struct.sm_col_struct* %50, %struct.sm_col_struct** %6, align 8
  %51 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %52 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %51, i32 0, i32 3
  %53 = load %struct.sm_element_struct*, %struct.sm_element_struct** %52, align 8
  %54 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %53, i32 0, i32 4
  %55 = load %struct.sm_element_struct*, %struct.sm_element_struct** %54, align 8
  store %struct.sm_element_struct* %55, %struct.sm_element_struct** %7, align 8
  br label %56

56:                                               ; preds = %95, %49
  %57 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %58 = icmp ne %struct.sm_element_struct* %57, null
  br i1 %58, label %59, label %99

59:                                               ; preds = %56
  %60 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %61 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %60, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp sge i32 %62, 0
  br i1 %63, label %64, label %82

64:                                               ; preds = %59
  %65 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %66 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %65, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %69 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %68, i32 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = icmp slt i32 %67, %70
  br i1 %71, label %72, label %82

72:                                               ; preds = %64
  %73 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %74 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %73, i32 0, i32 2
  %75 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %74, align 8
  %76 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %77 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %76, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %75, i64 %79
  %81 = load %struct.sm_col_struct*, %struct.sm_col_struct** %80, align 8
  br label %83

82:                                               ; preds = %64, %59
  br label %83

83:                                               ; preds = %82, %72
  %84 = phi %struct.sm_col_struct* [ %81, %72 ], [ null, %82 ]
  store %struct.sm_col_struct* %84, %struct.sm_col_struct** %5, align 8
  %85 = load %struct.sm_col_struct*, %struct.sm_col_struct** %5, align 8
  %86 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %85, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %89 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %88, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp slt i32 %87, %90
  br i1 %91, label %92, label %94

92:                                               ; preds = %83
  %93 = load %struct.sm_col_struct*, %struct.sm_col_struct** %5, align 8
  store %struct.sm_col_struct* %93, %struct.sm_col_struct** %6, align 8
  br label %94

94:                                               ; preds = %92, %83
  br label %95

95:                                               ; preds = %94
  %96 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %97 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %96, i32 0, i32 4
  %98 = load %struct.sm_element_struct*, %struct.sm_element_struct** %97, align 8
  store %struct.sm_element_struct* %98, %struct.sm_element_struct** %7, align 8
  br label %56

99:                                               ; preds = %56
  %100 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %101 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %100, i32 0, i32 3
  %102 = load %struct.sm_element_struct*, %struct.sm_element_struct** %101, align 8
  store %struct.sm_element_struct* %102, %struct.sm_element_struct** %7, align 8
  br label %103

103:                                              ; preds = %170, %99
  %104 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %105 = icmp ne %struct.sm_element_struct* %104, null
  br i1 %105, label %106, label %172

106:                                              ; preds = %103
  %107 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %108 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %107, i32 0, i32 2
  %109 = load %struct.sm_element_struct*, %struct.sm_element_struct** %108, align 8
  store %struct.sm_element_struct* %109, %struct.sm_element_struct** %8, align 8
  %110 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %111 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %110, i32 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp sge i32 %112, 0
  br i1 %113, label %114, label %132

114:                                              ; preds = %106
  %115 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %116 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %115, i32 0, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %119 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %118, i32 0, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = icmp slt i32 %117, %120
  br i1 %121, label %122, label %132

122:                                              ; preds = %114
  %123 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %124 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %123, i32 0, i32 0
  %125 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %124, align 8
  %126 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %127 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %126, i32 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %125, i64 %129
  %131 = load %struct.sm_row_struct*, %struct.sm_row_struct** %130, align 8
  br label %133

132:                                              ; preds = %114, %106
  br label %133

133:                                              ; preds = %132, %122
  %134 = phi %struct.sm_row_struct* [ %131, %122 ], [ null, %132 ]
  store %struct.sm_row_struct* %134, %struct.sm_row_struct** %4, align 8
  %135 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %136 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %135, i32 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %139 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %138, i32 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = icmp sgt i32 %137, %140
  br i1 %141, label %158, label %142

142:                                              ; preds = %133
  %143 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %144 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %143, i32 0, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %147 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %146, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %145, %148
  br i1 %149, label %150, label %169

150:                                              ; preds = %142
  %151 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %152 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %151, i32 0, i32 0
  %153 = load i32, i32* %152, align 8
  %154 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %155 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %154, i32 0, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = icmp sgt i32 %153, %156
  br i1 %157, label %158, label %169

158:                                              ; preds = %150, %133
  %159 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %160 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %161 = call i32 (%struct.sm_row_struct*, %struct.sm_row_struct*, ...) bitcast (i32 (%struct.sm_row_struct*, %struct.sm_row_struct*)* @sm_row_contains to i32 (%struct.sm_row_struct*, %struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %159, %struct.sm_row_struct* %160)
  %162 = icmp ne i32 %161, 0
  br i1 %162, label %163, label %168

163:                                              ; preds = %158
  %164 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %165 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %166 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %165, i32 0, i32 0
  %167 = load i32, i32* %166, align 8
  call void (%struct.sm_matrix_struct*, i32, ...) bitcast (void (%struct.sm_matrix_struct*, i32)* @sm_delrow to void (%struct.sm_matrix_struct*, i32, ...)*)(%struct.sm_matrix_struct* %164, i32 %167)
  br label %168

168:                                              ; preds = %163, %158
  br label %169

169:                                              ; preds = %168, %150, %142
  br label %170

170:                                              ; preds = %169
  %171 = load %struct.sm_element_struct*, %struct.sm_element_struct** %8, align 8
  store %struct.sm_element_struct* %171, %struct.sm_element_struct** %7, align 8
  br label %103

172:                                              ; preds = %103
  br label %173

173:                                              ; preds = %172
  %174 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %175 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %174, i32 0, i32 5
  %176 = load %struct.sm_row_struct*, %struct.sm_row_struct** %175, align 8
  store %struct.sm_row_struct* %176, %struct.sm_row_struct** %3, align 8
  br label %16

177:                                              ; preds = %16
  %178 = load i32, i32* %9, align 4
  %179 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %180 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %179, i32 0, i32 6
  %181 = load i32, i32* %180, align 8
  %182 = sub nsw i32 %178, %181
  ret i32 %182
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sm_col_dominance(%struct.sm_matrix_struct* %0, i32* %1) #0 {
  %3 = alloca %struct.sm_matrix_struct*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca %struct.sm_row_struct*, align 8
  %6 = alloca %struct.sm_col_struct*, align 8
  %7 = alloca %struct.sm_col_struct*, align 8
  %8 = alloca %struct.sm_element_struct*, align 8
  %9 = alloca %struct.sm_row_struct*, align 8
  %10 = alloca %struct.sm_col_struct*, align 8
  %11 = alloca i32, align 4
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %3, align 8
  store i32* %1, i32** %4, align 8
  %12 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %13 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %12, i32 0, i32 9
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %11, align 4
  %15 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %16 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %15, i32 0, i32 7
  %17 = load %struct.sm_col_struct*, %struct.sm_col_struct** %16, align 8
  store %struct.sm_col_struct* %17, %struct.sm_col_struct** %6, align 8
  br label %18

18:                                               ; preds = %197, %2
  %19 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %20 = icmp ne %struct.sm_col_struct* %19, null
  br i1 %20, label %21, label %199

21:                                               ; preds = %18
  %22 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %23 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %22, i32 0, i32 5
  %24 = load %struct.sm_col_struct*, %struct.sm_col_struct** %23, align 8
  store %struct.sm_col_struct* %24, %struct.sm_col_struct** %10, align 8
  %25 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %26 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %25, i32 0, i32 3
  %27 = load %struct.sm_element_struct*, %struct.sm_element_struct** %26, align 8
  %28 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp sge i32 %29, 0
  br i1 %30, label %31, label %53

31:                                               ; preds = %21
  %32 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %33 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %32, i32 0, i32 3
  %34 = load %struct.sm_element_struct*, %struct.sm_element_struct** %33, align 8
  %35 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %38 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %37, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = icmp slt i32 %36, %39
  br i1 %40, label %41, label %53

41:                                               ; preds = %31
  %42 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %43 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %42, i32 0, i32 0
  %44 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %43, align 8
  %45 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %46 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %45, i32 0, i32 3
  %47 = load %struct.sm_element_struct*, %struct.sm_element_struct** %46, align 8
  %48 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %47, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %44, i64 %50
  %52 = load %struct.sm_row_struct*, %struct.sm_row_struct** %51, align 8
  br label %54

53:                                               ; preds = %31, %21
  br label %54

54:                                               ; preds = %53, %41
  %55 = phi %struct.sm_row_struct* [ %52, %41 ], [ null, %53 ]
  store %struct.sm_row_struct* %55, %struct.sm_row_struct** %9, align 8
  %56 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %57 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %56, i32 0, i32 3
  %58 = load %struct.sm_element_struct*, %struct.sm_element_struct** %57, align 8
  %59 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %58, i32 0, i32 2
  %60 = load %struct.sm_element_struct*, %struct.sm_element_struct** %59, align 8
  store %struct.sm_element_struct* %60, %struct.sm_element_struct** %8, align 8
  br label %61

61:                                               ; preds = %100, %54
  %62 = load %struct.sm_element_struct*, %struct.sm_element_struct** %8, align 8
  %63 = icmp ne %struct.sm_element_struct* %62, null
  br i1 %63, label %64, label %104

64:                                               ; preds = %61
  %65 = load %struct.sm_element_struct*, %struct.sm_element_struct** %8, align 8
  %66 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %65, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp sge i32 %67, 0
  br i1 %68, label %69, label %87

69:                                               ; preds = %64
  %70 = load %struct.sm_element_struct*, %struct.sm_element_struct** %8, align 8
  %71 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %70, i32 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %74 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %73, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = icmp slt i32 %72, %75
  br i1 %76, label %77, label %87

77:                                               ; preds = %69
  %78 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %79 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %78, i32 0, i32 0
  %80 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %79, align 8
  %81 = load %struct.sm_element_struct*, %struct.sm_element_struct** %8, align 8
  %82 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %81, i32 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %80, i64 %84
  %86 = load %struct.sm_row_struct*, %struct.sm_row_struct** %85, align 8
  br label %88

87:                                               ; preds = %69, %64
  br label %88

88:                                               ; preds = %87, %77
  %89 = phi %struct.sm_row_struct* [ %86, %77 ], [ null, %87 ]
  store %struct.sm_row_struct* %89, %struct.sm_row_struct** %5, align 8
  %90 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %91 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %90, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = load %struct.sm_row_struct*, %struct.sm_row_struct** %9, align 8
  %94 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp slt i32 %92, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %88
  %98 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  store %struct.sm_row_struct* %98, %struct.sm_row_struct** %9, align 8
  br label %99

99:                                               ; preds = %97, %88
  br label %100

100:                                              ; preds = %99
  %101 = load %struct.sm_element_struct*, %struct.sm_element_struct** %8, align 8
  %102 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %101, i32 0, i32 2
  %103 = load %struct.sm_element_struct*, %struct.sm_element_struct** %102, align 8
  store %struct.sm_element_struct* %103, %struct.sm_element_struct** %8, align 8
  br label %61

104:                                              ; preds = %61
  %105 = load %struct.sm_row_struct*, %struct.sm_row_struct** %9, align 8
  %106 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %105, i32 0, i32 3
  %107 = load %struct.sm_element_struct*, %struct.sm_element_struct** %106, align 8
  store %struct.sm_element_struct* %107, %struct.sm_element_struct** %8, align 8
  br label %108

108:                                              ; preds = %192, %104
  %109 = load %struct.sm_element_struct*, %struct.sm_element_struct** %8, align 8
  %110 = icmp ne %struct.sm_element_struct* %109, null
  br i1 %110, label %111, label %196

111:                                              ; preds = %108
  %112 = load %struct.sm_element_struct*, %struct.sm_element_struct** %8, align 8
  %113 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %112, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = icmp sge i32 %114, 0
  br i1 %115, label %116, label %134

116:                                              ; preds = %111
  %117 = load %struct.sm_element_struct*, %struct.sm_element_struct** %8, align 8
  %118 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %117, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %121 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %120, i32 0, i32 3
  %122 = load i32, i32* %121, align 8
  %123 = icmp slt i32 %119, %122
  br i1 %123, label %124, label %134

124:                                              ; preds = %116
  %125 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %126 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %125, i32 0, i32 2
  %127 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %126, align 8
  %128 = load %struct.sm_element_struct*, %struct.sm_element_struct** %8, align 8
  %129 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %128, i32 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %127, i64 %131
  %133 = load %struct.sm_col_struct*, %struct.sm_col_struct** %132, align 8
  br label %135

134:                                              ; preds = %116, %111
  br label %135

135:                                              ; preds = %134, %124
  %136 = phi %struct.sm_col_struct* [ %133, %124 ], [ null, %134 ]
  store %struct.sm_col_struct* %136, %struct.sm_col_struct** %7, align 8
  %137 = load i32*, i32** %4, align 8
  %138 = icmp ne i32* %137, null
  br i1 %138, label %139, label %156

139:                                              ; preds = %135
  %140 = load i32*, i32** %4, align 8
  %141 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %142 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %141, i32 0, i32 0
  %143 = load i32, i32* %142, align 8
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds i32, i32* %140, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = load i32*, i32** %4, align 8
  %148 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %149 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %148, i32 0, i32 0
  %150 = load i32, i32* %149, align 8
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i32, i32* %147, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = icmp sgt i32 %146, %153
  br i1 %154, label %155, label %156

155:                                              ; preds = %139
  br label %192

156:                                              ; preds = %139, %135
  %157 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %158 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %157, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %161 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %160, i32 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = icmp sgt i32 %159, %162
  br i1 %163, label %180, label %164

164:                                              ; preds = %156
  %165 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %166 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %165, i32 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %169 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %168, i32 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %167, %170
  br i1 %171, label %172, label %191

172:                                              ; preds = %164
  %173 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %174 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %173, i32 0, i32 0
  %175 = load i32, i32* %174, align 8
  %176 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %177 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %176, i32 0, i32 0
  %178 = load i32, i32* %177, align 8
  %179 = icmp sgt i32 %175, %178
  br i1 %179, label %180, label %191

180:                                              ; preds = %172, %156
  %181 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %182 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %183 = call i32 (%struct.sm_col_struct*, %struct.sm_col_struct*, ...) bitcast (i32 (%struct.sm_col_struct*, %struct.sm_col_struct*)* @sm_col_contains to i32 (%struct.sm_col_struct*, %struct.sm_col_struct*, ...)*)(%struct.sm_col_struct* %181, %struct.sm_col_struct* %182)
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %185, label %190

185:                                              ; preds = %180
  %186 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %187 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %188 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %187, i32 0, i32 0
  %189 = load i32, i32* %188, align 8
  call void (%struct.sm_matrix_struct*, i32, ...) bitcast (void (%struct.sm_matrix_struct*, i32)* @sm_delcol to void (%struct.sm_matrix_struct*, i32, ...)*)(%struct.sm_matrix_struct* %186, i32 %189)
  br label %196

190:                                              ; preds = %180
  br label %191

191:                                              ; preds = %190, %172, %164
  br label %192

192:                                              ; preds = %191, %155
  %193 = load %struct.sm_element_struct*, %struct.sm_element_struct** %8, align 8
  %194 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %193, i32 0, i32 4
  %195 = load %struct.sm_element_struct*, %struct.sm_element_struct** %194, align 8
  store %struct.sm_element_struct* %195, %struct.sm_element_struct** %8, align 8
  br label %108

196:                                              ; preds = %185, %108
  br label %197

197:                                              ; preds = %196
  %198 = load %struct.sm_col_struct*, %struct.sm_col_struct** %10, align 8
  store %struct.sm_col_struct* %198, %struct.sm_col_struct** %6, align 8
  br label %18

199:                                              ; preds = %18
  %200 = load i32, i32* %11, align 4
  %201 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %202 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %201, i32 0, i32 9
  %203 = load i32, i32* %202, align 8
  %204 = sub nsw i32 %200, %203
  ret i32 %204
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @find_equiv_outputs(%struct.PLA_t* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.set_family**, align 8
  %10 = alloca %struct.set_family**, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  store i32 0, i32* %8, align 4
  %11 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %12 = call i32 (%struct.PLA_t*, ...) bitcast (i32 (%struct.PLA_t*)* @makeup_labels to i32 (%struct.PLA_t*, ...)*)(%struct.PLA_t* %11)
  %13 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %14 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i32, i32* %13, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = mul i64 8, %18
  %20 = call noalias i8* @malloc(i64 %19) #7
  %21 = bitcast i8* %20 to %struct.set_family**
  store %struct.set_family** %21, %struct.set_family*** %10, align 8
  %22 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %23 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %22, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = mul i64 8, %27
  %29 = call noalias i8* @malloc(i64 %28) #7
  %30 = bitcast i8* %29 to %struct.set_family**
  store %struct.set_family** %30, %struct.set_family*** %9, align 8
  store i32 0, i32* %4, align 4
  br label %31

31:                                               ; preds = %67, %1
  %32 = load i32, i32* %4, align 4
  %33 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %34 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %33, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %32, %37
  br i1 %38, label %39, label %70

39:                                               ; preds = %31
  %40 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %41 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %40, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = load i32, i32* %4, align 4
  %46 = add nsw i32 %44, %45
  store i32 %46, i32* %6, align 4
  %47 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %48 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %47, i32 0, i32 2
  %49 = load %struct.set_family*, %struct.set_family** %48, align 8
  %50 = load i32, i32* %6, align 4
  %51 = call %struct.set_family* (%struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32)* @cof_output to %struct.set_family* (%struct.set_family*, i32, ...)*)(%struct.set_family* %49, i32 %50)
  %52 = load %struct.set_family**, %struct.set_family*** %9, align 8
  %53 = load i32, i32* %4, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.set_family*, %struct.set_family** %52, i64 %54
  store %struct.set_family* %51, %struct.set_family** %55, align 8
  %56 = load %struct.set_family**, %struct.set_family*** %9, align 8
  %57 = load i32, i32* %4, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %struct.set_family*, %struct.set_family** %56, i64 %58
  %60 = load %struct.set_family*, %struct.set_family** %59, align 8
  %61 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @cube1list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %60)
  %62 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @complement to %struct.set_family* (i32**, ...)*)(i32** %61)
  %63 = load %struct.set_family**, %struct.set_family*** %10, align 8
  %64 = load i32, i32* %4, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %struct.set_family*, %struct.set_family** %63, i64 %65
  store %struct.set_family* %62, %struct.set_family** %66, align 8
  br label %67

67:                                               ; preds = %39
  %68 = load i32, i32* %4, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %4, align 4
  br label %31

70:                                               ; preds = %31
  store i32 0, i32* %4, align 4
  br label %71

71:                                               ; preds = %237, %70
  %72 = load i32, i32* %4, align 4
  %73 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %74 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %73, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = sub nsw i32 %77, 1
  %79 = icmp slt i32 %72, %78
  br i1 %79, label %80, label %240

80:                                               ; preds = %71
  %81 = load i32, i32* %4, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %5, align 4
  br label %83

83:                                               ; preds = %233, %80
  %84 = load i32, i32* %5, align 4
  %85 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %86 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i32, i32* %85, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = icmp slt i32 %84, %89
  br i1 %90, label %91, label %236

91:                                               ; preds = %83
  %92 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %93 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i32, i32* %92, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = load i32, i32* %4, align 4
  %98 = add nsw i32 %96, %97
  store i32 %98, i32* %6, align 4
  %99 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %100 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, i32* %99, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = load i32, i32* %5, align 4
  %105 = add nsw i32 %103, %104
  store i32 %105, i32* %7, align 4
  %106 = load %struct.set_family**, %struct.set_family*** %10, align 8
  %107 = load i32, i32* %4, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds %struct.set_family*, %struct.set_family** %106, i64 %108
  %110 = load %struct.set_family*, %struct.set_family** %109, align 8
  %111 = load %struct.set_family**, %struct.set_family*** %10, align 8
  %112 = load i32, i32* %5, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds %struct.set_family*, %struct.set_family** %111, i64 %113
  %115 = load %struct.set_family*, %struct.set_family** %114, align 8
  %116 = call i32 @check_equiv(%struct.set_family* %110, %struct.set_family* %115)
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %136

118:                                              ; preds = %91
  %119 = load i32, i32* %4, align 4
  %120 = load i32, i32* %5, align 4
  %121 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %122 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %121, i32 0, i32 7
  %123 = load i8**, i8*** %122, align 8
  %124 = load i32, i32* %6, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8*, i8** %123, i64 %125
  %127 = load i8*, i8** %126, align 8
  %128 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %129 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %128, i32 0, i32 7
  %130 = load i8**, i8*** %129, align 8
  %131 = load i32, i32* %7, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8*, i8** %130, i64 %132
  %134 = load i8*, i8** %133, align 8
  %135 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.148, i64 0, i64 0), i32 %119, i32 %120, i8* %127, i8* %134)
  store i32 1, i32* %8, align 4
  br label %232

136:                                              ; preds = %91
  %137 = load %struct.set_family**, %struct.set_family*** %10, align 8
  %138 = load i32, i32* %4, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %struct.set_family*, %struct.set_family** %137, i64 %139
  %141 = load %struct.set_family*, %struct.set_family** %140, align 8
  %142 = load %struct.set_family**, %struct.set_family*** %9, align 8
  %143 = load i32, i32* %5, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds %struct.set_family*, %struct.set_family** %142, i64 %144
  %146 = load %struct.set_family*, %struct.set_family** %145, align 8
  %147 = call i32 @check_equiv(%struct.set_family* %141, %struct.set_family* %146)
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %167

149:                                              ; preds = %136
  %150 = load i32, i32* %4, align 4
  %151 = load i32, i32* %5, align 4
  %152 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %153 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %152, i32 0, i32 7
  %154 = load i8**, i8*** %153, align 8
  %155 = load i32, i32* %6, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i8*, i8** %154, i64 %156
  %158 = load i8*, i8** %157, align 8
  %159 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %160 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %159, i32 0, i32 7
  %161 = load i8**, i8*** %160, align 8
  %162 = load i32, i32* %7, align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i8*, i8** %161, i64 %163
  %165 = load i8*, i8** %164, align 8
  %166 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.149, i64 0, i64 0), i32 %150, i32 %151, i8* %158, i8* %165)
  store i32 1, i32* %8, align 4
  br label %231

167:                                              ; preds = %136
  %168 = load %struct.set_family**, %struct.set_family*** %9, align 8
  %169 = load i32, i32* %4, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds %struct.set_family*, %struct.set_family** %168, i64 %170
  %172 = load %struct.set_family*, %struct.set_family** %171, align 8
  %173 = load %struct.set_family**, %struct.set_family*** %10, align 8
  %174 = load i32, i32* %5, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %struct.set_family*, %struct.set_family** %173, i64 %175
  %177 = load %struct.set_family*, %struct.set_family** %176, align 8
  %178 = call i32 @check_equiv(%struct.set_family* %172, %struct.set_family* %177)
  %179 = icmp ne i32 %178, 0
  br i1 %179, label %180, label %198

180:                                              ; preds = %167
  %181 = load i32, i32* %4, align 4
  %182 = load i32, i32* %5, align 4
  %183 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %184 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %183, i32 0, i32 7
  %185 = load i8**, i8*** %184, align 8
  %186 = load i32, i32* %6, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds i8*, i8** %185, i64 %187
  %189 = load i8*, i8** %188, align 8
  %190 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %191 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %190, i32 0, i32 7
  %192 = load i8**, i8*** %191, align 8
  %193 = load i32, i32* %7, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds i8*, i8** %192, i64 %194
  %196 = load i8*, i8** %195, align 8
  %197 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.150, i64 0, i64 0), i32 %181, i32 %182, i8* %189, i8* %196)
  store i32 1, i32* %8, align 4
  br label %230

198:                                              ; preds = %167
  %199 = load %struct.set_family**, %struct.set_family*** %9, align 8
  %200 = load i32, i32* %4, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds %struct.set_family*, %struct.set_family** %199, i64 %201
  %203 = load %struct.set_family*, %struct.set_family** %202, align 8
  %204 = load %struct.set_family**, %struct.set_family*** %9, align 8
  %205 = load i32, i32* %5, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds %struct.set_family*, %struct.set_family** %204, i64 %206
  %208 = load %struct.set_family*, %struct.set_family** %207, align 8
  %209 = call i32 @check_equiv(%struct.set_family* %203, %struct.set_family* %208)
  %210 = icmp ne i32 %209, 0
  br i1 %210, label %211, label %229

211:                                              ; preds = %198
  %212 = load i32, i32* %4, align 4
  %213 = load i32, i32* %5, align 4
  %214 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %215 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %214, i32 0, i32 7
  %216 = load i8**, i8*** %215, align 8
  %217 = load i32, i32* %6, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds i8*, i8** %216, i64 %218
  %220 = load i8*, i8** %219, align 8
  %221 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %222 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %221, i32 0, i32 7
  %223 = load i8**, i8*** %222, align 8
  %224 = load i32, i32* %7, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds i8*, i8** %223, i64 %225
  %227 = load i8*, i8** %226, align 8
  %228 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.151, i64 0, i64 0), i32 %212, i32 %213, i8* %220, i8* %227)
  store i32 1, i32* %8, align 4
  br label %229

229:                                              ; preds = %211, %198
  br label %230

230:                                              ; preds = %229, %180
  br label %231

231:                                              ; preds = %230, %149
  br label %232

232:                                              ; preds = %231, %118
  br label %233

233:                                              ; preds = %232
  %234 = load i32, i32* %5, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %5, align 4
  br label %83

236:                                              ; preds = %83
  br label %237

237:                                              ; preds = %236
  %238 = load i32, i32* %4, align 4
  %239 = add nsw i32 %238, 1
  store i32 %239, i32* %4, align 4
  br label %71

240:                                              ; preds = %71
  %241 = load i32, i32* %8, align 4
  %242 = icmp ne i32 %241, 0
  br i1 %242, label %245, label %243

243:                                              ; preds = %240
  %244 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.152, i64 0, i64 0))
  br label %245

245:                                              ; preds = %243, %240
  store i32 0, i32* %4, align 4
  br label %246

246:                                              ; preds = %265, %245
  %247 = load i32, i32* %4, align 4
  %248 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %249 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds i32, i32* %248, i64 %250
  %252 = load i32, i32* %251, align 4
  %253 = icmp slt i32 %247, %252
  br i1 %253, label %254, label %268

254:                                              ; preds = %246
  %255 = load %struct.set_family**, %struct.set_family*** %10, align 8
  %256 = load i32, i32* %4, align 4
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds %struct.set_family*, %struct.set_family** %255, i64 %257
  %259 = load %struct.set_family*, %struct.set_family** %258, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %259)
  %260 = load %struct.set_family**, %struct.set_family*** %9, align 8
  %261 = load i32, i32* %4, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds %struct.set_family*, %struct.set_family** %260, i64 %262
  %264 = load %struct.set_family*, %struct.set_family** %263, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %264)
  br label %265

265:                                              ; preds = %254
  %266 = load i32, i32* %4, align 4
  %267 = add nsw i32 %266, 1
  store i32 %267, i32* %4, align 4
  br label %246

268:                                              ; preds = %246
  %269 = load %struct.set_family**, %struct.set_family*** %10, align 8
  %270 = icmp ne %struct.set_family** %269, null
  br i1 %270, label %271, label %274

271:                                              ; preds = %268
  %272 = load %struct.set_family**, %struct.set_family*** %10, align 8
  %273 = bitcast %struct.set_family** %272 to i8*
  call void @free(i8* %273) #7
  store %struct.set_family** null, %struct.set_family*** %10, align 8
  br label %274

274:                                              ; preds = %271, %268
  %275 = load %struct.set_family**, %struct.set_family*** %9, align 8
  %276 = icmp ne %struct.set_family** %275, null
  br i1 %276, label %277, label %280

277:                                              ; preds = %274
  %278 = load %struct.set_family**, %struct.set_family*** %9, align 8
  %279 = bitcast %struct.set_family** %278 to i8*
  call void @free(i8* %279) #7
  store %struct.set_family** null, %struct.set_family*** %9, align 8
  br label %280

280:                                              ; preds = %277, %274
  %281 = load i32, i32* %2, align 4
  ret i32 %281
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @check_equiv(%struct.set_family* %0, %struct.set_family* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store %struct.set_family* %1, %struct.set_family** %5, align 8
  %10 = load %struct.set_family*, %struct.set_family** %4, align 8
  %11 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @cube1list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %10)
  store i32** %11, i32*** %6, align 8
  %12 = load %struct.set_family*, %struct.set_family** %5, align 8
  %13 = getelementptr inbounds %struct.set_family, %struct.set_family* %12, i32 0, i32 5
  %14 = load i32*, i32** %13, align 8
  store i32* %14, i32** %8, align 8
  %15 = load i32*, i32** %8, align 8
  %16 = load %struct.set_family*, %struct.set_family** %5, align 8
  %17 = getelementptr inbounds %struct.set_family, %struct.set_family* %16, i32 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = load %struct.set_family*, %struct.set_family** %5, align 8
  %20 = getelementptr inbounds %struct.set_family, %struct.set_family* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = mul nsw i32 %18, %21
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i32, i32* %15, i64 %23
  store i32* %24, i32** %9, align 8
  br label %25

25:                                               ; preds = %36, %2
  %26 = load i32*, i32** %8, align 8
  %27 = load i32*, i32** %9, align 8
  %28 = icmp ult i32* %26, %27
  br i1 %28, label %29, label %43

29:                                               ; preds = %25
  %30 = load i32**, i32*** %6, align 8
  %31 = load i32*, i32** %8, align 8
  %32 = call i32 (i32**, i32*, ...) bitcast (i32 (i32**, i32*)* @cube_is_covered to i32 (i32**, i32*, ...)*)(i32** %30, i32* %31)
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %29
  store i32 0, i32* %3, align 4
  br label %114

35:                                               ; preds = %29
  br label %36

36:                                               ; preds = %35
  %37 = load %struct.set_family*, %struct.set_family** %5, align 8
  %38 = getelementptr inbounds %struct.set_family, %struct.set_family* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = load i32*, i32** %8, align 8
  %41 = sext i32 %39 to i64
  %42 = getelementptr inbounds i32, i32* %40, i64 %41
  store i32* %42, i32** %8, align 8
  br label %25

43:                                               ; preds = %25
  %44 = load i32**, i32*** %6, align 8
  %45 = getelementptr inbounds i32*, i32** %44, i64 0
  %46 = load i32*, i32** %45, align 8
  %47 = icmp ne i32* %46, null
  br i1 %47, label %48, label %55

48:                                               ; preds = %43
  %49 = load i32**, i32*** %6, align 8
  %50 = getelementptr inbounds i32*, i32** %49, i64 0
  %51 = load i32*, i32** %50, align 8
  %52 = bitcast i32* %51 to i8*
  call void @free(i8* %52) #7
  %53 = load i32**, i32*** %6, align 8
  %54 = getelementptr inbounds i32*, i32** %53, i64 0
  store i32* null, i32** %54, align 8
  br label %55

55:                                               ; preds = %48, %43
  %56 = load i32**, i32*** %6, align 8
  %57 = icmp ne i32** %56, null
  br i1 %57, label %58, label %61

58:                                               ; preds = %55
  %59 = load i32**, i32*** %6, align 8
  %60 = bitcast i32** %59 to i8*
  call void @free(i8* %60) #7
  store i32** null, i32*** %6, align 8
  br label %61

61:                                               ; preds = %58, %55
  %62 = load %struct.set_family*, %struct.set_family** %5, align 8
  %63 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @cube1list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %62)
  store i32** %63, i32*** %7, align 8
  %64 = load %struct.set_family*, %struct.set_family** %4, align 8
  %65 = getelementptr inbounds %struct.set_family, %struct.set_family* %64, i32 0, i32 5
  %66 = load i32*, i32** %65, align 8
  store i32* %66, i32** %8, align 8
  %67 = load i32*, i32** %8, align 8
  %68 = load %struct.set_family*, %struct.set_family** %4, align 8
  %69 = getelementptr inbounds %struct.set_family, %struct.set_family* %68, i32 0, i32 3
  %70 = load i32, i32* %69, align 4
  %71 = load %struct.set_family*, %struct.set_family** %4, align 8
  %72 = getelementptr inbounds %struct.set_family, %struct.set_family* %71, i32 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = mul nsw i32 %70, %73
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %67, i64 %75
  store i32* %76, i32** %9, align 8
  br label %77

77:                                               ; preds = %88, %61
  %78 = load i32*, i32** %8, align 8
  %79 = load i32*, i32** %9, align 8
  %80 = icmp ult i32* %78, %79
  br i1 %80, label %81, label %95

81:                                               ; preds = %77
  %82 = load i32**, i32*** %7, align 8
  %83 = load i32*, i32** %8, align 8
  %84 = call i32 (i32**, i32*, ...) bitcast (i32 (i32**, i32*)* @cube_is_covered to i32 (i32**, i32*, ...)*)(i32** %82, i32* %83)
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %87, label %86

86:                                               ; preds = %81
  store i32 0, i32* %3, align 4
  br label %114

87:                                               ; preds = %81
  br label %88

88:                                               ; preds = %87
  %89 = load %struct.set_family*, %struct.set_family** %4, align 8
  %90 = getelementptr inbounds %struct.set_family, %struct.set_family* %89, i32 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = load i32*, i32** %8, align 8
  %93 = sext i32 %91 to i64
  %94 = getelementptr inbounds i32, i32* %92, i64 %93
  store i32* %94, i32** %8, align 8
  br label %77

95:                                               ; preds = %77
  %96 = load i32**, i32*** %7, align 8
  %97 = getelementptr inbounds i32*, i32** %96, i64 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp ne i32* %98, null
  br i1 %99, label %100, label %107

100:                                              ; preds = %95
  %101 = load i32**, i32*** %7, align 8
  %102 = getelementptr inbounds i32*, i32** %101, i64 0
  %103 = load i32*, i32** %102, align 8
  %104 = bitcast i32* %103 to i8*
  call void @free(i8* %104) #7
  %105 = load i32**, i32*** %7, align 8
  %106 = getelementptr inbounds i32*, i32** %105, i64 0
  store i32* null, i32** %106, align 8
  br label %107

107:                                              ; preds = %100, %95
  %108 = load i32**, i32*** %7, align 8
  %109 = icmp ne i32** %108, null
  br i1 %109, label %110, label %113

110:                                              ; preds = %107
  %111 = load i32**, i32*** %7, align 8
  %112 = bitcast i32** %111 to i8*
  call void @free(i8* %112) #7
  store i32** null, i32*** %7, align 8
  br label %113

113:                                              ; preds = %110, %107
  store i32 1, i32* %3, align 4
  br label %114

114:                                              ; preds = %113, %86, %34
  %115 = load i32, i32* %3, align 4
  ret i32 %115
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @espresso(%struct.set_family* %0, %struct.set_family* %1, %struct.set_family* %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca %struct.set_family*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca %struct.cost_struct, align 4
  %13 = alloca %struct.cost_struct, align 4
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store %struct.set_family* %1, %struct.set_family** %5, align 8
  store %struct.set_family* %2, %struct.set_family** %6, align 8
  br label %22

22:                                               ; preds = %241, %3
  %23 = load %struct.set_family*, %struct.set_family** %4, align 8
  %24 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %23)
  store %struct.set_family* %24, %struct.set_family** %9, align 8
  %25 = load %struct.set_family*, %struct.set_family** %5, align 8
  %26 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %25)
  store %struct.set_family* %26, %struct.set_family** %8, align 8
  %27 = load i32, i32* @recompute_onset, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %44

29:                                               ; preds = %22
  %30 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %30, i64* %14, align 8
  %31 = load %struct.set_family*, %struct.set_family** %4, align 8
  %32 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @cube1list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %31)
  %33 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @simplify to %struct.set_family* (i32**, ...)*)(i32** %32)
  store %struct.set_family* %33, %struct.set_family** %7, align 8
  %34 = load i32, i32* @trace, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %29
  %37 = load %struct.set_family*, %struct.set_family** %7, align 8
  %38 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %39 = load i64, i64* %14, align 8
  %40 = sub nsw i64 %38, %39
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %37, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.155, i64 0, i64 0), i64 %40)
  br label %41

41:                                               ; preds = %36, %29
  %42 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %42)
  %43 = load %struct.set_family*, %struct.set_family** %7, align 8
  store %struct.set_family* %43, %struct.set_family** %4, align 8
  br label %44

44:                                               ; preds = %41, %22
  %45 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, %struct.cost_struct*, ...) bitcast (void (%struct.set_family*, %struct.cost_struct*)* @cover_cost to void (%struct.set_family*, %struct.cost_struct*, ...)*)(%struct.set_family* %45, %struct.cost_struct* %12)
  %46 = load i32, i32* @unwrap_onset, align 4
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %88

48:                                               ; preds = %44
  %49 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %50 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %51 = sub nsw i32 %50, 1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, i32* %49, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = icmp sgt i32 %54, 1
  br i1 %55, label %56, label %88

56:                                               ; preds = %48
  %57 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %12, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %12, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %62 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %63 = sub nsw i32 %62, 1
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %61, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = mul nsw i32 %60, %66
  %68 = icmp ne i32 %58, %67
  br i1 %68, label %69, label %88

69:                                               ; preds = %56
  %70 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %12, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp slt i32 %71, 5000
  br i1 %72, label %73, label %88

73:                                               ; preds = %69
  %74 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %74, i64* %15, align 8
  %75 = load %struct.set_family*, %struct.set_family** %4, align 8
  %76 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %77 = sub nsw i32 %76, 1
  %78 = call %struct.set_family* (%struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32)* @unravel to %struct.set_family* (%struct.set_family*, i32, ...)*)(%struct.set_family* %75, i32 %77)
  %79 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %78)
  store %struct.set_family* %79, %struct.set_family** %4, align 8
  %80 = load i32, i32* @trace, align 4
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %87

82:                                               ; preds = %73
  %83 = load %struct.set_family*, %struct.set_family** %4, align 8
  %84 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %85 = load i64, i64* %15, align 8
  %86 = sub nsw i64 %84, %85
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %83, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.156, i64 0, i64 0), i64 %86)
  br label %87

87:                                               ; preds = %82, %73
  br label %88

88:                                               ; preds = %87, %69, %56, %48, %44
  %89 = load %struct.set_family*, %struct.set_family** %4, align 8
  %90 = getelementptr inbounds %struct.set_family, %struct.set_family* %89, i32 0, i32 5
  %91 = load i32*, i32** %90, align 8
  store i32* %91, i32** %11, align 8
  %92 = load i32*, i32** %11, align 8
  %93 = load %struct.set_family*, %struct.set_family** %4, align 8
  %94 = getelementptr inbounds %struct.set_family, %struct.set_family* %93, i32 0, i32 3
  %95 = load i32, i32* %94, align 4
  %96 = load %struct.set_family*, %struct.set_family** %4, align 8
  %97 = getelementptr inbounds %struct.set_family, %struct.set_family* %96, i32 0, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = mul nsw i32 %95, %98
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i32, i32* %92, i64 %100
  store i32* %101, i32** %10, align 8
  br label %102

102:                                              ; preds = %111, %88
  %103 = load i32*, i32** %11, align 8
  %104 = load i32*, i32** %10, align 8
  %105 = icmp ult i32* %103, %104
  br i1 %105, label %106, label %118

106:                                              ; preds = %102
  %107 = load i32*, i32** %11, align 8
  %108 = getelementptr inbounds i32, i32* %107, i64 0
  %109 = load i32, i32* %108, align 4
  %110 = and i32 %109, -32769
  store i32 %110, i32* %108, align 4
  br label %111

111:                                              ; preds = %106
  %112 = load %struct.set_family*, %struct.set_family** %4, align 8
  %113 = getelementptr inbounds %struct.set_family, %struct.set_family* %112, i32 0, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = load i32*, i32** %11, align 8
  %116 = sext i32 %114 to i64
  %117 = getelementptr inbounds i32, i32* %115, i64 %116
  store i32* %117, i32** %11, align 8
  br label %102

118:                                              ; preds = %102
  %119 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %119, i64* %16, align 8
  %120 = load %struct.set_family*, %struct.set_family** %4, align 8
  %121 = load %struct.set_family*, %struct.set_family** %6, align 8
  %122 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, i32)* @expand to %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...)*)(%struct.set_family* %120, %struct.set_family* %121, i32 0)
  store %struct.set_family* %122, %struct.set_family** %4, align 8
  %123 = load i64, i64* %16, align 8
  %124 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %123, i32 4, %struct.set_family* %124, %struct.cost_struct* %12)
  %125 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %125, i64* %17, align 8
  %126 = load %struct.set_family*, %struct.set_family** %4, align 8
  %127 = load %struct.set_family*, %struct.set_family** %8, align 8
  %128 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @irredundant to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %126, %struct.set_family* %127)
  store %struct.set_family* %128, %struct.set_family** %4, align 8
  %129 = load i64, i64* %17, align 8
  %130 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %129, i32 5, %struct.set_family* %130, %struct.cost_struct* %12)
  %131 = load i32, i32* @single_expand, align 4
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %224, label %133

133:                                              ; preds = %118
  %134 = load i32, i32* @remove_essential, align 4
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %136, label %141

136:                                              ; preds = %133
  %137 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %137, i64* %18, align 8
  %138 = call %struct.set_family* (%struct.set_family**, %struct.set_family**, ...) bitcast (%struct.set_family* (%struct.set_family**, %struct.set_family**)* @essential to %struct.set_family* (%struct.set_family**, %struct.set_family**, ...)*)(%struct.set_family** %4, %struct.set_family** %8)
  store %struct.set_family* %138, %struct.set_family** %7, align 8
  %139 = load i64, i64* %18, align 8
  %140 = load %struct.set_family*, %struct.set_family** %7, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %139, i32 3, %struct.set_family* %140, %struct.cost_struct* %12)
  br label %144

141:                                              ; preds = %133
  %142 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %143 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 0, i32 %142)
  store %struct.set_family* %143, %struct.set_family** %7, align 8
  br label %144

144:                                              ; preds = %141, %136
  %145 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, %struct.cost_struct*, ...) bitcast (void (%struct.set_family*, %struct.cost_struct*)* @cover_cost to void (%struct.set_family*, %struct.cost_struct*, ...)*)(%struct.set_family* %145, %struct.cost_struct* %12)
  br label %146

146:                                              ; preds = %213, %144
  br label %147

147:                                              ; preds = %166, %146
  call void (%struct.cost_struct*, %struct.cost_struct*, ...) bitcast (void (%struct.cost_struct*, %struct.cost_struct*)* @copy_cost to void (%struct.cost_struct*, %struct.cost_struct*, ...)*)(%struct.cost_struct* %12, %struct.cost_struct* %13)
  %148 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %148, i64* %19, align 8
  %149 = load %struct.set_family*, %struct.set_family** %4, align 8
  %150 = load %struct.set_family*, %struct.set_family** %8, align 8
  %151 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @reduce to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %149, %struct.set_family* %150)
  store %struct.set_family* %151, %struct.set_family** %4, align 8
  %152 = load i64, i64* %19, align 8
  %153 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %152, i32 6, %struct.set_family* %153, %struct.cost_struct* %12)
  %154 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %154, i64* %20, align 8
  %155 = load %struct.set_family*, %struct.set_family** %4, align 8
  %156 = load %struct.set_family*, %struct.set_family** %6, align 8
  %157 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, i32)* @expand to %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...)*)(%struct.set_family* %155, %struct.set_family* %156, i32 0)
  store %struct.set_family* %157, %struct.set_family** %4, align 8
  %158 = load i64, i64* %20, align 8
  %159 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %158, i32 4, %struct.set_family* %159, %struct.cost_struct* %12)
  %160 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %160, i64* %21, align 8
  %161 = load %struct.set_family*, %struct.set_family** %4, align 8
  %162 = load %struct.set_family*, %struct.set_family** %8, align 8
  %163 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @irredundant to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %161, %struct.set_family* %162)
  store %struct.set_family* %163, %struct.set_family** %4, align 8
  %164 = load i64, i64* %21, align 8
  %165 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %164, i32 5, %struct.set_family* %165, %struct.cost_struct* %12)
  br label %166

166:                                              ; preds = %147
  %167 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %12, i32 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %13, i32 0, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = icmp slt i32 %168, %170
  br i1 %171, label %147, label %172

172:                                              ; preds = %166
  call void (%struct.cost_struct*, %struct.cost_struct*, ...) bitcast (void (%struct.cost_struct*, %struct.cost_struct*)* @copy_cost to void (%struct.cost_struct*, %struct.cost_struct*, ...)*)(%struct.cost_struct* %12, %struct.cost_struct* %13)
  %173 = load i32, i32* @use_super_gasp, align 4
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %175, label %187

175:                                              ; preds = %172
  %176 = load %struct.set_family*, %struct.set_family** %4, align 8
  %177 = load %struct.set_family*, %struct.set_family** %8, align 8
  %178 = load %struct.set_family*, %struct.set_family** %6, align 8
  %179 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, %struct.cost_struct*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, %struct.cost_struct*)* @super_gasp to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, %struct.cost_struct*, ...)*)(%struct.set_family* %176, %struct.set_family* %177, %struct.set_family* %178, %struct.cost_struct* %12)
  store %struct.set_family* %179, %struct.set_family** %4, align 8
  %180 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %12, i32 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %13, i32 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = icmp sge i32 %181, %183
  br i1 %184, label %185, label %186

185:                                              ; preds = %175
  br label %215

186:                                              ; preds = %175
  br label %192

187:                                              ; preds = %172
  %188 = load %struct.set_family*, %struct.set_family** %4, align 8
  %189 = load %struct.set_family*, %struct.set_family** %8, align 8
  %190 = load %struct.set_family*, %struct.set_family** %6, align 8
  %191 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, %struct.cost_struct*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, %struct.cost_struct*)* @last_gasp to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, %struct.cost_struct*, ...)*)(%struct.set_family* %188, %struct.set_family* %189, %struct.set_family* %190, %struct.cost_struct* %12)
  store %struct.set_family* %191, %struct.set_family** %4, align 8
  br label %192

192:                                              ; preds = %187, %186
  br label %193

193:                                              ; preds = %192
  %194 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %12, i32 0, i32 0
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %13, i32 0, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = icmp slt i32 %195, %197
  br i1 %198, label %213, label %199

199:                                              ; preds = %193
  %200 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %12, i32 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %13, i32 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %201, %203
  br i1 %204, label %205, label %211

205:                                              ; preds = %199
  %206 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %12, i32 0, i32 4
  %207 = load i32, i32* %206, align 4
  %208 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %13, i32 0, i32 4
  %209 = load i32, i32* %208, align 4
  %210 = icmp slt i32 %207, %209
  br label %211

211:                                              ; preds = %205, %199
  %212 = phi i1 [ false, %199 ], [ %210, %205 ]
  br label %213

213:                                              ; preds = %211, %193
  %214 = phi i1 [ true, %193 ], [ %212, %211 ]
  br i1 %214, label %146, label %215

215:                                              ; preds = %213, %185
  %216 = load %struct.set_family*, %struct.set_family** %4, align 8
  %217 = load %struct.set_family*, %struct.set_family** %7, align 8
  %218 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_append to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %216, %struct.set_family* %217)
  store %struct.set_family* %218, %struct.set_family** %4, align 8
  %219 = load i32, i32* @trace, align 4
  %220 = icmp ne i32 %219, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %215
  %222 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, i8*, ...) bitcast (void (%struct.set_family*, i8*)* @size_stamp to void (%struct.set_family*, i8*, ...)*)(%struct.set_family* %222, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.157, i64 0, i64 0))
  br label %223

223:                                              ; preds = %221, %215
  br label %224

224:                                              ; preds = %223, %118
  %225 = load %struct.set_family*, %struct.set_family** %8, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %225)
  %226 = load i32, i32* @skip_make_sparse, align 4
  %227 = icmp ne i32 %226, 0
  br i1 %227, label %233, label %228

228:                                              ; preds = %224
  %229 = load %struct.set_family*, %struct.set_family** %4, align 8
  %230 = load %struct.set_family*, %struct.set_family** %5, align 8
  %231 = load %struct.set_family*, %struct.set_family** %6, align 8
  %232 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @make_sparse to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %229, %struct.set_family* %230, %struct.set_family* %231)
  store %struct.set_family* %232, %struct.set_family** %4, align 8
  br label %233

233:                                              ; preds = %228, %224
  %234 = load %struct.set_family*, %struct.set_family** %9, align 8
  %235 = getelementptr inbounds %struct.set_family, %struct.set_family* %234, i32 0, i32 3
  %236 = load i32, i32* %235, align 4
  %237 = load %struct.set_family*, %struct.set_family** %4, align 8
  %238 = getelementptr inbounds %struct.set_family, %struct.set_family* %237, i32 0, i32 3
  %239 = load i32, i32* %238, align 4
  %240 = icmp slt i32 %236, %239
  br i1 %240, label %241, label %244

241:                                              ; preds = %233
  %242 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %242)
  %243 = load %struct.set_family*, %struct.set_family** %9, align 8
  store %struct.set_family* %243, %struct.set_family** %4, align 8
  store i32 0, i32* @unwrap_onset, align 4
  br label %22

244:                                              ; preds = %233
  %245 = load %struct.set_family*, %struct.set_family** %9, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %245)
  br label %246

246:                                              ; preds = %244
  %247 = load %struct.set_family*, %struct.set_family** %4, align 8
  ret %struct.set_family* %247
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @essential(%struct.set_family** %0, %struct.set_family** %1) #0 {
  %3 = alloca %struct.set_family**, align 8
  %4 = alloca %struct.set_family**, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca %struct.set_family*, align 8
  store %struct.set_family** %0, %struct.set_family*** %3, align 8
  store %struct.set_family** %1, %struct.set_family*** %4, align 8
  %10 = load %struct.set_family**, %struct.set_family*** %3, align 8
  %11 = load %struct.set_family*, %struct.set_family** %10, align 8
  store %struct.set_family* %11, %struct.set_family** %8, align 8
  %12 = load %struct.set_family**, %struct.set_family*** %4, align 8
  %13 = load %struct.set_family*, %struct.set_family** %12, align 8
  store %struct.set_family* %13, %struct.set_family** %9, align 8
  %14 = load %struct.set_family*, %struct.set_family** %8, align 8
  %15 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_active to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %14)
  %16 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %17 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 10, i32 %16)
  store %struct.set_family* %17, %struct.set_family** %7, align 8
  %18 = load %struct.set_family*, %struct.set_family** %8, align 8
  %19 = getelementptr inbounds %struct.set_family, %struct.set_family* %18, i32 0, i32 5
  %20 = load i32*, i32** %19, align 8
  store i32* %20, i32** %6, align 8
  %21 = load i32*, i32** %6, align 8
  %22 = load %struct.set_family*, %struct.set_family** %8, align 8
  %23 = getelementptr inbounds %struct.set_family, %struct.set_family* %22, i32 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = load %struct.set_family*, %struct.set_family** %8, align 8
  %26 = getelementptr inbounds %struct.set_family, %struct.set_family* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = mul nsw i32 %24, %27
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %21, i64 %29
  store i32* %30, i32** %5, align 8
  br label %31

31:                                               ; preds = %76, %2
  %32 = load i32*, i32** %6, align 8
  %33 = load i32*, i32** %5, align 8
  %34 = icmp ult i32* %32, %33
  br i1 %34, label %35, label %83

35:                                               ; preds = %31
  %36 = load i32*, i32** %6, align 8
  %37 = getelementptr inbounds i32, i32* %36, i64 0
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 16384
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %75, label %41

41:                                               ; preds = %35
  %42 = load i32*, i32** %6, align 8
  %43 = getelementptr inbounds i32, i32* %42, i64 0
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 1024
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %74

47:                                               ; preds = %41
  %48 = load %struct.set_family*, %struct.set_family** %8, align 8
  %49 = load %struct.set_family*, %struct.set_family** %9, align 8
  %50 = load i32*, i32** %6, align 8
  %51 = call i32 @essen_cube(%struct.set_family* %48, %struct.set_family* %49, i32* %50)
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %73

53:                                               ; preds = %47
  %54 = load i32, i32* @debug, align 4
  %55 = and i32 %54, 2
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = load i32*, i32** %6, align 8
  %59 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %58)
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.160, i64 0, i64 0), i8* %59)
  br label %61

61:                                               ; preds = %57, %53
  %62 = load %struct.set_family*, %struct.set_family** %7, align 8
  %63 = load i32*, i32** %6, align 8
  %64 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %62, i32* %63)
  store %struct.set_family* %64, %struct.set_family** %7, align 8
  %65 = load i32*, i32** %6, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 0
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, -8193
  store i32 %68, i32* %66, align 4
  %69 = load %struct.set_family*, %struct.set_family** %8, align 8
  %70 = getelementptr inbounds %struct.set_family, %struct.set_family* %69, i32 0, i32 4
  %71 = load i32, i32* %70, align 8
  %72 = add nsw i32 %71, -1
  store i32 %72, i32* %70, align 8
  br label %73

73:                                               ; preds = %61, %47
  br label %74

74:                                               ; preds = %73, %41
  br label %75

75:                                               ; preds = %74, %35
  br label %76

76:                                               ; preds = %75
  %77 = load %struct.set_family*, %struct.set_family** %8, align 8
  %78 = getelementptr inbounds %struct.set_family, %struct.set_family* %77, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = load i32*, i32** %6, align 8
  %81 = sext i32 %79 to i64
  %82 = getelementptr inbounds i32, i32* %80, i64 %81
  store i32* %82, i32** %6, align 8
  br label %31

83:                                               ; preds = %31
  %84 = load %struct.set_family*, %struct.set_family** %8, align 8
  %85 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_inactive to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %84)
  %86 = load %struct.set_family**, %struct.set_family*** %3, align 8
  store %struct.set_family* %85, %struct.set_family** %86, align 8
  %87 = load %struct.set_family*, %struct.set_family** %9, align 8
  %88 = load %struct.set_family*, %struct.set_family** %7, align 8
  %89 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_join to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %87, %struct.set_family* %88)
  %90 = load %struct.set_family**, %struct.set_family*** %4, align 8
  store %struct.set_family* %89, %struct.set_family** %90, align 8
  %91 = load %struct.set_family*, %struct.set_family** %9, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %91)
  %92 = load %struct.set_family*, %struct.set_family** %7, align 8
  ret %struct.set_family* %92
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @essen_cube(%struct.set_family* %0, %struct.set_family* %1, i32* %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store %struct.set_family* %1, %struct.set_family** %5, align 8
  store i32* %2, i32** %6, align 8
  %11 = load %struct.set_family*, %struct.set_family** %4, align 8
  %12 = load %struct.set_family*, %struct.set_family** %5, align 8
  %13 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_join to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %11, %struct.set_family* %12)
  store %struct.set_family* %13, %struct.set_family** %8, align 8
  %14 = load %struct.set_family*, %struct.set_family** %8, align 8
  %15 = load i32*, i32** %6, align 8
  %16 = call %struct.set_family* @cb_consensus(%struct.set_family* %14, i32* %15)
  store %struct.set_family* %16, %struct.set_family** %7, align 8
  %17 = load %struct.set_family*, %struct.set_family** %8, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %17)
  %18 = load %struct.set_family*, %struct.set_family** %7, align 8
  %19 = load %struct.set_family*, %struct.set_family** %5, align 8
  %20 = call i32** (%struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*)* @cube2list to i32** (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %18, %struct.set_family* %19)
  store i32** %20, i32*** %9, align 8
  %21 = load i32**, i32*** %9, align 8
  %22 = load i32*, i32** %6, align 8
  %23 = call i32 (i32**, i32*, ...) bitcast (i32 (i32**, i32*)* @cube_is_covered to i32 (i32**, i32*, ...)*)(i32** %21, i32* %22)
  %24 = icmp ne i32 %23, 0
  %25 = xor i1 %24, true
  %26 = zext i1 %25 to i32
  store i32 %26, i32* %10, align 4
  %27 = load i32**, i32*** %9, align 8
  %28 = getelementptr inbounds i32*, i32** %27, i64 0
  %29 = load i32*, i32** %28, align 8
  %30 = icmp ne i32* %29, null
  br i1 %30, label %31, label %38

31:                                               ; preds = %3
  %32 = load i32**, i32*** %9, align 8
  %33 = getelementptr inbounds i32*, i32** %32, i64 0
  %34 = load i32*, i32** %33, align 8
  %35 = bitcast i32* %34 to i8*
  call void @free(i8* %35) #7
  %36 = load i32**, i32*** %9, align 8
  %37 = getelementptr inbounds i32*, i32** %36, i64 0
  store i32* null, i32** %37, align 8
  br label %38

38:                                               ; preds = %31, %3
  %39 = load i32**, i32*** %9, align 8
  %40 = icmp ne i32** %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = load i32**, i32*** %9, align 8
  %43 = bitcast i32** %42 to i8*
  call void @free(i8* %43) #7
  store i32** null, i32*** %9, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = load %struct.set_family*, %struct.set_family** %7, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %45)
  %46 = load i32, i32* %10, align 4
  ret i32 %46
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @cb_consensus(%struct.set_family* %0, i32* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32* %1, i32** %4, align 8
  %9 = load %struct.set_family*, %struct.set_family** %3, align 8
  %10 = getelementptr inbounds %struct.set_family, %struct.set_family* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul nsw i32 %11, 2
  %13 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %14 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %12, i32 %13)
  store %struct.set_family* %14, %struct.set_family** %8, align 8
  %15 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %16 = icmp sle i32 %15, 32
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  br label %24

18:                                               ; preds = %2
  %19 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %20 = sub nsw i32 %19, 1
  %21 = ashr i32 %20, 5
  %22 = add nsw i32 %21, 1
  %23 = add nsw i32 %22, 1
  br label %24

24:                                               ; preds = %18, %17
  %25 = phi i32 [ 2, %17 ], [ %23, %18 ]
  %26 = sext i32 %25 to i64
  %27 = mul i64 4, %26
  %28 = call noalias i8* @malloc(i64 %27) #7
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %31 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %29, i32 %30)
  store i32* %31, i32** %5, align 8
  %32 = load %struct.set_family*, %struct.set_family** %3, align 8
  %33 = getelementptr inbounds %struct.set_family, %struct.set_family* %32, i32 0, i32 5
  %34 = load i32*, i32** %33, align 8
  store i32* %34, i32** %7, align 8
  %35 = load i32*, i32** %7, align 8
  %36 = load %struct.set_family*, %struct.set_family** %3, align 8
  %37 = getelementptr inbounds %struct.set_family, %struct.set_family* %36, i32 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = load %struct.set_family*, %struct.set_family** %3, align 8
  %40 = getelementptr inbounds %struct.set_family, %struct.set_family* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = mul nsw i32 %38, %41
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %35, i64 %43
  store i32* %44, i32** %6, align 8
  br label %45

45:                                               ; preds = %71, %24
  %46 = load i32*, i32** %7, align 8
  %47 = load i32*, i32** %6, align 8
  %48 = icmp ult i32* %46, %47
  br i1 %48, label %49, label %78

49:                                               ; preds = %45
  %50 = load i32*, i32** %7, align 8
  %51 = load i32*, i32** %4, align 8
  %52 = icmp ne i32* %50, %51
  br i1 %52, label %53, label %70

53:                                               ; preds = %49
  %54 = load i32*, i32** %7, align 8
  %55 = load i32*, i32** %4, align 8
  %56 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @cdist01 to i32 (i32*, i32*, ...)*)(i32* %54, i32* %55)
  switch i32 %56, label %69 [
    i32 0, label %57
    i32 1, label %62
  ]

57:                                               ; preds = %53
  %58 = load %struct.set_family*, %struct.set_family** %8, align 8
  %59 = load i32*, i32** %7, align 8
  %60 = load i32*, i32** %4, align 8
  %61 = call %struct.set_family* @cb_consensus_dist0(%struct.set_family* %58, i32* %59, i32* %60)
  store %struct.set_family* %61, %struct.set_family** %8, align 8
  br label %69

62:                                               ; preds = %53
  %63 = load i32*, i32** %5, align 8
  %64 = load i32*, i32** %7, align 8
  %65 = load i32*, i32** %4, align 8
  call void (i32*, i32*, i32*, ...) bitcast (void (i32*, i32*, i32*)* @consensus to void (i32*, i32*, i32*, ...)*)(i32* %63, i32* %64, i32* %65)
  %66 = load %struct.set_family*, %struct.set_family** %8, align 8
  %67 = load i32*, i32** %5, align 8
  %68 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %66, i32* %67)
  store %struct.set_family* %68, %struct.set_family** %8, align 8
  br label %69

69:                                               ; preds = %62, %57, %53
  br label %70

70:                                               ; preds = %69, %49
  br label %71

71:                                               ; preds = %70
  %72 = load %struct.set_family*, %struct.set_family** %3, align 8
  %73 = getelementptr inbounds %struct.set_family, %struct.set_family* %72, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = load i32*, i32** %7, align 8
  %76 = sext i32 %74 to i64
  %77 = getelementptr inbounds i32, i32* %75, i64 %76
  store i32* %77, i32** %7, align 8
  br label %45

78:                                               ; preds = %45
  %79 = load i32*, i32** %5, align 8
  %80 = icmp ne i32* %79, null
  br i1 %80, label %81, label %84

81:                                               ; preds = %78
  %82 = load i32*, i32** %5, align 8
  %83 = bitcast i32* %82 to i8*
  call void @free(i8* %83) #7
  store i32* null, i32** %5, align 8
  br label %84

84:                                               ; preds = %81, %78
  %85 = load %struct.set_family*, %struct.set_family** %8, align 8
  ret %struct.set_family* %85
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @cb_consensus_dist0(%struct.set_family* %0, i32* %1, i32* %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  %18 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %19 = getelementptr inbounds i32*, i32** %18, i64 0
  %20 = load i32*, i32** %19, align 8
  store i32* %20, i32** %12, align 8
  %21 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %22 = getelementptr inbounds i32*, i32** %21, i64 1
  %23 = load i32*, i32** %22, align 8
  store i32* %23, i32** %13, align 8
  %24 = load i32*, i32** %6, align 8
  %25 = load i32*, i32** %7, align 8
  %26 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_implies to i32 (i32*, i32*, ...)*)(i32* %24, i32* %25)
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %3
  %29 = load %struct.set_family*, %struct.set_family** %5, align 8
  store %struct.set_family* %29, %struct.set_family** %4, align 8
  br label %239

30:                                               ; preds = %3
  %31 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %32 = icmp sle i32 %31, 32
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  br label %40

34:                                               ; preds = %30
  %35 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %36 = sub nsw i32 %35, 1
  %37 = ashr i32 %36, 5
  %38 = add nsw i32 %37, 1
  %39 = add nsw i32 %38, 1
  br label %40

40:                                               ; preds = %34, %33
  %41 = phi i32 [ 2, %33 ], [ %39, %34 ]
  %42 = sext i32 %41 to i64
  %43 = mul i64 4, %42
  %44 = call noalias i8* @malloc(i64 %43) #7
  %45 = bitcast i8* %44 to i32*
  %46 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %47 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %45, i32 %46)
  store i32* %47, i32** %10, align 8
  store i32 0, i32* %9, align 4
  %48 = load i32*, i32** %6, align 8
  %49 = getelementptr inbounds i32, i32* %48, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 1023
  store i32 %51, i32* %14, align 4
  %52 = load i32*, i32** %12, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 0
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, -1024
  store i32 %55, i32* %53, align 4
  %56 = load i32, i32* %14, align 4
  %57 = load i32*, i32** %12, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 0
  %59 = load i32, i32* %58, align 4
  %60 = or i32 %59, %56
  store i32 %60, i32* %58, align 4
  br label %61

61:                                               ; preds = %78, %40
  %62 = load i32*, i32** %6, align 8
  %63 = load i32, i32* %14, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %62, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = load i32*, i32** %7, align 8
  %68 = load i32, i32* %14, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %67, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = xor i32 %71, -1
  %73 = and i32 %66, %72
  %74 = load i32*, i32** %12, align 8
  %75 = load i32, i32* %14, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i32, i32* %74, i64 %76
  store i32 %73, i32* %77, align 4
  br label %78

78:                                               ; preds = %61
  %79 = load i32, i32* %14, align 4
  %80 = add nsw i32 %79, -1
  store i32 %80, i32* %14, align 4
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %61, label %82

82:                                               ; preds = %78
  %83 = load i32*, i32** %6, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 0
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, 1023
  store i32 %86, i32* %15, align 4
  %87 = load i32*, i32** %13, align 8
  %88 = getelementptr inbounds i32, i32* %87, i64 0
  %89 = load i32, i32* %88, align 4
  %90 = and i32 %89, -1024
  store i32 %90, i32* %88, align 4
  %91 = load i32, i32* %15, align 4
  %92 = load i32*, i32** %13, align 8
  %93 = getelementptr inbounds i32, i32* %92, i64 0
  %94 = load i32, i32* %93, align 4
  %95 = or i32 %94, %91
  store i32 %95, i32* %93, align 4
  br label %96

96:                                               ; preds = %112, %82
  %97 = load i32*, i32** %6, align 8
  %98 = load i32, i32* %15, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i32, i32* %97, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = load i32*, i32** %7, align 8
  %103 = load i32, i32* %15, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i32, i32* %102, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %101, %106
  %108 = load i32*, i32** %13, align 8
  %109 = load i32, i32* %15, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i32, i32* %108, i64 %110
  store i32 %107, i32* %111, align 4
  br label %112

112:                                              ; preds = %96
  %113 = load i32, i32* %15, align 4
  %114 = add nsw i32 %113, -1
  store i32 %114, i32* %15, align 4
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %96, label %116

116:                                              ; preds = %112
  %117 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %117, i32* %8, align 4
  br label %118

118:                                              ; preds = %184, %116
  %119 = load i32, i32* %8, align 4
  %120 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %121 = icmp slt i32 %119, %120
  br i1 %121, label %122, label %187

122:                                              ; preds = %118
  %123 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %124 = load i32, i32* %8, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i32*, i32** %123, i64 %125
  %127 = load i32*, i32** %126, align 8
  store i32* %127, i32** %11, align 8
  %128 = load i32*, i32** %12, align 8
  %129 = load i32*, i32** %11, align 8
  %130 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_disjoint to i32 (i32*, i32*, ...)*)(i32* %128, i32* %129)
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %183, label %132

132:                                              ; preds = %122
  %133 = load i32*, i32** %7, align 8
  %134 = getelementptr inbounds i32, i32* %133, i64 0
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %135, 1023
  store i32 %136, i32* %16, align 4
  %137 = load i32*, i32** %10, align 8
  %138 = getelementptr inbounds i32, i32* %137, i64 0
  %139 = load i32, i32* %138, align 4
  %140 = and i32 %139, -1024
  store i32 %140, i32* %138, align 4
  %141 = load i32, i32* %16, align 4
  %142 = load i32*, i32** %10, align 8
  %143 = getelementptr inbounds i32, i32* %142, i64 0
  %144 = load i32, i32* %143, align 4
  %145 = or i32 %144, %141
  store i32 %145, i32* %143, align 4
  br label %146

146:                                              ; preds = %175, %132
  %147 = load i32*, i32** %7, align 8
  %148 = load i32, i32* %16, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i32, i32* %147, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = load i32*, i32** %11, align 8
  %153 = load i32, i32* %16, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i32, i32* %152, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = and i32 %151, %156
  %158 = load i32*, i32** %13, align 8
  %159 = load i32, i32* %16, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i32, i32* %158, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = load i32*, i32** %11, align 8
  %164 = load i32, i32* %16, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i32, i32* %163, i64 %165
  %167 = load i32, i32* %166, align 4
  %168 = xor i32 %167, -1
  %169 = and i32 %162, %168
  %170 = or i32 %157, %169
  %171 = load i32*, i32** %10, align 8
  %172 = load i32, i32* %16, align 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i32, i32* %171, i64 %173
  store i32 %170, i32* %174, align 4
  br label %175

175:                                              ; preds = %146
  %176 = load i32, i32* %16, align 4
  %177 = add nsw i32 %176, -1
  store i32 %177, i32* %16, align 4
  %178 = icmp sgt i32 %177, 0
  br i1 %178, label %146, label %179

179:                                              ; preds = %175
  %180 = load %struct.set_family*, %struct.set_family** %5, align 8
  %181 = load i32*, i32** %10, align 8
  %182 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %180, i32* %181)
  store %struct.set_family* %182, %struct.set_family** %5, align 8
  store i32 1, i32* %9, align 4
  br label %183

183:                                              ; preds = %179, %122
  br label %184

184:                                              ; preds = %183
  %185 = load i32, i32* %8, align 4
  %186 = add nsw i32 %185, 1
  store i32 %186, i32* %8, align 4
  br label %118

187:                                              ; preds = %118
  %188 = load i32, i32* %9, align 4
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %231, label %190

190:                                              ; preds = %187
  %191 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %192 = icmp sgt i32 %191, 0
  br i1 %192, label %193, label %231

193:                                              ; preds = %190
  %194 = load i32*, i32** %6, align 8
  %195 = getelementptr inbounds i32, i32* %194, i64 0
  %196 = load i32, i32* %195, align 4
  %197 = and i32 %196, 1023
  store i32 %197, i32* %17, align 4
  %198 = load i32*, i32** %10, align 8
  %199 = getelementptr inbounds i32, i32* %198, i64 0
  %200 = load i32, i32* %199, align 4
  %201 = and i32 %200, -1024
  store i32 %201, i32* %199, align 4
  %202 = load i32, i32* %17, align 4
  %203 = load i32*, i32** %10, align 8
  %204 = getelementptr inbounds i32, i32* %203, i64 0
  %205 = load i32, i32* %204, align 4
  %206 = or i32 %205, %202
  store i32 %206, i32* %204, align 4
  br label %207

207:                                              ; preds = %223, %193
  %208 = load i32*, i32** %6, align 8
  %209 = load i32, i32* %17, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds i32, i32* %208, i64 %210
  %212 = load i32, i32* %211, align 4
  %213 = load i32*, i32** %7, align 8
  %214 = load i32, i32* %17, align 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds i32, i32* %213, i64 %215
  %217 = load i32, i32* %216, align 4
  %218 = and i32 %212, %217
  %219 = load i32*, i32** %10, align 8
  %220 = load i32, i32* %17, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds i32, i32* %219, i64 %221
  store i32 %218, i32* %222, align 4
  br label %223

223:                                              ; preds = %207
  %224 = load i32, i32* %17, align 4
  %225 = add nsw i32 %224, -1
  store i32 %225, i32* %17, align 4
  %226 = icmp sgt i32 %225, 0
  br i1 %226, label %207, label %227

227:                                              ; preds = %223
  %228 = load %struct.set_family*, %struct.set_family** %5, align 8
  %229 = load i32*, i32** %10, align 8
  %230 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %228, i32* %229)
  store %struct.set_family* %230, %struct.set_family** %5, align 8
  br label %231

231:                                              ; preds = %227, %190, %187
  %232 = load i32*, i32** %10, align 8
  %233 = icmp ne i32* %232, null
  br i1 %233, label %234, label %237

234:                                              ; preds = %231
  %235 = load i32*, i32** %10, align 8
  %236 = bitcast i32* %235 to i8*
  call void @free(i8* %236) #7
  store i32* null, i32** %10, align 8
  br label %237

237:                                              ; preds = %234, %231
  %238 = load %struct.set_family*, %struct.set_family** %5, align 8
  store %struct.set_family* %238, %struct.set_family** %4, align 8
  br label %239

239:                                              ; preds = %237, %28
  %240 = load %struct.set_family*, %struct.set_family** %4, align 8
  ret %struct.set_family* %240
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @minimize_exact(%struct.set_family* %0, %struct.set_family* %1, %struct.set_family* %2, i32 %3) #0 {
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %5, align 8
  store %struct.set_family* %1, %struct.set_family** %6, align 8
  store %struct.set_family* %2, %struct.set_family** %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load %struct.set_family*, %struct.set_family** %5, align 8
  %10 = load %struct.set_family*, %struct.set_family** %6, align 8
  %11 = load %struct.set_family*, %struct.set_family** %7, align 8
  %12 = load i32, i32* %8, align 4
  %13 = call %struct.set_family* @do_minimize(%struct.set_family* %9, %struct.set_family* %10, %struct.set_family* %11, i32 %12, i32 0)
  ret %struct.set_family* %13
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.set_family* @do_minimize(%struct.set_family* %0, %struct.set_family* %1, %struct.set_family* %2, i32 %3, i32 %4) #0 {
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.set_family*, align 8
  %12 = alloca %struct.set_family*, align 8
  %13 = alloca %struct.set_family*, align 8
  %14 = alloca %struct.set_family*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32*, align 8
  %20 = alloca %struct.sm_matrix_struct*, align 8
  %21 = alloca %struct.sm_row_struct*, align 8
  %22 = alloca %struct.sm_element_struct*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  store %struct.set_family* %0, %struct.set_family** %6, align 8
  store %struct.set_family* %1, %struct.set_family** %7, align 8
  store %struct.set_family* %2, %struct.set_family** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %28 = load i32, i32* @debug, align 4
  store i32 %28, i32* %23, align 4
  %29 = load i32, i32* @debug, align 4
  %30 = and i32 %29, 1024
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %5
  %33 = load i32, i32* @debug, align 4
  %34 = or i32 %33, 2080
  store i32 %34, i32* @debug, align 4
  br label %35

35:                                               ; preds = %32, %5
  %36 = load i32, i32* @debug, align 4
  %37 = and i32 %36, 2048
  %38 = icmp ne i32 %37, 0
  %39 = zext i1 %38 to i64
  %40 = select i1 %38, i32 4, i32 0
  store i32 %40, i32* %18, align 4
  %41 = load i32, i32* %9, align 4
  %42 = icmp ne i32 %41, 0
  %43 = xor i1 %42, true
  %44 = zext i1 %43 to i32
  store i32 %44, i32* %17, align 4
  %45 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %45, i64* %24, align 8
  %46 = load %struct.set_family*, %struct.set_family** %6, align 8
  %47 = load %struct.set_family*, %struct.set_family** %7, align 8
  %48 = call i32** (%struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*)* @cube2list to i32** (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %46, %struct.set_family* %47)
  %49 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @primes_consensus to %struct.set_family* (i32**, ...)*)(i32** %48)
  store %struct.set_family* %49, %struct.set_family** %6, align 8
  %50 = load i32, i32* @trace, align 4
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %35
  %53 = load %struct.set_family*, %struct.set_family** %6, align 8
  %54 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %55 = load i64, i64* %24, align 8
  %56 = sub nsw i64 %54, %55
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %53, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.163, i64 0, i64 0), i64 %56)
  br label %57

57:                                               ; preds = %52, %35
  %58 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %58, i64* %25, align 8
  %59 = load %struct.set_family*, %struct.set_family** %6, align 8
  %60 = load %struct.set_family*, %struct.set_family** %7, align 8
  call void (%struct.set_family*, %struct.set_family*, %struct.set_family**, %struct.set_family**, %struct.set_family**, ...) bitcast (void (%struct.set_family*, %struct.set_family*, %struct.set_family**, %struct.set_family**, %struct.set_family**)* @irred_split_cover to void (%struct.set_family*, %struct.set_family*, %struct.set_family**, %struct.set_family**, %struct.set_family**, ...)*)(%struct.set_family* %59, %struct.set_family* %60, %struct.set_family** %12, %struct.set_family** %13, %struct.set_family** %14)
  %61 = load i32, i32* @trace, align 4
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %68

63:                                               ; preds = %57
  %64 = load %struct.set_family*, %struct.set_family** %12, align 8
  %65 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %66 = load i64, i64* %25, align 8
  %67 = sub nsw i64 %65, %66
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %64, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.164, i64 0, i64 0), i64 %67)
  br label %68

68:                                               ; preds = %63, %57
  %69 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %69, i64* %26, align 8
  %70 = load %struct.set_family*, %struct.set_family** %7, align 8
  %71 = load %struct.set_family*, %struct.set_family** %12, align 8
  %72 = load %struct.set_family*, %struct.set_family** %14, align 8
  %73 = call %struct.sm_matrix_struct* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (%struct.sm_matrix_struct* (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @irred_derive_table to %struct.sm_matrix_struct* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %70, %struct.set_family* %71, %struct.set_family* %72)
  store %struct.sm_matrix_struct* %73, %struct.sm_matrix_struct** %20, align 8
  %74 = load i32, i32* @trace, align 4
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %81

76:                                               ; preds = %68
  %77 = load %struct.set_family*, %struct.set_family** %14, align 8
  %78 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %79 = load i64, i64* %26, align 8
  %80 = sub nsw i64 %78, %79
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %77, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.165, i64 0, i64 0), i64 %80)
  br label %81

81:                                               ; preds = %76, %68
  %82 = load i32, i32* %10, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %129

84:                                               ; preds = %81
  %85 = load %struct.set_family*, %struct.set_family** %6, align 8
  %86 = getelementptr inbounds %struct.set_family, %struct.set_family* %85, i32 0, i32 3
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = mul i64 4, %88
  %90 = call noalias i8* @malloc(i64 %89) #7
  %91 = bitcast i8* %90 to i32*
  store i32* %91, i32** %19, align 8
  %92 = load %struct.set_family*, %struct.set_family** %14, align 8
  %93 = getelementptr inbounds %struct.set_family, %struct.set_family* %92, i32 0, i32 5
  %94 = load i32*, i32** %93, align 8
  store i32* %94, i32** %15, align 8
  %95 = load i32*, i32** %15, align 8
  %96 = load %struct.set_family*, %struct.set_family** %14, align 8
  %97 = getelementptr inbounds %struct.set_family, %struct.set_family* %96, i32 0, i32 3
  %98 = load i32, i32* %97, align 4
  %99 = load %struct.set_family*, %struct.set_family** %14, align 8
  %100 = getelementptr inbounds %struct.set_family, %struct.set_family* %99, i32 0, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = mul nsw i32 %98, %101
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %95, i64 %103
  store i32* %104, i32** %16, align 8
  br label %105

105:                                              ; preds = %121, %84
  %106 = load i32*, i32** %15, align 8
  %107 = load i32*, i32** %16, align 8
  %108 = icmp ult i32* %106, %107
  br i1 %108, label %109, label %128

109:                                              ; preds = %105
  %110 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %111 = load i32*, i32** %15, align 8
  %112 = call i32 (i32*, ...) bitcast (i32 (i32*)* @set_ord to i32 (i32*, ...)*)(i32* %111)
  %113 = sub nsw i32 %110, %112
  %114 = load i32*, i32** %19, align 8
  %115 = load i32*, i32** %15, align 8
  %116 = getelementptr inbounds i32, i32* %115, i64 0
  %117 = load i32, i32* %116, align 4
  %118 = lshr i32 %117, 16
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds i32, i32* %114, i64 %119
  store i32 %113, i32* %120, align 4
  br label %121

121:                                              ; preds = %109
  %122 = load %struct.set_family*, %struct.set_family** %14, align 8
  %123 = getelementptr inbounds %struct.set_family, %struct.set_family* %122, i32 0, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = load i32*, i32** %15, align 8
  %126 = sext i32 %124 to i64
  %127 = getelementptr inbounds i32, i32* %125, i64 %126
  store i32* %127, i32** %15, align 8
  br label %105

128:                                              ; preds = %105
  br label %130

129:                                              ; preds = %81
  store i32* null, i32** %19, align 8
  br label %130

130:                                              ; preds = %129, %128
  %131 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %131, i64* %27, align 8
  %132 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %20, align 8
  %133 = load i32*, i32** %19, align 8
  %134 = load i32, i32* %17, align 4
  %135 = load i32, i32* %18, align 4
  %136 = call %struct.sm_row_struct* (%struct.sm_matrix_struct*, i32*, i32, i32, ...) bitcast (%struct.sm_row_struct* (%struct.sm_matrix_struct*, i32*, i32, i32)* @sm_minimum_cover to %struct.sm_row_struct* (%struct.sm_matrix_struct*, i32*, i32, i32, ...)*)(%struct.sm_matrix_struct* %132, i32* %133, i32 %134, i32 %135)
  store %struct.sm_row_struct* %136, %struct.sm_row_struct** %21, align 8
  %137 = load i32, i32* @trace, align 4
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %139, label %144

139:                                              ; preds = %130
  %140 = load %struct.set_family*, %struct.set_family** %6, align 8
  %141 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %142 = load i64, i64* %27, align 8
  %143 = sub nsw i64 %141, %142
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %140, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.166, i64 0, i64 0), i64 %143)
  br label %144

144:                                              ; preds = %139, %130
  %145 = load i32*, i32** %19, align 8
  %146 = icmp ne i32* %145, null
  br i1 %146, label %147, label %154

147:                                              ; preds = %144
  %148 = load i32*, i32** %19, align 8
  %149 = icmp ne i32* %148, null
  br i1 %149, label %150, label %153

150:                                              ; preds = %147
  %151 = load i32*, i32** %19, align 8
  %152 = bitcast i32* %151 to i8*
  call void @free(i8* %152) #7
  store i32* null, i32** %19, align 8
  br label %153

153:                                              ; preds = %150, %147
  br label %154

154:                                              ; preds = %153, %144
  %155 = load i32, i32* @debug, align 4
  %156 = and i32 %155, 1024
  %157 = icmp ne i32 %156, 0
  br i1 %157, label %158, label %163

158:                                              ; preds = %154
  %159 = load %struct.set_family*, %struct.set_family** %12, align 8
  %160 = load %struct.set_family*, %struct.set_family** %13, align 8
  %161 = load %struct.set_family*, %struct.set_family** %14, align 8
  %162 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %20, align 8
  call void @dump_irredundant(%struct.set_family* %159, %struct.set_family* %160, %struct.set_family* %161, %struct.sm_matrix_struct* %162)
  br label %163

163:                                              ; preds = %158, %154
  %164 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %165 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 100, i32 %164)
  store %struct.set_family* %165, %struct.set_family** %11, align 8
  %166 = load %struct.set_family*, %struct.set_family** %12, align 8
  %167 = getelementptr inbounds %struct.set_family, %struct.set_family* %166, i32 0, i32 5
  %168 = load i32*, i32** %167, align 8
  store i32* %168, i32** %15, align 8
  %169 = load i32*, i32** %15, align 8
  %170 = load %struct.set_family*, %struct.set_family** %12, align 8
  %171 = getelementptr inbounds %struct.set_family, %struct.set_family* %170, i32 0, i32 3
  %172 = load i32, i32* %171, align 4
  %173 = load %struct.set_family*, %struct.set_family** %12, align 8
  %174 = getelementptr inbounds %struct.set_family, %struct.set_family* %173, i32 0, i32 0
  %175 = load i32, i32* %174, align 8
  %176 = mul nsw i32 %172, %175
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i32, i32* %169, i64 %177
  store i32* %178, i32** %16, align 8
  br label %179

179:                                              ; preds = %187, %163
  %180 = load i32*, i32** %15, align 8
  %181 = load i32*, i32** %16, align 8
  %182 = icmp ult i32* %180, %181
  br i1 %182, label %183, label %194

183:                                              ; preds = %179
  %184 = load %struct.set_family*, %struct.set_family** %11, align 8
  %185 = load i32*, i32** %15, align 8
  %186 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %184, i32* %185)
  store %struct.set_family* %186, %struct.set_family** %11, align 8
  br label %187

187:                                              ; preds = %183
  %188 = load %struct.set_family*, %struct.set_family** %12, align 8
  %189 = getelementptr inbounds %struct.set_family, %struct.set_family* %188, i32 0, i32 0
  %190 = load i32, i32* %189, align 8
  %191 = load i32*, i32** %15, align 8
  %192 = sext i32 %190 to i64
  %193 = getelementptr inbounds i32, i32* %191, i64 %192
  store i32* %193, i32** %15, align 8
  br label %179

194:                                              ; preds = %179
  %195 = load %struct.sm_row_struct*, %struct.sm_row_struct** %21, align 8
  %196 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %195, i32 0, i32 3
  %197 = load %struct.sm_element_struct*, %struct.sm_element_struct** %196, align 8
  store %struct.sm_element_struct* %197, %struct.sm_element_struct** %22, align 8
  br label %198

198:                                              ; preds = %216, %194
  %199 = load %struct.sm_element_struct*, %struct.sm_element_struct** %22, align 8
  %200 = icmp ne %struct.sm_element_struct* %199, null
  br i1 %200, label %201, label %220

201:                                              ; preds = %198
  %202 = load %struct.set_family*, %struct.set_family** %11, align 8
  %203 = load %struct.set_family*, %struct.set_family** %6, align 8
  %204 = getelementptr inbounds %struct.set_family, %struct.set_family* %203, i32 0, i32 5
  %205 = load i32*, i32** %204, align 8
  %206 = load %struct.set_family*, %struct.set_family** %6, align 8
  %207 = getelementptr inbounds %struct.set_family, %struct.set_family* %206, i32 0, i32 0
  %208 = load i32, i32* %207, align 8
  %209 = load %struct.sm_element_struct*, %struct.sm_element_struct** %22, align 8
  %210 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %209, i32 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = mul nsw i32 %208, %211
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds i32, i32* %205, i64 %213
  %215 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %202, i32* %214)
  store %struct.set_family* %215, %struct.set_family** %11, align 8
  br label %216

216:                                              ; preds = %201
  %217 = load %struct.sm_element_struct*, %struct.sm_element_struct** %22, align 8
  %218 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %217, i32 0, i32 4
  %219 = load %struct.sm_element_struct*, %struct.sm_element_struct** %218, align 8
  store %struct.sm_element_struct* %219, %struct.sm_element_struct** %22, align 8
  br label %198

220:                                              ; preds = %198
  %221 = load %struct.set_family*, %struct.set_family** %12, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %221)
  %222 = load %struct.set_family*, %struct.set_family** %13, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %222)
  %223 = load %struct.set_family*, %struct.set_family** %14, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %223)
  %224 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %20, align 8
  call void (%struct.sm_matrix_struct*, ...) bitcast (void (%struct.sm_matrix_struct*)* @sm_free to void (%struct.sm_matrix_struct*, ...)*)(%struct.sm_matrix_struct* %224)
  %225 = load %struct.sm_row_struct*, %struct.sm_row_struct** %21, align 8
  call void (%struct.sm_row_struct*, ...) bitcast (void (%struct.sm_row_struct*)* @sm_row_free to void (%struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %225)
  %226 = load %struct.set_family*, %struct.set_family** %6, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %226)
  %227 = load i32, i32* @debug, align 4
  %228 = and i32 %227, -10273
  store i32 %228, i32* @debug, align 4
  %229 = load i32, i32* @skip_make_sparse, align 4
  %230 = icmp ne i32 %229, 0
  br i1 %230, label %239, label %231

231:                                              ; preds = %220
  %232 = load %struct.set_family*, %struct.set_family** %8, align 8
  %233 = icmp ne %struct.set_family* %232, null
  br i1 %233, label %234, label %239

234:                                              ; preds = %231
  %235 = load %struct.set_family*, %struct.set_family** %11, align 8
  %236 = load %struct.set_family*, %struct.set_family** %7, align 8
  %237 = load %struct.set_family*, %struct.set_family** %8, align 8
  %238 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @make_sparse to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %235, %struct.set_family* %236, %struct.set_family* %237)
  store %struct.set_family* %238, %struct.set_family** %11, align 8
  br label %239

239:                                              ; preds = %234, %231, %220
  %240 = load i32, i32* %23, align 4
  store i32 %240, i32* @debug, align 4
  %241 = load %struct.set_family*, %struct.set_family** %11, align 8
  ret %struct.set_family* %241
}

; Function Attrs: noinline nounwind uwtable
define internal void @dump_irredundant(%struct.set_family* %0, %struct.set_family* %1, %struct.set_family* %2, %struct.sm_matrix_struct* %3) #0 {
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.sm_matrix_struct*, align 8
  %9 = alloca %struct._IO_FILE*, align 8
  %10 = alloca %struct._IO_FILE*, align 8
  %11 = alloca %struct.PLA_t*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i8*, align 8
  store %struct.set_family* %0, %struct.set_family** %5, align 8
  store %struct.set_family* %1, %struct.set_family** %6, align 8
  store %struct.set_family* %2, %struct.set_family** %7, align 8
  store %struct.sm_matrix_struct* %3, %struct.sm_matrix_struct** %8, align 8
  %15 = load i8*, i8** @filename, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %4
  %18 = load i8*, i8** @filename, align 8
  %19 = call i32 @strcmp(i8* %18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.167, i64 0, i64 0)) #9
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %17, %4
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %22, %struct._IO_FILE** %10, align 8
  store %struct._IO_FILE* %22, %struct._IO_FILE** %9, align 8
  br label %58

23:                                               ; preds = %17
  %24 = load i8*, i8** @filename, align 8
  %25 = call i64 @strlen(i8* %24) #9
  %26 = add i64 %25, 20
  %27 = mul i64 1, %26
  %28 = call noalias i8* @malloc(i64 %27) #7
  store i8* %28, i8** %14, align 8
  %29 = load i8*, i8** %14, align 8
  %30 = load i8*, i8** @filename, align 8
  %31 = call i32 (i8*, i8*, ...) @sprintf(i8* %29, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.168, i64 0, i64 0), i8* %30) #7
  %32 = load i8*, i8** %14, align 8
  %33 = call %struct._IO_FILE* @fopen(i8* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.169, i64 0, i64 0))
  store %struct._IO_FILE* %33, %struct._IO_FILE** %10, align 8
  %34 = icmp eq %struct._IO_FILE* %33, null
  br i1 %34, label %35, label %40

35:                                               ; preds = %23
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %37 = load i8*, i8** %14, align 8
  %38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.170, i64 0, i64 0), i8* %37)
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %39, %struct._IO_FILE** %10, align 8
  br label %40

40:                                               ; preds = %35, %23
  %41 = load i8*, i8** %14, align 8
  %42 = load i8*, i8** @filename, align 8
  %43 = call i32 (i8*, i8*, ...) @sprintf(i8* %41, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8.171, i64 0, i64 0), i8* %42) #7
  %44 = load i8*, i8** %14, align 8
  %45 = call %struct._IO_FILE* @fopen(i8* %44, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.169, i64 0, i64 0))
  store %struct._IO_FILE* %45, %struct._IO_FILE** %9, align 8
  %46 = icmp eq %struct._IO_FILE* %45, null
  br i1 %46, label %47, label %52

47:                                               ; preds = %40
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %49 = load i8*, i8** %14, align 8
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.170, i64 0, i64 0), i8* %49)
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %51, %struct._IO_FILE** %9, align 8
  br label %52

52:                                               ; preds = %47, %40
  %53 = load i8*, i8** %14, align 8
  %54 = icmp ne i8* %53, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = load i8*, i8** %14, align 8
  call void @free(i8* %56) #7
  store i8* null, i8** %14, align 8
  br label %57

57:                                               ; preds = %55, %52
  br label %58

58:                                               ; preds = %57, %21
  %59 = call %struct.PLA_t* (...) bitcast (%struct.PLA_t* ()* @new_PLA to %struct.PLA_t* (...)*)()
  store %struct.PLA_t* %59, %struct.PLA_t** %11, align 8
  %60 = load %struct.PLA_t*, %struct.PLA_t** %11, align 8
  %61 = call i32 (%struct.PLA_t*, ...) bitcast (i32 (%struct.PLA_t*)* @PLA_labels to i32 (%struct.PLA_t*, ...)*)(%struct.PLA_t* %60)
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %63 = load %struct.PLA_t*, %struct.PLA_t** %11, align 8
  call void (%struct._IO_FILE*, %struct.PLA_t*, i32, ...) bitcast (void (%struct._IO_FILE*, %struct.PLA_t*, i32)* @fpr_header to void (%struct._IO_FILE*, %struct.PLA_t*, i32, ...)*)(%struct._IO_FILE* %62, %struct.PLA_t* %63, i32 1)
  %64 = load %struct.PLA_t*, %struct.PLA_t** %11, align 8
  call void (%struct.PLA_t*, ...) bitcast (void (%struct.PLA_t*)* @free_PLA to void (%struct.PLA_t*, ...)*)(%struct.PLA_t* %64)
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9.172, i64 0, i64 0))
  %67 = load %struct.set_family*, %struct.set_family** %5, align 8
  %68 = getelementptr inbounds %struct.set_family, %struct.set_family* %67, i32 0, i32 5
  %69 = load i32*, i32** %68, align 8
  store i32* %69, i32** %13, align 8
  %70 = load i32*, i32** %13, align 8
  %71 = load %struct.set_family*, %struct.set_family** %5, align 8
  %72 = getelementptr inbounds %struct.set_family, %struct.set_family* %71, i32 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = load %struct.set_family*, %struct.set_family** %5, align 8
  %75 = getelementptr inbounds %struct.set_family, %struct.set_family* %74, i32 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = mul nsw i32 %73, %76
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i32, i32* %70, i64 %78
  store i32* %79, i32** %12, align 8
  br label %80

80:                                               ; preds = %89, %58
  %81 = load i32*, i32** %13, align 8
  %82 = load i32*, i32** %12, align 8
  %83 = icmp ult i32* %81, %82
  br i1 %83, label %84, label %96

84:                                               ; preds = %80
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %86 = load i32*, i32** %13, align 8
  %87 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %86)
  %88 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %85, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10.173, i64 0, i64 0), i8* %87)
  br label %89

89:                                               ; preds = %84
  %90 = load %struct.set_family*, %struct.set_family** %5, align 8
  %91 = getelementptr inbounds %struct.set_family, %struct.set_family* %90, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = load i32*, i32** %13, align 8
  %94 = sext i32 %92 to i64
  %95 = getelementptr inbounds i32, i32* %93, i64 %94
  store i32* %95, i32** %13, align 8
  br label %80

96:                                               ; preds = %80
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %98 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %97, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.174, i64 0, i64 0))
  %99 = load %struct.set_family*, %struct.set_family** %6, align 8
  %100 = getelementptr inbounds %struct.set_family, %struct.set_family* %99, i32 0, i32 5
  %101 = load i32*, i32** %100, align 8
  store i32* %101, i32** %13, align 8
  %102 = load i32*, i32** %13, align 8
  %103 = load %struct.set_family*, %struct.set_family** %6, align 8
  %104 = getelementptr inbounds %struct.set_family, %struct.set_family* %103, i32 0, i32 3
  %105 = load i32, i32* %104, align 4
  %106 = load %struct.set_family*, %struct.set_family** %6, align 8
  %107 = getelementptr inbounds %struct.set_family, %struct.set_family* %106, i32 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = mul nsw i32 %105, %108
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i32, i32* %102, i64 %110
  store i32* %111, i32** %12, align 8
  br label %112

112:                                              ; preds = %121, %96
  %113 = load i32*, i32** %13, align 8
  %114 = load i32*, i32** %12, align 8
  %115 = icmp ult i32* %113, %114
  br i1 %115, label %116, label %128

116:                                              ; preds = %112
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %118 = load i32*, i32** %13, align 8
  %119 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %118)
  %120 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %117, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10.173, i64 0, i64 0), i8* %119)
  br label %121

121:                                              ; preds = %116
  %122 = load %struct.set_family*, %struct.set_family** %6, align 8
  %123 = getelementptr inbounds %struct.set_family, %struct.set_family* %122, i32 0, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = load i32*, i32** %13, align 8
  %126 = sext i32 %124 to i64
  %127 = getelementptr inbounds i32, i32* %125, i64 %126
  store i32* %127, i32** %13, align 8
  br label %112

128:                                              ; preds = %112
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %130 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %129, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.175, i64 0, i64 0))
  %131 = load %struct.set_family*, %struct.set_family** %7, align 8
  %132 = getelementptr inbounds %struct.set_family, %struct.set_family* %131, i32 0, i32 5
  %133 = load i32*, i32** %132, align 8
  store i32* %133, i32** %13, align 8
  %134 = load i32*, i32** %13, align 8
  %135 = load %struct.set_family*, %struct.set_family** %7, align 8
  %136 = getelementptr inbounds %struct.set_family, %struct.set_family* %135, i32 0, i32 3
  %137 = load i32, i32* %136, align 4
  %138 = load %struct.set_family*, %struct.set_family** %7, align 8
  %139 = getelementptr inbounds %struct.set_family, %struct.set_family* %138, i32 0, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = mul nsw i32 %137, %140
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i32, i32* %134, i64 %142
  store i32* %143, i32** %12, align 8
  br label %144

144:                                              ; preds = %153, %128
  %145 = load i32*, i32** %13, align 8
  %146 = load i32*, i32** %12, align 8
  %147 = icmp ult i32* %145, %146
  br i1 %147, label %148, label %160

148:                                              ; preds = %144
  %149 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %150 = load i32*, i32** %13, align 8
  %151 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %150)
  %152 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %149, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10.173, i64 0, i64 0), i8* %151)
  br label %153

153:                                              ; preds = %148
  %154 = load %struct.set_family*, %struct.set_family** %7, align 8
  %155 = getelementptr inbounds %struct.set_family, %struct.set_family* %154, i32 0, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = load i32*, i32** %13, align 8
  %158 = sext i32 %156 to i64
  %159 = getelementptr inbounds i32, i32* %157, i64 %158
  store i32* %159, i32** %13, align 8
  br label %144

160:                                              ; preds = %144
  %161 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %162 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %163 = icmp ne %struct._IO_FILE* %161, %162
  br i1 %163, label %164, label %167

164:                                              ; preds = %160
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %166 = call i32 @fclose(%struct._IO_FILE* %165)
  br label %167

167:                                              ; preds = %164, %160
  %168 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %169 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %8, align 8
  call void (%struct._IO_FILE*, %struct.sm_matrix_struct*, ...) bitcast (void (%struct._IO_FILE*, %struct.sm_matrix_struct*)* @sm_write to void (%struct._IO_FILE*, %struct.sm_matrix_struct*, ...)*)(%struct._IO_FILE* %168, %struct.sm_matrix_struct* %169)
  %170 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %171 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %172 = icmp ne %struct._IO_FILE* %170, %171
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %175 = call i32 @fclose(%struct._IO_FILE* %174)
  br label %176

176:                                              ; preds = %173, %167
  ret void
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @minimize_exact_literals(%struct.set_family* %0, %struct.set_family* %1, %struct.set_family* %2, i32 %3) #0 {
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %5, align 8
  store %struct.set_family* %1, %struct.set_family** %6, align 8
  store %struct.set_family* %2, %struct.set_family** %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load %struct.set_family*, %struct.set_family** %5, align 8
  %10 = load %struct.set_family*, %struct.set_family** %6, align 8
  %11 = load %struct.set_family*, %struct.set_family** %7, align 8
  %12 = load i32, i32* %8, align 4
  %13 = call %struct.set_family* @do_minimize(%struct.set_family* %9, %struct.set_family* %10, %struct.set_family* %11, i32 %12, i32 1)
  ret %struct.set_family* %13
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @expand(%struct.set_family* %0, %struct.set_family* %1, i32 %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store %struct.set_family* %1, %struct.set_family** %5, align 8
  store i32 %2, i32* %6, align 4
  %17 = load i32, i32* @use_random_order, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %3
  %20 = load %struct.set_family*, %struct.set_family** %4, align 8
  %21 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @random_order to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %20)
  store %struct.set_family* %21, %struct.set_family** %4, align 8
  br label %25

22:                                               ; preds = %3
  %23 = load %struct.set_family*, %struct.set_family** %4, align 8
  %24 = call %struct.set_family* (%struct.set_family*, i32 (...)*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32 (...)*)* @mini_sort to %struct.set_family* (%struct.set_family*, i32 (...)*, ...)*)(%struct.set_family* %23, i32 (...)* bitcast (i32 (i32**, i32**)* @ascend to i32 (...)*))
  store %struct.set_family* %24, %struct.set_family** %4, align 8
  br label %25

25:                                               ; preds = %22, %19
  %26 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %27 = icmp sle i32 %26, 32
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  br label %35

29:                                               ; preds = %25
  %30 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %31 = sub nsw i32 %30, 1
  %32 = ashr i32 %31, 5
  %33 = add nsw i32 %32, 1
  %34 = add nsw i32 %33, 1
  br label %35

35:                                               ; preds = %29, %28
  %36 = phi i32 [ 2, %28 ], [ %34, %29 ]
  %37 = sext i32 %36 to i64
  %38 = mul i64 4, %37
  %39 = call noalias i8* @malloc(i64 %38) #7
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %42 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %40, i32 %41)
  store i32* %42, i32** %9, align 8
  %43 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %44 = icmp sle i32 %43, 32
  br i1 %44, label %45, label %46

45:                                               ; preds = %35
  br label %52

46:                                               ; preds = %35
  %47 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %48 = sub nsw i32 %47, 1
  %49 = ashr i32 %48, 5
  %50 = add nsw i32 %49, 1
  %51 = add nsw i32 %50, 1
  br label %52

52:                                               ; preds = %46, %45
  %53 = phi i32 [ 2, %45 ], [ %51, %46 ]
  %54 = sext i32 %53 to i64
  %55 = mul i64 4, %54
  %56 = call noalias i8* @malloc(i64 %55) #7
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %59 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %57, i32 %58)
  store i32* %59, i32** %10, align 8
  %60 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %61 = icmp sle i32 %60, 32
  br i1 %61, label %62, label %63

62:                                               ; preds = %52
  br label %69

63:                                               ; preds = %52
  %64 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %65 = sub nsw i32 %64, 1
  %66 = ashr i32 %65, 5
  %67 = add nsw i32 %66, 1
  %68 = add nsw i32 %67, 1
  br label %69

69:                                               ; preds = %63, %62
  %70 = phi i32 [ 2, %62 ], [ %68, %63 ]
  %71 = sext i32 %70 to i64
  %72 = mul i64 4, %71
  %73 = call noalias i8* @malloc(i64 %72) #7
  %74 = bitcast i8* %73 to i32*
  %75 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %76 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %74, i32 %75)
  store i32* %76, i32** %11, align 8
  %77 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %78 = icmp sle i32 %77, 32
  br i1 %78, label %79, label %80

79:                                               ; preds = %69
  br label %86

80:                                               ; preds = %69
  %81 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %82 = sub nsw i32 %81, 1
  %83 = ashr i32 %82, 5
  %84 = add nsw i32 %83, 1
  %85 = add nsw i32 %84, 1
  br label %86

86:                                               ; preds = %80, %79
  %87 = phi i32 [ 2, %79 ], [ %85, %80 ]
  %88 = sext i32 %87 to i64
  %89 = mul i64 4, %88
  %90 = call noalias i8* @malloc(i64 %89) #7
  %91 = bitcast i8* %90 to i32*
  %92 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %93 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %91, i32 %92)
  store i32* %93, i32** %12, align 8
  %94 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %95 = icmp sle i32 %94, 32
  br i1 %95, label %96, label %97

96:                                               ; preds = %86
  br label %103

97:                                               ; preds = %86
  %98 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %99 = sub nsw i32 %98, 1
  %100 = ashr i32 %99, 5
  %101 = add nsw i32 %100, 1
  %102 = add nsw i32 %101, 1
  br label %103

103:                                              ; preds = %97, %96
  %104 = phi i32 [ 2, %96 ], [ %102, %97 ]
  %105 = sext i32 %104 to i64
  %106 = mul i64 4, %105
  %107 = call noalias i8* @malloc(i64 %106) #7
  %108 = bitcast i8* %107 to i32*
  %109 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %110 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %108, i32 %109)
  store i32* %110, i32** %13, align 8
  %111 = load i32, i32* %6, align 4
  %112 = icmp ne i32 %111, 0
  br i1 %112, label %113, label %139

113:                                              ; preds = %103
  store i32 0, i32* %14, align 4
  br label %114

114:                                              ; preds = %135, %113
  %115 = load i32, i32* %14, align 4
  %116 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %117 = icmp slt i32 %115, %116
  br i1 %117, label %118, label %138

118:                                              ; preds = %114
  %119 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 16), align 8
  %120 = load i32, i32* %14, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i32, i32* %119, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %134

125:                                              ; preds = %118
  %126 = load i32*, i32** %11, align 8
  %127 = load i32*, i32** %11, align 8
  %128 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %129 = load i32, i32* %14, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i32*, i32** %128, i64 %130
  %132 = load i32*, i32** %131, align 8
  %133 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %126, i32* %127, i32* %132)
  br label %134

134:                                              ; preds = %125, %118
  br label %135

135:                                              ; preds = %134
  %136 = load i32, i32* %14, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %14, align 4
  br label %114

138:                                              ; preds = %114
  br label %139

139:                                              ; preds = %138, %103
  %140 = load %struct.set_family*, %struct.set_family** %4, align 8
  %141 = getelementptr inbounds %struct.set_family, %struct.set_family* %140, i32 0, i32 5
  %142 = load i32*, i32** %141, align 8
  store i32* %142, i32** %8, align 8
  %143 = load i32*, i32** %8, align 8
  %144 = load %struct.set_family*, %struct.set_family** %4, align 8
  %145 = getelementptr inbounds %struct.set_family, %struct.set_family* %144, i32 0, i32 3
  %146 = load i32, i32* %145, align 4
  %147 = load %struct.set_family*, %struct.set_family** %4, align 8
  %148 = getelementptr inbounds %struct.set_family, %struct.set_family* %147, i32 0, i32 0
  %149 = load i32, i32* %148, align 8
  %150 = mul nsw i32 %146, %149
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i32, i32* %143, i64 %151
  store i32* %152, i32** %7, align 8
  br label %153

153:                                              ; preds = %166, %139
  %154 = load i32*, i32** %8, align 8
  %155 = load i32*, i32** %7, align 8
  %156 = icmp ult i32* %154, %155
  br i1 %156, label %157, label %173

157:                                              ; preds = %153
  %158 = load i32*, i32** %8, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 0
  %160 = load i32, i32* %159, align 4
  %161 = and i32 %160, -2049
  store i32 %161, i32* %159, align 4
  %162 = load i32*, i32** %8, align 8
  %163 = getelementptr inbounds i32, i32* %162, i64 0
  %164 = load i32, i32* %163, align 4
  %165 = and i32 %164, -16385
  store i32 %165, i32* %163, align 4
  br label %166

166:                                              ; preds = %157
  %167 = load %struct.set_family*, %struct.set_family** %4, align 8
  %168 = getelementptr inbounds %struct.set_family, %struct.set_family* %167, i32 0, i32 0
  %169 = load i32, i32* %168, align 8
  %170 = load i32*, i32** %8, align 8
  %171 = sext i32 %169 to i64
  %172 = getelementptr inbounds i32, i32* %170, i64 %171
  store i32* %172, i32** %8, align 8
  br label %153

173:                                              ; preds = %153
  %174 = load %struct.set_family*, %struct.set_family** %4, align 8
  %175 = getelementptr inbounds %struct.set_family, %struct.set_family* %174, i32 0, i32 5
  %176 = load i32*, i32** %175, align 8
  store i32* %176, i32** %8, align 8
  %177 = load i32*, i32** %8, align 8
  %178 = load %struct.set_family*, %struct.set_family** %4, align 8
  %179 = getelementptr inbounds %struct.set_family, %struct.set_family* %178, i32 0, i32 3
  %180 = load i32, i32* %179, align 4
  %181 = load %struct.set_family*, %struct.set_family** %4, align 8
  %182 = getelementptr inbounds %struct.set_family, %struct.set_family* %181, i32 0, i32 0
  %183 = load i32, i32* %182, align 8
  %184 = mul nsw i32 %180, %183
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds i32, i32* %177, i64 %185
  store i32* %186, i32** %7, align 8
  br label %187

187:                                              ; preds = %246, %173
  %188 = load i32*, i32** %8, align 8
  %189 = load i32*, i32** %7, align 8
  %190 = icmp ult i32* %188, %189
  br i1 %190, label %191, label %253

191:                                              ; preds = %187
  %192 = load i32*, i32** %8, align 8
  %193 = getelementptr inbounds i32, i32* %192, i64 0
  %194 = load i32, i32* %193, align 4
  %195 = and i32 %194, 32768
  %196 = icmp ne i32 %195, 0
  br i1 %196, label %245, label %197

197:                                              ; preds = %191
  %198 = load i32*, i32** %8, align 8
  %199 = getelementptr inbounds i32, i32* %198, i64 0
  %200 = load i32, i32* %199, align 4
  %201 = and i32 %200, 2048
  %202 = icmp ne i32 %201, 0
  br i1 %202, label %245, label %203

203:                                              ; preds = %197
  %204 = load %struct.set_family*, %struct.set_family** %5, align 8
  %205 = load %struct.set_family*, %struct.set_family** %4, align 8
  %206 = load i32*, i32** %9, align 8
  %207 = load i32*, i32** %10, align 8
  %208 = load i32*, i32** %13, align 8
  %209 = load i32*, i32** %12, align 8
  %210 = load i32*, i32** %11, align 8
  %211 = load i32*, i32** %8, align 8
  call void @expand1(%struct.set_family* %204, %struct.set_family* %205, i32* %206, i32* %207, i32* %208, i32* %209, i32* %210, i32* %15, i32* %211)
  %212 = load i32, i32* @debug, align 4
  %213 = and i32 %212, 4
  %214 = icmp ne i32 %213, 0
  br i1 %214, label %215, label %220

215:                                              ; preds = %203
  %216 = load i32*, i32** %8, align 8
  %217 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %216)
  %218 = load i32, i32* %15, align 4
  %219 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.178, i64 0, i64 0), i8* %217, i32 %218)
  br label %220

220:                                              ; preds = %215, %203
  %221 = load i32*, i32** %8, align 8
  %222 = load i32*, i32** %9, align 8
  %223 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %221, i32* %222)
  %224 = load i32*, i32** %8, align 8
  %225 = getelementptr inbounds i32, i32* %224, i64 0
  %226 = load i32, i32* %225, align 4
  %227 = or i32 %226, 32768
  store i32 %227, i32* %225, align 4
  %228 = load i32*, i32** %8, align 8
  %229 = getelementptr inbounds i32, i32* %228, i64 0
  %230 = load i32, i32* %229, align 4
  %231 = and i32 %230, -2049
  store i32 %231, i32* %229, align 4
  %232 = load i32, i32* %15, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %244

234:                                              ; preds = %220
  %235 = load i32*, i32** %8, align 8
  %236 = load i32*, i32** %13, align 8
  %237 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_equal to i32 (i32*, i32*, ...)*)(i32* %235, i32* %236)
  %238 = icmp ne i32 %237, 0
  br i1 %238, label %244, label %239

239:                                              ; preds = %234
  %240 = load i32*, i32** %8, align 8
  %241 = getelementptr inbounds i32, i32* %240, i64 0
  %242 = load i32, i32* %241, align 4
  %243 = or i32 %242, 16384
  store i32 %243, i32* %241, align 4
  br label %244

244:                                              ; preds = %239, %234, %220
  br label %245

245:                                              ; preds = %244, %197, %191
  br label %246

246:                                              ; preds = %245
  %247 = load %struct.set_family*, %struct.set_family** %4, align 8
  %248 = getelementptr inbounds %struct.set_family, %struct.set_family* %247, i32 0, i32 0
  %249 = load i32, i32* %248, align 8
  %250 = load i32*, i32** %8, align 8
  %251 = sext i32 %249 to i64
  %252 = getelementptr inbounds i32, i32* %250, i64 %251
  store i32* %252, i32** %8, align 8
  br label %187

253:                                              ; preds = %187
  %254 = load %struct.set_family*, %struct.set_family** %4, align 8
  %255 = getelementptr inbounds %struct.set_family, %struct.set_family* %254, i32 0, i32 4
  store i32 0, i32* %255, align 8
  store i32 0, i32* %16, align 4
  %256 = load %struct.set_family*, %struct.set_family** %4, align 8
  %257 = getelementptr inbounds %struct.set_family, %struct.set_family* %256, i32 0, i32 5
  %258 = load i32*, i32** %257, align 8
  store i32* %258, i32** %8, align 8
  %259 = load i32*, i32** %8, align 8
  %260 = load %struct.set_family*, %struct.set_family** %4, align 8
  %261 = getelementptr inbounds %struct.set_family, %struct.set_family* %260, i32 0, i32 3
  %262 = load i32, i32* %261, align 4
  %263 = load %struct.set_family*, %struct.set_family** %4, align 8
  %264 = getelementptr inbounds %struct.set_family, %struct.set_family* %263, i32 0, i32 0
  %265 = load i32, i32* %264, align 8
  %266 = mul nsw i32 %262, %265
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds i32, i32* %259, i64 %267
  store i32* %268, i32** %7, align 8
  br label %269

269:                                              ; preds = %294, %253
  %270 = load i32*, i32** %8, align 8
  %271 = load i32*, i32** %7, align 8
  %272 = icmp ult i32* %270, %271
  br i1 %272, label %273, label %301

273:                                              ; preds = %269
  %274 = load i32*, i32** %8, align 8
  %275 = getelementptr inbounds i32, i32* %274, i64 0
  %276 = load i32, i32* %275, align 4
  %277 = and i32 %276, 2048
  %278 = icmp ne i32 %277, 0
  br i1 %278, label %279, label %284

279:                                              ; preds = %273
  %280 = load i32*, i32** %8, align 8
  %281 = getelementptr inbounds i32, i32* %280, i64 0
  %282 = load i32, i32* %281, align 4
  %283 = and i32 %282, -8193
  store i32 %283, i32* %281, align 4
  store i32 1, i32* %16, align 4
  br label %293

284:                                              ; preds = %273
  %285 = load i32*, i32** %8, align 8
  %286 = getelementptr inbounds i32, i32* %285, i64 0
  %287 = load i32, i32* %286, align 4
  %288 = or i32 %287, 8192
  store i32 %288, i32* %286, align 4
  %289 = load %struct.set_family*, %struct.set_family** %4, align 8
  %290 = getelementptr inbounds %struct.set_family, %struct.set_family* %289, i32 0, i32 4
  %291 = load i32, i32* %290, align 8
  %292 = add nsw i32 %291, 1
  store i32 %292, i32* %290, align 8
  br label %293

293:                                              ; preds = %284, %279
  br label %294

294:                                              ; preds = %293
  %295 = load %struct.set_family*, %struct.set_family** %4, align 8
  %296 = getelementptr inbounds %struct.set_family, %struct.set_family* %295, i32 0, i32 0
  %297 = load i32, i32* %296, align 8
  %298 = load i32*, i32** %8, align 8
  %299 = sext i32 %297 to i64
  %300 = getelementptr inbounds i32, i32* %298, i64 %299
  store i32* %300, i32** %8, align 8
  br label %269

301:                                              ; preds = %269
  %302 = load i32, i32* %16, align 4
  %303 = icmp ne i32 %302, 0
  br i1 %303, label %304, label %307

304:                                              ; preds = %301
  %305 = load %struct.set_family*, %struct.set_family** %4, align 8
  %306 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_inactive to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %305)
  store %struct.set_family* %306, %struct.set_family** %4, align 8
  br label %307

307:                                              ; preds = %304, %301
  %308 = load i32*, i32** %9, align 8
  %309 = icmp ne i32* %308, null
  br i1 %309, label %310, label %313

310:                                              ; preds = %307
  %311 = load i32*, i32** %9, align 8
  %312 = bitcast i32* %311 to i8*
  call void @free(i8* %312) #7
  store i32* null, i32** %9, align 8
  br label %313

313:                                              ; preds = %310, %307
  %314 = load i32*, i32** %10, align 8
  %315 = icmp ne i32* %314, null
  br i1 %315, label %316, label %319

316:                                              ; preds = %313
  %317 = load i32*, i32** %10, align 8
  %318 = bitcast i32* %317 to i8*
  call void @free(i8* %318) #7
  store i32* null, i32** %10, align 8
  br label %319

319:                                              ; preds = %316, %313
  %320 = load i32*, i32** %11, align 8
  %321 = icmp ne i32* %320, null
  br i1 %321, label %322, label %325

322:                                              ; preds = %319
  %323 = load i32*, i32** %11, align 8
  %324 = bitcast i32* %323 to i8*
  call void @free(i8* %324) #7
  store i32* null, i32** %11, align 8
  br label %325

325:                                              ; preds = %322, %319
  %326 = load i32*, i32** %12, align 8
  %327 = icmp ne i32* %326, null
  br i1 %327, label %328, label %331

328:                                              ; preds = %325
  %329 = load i32*, i32** %12, align 8
  %330 = bitcast i32* %329 to i8*
  call void @free(i8* %330) #7
  store i32* null, i32** %12, align 8
  br label %331

331:                                              ; preds = %328, %325
  %332 = load i32*, i32** %13, align 8
  %333 = icmp ne i32* %332, null
  br i1 %333, label %334, label %337

334:                                              ; preds = %331
  %335 = load i32*, i32** %13, align 8
  %336 = bitcast i32* %335 to i8*
  call void @free(i8* %336) #7
  store i32* null, i32** %13, align 8
  br label %337

337:                                              ; preds = %334, %331
  %338 = load %struct.set_family*, %struct.set_family** %4, align 8
  ret %struct.set_family* %338
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @expand1(%struct.set_family* %0, %struct.set_family* %1, i32* %2, i32* %3, i32* %4, i32* %5, i32* %6, i32* %7, i32* %8) #0 {
  %10 = alloca %struct.set_family*, align 8
  %11 = alloca %struct.set_family*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %10, align 8
  store %struct.set_family* %1, %struct.set_family** %11, align 8
  store i32* %2, i32** %12, align 8
  store i32* %3, i32** %13, align 8
  store i32* %4, i32** %14, align 8
  store i32* %5, i32** %15, align 8
  store i32* %6, i32** %16, align 8
  store i32* %7, i32** %17, align 8
  store i32* %8, i32** %18, align 8
  %20 = load i32, i32* @debug, align 4
  %21 = and i32 %20, 8
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %9
  %24 = load i32*, i32** %18, align 8
  %25 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %24)
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.179, i64 0, i64 0), i8* %25)
  br label %27

27:                                               ; preds = %23, %9
  %28 = load i32*, i32** %18, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 0
  %30 = load i32, i32* %29, align 4
  %31 = or i32 %30, 32768
  store i32 %31, i32* %29, align 4
  %32 = load %struct.set_family*, %struct.set_family** %10, align 8
  %33 = load %struct.set_family*, %struct.set_family** %11, align 8
  call void @setup_BB_CC(%struct.set_family* %32, %struct.set_family* %33)
  %34 = load i32*, i32** %17, align 8
  store i32 0, i32* %34, align 4
  %35 = load i32*, i32** %15, align 8
  %36 = load i32*, i32** %18, align 8
  %37 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %35, i32* %36)
  %38 = load i32*, i32** %12, align 8
  %39 = load i32*, i32** %18, align 8
  %40 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %38, i32* %39)
  %41 = load i32*, i32** %13, align 8
  %42 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %43 = load i32*, i32** %12, align 8
  %44 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %41, i32* %42, i32* %43)
  %45 = load i32*, i32** %16, align 8
  %46 = call i32 (i32*, ...) bitcast (i32 (i32*)* @setp_empty to i32 (i32*, ...)*)(i32* %45)
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %57, label %48

48:                                               ; preds = %27
  %49 = load i32*, i32** %13, align 8
  %50 = load i32*, i32** %13, align 8
  %51 = load i32*, i32** %16, align 8
  %52 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %49, i32* %50, i32* %51)
  %53 = load %struct.set_family*, %struct.set_family** %10, align 8
  %54 = load %struct.set_family*, %struct.set_family** %11, align 8
  %55 = load i32*, i32** %12, align 8
  %56 = load i32*, i32** %13, align 8
  call void @elim_lowering(%struct.set_family* %53, %struct.set_family* %54, i32* %55, i32* %56)
  br label %57

57:                                               ; preds = %48, %27
  %58 = load %struct.set_family*, %struct.set_family** %10, align 8
  %59 = load %struct.set_family*, %struct.set_family** %11, align 8
  %60 = load i32*, i32** %12, align 8
  %61 = load i32*, i32** %13, align 8
  call void @essen_parts(%struct.set_family* %58, %struct.set_family* %59, i32* %60, i32* %61)
  %62 = load i32*, i32** %14, align 8
  %63 = load i32*, i32** %12, align 8
  %64 = load i32*, i32** %13, align 8
  %65 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %62, i32* %63, i32* %64)
  %66 = load %struct.set_family*, %struct.set_family** %11, align 8
  %67 = getelementptr inbounds %struct.set_family, %struct.set_family* %66, i32 0, i32 4
  %68 = load i32, i32* %67, align 8
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %57
  %71 = load %struct.set_family*, %struct.set_family** %10, align 8
  %72 = load %struct.set_family*, %struct.set_family** %11, align 8
  %73 = load i32*, i32** %12, align 8
  %74 = load i32*, i32** %13, align 8
  %75 = load i32*, i32** %15, align 8
  %76 = load i32*, i32** %17, align 8
  call void @select_feasible(%struct.set_family* %71, %struct.set_family* %72, i32* %73, i32* %74, i32* %75, i32* %76)
  br label %77

77:                                               ; preds = %70, %57
  br label %78

78:                                               ; preds = %83, %77
  %79 = load %struct.set_family*, %struct.set_family** %11, align 8
  %80 = getelementptr inbounds %struct.set_family, %struct.set_family* %79, i32 0, i32 4
  %81 = load i32, i32* %80, align 8
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %114

83:                                               ; preds = %78
  %84 = load %struct.set_family*, %struct.set_family** %11, align 8
  %85 = load i32*, i32** %13, align 8
  %86 = call i32 @most_frequent(%struct.set_family* %84, i32* %85)
  store i32 %86, i32* %19, align 4
  %87 = load i32, i32* %19, align 4
  %88 = and i32 %87, 31
  %89 = shl i32 1, %88
  %90 = load i32*, i32** %12, align 8
  %91 = load i32, i32* %19, align 4
  %92 = ashr i32 %91, 5
  %93 = add nsw i32 %92, 1
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i32, i32* %90, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = or i32 %96, %89
  store i32 %97, i32* %95, align 4
  %98 = load i32, i32* %19, align 4
  %99 = and i32 %98, 31
  %100 = shl i32 1, %99
  %101 = xor i32 %100, -1
  %102 = load i32*, i32** %13, align 8
  %103 = load i32, i32* %19, align 4
  %104 = ashr i32 %103, 5
  %105 = add nsw i32 %104, 1
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i32, i32* %102, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = and i32 %108, %101
  store i32 %109, i32* %107, align 4
  %110 = load %struct.set_family*, %struct.set_family** %10, align 8
  %111 = load %struct.set_family*, %struct.set_family** %11, align 8
  %112 = load i32*, i32** %12, align 8
  %113 = load i32*, i32** %13, align 8
  call void @essen_parts(%struct.set_family* %110, %struct.set_family* %111, i32* %112, i32* %113)
  br label %78

114:                                              ; preds = %78
  br label %115

115:                                              ; preds = %120, %114
  %116 = load %struct.set_family*, %struct.set_family** %10, align 8
  %117 = getelementptr inbounds %struct.set_family, %struct.set_family* %116, i32 0, i32 4
  %118 = load i32, i32* %117, align 8
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %120, label %124

120:                                              ; preds = %115
  %121 = load %struct.set_family*, %struct.set_family** %10, align 8
  %122 = load i32*, i32** %12, align 8
  %123 = load i32*, i32** %13, align 8
  call void @mincov(%struct.set_family* %121, i32* %122, i32* %123)
  br label %115

124:                                              ; preds = %115
  %125 = load i32*, i32** %12, align 8
  %126 = load i32*, i32** %12, align 8
  %127 = load i32*, i32** %13, align 8
  %128 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %125, i32* %126, i32* %127)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @setup_BB_CC(%struct.set_family* %0, %struct.set_family* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  %7 = load %struct.set_family*, %struct.set_family** %3, align 8
  %8 = getelementptr inbounds %struct.set_family, %struct.set_family* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = load %struct.set_family*, %struct.set_family** %3, align 8
  %11 = getelementptr inbounds %struct.set_family, %struct.set_family* %10, i32 0, i32 4
  store i32 %9, i32* %11, align 8
  %12 = load %struct.set_family*, %struct.set_family** %3, align 8
  %13 = getelementptr inbounds %struct.set_family, %struct.set_family* %12, i32 0, i32 5
  %14 = load i32*, i32** %13, align 8
  store i32* %14, i32** %5, align 8
  %15 = load i32*, i32** %5, align 8
  %16 = load %struct.set_family*, %struct.set_family** %3, align 8
  %17 = getelementptr inbounds %struct.set_family, %struct.set_family* %16, i32 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = load %struct.set_family*, %struct.set_family** %3, align 8
  %20 = getelementptr inbounds %struct.set_family, %struct.set_family* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = mul nsw i32 %18, %21
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i32, i32* %15, i64 %23
  store i32* %24, i32** %6, align 8
  br label %25

25:                                               ; preds = %34, %2
  %26 = load i32*, i32** %5, align 8
  %27 = load i32*, i32** %6, align 8
  %28 = icmp ult i32* %26, %27
  br i1 %28, label %29, label %41

29:                                               ; preds = %25
  %30 = load i32*, i32** %5, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 0
  %32 = load i32, i32* %31, align 4
  %33 = or i32 %32, 8192
  store i32 %33, i32* %31, align 4
  br label %34

34:                                               ; preds = %29
  %35 = load %struct.set_family*, %struct.set_family** %3, align 8
  %36 = getelementptr inbounds %struct.set_family, %struct.set_family* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = load i32*, i32** %5, align 8
  %39 = sext i32 %37 to i64
  %40 = getelementptr inbounds i32, i32* %38, i64 %39
  store i32* %40, i32** %5, align 8
  br label %25

41:                                               ; preds = %25
  %42 = load %struct.set_family*, %struct.set_family** %4, align 8
  %43 = icmp ne %struct.set_family* %42, null
  br i1 %43, label %44, label %102

44:                                               ; preds = %41
  %45 = load %struct.set_family*, %struct.set_family** %4, align 8
  %46 = getelementptr inbounds %struct.set_family, %struct.set_family* %45, i32 0, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = load %struct.set_family*, %struct.set_family** %4, align 8
  %49 = getelementptr inbounds %struct.set_family, %struct.set_family* %48, i32 0, i32 4
  store i32 %47, i32* %49, align 8
  %50 = load %struct.set_family*, %struct.set_family** %4, align 8
  %51 = getelementptr inbounds %struct.set_family, %struct.set_family* %50, i32 0, i32 5
  %52 = load i32*, i32** %51, align 8
  store i32* %52, i32** %5, align 8
  %53 = load i32*, i32** %5, align 8
  %54 = load %struct.set_family*, %struct.set_family** %4, align 8
  %55 = getelementptr inbounds %struct.set_family, %struct.set_family* %54, i32 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = load %struct.set_family*, %struct.set_family** %4, align 8
  %58 = getelementptr inbounds %struct.set_family, %struct.set_family* %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = mul nsw i32 %56, %59
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i32, i32* %53, i64 %61
  store i32* %62, i32** %6, align 8
  br label %63

63:                                               ; preds = %94, %44
  %64 = load i32*, i32** %5, align 8
  %65 = load i32*, i32** %6, align 8
  %66 = icmp ult i32* %64, %65
  br i1 %66, label %67, label %101

67:                                               ; preds = %63
  %68 = load i32*, i32** %5, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 0
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, 2048
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %67
  %74 = load i32*, i32** %5, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 0
  %76 = load i32, i32* %75, align 4
  %77 = and i32 %76, 32768
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %73, %67
  %80 = load %struct.set_family*, %struct.set_family** %4, align 8
  %81 = getelementptr inbounds %struct.set_family, %struct.set_family* %80, i32 0, i32 4
  %82 = load i32, i32* %81, align 8
  %83 = add nsw i32 %82, -1
  store i32 %83, i32* %81, align 8
  %84 = load i32*, i32** %5, align 8
  %85 = getelementptr inbounds i32, i32* %84, i64 0
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, -8193
  store i32 %87, i32* %85, align 4
  br label %93

88:                                               ; preds = %73
  %89 = load i32*, i32** %5, align 8
  %90 = getelementptr inbounds i32, i32* %89, i64 0
  %91 = load i32, i32* %90, align 4
  %92 = or i32 %91, 8192
  store i32 %92, i32* %90, align 4
  br label %93

93:                                               ; preds = %88, %79
  br label %94

94:                                               ; preds = %93
  %95 = load %struct.set_family*, %struct.set_family** %4, align 8
  %96 = getelementptr inbounds %struct.set_family, %struct.set_family* %95, i32 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = load i32*, i32** %5, align 8
  %99 = sext i32 %97 to i64
  %100 = getelementptr inbounds i32, i32* %98, i64 %99
  store i32* %100, i32** %5, align 8
  br label %63

101:                                              ; preds = %63
  br label %102

102:                                              ; preds = %101, %41
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @elim_lowering(%struct.set_family* %0, %struct.set_family* %1, i32* %2, i32* %3) #0 {
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32*, align 8
  %19 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %5, align 8
  store %struct.set_family* %1, %struct.set_family** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %20 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %21 = getelementptr inbounds i32*, i32** %20, i64 0
  %22 = load i32*, i32** %21, align 8
  %23 = load i32*, i32** %7, align 8
  %24 = load i32*, i32** %8, align 8
  %25 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %22, i32* %23, i32* %24)
  store i32* %25, i32** %10, align 8
  %26 = load %struct.set_family*, %struct.set_family** %5, align 8
  %27 = getelementptr inbounds %struct.set_family, %struct.set_family* %26, i32 0, i32 5
  %28 = load i32*, i32** %27, align 8
  store i32* %28, i32** %9, align 8
  %29 = load i32*, i32** %9, align 8
  %30 = load %struct.set_family*, %struct.set_family** %5, align 8
  %31 = getelementptr inbounds %struct.set_family, %struct.set_family* %30, i32 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = load %struct.set_family*, %struct.set_family** %5, align 8
  %34 = getelementptr inbounds %struct.set_family, %struct.set_family* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = mul nsw i32 %32, %35
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %29, i64 %37
  store i32* %38, i32** %11, align 8
  br label %39

39:                                               ; preds = %169, %4
  %40 = load i32*, i32** %9, align 8
  %41 = load i32*, i32** %11, align 8
  %42 = icmp ult i32* %40, %41
  br i1 %42, label %43, label %176

43:                                               ; preds = %39
  %44 = load i32*, i32** %9, align 8
  %45 = getelementptr inbounds i32, i32* %44, i64 0
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 8192
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %168

49:                                               ; preds = %43
  %50 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 15), align 4
  store i32 %50, i32* %13, align 4
  %51 = icmp ne i32 %50, -1
  br i1 %51, label %52, label %103

52:                                               ; preds = %49
  %53 = load i32*, i32** %9, align 8
  %54 = load i32, i32* %13, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %53, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = load i32*, i32** %10, align 8
  %59 = load i32, i32* %13, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %58, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %57, %62
  store i32 %63, i32* %14, align 4
  %64 = load i32, i32* %14, align 4
  %65 = load i32, i32* %14, align 4
  %66 = lshr i32 %65, 1
  %67 = or i32 %64, %66
  %68 = xor i32 %67, -1
  %69 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 14), align 8
  %70 = and i32 %68, %69
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %52
  br label %159

73:                                               ; preds = %52
  store i32 1, i32* %12, align 4
  br label %74

74:                                               ; preds = %99, %73
  %75 = load i32, i32* %12, align 4
  %76 = load i32, i32* %13, align 4
  %77 = icmp slt i32 %75, %76
  br i1 %77, label %78, label %102

78:                                               ; preds = %74
  %79 = load i32*, i32** %9, align 8
  %80 = load i32, i32* %12, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i32, i32* %79, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = load i32*, i32** %10, align 8
  %85 = load i32, i32* %12, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i32, i32* %84, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = and i32 %83, %88
  store i32 %89, i32* %14, align 4
  %90 = load i32, i32* %14, align 4
  %91 = load i32, i32* %14, align 4
  %92 = lshr i32 %91, 1
  %93 = or i32 %90, %92
  %94 = xor i32 %93, -1
  %95 = and i32 %94, 1431655765
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %78
  br label %159

98:                                               ; preds = %78
  br label %99

99:                                               ; preds = %98
  %100 = load i32, i32* %12, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %12, align 4
  br label %74

102:                                              ; preds = %74
  br label %103

103:                                              ; preds = %102, %49
  %104 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %104, i32* %16, align 4
  br label %105

105:                                              ; preds = %155, %103
  %106 = load i32, i32* %16, align 4
  %107 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %108 = icmp slt i32 %106, %107
  br i1 %108, label %109, label %158

109:                                              ; preds = %105
  %110 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %111 = load i32, i32* %16, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i32*, i32** %110, i64 %112
  %114 = load i32*, i32** %113, align 8
  store i32* %114, i32** %18, align 8
  %115 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  %116 = load i32, i32* %16, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, i32* %115, i64 %117
  %119 = load i32, i32* %118, align 4
  store i32 %119, i32* %17, align 4
  %120 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %121 = load i32, i32* %16, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i32, i32* %120, i64 %122
  %124 = load i32, i32* %123, align 4
  store i32 %124, i32* %15, align 4
  br label %125

125:                                              ; preds = %150, %109
  %126 = load i32, i32* %15, align 4
  %127 = load i32, i32* %17, align 4
  %128 = icmp sle i32 %126, %127
  br i1 %128, label %129, label %153

129:                                              ; preds = %125
  %130 = load i32*, i32** %9, align 8
  %131 = load i32, i32* %15, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i32, i32* %130, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = load i32*, i32** %10, align 8
  %136 = load i32, i32* %15, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i32, i32* %135, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = and i32 %134, %139
  %141 = load i32*, i32** %18, align 8
  %142 = load i32, i32* %15, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds i32, i32* %141, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = and i32 %140, %145
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %129
  br label %154

149:                                              ; preds = %129
  br label %150

150:                                              ; preds = %149
  %151 = load i32, i32* %15, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %15, align 4
  br label %125

153:                                              ; preds = %125
  br label %159

154:                                              ; preds = %148
  br label %155

155:                                              ; preds = %154
  %156 = load i32, i32* %16, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %16, align 4
  br label %105

158:                                              ; preds = %105
  br label %169

159:                                              ; preds = %153, %97, %72
  %160 = load %struct.set_family*, %struct.set_family** %5, align 8
  %161 = getelementptr inbounds %struct.set_family, %struct.set_family* %160, i32 0, i32 4
  %162 = load i32, i32* %161, align 8
  %163 = add nsw i32 %162, -1
  store i32 %163, i32* %161, align 8
  %164 = load i32*, i32** %9, align 8
  %165 = getelementptr inbounds i32, i32* %164, i64 0
  %166 = load i32, i32* %165, align 4
  %167 = and i32 %166, -8193
  store i32 %167, i32* %165, align 4
  br label %168

168:                                              ; preds = %159, %43
  br label %169

169:                                              ; preds = %168, %158
  %170 = load %struct.set_family*, %struct.set_family** %5, align 8
  %171 = getelementptr inbounds %struct.set_family, %struct.set_family* %170, i32 0, i32 0
  %172 = load i32, i32* %171, align 8
  %173 = load i32*, i32** %9, align 8
  %174 = sext i32 %172 to i64
  %175 = getelementptr inbounds i32, i32* %173, i64 %174
  store i32* %175, i32** %9, align 8
  br label %39

176:                                              ; preds = %39
  %177 = load %struct.set_family*, %struct.set_family** %6, align 8
  %178 = icmp ne %struct.set_family* %177, null
  br i1 %178, label %179, label %251

179:                                              ; preds = %176
  %180 = load %struct.set_family*, %struct.set_family** %6, align 8
  %181 = getelementptr inbounds %struct.set_family, %struct.set_family* %180, i32 0, i32 5
  %182 = load i32*, i32** %181, align 8
  store i32* %182, i32** %9, align 8
  %183 = load i32*, i32** %9, align 8
  %184 = load %struct.set_family*, %struct.set_family** %6, align 8
  %185 = getelementptr inbounds %struct.set_family, %struct.set_family* %184, i32 0, i32 3
  %186 = load i32, i32* %185, align 4
  %187 = load %struct.set_family*, %struct.set_family** %6, align 8
  %188 = getelementptr inbounds %struct.set_family, %struct.set_family* %187, i32 0, i32 0
  %189 = load i32, i32* %188, align 8
  %190 = mul nsw i32 %186, %189
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i32, i32* %183, i64 %191
  store i32* %192, i32** %11, align 8
  br label %193

193:                                              ; preds = %243, %179
  %194 = load i32*, i32** %9, align 8
  %195 = load i32*, i32** %11, align 8
  %196 = icmp ult i32* %194, %195
  br i1 %196, label %197, label %250

197:                                              ; preds = %193
  %198 = load i32*, i32** %9, align 8
  %199 = getelementptr inbounds i32, i32* %198, i64 0
  %200 = load i32, i32* %199, align 4
  %201 = and i32 %200, 8192
  %202 = icmp ne i32 %201, 0
  br i1 %202, label %203, label %242

203:                                              ; preds = %197
  %204 = load i32*, i32** %9, align 8
  %205 = getelementptr inbounds i32, i32* %204, i64 0
  %206 = load i32, i32* %205, align 4
  %207 = and i32 %206, 1023
  store i32 %207, i32* %19, align 4
  br label %208

208:                                              ; preds = %224, %203
  %209 = load i32*, i32** %9, align 8
  %210 = load i32, i32* %19, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i32, i32* %209, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = load i32*, i32** %10, align 8
  %215 = load i32, i32* %19, align 4
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds i32, i32* %214, i64 %216
  %218 = load i32, i32* %217, align 4
  %219 = xor i32 %218, -1
  %220 = and i32 %213, %219
  %221 = icmp ne i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %208
  br label %228

223:                                              ; preds = %208
  br label %224

224:                                              ; preds = %223
  %225 = load i32, i32* %19, align 4
  %226 = add nsw i32 %225, -1
  store i32 %226, i32* %19, align 4
  %227 = icmp sgt i32 %226, 0
  br i1 %227, label %208, label %228

228:                                              ; preds = %224, %222
  %229 = load i32, i32* %19, align 4
  %230 = icmp ne i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  br label %233

232:                                              ; preds = %228
  br label %243

233:                                              ; preds = %231
  %234 = load %struct.set_family*, %struct.set_family** %6, align 8
  %235 = getelementptr inbounds %struct.set_family, %struct.set_family* %234, i32 0, i32 4
  %236 = load i32, i32* %235, align 8
  %237 = add nsw i32 %236, -1
  store i32 %237, i32* %235, align 8
  %238 = load i32*, i32** %9, align 8
  %239 = getelementptr inbounds i32, i32* %238, i64 0
  %240 = load i32, i32* %239, align 4
  %241 = and i32 %240, -8193
  store i32 %241, i32* %239, align 4
  br label %242

242:                                              ; preds = %233, %197
  br label %243

243:                                              ; preds = %242, %232
  %244 = load %struct.set_family*, %struct.set_family** %6, align 8
  %245 = getelementptr inbounds %struct.set_family, %struct.set_family* %244, i32 0, i32 0
  %246 = load i32, i32* %245, align 8
  %247 = load i32*, i32** %9, align 8
  %248 = sext i32 %246 to i64
  %249 = getelementptr inbounds i32, i32* %247, i64 %248
  store i32* %249, i32** %9, align 8
  br label %193

250:                                              ; preds = %193
  br label %251

251:                                              ; preds = %250, %176
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @essen_parts(%struct.set_family* %0, %struct.set_family* %1, i32* %2, i32* %3) #0 {
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %5, align 8
  store %struct.set_family* %1, %struct.set_family** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %21 = load i32*, i32** %7, align 8
  store i32* %21, i32** %10, align 8
  %22 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %23 = getelementptr inbounds i32*, i32** %22, i64 0
  %24 = load i32*, i32** %23, align 8
  store i32* %24, i32** %12, align 8
  %25 = load i32*, i32** %12, align 8
  %26 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 13), align 8
  %27 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %25, i32* %26)
  %28 = load %struct.set_family*, %struct.set_family** %5, align 8
  %29 = getelementptr inbounds %struct.set_family, %struct.set_family* %28, i32 0, i32 5
  %30 = load i32*, i32** %29, align 8
  store i32* %30, i32** %9, align 8
  %31 = load i32*, i32** %9, align 8
  %32 = load %struct.set_family*, %struct.set_family** %5, align 8
  %33 = getelementptr inbounds %struct.set_family, %struct.set_family* %32, i32 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = load %struct.set_family*, %struct.set_family** %5, align 8
  %36 = getelementptr inbounds %struct.set_family, %struct.set_family* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = mul nsw i32 %34, %37
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %31, i64 %39
  store i32* %40, i32** %11, align 8
  br label %41

41:                                               ; preds = %248, %4
  %42 = load i32*, i32** %9, align 8
  %43 = load i32*, i32** %11, align 8
  %44 = icmp ult i32* %42, %43
  br i1 %44, label %45, label %255

45:                                               ; preds = %41
  %46 = load i32*, i32** %9, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 0
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 8192
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %247

51:                                               ; preds = %45
  store i32 0, i32* %13, align 4
  %52 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 15), align 4
  store i32 %52, i32* %15, align 4
  %53 = icmp ne i32 %52, -1
  br i1 %53, label %54, label %168

54:                                               ; preds = %51
  %55 = load i32*, i32** %9, align 8
  %56 = load i32, i32* %15, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %55, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = load i32*, i32** %10, align 8
  %61 = load i32, i32* %15, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %60, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %59, %64
  store i32 %65, i32* %16, align 4
  %66 = load i32, i32* %16, align 4
  %67 = load i32, i32* %16, align 4
  %68 = lshr i32 %67, 1
  %69 = or i32 %66, %68
  %70 = xor i32 %69, -1
  %71 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 14), align 8
  %72 = and i32 %70, %71
  store i32 %72, i32* %16, align 4
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %104

74:                                               ; preds = %54
  %75 = load i32, i32* %16, align 4
  %76 = and i32 %75, 255
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %77
  %79 = load i32, i32* %78, align 4
  %80 = load i32, i32* %16, align 4
  %81 = lshr i32 %80, 8
  %82 = and i32 %81, 255
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = add nsw i32 %79, %85
  %87 = load i32, i32* %16, align 4
  %88 = lshr i32 %87, 16
  %89 = and i32 %88, 255
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = add nsw i32 %86, %92
  %94 = load i32, i32* %16, align 4
  %95 = lshr i32 %94, 24
  %96 = and i32 %95, 255
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %97
  %99 = load i32, i32* %98, align 4
  %100 = add nsw i32 %93, %99
  store i32 %100, i32* %13, align 4
  %101 = icmp sgt i32 %100, 1
  br i1 %101, label %102, label %103

102:                                              ; preds = %74
  br label %246

103:                                              ; preds = %74
  br label %104

104:                                              ; preds = %103, %54
  store i32 1, i32* %14, align 4
  br label %105

105:                                              ; preds = %164, %104
  %106 = load i32, i32* %14, align 4
  %107 = load i32, i32* %15, align 4
  %108 = icmp slt i32 %106, %107
  br i1 %108, label %109, label %167

109:                                              ; preds = %105
  %110 = load i32*, i32** %9, align 8
  %111 = load i32, i32* %14, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i32, i32* %110, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = load i32*, i32** %10, align 8
  %116 = load i32, i32* %14, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, i32* %115, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = and i32 %114, %119
  store i32 %120, i32* %16, align 4
  %121 = load i32, i32* %16, align 4
  %122 = load i32, i32* %16, align 4
  %123 = lshr i32 %122, 1
  %124 = or i32 %121, %123
  %125 = xor i32 %124, -1
  %126 = and i32 %125, 1431655765
  store i32 %126, i32* %16, align 4
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %128, label %163

128:                                              ; preds = %109
  %129 = load i32, i32* %13, align 4
  %130 = icmp eq i32 %129, 1
  br i1 %130, label %161, label %131

131:                                              ; preds = %128
  %132 = load i32, i32* %16, align 4
  %133 = and i32 %132, 255
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = load i32, i32* %16, align 4
  %138 = lshr i32 %137, 8
  %139 = and i32 %138, 255
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = add nsw i32 %136, %142
  %144 = load i32, i32* %16, align 4
  %145 = lshr i32 %144, 16
  %146 = and i32 %145, 255
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = add nsw i32 %143, %149
  %151 = load i32, i32* %16, align 4
  %152 = lshr i32 %151, 24
  %153 = and i32 %152, 255
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = add nsw i32 %150, %156
  %158 = load i32, i32* %13, align 4
  %159 = add nsw i32 %158, %157
  store i32 %159, i32* %13, align 4
  %160 = icmp sgt i32 %159, 1
  br i1 %160, label %161, label %162

161:                                              ; preds = %131, %128
  br label %246

162:                                              ; preds = %131
  br label %163

163:                                              ; preds = %162, %109
  br label %164

164:                                              ; preds = %163
  %165 = load i32, i32* %14, align 4
  %166 = add nsw i32 %165, 1
  store i32 %166, i32* %14, align 4
  br label %105

167:                                              ; preds = %105
  br label %168

168:                                              ; preds = %167, %51
  %169 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %169, i32* %18, align 4
  br label %170

170:                                              ; preds = %225, %168
  %171 = load i32, i32* %18, align 4
  %172 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %173 = icmp slt i32 %171, %172
  br i1 %173, label %174, label %228

174:                                              ; preds = %170
  %175 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %176 = load i32, i32* %18, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i32*, i32** %175, i64 %177
  %179 = load i32*, i32** %178, align 8
  store i32* %179, i32** %20, align 8
  %180 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  %181 = load i32, i32* %18, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds i32, i32* %180, i64 %182
  %184 = load i32, i32* %183, align 4
  store i32 %184, i32* %19, align 4
  %185 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %186 = load i32, i32* %18, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds i32, i32* %185, i64 %187
  %189 = load i32, i32* %188, align 4
  store i32 %189, i32* %17, align 4
  br label %190

190:                                              ; preds = %215, %174
  %191 = load i32, i32* %17, align 4
  %192 = load i32, i32* %19, align 4
  %193 = icmp sle i32 %191, %192
  br i1 %193, label %194, label %218

194:                                              ; preds = %190
  %195 = load i32*, i32** %9, align 8
  %196 = load i32, i32* %17, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds i32, i32* %195, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = load i32*, i32** %10, align 8
  %201 = load i32, i32* %17, align 4
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds i32, i32* %200, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = and i32 %199, %204
  %206 = load i32*, i32** %20, align 8
  %207 = load i32, i32* %17, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds i32, i32* %206, i64 %208
  %210 = load i32, i32* %209, align 4
  %211 = and i32 %205, %210
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %194
  br label %224

214:                                              ; preds = %194
  br label %215

215:                                              ; preds = %214
  %216 = load i32, i32* %17, align 4
  %217 = add nsw i32 %216, 1
  store i32 %217, i32* %17, align 4
  br label %190

218:                                              ; preds = %190
  %219 = load i32, i32* %13, align 4
  %220 = add nsw i32 %219, 1
  store i32 %220, i32* %13, align 4
  %221 = icmp sgt i32 %220, 1
  br i1 %221, label %222, label %223

222:                                              ; preds = %218
  br label %246

223:                                              ; preds = %218
  br label %224

224:                                              ; preds = %223, %213
  br label %225

225:                                              ; preds = %224
  %226 = load i32, i32* %18, align 4
  %227 = add nsw i32 %226, 1
  store i32 %227, i32* %18, align 4
  br label %170

228:                                              ; preds = %170
  %229 = load i32, i32* %13, align 4
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.185, i64 0, i64 0))
  br label %245

232:                                              ; preds = %228
  %233 = load i32*, i32** %12, align 8
  %234 = load i32*, i32** %9, align 8
  %235 = load i32*, i32** %10, align 8
  %236 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @force_lower to i32* (i32*, i32*, i32*, ...)*)(i32* %233, i32* %234, i32* %235)
  %237 = load %struct.set_family*, %struct.set_family** %5, align 8
  %238 = getelementptr inbounds %struct.set_family, %struct.set_family* %237, i32 0, i32 4
  %239 = load i32, i32* %238, align 8
  %240 = add nsw i32 %239, -1
  store i32 %240, i32* %238, align 8
  %241 = load i32*, i32** %9, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 0
  %243 = load i32, i32* %242, align 4
  %244 = and i32 %243, -8193
  store i32 %244, i32* %242, align 4
  br label %245

245:                                              ; preds = %232, %231
  br label %246

246:                                              ; preds = %245, %222, %161, %102
  br label %247

247:                                              ; preds = %246, %45
  br label %248

248:                                              ; preds = %247
  %249 = load %struct.set_family*, %struct.set_family** %5, align 8
  %250 = getelementptr inbounds %struct.set_family, %struct.set_family* %249, i32 0, i32 0
  %251 = load i32, i32* %250, align 8
  %252 = load i32*, i32** %9, align 8
  %253 = sext i32 %251 to i64
  %254 = getelementptr inbounds i32, i32* %252, i64 %253
  store i32* %254, i32** %9, align 8
  br label %41

255:                                              ; preds = %41
  %256 = load i32*, i32** %12, align 8
  %257 = call i32 (i32*, ...) bitcast (i32 (i32*)* @setp_empty to i32 (i32*, ...)*)(i32* %256)
  %258 = icmp ne i32 %257, 0
  br i1 %258, label %268, label %259

259:                                              ; preds = %255
  %260 = load i32*, i32** %8, align 8
  %261 = load i32*, i32** %8, align 8
  %262 = load i32*, i32** %12, align 8
  %263 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %260, i32* %261, i32* %262)
  %264 = load %struct.set_family*, %struct.set_family** %5, align 8
  %265 = load %struct.set_family*, %struct.set_family** %6, align 8
  %266 = load i32*, i32** %7, align 8
  %267 = load i32*, i32** %8, align 8
  call void @elim_lowering(%struct.set_family* %264, %struct.set_family* %265, i32* %266, i32* %267)
  br label %268

268:                                              ; preds = %259, %255
  %269 = load i32, i32* @debug, align 4
  %270 = and i32 %269, 8
  %271 = icmp ne i32 %270, 0
  br i1 %271, label %272, label %278

272:                                              ; preds = %268
  %273 = load i32*, i32** %7, align 8
  %274 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %273)
  %275 = load i32*, i32** %8, align 8
  %276 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc2 to i8* (i32*, ...)*)(i32* %275)
  %277 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3.186, i64 0, i64 0), i8* %274, i8* %276)
  br label %278

278:                                              ; preds = %272, %268
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @select_feasible(%struct.set_family* %0, %struct.set_family* %1, i32* %2, i32* %3, i32* %4, i32* %5) #0 {
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32**, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32**, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %7, align 8
  store %struct.set_family* %1, %struct.set_family** %8, align 8
  store i32* %2, i32** %9, align 8
  store i32* %3, i32** %10, align 8
  store i32* %4, i32** %11, align 8
  store i32* %5, i32** %12, align 8
  %27 = load %struct.set_family*, %struct.set_family** %8, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = sext i32 %29 to i64
  %31 = mul i64 8, %30
  %32 = call noalias i8* @malloc(i64 %31) #7
  %33 = bitcast i8* %32 to i32**
  store i32** %33, i32*** %16, align 8
  store i32 0, i32* %24, align 4
  %34 = load %struct.set_family*, %struct.set_family** %8, align 8
  %35 = getelementptr inbounds %struct.set_family, %struct.set_family* %34, i32 0, i32 5
  %36 = load i32*, i32** %35, align 8
  store i32* %36, i32** %13, align 8
  %37 = load i32*, i32** %13, align 8
  %38 = load %struct.set_family*, %struct.set_family** %8, align 8
  %39 = getelementptr inbounds %struct.set_family, %struct.set_family* %38, i32 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = load %struct.set_family*, %struct.set_family** %8, align 8
  %42 = getelementptr inbounds %struct.set_family, %struct.set_family* %41, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = mul nsw i32 %40, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %37, i64 %45
  store i32* %46, i32** %14, align 8
  br label %47

47:                                               ; preds = %65, %6
  %48 = load i32*, i32** %13, align 8
  %49 = load i32*, i32** %14, align 8
  %50 = icmp ult i32* %48, %49
  br i1 %50, label %51, label %72

51:                                               ; preds = %47
  %52 = load i32*, i32** %13, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 0
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, 8192
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %64

57:                                               ; preds = %51
  %58 = load i32*, i32** %13, align 8
  %59 = load i32**, i32*** %16, align 8
  %60 = load i32, i32* %24, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %24, align 4
  %62 = sext i32 %60 to i64
  %63 = getelementptr inbounds i32*, i32** %59, i64 %62
  store i32* %58, i32** %63, align 8
  br label %64

64:                                               ; preds = %57, %51
  br label %65

65:                                               ; preds = %64
  %66 = load %struct.set_family*, %struct.set_family** %8, align 8
  %67 = getelementptr inbounds %struct.set_family, %struct.set_family* %66, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = load i32*, i32** %13, align 8
  %70 = sext i32 %68 to i64
  %71 = getelementptr inbounds i32, i32* %69, i64 %70
  store i32* %71, i32** %13, align 8
  br label %47

72:                                               ; preds = %47
  %73 = load %struct.set_family*, %struct.set_family** %8, align 8
  %74 = getelementptr inbounds %struct.set_family, %struct.set_family* %73, i32 0, i32 4
  %75 = load i32, i32* %74, align 8
  %76 = sext i32 %75 to i64
  %77 = mul i64 8, %76
  %78 = call noalias i8* @malloc(i64 %77) #7
  %79 = bitcast i8* %78 to i32**
  store i32** %79, i32*** %19, align 8
  %80 = load i32, i32* %24, align 4
  %81 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %82 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %80, i32 %81)
  store %struct.set_family* %82, %struct.set_family** %26, align 8
  store i32 0, i32* %17, align 4
  br label %83

83:                                               ; preds = %102, %72
  %84 = load i32, i32* %17, align 4
  %85 = load i32, i32* %24, align 4
  %86 = icmp slt i32 %84, %85
  br i1 %86, label %87, label %105

87:                                               ; preds = %83
  %88 = load %struct.set_family*, %struct.set_family** %26, align 8
  %89 = getelementptr inbounds %struct.set_family, %struct.set_family* %88, i32 0, i32 5
  %90 = load i32*, i32** %89, align 8
  %91 = load %struct.set_family*, %struct.set_family** %26, align 8
  %92 = getelementptr inbounds %struct.set_family, %struct.set_family* %91, i32 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = load i32, i32* %17, align 4
  %95 = mul nsw i32 %93, %94
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i32, i32* %90, i64 %96
  %98 = load i32**, i32*** %19, align 8
  %99 = load i32, i32* %17, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i32*, i32** %98, i64 %100
  store i32* %97, i32** %101, align 8
  br label %102

102:                                              ; preds = %87
  %103 = load i32, i32* %17, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %17, align 4
  br label %83

105:                                              ; preds = %83
  br label %106

106:                                              ; preds = %288, %105
  %107 = load %struct.set_family*, %struct.set_family** %7, align 8
  %108 = load i32*, i32** %9, align 8
  %109 = load i32*, i32** %10, align 8
  call void @essen_raising(%struct.set_family* %107, i32* %108, i32* %109)
  %110 = load i32, i32* %24, align 4
  store i32 %110, i32* %25, align 4
  store i32 0, i32* %24, align 4
  store i32 0, i32* %17, align 4
  br label %111

111:                                              ; preds = %173, %106
  %112 = load i32, i32* %17, align 4
  %113 = load i32, i32* %25, align 4
  %114 = icmp slt i32 %112, %113
  br i1 %114, label %115, label %176

115:                                              ; preds = %111
  %116 = load i32**, i32*** %16, align 8
  %117 = load i32, i32* %17, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i32*, i32** %116, i64 %118
  %120 = load i32*, i32** %119, align 8
  store i32* %120, i32** %13, align 8
  %121 = load i32*, i32** %13, align 8
  %122 = getelementptr inbounds i32, i32* %121, i64 0
  %123 = load i32, i32* %122, align 4
  %124 = and i32 %123, 8192
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %126, label %172

126:                                              ; preds = %115
  %127 = load i32*, i32** %13, align 8
  %128 = load i32*, i32** %9, align 8
  %129 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_implies to i32 (i32*, i32*, ...)*)(i32* %127, i32* %128)
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %131, label %151

131:                                              ; preds = %126
  %132 = load i32*, i32** %12, align 8
  %133 = load i32, i32* %132, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %132, align 4
  %135 = load i32*, i32** %11, align 8
  %136 = load i32*, i32** %11, align 8
  %137 = load i32*, i32** %13, align 8
  %138 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %135, i32* %136, i32* %137)
  %139 = load %struct.set_family*, %struct.set_family** %8, align 8
  %140 = getelementptr inbounds %struct.set_family, %struct.set_family* %139, i32 0, i32 4
  %141 = load i32, i32* %140, align 8
  %142 = add nsw i32 %141, -1
  store i32 %142, i32* %140, align 8
  %143 = load i32*, i32** %13, align 8
  %144 = getelementptr inbounds i32, i32* %143, i64 0
  %145 = load i32, i32* %144, align 4
  %146 = and i32 %145, -8193
  store i32 %146, i32* %144, align 4
  %147 = load i32*, i32** %13, align 8
  %148 = getelementptr inbounds i32, i32* %147, i64 0
  %149 = load i32, i32* %148, align 4
  %150 = or i32 %149, 2048
  store i32 %150, i32* %148, align 4
  br label %171

151:                                              ; preds = %126
  %152 = load %struct.set_family*, %struct.set_family** %7, align 8
  %153 = load i32*, i32** %13, align 8
  %154 = load i32*, i32** %9, align 8
  %155 = load i32**, i32*** %19, align 8
  %156 = load i32, i32* %24, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i32*, i32** %155, i64 %157
  %159 = load i32*, i32** %158, align 8
  %160 = call i32 @feasibly_covered(%struct.set_family* %152, i32* %153, i32* %154, i32* %159)
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %162, label %170

162:                                              ; preds = %151
  %163 = load i32*, i32** %13, align 8
  %164 = load i32**, i32*** %16, align 8
  %165 = load i32, i32* %24, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i32*, i32** %164, i64 %166
  store i32* %163, i32** %167, align 8
  %168 = load i32, i32* %24, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %24, align 4
  br label %170

170:                                              ; preds = %162, %151
  br label %171

171:                                              ; preds = %170, %131
  br label %172

172:                                              ; preds = %171, %115
  br label %173

173:                                              ; preds = %172
  %174 = load i32, i32* %17, align 4
  %175 = add nsw i32 %174, 1
  store i32 %175, i32* %17, align 4
  br label %111

176:                                              ; preds = %111
  %177 = load i32, i32* @debug, align 4
  %178 = and i32 %177, 8
  %179 = icmp ne i32 %178, 0
  br i1 %179, label %180, label %184

180:                                              ; preds = %176
  %181 = load i32, i32* %25, align 4
  %182 = load i32, i32* %24, align 4
  %183 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.6.182, i64 0, i64 0), i32 %181, i32 %182)
  br label %184

184:                                              ; preds = %180, %176
  %185 = load i32, i32* %24, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %201

187:                                              ; preds = %184
  %188 = load i32**, i32*** %16, align 8
  %189 = icmp ne i32** %188, null
  br i1 %189, label %190, label %193

190:                                              ; preds = %187
  %191 = load i32**, i32*** %16, align 8
  %192 = bitcast i32** %191 to i8*
  call void @free(i8* %192) #7
  store i32** null, i32*** %16, align 8
  br label %193

193:                                              ; preds = %190, %187
  %194 = load i32**, i32*** %19, align 8
  %195 = icmp ne i32** %194, null
  br i1 %195, label %196, label %199

196:                                              ; preds = %193
  %197 = load i32**, i32*** %19, align 8
  %198 = bitcast i32** %197 to i8*
  call void @free(i8* %198) #7
  store i32** null, i32*** %19, align 8
  br label %199

199:                                              ; preds = %196, %193
  %200 = load %struct.set_family*, %struct.set_family** %26, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %200)
  ret void

201:                                              ; preds = %184
  store i32 0, i32* %20, align 4
  store i32 9999, i32* %21, align 4
  store i32 0, i32* %17, align 4
  br label %202

202:                                              ; preds = %267, %201
  %203 = load i32, i32* %17, align 4
  %204 = load i32, i32* %24, align 4
  %205 = icmp slt i32 %203, %204
  br i1 %205, label %206, label %270

206:                                              ; preds = %202
  %207 = load i32**, i32*** %16, align 8
  %208 = load i32, i32* %17, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds i32*, i32** %207, i64 %209
  %211 = load i32*, i32** %210, align 8
  %212 = load i32*, i32** %10, align 8
  %213 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @set_dist to i32 (i32*, i32*, ...)*)(i32* %211, i32* %212)
  store i32 %213, i32* %23, align 4
  store i32 0, i32* %22, align 4
  store i32 0, i32* %18, align 4
  br label %214

214:                                              ; preds = %235, %206
  %215 = load i32, i32* %18, align 4
  %216 = load i32, i32* %24, align 4
  %217 = icmp slt i32 %215, %216
  br i1 %217, label %218, label %238

218:                                              ; preds = %214
  %219 = load i32**, i32*** %19, align 8
  %220 = load i32, i32* %17, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds i32*, i32** %219, i64 %221
  %223 = load i32*, i32** %222, align 8
  %224 = load i32**, i32*** %16, align 8
  %225 = load i32, i32* %18, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds i32*, i32** %224, i64 %226
  %228 = load i32*, i32** %227, align 8
  %229 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_disjoint to i32 (i32*, i32*, ...)*)(i32* %223, i32* %228)
  %230 = icmp ne i32 %229, 0
  br i1 %230, label %231, label %234

231:                                              ; preds = %218
  %232 = load i32, i32* %22, align 4
  %233 = add nsw i32 %232, 1
  store i32 %233, i32* %22, align 4
  br label %234

234:                                              ; preds = %231, %218
  br label %235

235:                                              ; preds = %234
  %236 = load i32, i32* %18, align 4
  %237 = add nsw i32 %236, 1
  store i32 %237, i32* %18, align 4
  br label %214

238:                                              ; preds = %214
  %239 = load i32, i32* %22, align 4
  %240 = load i32, i32* %20, align 4
  %241 = icmp sgt i32 %239, %240
  br i1 %241, label %242, label %250

242:                                              ; preds = %238
  %243 = load i32, i32* %22, align 4
  store i32 %243, i32* %20, align 4
  %244 = load i32**, i32*** %16, align 8
  %245 = load i32, i32* %17, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i32*, i32** %244, i64 %246
  %248 = load i32*, i32** %247, align 8
  store i32* %248, i32** %15, align 8
  %249 = load i32, i32* %23, align 4
  store i32 %249, i32* %21, align 4
  br label %266

250:                                              ; preds = %238
  %251 = load i32, i32* %22, align 4
  %252 = load i32, i32* %20, align 4
  %253 = icmp eq i32 %251, %252
  br i1 %253, label %254, label %265

254:                                              ; preds = %250
  %255 = load i32, i32* %23, align 4
  %256 = load i32, i32* %21, align 4
  %257 = icmp slt i32 %255, %256
  br i1 %257, label %258, label %265

258:                                              ; preds = %254
  %259 = load i32**, i32*** %16, align 8
  %260 = load i32, i32* %17, align 4
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds i32*, i32** %259, i64 %261
  %263 = load i32*, i32** %262, align 8
  store i32* %263, i32** %15, align 8
  %264 = load i32, i32* %23, align 4
  store i32 %264, i32* %21, align 4
  br label %265

265:                                              ; preds = %258, %254, %250
  br label %266

266:                                              ; preds = %265, %242
  br label %267

267:                                              ; preds = %266
  %268 = load i32, i32* %17, align 4
  %269 = add nsw i32 %268, 1
  store i32 %269, i32* %17, align 4
  br label %202

270:                                              ; preds = %202
  %271 = load i32*, i32** %9, align 8
  %272 = load i32*, i32** %9, align 8
  %273 = load i32*, i32** %15, align 8
  %274 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %271, i32* %272, i32* %273)
  %275 = load i32*, i32** %10, align 8
  %276 = load i32*, i32** %10, align 8
  %277 = load i32*, i32** %9, align 8
  %278 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %275, i32* %276, i32* %277)
  %279 = load i32, i32* @debug, align 4
  %280 = and i32 %279, 8
  %281 = icmp ne i32 %280, 0
  br i1 %281, label %282, label %288

282:                                              ; preds = %270
  %283 = load i32*, i32** %9, align 8
  %284 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %283)
  %285 = load i32*, i32** %10, align 8
  %286 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc2 to i8* (i32*, ...)*)(i32* %285)
  %287 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.183, i64 0, i64 0), i8* %284, i8* %286)
  br label %288

288:                                              ; preds = %282, %270
  %289 = load %struct.set_family*, %struct.set_family** %7, align 8
  %290 = load %struct.set_family*, %struct.set_family** %8, align 8
  %291 = load i32*, i32** %9, align 8
  %292 = load i32*, i32** %10, align 8
  call void @essen_parts(%struct.set_family* %289, %struct.set_family* %290, i32* %291, i32* %292)
  br label %106
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @most_frequent(%struct.set_family* %0, i32* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32* %1, i32** %4, align 8
  %11 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %12 = sext i32 %11 to i64
  %13 = mul i64 4, %12
  %14 = call noalias i8* @malloc(i64 %13) #7
  %15 = bitcast i8* %14 to i32*
  store i32* %15, i32** %8, align 8
  store i32 0, i32* %5, align 4
  br label %16

16:                                               ; preds = %25, %2
  %17 = load i32, i32* %5, align 4
  %18 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = load i32*, i32** %8, align 8
  %22 = load i32, i32* %5, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i32, i32* %21, i64 %23
  store i32 0, i32* %24, align 4
  br label %25

25:                                               ; preds = %20
  %26 = load i32, i32* %5, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %5, align 4
  br label %16

28:                                               ; preds = %16
  %29 = load %struct.set_family*, %struct.set_family** %3, align 8
  %30 = icmp ne %struct.set_family* %29, null
  br i1 %30, label %31, label %67

31:                                               ; preds = %28
  %32 = load %struct.set_family*, %struct.set_family** %3, align 8
  %33 = getelementptr inbounds %struct.set_family, %struct.set_family* %32, i32 0, i32 5
  %34 = load i32*, i32** %33, align 8
  store i32* %34, i32** %9, align 8
  %35 = load i32*, i32** %9, align 8
  %36 = load %struct.set_family*, %struct.set_family** %3, align 8
  %37 = getelementptr inbounds %struct.set_family, %struct.set_family* %36, i32 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = load %struct.set_family*, %struct.set_family** %3, align 8
  %40 = getelementptr inbounds %struct.set_family, %struct.set_family* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = mul nsw i32 %38, %41
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %35, i64 %43
  store i32* %44, i32** %10, align 8
  br label %45

45:                                               ; preds = %59, %31
  %46 = load i32*, i32** %9, align 8
  %47 = load i32*, i32** %10, align 8
  %48 = icmp ult i32* %46, %47
  br i1 %48, label %49, label %66

49:                                               ; preds = %45
  %50 = load i32*, i32** %9, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 0
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 8192
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = load i32*, i32** %9, align 8
  %57 = load i32*, i32** %8, align 8
  call void (i32*, i32*, i32, ...) bitcast (void (i32*, i32*, i32)* @set_adjcnt to void (i32*, i32*, i32, ...)*)(i32* %56, i32* %57, i32 1)
  br label %58

58:                                               ; preds = %55, %49
  br label %59

59:                                               ; preds = %58
  %60 = load %struct.set_family*, %struct.set_family** %3, align 8
  %61 = getelementptr inbounds %struct.set_family, %struct.set_family* %60, i32 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = load i32*, i32** %9, align 8
  %64 = sext i32 %62 to i64
  %65 = getelementptr inbounds i32, i32* %63, i64 %64
  store i32* %65, i32** %9, align 8
  br label %45

66:                                               ; preds = %45
  br label %67

67:                                               ; preds = %66, %28
  store i32 -1, i32* %6, align 4
  store i32 -1, i32* %7, align 4
  store i32 0, i32* %5, align 4
  br label %68

68:                                               ; preds = %101, %67
  %69 = load i32, i32* %5, align 4
  %70 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %71 = icmp slt i32 %69, %70
  br i1 %71, label %72, label %104

72:                                               ; preds = %68
  %73 = load i32*, i32** %4, align 8
  %74 = load i32, i32* %5, align 4
  %75 = ashr i32 %74, 5
  %76 = add nsw i32 %75, 1
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i32, i32* %73, i64 %77
  %79 = load i32, i32* %78, align 4
  %80 = load i32, i32* %5, align 4
  %81 = and i32 %80, 31
  %82 = shl i32 1, %81
  %83 = and i32 %79, %82
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %100

85:                                               ; preds = %72
  %86 = load i32*, i32** %8, align 8
  %87 = load i32, i32* %5, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i32, i32* %86, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = load i32, i32* %7, align 4
  %92 = icmp sgt i32 %90, %91
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = load i32, i32* %5, align 4
  store i32 %94, i32* %6, align 4
  %95 = load i32*, i32** %8, align 8
  %96 = load i32, i32* %5, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i32, i32* %95, i64 %97
  %99 = load i32, i32* %98, align 4
  store i32 %99, i32* %7, align 4
  br label %100

100:                                              ; preds = %93, %85, %72
  br label %101

101:                                              ; preds = %100
  %102 = load i32, i32* %5, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %5, align 4
  br label %68

104:                                              ; preds = %68
  %105 = load i32*, i32** %8, align 8
  %106 = icmp ne i32* %105, null
  br i1 %106, label %107, label %110

107:                                              ; preds = %104
  %108 = load i32*, i32** %8, align 8
  %109 = bitcast i32* %108 to i8*
  call void @free(i8* %109) #7
  store i32* null, i32** %8, align 8
  br label %110

110:                                              ; preds = %107, %104
  %111 = load i32, i32* @debug, align 4
  %112 = and i32 %111, 8
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %119

114:                                              ; preds = %110
  %115 = load i32, i32* %6, align 4
  %116 = load i32*, i32** %4, align 8
  %117 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc2 to i8* (i32*, ...)*)(i32* %116)
  %118 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5.181, i64 0, i64 0), i32 %115, i8* %117)
  br label %119

119:                                              ; preds = %114, %110
  %120 = load i32, i32* %6, align 4
  ret i32 %120
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @mincov(%struct.set_family* %0, i32* %1, i32* %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.set_family*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %17 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %18 = getelementptr inbounds i32*, i32** %17, i64 0
  %19 = load i32*, i32** %18, align 8
  store i32* %19, i32** %12, align 8
  %20 = load %struct.set_family*, %struct.set_family** %4, align 8
  %21 = getelementptr inbounds %struct.set_family, %struct.set_family* %20, i32 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %24 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %22, i32 %23)
  store %struct.set_family* %24, %struct.set_family** %11, align 8
  %25 = load %struct.set_family*, %struct.set_family** %4, align 8
  %26 = getelementptr inbounds %struct.set_family, %struct.set_family* %25, i32 0, i32 5
  %27 = load i32*, i32** %26, align 8
  store i32* %27, i32** %14, align 8
  %28 = load i32*, i32** %14, align 8
  %29 = load %struct.set_family*, %struct.set_family** %4, align 8
  %30 = getelementptr inbounds %struct.set_family, %struct.set_family* %29, i32 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = load %struct.set_family*, %struct.set_family** %4, align 8
  %33 = getelementptr inbounds %struct.set_family, %struct.set_family* %32, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = mul nsw i32 %31, %34
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %28, i64 %36
  store i32* %37, i32** %15, align 8
  br label %38

38:                                               ; preds = %69, %3
  %39 = load i32*, i32** %14, align 8
  %40 = load i32*, i32** %15, align 8
  %41 = icmp ult i32* %39, %40
  br i1 %41, label %42, label %76

42:                                               ; preds = %38
  %43 = load i32*, i32** %14, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 0
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 8192
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %68

48:                                               ; preds = %42
  %49 = load %struct.set_family*, %struct.set_family** %11, align 8
  %50 = getelementptr inbounds %struct.set_family, %struct.set_family* %49, i32 0, i32 5
  %51 = load i32*, i32** %50, align 8
  %52 = load %struct.set_family*, %struct.set_family** %11, align 8
  %53 = getelementptr inbounds %struct.set_family, %struct.set_family* %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = load %struct.set_family*, %struct.set_family** %11, align 8
  %56 = getelementptr inbounds %struct.set_family, %struct.set_family* %55, i32 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %56, align 4
  %59 = mul nsw i32 %54, %57
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %51, i64 %60
  %62 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 13), align 8
  %63 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %61, i32* %62)
  store i32* %63, i32** %16, align 8
  %64 = load i32*, i32** %16, align 8
  %65 = load i32*, i32** %14, align 8
  %66 = load i32*, i32** %5, align 8
  %67 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @force_lower to i32* (i32*, i32*, i32*, ...)*)(i32* %64, i32* %65, i32* %66)
  br label %68

68:                                               ; preds = %48, %42
  br label %69

69:                                               ; preds = %68
  %70 = load %struct.set_family*, %struct.set_family** %4, align 8
  %71 = getelementptr inbounds %struct.set_family, %struct.set_family* %70, i32 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = load i32*, i32** %14, align 8
  %74 = sext i32 %72 to i64
  %75 = getelementptr inbounds i32, i32* %73, i64 %74
  store i32* %75, i32** %14, align 8
  br label %38

76:                                               ; preds = %38
  store i32 0, i32* %8, align 4
  %77 = load %struct.set_family*, %struct.set_family** %11, align 8
  %78 = getelementptr inbounds %struct.set_family, %struct.set_family* %77, i32 0, i32 5
  %79 = load i32*, i32** %78, align 8
  store i32* %79, i32** %14, align 8
  %80 = load i32*, i32** %14, align 8
  %81 = load %struct.set_family*, %struct.set_family** %11, align 8
  %82 = getelementptr inbounds %struct.set_family, %struct.set_family* %81, i32 0, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = load %struct.set_family*, %struct.set_family** %11, align 8
  %85 = getelementptr inbounds %struct.set_family, %struct.set_family* %84, i32 0, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = mul nsw i32 %83, %86
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i32, i32* %80, i64 %88
  store i32* %89, i32** %15, align 8
  br label %90

90:                                               ; preds = %129, %76
  %91 = load i32*, i32** %14, align 8
  %92 = load i32*, i32** %15, align 8
  %93 = icmp ult i32* %91, %92
  br i1 %93, label %94, label %136

94:                                               ; preds = %90
  store i32 1, i32* %7, align 4
  %95 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %95, i32* %9, align 4
  br label %96

96:                                               ; preds = %118, %94
  %97 = load i32, i32* %9, align 4
  %98 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %99 = icmp slt i32 %97, %98
  br i1 %99, label %100, label %121

100:                                              ; preds = %96
  %101 = load i32*, i32** %14, align 8
  %102 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %103 = load i32, i32* %9, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i32*, i32** %102, i64 %104
  %106 = load i32*, i32** %105, align 8
  %107 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @set_dist to i32 (i32*, i32*, ...)*)(i32* %101, i32* %106)
  store i32 %107, i32* %10, align 4
  %108 = icmp sgt i32 %107, 1
  br i1 %108, label %109, label %117

109:                                              ; preds = %100
  %110 = load i32, i32* %10, align 4
  %111 = load i32, i32* %7, align 4
  %112 = mul nsw i32 %111, %110
  store i32 %112, i32* %7, align 4
  %113 = load i32, i32* %7, align 4
  %114 = icmp sgt i32 %113, 500
  br i1 %114, label %115, label %116

115:                                              ; preds = %109
  br label %171

116:                                              ; preds = %109
  br label %117

117:                                              ; preds = %116, %100
  br label %118

118:                                              ; preds = %117
  %119 = load i32, i32* %9, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %9, align 4
  br label %96

121:                                              ; preds = %96
  %122 = load i32, i32* %7, align 4
  %123 = load i32, i32* %8, align 4
  %124 = add nsw i32 %123, %122
  store i32 %124, i32* %8, align 4
  %125 = load i32, i32* %8, align 4
  %126 = icmp sgt i32 %125, 500
  br i1 %126, label %127, label %128

127:                                              ; preds = %121
  br label %171

128:                                              ; preds = %121
  br label %129

129:                                              ; preds = %128
  %130 = load %struct.set_family*, %struct.set_family** %11, align 8
  %131 = getelementptr inbounds %struct.set_family, %struct.set_family* %130, i32 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = load i32*, i32** %14, align 8
  %134 = sext i32 %132 to i64
  %135 = getelementptr inbounds i32, i32* %133, i64 %134
  store i32* %135, i32** %14, align 8
  br label %90

136:                                              ; preds = %90
  %137 = load %struct.set_family*, %struct.set_family** %11, align 8
  %138 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %139 = call %struct.set_family* (%struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32)* @unravel to %struct.set_family* (%struct.set_family*, i32, ...)*)(%struct.set_family* %137, i32 %138)
  store %struct.set_family* %139, %struct.set_family** %11, align 8
  %140 = load %struct.set_family*, %struct.set_family** %11, align 8
  %141 = call i32* (%struct.set_family*, ...) bitcast (i32* (%struct.set_family*)* @do_sm_minimum_cover to i32* (%struct.set_family*, ...)*)(%struct.set_family* %140)
  store i32* %141, i32** %13, align 8
  %142 = load i32*, i32** %5, align 8
  %143 = load i32*, i32** %5, align 8
  %144 = load i32*, i32** %12, align 8
  %145 = load i32*, i32** %6, align 8
  %146 = load i32*, i32** %13, align 8
  %147 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %144, i32* %145, i32* %146)
  %148 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %142, i32* %143, i32* %147)
  %149 = load i32*, i32** %6, align 8
  %150 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 13), align 8
  %151 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %149, i32* %150)
  %152 = load %struct.set_family*, %struct.set_family** %4, align 8
  %153 = getelementptr inbounds %struct.set_family, %struct.set_family* %152, i32 0, i32 4
  store i32 0, i32* %153, align 8
  %154 = load i32, i32* @debug, align 4
  %155 = and i32 %154, 8
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %163

157:                                              ; preds = %136
  %158 = load i32*, i32** %5, align 8
  %159 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %158)
  %160 = load i32*, i32** %6, align 8
  %161 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc2 to i8* (i32*, ...)*)(i32* %160)
  %162 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8.180, i64 0, i64 0), i8* %159, i8* %161)
  br label %163

163:                                              ; preds = %157, %136
  %164 = load %struct.set_family*, %struct.set_family** %11, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %164)
  %165 = load i32*, i32** %13, align 8
  %166 = icmp ne i32* %165, null
  br i1 %166, label %167, label %170

167:                                              ; preds = %163
  %168 = load i32*, i32** %13, align 8
  %169 = bitcast i32* %168 to i8*
  call void @free(i8* %169) #7
  store i32* null, i32** %13, align 8
  br label %170

170:                                              ; preds = %167, %163
  br label %193

171:                                              ; preds = %127, %115
  %172 = load %struct.set_family*, %struct.set_family** %11, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %172)
  %173 = load i32*, i32** %6, align 8
  %174 = call i32 @most_frequent(%struct.set_family* null, i32* %173)
  %175 = and i32 %174, 31
  %176 = shl i32 1, %175
  %177 = load i32*, i32** %5, align 8
  %178 = load i32*, i32** %6, align 8
  %179 = call i32 @most_frequent(%struct.set_family* null, i32* %178)
  %180 = ashr i32 %179, 5
  %181 = add nsw i32 %180, 1
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds i32, i32* %177, i64 %182
  %184 = load i32, i32* %183, align 4
  %185 = or i32 %184, %176
  store i32 %185, i32* %183, align 4
  %186 = load i32*, i32** %6, align 8
  %187 = load i32*, i32** %6, align 8
  %188 = load i32*, i32** %5, align 8
  %189 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %186, i32* %187, i32* %188)
  %190 = load %struct.set_family*, %struct.set_family** %4, align 8
  %191 = load i32*, i32** %5, align 8
  %192 = load i32*, i32** %6, align 8
  call void @essen_parts(%struct.set_family* %190, %struct.set_family* null, i32* %191, i32* %192)
  br label %193

193:                                              ; preds = %171, %170
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @essen_raising(%struct.set_family* %0, i32* %1, i32* %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %11 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %12 = getelementptr inbounds i32*, i32** %11, i64 0
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %9, align 8
  %14 = load i32*, i32** %9, align 8
  %15 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 13), align 8
  %16 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %14, i32* %15)
  %17 = load %struct.set_family*, %struct.set_family** %4, align 8
  %18 = getelementptr inbounds %struct.set_family, %struct.set_family* %17, i32 0, i32 5
  %19 = load i32*, i32** %18, align 8
  store i32* %19, i32** %8, align 8
  %20 = load i32*, i32** %8, align 8
  %21 = load %struct.set_family*, %struct.set_family** %4, align 8
  %22 = getelementptr inbounds %struct.set_family, %struct.set_family* %21, i32 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = load %struct.set_family*, %struct.set_family** %4, align 8
  %25 = getelementptr inbounds %struct.set_family, %struct.set_family* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = mul nsw i32 %23, %26
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, i32* %20, i64 %28
  store i32* %29, i32** %7, align 8
  br label %30

30:                                               ; preds = %76, %3
  %31 = load i32*, i32** %8, align 8
  %32 = load i32*, i32** %7, align 8
  %33 = icmp ult i32* %31, %32
  br i1 %33, label %34, label %83

34:                                               ; preds = %30
  %35 = load i32*, i32** %8, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 0
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 8192
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %75

40:                                               ; preds = %34
  %41 = load i32*, i32** %9, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 1023
  store i32 %44, i32* %10, align 4
  %45 = load i32*, i32** %9, align 8
  %46 = getelementptr inbounds i32, i32* %45, i64 0
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, -1024
  store i32 %48, i32* %46, align 4
  %49 = load i32, i32* %10, align 4
  %50 = load i32*, i32** %9, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 0
  %52 = load i32, i32* %51, align 4
  %53 = or i32 %52, %49
  store i32 %53, i32* %51, align 4
  br label %54

54:                                               ; preds = %70, %40
  %55 = load i32*, i32** %9, align 8
  %56 = load i32, i32* %10, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %55, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = load i32*, i32** %8, align 8
  %61 = load i32, i32* %10, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %60, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = or i32 %59, %64
  %66 = load i32*, i32** %9, align 8
  %67 = load i32, i32* %10, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %66, i64 %68
  store i32 %65, i32* %69, align 4
  br label %70

70:                                               ; preds = %54
  %71 = load i32, i32* %10, align 4
  %72 = add nsw i32 %71, -1
  store i32 %72, i32* %10, align 4
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %54, label %74

74:                                               ; preds = %70
  br label %75

75:                                               ; preds = %74, %34
  br label %76

76:                                               ; preds = %75
  %77 = load %struct.set_family*, %struct.set_family** %4, align 8
  %78 = getelementptr inbounds %struct.set_family, %struct.set_family* %77, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = load i32*, i32** %8, align 8
  %81 = sext i32 %79 to i64
  %82 = getelementptr inbounds i32, i32* %80, i64 %81
  store i32* %82, i32** %8, align 8
  br label %30

83:                                               ; preds = %30
  %84 = load i32*, i32** %9, align 8
  %85 = load i32*, i32** %6, align 8
  %86 = load i32*, i32** %9, align 8
  %87 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %84, i32* %85, i32* %86)
  %88 = load i32*, i32** %5, align 8
  %89 = load i32*, i32** %5, align 8
  %90 = load i32*, i32** %9, align 8
  %91 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %88, i32* %89, i32* %90)
  %92 = load i32*, i32** %6, align 8
  %93 = load i32*, i32** %6, align 8
  %94 = load i32*, i32** %9, align 8
  %95 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %92, i32* %93, i32* %94)
  %96 = load i32, i32* @debug, align 4
  %97 = and i32 %96, 8
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %105

99:                                               ; preds = %83
  %100 = load i32*, i32** %5, align 8
  %101 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %100)
  %102 = load i32*, i32** %6, align 8
  %103 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc2 to i8* (i32*, ...)*)(i32* %102)
  %104 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.184, i64 0, i64 0), i8* %101, i8* %103)
  br label %105

105:                                              ; preds = %99, %83
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @feasibly_covered(%struct.set_family* %0, i32* %1, i32* %2, i32* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %6, align 8
  store i32* %1, i32** %7, align 8
  store i32* %2, i32** %8, align 8
  store i32* %3, i32** %9, align 8
  %21 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %22 = getelementptr inbounds i32*, i32** %21, i64 0
  %23 = load i32*, i32** %22, align 8
  %24 = load i32*, i32** %8, align 8
  %25 = load i32*, i32** %7, align 8
  %26 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %23, i32* %24, i32* %25)
  store i32* %26, i32** %11, align 8
  %27 = load i32*, i32** %9, align 8
  %28 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 13), align 8
  %29 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %27, i32* %28)
  %30 = load %struct.set_family*, %struct.set_family** %6, align 8
  %31 = getelementptr inbounds %struct.set_family, %struct.set_family* %30, i32 0, i32 5
  %32 = load i32*, i32** %31, align 8
  store i32* %32, i32** %10, align 8
  %33 = load i32*, i32** %10, align 8
  %34 = load %struct.set_family*, %struct.set_family** %6, align 8
  %35 = getelementptr inbounds %struct.set_family, %struct.set_family* %34, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = load %struct.set_family*, %struct.set_family** %6, align 8
  %38 = getelementptr inbounds %struct.set_family, %struct.set_family* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = mul nsw i32 %36, %39
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i32, i32* %33, i64 %41
  store i32* %42, i32** %13, align 8
  br label %43

43:                                               ; preds = %242, %4
  %44 = load i32*, i32** %10, align 8
  %45 = load i32*, i32** %13, align 8
  %46 = icmp ult i32* %44, %45
  br i1 %46, label %47, label %249

47:                                               ; preds = %43
  %48 = load i32*, i32** %10, align 8
  %49 = getelementptr inbounds i32, i32* %48, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 8192
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %241

53:                                               ; preds = %47
  store i32 0, i32* %12, align 4
  %54 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 15), align 4
  store i32 %54, i32* %15, align 4
  %55 = icmp ne i32 %54, -1
  br i1 %55, label %56, label %170

56:                                               ; preds = %53
  %57 = load i32*, i32** %10, align 8
  %58 = load i32, i32* %15, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, i32* %57, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = load i32*, i32** %11, align 8
  %63 = load i32, i32* %15, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %62, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %61, %66
  store i32 %67, i32* %16, align 4
  %68 = load i32, i32* %16, align 4
  %69 = load i32, i32* %16, align 4
  %70 = lshr i32 %69, 1
  %71 = or i32 %68, %70
  %72 = xor i32 %71, -1
  %73 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 14), align 8
  %74 = and i32 %72, %73
  store i32 %74, i32* %16, align 4
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %106

76:                                               ; preds = %56
  %77 = load i32, i32* %16, align 4
  %78 = and i32 %77, 255
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = load i32, i32* %16, align 4
  %83 = lshr i32 %82, 8
  %84 = and i32 %83, 255
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = add nsw i32 %81, %87
  %89 = load i32, i32* %16, align 4
  %90 = lshr i32 %89, 16
  %91 = and i32 %90, 255
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = add nsw i32 %88, %94
  %96 = load i32, i32* %16, align 4
  %97 = lshr i32 %96, 24
  %98 = and i32 %97, 255
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = add nsw i32 %95, %101
  store i32 %102, i32* %12, align 4
  %103 = icmp sgt i32 %102, 1
  br i1 %103, label %104, label %105

104:                                              ; preds = %76
  br label %240

105:                                              ; preds = %76
  br label %106

106:                                              ; preds = %105, %56
  store i32 1, i32* %14, align 4
  br label %107

107:                                              ; preds = %166, %106
  %108 = load i32, i32* %14, align 4
  %109 = load i32, i32* %15, align 4
  %110 = icmp slt i32 %108, %109
  br i1 %110, label %111, label %169

111:                                              ; preds = %107
  %112 = load i32*, i32** %10, align 8
  %113 = load i32, i32* %14, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %112, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = load i32*, i32** %11, align 8
  %118 = load i32, i32* %14, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i32, i32* %117, i64 %119
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %116, %121
  store i32 %122, i32* %16, align 4
  %123 = load i32, i32* %16, align 4
  %124 = load i32, i32* %16, align 4
  %125 = lshr i32 %124, 1
  %126 = or i32 %123, %125
  %127 = xor i32 %126, -1
  %128 = and i32 %127, 1431655765
  store i32 %128, i32* %16, align 4
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %130, label %165

130:                                              ; preds = %111
  %131 = load i32, i32* %12, align 4
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %163, label %133

133:                                              ; preds = %130
  %134 = load i32, i32* %16, align 4
  %135 = and i32 %134, 255
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = load i32, i32* %16, align 4
  %140 = lshr i32 %139, 8
  %141 = and i32 %140, 255
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = add nsw i32 %138, %144
  %146 = load i32, i32* %16, align 4
  %147 = lshr i32 %146, 16
  %148 = and i32 %147, 255
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = add nsw i32 %145, %151
  %153 = load i32, i32* %16, align 4
  %154 = lshr i32 %153, 24
  %155 = and i32 %154, 255
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %156
  %158 = load i32, i32* %157, align 4
  %159 = add nsw i32 %152, %158
  %160 = load i32, i32* %12, align 4
  %161 = add nsw i32 %160, %159
  store i32 %161, i32* %12, align 4
  %162 = icmp sgt i32 %161, 1
  br i1 %162, label %163, label %164

163:                                              ; preds = %133, %130
  br label %240

164:                                              ; preds = %133
  br label %165

165:                                              ; preds = %164, %111
  br label %166

166:                                              ; preds = %165
  %167 = load i32, i32* %14, align 4
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %14, align 4
  br label %107

169:                                              ; preds = %107
  br label %170

170:                                              ; preds = %169, %53
  %171 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %171, i32* %18, align 4
  br label %172

172:                                              ; preds = %227, %170
  %173 = load i32, i32* %18, align 4
  %174 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %175 = icmp slt i32 %173, %174
  br i1 %175, label %176, label %230

176:                                              ; preds = %172
  %177 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %178 = load i32, i32* %18, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i32*, i32** %177, i64 %179
  %181 = load i32*, i32** %180, align 8
  store i32* %181, i32** %20, align 8
  %182 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  %183 = load i32, i32* %18, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i32, i32* %182, i64 %184
  %186 = load i32, i32* %185, align 4
  store i32 %186, i32* %19, align 4
  %187 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %188 = load i32, i32* %18, align 4
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds i32, i32* %187, i64 %189
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %17, align 4
  br label %192

192:                                              ; preds = %217, %176
  %193 = load i32, i32* %17, align 4
  %194 = load i32, i32* %19, align 4
  %195 = icmp sle i32 %193, %194
  br i1 %195, label %196, label %220

196:                                              ; preds = %192
  %197 = load i32*, i32** %10, align 8
  %198 = load i32, i32* %17, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i32, i32* %197, i64 %199
  %201 = load i32, i32* %200, align 4
  %202 = load i32*, i32** %11, align 8
  %203 = load i32, i32* %17, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i32, i32* %202, i64 %204
  %206 = load i32, i32* %205, align 4
  %207 = and i32 %201, %206
  %208 = load i32*, i32** %20, align 8
  %209 = load i32, i32* %17, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds i32, i32* %208, i64 %210
  %212 = load i32, i32* %211, align 4
  %213 = and i32 %207, %212
  %214 = icmp ne i32 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %196
  br label %226

216:                                              ; preds = %196
  br label %217

217:                                              ; preds = %216
  %218 = load i32, i32* %17, align 4
  %219 = add nsw i32 %218, 1
  store i32 %219, i32* %17, align 4
  br label %192

220:                                              ; preds = %192
  %221 = load i32, i32* %12, align 4
  %222 = add nsw i32 %221, 1
  store i32 %222, i32* %12, align 4
  %223 = icmp sgt i32 %222, 1
  br i1 %223, label %224, label %225

224:                                              ; preds = %220
  br label %240

225:                                              ; preds = %220
  br label %226

226:                                              ; preds = %225, %215
  br label %227

227:                                              ; preds = %226
  %228 = load i32, i32* %18, align 4
  %229 = add nsw i32 %228, 1
  store i32 %229, i32* %18, align 4
  br label %172

230:                                              ; preds = %172
  %231 = load i32, i32* %12, align 4
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %230
  store i32 0, i32* %5, align 4
  br label %250

234:                                              ; preds = %230
  %235 = load i32*, i32** %9, align 8
  %236 = load i32*, i32** %10, align 8
  %237 = load i32*, i32** %11, align 8
  %238 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @force_lower to i32* (i32*, i32*, i32*, ...)*)(i32* %235, i32* %236, i32* %237)
  br label %239

239:                                              ; preds = %234
  br label %240

240:                                              ; preds = %239, %224, %163, %104
  br label %241

241:                                              ; preds = %240, %47
  br label %242

242:                                              ; preds = %241
  %243 = load %struct.set_family*, %struct.set_family** %6, align 8
  %244 = getelementptr inbounds %struct.set_family, %struct.set_family* %243, i32 0, i32 0
  %245 = load i32, i32* %244, align 8
  %246 = load i32*, i32** %10, align 8
  %247 = sext i32 %245 to i64
  %248 = getelementptr inbounds i32, i32* %246, i64 %247
  store i32* %248, i32** %10, align 8
  br label %43

249:                                              ; preds = %43
  store i32 1, i32* %5, align 4
  br label %250

250:                                              ; preds = %249, %233
  %251 = load i32, i32* %5, align 4
  ret i32 %251
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @find_all_primes(%struct.set_family* %0, i32* %1, i32* %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %struct.set_family*, align 8
  %11 = alloca %struct.set_family*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %14 = load %struct.set_family*, %struct.set_family** %4, align 8
  %15 = getelementptr inbounds %struct.set_family, %struct.set_family* %14, i32 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %41

18:                                               ; preds = %3
  %19 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %20 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %19)
  store %struct.set_family* %20, %struct.set_family** %11, align 8
  %21 = load %struct.set_family*, %struct.set_family** %11, align 8
  %22 = getelementptr inbounds %struct.set_family, %struct.set_family* %21, i32 0, i32 5
  %23 = load i32*, i32** %22, align 8
  %24 = load %struct.set_family*, %struct.set_family** %11, align 8
  %25 = getelementptr inbounds %struct.set_family, %struct.set_family* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = load %struct.set_family*, %struct.set_family** %11, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 4
  %31 = mul nsw i32 %26, %29
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i32, i32* %23, i64 %32
  store i32* %33, i32** %8, align 8
  %34 = load i32*, i32** %8, align 8
  %35 = load i32*, i32** %5, align 8
  %36 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %34, i32* %35)
  %37 = load i32*, i32** %8, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 0
  %39 = load i32, i32* %38, align 4
  %40 = or i32 %39, 32768
  store i32 %40, i32* %38, align 4
  br label %205

41:                                               ; preds = %3
  %42 = load %struct.set_family*, %struct.set_family** %4, align 8
  %43 = getelementptr inbounds %struct.set_family, %struct.set_family* %42, i32 0, i32 4
  %44 = load i32, i32* %43, align 8
  %45 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %46 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %44, i32 %45)
  store %struct.set_family* %46, %struct.set_family** %10, align 8
  %47 = load %struct.set_family*, %struct.set_family** %4, align 8
  %48 = getelementptr inbounds %struct.set_family, %struct.set_family* %47, i32 0, i32 5
  %49 = load i32*, i32** %48, align 8
  store i32* %49, i32** %8, align 8
  %50 = load i32*, i32** %8, align 8
  %51 = load %struct.set_family*, %struct.set_family** %4, align 8
  %52 = getelementptr inbounds %struct.set_family, %struct.set_family* %51, i32 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = load %struct.set_family*, %struct.set_family** %4, align 8
  %55 = getelementptr inbounds %struct.set_family, %struct.set_family* %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = mul nsw i32 %53, %56
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %50, i64 %58
  store i32* %59, i32** %7, align 8
  br label %60

60:                                               ; preds = %91, %41
  %61 = load i32*, i32** %8, align 8
  %62 = load i32*, i32** %7, align 8
  %63 = icmp ult i32* %61, %62
  br i1 %63, label %64, label %98

64:                                               ; preds = %60
  %65 = load i32*, i32** %8, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 0
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 8192
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %90

70:                                               ; preds = %64
  %71 = load %struct.set_family*, %struct.set_family** %10, align 8
  %72 = getelementptr inbounds %struct.set_family, %struct.set_family* %71, i32 0, i32 5
  %73 = load i32*, i32** %72, align 8
  %74 = load %struct.set_family*, %struct.set_family** %10, align 8
  %75 = getelementptr inbounds %struct.set_family, %struct.set_family* %74, i32 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = load %struct.set_family*, %struct.set_family** %10, align 8
  %78 = getelementptr inbounds %struct.set_family, %struct.set_family* %77, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = mul nsw i32 %76, %79
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i32, i32* %73, i64 %82
  %84 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 13), align 8
  %85 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %83, i32* %84)
  store i32* %85, i32** %9, align 8
  %86 = load i32*, i32** %9, align 8
  %87 = load i32*, i32** %8, align 8
  %88 = load i32*, i32** %5, align 8
  %89 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @force_lower to i32* (i32*, i32*, i32*, ...)*)(i32* %86, i32* %87, i32* %88)
  br label %90

90:                                               ; preds = %70, %64
  br label %91

91:                                               ; preds = %90
  %92 = load %struct.set_family*, %struct.set_family** %4, align 8
  %93 = getelementptr inbounds %struct.set_family, %struct.set_family* %92, i32 0, i32 0
  %94 = load i32, i32* %93, align 8
  %95 = load i32*, i32** %8, align 8
  %96 = sext i32 %94 to i64
  %97 = getelementptr inbounds i32, i32* %95, i64 %96
  store i32* %97, i32** %8, align 8
  br label %60

98:                                               ; preds = %60
  %99 = load %struct.set_family*, %struct.set_family** %10, align 8
  %100 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %101 = call %struct.set_family* (%struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32)* @unravel to %struct.set_family* (%struct.set_family*, i32, ...)*)(%struct.set_family* %99, i32 %100)
  %102 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_rev_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %101)
  store %struct.set_family* %102, %struct.set_family** %10, align 8
  %103 = load %struct.set_family*, %struct.set_family** %10, align 8
  %104 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @exact_minimum_cover to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %103)
  store %struct.set_family* %104, %struct.set_family** %11, align 8
  %105 = load %struct.set_family*, %struct.set_family** %11, align 8
  %106 = getelementptr inbounds %struct.set_family, %struct.set_family* %105, i32 0, i32 5
  %107 = load i32*, i32** %106, align 8
  store i32* %107, i32** %8, align 8
  %108 = load i32*, i32** %8, align 8
  %109 = load %struct.set_family*, %struct.set_family** %11, align 8
  %110 = getelementptr inbounds %struct.set_family, %struct.set_family* %109, i32 0, i32 3
  %111 = load i32, i32* %110, align 4
  %112 = load %struct.set_family*, %struct.set_family** %11, align 8
  %113 = getelementptr inbounds %struct.set_family, %struct.set_family* %112, i32 0, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = mul nsw i32 %111, %114
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i32, i32* %108, i64 %116
  store i32* %117, i32** %7, align 8
  br label %118

118:                                              ; preds = %196, %98
  %119 = load i32*, i32** %8, align 8
  %120 = load i32*, i32** %7, align 8
  %121 = icmp ult i32* %119, %120
  br i1 %121, label %122, label %203

122:                                              ; preds = %118
  %123 = load i32*, i32** %6, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 0
  %125 = load i32, i32* %124, align 4
  %126 = and i32 %125, 1023
  store i32 %126, i32* %12, align 4
  %127 = load i32*, i32** %8, align 8
  %128 = getelementptr inbounds i32, i32* %127, i64 0
  %129 = load i32, i32* %128, align 4
  %130 = and i32 %129, -1024
  store i32 %130, i32* %128, align 4
  %131 = load i32, i32* %12, align 4
  %132 = load i32*, i32** %8, align 8
  %133 = getelementptr inbounds i32, i32* %132, i64 0
  %134 = load i32, i32* %133, align 4
  %135 = or i32 %134, %131
  store i32 %135, i32* %133, align 4
  br label %136

136:                                              ; preds = %153, %122
  %137 = load i32*, i32** %6, align 8
  %138 = load i32, i32* %12, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i32, i32* %137, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = load i32*, i32** %8, align 8
  %143 = load i32, i32* %12, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds i32, i32* %142, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = xor i32 %146, -1
  %148 = and i32 %141, %147
  %149 = load i32*, i32** %8, align 8
  %150 = load i32, i32* %12, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i32, i32* %149, i64 %151
  store i32 %148, i32* %152, align 4
  br label %153

153:                                              ; preds = %136
  %154 = load i32, i32* %12, align 4
  %155 = add nsw i32 %154, -1
  store i32 %155, i32* %12, align 4
  %156 = icmp sgt i32 %155, 0
  br i1 %156, label %136, label %157

157:                                              ; preds = %153
  %158 = load i32*, i32** %8, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 0
  %160 = load i32, i32* %159, align 4
  %161 = and i32 %160, 1023
  store i32 %161, i32* %13, align 4
  %162 = load i32*, i32** %8, align 8
  %163 = getelementptr inbounds i32, i32* %162, i64 0
  %164 = load i32, i32* %163, align 4
  %165 = and i32 %164, -1024
  store i32 %165, i32* %163, align 4
  %166 = load i32, i32* %13, align 4
  %167 = load i32*, i32** %8, align 8
  %168 = getelementptr inbounds i32, i32* %167, i64 0
  %169 = load i32, i32* %168, align 4
  %170 = or i32 %169, %166
  store i32 %170, i32* %168, align 4
  br label %171

171:                                              ; preds = %187, %157
  %172 = load i32*, i32** %8, align 8
  %173 = load i32, i32* %13, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i32, i32* %172, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = load i32*, i32** %5, align 8
  %178 = load i32, i32* %13, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i32, i32* %177, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = or i32 %176, %181
  %183 = load i32*, i32** %8, align 8
  %184 = load i32, i32* %13, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds i32, i32* %183, i64 %185
  store i32 %182, i32* %186, align 4
  br label %187

187:                                              ; preds = %171
  %188 = load i32, i32* %13, align 4
  %189 = add nsw i32 %188, -1
  store i32 %189, i32* %13, align 4
  %190 = icmp sgt i32 %189, 0
  br i1 %190, label %171, label %191

191:                                              ; preds = %187
  %192 = load i32*, i32** %8, align 8
  %193 = getelementptr inbounds i32, i32* %192, i64 0
  %194 = load i32, i32* %193, align 4
  %195 = or i32 %194, 32768
  store i32 %195, i32* %193, align 4
  br label %196

196:                                              ; preds = %191
  %197 = load %struct.set_family*, %struct.set_family** %11, align 8
  %198 = getelementptr inbounds %struct.set_family, %struct.set_family* %197, i32 0, i32 0
  %199 = load i32, i32* %198, align 8
  %200 = load i32*, i32** %8, align 8
  %201 = sext i32 %199 to i64
  %202 = getelementptr inbounds i32, i32* %200, i64 %201
  store i32* %202, i32** %8, align 8
  br label %118

203:                                              ; preds = %118
  %204 = load %struct.set_family*, %struct.set_family** %10, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %204)
  br label %205

205:                                              ; preds = %203, %18
  %206 = load %struct.set_family*, %struct.set_family** %11, align 8
  ret %struct.set_family* %206
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @all_primes(%struct.set_family* %0, %struct.set_family* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca %struct.set_family*, align 8
  %10 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  %11 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %12 = icmp sle i32 %11, 32
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  br label %20

14:                                               ; preds = %2
  %15 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %16 = sub nsw i32 %15, 1
  %17 = ashr i32 %16, 5
  %18 = add nsw i32 %17, 1
  %19 = add nsw i32 %18, 1
  br label %20

20:                                               ; preds = %14, %13
  %21 = phi i32 [ 2, %13 ], [ %19, %14 ]
  %22 = sext i32 %21 to i64
  %23 = mul i64 4, %22
  %24 = call noalias i8* @malloc(i64 %23) #7
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %27 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %25, i32 %26)
  store i32* %27, i32** %8, align 8
  %28 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %29 = icmp sle i32 %28, 32
  br i1 %29, label %30, label %31

30:                                               ; preds = %20
  br label %37

31:                                               ; preds = %20
  %32 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %33 = sub nsw i32 %32, 1
  %34 = ashr i32 %33, 5
  %35 = add nsw i32 %34, 1
  %36 = add nsw i32 %35, 1
  br label %37

37:                                               ; preds = %31, %30
  %38 = phi i32 [ 2, %30 ], [ %36, %31 ]
  %39 = sext i32 %38 to i64
  %40 = mul i64 4, %39
  %41 = call noalias i8* @malloc(i64 %40) #7
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %44 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %42, i32 %43)
  store i32* %44, i32** %7, align 8
  %45 = load %struct.set_family*, %struct.set_family** %3, align 8
  %46 = getelementptr inbounds %struct.set_family, %struct.set_family* %45, i32 0, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %49 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %47, i32 %48)
  store %struct.set_family* %49, %struct.set_family** %9, align 8
  %50 = load %struct.set_family*, %struct.set_family** %3, align 8
  %51 = getelementptr inbounds %struct.set_family, %struct.set_family* %50, i32 0, i32 5
  %52 = load i32*, i32** %51, align 8
  store i32* %52, i32** %6, align 8
  %53 = load i32*, i32** %6, align 8
  %54 = load %struct.set_family*, %struct.set_family** %3, align 8
  %55 = getelementptr inbounds %struct.set_family, %struct.set_family* %54, i32 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = load %struct.set_family*, %struct.set_family** %3, align 8
  %58 = getelementptr inbounds %struct.set_family, %struct.set_family* %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = mul nsw i32 %56, %59
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i32, i32* %53, i64 %61
  store i32* %62, i32** %5, align 8
  br label %63

63:                                               ; preds = %97, %37
  %64 = load i32*, i32** %6, align 8
  %65 = load i32*, i32** %5, align 8
  %66 = icmp ult i32* %64, %65
  br i1 %66, label %67, label %104

67:                                               ; preds = %63
  %68 = load i32*, i32** %6, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 0
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, 32768
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %67
  %74 = load %struct.set_family*, %struct.set_family** %9, align 8
  %75 = load i32*, i32** %6, align 8
  %76 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %74, i32* %75)
  store %struct.set_family* %76, %struct.set_family** %9, align 8
  br label %96

77:                                               ; preds = %67
  %78 = load i32*, i32** %7, align 8
  %79 = load i32*, i32** %6, align 8
  %80 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %78, i32* %79)
  %81 = load i32*, i32** %8, align 8
  %82 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %83 = load i32*, i32** %7, align 8
  %84 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %81, i32* %82, i32* %83)
  %85 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void @setup_BB_CC(%struct.set_family* %85, %struct.set_family* null)
  %86 = load %struct.set_family*, %struct.set_family** %4, align 8
  %87 = load i32*, i32** %7, align 8
  %88 = load i32*, i32** %8, align 8
  call void @essen_parts(%struct.set_family* %86, %struct.set_family* null, i32* %87, i32* %88)
  %89 = load %struct.set_family*, %struct.set_family** %4, align 8
  %90 = load i32*, i32** %7, align 8
  %91 = load i32*, i32** %8, align 8
  %92 = call %struct.set_family* @find_all_primes(%struct.set_family* %89, i32* %90, i32* %91)
  store %struct.set_family* %92, %struct.set_family** %10, align 8
  %93 = load %struct.set_family*, %struct.set_family** %9, align 8
  %94 = load %struct.set_family*, %struct.set_family** %10, align 8
  %95 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_append to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %93, %struct.set_family* %94)
  store %struct.set_family* %95, %struct.set_family** %9, align 8
  br label %96

96:                                               ; preds = %77, %73
  br label %97

97:                                               ; preds = %96
  %98 = load %struct.set_family*, %struct.set_family** %3, align 8
  %99 = getelementptr inbounds %struct.set_family, %struct.set_family* %98, i32 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = load i32*, i32** %6, align 8
  %102 = sext i32 %100 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  store i32* %103, i32** %6, align 8
  br label %63

104:                                              ; preds = %63
  %105 = load i32*, i32** %7, align 8
  %106 = icmp ne i32* %105, null
  br i1 %106, label %107, label %110

107:                                              ; preds = %104
  %108 = load i32*, i32** %7, align 8
  %109 = bitcast i32* %108 to i8*
  call void @free(i8* %109) #7
  store i32* null, i32** %7, align 8
  br label %110

110:                                              ; preds = %107, %104
  %111 = load i32*, i32** %8, align 8
  %112 = icmp ne i32* %111, null
  br i1 %112, label %113, label %116

113:                                              ; preds = %110
  %114 = load i32*, i32** %8, align 8
  %115 = bitcast i32* %114 to i8*
  call void @free(i8* %115) #7
  store i32* null, i32** %8, align 8
  br label %116

116:                                              ; preds = %113, %110
  %117 = load %struct.set_family*, %struct.set_family** %9, align 8
  ret %struct.set_family* %117
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @expand_gasp(%struct.set_family* %0, %struct.set_family* %1, %struct.set_family* %2, %struct.set_family* %3) #0 {
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %5, align 8
  store %struct.set_family* %1, %struct.set_family** %6, align 8
  store %struct.set_family* %2, %struct.set_family** %7, align 8
  store %struct.set_family* %3, %struct.set_family** %8, align 8
  %11 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %12 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 10, i32 %11)
  store %struct.set_family* %12, %struct.set_family** %10, align 8
  store i32 0, i32* %9, align 4
  br label %13

13:                                               ; preds = %25, %4
  %14 = load i32, i32* %9, align 4
  %15 = load %struct.set_family*, %struct.set_family** %5, align 8
  %16 = getelementptr inbounds %struct.set_family, %struct.set_family* %15, i32 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %14, %17
  br i1 %18, label %19, label %28

19:                                               ; preds = %13
  %20 = load %struct.set_family*, %struct.set_family** %5, align 8
  %21 = load %struct.set_family*, %struct.set_family** %6, align 8
  %22 = load %struct.set_family*, %struct.set_family** %7, align 8
  %23 = load %struct.set_family*, %struct.set_family** %8, align 8
  %24 = load i32, i32* %9, align 4
  call void @expand1_gasp(%struct.set_family* %20, %struct.set_family* %21, %struct.set_family* %22, %struct.set_family* %23, i32 %24, %struct.set_family** %10)
  br label %25

25:                                               ; preds = %19
  %26 = load i32, i32* %9, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %9, align 4
  br label %13

28:                                               ; preds = %13
  %29 = load %struct.set_family*, %struct.set_family** %10, align 8
  %30 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_dupl to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %29)
  store %struct.set_family* %30, %struct.set_family** %10, align 8
  %31 = load %struct.set_family*, %struct.set_family** %10, align 8
  %32 = load %struct.set_family*, %struct.set_family** %7, align 8
  %33 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, i32)* @expand to %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...)*)(%struct.set_family* %31, %struct.set_family* %32, i32 0)
  store %struct.set_family* %33, %struct.set_family** %10, align 8
  %34 = load %struct.set_family*, %struct.set_family** %10, align 8
  ret %struct.set_family* %34
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @expand1_gasp(%struct.set_family* %0, %struct.set_family* %1, %struct.set_family* %2, %struct.set_family* %3, i32 %4, %struct.set_family** %5) #0 {
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca %struct.set_family*, align 8
  %10 = alloca %struct.set_family*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.set_family**, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca i32**, align 8
  %21 = alloca i32*, align 8
  %22 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %7, align 8
  store %struct.set_family* %1, %struct.set_family** %8, align 8
  store %struct.set_family* %2, %struct.set_family** %9, align 8
  store %struct.set_family* %3, %struct.set_family** %10, align 8
  store i32 %4, i32* %11, align 4
  store %struct.set_family** %5, %struct.set_family*** %12, align 8
  %23 = load i32, i32* @debug, align 4
  %24 = and i32 %23, 8
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %39

26:                                               ; preds = %6
  %27 = load %struct.set_family*, %struct.set_family** %7, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 5
  %29 = load i32*, i32** %28, align 8
  %30 = load %struct.set_family*, %struct.set_family** %7, align 8
  %31 = getelementptr inbounds %struct.set_family, %struct.set_family* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = load i32, i32* %11, align 4
  %34 = mul nsw i32 %32, %33
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %29, i64 %35
  %37 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %36)
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.187, i64 0, i64 0), i8* %37)
  br label %39

39:                                               ; preds = %26, %6
  %40 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %41 = icmp sle i32 %40, 32
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  br label %49

43:                                               ; preds = %39
  %44 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %45 = sub nsw i32 %44, 1
  %46 = ashr i32 %45, 5
  %47 = add nsw i32 %46, 1
  %48 = add nsw i32 %47, 1
  br label %49

49:                                               ; preds = %43, %42
  %50 = phi i32 [ 2, %42 ], [ %48, %43 ]
  %51 = sext i32 %50 to i64
  %52 = mul i64 4, %51
  %53 = call noalias i8* @malloc(i64 %52) #7
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %56 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %54, i32 %55)
  store i32* %56, i32** %17, align 8
  %57 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %58 = icmp sle i32 %57, 32
  br i1 %58, label %59, label %60

59:                                               ; preds = %49
  br label %66

60:                                               ; preds = %49
  %61 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %62 = sub nsw i32 %61, 1
  %63 = ashr i32 %62, 5
  %64 = add nsw i32 %63, 1
  %65 = add nsw i32 %64, 1
  br label %66

66:                                               ; preds = %60, %59
  %67 = phi i32 [ 2, %59 ], [ %65, %60 ]
  %68 = sext i32 %67 to i64
  %69 = mul i64 4, %68
  %70 = call noalias i8* @malloc(i64 %69) #7
  %71 = bitcast i8* %70 to i32*
  %72 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %73 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %71, i32 %72)
  store i32* %73, i32** %18, align 8
  %74 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %75 = icmp sle i32 %74, 32
  br i1 %75, label %76, label %77

76:                                               ; preds = %66
  br label %83

77:                                               ; preds = %66
  %78 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %79 = sub nsw i32 %78, 1
  %80 = ashr i32 %79, 5
  %81 = add nsw i32 %80, 1
  %82 = add nsw i32 %81, 1
  br label %83

83:                                               ; preds = %77, %76
  %84 = phi i32 [ 2, %76 ], [ %82, %77 ]
  %85 = sext i32 %84 to i64
  %86 = mul i64 4, %85
  %87 = call noalias i8* @malloc(i64 %86) #7
  %88 = bitcast i8* %87 to i32*
  %89 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %90 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %88, i32 %89)
  store i32* %90, i32** %19, align 8
  %91 = load %struct.set_family*, %struct.set_family** %9, align 8
  %92 = getelementptr inbounds %struct.set_family, %struct.set_family* %91, i32 0, i32 3
  %93 = load i32, i32* %92, align 4
  %94 = load %struct.set_family*, %struct.set_family** %9, align 8
  %95 = getelementptr inbounds %struct.set_family, %struct.set_family* %94, i32 0, i32 4
  store i32 %93, i32* %95, align 8
  %96 = load %struct.set_family*, %struct.set_family** %9, align 8
  %97 = getelementptr inbounds %struct.set_family, %struct.set_family* %96, i32 0, i32 5
  %98 = load i32*, i32** %97, align 8
  store i32* %98, i32** %14, align 8
  %99 = load i32*, i32** %14, align 8
  %100 = load %struct.set_family*, %struct.set_family** %9, align 8
  %101 = getelementptr inbounds %struct.set_family, %struct.set_family* %100, i32 0, i32 3
  %102 = load i32, i32* %101, align 4
  %103 = load %struct.set_family*, %struct.set_family** %9, align 8
  %104 = getelementptr inbounds %struct.set_family, %struct.set_family* %103, i32 0, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = mul nsw i32 %102, %105
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i32, i32* %99, i64 %107
  store i32* %108, i32** %15, align 8
  br label %109

109:                                              ; preds = %118, %83
  %110 = load i32*, i32** %14, align 8
  %111 = load i32*, i32** %15, align 8
  %112 = icmp ult i32* %110, %111
  br i1 %112, label %113, label %125

113:                                              ; preds = %109
  %114 = load i32*, i32** %14, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 0
  %116 = load i32, i32* %115, align 4
  %117 = or i32 %116, 8192
  store i32 %117, i32* %115, align 4
  br label %118

118:                                              ; preds = %113
  %119 = load %struct.set_family*, %struct.set_family** %9, align 8
  %120 = getelementptr inbounds %struct.set_family, %struct.set_family* %119, i32 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = load i32*, i32** %14, align 8
  %123 = sext i32 %121 to i64
  %124 = getelementptr inbounds i32, i32* %122, i64 %123
  store i32* %124, i32** %14, align 8
  br label %109

125:                                              ; preds = %109
  %126 = load %struct.set_family*, %struct.set_family** %7, align 8
  %127 = getelementptr inbounds %struct.set_family, %struct.set_family* %126, i32 0, i32 3
  %128 = load i32, i32* %127, align 4
  %129 = load %struct.set_family*, %struct.set_family** %7, align 8
  %130 = getelementptr inbounds %struct.set_family, %struct.set_family* %129, i32 0, i32 4
  store i32 %128, i32* %130, align 8
  %131 = load %struct.set_family*, %struct.set_family** %7, align 8
  %132 = getelementptr inbounds %struct.set_family, %struct.set_family* %131, i32 0, i32 5
  %133 = load i32*, i32** %132, align 8
  store i32* %133, i32** %16, align 8
  store i32 0, i32* %13, align 4
  br label %134

134:                                              ; preds = %165, %125
  %135 = load i32, i32* %13, align 4
  %136 = load %struct.set_family*, %struct.set_family** %7, align 8
  %137 = getelementptr inbounds %struct.set_family, %struct.set_family* %136, i32 0, i32 3
  %138 = load i32, i32* %137, align 4
  %139 = icmp slt i32 %135, %138
  br i1 %139, label %140, label %174

140:                                              ; preds = %134
  %141 = load i32, i32* %11, align 4
  %142 = load i32, i32* %13, align 4
  %143 = icmp eq i32 %141, %142
  br i1 %143, label %150, label %144

144:                                              ; preds = %140
  %145 = load i32*, i32** %16, align 8
  %146 = getelementptr inbounds i32, i32* %145, i64 0
  %147 = load i32, i32* %146, align 4
  %148 = and i32 %147, 32768
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %150, label %159

150:                                              ; preds = %144, %140
  %151 = load %struct.set_family*, %struct.set_family** %7, align 8
  %152 = getelementptr inbounds %struct.set_family, %struct.set_family* %151, i32 0, i32 4
  %153 = load i32, i32* %152, align 8
  %154 = add nsw i32 %153, -1
  store i32 %154, i32* %152, align 8
  %155 = load i32*, i32** %16, align 8
  %156 = getelementptr inbounds i32, i32* %155, i64 0
  %157 = load i32, i32* %156, align 4
  %158 = and i32 %157, -8193
  store i32 %158, i32* %156, align 4
  br label %164

159:                                              ; preds = %144
  %160 = load i32*, i32** %16, align 8
  %161 = getelementptr inbounds i32, i32* %160, i64 0
  %162 = load i32, i32* %161, align 4
  %163 = or i32 %162, 8192
  store i32 %163, i32* %161, align 4
  br label %164

164:                                              ; preds = %159, %150
  br label %165

165:                                              ; preds = %164
  %166 = load %struct.set_family*, %struct.set_family** %7, align 8
  %167 = getelementptr inbounds %struct.set_family, %struct.set_family* %166, i32 0, i32 0
  %168 = load i32, i32* %167, align 8
  %169 = load i32*, i32** %16, align 8
  %170 = sext i32 %168 to i64
  %171 = getelementptr inbounds i32, i32* %169, i64 %170
  store i32* %171, i32** %16, align 8
  %172 = load i32, i32* %13, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %13, align 4
  br label %134

174:                                              ; preds = %134
  %175 = load i32*, i32** %17, align 8
  %176 = load %struct.set_family*, %struct.set_family** %7, align 8
  %177 = getelementptr inbounds %struct.set_family, %struct.set_family* %176, i32 0, i32 5
  %178 = load i32*, i32** %177, align 8
  %179 = load %struct.set_family*, %struct.set_family** %7, align 8
  %180 = getelementptr inbounds %struct.set_family, %struct.set_family* %179, i32 0, i32 0
  %181 = load i32, i32* %180, align 8
  %182 = load i32, i32* %11, align 4
  %183 = mul nsw i32 %181, %182
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i32, i32* %178, i64 %184
  %186 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %175, i32* %185)
  %187 = load i32*, i32** %18, align 8
  %188 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %189 = load i32*, i32** %17, align 8
  %190 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %187, i32* %188, i32* %189)
  %191 = load %struct.set_family*, %struct.set_family** %9, align 8
  %192 = load %struct.set_family*, %struct.set_family** %7, align 8
  %193 = load i32*, i32** %17, align 8
  %194 = load i32*, i32** %18, align 8
  call void (%struct.set_family*, %struct.set_family*, i32*, i32*, ...) bitcast (void (%struct.set_family*, %struct.set_family*, i32*, i32*)* @essen_parts to void (%struct.set_family*, %struct.set_family*, i32*, i32*, ...)*)(%struct.set_family* %191, %struct.set_family* %192, i32* %193, i32* %194)
  %195 = load %struct.set_family*, %struct.set_family** %9, align 8
  %196 = load i32*, i32** %17, align 8
  %197 = load i32*, i32** %18, align 8
  call void (%struct.set_family*, i32*, i32*, ...) bitcast (void (%struct.set_family*, i32*, i32*)* @essen_raising to void (%struct.set_family*, i32*, i32*, ...)*)(%struct.set_family* %195, i32* %196, i32* %197)
  %198 = load %struct.set_family*, %struct.set_family** %7, align 8
  %199 = getelementptr inbounds %struct.set_family, %struct.set_family* %198, i32 0, i32 5
  %200 = load i32*, i32** %199, align 8
  store i32* %200, i32** %16, align 8
  store i32 0, i32* %13, align 4
  br label %201

201:                                              ; preds = %312, %174
  %202 = load i32, i32* %13, align 4
  %203 = load %struct.set_family*, %struct.set_family** %7, align 8
  %204 = getelementptr inbounds %struct.set_family, %struct.set_family* %203, i32 0, i32 3
  %205 = load i32, i32* %204, align 4
  %206 = icmp slt i32 %202, %205
  br i1 %206, label %207, label %321

207:                                              ; preds = %201
  %208 = load i32*, i32** %16, align 8
  %209 = getelementptr inbounds i32, i32* %208, i64 0
  %210 = load i32, i32* %209, align 4
  %211 = and i32 %210, 8192
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %213, label %311

213:                                              ; preds = %207
  %214 = load i32*, i32** %16, align 8
  %215 = load i32*, i32** %17, align 8
  %216 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_implies to i32 (i32*, i32*, ...)*)(i32* %214, i32* %215)
  %217 = icmp ne i32 %216, 0
  br i1 %217, label %225, label %218

218:                                              ; preds = %213
  %219 = load %struct.set_family*, %struct.set_family** %9, align 8
  %220 = load i32*, i32** %16, align 8
  %221 = load i32*, i32** %17, align 8
  %222 = load i32*, i32** %19, align 8
  %223 = call i32 (%struct.set_family*, i32*, i32*, i32*, ...) bitcast (i32 (%struct.set_family*, i32*, i32*, i32*)* @feasibly_covered to i32 (%struct.set_family*, i32*, i32*, i32*, ...)*)(%struct.set_family* %219, i32* %220, i32* %221, i32* %222)
  %224 = icmp ne i32 %223, 0
  br i1 %224, label %225, label %310

225:                                              ; preds = %218, %213
  %226 = load %struct.set_family*, %struct.set_family** %10, align 8
  %227 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %226)
  store %struct.set_family* %227, %struct.set_family** %22, align 8
  %228 = load %struct.set_family*, %struct.set_family** %22, align 8
  %229 = getelementptr inbounds %struct.set_family, %struct.set_family* %228, i32 0, i32 5
  %230 = load i32*, i32** %229, align 8
  %231 = load %struct.set_family*, %struct.set_family** %22, align 8
  %232 = getelementptr inbounds %struct.set_family, %struct.set_family* %231, i32 0, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = load i32, i32* %11, align 4
  %235 = mul nsw i32 %233, %234
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i32, i32* %230, i64 %236
  %238 = load %struct.set_family*, %struct.set_family** %7, align 8
  %239 = getelementptr inbounds %struct.set_family, %struct.set_family* %238, i32 0, i32 5
  %240 = load i32*, i32** %239, align 8
  %241 = load %struct.set_family*, %struct.set_family** %7, align 8
  %242 = getelementptr inbounds %struct.set_family, %struct.set_family* %241, i32 0, i32 0
  %243 = load i32, i32* %242, align 8
  %244 = load i32, i32* %11, align 4
  %245 = mul nsw i32 %243, %244
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i32, i32* %240, i64 %246
  %248 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %237, i32* %247)
  %249 = load %struct.set_family*, %struct.set_family** %22, align 8
  %250 = load %struct.set_family*, %struct.set_family** %8, align 8
  %251 = call i32** (%struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*)* @cube2list to i32** (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %249, %struct.set_family* %250)
  store i32** %251, i32*** %20, align 8
  %252 = load i32**, i32*** %20, align 8
  %253 = load %struct.set_family*, %struct.set_family** %22, align 8
  %254 = getelementptr inbounds %struct.set_family, %struct.set_family* %253, i32 0, i32 5
  %255 = load i32*, i32** %254, align 8
  %256 = load %struct.set_family*, %struct.set_family** %22, align 8
  %257 = getelementptr inbounds %struct.set_family, %struct.set_family* %256, i32 0, i32 0
  %258 = load i32, i32* %257, align 8
  %259 = load i32, i32* %13, align 4
  %260 = mul nsw i32 %258, %259
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds i32, i32* %255, i64 %261
  %263 = call i32* (i32**, i32*, ...) bitcast (i32* (i32**, i32*)* @reduce_cube to i32* (i32**, i32*, ...)*)(i32** %252, i32* %262)
  store i32* %263, i32** %21, align 8
  %264 = load i32**, i32*** %20, align 8
  %265 = getelementptr inbounds i32*, i32** %264, i64 0
  %266 = load i32*, i32** %265, align 8
  %267 = icmp ne i32* %266, null
  br i1 %267, label %268, label %275

268:                                              ; preds = %225
  %269 = load i32**, i32*** %20, align 8
  %270 = getelementptr inbounds i32*, i32** %269, i64 0
  %271 = load i32*, i32** %270, align 8
  %272 = bitcast i32* %271 to i8*
  call void @free(i8* %272) #7
  %273 = load i32**, i32*** %20, align 8
  %274 = getelementptr inbounds i32*, i32** %273, i64 0
  store i32* null, i32** %274, align 8
  br label %275

275:                                              ; preds = %268, %225
  %276 = load i32**, i32*** %20, align 8
  %277 = icmp ne i32** %276, null
  br i1 %277, label %278, label %281

278:                                              ; preds = %275
  %279 = load i32**, i32*** %20, align 8
  %280 = bitcast i32** %279 to i8*
  call void @free(i8* %280) #7
  store i32** null, i32*** %20, align 8
  br label %281

281:                                              ; preds = %278, %275
  %282 = load %struct.set_family*, %struct.set_family** %22, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %282)
  %283 = load %struct.set_family*, %struct.set_family** %9, align 8
  %284 = load i32*, i32** %21, align 8
  %285 = load i32*, i32** %17, align 8
  %286 = load i32*, i32** %19, align 8
  %287 = call i32 (%struct.set_family*, i32*, i32*, i32*, ...) bitcast (i32 (%struct.set_family*, i32*, i32*, i32*)* @feasibly_covered to i32 (%struct.set_family*, i32*, i32*, i32*, ...)*)(%struct.set_family* %283, i32* %284, i32* %285, i32* %286)
  %288 = icmp ne i32 %287, 0
  br i1 %288, label %289, label %303

289:                                              ; preds = %281
  %290 = load i32*, i32** %19, align 8
  %291 = load i32*, i32** %17, align 8
  %292 = load i32*, i32** %21, align 8
  %293 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %290, i32* %291, i32* %292)
  %294 = load i32*, i32** %19, align 8
  %295 = getelementptr inbounds i32, i32* %294, i64 0
  %296 = load i32, i32* %295, align 4
  %297 = and i32 %296, -32769
  store i32 %297, i32* %295, align 4
  %298 = load %struct.set_family**, %struct.set_family*** %12, align 8
  %299 = load %struct.set_family*, %struct.set_family** %298, align 8
  %300 = load i32*, i32** %19, align 8
  %301 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %299, i32* %300)
  %302 = load %struct.set_family**, %struct.set_family*** %12, align 8
  store %struct.set_family* %301, %struct.set_family** %302, align 8
  br label %303

303:                                              ; preds = %289, %281
  %304 = load i32*, i32** %21, align 8
  %305 = icmp ne i32* %304, null
  br i1 %305, label %306, label %309

306:                                              ; preds = %303
  %307 = load i32*, i32** %21, align 8
  %308 = bitcast i32* %307 to i8*
  call void @free(i8* %308) #7
  store i32* null, i32** %21, align 8
  br label %309

309:                                              ; preds = %306, %303
  br label %310

310:                                              ; preds = %309, %218
  br label %311

311:                                              ; preds = %310, %207
  br label %312

312:                                              ; preds = %311
  %313 = load %struct.set_family*, %struct.set_family** %7, align 8
  %314 = getelementptr inbounds %struct.set_family, %struct.set_family* %313, i32 0, i32 0
  %315 = load i32, i32* %314, align 8
  %316 = load i32*, i32** %16, align 8
  %317 = sext i32 %315 to i64
  %318 = getelementptr inbounds i32, i32* %316, i64 %317
  store i32* %318, i32** %16, align 8
  %319 = load i32, i32* %13, align 4
  %320 = add nsw i32 %319, 1
  store i32 %320, i32* %13, align 4
  br label %201

321:                                              ; preds = %201
  %322 = load i32*, i32** %17, align 8
  %323 = icmp ne i32* %322, null
  br i1 %323, label %324, label %327

324:                                              ; preds = %321
  %325 = load i32*, i32** %17, align 8
  %326 = bitcast i32* %325 to i8*
  call void @free(i8* %326) #7
  store i32* null, i32** %17, align 8
  br label %327

327:                                              ; preds = %324, %321
  %328 = load i32*, i32** %18, align 8
  %329 = icmp ne i32* %328, null
  br i1 %329, label %330, label %333

330:                                              ; preds = %327
  %331 = load i32*, i32** %18, align 8
  %332 = bitcast i32* %331 to i8*
  call void @free(i8* %332) #7
  store i32* null, i32** %18, align 8
  br label %333

333:                                              ; preds = %330, %327
  %334 = load i32*, i32** %19, align 8
  %335 = icmp ne i32* %334, null
  br i1 %335, label %336, label %339

336:                                              ; preds = %333
  %337 = load i32*, i32** %19, align 8
  %338 = bitcast i32* %337 to i8*
  call void @free(i8* %338) #7
  store i32* null, i32** %19, align 8
  br label %339

339:                                              ; preds = %336, %333
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @irred_gasp(%struct.set_family* %0, %struct.set_family* %1, %struct.set_family* %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store %struct.set_family* %1, %struct.set_family** %5, align 8
  store %struct.set_family* %2, %struct.set_family** %6, align 8
  %7 = load %struct.set_family*, %struct.set_family** %6, align 8
  %8 = getelementptr inbounds %struct.set_family, %struct.set_family* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %3
  %12 = load %struct.set_family*, %struct.set_family** %4, align 8
  %13 = load %struct.set_family*, %struct.set_family** %6, align 8
  %14 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_append to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %12, %struct.set_family* %13)
  %15 = load %struct.set_family*, %struct.set_family** %5, align 8
  %16 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @irredundant to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %14, %struct.set_family* %15)
  store %struct.set_family* %16, %struct.set_family** %4, align 8
  br label %19

17:                                               ; preds = %3
  %18 = load %struct.set_family*, %struct.set_family** %6, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %18)
  br label %19

19:                                               ; preds = %17, %11
  %20 = load %struct.set_family*, %struct.set_family** %4, align 8
  ret %struct.set_family* %20
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @last_gasp(%struct.set_family* %0, %struct.set_family* %1, %struct.set_family* %2, %struct.cost_struct* %3) #0 {
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.cost_struct*, align 8
  %9 = alloca %struct.set_family*, align 8
  %10 = alloca %struct.set_family*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %struct.set_family* %0, %struct.set_family** %5, align 8
  store %struct.set_family* %1, %struct.set_family** %6, align 8
  store %struct.set_family* %2, %struct.set_family** %7, align 8
  store %struct.cost_struct* %3, %struct.cost_struct** %8, align 8
  %14 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %14, i64* %11, align 8
  %15 = load %struct.set_family*, %struct.set_family** %5, align 8
  %16 = load %struct.set_family*, %struct.set_family** %6, align 8
  %17 = call %struct.set_family* @reduce_gasp(%struct.set_family* %15, %struct.set_family* %16)
  store %struct.set_family* %17, %struct.set_family** %9, align 8
  %18 = load i64, i64* %11, align 8
  %19 = load %struct.set_family*, %struct.set_family** %9, align 8
  %20 = load %struct.cost_struct*, %struct.cost_struct** %8, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %18, i32 9, %struct.set_family* %19, %struct.cost_struct* %20)
  %21 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %21, i64* %12, align 8
  %22 = load %struct.set_family*, %struct.set_family** %9, align 8
  %23 = load %struct.set_family*, %struct.set_family** %6, align 8
  %24 = load %struct.set_family*, %struct.set_family** %7, align 8
  %25 = load %struct.set_family*, %struct.set_family** %5, align 8
  %26 = call %struct.set_family* @expand_gasp(%struct.set_family* %22, %struct.set_family* %23, %struct.set_family* %24, %struct.set_family* %25)
  store %struct.set_family* %26, %struct.set_family** %10, align 8
  %27 = load i64, i64* %12, align 8
  %28 = load %struct.set_family*, %struct.set_family** %10, align 8
  %29 = load %struct.cost_struct*, %struct.cost_struct** %8, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %27, i32 7, %struct.set_family* %28, %struct.cost_struct* %29)
  %30 = load %struct.set_family*, %struct.set_family** %9, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %30)
  %31 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %31, i64* %13, align 8
  %32 = load %struct.set_family*, %struct.set_family** %5, align 8
  %33 = load %struct.set_family*, %struct.set_family** %6, align 8
  %34 = load %struct.set_family*, %struct.set_family** %10, align 8
  %35 = call %struct.set_family* @irred_gasp(%struct.set_family* %32, %struct.set_family* %33, %struct.set_family* %34)
  store %struct.set_family* %35, %struct.set_family** %5, align 8
  %36 = load i64, i64* %13, align 8
  %37 = load %struct.set_family*, %struct.set_family** %5, align 8
  %38 = load %struct.cost_struct*, %struct.cost_struct** %8, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %36, i32 8, %struct.set_family* %37, %struct.cost_struct* %38)
  %39 = load %struct.set_family*, %struct.set_family** %5, align 8
  ret %struct.set_family* %39
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.set_family* @reduce_gasp(%struct.set_family* %0, %struct.set_family* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32**, align 8
  %9 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  %10 = load %struct.set_family*, %struct.set_family** %3, align 8
  %11 = getelementptr inbounds %struct.set_family, %struct.set_family* %10, i32 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %14 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %12, i32 %13)
  store %struct.set_family* %14, %struct.set_family** %9, align 8
  %15 = load %struct.set_family*, %struct.set_family** %3, align 8
  %16 = load %struct.set_family*, %struct.set_family** %4, align 8
  %17 = call i32** (%struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*)* @cube2list to i32** (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %15, %struct.set_family* %16)
  store i32** %17, i32*** %8, align 8
  %18 = load %struct.set_family*, %struct.set_family** %3, align 8
  %19 = getelementptr inbounds %struct.set_family, %struct.set_family* %18, i32 0, i32 5
  %20 = load i32*, i32** %19, align 8
  store i32* %20, i32** %5, align 8
  %21 = load i32*, i32** %5, align 8
  %22 = load %struct.set_family*, %struct.set_family** %3, align 8
  %23 = getelementptr inbounds %struct.set_family, %struct.set_family* %22, i32 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = load %struct.set_family*, %struct.set_family** %3, align 8
  %26 = getelementptr inbounds %struct.set_family, %struct.set_family* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = mul nsw i32 %24, %27
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %21, i64 %29
  store i32* %30, i32** %6, align 8
  br label %31

31:                                               ; preds = %82, %2
  %32 = load i32*, i32** %5, align 8
  %33 = load i32*, i32** %6, align 8
  %34 = icmp ult i32* %32, %33
  br i1 %34, label %35, label %89

35:                                               ; preds = %31
  %36 = load i32**, i32*** %8, align 8
  %37 = load i32*, i32** %5, align 8
  %38 = call i32* (i32**, i32*, ...) bitcast (i32* (i32**, i32*)* @reduce_cube to i32* (i32**, i32*, ...)*)(i32** %36, i32* %37)
  store i32* %38, i32** %7, align 8
  %39 = load i32*, i32** %7, align 8
  %40 = call i32 (i32*, ...) bitcast (i32 (i32*)* @setp_empty to i32 (i32*, ...)*)(i32* %39)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %35
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.190, i64 0, i64 0))
  br label %65

43:                                               ; preds = %35
  %44 = load i32*, i32** %7, align 8
  %45 = load i32*, i32** %5, align 8
  %46 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_equal to i32 (i32*, i32*, ...)*)(i32* %44, i32* %45)
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %56

48:                                               ; preds = %43
  %49 = load i32*, i32** %7, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 0
  %51 = load i32, i32* %50, align 4
  %52 = or i32 %51, 32768
  store i32 %52, i32* %50, align 4
  %53 = load %struct.set_family*, %struct.set_family** %9, align 8
  %54 = load i32*, i32** %5, align 8
  %55 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %53, i32* %54)
  store %struct.set_family* %55, %struct.set_family** %9, align 8
  br label %64

56:                                               ; preds = %43
  %57 = load i32*, i32** %7, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 0
  %59 = load i32, i32* %58, align 4
  %60 = and i32 %59, -32769
  store i32 %60, i32* %58, align 4
  %61 = load %struct.set_family*, %struct.set_family** %9, align 8
  %62 = load i32*, i32** %7, align 8
  %63 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %61, i32* %62)
  store %struct.set_family* %63, %struct.set_family** %9, align 8
  br label %64

64:                                               ; preds = %56, %48
  br label %65

65:                                               ; preds = %64, %42
  %66 = load i32, i32* @debug, align 4
  %67 = and i32 %66, 16
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = load i32*, i32** %5, align 8
  %71 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %70)
  %72 = load i32*, i32** %7, align 8
  %73 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc2 to i8* (i32*, ...)*)(i32* %72)
  %74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.191, i64 0, i64 0), i8* %71, i8* %73)
  br label %75

75:                                               ; preds = %69, %65
  %76 = load i32*, i32** %7, align 8
  %77 = icmp ne i32* %76, null
  br i1 %77, label %78, label %81

78:                                               ; preds = %75
  %79 = load i32*, i32** %7, align 8
  %80 = bitcast i32* %79 to i8*
  call void @free(i8* %80) #7
  store i32* null, i32** %7, align 8
  br label %81

81:                                               ; preds = %78, %75
  br label %82

82:                                               ; preds = %81
  %83 = load %struct.set_family*, %struct.set_family** %3, align 8
  %84 = getelementptr inbounds %struct.set_family, %struct.set_family* %83, i32 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = load i32*, i32** %5, align 8
  %87 = sext i32 %85 to i64
  %88 = getelementptr inbounds i32, i32* %86, i64 %87
  store i32* %88, i32** %5, align 8
  br label %31

89:                                               ; preds = %31
  %90 = load i32**, i32*** %8, align 8
  %91 = getelementptr inbounds i32*, i32** %90, i64 0
  %92 = load i32*, i32** %91, align 8
  %93 = icmp ne i32* %92, null
  br i1 %93, label %94, label %101

94:                                               ; preds = %89
  %95 = load i32**, i32*** %8, align 8
  %96 = getelementptr inbounds i32*, i32** %95, i64 0
  %97 = load i32*, i32** %96, align 8
  %98 = bitcast i32* %97 to i8*
  call void @free(i8* %98) #7
  %99 = load i32**, i32*** %8, align 8
  %100 = getelementptr inbounds i32*, i32** %99, i64 0
  store i32* null, i32** %100, align 8
  br label %101

101:                                              ; preds = %94, %89
  %102 = load i32**, i32*** %8, align 8
  %103 = icmp ne i32** %102, null
  br i1 %103, label %104, label %107

104:                                              ; preds = %101
  %105 = load i32**, i32*** %8, align 8
  %106 = bitcast i32** %105 to i8*
  call void @free(i8* %106) #7
  store i32** null, i32*** %8, align 8
  br label %107

107:                                              ; preds = %104, %101
  %108 = load %struct.set_family*, %struct.set_family** %9, align 8
  ret %struct.set_family* %108
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @super_gasp(%struct.set_family* %0, %struct.set_family* %1, %struct.set_family* %2, %struct.cost_struct* %3) #0 {
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.cost_struct*, align 8
  %9 = alloca %struct.set_family*, align 8
  %10 = alloca %struct.set_family*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store %struct.set_family* %0, %struct.set_family** %5, align 8
  store %struct.set_family* %1, %struct.set_family** %6, align 8
  store %struct.set_family* %2, %struct.set_family** %7, align 8
  store %struct.cost_struct* %3, %struct.cost_struct** %8, align 8
  %15 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %15, i64* %11, align 8
  %16 = load %struct.set_family*, %struct.set_family** %5, align 8
  %17 = load %struct.set_family*, %struct.set_family** %6, align 8
  %18 = call %struct.set_family* @reduce_gasp(%struct.set_family* %16, %struct.set_family* %17)
  store %struct.set_family* %18, %struct.set_family** %9, align 8
  %19 = load i64, i64* %11, align 8
  %20 = load %struct.set_family*, %struct.set_family** %9, align 8
  %21 = load %struct.cost_struct*, %struct.cost_struct** %8, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %19, i32 9, %struct.set_family* %20, %struct.cost_struct* %21)
  %22 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %22, i64* %12, align 8
  %23 = load %struct.set_family*, %struct.set_family** %9, align 8
  %24 = load %struct.set_family*, %struct.set_family** %7, align 8
  %25 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @all_primes to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %23, %struct.set_family* %24)
  store %struct.set_family* %25, %struct.set_family** %10, align 8
  %26 = load i64, i64* %12, align 8
  %27 = load %struct.set_family*, %struct.set_family** %10, align 8
  %28 = load %struct.cost_struct*, %struct.cost_struct** %8, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %26, i32 7, %struct.set_family* %27, %struct.cost_struct* %28)
  %29 = load %struct.set_family*, %struct.set_family** %9, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %29)
  %30 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %30, i64* %13, align 8
  %31 = load %struct.set_family*, %struct.set_family** %5, align 8
  %32 = load %struct.set_family*, %struct.set_family** %10, align 8
  %33 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_append to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %31, %struct.set_family* %32)
  %34 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_dupl to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %33)
  store %struct.set_family* %34, %struct.set_family** %9, align 8
  %35 = load i32, i32* @trace, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %4
  %38 = load %struct.set_family*, %struct.set_family** %9, align 8
  %39 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %40 = load i64, i64* %13, align 8
  %41 = sub nsw i64 %39, %40
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %38, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.194, i64 0, i64 0), i64 %41)
  br label %42

42:                                               ; preds = %37, %4
  %43 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %43, i64* %14, align 8
  %44 = load %struct.set_family*, %struct.set_family** %9, align 8
  %45 = load %struct.set_family*, %struct.set_family** %6, align 8
  %46 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @irredundant to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %44, %struct.set_family* %45)
  store %struct.set_family* %46, %struct.set_family** %5, align 8
  %47 = load i64, i64* %14, align 8
  %48 = load %struct.set_family*, %struct.set_family** %5, align 8
  %49 = load %struct.cost_struct*, %struct.cost_struct** %8, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %47, i32 5, %struct.set_family* %48, %struct.cost_struct* %49)
  %50 = load %struct.set_family*, %struct.set_family** %5, align 8
  ret %struct.set_family* %50
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @espresso_getopt(i32 %0, i8** %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  store i32 %0, i32* %5, align 4
  store i8** %1, i8*** %6, align 8
  store i8* %2, i8** %7, align 8
  store i8* null, i8** @optarg, align 8
  %10 = load i8*, i8** @espresso_getopt.scan, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %3
  %13 = load i8*, i8** @espresso_getopt.scan, align 8
  %14 = load i8, i8* %13, align 1
  %15 = sext i8 %14 to i32
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %64

17:                                               ; preds = %12, %3
  %18 = load i32, i32* @optind, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = load i32, i32* @optind, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* @optind, align 4
  br label %23

23:                                               ; preds = %20, %17
  %24 = load i32, i32* @optind, align 4
  %25 = load i32, i32* %5, align 4
  %26 = icmp sge i32 %24, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  store i32 -1, i32* %4, align 4
  br label %108

28:                                               ; preds = %23
  %29 = load i8**, i8*** %6, align 8
  %30 = load i32, i32* @optind, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8*, i8** %29, i64 %31
  %33 = load i8*, i8** %32, align 8
  store i8* %33, i8** %9, align 8
  %34 = load i8*, i8** %9, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 0
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = icmp ne i32 %37, 45
  br i1 %38, label %45, label %39

39:                                               ; preds = %28
  %40 = load i8*, i8** %9, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 1
  %42 = load i8, i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %39, %28
  store i32 -1, i32* %4, align 4
  br label %108

46:                                               ; preds = %39
  %47 = load i32, i32* @optind, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* @optind, align 4
  %49 = load i8*, i8** %9, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = sext i8 %51 to i32
  %53 = icmp eq i32 %52, 45
  br i1 %53, label %54, label %61

54:                                               ; preds = %46
  %55 = load i8*, i8** %9, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 2
  %57 = load i8, i8* %56, align 1
  %58 = sext i8 %57 to i32
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %54
  store i32 -1, i32* %4, align 4
  br label %108

61:                                               ; preds = %54, %46
  %62 = load i8*, i8** %9, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 1
  store i8* %63, i8** @espresso_getopt.scan, align 8
  br label %64

64:                                               ; preds = %61, %12
  %65 = load i8*, i8** @espresso_getopt.scan, align 8
  %66 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %66, i8** @espresso_getopt.scan, align 8
  %67 = load i8, i8* %65, align 1
  %68 = sext i8 %67 to i32
  store i32 %68, i32* %8, align 4
  %69 = load i8*, i8** %7, align 8
  %70 = load i32, i32* %8, align 4
  %71 = call i8* @strchr(i8* %69, i32 %70) #9
  store i8* %71, i8** %9, align 8
  %72 = load i8*, i8** %9, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %64
  %75 = load i32, i32* %8, align 4
  %76 = icmp eq i32 %75, 58
  br i1 %76, label %77, label %84

77:                                               ; preds = %74, %64
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %79 = load i8**, i8*** %6, align 8
  %80 = getelementptr inbounds i8*, i8** %79, i64 0
  %81 = load i8*, i8** %80, align 8
  %82 = load i32, i32* %8, align 4
  %83 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %78, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.195, i64 0, i64 0), i8* %81, i32 %82)
  store i32 63, i32* %4, align 4
  br label %108

84:                                               ; preds = %74
  %85 = load i8*, i8** %9, align 8
  %86 = getelementptr inbounds i8, i8* %85, i32 1
  store i8* %86, i8** %9, align 8
  %87 = load i8, i8* %86, align 1
  %88 = sext i8 %87 to i32
  %89 = icmp eq i32 %88, 58
  br i1 %89, label %90, label %106

90:                                               ; preds = %84
  %91 = load i8*, i8** @espresso_getopt.scan, align 8
  %92 = load i8, i8* %91, align 1
  %93 = sext i8 %92 to i32
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  %96 = load i8*, i8** @espresso_getopt.scan, align 8
  store i8* %96, i8** @optarg, align 8
  store i8* null, i8** @espresso_getopt.scan, align 8
  br label %105

97:                                               ; preds = %90
  %98 = load i8**, i8*** %6, align 8
  %99 = load i32, i32* @optind, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i8*, i8** %98, i64 %100
  %102 = load i8*, i8** %101, align 8
  store i8* %102, i8** @optarg, align 8
  %103 = load i32, i32* @optind, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* @optind, align 4
  br label %105

105:                                              ; preds = %97, %95
  br label %106

106:                                              ; preds = %105, %84
  %107 = load i32, i32* %8, align 4
  store i32 %107, i32* %4, align 4
  br label %108

108:                                              ; preds = %106, %77, %60, %45, %27
  %109 = load i32, i32* %4, align 4
  ret i32 %109
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #5

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @gimpel_reduce(%struct.sm_matrix_struct* %0, %struct.solution_struct* %1, i32* %2, i32 %3, i32 %4, i32 %5, %struct.stats_struct* %6, %struct.solution_struct** %7) #0 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.sm_matrix_struct*, align 8
  %11 = alloca %struct.solution_struct*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.stats_struct*, align 8
  %17 = alloca %struct.solution_struct**, align 8
  %18 = alloca %struct.sm_row_struct*, align 8
  %19 = alloca %struct.sm_row_struct*, align 8
  %20 = alloca %struct.sm_col_struct*, align 8
  %21 = alloca %struct.sm_col_struct*, align 8
  %22 = alloca %struct.sm_element_struct*, align 8
  %23 = alloca %struct.sm_element_struct*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %10, align 8
  store %struct.solution_struct* %1, %struct.solution_struct** %11, align 8
  store i32* %2, i32** %12, align 8
  store i32 %3, i32* %13, align 4
  store i32 %4, i32* %14, align 4
  store i32 %5, i32* %15, align 4
  store %struct.stats_struct* %6, %struct.stats_struct** %16, align 8
  store %struct.solution_struct** %7, %struct.solution_struct*** %17, align 8
  store i32 0, i32* %28, align 4
  %29 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %30 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %29, i32 0, i32 4
  %31 = load %struct.sm_row_struct*, %struct.sm_row_struct** %30, align 8
  store %struct.sm_row_struct* %31, %struct.sm_row_struct** %18, align 8
  br label %32

32:                                               ; preds = %201, %8
  %33 = load %struct.sm_row_struct*, %struct.sm_row_struct** %18, align 8
  %34 = icmp ne %struct.sm_row_struct* %33, null
  br i1 %34, label %35, label %205

35:                                               ; preds = %32
  %36 = load %struct.sm_row_struct*, %struct.sm_row_struct** %18, align 8
  %37 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 2
  br i1 %39, label %40, label %200

40:                                               ; preds = %35
  %41 = load %struct.sm_row_struct*, %struct.sm_row_struct** %18, align 8
  %42 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %41, i32 0, i32 3
  %43 = load %struct.sm_element_struct*, %struct.sm_element_struct** %42, align 8
  %44 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp sge i32 %45, 0
  br i1 %46, label %47, label %69

47:                                               ; preds = %40
  %48 = load %struct.sm_row_struct*, %struct.sm_row_struct** %18, align 8
  %49 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %48, i32 0, i32 3
  %50 = load %struct.sm_element_struct*, %struct.sm_element_struct** %49, align 8
  %51 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %50, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %54 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %53, i32 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = icmp slt i32 %52, %55
  br i1 %56, label %57, label %69

57:                                               ; preds = %47
  %58 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %59 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %58, i32 0, i32 2
  %60 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %59, align 8
  %61 = load %struct.sm_row_struct*, %struct.sm_row_struct** %18, align 8
  %62 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %61, i32 0, i32 3
  %63 = load %struct.sm_element_struct*, %struct.sm_element_struct** %62, align 8
  %64 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %63, i32 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %60, i64 %66
  %68 = load %struct.sm_col_struct*, %struct.sm_col_struct** %67, align 8
  br label %70

69:                                               ; preds = %47, %40
  br label %70

70:                                               ; preds = %69, %57
  %71 = phi %struct.sm_col_struct* [ %68, %57 ], [ null, %69 ]
  store %struct.sm_col_struct* %71, %struct.sm_col_struct** %20, align 8
  %72 = load %struct.sm_row_struct*, %struct.sm_row_struct** %18, align 8
  %73 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %72, i32 0, i32 4
  %74 = load %struct.sm_element_struct*, %struct.sm_element_struct** %73, align 8
  %75 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %74, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = icmp sge i32 %76, 0
  br i1 %77, label %78, label %100

78:                                               ; preds = %70
  %79 = load %struct.sm_row_struct*, %struct.sm_row_struct** %18, align 8
  %80 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %79, i32 0, i32 4
  %81 = load %struct.sm_element_struct*, %struct.sm_element_struct** %80, align 8
  %82 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %81, i32 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %85 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %84, i32 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = icmp slt i32 %83, %86
  br i1 %87, label %88, label %100

88:                                               ; preds = %78
  %89 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %90 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %89, i32 0, i32 2
  %91 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %90, align 8
  %92 = load %struct.sm_row_struct*, %struct.sm_row_struct** %18, align 8
  %93 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %92, i32 0, i32 4
  %94 = load %struct.sm_element_struct*, %struct.sm_element_struct** %93, align 8
  %95 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %94, i32 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %91, i64 %97
  %99 = load %struct.sm_col_struct*, %struct.sm_col_struct** %98, align 8
  br label %101

100:                                              ; preds = %78, %70
  br label %101

101:                                              ; preds = %100, %88
  %102 = phi %struct.sm_col_struct* [ %99, %88 ], [ null, %100 ]
  store %struct.sm_col_struct* %102, %struct.sm_col_struct** %21, align 8
  %103 = load %struct.sm_col_struct*, %struct.sm_col_struct** %20, align 8
  %104 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %103, i32 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 2
  br i1 %106, label %107, label %108

107:                                              ; preds = %101
  store i32 1, i32* %28, align 4
  br label %177

108:                                              ; preds = %101
  %109 = load %struct.sm_col_struct*, %struct.sm_col_struct** %21, align 8
  %110 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %109, i32 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 2
  br i1 %112, label %113, label %176

113:                                              ; preds = %108
  %114 = load %struct.sm_row_struct*, %struct.sm_row_struct** %18, align 8
  %115 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %114, i32 0, i32 4
  %116 = load %struct.sm_element_struct*, %struct.sm_element_struct** %115, align 8
  %117 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %116, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = icmp sge i32 %118, 0
  br i1 %119, label %120, label %142

120:                                              ; preds = %113
  %121 = load %struct.sm_row_struct*, %struct.sm_row_struct** %18, align 8
  %122 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %121, i32 0, i32 4
  %123 = load %struct.sm_element_struct*, %struct.sm_element_struct** %122, align 8
  %124 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %123, i32 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %127 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %126, i32 0, i32 3
  %128 = load i32, i32* %127, align 8
  %129 = icmp slt i32 %125, %128
  br i1 %129, label %130, label %142

130:                                              ; preds = %120
  %131 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %132 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %131, i32 0, i32 2
  %133 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %132, align 8
  %134 = load %struct.sm_row_struct*, %struct.sm_row_struct** %18, align 8
  %135 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %134, i32 0, i32 4
  %136 = load %struct.sm_element_struct*, %struct.sm_element_struct** %135, align 8
  %137 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %136, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %133, i64 %139
  %141 = load %struct.sm_col_struct*, %struct.sm_col_struct** %140, align 8
  br label %143

142:                                              ; preds = %120, %113
  br label %143

143:                                              ; preds = %142, %130
  %144 = phi %struct.sm_col_struct* [ %141, %130 ], [ null, %142 ]
  store %struct.sm_col_struct* %144, %struct.sm_col_struct** %20, align 8
  %145 = load %struct.sm_row_struct*, %struct.sm_row_struct** %18, align 8
  %146 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %145, i32 0, i32 3
  %147 = load %struct.sm_element_struct*, %struct.sm_element_struct** %146, align 8
  %148 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %147, i32 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = icmp sge i32 %149, 0
  br i1 %150, label %151, label %173

151:                                              ; preds = %143
  %152 = load %struct.sm_row_struct*, %struct.sm_row_struct** %18, align 8
  %153 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %152, i32 0, i32 3
  %154 = load %struct.sm_element_struct*, %struct.sm_element_struct** %153, align 8
  %155 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %154, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %158 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %157, i32 0, i32 3
  %159 = load i32, i32* %158, align 8
  %160 = icmp slt i32 %156, %159
  br i1 %160, label %161, label %173

161:                                              ; preds = %151
  %162 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %163 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %162, i32 0, i32 2
  %164 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %163, align 8
  %165 = load %struct.sm_row_struct*, %struct.sm_row_struct** %18, align 8
  %166 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %165, i32 0, i32 3
  %167 = load %struct.sm_element_struct*, %struct.sm_element_struct** %166, align 8
  %168 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %167, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %164, i64 %170
  %172 = load %struct.sm_col_struct*, %struct.sm_col_struct** %171, align 8
  br label %174

173:                                              ; preds = %151, %143
  br label %174

174:                                              ; preds = %173, %161
  %175 = phi %struct.sm_col_struct* [ %172, %161 ], [ null, %173 ]
  store %struct.sm_col_struct* %175, %struct.sm_col_struct** %21, align 8
  store i32 1, i32* %28, align 4
  br label %176

176:                                              ; preds = %174, %108
  br label %177

177:                                              ; preds = %176, %107
  %178 = load i32, i32* %28, align 4
  %179 = icmp ne i32 %178, 0
  br i1 %179, label %180, label %199

180:                                              ; preds = %177
  %181 = load %struct.sm_row_struct*, %struct.sm_row_struct** %18, align 8
  %182 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %181, i32 0, i32 0
  %183 = load i32, i32* %182, align 8
  store i32 %183, i32* %26, align 4
  %184 = load %struct.sm_col_struct*, %struct.sm_col_struct** %20, align 8
  %185 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %184, i32 0, i32 3
  %186 = load %struct.sm_element_struct*, %struct.sm_element_struct** %185, align 8
  %187 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %186, i32 0, i32 0
  %188 = load i32, i32* %187, align 8
  store i32 %188, i32* %27, align 4
  %189 = load i32, i32* %27, align 4
  %190 = load i32, i32* %26, align 4
  %191 = icmp eq i32 %189, %190
  br i1 %191, label %192, label %198

192:                                              ; preds = %180
  %193 = load %struct.sm_col_struct*, %struct.sm_col_struct** %20, align 8
  %194 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %193, i32 0, i32 4
  %195 = load %struct.sm_element_struct*, %struct.sm_element_struct** %194, align 8
  %196 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %195, i32 0, i32 0
  %197 = load i32, i32* %196, align 8
  store i32 %197, i32* %27, align 4
  br label %198

198:                                              ; preds = %192, %180
  br label %205

199:                                              ; preds = %177
  br label %200

200:                                              ; preds = %199, %35
  br label %201

201:                                              ; preds = %200
  %202 = load %struct.sm_row_struct*, %struct.sm_row_struct** %18, align 8
  %203 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %202, i32 0, i32 5
  %204 = load %struct.sm_row_struct*, %struct.sm_row_struct** %203, align 8
  store %struct.sm_row_struct* %204, %struct.sm_row_struct** %18, align 8
  br label %32

205:                                              ; preds = %198, %32
  %206 = load i32, i32* %28, align 4
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %208, label %331

208:                                              ; preds = %205
  %209 = load %struct.sm_col_struct*, %struct.sm_col_struct** %20, align 8
  %210 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %209, i32 0, i32 0
  %211 = load i32, i32* %210, align 8
  store i32 %211, i32* %24, align 4
  %212 = load %struct.sm_col_struct*, %struct.sm_col_struct** %21, align 8
  %213 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %212, i32 0, i32 0
  %214 = load i32, i32* %213, align 8
  store i32 %214, i32* %25, align 4
  %215 = load i32, i32* %27, align 4
  %216 = icmp sge i32 %215, 0
  br i1 %216, label %217, label %231

217:                                              ; preds = %208
  %218 = load i32, i32* %27, align 4
  %219 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %220 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %219, i32 0, i32 1
  %221 = load i32, i32* %220, align 8
  %222 = icmp slt i32 %218, %221
  br i1 %222, label %223, label %231

223:                                              ; preds = %217
  %224 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %225 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %224, i32 0, i32 0
  %226 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %225, align 8
  %227 = load i32, i32* %27, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %226, i64 %228
  %230 = load %struct.sm_row_struct*, %struct.sm_row_struct** %229, align 8
  br label %232

231:                                              ; preds = %217, %208
  br label %232

232:                                              ; preds = %231, %223
  %233 = phi %struct.sm_row_struct* [ %230, %223 ], [ null, %231 ]
  %234 = call %struct.sm_row_struct* (%struct.sm_row_struct*, ...) bitcast (%struct.sm_row_struct* (%struct.sm_row_struct*)* @sm_row_dup to %struct.sm_row_struct* (%struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %233)
  store %struct.sm_row_struct* %234, %struct.sm_row_struct** %19, align 8
  %235 = load %struct.sm_row_struct*, %struct.sm_row_struct** %19, align 8
  %236 = load i32, i32* %24, align 4
  call void (%struct.sm_row_struct*, i32, ...) bitcast (void (%struct.sm_row_struct*, i32)* @sm_row_remove to void (%struct.sm_row_struct*, i32, ...)*)(%struct.sm_row_struct* %235, i32 %236)
  %237 = load %struct.sm_col_struct*, %struct.sm_col_struct** %21, align 8
  %238 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %237, i32 0, i32 3
  %239 = load %struct.sm_element_struct*, %struct.sm_element_struct** %238, align 8
  store %struct.sm_element_struct* %239, %struct.sm_element_struct** %22, align 8
  br label %240

240:                                              ; preds = %271, %232
  %241 = load %struct.sm_element_struct*, %struct.sm_element_struct** %22, align 8
  %242 = icmp ne %struct.sm_element_struct* %241, null
  br i1 %242, label %243, label %275

243:                                              ; preds = %240
  %244 = load %struct.sm_element_struct*, %struct.sm_element_struct** %22, align 8
  %245 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %244, i32 0, i32 0
  %246 = load i32, i32* %245, align 8
  %247 = load i32, i32* %26, align 4
  %248 = icmp ne i32 %246, %247
  br i1 %248, label %249, label %270

249:                                              ; preds = %243
  %250 = load %struct.sm_row_struct*, %struct.sm_row_struct** %19, align 8
  %251 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %250, i32 0, i32 3
  %252 = load %struct.sm_element_struct*, %struct.sm_element_struct** %251, align 8
  store %struct.sm_element_struct* %252, %struct.sm_element_struct** %23, align 8
  br label %253

253:                                              ; preds = %265, %249
  %254 = load %struct.sm_element_struct*, %struct.sm_element_struct** %23, align 8
  %255 = icmp ne %struct.sm_element_struct* %254, null
  br i1 %255, label %256, label %269

256:                                              ; preds = %253
  %257 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %258 = load %struct.sm_element_struct*, %struct.sm_element_struct** %22, align 8
  %259 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %258, i32 0, i32 0
  %260 = load i32, i32* %259, align 8
  %261 = load %struct.sm_element_struct*, %struct.sm_element_struct** %23, align 8
  %262 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %261, i32 0, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = call %struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32, ...) bitcast (%struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32)* @sm_insert to %struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32, ...)*)(%struct.sm_matrix_struct* %257, i32 %260, i32 %263)
  br label %265

265:                                              ; preds = %256
  %266 = load %struct.sm_element_struct*, %struct.sm_element_struct** %23, align 8
  %267 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %266, i32 0, i32 4
  %268 = load %struct.sm_element_struct*, %struct.sm_element_struct** %267, align 8
  store %struct.sm_element_struct* %268, %struct.sm_element_struct** %23, align 8
  br label %253

269:                                              ; preds = %253
  br label %270

270:                                              ; preds = %269, %243
  br label %271

271:                                              ; preds = %270
  %272 = load %struct.sm_element_struct*, %struct.sm_element_struct** %22, align 8
  %273 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %272, i32 0, i32 2
  %274 = load %struct.sm_element_struct*, %struct.sm_element_struct** %273, align 8
  store %struct.sm_element_struct* %274, %struct.sm_element_struct** %22, align 8
  br label %240

275:                                              ; preds = %240
  %276 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %277 = load i32, i32* %24, align 4
  call void (%struct.sm_matrix_struct*, i32, ...) bitcast (void (%struct.sm_matrix_struct*, i32)* @sm_delcol to void (%struct.sm_matrix_struct*, i32, ...)*)(%struct.sm_matrix_struct* %276, i32 %277)
  %278 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %279 = load i32, i32* %25, align 4
  call void (%struct.sm_matrix_struct*, i32, ...) bitcast (void (%struct.sm_matrix_struct*, i32)* @sm_delcol to void (%struct.sm_matrix_struct*, i32, ...)*)(%struct.sm_matrix_struct* %278, i32 %279)
  %280 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %281 = load i32, i32* %26, align 4
  call void (%struct.sm_matrix_struct*, i32, ...) bitcast (void (%struct.sm_matrix_struct*, i32)* @sm_delrow to void (%struct.sm_matrix_struct*, i32, ...)*)(%struct.sm_matrix_struct* %280, i32 %281)
  %282 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %283 = load i32, i32* %27, align 4
  call void (%struct.sm_matrix_struct*, i32, ...) bitcast (void (%struct.sm_matrix_struct*, i32)* @sm_delrow to void (%struct.sm_matrix_struct*, i32, ...)*)(%struct.sm_matrix_struct* %282, i32 %283)
  %284 = load %struct.stats_struct*, %struct.stats_struct** %16, align 8
  %285 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %284, i32 0, i32 6
  %286 = load i32, i32* %285, align 8
  %287 = add nsw i32 %286, 1
  store i32 %287, i32* %285, align 8
  %288 = load %struct.stats_struct*, %struct.stats_struct** %16, align 8
  %289 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %288, i32 0, i32 7
  %290 = load i32, i32* %289, align 4
  %291 = add nsw i32 %290, 1
  store i32 %291, i32* %289, align 4
  %292 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %293 = load %struct.solution_struct*, %struct.solution_struct** %11, align 8
  %294 = load i32*, i32** %12, align 8
  %295 = load i32, i32* %13, align 4
  %296 = sub nsw i32 %295, 1
  %297 = load i32, i32* %14, align 4
  %298 = sub nsw i32 %297, 1
  %299 = load i32, i32* %15, align 4
  %300 = load %struct.stats_struct*, %struct.stats_struct** %16, align 8
  %301 = call %struct.solution_struct* (%struct.sm_matrix_struct*, %struct.solution_struct*, i32*, i32, i32, i32, %struct.stats_struct*, ...) bitcast (%struct.solution_struct* (%struct.sm_matrix_struct*, %struct.solution_struct*, i32*, i32, i32, i32, %struct.stats_struct*)* @sm_mincov to %struct.solution_struct* (%struct.sm_matrix_struct*, %struct.solution_struct*, i32*, i32, i32, i32, %struct.stats_struct*, ...)*)(%struct.sm_matrix_struct* %292, %struct.solution_struct* %293, i32* %294, i32 %296, i32 %298, i32 %299, %struct.stats_struct* %300)
  %302 = load %struct.solution_struct**, %struct.solution_struct*** %17, align 8
  store %struct.solution_struct* %301, %struct.solution_struct** %302, align 8
  %303 = load %struct.stats_struct*, %struct.stats_struct** %16, align 8
  %304 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %303, i32 0, i32 7
  %305 = load i32, i32* %304, align 4
  %306 = add nsw i32 %305, -1
  store i32 %306, i32* %304, align 4
  %307 = load %struct.solution_struct**, %struct.solution_struct*** %17, align 8
  %308 = load %struct.solution_struct*, %struct.solution_struct** %307, align 8
  %309 = icmp ne %struct.solution_struct* %308, null
  br i1 %309, label %310, label %329

310:                                              ; preds = %275
  %311 = load %struct.sm_row_struct*, %struct.sm_row_struct** %19, align 8
  %312 = load %struct.solution_struct**, %struct.solution_struct*** %17, align 8
  %313 = load %struct.solution_struct*, %struct.solution_struct** %312, align 8
  %314 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %313, i32 0, i32 0
  %315 = load %struct.sm_row_struct*, %struct.sm_row_struct** %314, align 8
  %316 = call i32 (%struct.sm_row_struct*, %struct.sm_row_struct*, ...) bitcast (i32 (%struct.sm_row_struct*, %struct.sm_row_struct*)* @sm_row_intersects to i32 (%struct.sm_row_struct*, %struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %311, %struct.sm_row_struct* %315)
  %317 = icmp ne i32 %316, 0
  br i1 %317, label %318, label %323

318:                                              ; preds = %310
  %319 = load %struct.solution_struct**, %struct.solution_struct*** %17, align 8
  %320 = load %struct.solution_struct*, %struct.solution_struct** %319, align 8
  %321 = load i32*, i32** %12, align 8
  %322 = load i32, i32* %25, align 4
  call void (%struct.solution_struct*, i32*, i32, ...) bitcast (void (%struct.solution_struct*, i32*, i32)* @solution_add to void (%struct.solution_struct*, i32*, i32, ...)*)(%struct.solution_struct* %320, i32* %321, i32 %322)
  br label %328

323:                                              ; preds = %310
  %324 = load %struct.solution_struct**, %struct.solution_struct*** %17, align 8
  %325 = load %struct.solution_struct*, %struct.solution_struct** %324, align 8
  %326 = load i32*, i32** %12, align 8
  %327 = load i32, i32* %24, align 4
  call void (%struct.solution_struct*, i32*, i32, ...) bitcast (void (%struct.solution_struct*, i32*, i32)* @solution_add to void (%struct.solution_struct*, i32*, i32, ...)*)(%struct.solution_struct* %325, i32* %326, i32 %327)
  br label %328

328:                                              ; preds = %323, %318
  br label %329

329:                                              ; preds = %328, %275
  %330 = load %struct.sm_row_struct*, %struct.sm_row_struct** %19, align 8
  call void (%struct.sm_row_struct*, ...) bitcast (void (%struct.sm_row_struct*)* @sm_row_free to void (%struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %330)
  store i32 1, i32* %9, align 4
  br label %332

331:                                              ; preds = %205
  store i32 0, i32* %9, align 4
  br label %332

332:                                              ; preds = %331, %329
  %333 = load i32, i32* %9, align 4
  ret i32 %333
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @map_dcset(%struct.PLA_t* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca %struct.set_family*, align 8
  %10 = alloca %struct.set_family*, align 8
  %11 = alloca %struct.set_family*, align 8
  %12 = alloca %struct.set_family*, align 8
  %13 = alloca %struct.set_family*, align 8
  %14 = alloca %struct.set_family*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  %26 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %27 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %26, i32 0, i32 7
  %28 = load i8**, i8*** %27, align 8
  %29 = icmp eq i8** %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %1
  %31 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %32 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %31, i32 0, i32 7
  %33 = load i8**, i8*** %32, align 8
  %34 = getelementptr inbounds i8*, i8** %33, i64 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %30, %1
  store i32 0, i32* %2, align 4
  br label %438

38:                                               ; preds = %30
  store i32 -1, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %39

39:                                               ; preds = %88, %38
  %40 = load i32, i32* %5, align 4
  %41 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %42 = mul nsw i32 %41, 2
  %43 = icmp slt i32 %40, %42
  br i1 %43, label %44, label %91

44:                                               ; preds = %39
  %45 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %46 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %45, i32 0, i32 7
  %47 = load i8**, i8*** %46, align 8
  %48 = load i32, i32* %5, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8*, i8** %47, i64 %49
  %51 = load i8*, i8** %50, align 8
  %52 = call i32 @strncmp(i8* %51, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.266, i64 0, i64 0), i64 9) #9
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %84, label %54

54:                                               ; preds = %44
  %55 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %56 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %55, i32 0, i32 7
  %57 = load i8**, i8*** %56, align 8
  %58 = load i32, i32* %5, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8*, i8** %57, i64 %59
  %61 = load i8*, i8** %60, align 8
  %62 = call i32 @strncmp(i8* %61, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.267, i64 0, i64 0), i64 8) #9
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %84, label %64

64:                                               ; preds = %54
  %65 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %66 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %65, i32 0, i32 7
  %67 = load i8**, i8*** %66, align 8
  %68 = load i32, i32* %5, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8*, i8** %67, i64 %69
  %71 = load i8*, i8** %70, align 8
  %72 = call i32 @strncmp(i8* %71, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.268, i64 0, i64 0), i64 9) #9
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %64
  %75 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %76 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %75, i32 0, i32 7
  %77 = load i8**, i8*** %76, align 8
  %78 = load i32, i32* %5, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8*, i8** %77, i64 %79
  %81 = load i8*, i8** %80, align 8
  %82 = call i32 @strncmp(i8* %81, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3.269, i64 0, i64 0), i64 8) #9
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %74, %64, %54, %44
  %85 = load i32, i32* %5, align 4
  %86 = sdiv i32 %85, 2
  store i32 %86, i32* %4, align 4
  br label %91

87:                                               ; preds = %74
  br label %88

88:                                               ; preds = %87
  %89 = load i32, i32* %5, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %5, align 4
  br label %39

91:                                               ; preds = %84, %39
  %92 = load i32, i32* %4, align 4
  %93 = icmp eq i32 %92, -1
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  store i32 0, i32* %2, align 4
  br label %438

95:                                               ; preds = %91
  %96 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %97 = getelementptr inbounds i32, i32* %96, i64 0
  %98 = load i32, i32* %97, align 4
  %99 = and i32 %98, 1023
  %100 = mul i32 32, %99
  %101 = icmp ule i32 %100, 32
  br i1 %101, label %102, label %103

102:                                              ; preds = %95
  br label %113

103:                                              ; preds = %95
  %104 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %105 = getelementptr inbounds i32, i32* %104, i64 0
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 1023
  %108 = mul i32 32, %107
  %109 = sub i32 %108, 1
  %110 = lshr i32 %109, 5
  %111 = add i32 %110, 1
  %112 = add i32 %111, 1
  br label %113

113:                                              ; preds = %103, %102
  %114 = phi i32 [ 2, %102 ], [ %112, %103 ]
  %115 = zext i32 %114 to i64
  %116 = mul i64 4, %115
  %117 = call noalias i8* @malloc(i64 %116) #7
  %118 = bitcast i8* %117 to i32*
  %119 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %120 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %118, i32* %119)
  store i32* %120, i32** %15, align 8
  %121 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %122 = getelementptr inbounds i32, i32* %121, i64 0
  %123 = load i32, i32* %122, align 4
  %124 = and i32 %123, 1023
  %125 = mul i32 32, %124
  %126 = icmp ule i32 %125, 32
  br i1 %126, label %127, label %128

127:                                              ; preds = %113
  br label %138

128:                                              ; preds = %113
  %129 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %130 = getelementptr inbounds i32, i32* %129, i64 0
  %131 = load i32, i32* %130, align 4
  %132 = and i32 %131, 1023
  %133 = mul i32 32, %132
  %134 = sub i32 %133, 1
  %135 = lshr i32 %134, 5
  %136 = add i32 %135, 1
  %137 = add i32 %136, 1
  br label %138

138:                                              ; preds = %128, %127
  %139 = phi i32 [ 2, %127 ], [ %137, %128 ]
  %140 = zext i32 %139 to i64
  %141 = mul i64 4, %140
  %142 = call noalias i8* @malloc(i64 %141) #7
  %143 = bitcast i8* %142 to i32*
  %144 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %145 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %143, i32* %144)
  store i32* %145, i32** %16, align 8
  %146 = load i32, i32* %4, align 4
  %147 = mul nsw i32 %146, 2
  %148 = and i32 %147, 31
  %149 = shl i32 1, %148
  %150 = xor i32 %149, -1
  %151 = load i32*, i32** %15, align 8
  %152 = load i32, i32* %4, align 4
  %153 = mul nsw i32 %152, 2
  %154 = ashr i32 %153, 5
  %155 = add nsw i32 %154, 1
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i32, i32* %151, i64 %156
  %158 = load i32, i32* %157, align 4
  %159 = and i32 %158, %150
  store i32 %159, i32* %157, align 4
  %160 = load i32, i32* %4, align 4
  %161 = mul nsw i32 %160, 2
  %162 = add nsw i32 %161, 1
  %163 = and i32 %162, 31
  %164 = shl i32 1, %163
  %165 = xor i32 %164, -1
  %166 = load i32*, i32** %16, align 8
  %167 = load i32, i32* %4, align 4
  %168 = mul nsw i32 %167, 2
  %169 = add nsw i32 %168, 1
  %170 = ashr i32 %169, 5
  %171 = add nsw i32 %170, 1
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i32, i32* %166, i64 %172
  %174 = load i32, i32* %173, align 4
  %175 = and i32 %174, %165
  store i32 %175, i32* %173, align 4
  %176 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %176, i64* %19, align 8
  %177 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %178 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %177, i32 0, i32 0
  %179 = load %struct.set_family*, %struct.set_family** %178, align 8
  %180 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @cube1list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %179)
  %181 = load i32*, i32** %15, align 8
  %182 = call i32** (i32**, i32*, ...) bitcast (i32** (i32**, i32*)* @cofactor to i32** (i32**, i32*, ...)*)(i32** %180, i32* %181)
  call void (i32**, %struct.set_family**, %struct.set_family**, ...) bitcast (void (i32**, %struct.set_family**, %struct.set_family**)* @simp_comp to void (i32**, %struct.set_family**, %struct.set_family**, ...)*)(i32** %182, %struct.set_family** %6, %struct.set_family** %8)
  %183 = load i32, i32* @trace, align 4
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %185, label %190

185:                                              ; preds = %138
  %186 = load %struct.set_family*, %struct.set_family** %6, align 8
  %187 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %188 = load i64, i64* %19, align 8
  %189 = sub nsw i64 %187, %188
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %186, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.270, i64 0, i64 0), i64 %189)
  br label %190

190:                                              ; preds = %185, %138
  %191 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %191, i64* %20, align 8
  %192 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %193 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %192, i32 0, i32 0
  %194 = load %struct.set_family*, %struct.set_family** %193, align 8
  %195 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @cube1list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %194)
  %196 = load i32*, i32** %16, align 8
  %197 = call i32** (i32**, i32*, ...) bitcast (i32** (i32**, i32*)* @cofactor to i32** (i32**, i32*, ...)*)(i32** %195, i32* %196)
  call void (i32**, %struct.set_family**, %struct.set_family**, ...) bitcast (void (i32**, %struct.set_family**, %struct.set_family**)* @simp_comp to void (i32**, %struct.set_family**, %struct.set_family**, ...)*)(i32** %197, %struct.set_family** %7, %struct.set_family** %9)
  %198 = load i32, i32* @trace, align 4
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %200, label %205

200:                                              ; preds = %190
  %201 = load %struct.set_family*, %struct.set_family** %7, align 8
  %202 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %203 = load i64, i64* %20, align 8
  %204 = sub nsw i64 %202, %203
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %201, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.271, i64 0, i64 0), i64 %204)
  br label %205

205:                                              ; preds = %200, %190
  %206 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %206, i64* %21, align 8
  %207 = load %struct.set_family*, %struct.set_family** %6, align 8
  %208 = load %struct.set_family*, %struct.set_family** %9, align 8
  %209 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @cv_intersect to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %207, %struct.set_family* %208)
  store %struct.set_family* %209, %struct.set_family** %11, align 8
  %210 = load i32, i32* @trace, align 4
  %211 = icmp ne i32 %210, 0
  br i1 %211, label %212, label %217

212:                                              ; preds = %205
  %213 = load %struct.set_family*, %struct.set_family** %11, align 8
  %214 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %215 = load i64, i64* %21, align 8
  %216 = sub nsw i64 %214, %215
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %213, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6.272, i64 0, i64 0), i64 %216)
  br label %217

217:                                              ; preds = %212, %205
  %218 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %218, i64* %22, align 8
  %219 = load %struct.set_family*, %struct.set_family** %7, align 8
  %220 = load %struct.set_family*, %struct.set_family** %8, align 8
  %221 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @cv_intersect to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %219, %struct.set_family* %220)
  store %struct.set_family* %221, %struct.set_family** %12, align 8
  %222 = load i32, i32* @trace, align 4
  %223 = icmp ne i32 %222, 0
  br i1 %223, label %224, label %229

224:                                              ; preds = %217
  %225 = load %struct.set_family*, %struct.set_family** %12, align 8
  %226 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %227 = load i64, i64* %22, align 8
  %228 = sub nsw i64 %226, %227
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %225, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.273, i64 0, i64 0), i64 %228)
  br label %229

229:                                              ; preds = %224, %217
  %230 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %230, i64* %23, align 8
  %231 = load %struct.set_family*, %struct.set_family** %11, align 8
  %232 = load %struct.set_family*, %struct.set_family** %12, align 8
  %233 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_union to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %231, %struct.set_family* %232)
  store %struct.set_family* %233, %struct.set_family** %13, align 8
  %234 = load i32, i32* @trace, align 4
  %235 = icmp ne i32 %234, 0
  br i1 %235, label %236, label %241

236:                                              ; preds = %229
  %237 = load %struct.set_family*, %struct.set_family** %13, align 8
  %238 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %239 = load i64, i64* %23, align 8
  %240 = sub nsw i64 %238, %239
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %237, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8.274, i64 0, i64 0), i64 %240)
  br label %241

241:                                              ; preds = %236, %229
  %242 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %242, i64* %24, align 8
  %243 = load %struct.set_family*, %struct.set_family** %13, align 8
  %244 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @cube1list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %243)
  %245 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %246 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %245, i32 0, i32 1
  call void (i32**, %struct.set_family**, %struct.set_family**, ...) bitcast (void (i32**, %struct.set_family**, %struct.set_family**)* @simp_comp to void (i32**, %struct.set_family**, %struct.set_family**, ...)*)(i32** %244, %struct.set_family** %246, %struct.set_family** %14)
  %247 = load i32, i32* @trace, align 4
  %248 = icmp ne i32 %247, 0
  br i1 %248, label %249, label %256

249:                                              ; preds = %241
  %250 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %251 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %250, i32 0, i32 1
  %252 = load %struct.set_family*, %struct.set_family** %251, align 8
  %253 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %254 = load i64, i64* %24, align 8
  %255 = sub nsw i64 %253, %254
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %252, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9.275, i64 0, i64 0), i64 %255)
  br label %256

256:                                              ; preds = %249, %241
  %257 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %257, i64* %25, align 8
  %258 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %259 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %258, i32 0, i32 0
  %260 = load %struct.set_family*, %struct.set_family** %259, align 8
  %261 = load %struct.set_family*, %struct.set_family** %14, align 8
  %262 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @cv_intersect to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %260, %struct.set_family* %261)
  store %struct.set_family* %262, %struct.set_family** %10, align 8
  %263 = load i32, i32* @trace, align 4
  %264 = icmp ne i32 %263, 0
  br i1 %264, label %265, label %272

265:                                              ; preds = %256
  %266 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %267 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %266, i32 0, i32 0
  %268 = load %struct.set_family*, %struct.set_family** %267, align 8
  %269 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %270 = load i64, i64* %25, align 8
  %271 = sub nsw i64 %269, %270
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %268, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10.276, i64 0, i64 0), i64 %271)
  br label %272

272:                                              ; preds = %265, %256
  %273 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %274 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %273, i32 0, i32 0
  %275 = load %struct.set_family*, %struct.set_family** %274, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %275)
  %276 = load %struct.set_family*, %struct.set_family** %10, align 8
  %277 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %278 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %277, i32 0, i32 0
  store %struct.set_family* %276, %struct.set_family** %278, align 8
  %279 = load %struct.set_family*, %struct.set_family** %6, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %279)
  %280 = load %struct.set_family*, %struct.set_family** %7, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %280)
  %281 = load %struct.set_family*, %struct.set_family** %8, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %281)
  %282 = load %struct.set_family*, %struct.set_family** %9, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %282)
  %283 = load %struct.set_family*, %struct.set_family** %14, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %283)
  %284 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %285 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %284, i32 0, i32 0
  %286 = load %struct.set_family*, %struct.set_family** %285, align 8
  %287 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_active to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %286)
  %288 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %289 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %288, i32 0, i32 0
  %290 = load %struct.set_family*, %struct.set_family** %289, align 8
  %291 = getelementptr inbounds %struct.set_family, %struct.set_family* %290, i32 0, i32 5
  %292 = load i32*, i32** %291, align 8
  store i32* %292, i32** %18, align 8
  %293 = load i32*, i32** %18, align 8
  %294 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %295 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %294, i32 0, i32 0
  %296 = load %struct.set_family*, %struct.set_family** %295, align 8
  %297 = getelementptr inbounds %struct.set_family, %struct.set_family* %296, i32 0, i32 3
  %298 = load i32, i32* %297, align 4
  %299 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %300 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %299, i32 0, i32 0
  %301 = load %struct.set_family*, %struct.set_family** %300, align 8
  %302 = getelementptr inbounds %struct.set_family, %struct.set_family* %301, i32 0, i32 0
  %303 = load i32, i32* %302, align 8
  %304 = mul nsw i32 %298, %303
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds i32, i32* %293, i64 %305
  store i32* %306, i32** %17, align 8
  br label %307

307:                                              ; preds = %349, %272
  %308 = load i32*, i32** %18, align 8
  %309 = load i32*, i32** %17, align 8
  %310 = icmp ult i32* %308, %309
  br i1 %310, label %311, label %358

311:                                              ; preds = %307
  %312 = load i32*, i32** %18, align 8
  %313 = load i32, i32* %4, align 4
  %314 = mul nsw i32 %313, 2
  %315 = ashr i32 %314, 5
  %316 = add nsw i32 %315, 1
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds i32, i32* %312, i64 %317
  %319 = load i32, i32* %318, align 4
  %320 = load i32, i32* %4, align 4
  %321 = mul nsw i32 %320, 2
  %322 = and i32 %321, 31
  %323 = shl i32 1, %322
  %324 = and i32 %319, %323
  %325 = icmp ne i32 %324, 0
  br i1 %325, label %326, label %343

326:                                              ; preds = %311
  %327 = load i32*, i32** %18, align 8
  %328 = load i32, i32* %4, align 4
  %329 = mul nsw i32 %328, 2
  %330 = add nsw i32 %329, 1
  %331 = ashr i32 %330, 5
  %332 = add nsw i32 %331, 1
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds i32, i32* %327, i64 %333
  %335 = load i32, i32* %334, align 4
  %336 = load i32, i32* %4, align 4
  %337 = mul nsw i32 %336, 2
  %338 = add nsw i32 %337, 1
  %339 = and i32 %338, 31
  %340 = shl i32 1, %339
  %341 = and i32 %335, %340
  %342 = icmp ne i32 %341, 0
  br i1 %342, label %348, label %343

343:                                              ; preds = %326, %311
  %344 = load i32*, i32** %18, align 8
  %345 = getelementptr inbounds i32, i32* %344, i64 0
  %346 = load i32, i32* %345, align 4
  %347 = and i32 %346, -8193
  store i32 %347, i32* %345, align 4
  br label %348

348:                                              ; preds = %343, %326
  br label %349

349:                                              ; preds = %348
  %350 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %351 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %350, i32 0, i32 0
  %352 = load %struct.set_family*, %struct.set_family** %351, align 8
  %353 = getelementptr inbounds %struct.set_family, %struct.set_family* %352, i32 0, i32 0
  %354 = load i32, i32* %353, align 8
  %355 = load i32*, i32** %18, align 8
  %356 = sext i32 %354 to i64
  %357 = getelementptr inbounds i32, i32* %355, i64 %356
  store i32* %357, i32** %18, align 8
  br label %307

358:                                              ; preds = %307
  %359 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %360 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %359, i32 0, i32 0
  %361 = load %struct.set_family*, %struct.set_family** %360, align 8
  %362 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_inactive to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %361)
  %363 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %364 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %363, i32 0, i32 0
  store %struct.set_family* %362, %struct.set_family** %364, align 8
  call void (...) bitcast (void ()* @setdown_cube to void (...)*)()
  %365 = load i32, i32* %4, align 4
  %366 = mul nsw i32 2, %365
  %367 = add nsw i32 %366, 2
  store i32 %367, i32* %5, align 4
  br label %368

368:                                              ; preds = %387, %358
  %369 = load i32, i32* %5, align 4
  %370 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %371 = icmp slt i32 %369, %370
  br i1 %371, label %372, label %390

372:                                              ; preds = %368
  %373 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %374 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %373, i32 0, i32 7
  %375 = load i8**, i8*** %374, align 8
  %376 = load i32, i32* %5, align 4
  %377 = sext i32 %376 to i64
  %378 = getelementptr inbounds i8*, i8** %375, i64 %377
  %379 = load i8*, i8** %378, align 8
  %380 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %381 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %380, i32 0, i32 7
  %382 = load i8**, i8*** %381, align 8
  %383 = load i32, i32* %5, align 4
  %384 = sub nsw i32 %383, 2
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds i8*, i8** %382, i64 %385
  store i8* %379, i8** %386, align 8
  br label %387

387:                                              ; preds = %372
  %388 = load i32, i32* %5, align 4
  %389 = add nsw i32 %388, 1
  store i32 %389, i32* %5, align 4
  br label %368

390:                                              ; preds = %368
  %391 = load i32, i32* %4, align 4
  %392 = add nsw i32 %391, 1
  store i32 %392, i32* %5, align 4
  br label %393

393:                                              ; preds = %408, %390
  %394 = load i32, i32* %5, align 4
  %395 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %396 = icmp slt i32 %394, %395
  br i1 %396, label %397, label %411

397:                                              ; preds = %393
  %398 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %399 = load i32, i32* %5, align 4
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds i32, i32* %398, i64 %400
  %402 = load i32, i32* %401, align 4
  %403 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %404 = load i32, i32* %5, align 4
  %405 = sub nsw i32 %404, 1
  %406 = sext i32 %405 to i64
  %407 = getelementptr inbounds i32, i32* %403, i64 %406
  store i32 %402, i32* %407, align 4
  br label %408

408:                                              ; preds = %397
  %409 = load i32, i32* %5, align 4
  %410 = add nsw i32 %409, 1
  store i32 %410, i32* %5, align 4
  br label %393

411:                                              ; preds = %393
  %412 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %413 = add nsw i32 %412, -1
  store i32 %413, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %414 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %415 = add nsw i32 %414, -1
  store i32 %415, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  call void (...) bitcast (void ()* @cube_setup to void (...)*)()
  %416 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %417 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %416, i32 0, i32 0
  %418 = load %struct.set_family*, %struct.set_family** %417, align 8
  %419 = load i32, i32* %4, align 4
  %420 = mul nsw i32 2, %419
  %421 = load i32, i32* %4, align 4
  %422 = mul nsw i32 2, %421
  %423 = add nsw i32 %422, 1
  %424 = call %struct.set_family* (%struct.set_family*, i32, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32, i32)* @sf_delc to %struct.set_family* (%struct.set_family*, i32, i32, ...)*)(%struct.set_family* %418, i32 %420, i32 %423)
  %425 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %426 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %425, i32 0, i32 0
  store %struct.set_family* %424, %struct.set_family** %426, align 8
  %427 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %428 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %427, i32 0, i32 1
  %429 = load %struct.set_family*, %struct.set_family** %428, align 8
  %430 = load i32, i32* %4, align 4
  %431 = mul nsw i32 2, %430
  %432 = load i32, i32* %4, align 4
  %433 = mul nsw i32 2, %432
  %434 = add nsw i32 %433, 1
  %435 = call %struct.set_family* (%struct.set_family*, i32, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32, i32)* @sf_delc to %struct.set_family* (%struct.set_family*, i32, i32, ...)*)(%struct.set_family* %429, i32 %431, i32 %434)
  %436 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %437 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %436, i32 0, i32 1
  store %struct.set_family* %435, %struct.set_family** %437, align 8
  br label %438

438:                                              ; preds = %411, %94, %37
  %439 = load i32, i32* %2, align 4
  ret i32 %439
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #5

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @map_output_symbolic(%struct.PLA_t* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.symbolic_struct*, align 8
  %8 = alloca %struct.symbolic_list_struct*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  %14 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %15 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %14, i32 0, i32 1
  %16 = load %struct.set_family*, %struct.set_family** %15, align 8
  %17 = getelementptr inbounds %struct.set_family, %struct.set_family* %16, i32 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %34

20:                                               ; preds = %1
  %21 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %22 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %21, i32 0, i32 0
  %23 = load %struct.set_family*, %struct.set_family** %22, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %23)
  %24 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %25 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %24, i32 0, i32 1
  %26 = load %struct.set_family*, %struct.set_family** %25, align 8
  %27 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %28 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %27, i32 0, i32 2
  %29 = load %struct.set_family*, %struct.set_family** %28, align 8
  %30 = call i32** (%struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*)* @cube2list to i32** (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %26, %struct.set_family* %29)
  %31 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @complement to %struct.set_family* (i32**, ...)*)(i32** %30)
  %32 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %33 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %32, i32 0, i32 0
  store %struct.set_family* %31, %struct.set_family** %33, align 8
  br label %34

34:                                               ; preds = %20, %1
  store i32 0, i32* %11, align 4
  %35 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %36 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %35, i32 0, i32 9
  %37 = load %struct.symbolic_struct*, %struct.symbolic_struct** %36, align 8
  store %struct.symbolic_struct* %37, %struct.symbolic_struct** %7, align 8
  br label %38

38:                                               ; preds = %76, %34
  %39 = load %struct.symbolic_struct*, %struct.symbolic_struct** %7, align 8
  %40 = icmp ne %struct.symbolic_struct* %39, null
  br i1 %40, label %41, label %80

41:                                               ; preds = %38
  %42 = load %struct.symbolic_struct*, %struct.symbolic_struct** %7, align 8
  %43 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %42, i32 0, i32 0
  %44 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %43, align 8
  store %struct.symbolic_list_struct* %44, %struct.symbolic_list_struct** %8, align 8
  br label %45

45:                                               ; preds = %65, %41
  %46 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %8, align 8
  %47 = icmp ne %struct.symbolic_list_struct* %46, null
  br i1 %47, label %48, label %69

48:                                               ; preds = %45
  %49 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %8, align 8
  %50 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %63, label %53

53:                                               ; preds = %48
  %54 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %8, align 8
  %55 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %54, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %58 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, i32* %57, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = icmp sge i32 %56, %61
  br i1 %62, label %63, label %64

63:                                               ; preds = %53, %48
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11.279, i64 0, i64 0))
  br label %64

64:                                               ; preds = %63, %53
  br label %65

65:                                               ; preds = %64
  %66 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %8, align 8
  %67 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %66, i32 0, i32 2
  %68 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %67, align 8
  store %struct.symbolic_list_struct* %68, %struct.symbolic_list_struct** %8, align 8
  br label %45

69:                                               ; preds = %45
  %70 = load %struct.symbolic_struct*, %struct.symbolic_struct** %7, align 8
  %71 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = shl i32 1, %72
  %74 = load i32, i32* %11, align 4
  %75 = add nsw i32 %74, %73
  store i32 %75, i32* %11, align 4
  br label %76

76:                                               ; preds = %69
  %77 = load %struct.symbolic_struct*, %struct.symbolic_struct** %7, align 8
  %78 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %77, i32 0, i32 4
  %79 = load %struct.symbolic_struct*, %struct.symbolic_struct** %78, align 8
  store %struct.symbolic_struct* %79, %struct.symbolic_struct** %7, align 8
  br label %38

80:                                               ; preds = %38
  %81 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %82 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %81, i32 0, i32 9
  %83 = load %struct.symbolic_struct*, %struct.symbolic_struct** %82, align 8
  store %struct.symbolic_struct* %83, %struct.symbolic_struct** %7, align 8
  br label %84

84:                                               ; preds = %105, %80
  %85 = load %struct.symbolic_struct*, %struct.symbolic_struct** %7, align 8
  %86 = icmp ne %struct.symbolic_struct* %85, null
  br i1 %86, label %87, label %109

87:                                               ; preds = %84
  %88 = load %struct.symbolic_struct*, %struct.symbolic_struct** %7, align 8
  %89 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %88, i32 0, i32 0
  %90 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %89, align 8
  store %struct.symbolic_list_struct* %90, %struct.symbolic_list_struct** %8, align 8
  br label %91

91:                                               ; preds = %100, %87
  %92 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %8, align 8
  %93 = icmp ne %struct.symbolic_list_struct* %92, null
  br i1 %93, label %94, label %104

94:                                               ; preds = %91
  %95 = load i32, i32* %11, align 4
  %96 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %8, align 8
  %97 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = add nsw i32 %98, %95
  store i32 %99, i32* %97, align 4
  br label %100

100:                                              ; preds = %94
  %101 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %8, align 8
  %102 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %101, i32 0, i32 2
  %103 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %102, align 8
  store %struct.symbolic_list_struct* %103, %struct.symbolic_list_struct** %8, align 8
  br label %91

104:                                              ; preds = %91
  br label %105

105:                                              ; preds = %104
  %106 = load %struct.symbolic_struct*, %struct.symbolic_struct** %7, align 8
  %107 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %106, i32 0, i32 4
  %108 = load %struct.symbolic_struct*, %struct.symbolic_struct** %107, align 8
  store %struct.symbolic_struct* %108, %struct.symbolic_struct** %7, align 8
  br label %84

109:                                              ; preds = %84
  %110 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  store i32 %110, i32* %13, align 4
  %111 = load i32, i32* %11, align 4
  %112 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %113 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %112, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = add nsw i32 %116, %111
  store i32 %117, i32* %115, align 4
  call void (...) bitcast (void ()* @setdown_cube to void (...)*)()
  call void (...) bitcast (void ()* @cube_setup to void (...)*)()
  %118 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %119 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i32, i32* %118, i64 %120
  %122 = load i32, i32* %121, align 4
  store i32 %122, i32* %12, align 4
  %123 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %124 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %123, i32 0, i32 0
  %125 = load %struct.set_family*, %struct.set_family** %124, align 8
  %126 = load i32, i32* %12, align 4
  %127 = load i32, i32* %11, align 4
  %128 = call %struct.set_family* (%struct.set_family*, i32, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32, i32)* @sf_addcol to %struct.set_family* (%struct.set_family*, i32, i32, ...)*)(%struct.set_family* %125, i32 %126, i32 %127)
  %129 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %130 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %129, i32 0, i32 0
  store %struct.set_family* %128, %struct.set_family** %130, align 8
  %131 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %132 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %131, i32 0, i32 1
  %133 = load %struct.set_family*, %struct.set_family** %132, align 8
  %134 = load i32, i32* %12, align 4
  %135 = load i32, i32* %11, align 4
  %136 = call %struct.set_family* (%struct.set_family*, i32, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32, i32)* @sf_addcol to %struct.set_family* (%struct.set_family*, i32, i32, ...)*)(%struct.set_family* %133, i32 %134, i32 %135)
  %137 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %138 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %137, i32 0, i32 1
  store %struct.set_family* %136, %struct.set_family** %138, align 8
  %139 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %140 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %139, i32 0, i32 2
  %141 = load %struct.set_family*, %struct.set_family** %140, align 8
  %142 = load i32, i32* %12, align 4
  %143 = load i32, i32* %11, align 4
  %144 = call %struct.set_family* (%struct.set_family*, i32, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32, i32)* @sf_addcol to %struct.set_family* (%struct.set_family*, i32, i32, ...)*)(%struct.set_family* %141, i32 %142, i32 %143)
  %145 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %146 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %145, i32 0, i32 2
  store %struct.set_family* %144, %struct.set_family** %146, align 8
  %147 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %148 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %147, i32 0, i32 9
  %149 = load %struct.symbolic_struct*, %struct.symbolic_struct** %148, align 8
  store %struct.symbolic_struct* %149, %struct.symbolic_struct** %7, align 8
  br label %150

150:                                              ; preds = %177, %109
  %151 = load %struct.symbolic_struct*, %struct.symbolic_struct** %7, align 8
  %152 = icmp ne %struct.symbolic_struct* %151, null
  br i1 %152, label %153, label %181

153:                                              ; preds = %150
  %154 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %155 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 100, i32 %154)
  store %struct.set_family* %155, %struct.set_family** %4, align 8
  %156 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %157 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 100, i32 %156)
  store %struct.set_family* %157, %struct.set_family** %5, align 8
  %158 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %159 = load %struct.symbolic_struct*, %struct.symbolic_struct** %7, align 8
  %160 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %159, i32 0, i32 0
  %161 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %160, align 8
  %162 = load i32, i32* %12, align 4
  %163 = call i32 @find_inputs(%struct.set_family* null, %struct.PLA_t* %158, %struct.symbolic_list_struct* %161, i32 %162, i32 0, %struct.set_family** %4, %struct.set_family** %5)
  %164 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %165 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %164, i32 0, i32 0
  %166 = load %struct.set_family*, %struct.set_family** %165, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %166)
  %167 = load %struct.set_family*, %struct.set_family** %4, align 8
  %168 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %169 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %168, i32 0, i32 0
  store %struct.set_family* %167, %struct.set_family** %169, align 8
  %170 = load %struct.set_family*, %struct.set_family** %5, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %170)
  %171 = load %struct.symbolic_struct*, %struct.symbolic_struct** %7, align 8
  %172 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %171, i32 0, i32 1
  %173 = load i32, i32* %172, align 8
  %174 = shl i32 1, %173
  %175 = load i32, i32* %12, align 4
  %176 = add nsw i32 %175, %174
  store i32 %176, i32* %12, align 4
  br label %177

177:                                              ; preds = %153
  %178 = load %struct.symbolic_struct*, %struct.symbolic_struct** %7, align 8
  %179 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %178, i32 0, i32 4
  %180 = load %struct.symbolic_struct*, %struct.symbolic_struct** %179, align 8
  store %struct.symbolic_struct* %180, %struct.symbolic_struct** %7, align 8
  br label %150

181:                                              ; preds = %150
  %182 = load %struct.set_family*, %struct.set_family** %4, align 8
  %183 = getelementptr inbounds %struct.set_family, %struct.set_family* %182, i32 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = icmp sle i32 %184, 32
  br i1 %185, label %186, label %187

186:                                              ; preds = %181
  br label %195

187:                                              ; preds = %181
  %188 = load %struct.set_family*, %struct.set_family** %4, align 8
  %189 = getelementptr inbounds %struct.set_family, %struct.set_family* %188, i32 0, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = sub nsw i32 %190, 1
  %192 = ashr i32 %191, 5
  %193 = add nsw i32 %192, 1
  %194 = add nsw i32 %193, 1
  br label %195

195:                                              ; preds = %187, %186
  %196 = phi i32 [ 2, %186 ], [ %194, %187 ]
  %197 = sext i32 %196 to i64
  %198 = mul i64 4, %197
  %199 = call noalias i8* @malloc(i64 %198) #7
  %200 = bitcast i8* %199 to i32*
  %201 = load %struct.set_family*, %struct.set_family** %4, align 8
  %202 = getelementptr inbounds %struct.set_family, %struct.set_family* %201, i32 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_fill to i32* (i32*, i32, ...)*)(i32* %200, i32 %203)
  store i32* %204, i32** %6, align 8
  %205 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %206 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %205, i32 0, i32 9
  %207 = load %struct.symbolic_struct*, %struct.symbolic_struct** %206, align 8
  store %struct.symbolic_struct* %207, %struct.symbolic_struct** %7, align 8
  br label %208

208:                                              ; preds = %245, %195
  %209 = load %struct.symbolic_struct*, %struct.symbolic_struct** %7, align 8
  %210 = icmp ne %struct.symbolic_struct* %209, null
  br i1 %210, label %211, label %249

211:                                              ; preds = %208
  %212 = load %struct.symbolic_struct*, %struct.symbolic_struct** %7, align 8
  %213 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %212, i32 0, i32 0
  %214 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %213, align 8
  store %struct.symbolic_list_struct* %214, %struct.symbolic_list_struct** %8, align 8
  br label %215

215:                                              ; preds = %240, %211
  %216 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %8, align 8
  %217 = icmp ne %struct.symbolic_list_struct* %216, null
  br i1 %217, label %218, label %244

218:                                              ; preds = %215
  %219 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %220 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds i32, i32* %219, i64 %221
  %223 = load i32, i32* %222, align 4
  %224 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %8, align 8
  %225 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %224, i32 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = add nsw i32 %223, %226
  store i32 %227, i32* %10, align 4
  %228 = load i32, i32* %10, align 4
  %229 = and i32 %228, 31
  %230 = shl i32 1, %229
  %231 = xor i32 %230, -1
  %232 = load i32*, i32** %6, align 8
  %233 = load i32, i32* %10, align 4
  %234 = ashr i32 %233, 5
  %235 = add nsw i32 %234, 1
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i32, i32* %232, i64 %236
  %238 = load i32, i32* %237, align 4
  %239 = and i32 %238, %231
  store i32 %239, i32* %237, align 4
  br label %240

240:                                              ; preds = %218
  %241 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %8, align 8
  %242 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %241, i32 0, i32 2
  %243 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %242, align 8
  store %struct.symbolic_list_struct* %243, %struct.symbolic_list_struct** %8, align 8
  br label %215

244:                                              ; preds = %215
  br label %245

245:                                              ; preds = %244
  %246 = load %struct.symbolic_struct*, %struct.symbolic_struct** %7, align 8
  %247 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %246, i32 0, i32 4
  %248 = load %struct.symbolic_struct*, %struct.symbolic_struct** %247, align 8
  store %struct.symbolic_struct* %248, %struct.symbolic_struct** %7, align 8
  br label %208

249:                                              ; preds = %208
  %250 = load %struct.set_family*, %struct.set_family** %4, align 8
  %251 = getelementptr inbounds %struct.set_family, %struct.set_family* %250, i32 0, i32 1
  %252 = load i32, i32* %251, align 4
  %253 = load i32*, i32** %6, align 8
  %254 = call i32 (i32*, ...) bitcast (i32 (i32*)* @set_ord to i32 (i32*, ...)*)(i32* %253)
  %255 = sub nsw i32 %252, %254
  %256 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %257 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds i32, i32* %256, i64 %258
  %260 = load i32, i32* %259, align 4
  %261 = sub nsw i32 %260, %255
  store i32 %261, i32* %259, align 4
  call void (...) bitcast (void ()* @setdown_cube to void (...)*)()
  call void (...) bitcast (void ()* @cube_setup to void (...)*)()
  %262 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %263 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %262, i32 0, i32 0
  %264 = load %struct.set_family*, %struct.set_family** %263, align 8
  %265 = load i32*, i32** %6, align 8
  %266 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_compress to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %264, i32* %265)
  %267 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %268 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %267, i32 0, i32 0
  store %struct.set_family* %266, %struct.set_family** %268, align 8
  %269 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %270 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %269, i32 0, i32 1
  %271 = load %struct.set_family*, %struct.set_family** %270, align 8
  %272 = load i32*, i32** %6, align 8
  %273 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_compress to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %271, i32* %272)
  %274 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %275 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %274, i32 0, i32 1
  store %struct.set_family* %273, %struct.set_family** %275, align 8
  %276 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %277 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %278 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %277, i32 0, i32 0
  %279 = load %struct.set_family*, %struct.set_family** %278, align 8
  %280 = getelementptr inbounds %struct.set_family, %struct.set_family* %279, i32 0, i32 1
  %281 = load i32, i32* %280, align 4
  %282 = icmp ne i32 %276, %281
  br i1 %282, label %283, label %284

283:                                              ; preds = %249
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12.280, i64 0, i64 0))
  br label %284

284:                                              ; preds = %283, %249
  %285 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %286 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %285, i32 0, i32 0
  %287 = load %struct.set_family*, %struct.set_family** %286, align 8
  %288 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %287)
  %289 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %290 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %289, i32 0, i32 0
  store %struct.set_family* %288, %struct.set_family** %290, align 8
  %291 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %292 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %291, i32 0, i32 1
  %293 = load %struct.set_family*, %struct.set_family** %292, align 8
  %294 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %293)
  %295 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %296 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %295, i32 0, i32 1
  store %struct.set_family* %294, %struct.set_family** %296, align 8
  store i32 0, i32* %9, align 4
  br label %297

297:                                              ; preds = %316, %284
  %298 = load i32, i32* %9, align 4
  %299 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %300 = icmp slt i32 %298, %299
  br i1 %300, label %301, label %319

301:                                              ; preds = %297
  %302 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %303 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %302, i32 0, i32 0
  %304 = load %struct.set_family*, %struct.set_family** %303, align 8
  %305 = load i32, i32* %9, align 4
  %306 = call %struct.set_family* (%struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32)* @d1merge to %struct.set_family* (%struct.set_family*, i32, ...)*)(%struct.set_family* %304, i32 %305)
  %307 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %308 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %307, i32 0, i32 0
  store %struct.set_family* %306, %struct.set_family** %308, align 8
  %309 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %310 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %309, i32 0, i32 1
  %311 = load %struct.set_family*, %struct.set_family** %310, align 8
  %312 = load i32, i32* %9, align 4
  %313 = call %struct.set_family* (%struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32)* @d1merge to %struct.set_family* (%struct.set_family*, i32, ...)*)(%struct.set_family* %311, i32 %312)
  %314 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %315 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %314, i32 0, i32 1
  store %struct.set_family* %313, %struct.set_family** %315, align 8
  br label %316

316:                                              ; preds = %301
  %317 = load i32, i32* %9, align 4
  %318 = add nsw i32 %317, 1
  store i32 %318, i32* %9, align 4
  br label %297

319:                                              ; preds = %297
  %320 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %321 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %320, i32 0, i32 0
  %322 = load %struct.set_family*, %struct.set_family** %321, align 8
  %323 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %322)
  %324 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %325 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %324, i32 0, i32 0
  store %struct.set_family* %323, %struct.set_family** %325, align 8
  %326 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %327 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %326, i32 0, i32 1
  %328 = load %struct.set_family*, %struct.set_family** %327, align 8
  %329 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %328)
  %330 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %331 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %330, i32 0, i32 1
  store %struct.set_family* %329, %struct.set_family** %331, align 8
  %332 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %333 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %332, i32 0, i32 2
  %334 = load %struct.set_family*, %struct.set_family** %333, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %334)
  %335 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %336 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 0, i32 %335)
  %337 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %338 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %337, i32 0, i32 2
  store %struct.set_family* %336, %struct.set_family** %338, align 8
  %339 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %340 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %341 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %340, i32 0, i32 9
  %342 = load %struct.symbolic_struct*, %struct.symbolic_struct** %341, align 8
  %343 = load i32*, i32** %6, align 8
  %344 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %345 = load i32, i32* %13, align 4
  %346 = load i32, i32* %11, align 4
  %347 = call i32 @symbolic_hack_labels(%struct.PLA_t* %339, %struct.symbolic_struct* %342, i32* %343, i32 %344, i32 %345, i32 %346)
  %348 = load i32*, i32** %6, align 8
  %349 = icmp ne i32* %348, null
  br i1 %349, label %350, label %353

350:                                              ; preds = %319
  %351 = load i32*, i32** %6, align 8
  %352 = bitcast i32* %351 to i8*
  call void @free(i8* %352) #7
  store i32* null, i32** %6, align 8
  br label %353

353:                                              ; preds = %350, %319
  %354 = load i32, i32* %2, align 4
  ret i32 %354
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @find_inputs(%struct.set_family* %0, %struct.PLA_t* %1, %struct.symbolic_list_struct* %2, i32 %3, i32 %4, %struct.set_family** %5, %struct.set_family** %6) #0 {
  %8 = alloca i32, align 4
  %9 = alloca %struct.set_family*, align 8
  %10 = alloca %struct.PLA_t*, align 8
  %11 = alloca %struct.symbolic_list_struct*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.set_family**, align 8
  %15 = alloca %struct.set_family**, align 8
  %16 = alloca %struct.set_family*, align 8
  %17 = alloca %struct.set_family*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %9, align 8
  store %struct.PLA_t* %1, %struct.PLA_t** %10, align 8
  store %struct.symbolic_list_struct* %2, %struct.symbolic_list_struct** %11, align 8
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store %struct.set_family** %5, %struct.set_family*** %14, align 8
  store %struct.set_family** %6, %struct.set_family*** %15, align 8
  %20 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %11, align 8
  %21 = icmp eq %struct.symbolic_list_struct* %20, null
  br i1 %21, label %22, label %74

22:                                               ; preds = %7
  %23 = load %struct.set_family*, %struct.set_family** %9, align 8
  %24 = load %struct.PLA_t*, %struct.PLA_t** %10, align 8
  %25 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %24, i32 0, i32 0
  %26 = load %struct.set_family*, %struct.set_family** %25, align 8
  %27 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @cv_intersect to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %23, %struct.set_family* %26)
  store %struct.set_family* %27, %struct.set_family** %16, align 8
  %28 = load %struct.set_family*, %struct.set_family** %16, align 8
  %29 = getelementptr inbounds %struct.set_family, %struct.set_family* %28, i32 0, i32 5
  %30 = load i32*, i32** %29, align 8
  store i32* %30, i32** %19, align 8
  %31 = load i32*, i32** %19, align 8
  %32 = load %struct.set_family*, %struct.set_family** %16, align 8
  %33 = getelementptr inbounds %struct.set_family, %struct.set_family* %32, i32 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = load %struct.set_family*, %struct.set_family** %16, align 8
  %36 = getelementptr inbounds %struct.set_family, %struct.set_family* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = mul nsw i32 %34, %37
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %31, i64 %39
  store i32* %40, i32** %18, align 8
  br label %41

41:                                               ; preds = %61, %22
  %42 = load i32*, i32** %19, align 8
  %43 = load i32*, i32** %18, align 8
  %44 = icmp ult i32* %42, %43
  br i1 %44, label %45, label %68

45:                                               ; preds = %41
  %46 = load i32, i32* %12, align 4
  %47 = load i32, i32* %13, align 4
  %48 = add nsw i32 %46, %47
  %49 = and i32 %48, 31
  %50 = shl i32 1, %49
  %51 = load i32*, i32** %19, align 8
  %52 = load i32, i32* %12, align 4
  %53 = load i32, i32* %13, align 4
  %54 = add nsw i32 %52, %53
  %55 = ashr i32 %54, 5
  %56 = add nsw i32 %55, 1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %51, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = or i32 %59, %50
  store i32 %60, i32* %58, align 4
  br label %61

61:                                               ; preds = %45
  %62 = load %struct.set_family*, %struct.set_family** %16, align 8
  %63 = getelementptr inbounds %struct.set_family, %struct.set_family* %62, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = load i32*, i32** %19, align 8
  %66 = sext i32 %64 to i64
  %67 = getelementptr inbounds i32, i32* %65, i64 %66
  store i32* %67, i32** %19, align 8
  br label %41

68:                                               ; preds = %41
  %69 = load %struct.set_family**, %struct.set_family*** %14, align 8
  %70 = load %struct.set_family*, %struct.set_family** %69, align 8
  %71 = load %struct.set_family*, %struct.set_family** %16, align 8
  %72 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_append to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %70, %struct.set_family* %71)
  %73 = load %struct.set_family**, %struct.set_family*** %14, align 8
  store %struct.set_family* %72, %struct.set_family** %73, align 8
  br label %144

74:                                               ; preds = %7
  %75 = load %struct.PLA_t*, %struct.PLA_t** %10, align 8
  %76 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %75, i32 0, i32 2
  %77 = load %struct.set_family*, %struct.set_family** %76, align 8
  %78 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %79 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %78, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %11, align 8
  %84 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %83, i32 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = add nsw i32 %82, %85
  %87 = call %struct.set_family* (%struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32)* @cof_output to %struct.set_family* (%struct.set_family*, i32, ...)*)(%struct.set_family* %77, i32 %86)
  store %struct.set_family* %87, %struct.set_family** %16, align 8
  %88 = load %struct.set_family*, %struct.set_family** %9, align 8
  %89 = icmp ne %struct.set_family* %88, null
  br i1 %89, label %90, label %96

90:                                               ; preds = %74
  %91 = load %struct.set_family*, %struct.set_family** %9, align 8
  %92 = load %struct.set_family*, %struct.set_family** %16, align 8
  %93 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @cv_intersect to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %91, %struct.set_family* %92)
  store %struct.set_family* %93, %struct.set_family** %17, align 8
  %94 = load %struct.set_family*, %struct.set_family** %16, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %94)
  %95 = load %struct.set_family*, %struct.set_family** %17, align 8
  store %struct.set_family* %95, %struct.set_family** %16, align 8
  br label %96

96:                                               ; preds = %90, %74
  %97 = load %struct.set_family*, %struct.set_family** %16, align 8
  %98 = load %struct.PLA_t*, %struct.PLA_t** %10, align 8
  %99 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %11, align 8
  %100 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %99, i32 0, i32 2
  %101 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %100, align 8
  %102 = load i32, i32* %12, align 4
  %103 = load i32, i32* %13, align 4
  %104 = mul nsw i32 %103, 2
  %105 = load %struct.set_family**, %struct.set_family*** %14, align 8
  %106 = load %struct.set_family**, %struct.set_family*** %15, align 8
  %107 = call i32 @find_inputs(%struct.set_family* %97, %struct.PLA_t* %98, %struct.symbolic_list_struct* %101, i32 %102, i32 %104, %struct.set_family** %105, %struct.set_family** %106)
  %108 = load %struct.set_family*, %struct.set_family** %16, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %108)
  %109 = load %struct.PLA_t*, %struct.PLA_t** %10, align 8
  %110 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %109, i32 0, i32 0
  %111 = load %struct.set_family*, %struct.set_family** %110, align 8
  %112 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %113 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %112, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %11, align 8
  %118 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %117, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = add nsw i32 %116, %119
  %121 = call %struct.set_family* (%struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32)* @cof_output to %struct.set_family* (%struct.set_family*, i32, ...)*)(%struct.set_family* %111, i32 %120)
  store %struct.set_family* %121, %struct.set_family** %16, align 8
  %122 = load %struct.set_family*, %struct.set_family** %9, align 8
  %123 = icmp ne %struct.set_family* %122, null
  br i1 %123, label %124, label %130

124:                                              ; preds = %96
  %125 = load %struct.set_family*, %struct.set_family** %9, align 8
  %126 = load %struct.set_family*, %struct.set_family** %16, align 8
  %127 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @cv_intersect to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %125, %struct.set_family* %126)
  store %struct.set_family* %127, %struct.set_family** %17, align 8
  %128 = load %struct.set_family*, %struct.set_family** %16, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %128)
  %129 = load %struct.set_family*, %struct.set_family** %17, align 8
  store %struct.set_family* %129, %struct.set_family** %16, align 8
  br label %130

130:                                              ; preds = %124, %96
  %131 = load %struct.set_family*, %struct.set_family** %16, align 8
  %132 = load %struct.PLA_t*, %struct.PLA_t** %10, align 8
  %133 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %11, align 8
  %134 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %133, i32 0, i32 2
  %135 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %134, align 8
  %136 = load i32, i32* %12, align 4
  %137 = load i32, i32* %13, align 4
  %138 = mul nsw i32 %137, 2
  %139 = add nsw i32 %138, 1
  %140 = load %struct.set_family**, %struct.set_family*** %14, align 8
  %141 = load %struct.set_family**, %struct.set_family*** %15, align 8
  %142 = call i32 @find_inputs(%struct.set_family* %131, %struct.PLA_t* %132, %struct.symbolic_list_struct* %135, i32 %136, i32 %139, %struct.set_family** %140, %struct.set_family** %141)
  %143 = load %struct.set_family*, %struct.set_family** %16, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %143)
  br label %144

144:                                              ; preds = %130, %68
  %145 = load i32, i32* %8, align 4
  ret i32 %145
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @symbolic_hack_labels(%struct.PLA_t* %0, %struct.symbolic_struct* %1, i32* %2, i32 %3, i32 %4, i32 %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.PLA_t*, align 8
  %9 = alloca %struct.symbolic_struct*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8**, align 8
  %17 = alloca %struct.symbolic_struct*, align 8
  %18 = alloca %struct.symbolic_label_struct*, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %8, align 8
  store %struct.symbolic_struct* %1, %struct.symbolic_struct** %9, align 8
  store i32* %2, i32** %10, align 8
  store i32 %3, i32* %11, align 4
  store i32 %4, i32* %12, align 4
  store i32 %5, i32* %13, align 4
  %19 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %20 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %19, i32 0, i32 7
  %21 = load i8**, i8*** %20, align 8
  store i8** %21, i8*** %16, align 8
  %22 = icmp eq i8** %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %257

24:                                               ; preds = %6
  %25 = load i32, i32* %11, align 4
  %26 = sext i32 %25 to i64
  %27 = mul i64 8, %26
  %28 = call noalias i8* @malloc(i64 %27) #7
  %29 = bitcast i8* %28 to i8**
  %30 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %31 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %30, i32 0, i32 7
  store i8** %29, i8*** %31, align 8
  store i32 0, i32* %14, align 4
  br label %32

32:                                               ; preds = %43, %24
  %33 = load i32, i32* %14, align 4
  %34 = load i32, i32* %11, align 4
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %36, label %46

36:                                               ; preds = %32
  %37 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %38 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %37, i32 0, i32 7
  %39 = load i8**, i8*** %38, align 8
  %40 = load i32, i32* %14, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8*, i8** %39, i64 %41
  store i8* null, i8** %42, align 8
  br label %43

43:                                               ; preds = %36
  %44 = load i32, i32* %14, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %14, align 4
  br label %32

46:                                               ; preds = %32
  store i32 0, i32* %15, align 4
  store i32 0, i32* %14, align 4
  br label %47

47:                                               ; preds = %108, %46
  %48 = load i32, i32* %14, align 4
  %49 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %50 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, i32* %49, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %48, %53
  br i1 %54, label %55, label %111

55:                                               ; preds = %47
  %56 = load i32*, i32** %10, align 8
  %57 = load i32, i32* %14, align 4
  %58 = ashr i32 %57, 5
  %59 = add nsw i32 %58, 1
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %56, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = load i32, i32* %14, align 4
  %64 = and i32 %63, 31
  %65 = shl i32 1, %64
  %66 = and i32 %62, %65
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %55
  %69 = load i8**, i8*** %16, align 8
  %70 = load i32, i32* %14, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i8*, i8** %69, i64 %71
  %73 = load i8*, i8** %72, align 8
  %74 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %75 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %74, i32 0, i32 7
  %76 = load i8**, i8*** %75, align 8
  %77 = load i32, i32* %15, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %15, align 4
  %79 = sext i32 %77 to i64
  %80 = getelementptr inbounds i8*, i8** %76, i64 %79
  store i8* %73, i8** %80, align 8
  br label %107

81:                                               ; preds = %55
  %82 = load i8**, i8*** %16, align 8
  %83 = load i32, i32* %14, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8*, i8** %82, i64 %84
  %86 = load i8*, i8** %85, align 8
  %87 = icmp ne i8* %86, null
  br i1 %87, label %88, label %106

88:                                               ; preds = %81
  %89 = load i8**, i8*** %16, align 8
  %90 = load i32, i32* %14, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8*, i8** %89, i64 %91
  %93 = load i8*, i8** %92, align 8
  %94 = icmp ne i8* %93, null
  br i1 %94, label %95, label %105

95:                                               ; preds = %88
  %96 = load i8**, i8*** %16, align 8
  %97 = load i32, i32* %14, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8*, i8** %96, i64 %98
  %100 = load i8*, i8** %99, align 8
  call void @free(i8* %100) #7
  %101 = load i8**, i8*** %16, align 8
  %102 = load i32, i32* %14, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i8*, i8** %101, i64 %103
  store i8* null, i8** %104, align 8
  br label %105

105:                                              ; preds = %95, %88
  br label %106

106:                                              ; preds = %105, %81
  br label %107

107:                                              ; preds = %106, %68
  br label %108

108:                                              ; preds = %107
  %109 = load i32, i32* %14, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %14, align 4
  br label %47

111:                                              ; preds = %47
  %112 = load %struct.symbolic_struct*, %struct.symbolic_struct** %9, align 8
  store %struct.symbolic_struct* %112, %struct.symbolic_struct** %17, align 8
  br label %113

113:                                              ; preds = %177, %111
  %114 = load %struct.symbolic_struct*, %struct.symbolic_struct** %17, align 8
  %115 = icmp ne %struct.symbolic_struct* %114, null
  br i1 %115, label %116, label %181

116:                                              ; preds = %113
  %117 = load %struct.symbolic_struct*, %struct.symbolic_struct** %17, align 8
  %118 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %117, i32 0, i32 2
  %119 = load %struct.symbolic_label_struct*, %struct.symbolic_label_struct** %118, align 8
  store %struct.symbolic_label_struct* %119, %struct.symbolic_label_struct** %18, align 8
  store i32 0, i32* %14, align 4
  br label %120

120:                                              ; preds = %167, %116
  %121 = load i32, i32* %14, align 4
  %122 = load %struct.symbolic_struct*, %struct.symbolic_struct** %17, align 8
  %123 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %122, i32 0, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = shl i32 1, %124
  %126 = icmp slt i32 %121, %125
  br i1 %126, label %127, label %170

127:                                              ; preds = %120
  %128 = load %struct.symbolic_label_struct*, %struct.symbolic_label_struct** %18, align 8
  %129 = icmp eq %struct.symbolic_label_struct* %128, null
  br i1 %129, label %130, label %151

130:                                              ; preds = %127
  %131 = call noalias i8* @malloc(i64 10) #7
  %132 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %133 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %132, i32 0, i32 7
  %134 = load i8**, i8*** %133, align 8
  %135 = load i32, i32* %15, align 4
  %136 = load i32, i32* %14, align 4
  %137 = add nsw i32 %135, %136
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i8*, i8** %134, i64 %138
  store i8* %131, i8** %139, align 8
  %140 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %141 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %140, i32 0, i32 7
  %142 = load i8**, i8*** %141, align 8
  %143 = load i32, i32* %15, align 4
  %144 = load i32, i32* %14, align 4
  %145 = add nsw i32 %143, %144
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8*, i8** %142, i64 %146
  %148 = load i8*, i8** %147, align 8
  %149 = load i32, i32* %14, align 4
  %150 = call i32 (i8*, i8*, ...) @sprintf(i8* %148, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.281, i64 0, i64 0), i32 %149) #7
  br label %166

151:                                              ; preds = %127
  %152 = load %struct.symbolic_label_struct*, %struct.symbolic_label_struct** %18, align 8
  %153 = getelementptr inbounds %struct.symbolic_label_struct, %struct.symbolic_label_struct* %152, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %156 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %155, i32 0, i32 7
  %157 = load i8**, i8*** %156, align 8
  %158 = load i32, i32* %15, align 4
  %159 = load i32, i32* %14, align 4
  %160 = add nsw i32 %158, %159
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i8*, i8** %157, i64 %161
  store i8* %154, i8** %162, align 8
  %163 = load %struct.symbolic_label_struct*, %struct.symbolic_label_struct** %18, align 8
  %164 = getelementptr inbounds %struct.symbolic_label_struct, %struct.symbolic_label_struct* %163, i32 0, i32 1
  %165 = load %struct.symbolic_label_struct*, %struct.symbolic_label_struct** %164, align 8
  store %struct.symbolic_label_struct* %165, %struct.symbolic_label_struct** %18, align 8
  br label %166

166:                                              ; preds = %151, %130
  br label %167

167:                                              ; preds = %166
  %168 = load i32, i32* %14, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %14, align 4
  br label %120

170:                                              ; preds = %120
  %171 = load %struct.symbolic_struct*, %struct.symbolic_struct** %17, align 8
  %172 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %171, i32 0, i32 1
  %173 = load i32, i32* %172, align 8
  %174 = shl i32 1, %173
  %175 = load i32, i32* %15, align 4
  %176 = add nsw i32 %175, %174
  store i32 %176, i32* %15, align 4
  br label %177

177:                                              ; preds = %170
  %178 = load %struct.symbolic_struct*, %struct.symbolic_struct** %17, align 8
  %179 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %178, i32 0, i32 4
  %180 = load %struct.symbolic_struct*, %struct.symbolic_struct** %179, align 8
  store %struct.symbolic_struct* %180, %struct.symbolic_struct** %17, align 8
  br label %113

181:                                              ; preds = %113
  %182 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %183 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i32, i32* %182, i64 %184
  %186 = load i32, i32* %185, align 4
  store i32 %186, i32* %14, align 4
  br label %187

187:                                              ; preds = %248, %181
  %188 = load i32, i32* %14, align 4
  %189 = load i32, i32* %12, align 4
  %190 = icmp slt i32 %188, %189
  br i1 %190, label %191, label %251

191:                                              ; preds = %187
  %192 = load i32*, i32** %10, align 8
  %193 = load i32, i32* %14, align 4
  %194 = load i32, i32* %13, align 4
  %195 = add nsw i32 %193, %194
  %196 = ashr i32 %195, 5
  %197 = add nsw i32 %196, 1
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i32, i32* %192, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = load i32, i32* %14, align 4
  %202 = load i32, i32* %13, align 4
  %203 = add nsw i32 %201, %202
  %204 = and i32 %203, 31
  %205 = shl i32 1, %204
  %206 = and i32 %200, %205
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %208, label %221

208:                                              ; preds = %191
  %209 = load i8**, i8*** %16, align 8
  %210 = load i32, i32* %14, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i8*, i8** %209, i64 %211
  %213 = load i8*, i8** %212, align 8
  %214 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %215 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %214, i32 0, i32 7
  %216 = load i8**, i8*** %215, align 8
  %217 = load i32, i32* %15, align 4
  %218 = add nsw i32 %217, 1
  store i32 %218, i32* %15, align 4
  %219 = sext i32 %217 to i64
  %220 = getelementptr inbounds i8*, i8** %216, i64 %219
  store i8* %213, i8** %220, align 8
  br label %247

221:                                              ; preds = %191
  %222 = load i8**, i8*** %16, align 8
  %223 = load i32, i32* %14, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i8*, i8** %222, i64 %224
  %226 = load i8*, i8** %225, align 8
  %227 = icmp ne i8* %226, null
  br i1 %227, label %228, label %246

228:                                              ; preds = %221
  %229 = load i8**, i8*** %16, align 8
  %230 = load i32, i32* %14, align 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i8*, i8** %229, i64 %231
  %233 = load i8*, i8** %232, align 8
  %234 = icmp ne i8* %233, null
  br i1 %234, label %235, label %245

235:                                              ; preds = %228
  %236 = load i8**, i8*** %16, align 8
  %237 = load i32, i32* %14, align 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds i8*, i8** %236, i64 %238
  %240 = load i8*, i8** %239, align 8
  call void @free(i8* %240) #7
  %241 = load i8**, i8*** %16, align 8
  %242 = load i32, i32* %14, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds i8*, i8** %241, i64 %243
  store i8* null, i8** %244, align 8
  br label %245

245:                                              ; preds = %235, %228
  br label %246

246:                                              ; preds = %245, %221
  br label %247

247:                                              ; preds = %246, %208
  br label %248

248:                                              ; preds = %247
  %249 = load i32, i32* %14, align 4
  %250 = add nsw i32 %249, 1
  store i32 %250, i32* %14, align 4
  br label %187

251:                                              ; preds = %187
  %252 = load i8**, i8*** %16, align 8
  %253 = icmp ne i8** %252, null
  br i1 %253, label %254, label %257

254:                                              ; preds = %251
  %255 = load i8**, i8*** %16, align 8
  %256 = bitcast i8** %255 to i8*
  call void @free(i8* %256) #7
  store i8** null, i8*** %16, align 8
  br label %257

257:                                              ; preds = %254, %251, %23
  %258 = load i32, i32* %7, align 4
  ret i32 %258
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @map_symbolic(%struct.PLA_t* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca %struct.symbolic_struct*, align 8
  %5 = alloca %struct.symbolic_list_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32*, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  %17 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %18 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %17, i32 0, i32 8
  %19 = load %struct.symbolic_struct*, %struct.symbolic_struct** %18, align 8
  store %struct.symbolic_struct* %19, %struct.symbolic_struct** %4, align 8
  br label %20

20:                                               ; preds = %48, %1
  %21 = load %struct.symbolic_struct*, %struct.symbolic_struct** %4, align 8
  %22 = icmp ne %struct.symbolic_struct* %21, null
  br i1 %22, label %23, label %52

23:                                               ; preds = %20
  %24 = load %struct.symbolic_struct*, %struct.symbolic_struct** %4, align 8
  %25 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %24, i32 0, i32 0
  %26 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %25, align 8
  store %struct.symbolic_list_struct* %26, %struct.symbolic_list_struct** %5, align 8
  br label %27

27:                                               ; preds = %43, %23
  %28 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %29 = icmp ne %struct.symbolic_list_struct* %28, null
  br i1 %29, label %30, label %47

30:                                               ; preds = %27
  %31 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %32 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %31, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %30
  %36 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %37 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %36, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %40 = icmp sge i32 %38, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %35, %30
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13.284, i64 0, i64 0))
  br label %42

42:                                               ; preds = %41, %35
  br label %43

43:                                               ; preds = %42
  %44 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %45 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %44, i32 0, i32 2
  %46 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %45, align 8
  store %struct.symbolic_list_struct* %46, %struct.symbolic_list_struct** %5, align 8
  br label %27

47:                                               ; preds = %27
  br label %48

48:                                               ; preds = %47
  %49 = load %struct.symbolic_struct*, %struct.symbolic_struct** %4, align 8
  %50 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %49, i32 0, i32 4
  %51 = load %struct.symbolic_struct*, %struct.symbolic_struct** %50, align 8
  store %struct.symbolic_struct* %51, %struct.symbolic_struct** %4, align 8
  br label %20

52:                                               ; preds = %20
  store i32 0, i32* %12, align 4
  store i32 0, i32* %14, align 4
  %53 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %54 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %53, i32 0, i32 8
  %55 = load %struct.symbolic_struct*, %struct.symbolic_struct** %54, align 8
  store %struct.symbolic_struct* %55, %struct.symbolic_struct** %4, align 8
  br label %56

56:                                               ; preds = %68, %52
  %57 = load %struct.symbolic_struct*, %struct.symbolic_struct** %4, align 8
  %58 = icmp ne %struct.symbolic_struct* %57, null
  br i1 %58, label %59, label %72

59:                                               ; preds = %56
  %60 = load %struct.symbolic_struct*, %struct.symbolic_struct** %4, align 8
  %61 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %60, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = shl i32 1, %62
  %64 = load i32, i32* %12, align 4
  %65 = add nsw i32 %64, %63
  store i32 %65, i32* %12, align 4
  %66 = load i32, i32* %14, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %14, align 4
  br label %68

68:                                               ; preds = %59
  %69 = load %struct.symbolic_struct*, %struct.symbolic_struct** %4, align 8
  %70 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %69, i32 0, i32 4
  %71 = load %struct.symbolic_struct*, %struct.symbolic_struct** %70, align 8
  store %struct.symbolic_struct* %71, %struct.symbolic_struct** %4, align 8
  br label %56

72:                                               ; preds = %56
  %73 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %74 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %73, i32 0, i32 0
  %75 = load %struct.set_family*, %struct.set_family** %74, align 8
  %76 = getelementptr inbounds %struct.set_family, %struct.set_family* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = load i32, i32* %12, align 4
  %79 = add nsw i32 %77, %78
  %80 = icmp sle i32 %79, 32
  br i1 %80, label %81, label %82

81:                                               ; preds = %72
  br label %94

82:                                               ; preds = %72
  %83 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %84 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %83, i32 0, i32 0
  %85 = load %struct.set_family*, %struct.set_family** %84, align 8
  %86 = getelementptr inbounds %struct.set_family, %struct.set_family* %85, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = load i32, i32* %12, align 4
  %89 = add nsw i32 %87, %88
  %90 = sub nsw i32 %89, 1
  %91 = ashr i32 %90, 5
  %92 = add nsw i32 %91, 1
  %93 = add nsw i32 %92, 1
  br label %94

94:                                               ; preds = %82, %81
  %95 = phi i32 [ 2, %81 ], [ %93, %82 ]
  %96 = sext i32 %95 to i64
  %97 = mul i64 4, %96
  %98 = call noalias i8* @malloc(i64 %97) #7
  %99 = bitcast i8* %98 to i32*
  %100 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %101 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %100, i32 0, i32 0
  %102 = load %struct.set_family*, %struct.set_family** %101, align 8
  %103 = getelementptr inbounds %struct.set_family, %struct.set_family* %102, i32 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = load i32, i32* %12, align 4
  %106 = add nsw i32 %104, %105
  %107 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_fill to i32* (i32*, i32, ...)*)(i32* %99, i32 %106)
  store i32* %107, i32** %16, align 8
  %108 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %109 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %108, i32 0, i32 8
  %110 = load %struct.symbolic_struct*, %struct.symbolic_struct** %109, align 8
  store %struct.symbolic_struct* %110, %struct.symbolic_struct** %4, align 8
  br label %111

111:                                              ; preds = %165, %94
  %112 = load %struct.symbolic_struct*, %struct.symbolic_struct** %4, align 8
  %113 = icmp ne %struct.symbolic_struct* %112, null
  br i1 %113, label %114, label %169

114:                                              ; preds = %111
  %115 = load %struct.symbolic_struct*, %struct.symbolic_struct** %4, align 8
  %116 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %115, i32 0, i32 0
  %117 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %116, align 8
  store %struct.symbolic_list_struct* %117, %struct.symbolic_list_struct** %5, align 8
  br label %118

118:                                              ; preds = %160, %114
  %119 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %120 = icmp ne %struct.symbolic_list_struct* %119, null
  br i1 %120, label %121, label %164

121:                                              ; preds = %118
  %122 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %123 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %122, i32 0, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = mul nsw i32 %124, 2
  %126 = and i32 %125, 31
  %127 = shl i32 1, %126
  %128 = xor i32 %127, -1
  %129 = load i32*, i32** %16, align 8
  %130 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %131 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %130, i32 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = mul nsw i32 %132, 2
  %134 = ashr i32 %133, 5
  %135 = add nsw i32 %134, 1
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i32, i32* %129, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = and i32 %138, %128
  store i32 %139, i32* %137, align 4
  %140 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %141 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %140, i32 0, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = mul nsw i32 %142, 2
  %144 = add nsw i32 %143, 1
  %145 = and i32 %144, 31
  %146 = shl i32 1, %145
  %147 = xor i32 %146, -1
  %148 = load i32*, i32** %16, align 8
  %149 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %150 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %149, i32 0, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = mul nsw i32 %151, 2
  %153 = add nsw i32 %152, 1
  %154 = ashr i32 %153, 5
  %155 = add nsw i32 %154, 1
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i32, i32* %148, i64 %156
  %158 = load i32, i32* %157, align 4
  %159 = and i32 %158, %147
  store i32 %159, i32* %157, align 4
  br label %160

160:                                              ; preds = %121
  %161 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %162 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %161, i32 0, i32 2
  %163 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %162, align 8
  store %struct.symbolic_list_struct* %163, %struct.symbolic_list_struct** %5, align 8
  br label %118

164:                                              ; preds = %118
  br label %165

165:                                              ; preds = %164
  %166 = load %struct.symbolic_struct*, %struct.symbolic_struct** %4, align 8
  %167 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %166, i32 0, i32 4
  %168 = load %struct.symbolic_struct*, %struct.symbolic_struct** %167, align 8
  store %struct.symbolic_struct* %168, %struct.symbolic_struct** %4, align 8
  br label %111

169:                                              ; preds = %111
  %170 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %171 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %170, i32 0, i32 0
  %172 = load %struct.set_family*, %struct.set_family** %171, align 8
  %173 = getelementptr inbounds %struct.set_family, %struct.set_family* %172, i32 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = load i32, i32* %12, align 4
  %176 = add nsw i32 %174, %175
  %177 = load i32*, i32** %16, align 8
  %178 = call i32 (i32*, ...) bitcast (i32 (i32*)* @set_ord to i32 (i32*, ...)*)(i32* %177)
  %179 = sub nsw i32 %176, %178
  %180 = sdiv i32 %179, 2
  store i32 %180, i32* %13, align 4
  %181 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %182 = load i32, i32* %13, align 4
  %183 = sub nsw i32 %181, %182
  %184 = load i32, i32* %14, align 4
  %185 = add nsw i32 %183, %184
  store i32 %185, i32* %8, align 4
  %186 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %187 = load i32, i32* %13, align 4
  %188 = sub nsw i32 %186, %187
  store i32 %188, i32* %9, align 4
  %189 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %190 = load i32, i32* %13, align 4
  %191 = mul nsw i32 %190, 2
  %192 = sub nsw i32 %189, %191
  %193 = load i32, i32* %12, align 4
  %194 = add nsw i32 %192, %193
  store i32 %194, i32* %11, align 4
  %195 = load i32, i32* %8, align 4
  %196 = sext i32 %195 to i64
  %197 = mul i64 4, %196
  %198 = call noalias i8* @malloc(i64 %197) #7
  %199 = bitcast i8* %198 to i32*
  store i32* %199, i32** %10, align 8
  %200 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %201 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %202 = sub nsw i32 %201, 1
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i32, i32* %200, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = load i32*, i32** %10, align 8
  %207 = load i32, i32* %8, align 4
  %208 = sub nsw i32 %207, 1
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds i32, i32* %206, i64 %209
  store i32 %205, i32* %210, align 4
  %211 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %211, i32* %6, align 4
  br label %212

212:                                              ; preds = %229, %169
  %213 = load i32, i32* %6, align 4
  %214 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %215 = sub nsw i32 %214, 1
  %216 = icmp slt i32 %213, %215
  br i1 %216, label %217, label %232

217:                                              ; preds = %212
  %218 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %219 = load i32, i32* %6, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i32, i32* %218, i64 %220
  %222 = load i32, i32* %221, align 4
  %223 = load i32*, i32** %10, align 8
  %224 = load i32, i32* %6, align 4
  %225 = load i32, i32* %13, align 4
  %226 = sub nsw i32 %224, %225
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds i32, i32* %223, i64 %227
  store i32 %222, i32* %228, align 4
  br label %229

229:                                              ; preds = %217
  %230 = load i32, i32* %6, align 4
  %231 = add nsw i32 %230, 1
  store i32 %231, i32* %6, align 4
  br label %212

232:                                              ; preds = %212
  %233 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %234 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds i32, i32* %233, i64 %235
  %237 = load i32, i32* %236, align 4
  store i32 %237, i32* %7, align 4
  %238 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %239 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %238, i32 0, i32 0
  %240 = load %struct.set_family*, %struct.set_family** %239, align 8
  %241 = load i32, i32* %7, align 4
  %242 = load i32, i32* %12, align 4
  %243 = call %struct.set_family* (%struct.set_family*, i32, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32, i32)* @sf_addcol to %struct.set_family* (%struct.set_family*, i32, i32, ...)*)(%struct.set_family* %240, i32 %241, i32 %242)
  %244 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %245 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %244, i32 0, i32 0
  store %struct.set_family* %243, %struct.set_family** %245, align 8
  %246 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %247 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %246, i32 0, i32 1
  %248 = load %struct.set_family*, %struct.set_family** %247, align 8
  %249 = load i32, i32* %7, align 4
  %250 = load i32, i32* %12, align 4
  %251 = call %struct.set_family* (%struct.set_family*, i32, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32, i32)* @sf_addcol to %struct.set_family* (%struct.set_family*, i32, i32, ...)*)(%struct.set_family* %248, i32 %249, i32 %250)
  %252 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %253 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %252, i32 0, i32 1
  store %struct.set_family* %251, %struct.set_family** %253, align 8
  %254 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %255 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %254, i32 0, i32 2
  %256 = load %struct.set_family*, %struct.set_family** %255, align 8
  %257 = load i32, i32* %7, align 4
  %258 = load i32, i32* %12, align 4
  %259 = call %struct.set_family* (%struct.set_family*, i32, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32, i32)* @sf_addcol to %struct.set_family* (%struct.set_family*, i32, i32, ...)*)(%struct.set_family* %256, i32 %257, i32 %258)
  %260 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %261 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %260, i32 0, i32 2
  store %struct.set_family* %259, %struct.set_family** %261, align 8
  %262 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %263 = sub nsw i32 %262, 1
  %264 = load i32, i32* %13, align 4
  %265 = sub nsw i32 %263, %264
  store i32 %265, i32* %15, align 4
  %266 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %267 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %266, i32 0, i32 8
  %268 = load %struct.symbolic_struct*, %struct.symbolic_struct** %267, align 8
  store %struct.symbolic_struct* %268, %struct.symbolic_struct** %4, align 8
  br label %269

269:                                              ; preds = %318, %232
  %270 = load %struct.symbolic_struct*, %struct.symbolic_struct** %4, align 8
  %271 = icmp ne %struct.symbolic_struct* %270, null
  br i1 %271, label %272, label %322

272:                                              ; preds = %269
  %273 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %274 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %273, i32 0, i32 0
  %275 = load %struct.set_family*, %struct.set_family** %274, align 8
  %276 = load %struct.symbolic_struct*, %struct.symbolic_struct** %4, align 8
  %277 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %276, i32 0, i32 0
  %278 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %277, align 8
  %279 = load i32, i32* %7, align 4
  %280 = call %struct.set_family* @map_symbolic_cover(%struct.set_family* %275, %struct.symbolic_list_struct* %278, i32 %279)
  %281 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %282 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %281, i32 0, i32 0
  store %struct.set_family* %280, %struct.set_family** %282, align 8
  %283 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %284 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %283, i32 0, i32 1
  %285 = load %struct.set_family*, %struct.set_family** %284, align 8
  %286 = load %struct.symbolic_struct*, %struct.symbolic_struct** %4, align 8
  %287 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %286, i32 0, i32 0
  %288 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %287, align 8
  %289 = load i32, i32* %7, align 4
  %290 = call %struct.set_family* @map_symbolic_cover(%struct.set_family* %285, %struct.symbolic_list_struct* %288, i32 %289)
  %291 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %292 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %291, i32 0, i32 1
  store %struct.set_family* %290, %struct.set_family** %292, align 8
  %293 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %294 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %293, i32 0, i32 2
  %295 = load %struct.set_family*, %struct.set_family** %294, align 8
  %296 = load %struct.symbolic_struct*, %struct.symbolic_struct** %4, align 8
  %297 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %296, i32 0, i32 0
  %298 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %297, align 8
  %299 = load i32, i32* %7, align 4
  %300 = call %struct.set_family* @map_symbolic_cover(%struct.set_family* %295, %struct.symbolic_list_struct* %298, i32 %299)
  %301 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %302 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %301, i32 0, i32 2
  store %struct.set_family* %300, %struct.set_family** %302, align 8
  %303 = load %struct.symbolic_struct*, %struct.symbolic_struct** %4, align 8
  %304 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %303, i32 0, i32 1
  %305 = load i32, i32* %304, align 8
  %306 = shl i32 1, %305
  %307 = load i32, i32* %7, align 4
  %308 = add nsw i32 %307, %306
  store i32 %308, i32* %7, align 4
  %309 = load %struct.symbolic_struct*, %struct.symbolic_struct** %4, align 8
  %310 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %309, i32 0, i32 1
  %311 = load i32, i32* %310, align 8
  %312 = shl i32 1, %311
  %313 = load i32*, i32** %10, align 8
  %314 = load i32, i32* %15, align 4
  %315 = add nsw i32 %314, 1
  store i32 %315, i32* %15, align 4
  %316 = sext i32 %314 to i64
  %317 = getelementptr inbounds i32, i32* %313, i64 %316
  store i32 %312, i32* %317, align 4
  br label %318

318:                                              ; preds = %272
  %319 = load %struct.symbolic_struct*, %struct.symbolic_struct** %4, align 8
  %320 = getelementptr inbounds %struct.symbolic_struct, %struct.symbolic_struct* %319, i32 0, i32 4
  %321 = load %struct.symbolic_struct*, %struct.symbolic_struct** %320, align 8
  store %struct.symbolic_struct* %321, %struct.symbolic_struct** %4, align 8
  br label %269

322:                                              ; preds = %269
  %323 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %324 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %323, i32 0, i32 0
  %325 = load %struct.set_family*, %struct.set_family** %324, align 8
  %326 = load i32*, i32** %16, align 8
  %327 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_compress to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %325, i32* %326)
  %328 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %329 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %328, i32 0, i32 0
  store %struct.set_family* %327, %struct.set_family** %329, align 8
  %330 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %331 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %330, i32 0, i32 1
  %332 = load %struct.set_family*, %struct.set_family** %331, align 8
  %333 = load i32*, i32** %16, align 8
  %334 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_compress to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %332, i32* %333)
  %335 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %336 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %335, i32 0, i32 1
  store %struct.set_family* %334, %struct.set_family** %336, align 8
  %337 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %338 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %337, i32 0, i32 2
  %339 = load %struct.set_family*, %struct.set_family** %338, align 8
  %340 = load i32*, i32** %16, align 8
  %341 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_compress to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %339, i32* %340)
  %342 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %343 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %342, i32 0, i32 2
  store %struct.set_family* %341, %struct.set_family** %343, align 8
  %344 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %345 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %346 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %345, i32 0, i32 8
  %347 = load %struct.symbolic_struct*, %struct.symbolic_struct** %346, align 8
  %348 = load i32*, i32** %16, align 8
  %349 = load i32, i32* %11, align 4
  %350 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %351 = load i32, i32* %12, align 4
  %352 = call i32 @symbolic_hack_labels(%struct.PLA_t* %344, %struct.symbolic_struct* %347, i32* %348, i32 %349, i32 %350, i32 %351)
  call void (...) bitcast (void ()* @setdown_cube to void (...)*)()
  %353 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %354 = icmp ne i32* %353, null
  br i1 %354, label %355, label %358

355:                                              ; preds = %322
  %356 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %357 = bitcast i32* %356 to i8*
  call void @free(i8* %357) #7
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  br label %358

358:                                              ; preds = %355, %322
  %359 = load i32, i32* %8, align 4
  store i32 %359, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %360 = load i32, i32* %9, align 4
  store i32 %360, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %361 = load i32*, i32** %10, align 8
  store i32* %361, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  call void (...) bitcast (void ()* @cube_setup to void (...)*)()
  %362 = load i32*, i32** %16, align 8
  %363 = icmp ne i32* %362, null
  br i1 %363, label %364, label %367

364:                                              ; preds = %358
  %365 = load i32*, i32** %16, align 8
  %366 = bitcast i32* %365 to i8*
  call void @free(i8* %366) #7
  store i32* null, i32** %16, align 8
  br label %367

367:                                              ; preds = %364, %358
  %368 = load i32, i32* %2, align 4
  ret i32 %368
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @map_symbolic_cover(%struct.set_family* %0, %struct.symbolic_list_struct* %1, i32 %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.symbolic_list_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store %struct.symbolic_list_struct* %1, %struct.symbolic_list_struct** %5, align 8
  store i32 %2, i32* %6, align 4
  %9 = load %struct.set_family*, %struct.set_family** %4, align 8
  %10 = getelementptr inbounds %struct.set_family, %struct.set_family* %9, i32 0, i32 5
  %11 = load i32*, i32** %10, align 8
  store i32* %11, i32** %8, align 8
  %12 = load i32*, i32** %8, align 8
  %13 = load %struct.set_family*, %struct.set_family** %4, align 8
  %14 = getelementptr inbounds %struct.set_family, %struct.set_family* %13, i32 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.set_family*, %struct.set_family** %4, align 8
  %17 = getelementptr inbounds %struct.set_family, %struct.set_family* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = mul nsw i32 %15, %18
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, i32* %12, i64 %20
  store i32* %21, i32** %7, align 8
  br label %22

22:                                               ; preds = %31, %3
  %23 = load i32*, i32** %8, align 8
  %24 = load i32*, i32** %7, align 8
  %25 = icmp ult i32* %23, %24
  br i1 %25, label %26, label %38

26:                                               ; preds = %22
  %27 = load i32*, i32** %8, align 8
  %28 = load i32, i32* %6, align 4
  %29 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %5, align 8
  %30 = call i32 @form_bitvector(i32* %27, i32 %28, i32 0, %struct.symbolic_list_struct* %29)
  br label %31

31:                                               ; preds = %26
  %32 = load %struct.set_family*, %struct.set_family** %4, align 8
  %33 = getelementptr inbounds %struct.set_family, %struct.set_family* %32, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = load i32*, i32** %8, align 8
  %36 = sext i32 %34 to i64
  %37 = getelementptr inbounds i32, i32* %35, i64 %36
  store i32* %37, i32** %8, align 8
  br label %22

38:                                               ; preds = %22
  %39 = load %struct.set_family*, %struct.set_family** %4, align 8
  ret %struct.set_family* %39
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @form_bitvector(i32* %0, i32 %1, i32 %2, %struct.symbolic_list_struct* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.symbolic_list_struct*, align 8
  store i32* %0, i32** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store %struct.symbolic_list_struct* %3, %struct.symbolic_list_struct** %9, align 8
  %10 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %9, align 8
  %11 = icmp eq %struct.symbolic_list_struct* %10, null
  br i1 %11, label %12, label %28

12:                                               ; preds = %4
  %13 = load i32, i32* %7, align 4
  %14 = load i32, i32* %8, align 4
  %15 = add nsw i32 %13, %14
  %16 = and i32 %15, 31
  %17 = shl i32 1, %16
  %18 = load i32*, i32** %6, align 8
  %19 = load i32, i32* %7, align 4
  %20 = load i32, i32* %8, align 4
  %21 = add nsw i32 %19, %20
  %22 = ashr i32 %21, 5
  %23 = add nsw i32 %22, 1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %18, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = or i32 %26, %17
  store i32 %27, i32* %25, align 4
  br label %85

28:                                               ; preds = %4
  %29 = load i32*, i32** %6, align 8
  %30 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %9, align 8
  %31 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = mul nsw i32 2, %32
  %34 = ashr i32 %33, 5
  %35 = add nsw i32 %34, 1
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %29, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %9, align 8
  %40 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = mul nsw i32 2, %41
  %43 = and i32 %42, 31
  %44 = lshr i32 %38, %43
  %45 = and i32 %44, 3
  switch i32 %45, label %83 [
    i32 1, label %46
    i32 2, label %55
    i32 3, label %65
  ]

46:                                               ; preds = %28
  %47 = load i32*, i32** %6, align 8
  %48 = load i32, i32* %7, align 4
  %49 = load i32, i32* %8, align 4
  %50 = mul nsw i32 %49, 2
  %51 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %9, align 8
  %52 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %51, i32 0, i32 2
  %53 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %52, align 8
  %54 = call i32 @form_bitvector(i32* %47, i32 %48, i32 %50, %struct.symbolic_list_struct* %53)
  br label %84

55:                                               ; preds = %28
  %56 = load i32*, i32** %6, align 8
  %57 = load i32, i32* %7, align 4
  %58 = load i32, i32* %8, align 4
  %59 = mul nsw i32 %58, 2
  %60 = add nsw i32 %59, 1
  %61 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %9, align 8
  %62 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %61, i32 0, i32 2
  %63 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %62, align 8
  %64 = call i32 @form_bitvector(i32* %56, i32 %57, i32 %60, %struct.symbolic_list_struct* %63)
  br label %84

65:                                               ; preds = %28
  %66 = load i32*, i32** %6, align 8
  %67 = load i32, i32* %7, align 4
  %68 = load i32, i32* %8, align 4
  %69 = mul nsw i32 %68, 2
  %70 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %9, align 8
  %71 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %70, i32 0, i32 2
  %72 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %71, align 8
  %73 = call i32 @form_bitvector(i32* %66, i32 %67, i32 %69, %struct.symbolic_list_struct* %72)
  %74 = load i32*, i32** %6, align 8
  %75 = load i32, i32* %7, align 4
  %76 = load i32, i32* %8, align 4
  %77 = mul nsw i32 %76, 2
  %78 = add nsw i32 %77, 1
  %79 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %9, align 8
  %80 = getelementptr inbounds %struct.symbolic_list_struct, %struct.symbolic_list_struct* %79, i32 0, i32 2
  %81 = load %struct.symbolic_list_struct*, %struct.symbolic_list_struct** %80, align 8
  %82 = call i32 @form_bitvector(i32* %74, i32 %75, i32 %78, %struct.symbolic_list_struct* %81)
  br label %84

83:                                               ; preds = %28
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14.285, i64 0, i64 0))
  br label %84

84:                                               ; preds = %83, %65, %55, %46
  br label %85

85:                                               ; preds = %84, %12
  %86 = load i32, i32* %5, align 4
  ret i32 %86
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @disassemble_fsm(%struct.PLA_t* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.PLA_t*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca i32*, align 8
  %21 = alloca %struct.set_family*, align 8
  %22 = alloca %struct.set_family*, align 8
  %23 = alloca %struct.set_family*, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %4, align 8
  store i32 %1, i32* %5, align 4
  %24 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %25 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %26 = sub nsw i32 %24, %25
  %27 = icmp ne i32 %26, 2
  br i1 %27, label %28, label %33

28:                                               ; preds = %2
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16.286, i64 0, i64 0))
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17.287, i64 0, i64 0))
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.18.288, i64 0, i64 0))
  br label %33

33:                                               ; preds = %28, %2
  %34 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %34, i32* %6, align 4
  %35 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %36 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %35, i64 %37
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %7, align 4
  %40 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %41 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %42 = sub nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %40, i64 %43
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %8, align 4
  %46 = load i32, i32* %8, align 4
  %47 = load i32, i32* %7, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %49, label %54

49:                                               ; preds = %33
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16.286, i64 0, i64 0))
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17.287, i64 0, i64 0))
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.289, i64 0, i64 0))
  br label %54

54:                                               ; preds = %49, %33
  %55 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %56 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %55, i64 %57
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %11, align 4
  %60 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %61 = icmp sle i32 %60, 32
  br i1 %61, label %62, label %63

62:                                               ; preds = %54
  br label %69

63:                                               ; preds = %54
  %64 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %65 = sub nsw i32 %64, 1
  %66 = ashr i32 %65, 5
  %67 = add nsw i32 %66, 1
  %68 = add nsw i32 %67, 1
  br label %69

69:                                               ; preds = %63, %62
  %70 = phi i32 [ 2, %62 ], [ %68, %63 ]
  %71 = sext i32 %70 to i64
  %72 = mul i64 4, %71
  %73 = call noalias i8* @malloc(i64 %72) #7
  %74 = bitcast i8* %73 to i32*
  %75 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %76 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %74, i32 %75)
  store i32* %76, i32** %16, align 8
  store i32 0, i32* %13, align 4
  br label %77

77:                                               ; preds = %97, %69
  %78 = load i32, i32* %13, align 4
  %79 = load i32, i32* %7, align 4
  %80 = icmp slt i32 %78, %79
  br i1 %80, label %81, label %100

81:                                               ; preds = %77
  %82 = load i32, i32* %13, align 4
  %83 = load i32, i32* %11, align 4
  %84 = add nsw i32 %82, %83
  %85 = and i32 %84, 31
  %86 = shl i32 1, %85
  %87 = load i32*, i32** %16, align 8
  %88 = load i32, i32* %13, align 4
  %89 = load i32, i32* %11, align 4
  %90 = add nsw i32 %88, %89
  %91 = ashr i32 %90, 5
  %92 = add nsw i32 %91, 1
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i32, i32* %87, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = or i32 %95, %86
  store i32 %96, i32* %94, align 4
  br label %97

97:                                               ; preds = %81
  %98 = load i32, i32* %13, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %13, align 4
  br label %77

100:                                              ; preds = %77
  %101 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %102 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %103 = add nsw i32 %102, 1
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i32, i32* %101, i64 %104
  %106 = load i32, i32* %105, align 4
  store i32 %106, i32* %12, align 4
  %107 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %108 = icmp sle i32 %107, 32
  br i1 %108, label %109, label %110

109:                                              ; preds = %100
  br label %116

110:                                              ; preds = %100
  %111 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %112 = sub nsw i32 %111, 1
  %113 = ashr i32 %112, 5
  %114 = add nsw i32 %113, 1
  %115 = add nsw i32 %114, 1
  br label %116

116:                                              ; preds = %110, %109
  %117 = phi i32 [ 2, %109 ], [ %115, %110 ]
  %118 = sext i32 %117 to i64
  %119 = mul i64 4, %118
  %120 = call noalias i8* @malloc(i64 %119) #7
  %121 = bitcast i8* %120 to i32*
  %122 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %123 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %121, i32 %122)
  store i32* %123, i32** %15, align 8
  store i32 0, i32* %13, align 4
  br label %124

124:                                              ; preds = %144, %116
  %125 = load i32, i32* %13, align 4
  %126 = load i32, i32* %7, align 4
  %127 = icmp slt i32 %125, %126
  br i1 %127, label %128, label %147

128:                                              ; preds = %124
  %129 = load i32, i32* %13, align 4
  %130 = load i32, i32* %12, align 4
  %131 = add nsw i32 %129, %130
  %132 = and i32 %131, 31
  %133 = shl i32 1, %132
  %134 = load i32*, i32** %15, align 8
  %135 = load i32, i32* %13, align 4
  %136 = load i32, i32* %12, align 4
  %137 = add nsw i32 %135, %136
  %138 = ashr i32 %137, 5
  %139 = add nsw i32 %138, 1
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i32, i32* %134, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = or i32 %142, %133
  store i32 %143, i32* %141, align 4
  br label %144

144:                                              ; preds = %128
  %145 = load i32, i32* %13, align 4
  %146 = add nsw i32 %145, 1
  store i32 %146, i32* %13, align 4
  br label %124

147:                                              ; preds = %124
  %148 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %149 = icmp sle i32 %148, 32
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  br label %157

151:                                              ; preds = %147
  %152 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %153 = sub nsw i32 %152, 1
  %154 = ashr i32 %153, 5
  %155 = add nsw i32 %154, 1
  %156 = add nsw i32 %155, 1
  br label %157

157:                                              ; preds = %151, %150
  %158 = phi i32 [ 2, %150 ], [ %156, %151 ]
  %159 = sext i32 %158 to i64
  %160 = mul i64 4, %159
  %161 = call noalias i8* @malloc(i64 %160) #7
  %162 = bitcast i8* %161 to i32*
  %163 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %164 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %162, i32 %163)
  %165 = load i32*, i32** %15, align 8
  %166 = load i32*, i32** %16, align 8
  %167 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %164, i32* %165, i32* %166)
  store i32* %167, i32** %17, align 8
  %168 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %169 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 10, i32 %168)
  store %struct.set_family* %169, %struct.set_family** %22, align 8
  store i32 0, i32* %13, align 4
  br label %170

170:                                              ; preds = %302, %157
  %171 = load i32, i32* %13, align 4
  %172 = load i32, i32* %7, align 4
  %173 = icmp slt i32 %171, %172
  br i1 %173, label %174, label %305

174:                                              ; preds = %170
  %175 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %176 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 10, i32 %175)
  store %struct.set_family* %176, %struct.set_family** %23, align 8
  %177 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %178 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %177, i32 0, i32 0
  %179 = load %struct.set_family*, %struct.set_family** %178, align 8
  %180 = getelementptr inbounds %struct.set_family, %struct.set_family* %179, i32 0, i32 5
  %181 = load i32*, i32** %180, align 8
  store i32* %181, i32** %18, align 8
  %182 = load i32*, i32** %18, align 8
  %183 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %184 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %183, i32 0, i32 0
  %185 = load %struct.set_family*, %struct.set_family** %184, align 8
  %186 = getelementptr inbounds %struct.set_family, %struct.set_family* %185, i32 0, i32 3
  %187 = load i32, i32* %186, align 4
  %188 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %189 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %188, i32 0, i32 0
  %190 = load %struct.set_family*, %struct.set_family** %189, align 8
  %191 = getelementptr inbounds %struct.set_family, %struct.set_family* %190, i32 0, i32 0
  %192 = load i32, i32* %191, align 8
  %193 = mul nsw i32 %187, %192
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds i32, i32* %182, i64 %194
  store i32* %195, i32** %20, align 8
  br label %196

196:                                              ; preds = %228, %174
  %197 = load i32*, i32** %18, align 8
  %198 = load i32*, i32** %20, align 8
  %199 = icmp ult i32* %197, %198
  br i1 %199, label %200, label %237

200:                                              ; preds = %196
  %201 = load i32*, i32** %16, align 8
  %202 = load i32*, i32** %18, align 8
  %203 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_implies to i32 (i32*, i32*, ...)*)(i32* %201, i32* %202)
  %204 = icmp ne i32 %203, 0
  br i1 %204, label %205, label %227

205:                                              ; preds = %200
  %206 = load i32*, i32** %18, align 8
  %207 = load i32, i32* %12, align 4
  %208 = load i32, i32* %13, align 4
  %209 = add nsw i32 %207, %208
  %210 = ashr i32 %209, 5
  %211 = add nsw i32 %210, 1
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds i32, i32* %206, i64 %212
  %214 = load i32, i32* %213, align 4
  %215 = load i32, i32* %12, align 4
  %216 = load i32, i32* %13, align 4
  %217 = add nsw i32 %215, %216
  %218 = and i32 %217, 31
  %219 = shl i32 1, %218
  %220 = and i32 %214, %219
  %221 = icmp ne i32 %220, 0
  br i1 %221, label %222, label %226

222:                                              ; preds = %205
  %223 = load %struct.set_family*, %struct.set_family** %23, align 8
  %224 = load i32*, i32** %18, align 8
  %225 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %223, i32* %224)
  store %struct.set_family* %225, %struct.set_family** %23, align 8
  br label %226

226:                                              ; preds = %222, %205
  br label %227

227:                                              ; preds = %226, %200
  br label %228

228:                                              ; preds = %227
  %229 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %230 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %229, i32 0, i32 0
  %231 = load %struct.set_family*, %struct.set_family** %230, align 8
  %232 = getelementptr inbounds %struct.set_family, %struct.set_family* %231, i32 0, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = load i32*, i32** %18, align 8
  %235 = sext i32 %233 to i64
  %236 = getelementptr inbounds i32, i32* %234, i64 %235
  store i32* %236, i32** %18, align 8
  br label %196

237:                                              ; preds = %196
  %238 = load %struct.set_family*, %struct.set_family** %23, align 8
  %239 = getelementptr inbounds %struct.set_family, %struct.set_family* %238, i32 0, i32 3
  %240 = load i32, i32* %239, align 4
  store i32 %240, i32* %9, align 4
  %241 = load i32, i32* %9, align 4
  %242 = icmp sgt i32 %241, 0
  br i1 %242, label %243, label %301

243:                                              ; preds = %237
  %244 = load %struct.set_family*, %struct.set_family** %23, align 8
  %245 = call %struct.set_family* @fsm_simplify(%struct.set_family* %244)
  store %struct.set_family* %245, %struct.set_family** %23, align 8
  %246 = load %struct.set_family*, %struct.set_family** %23, align 8
  %247 = getelementptr inbounds %struct.set_family, %struct.set_family* %246, i32 0, i32 5
  %248 = load i32*, i32** %247, align 8
  store i32* %248, i32** %18, align 8
  %249 = load i32*, i32** %18, align 8
  %250 = load %struct.set_family*, %struct.set_family** %23, align 8
  %251 = getelementptr inbounds %struct.set_family, %struct.set_family* %250, i32 0, i32 3
  %252 = load i32, i32* %251, align 4
  %253 = load %struct.set_family*, %struct.set_family** %23, align 8
  %254 = getelementptr inbounds %struct.set_family, %struct.set_family* %253, i32 0, i32 0
  %255 = load i32, i32* %254, align 8
  %256 = mul nsw i32 %252, %255
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds i32, i32* %249, i64 %257
  store i32* %258, i32** %20, align 8
  br label %259

259:                                              ; preds = %279, %243
  %260 = load i32*, i32** %18, align 8
  %261 = load i32*, i32** %20, align 8
  %262 = icmp ult i32* %260, %261
  br i1 %262, label %263, label %286

263:                                              ; preds = %259
  %264 = load i32, i32* %12, align 4
  %265 = load i32, i32* %13, align 4
  %266 = add nsw i32 %264, %265
  %267 = and i32 %266, 31
  %268 = shl i32 1, %267
  %269 = load i32*, i32** %18, align 8
  %270 = load i32, i32* %12, align 4
  %271 = load i32, i32* %13, align 4
  %272 = add nsw i32 %270, %271
  %273 = ashr i32 %272, 5
  %274 = add nsw i32 %273, 1
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds i32, i32* %269, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = or i32 %277, %268
  store i32 %278, i32* %276, align 4
  br label %279

279:                                              ; preds = %263
  %280 = load %struct.set_family*, %struct.set_family** %23, align 8
  %281 = getelementptr inbounds %struct.set_family, %struct.set_family* %280, i32 0, i32 0
  %282 = load i32, i32* %281, align 8
  %283 = load i32*, i32** %18, align 8
  %284 = sext i32 %282 to i64
  %285 = getelementptr inbounds i32, i32* %283, i64 %284
  store i32* %285, i32** %18, align 8
  br label %259

286:                                              ; preds = %259
  %287 = load %struct.set_family*, %struct.set_family** %23, align 8
  %288 = getelementptr inbounds %struct.set_family, %struct.set_family* %287, i32 0, i32 3
  %289 = load i32, i32* %288, align 4
  store i32 %289, i32* %10, align 4
  %290 = load %struct.set_family*, %struct.set_family** %22, align 8
  %291 = load %struct.set_family*, %struct.set_family** %23, align 8
  %292 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_append to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %290, %struct.set_family* %291)
  store %struct.set_family* %292, %struct.set_family** %22, align 8
  %293 = load i32, i32* %5, align 4
  %294 = icmp ne i32 %293, 0
  br i1 %294, label %295, label %300

295:                                              ; preds = %286
  %296 = load i32, i32* %13, align 4
  %297 = load i32, i32* %9, align 4
  %298 = load i32, i32* %10, align 4
  %299 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.20.290, i64 0, i64 0), i32 %296, i32 %297, i32 %298)
  br label %300

300:                                              ; preds = %295, %286
  br label %301

301:                                              ; preds = %300, %237
  br label %302

302:                                              ; preds = %301
  %303 = load i32, i32* %13, align 4
  %304 = add nsw i32 %303, 1
  store i32 %304, i32* %13, align 4
  br label %170

305:                                              ; preds = %170
  %306 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %307 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 10, i32 %306)
  store %struct.set_family* %307, %struct.set_family** %21, align 8
  %308 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %309 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %308, i32 0, i32 0
  %310 = load %struct.set_family*, %struct.set_family** %309, align 8
  %311 = getelementptr inbounds %struct.set_family, %struct.set_family* %310, i32 0, i32 5
  %312 = load i32*, i32** %311, align 8
  store i32* %312, i32** %18, align 8
  %313 = load i32*, i32** %18, align 8
  %314 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %315 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %314, i32 0, i32 0
  %316 = load %struct.set_family*, %struct.set_family** %315, align 8
  %317 = getelementptr inbounds %struct.set_family, %struct.set_family* %316, i32 0, i32 3
  %318 = load i32, i32* %317, align 4
  %319 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %320 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %319, i32 0, i32 0
  %321 = load %struct.set_family*, %struct.set_family** %320, align 8
  %322 = getelementptr inbounds %struct.set_family, %struct.set_family* %321, i32 0, i32 0
  %323 = load i32, i32* %322, align 8
  %324 = mul nsw i32 %318, %323
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds i32, i32* %313, i64 %325
  store i32* %326, i32** %20, align 8
  br label %327

327:                                              ; preds = %341, %305
  %328 = load i32*, i32** %18, align 8
  %329 = load i32*, i32** %20, align 8
  %330 = icmp ult i32* %328, %329
  br i1 %330, label %331, label %350

331:                                              ; preds = %327
  %332 = load i32*, i32** %18, align 8
  %333 = load i32*, i32** %15, align 8
  %334 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_disjoint to i32 (i32*, i32*, ...)*)(i32* %332, i32* %333)
  %335 = icmp ne i32 %334, 0
  br i1 %335, label %336, label %340

336:                                              ; preds = %331
  %337 = load %struct.set_family*, %struct.set_family** %21, align 8
  %338 = load i32*, i32** %18, align 8
  %339 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %337, i32* %338)
  store %struct.set_family* %339, %struct.set_family** %21, align 8
  br label %340

340:                                              ; preds = %336, %331
  br label %341

341:                                              ; preds = %340
  %342 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %343 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %342, i32 0, i32 0
  %344 = load %struct.set_family*, %struct.set_family** %343, align 8
  %345 = getelementptr inbounds %struct.set_family, %struct.set_family* %344, i32 0, i32 0
  %346 = load i32, i32* %345, align 8
  %347 = load i32*, i32** %18, align 8
  %348 = sext i32 %346 to i64
  %349 = getelementptr inbounds i32, i32* %347, i64 %348
  store i32* %349, i32** %18, align 8
  br label %327

350:                                              ; preds = %327
  %351 = load %struct.set_family*, %struct.set_family** %21, align 8
  %352 = getelementptr inbounds %struct.set_family, %struct.set_family* %351, i32 0, i32 3
  %353 = load i32, i32* %352, align 4
  store i32 %353, i32* %9, align 4
  %354 = load %struct.set_family*, %struct.set_family** %21, align 8
  %355 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %356 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %357 = call %struct.set_family* (%struct.set_family*, i32, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32, i32)* @unravel_range to %struct.set_family* (%struct.set_family*, i32, i32, ...)*)(%struct.set_family* %354, i32 %355, i32 %356)
  store %struct.set_family* %357, %struct.set_family** %21, align 8
  %358 = load %struct.set_family*, %struct.set_family** %21, align 8
  %359 = getelementptr inbounds %struct.set_family, %struct.set_family* %358, i32 0, i32 3
  %360 = load i32, i32* %359, align 4
  store i32 %360, i32* %10, align 4
  %361 = load %struct.set_family*, %struct.set_family** %22, align 8
  %362 = load %struct.set_family*, %struct.set_family** %21, align 8
  %363 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_append to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %361, %struct.set_family* %362)
  store %struct.set_family* %363, %struct.set_family** %22, align 8
  %364 = load i32, i32* %5, align 4
  %365 = icmp ne i32 %364, 0
  br i1 %365, label %366, label %370

366:                                              ; preds = %350
  %367 = load i32, i32* %9, align 4
  %368 = load i32, i32* %10, align 4
  %369 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21.291, i64 0, i64 0), i32 %367, i32 %368)
  br label %370

370:                                              ; preds = %366, %350
  store i32 0, i32* %13, align 4
  br label %371

371:                                              ; preds = %596, %370
  %372 = load i32, i32* %13, align 4
  %373 = load i32, i32* %7, align 4
  %374 = icmp slt i32 %372, %373
  br i1 %374, label %375, label %599

375:                                              ; preds = %371
  store i32 0, i32* %14, align 4
  br label %376

376:                                              ; preds = %592, %375
  %377 = load i32, i32* %14, align 4
  %378 = load i32, i32* %7, align 4
  %379 = icmp slt i32 %377, %378
  br i1 %379, label %380, label %595

380:                                              ; preds = %376
  %381 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %382 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 10, i32 %381)
  store %struct.set_family* %382, %struct.set_family** %23, align 8
  %383 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %384 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %383, i32 0, i32 0
  %385 = load %struct.set_family*, %struct.set_family** %384, align 8
  %386 = getelementptr inbounds %struct.set_family, %struct.set_family* %385, i32 0, i32 5
  %387 = load i32*, i32** %386, align 8
  store i32* %387, i32** %18, align 8
  %388 = load i32*, i32** %18, align 8
  %389 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %390 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %389, i32 0, i32 0
  %391 = load %struct.set_family*, %struct.set_family** %390, align 8
  %392 = getelementptr inbounds %struct.set_family, %struct.set_family* %391, i32 0, i32 3
  %393 = load i32, i32* %392, align 4
  %394 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %395 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %394, i32 0, i32 0
  %396 = load %struct.set_family*, %struct.set_family** %395, align 8
  %397 = getelementptr inbounds %struct.set_family, %struct.set_family* %396, i32 0, i32 0
  %398 = load i32, i32* %397, align 8
  %399 = mul nsw i32 %393, %398
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds i32, i32* %388, i64 %400
  store i32* %401, i32** %20, align 8
  br label %402

402:                                              ; preds = %517, %380
  %403 = load i32*, i32** %18, align 8
  %404 = load i32*, i32** %20, align 8
  %405 = icmp ult i32* %403, %404
  br i1 %405, label %406, label %526

406:                                              ; preds = %402
  %407 = load i32*, i32** %16, align 8
  %408 = load i32*, i32** %18, align 8
  %409 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_implies to i32 (i32*, i32*, ...)*)(i32* %407, i32* %408)
  %410 = icmp ne i32 %409, 0
  br i1 %410, label %516, label %411

411:                                              ; preds = %406
  %412 = load i32*, i32** %18, align 8
  %413 = load i32, i32* %11, align 4
  %414 = load i32, i32* %13, align 4
  %415 = add nsw i32 %413, %414
  %416 = ashr i32 %415, 5
  %417 = add nsw i32 %416, 1
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds i32, i32* %412, i64 %418
  %420 = load i32, i32* %419, align 4
  %421 = load i32, i32* %11, align 4
  %422 = load i32, i32* %13, align 4
  %423 = add nsw i32 %421, %422
  %424 = and i32 %423, 31
  %425 = shl i32 1, %424
  %426 = and i32 %420, %425
  %427 = icmp ne i32 %426, 0
  br i1 %427, label %428, label %515

428:                                              ; preds = %411
  %429 = load i32*, i32** %18, align 8
  %430 = load i32, i32* %12, align 4
  %431 = load i32, i32* %14, align 4
  %432 = add nsw i32 %430, %431
  %433 = ashr i32 %432, 5
  %434 = add nsw i32 %433, 1
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds i32, i32* %429, i64 %435
  %437 = load i32, i32* %436, align 4
  %438 = load i32, i32* %12, align 4
  %439 = load i32, i32* %14, align 4
  %440 = add nsw i32 %438, %439
  %441 = and i32 %440, 31
  %442 = shl i32 1, %441
  %443 = and i32 %437, %442
  %444 = icmp ne i32 %443, 0
  br i1 %444, label %445, label %514

445:                                              ; preds = %428
  %446 = load i32*, i32** %18, align 8
  %447 = getelementptr inbounds i32, i32* %446, i64 0
  %448 = load i32, i32* %447, align 4
  %449 = and i32 %448, 1023
  %450 = mul i32 32, %449
  %451 = icmp ule i32 %450, 32
  br i1 %451, label %452, label %453

452:                                              ; preds = %445
  br label %463

453:                                              ; preds = %445
  %454 = load i32*, i32** %18, align 8
  %455 = getelementptr inbounds i32, i32* %454, i64 0
  %456 = load i32, i32* %455, align 4
  %457 = and i32 %456, 1023
  %458 = mul i32 32, %457
  %459 = sub i32 %458, 1
  %460 = lshr i32 %459, 5
  %461 = add i32 %460, 1
  %462 = add i32 %461, 1
  br label %463

463:                                              ; preds = %453, %452
  %464 = phi i32 [ 2, %452 ], [ %462, %453 ]
  %465 = zext i32 %464 to i64
  %466 = mul i64 4, %465
  %467 = call noalias i8* @malloc(i64 %466) #7
  %468 = bitcast i8* %467 to i32*
  %469 = load i32*, i32** %18, align 8
  %470 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %468, i32* %469)
  store i32* %470, i32** %19, align 8
  %471 = load i32*, i32** %19, align 8
  %472 = load i32*, i32** %19, align 8
  %473 = load i32*, i32** %17, align 8
  %474 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %471, i32* %472, i32* %473)
  %475 = load i32, i32* %11, align 4
  %476 = load i32, i32* %13, align 4
  %477 = add nsw i32 %475, %476
  %478 = and i32 %477, 31
  %479 = shl i32 1, %478
  %480 = load i32*, i32** %19, align 8
  %481 = load i32, i32* %11, align 4
  %482 = load i32, i32* %13, align 4
  %483 = add nsw i32 %481, %482
  %484 = ashr i32 %483, 5
  %485 = add nsw i32 %484, 1
  %486 = sext i32 %485 to i64
  %487 = getelementptr inbounds i32, i32* %480, i64 %486
  %488 = load i32, i32* %487, align 4
  %489 = or i32 %488, %479
  store i32 %489, i32* %487, align 4
  %490 = load i32, i32* %12, align 4
  %491 = load i32, i32* %14, align 4
  %492 = add nsw i32 %490, %491
  %493 = and i32 %492, 31
  %494 = shl i32 1, %493
  %495 = load i32*, i32** %19, align 8
  %496 = load i32, i32* %12, align 4
  %497 = load i32, i32* %14, align 4
  %498 = add nsw i32 %496, %497
  %499 = ashr i32 %498, 5
  %500 = add nsw i32 %499, 1
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds i32, i32* %495, i64 %501
  %503 = load i32, i32* %502, align 4
  %504 = or i32 %503, %494
  store i32 %504, i32* %502, align 4
  %505 = load %struct.set_family*, %struct.set_family** %23, align 8
  %506 = load i32*, i32** %19, align 8
  %507 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %505, i32* %506)
  store %struct.set_family* %507, %struct.set_family** %23, align 8
  %508 = load i32*, i32** %19, align 8
  %509 = icmp ne i32* %508, null
  br i1 %509, label %510, label %513

510:                                              ; preds = %463
  %511 = load i32*, i32** %19, align 8
  %512 = bitcast i32* %511 to i8*
  call void @free(i8* %512) #7
  store i32* null, i32** %19, align 8
  br label %513

513:                                              ; preds = %510, %463
  br label %514

514:                                              ; preds = %513, %428
  br label %515

515:                                              ; preds = %514, %411
  br label %516

516:                                              ; preds = %515, %406
  br label %517

517:                                              ; preds = %516
  %518 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %519 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %518, i32 0, i32 0
  %520 = load %struct.set_family*, %struct.set_family** %519, align 8
  %521 = getelementptr inbounds %struct.set_family, %struct.set_family* %520, i32 0, i32 0
  %522 = load i32, i32* %521, align 8
  %523 = load i32*, i32** %18, align 8
  %524 = sext i32 %522 to i64
  %525 = getelementptr inbounds i32, i32* %523, i64 %524
  store i32* %525, i32** %18, align 8
  br label %402

526:                                              ; preds = %402
  %527 = load %struct.set_family*, %struct.set_family** %23, align 8
  %528 = getelementptr inbounds %struct.set_family, %struct.set_family* %527, i32 0, i32 3
  %529 = load i32, i32* %528, align 4
  store i32 %529, i32* %9, align 4
  %530 = load i32, i32* %9, align 4
  %531 = icmp sgt i32 %530, 0
  br i1 %531, label %532, label %591

532:                                              ; preds = %526
  %533 = load %struct.set_family*, %struct.set_family** %23, align 8
  %534 = call %struct.set_family* @fsm_simplify(%struct.set_family* %533)
  store %struct.set_family* %534, %struct.set_family** %23, align 8
  %535 = load %struct.set_family*, %struct.set_family** %23, align 8
  %536 = getelementptr inbounds %struct.set_family, %struct.set_family* %535, i32 0, i32 5
  %537 = load i32*, i32** %536, align 8
  store i32* %537, i32** %18, align 8
  %538 = load i32*, i32** %18, align 8
  %539 = load %struct.set_family*, %struct.set_family** %23, align 8
  %540 = getelementptr inbounds %struct.set_family, %struct.set_family* %539, i32 0, i32 3
  %541 = load i32, i32* %540, align 4
  %542 = load %struct.set_family*, %struct.set_family** %23, align 8
  %543 = getelementptr inbounds %struct.set_family, %struct.set_family* %542, i32 0, i32 0
  %544 = load i32, i32* %543, align 8
  %545 = mul nsw i32 %541, %544
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds i32, i32* %538, i64 %546
  store i32* %547, i32** %20, align 8
  br label %548

548:                                              ; preds = %568, %532
  %549 = load i32*, i32** %18, align 8
  %550 = load i32*, i32** %20, align 8
  %551 = icmp ult i32* %549, %550
  br i1 %551, label %552, label %575

552:                                              ; preds = %548
  %553 = load i32, i32* %12, align 4
  %554 = load i32, i32* %14, align 4
  %555 = add nsw i32 %553, %554
  %556 = and i32 %555, 31
  %557 = shl i32 1, %556
  %558 = load i32*, i32** %18, align 8
  %559 = load i32, i32* %12, align 4
  %560 = load i32, i32* %14, align 4
  %561 = add nsw i32 %559, %560
  %562 = ashr i32 %561, 5
  %563 = add nsw i32 %562, 1
  %564 = sext i32 %563 to i64
  %565 = getelementptr inbounds i32, i32* %558, i64 %564
  %566 = load i32, i32* %565, align 4
  %567 = or i32 %566, %557
  store i32 %567, i32* %565, align 4
  br label %568

568:                                              ; preds = %552
  %569 = load %struct.set_family*, %struct.set_family** %23, align 8
  %570 = getelementptr inbounds %struct.set_family, %struct.set_family* %569, i32 0, i32 0
  %571 = load i32, i32* %570, align 8
  %572 = load i32*, i32** %18, align 8
  %573 = sext i32 %571 to i64
  %574 = getelementptr inbounds i32, i32* %572, i64 %573
  store i32* %574, i32** %18, align 8
  br label %548

575:                                              ; preds = %548
  %576 = load %struct.set_family*, %struct.set_family** %23, align 8
  %577 = getelementptr inbounds %struct.set_family, %struct.set_family* %576, i32 0, i32 3
  %578 = load i32, i32* %577, align 4
  store i32 %578, i32* %10, align 4
  %579 = load %struct.set_family*, %struct.set_family** %22, align 8
  %580 = load %struct.set_family*, %struct.set_family** %23, align 8
  %581 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_append to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %579, %struct.set_family* %580)
  store %struct.set_family* %581, %struct.set_family** %22, align 8
  %582 = load i32, i32* %5, align 4
  %583 = icmp ne i32 %582, 0
  br i1 %583, label %584, label %590

584:                                              ; preds = %575
  %585 = load i32, i32* %13, align 4
  %586 = load i32, i32* %14, align 4
  %587 = load i32, i32* %9, align 4
  %588 = load i32, i32* %10, align 4
  %589 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22.292, i64 0, i64 0), i32 %585, i32 %586, i32 %587, i32 %588)
  br label %590

590:                                              ; preds = %584, %575
  br label %591

591:                                              ; preds = %590, %526
  br label %592

592:                                              ; preds = %591
  %593 = load i32, i32* %14, align 4
  %594 = add nsw i32 %593, 1
  store i32 %594, i32* %14, align 4
  br label %376

595:                                              ; preds = %376
  br label %596

596:                                              ; preds = %595
  %597 = load i32, i32* %13, align 4
  %598 = add nsw i32 %597, 1
  store i32 %598, i32* %13, align 4
  br label %371

599:                                              ; preds = %371
  %600 = load i32*, i32** %17, align 8
  %601 = icmp ne i32* %600, null
  br i1 %601, label %602, label %605

602:                                              ; preds = %599
  %603 = load i32*, i32** %17, align 8
  %604 = bitcast i32* %603 to i8*
  call void @free(i8* %604) #7
  store i32* null, i32** %17, align 8
  br label %605

605:                                              ; preds = %602, %599
  %606 = load i32*, i32** %16, align 8
  %607 = icmp ne i32* %606, null
  br i1 %607, label %608, label %611

608:                                              ; preds = %605
  %609 = load i32*, i32** %16, align 8
  %610 = bitcast i32* %609 to i8*
  call void @free(i8* %610) #7
  store i32* null, i32** %16, align 8
  br label %611

611:                                              ; preds = %608, %605
  %612 = load i32*, i32** %15, align 8
  %613 = icmp ne i32* %612, null
  br i1 %613, label %614, label %617

614:                                              ; preds = %611
  %615 = load i32*, i32** %15, align 8
  %616 = bitcast i32* %615 to i8*
  call void @free(i8* %616) #7
  store i32* null, i32** %15, align 8
  br label %617

617:                                              ; preds = %614, %611
  %618 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %619 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %618, i32 0, i32 0
  %620 = load %struct.set_family*, %struct.set_family** %619, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %620)
  %621 = load %struct.set_family*, %struct.set_family** %22, align 8
  %622 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %623 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %622, i32 0, i32 0
  store %struct.set_family* %621, %struct.set_family** %623, align 8
  %624 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %625 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %624, i32 0, i32 1
  %626 = load %struct.set_family*, %struct.set_family** %625, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %626)
  %627 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %628 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 0, i32 %627)
  %629 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %630 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %629, i32 0, i32 1
  store %struct.set_family* %628, %struct.set_family** %630, align 8
  call void (...) bitcast (void ()* @setdown_cube to void (...)*)()
  %631 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %632 = icmp ne i32* %631, null
  br i1 %632, label %633, label %636

633:                                              ; preds = %617
  %634 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %635 = bitcast i32* %634 to i8*
  call void @free(i8* %635) #7
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  br label %636

636:                                              ; preds = %633, %617
  %637 = load i32, i32* %6, align 4
  store i32 %637, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %638 = load i32, i32* %6, align 4
  %639 = add nsw i32 %638, 3
  store i32 %639, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %640 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %641 = sext i32 %640 to i64
  %642 = mul i64 4, %641
  %643 = call noalias i8* @malloc(i64 %642) #7
  %644 = bitcast i8* %643 to i32*
  store i32* %644, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %645 = load i32, i32* %7, align 4
  %646 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %647 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %648 = sext i32 %647 to i64
  %649 = getelementptr inbounds i32, i32* %646, i64 %648
  store i32 %645, i32* %649, align 4
  %650 = load i32, i32* %7, align 4
  %651 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %652 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %653 = add nsw i32 %652, 1
  %654 = sext i32 %653 to i64
  %655 = getelementptr inbounds i32, i32* %651, i64 %654
  store i32 %650, i32* %655, align 4
  %656 = load i32, i32* %8, align 4
  %657 = load i32, i32* %7, align 4
  %658 = sub nsw i32 %656, %657
  %659 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %660 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %661 = add nsw i32 %660, 2
  %662 = sext i32 %661 to i64
  %663 = getelementptr inbounds i32, i32* %659, i64 %662
  store i32 %658, i32* %663, align 4
  call void (...) bitcast (void ()* @cube_setup to void (...)*)()
  %664 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %665 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %664, i32 0, i32 0
  %666 = load %struct.set_family*, %struct.set_family** %665, align 8
  %667 = getelementptr inbounds %struct.set_family, %struct.set_family* %666, i32 0, i32 5
  %668 = load i32*, i32** %667, align 8
  store i32* %668, i32** %18, align 8
  %669 = load i32*, i32** %18, align 8
  %670 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %671 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %670, i32 0, i32 0
  %672 = load %struct.set_family*, %struct.set_family** %671, align 8
  %673 = getelementptr inbounds %struct.set_family, %struct.set_family* %672, i32 0, i32 3
  %674 = load i32, i32* %673, align 4
  %675 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %676 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %675, i32 0, i32 0
  %677 = load %struct.set_family*, %struct.set_family** %676, align 8
  %678 = getelementptr inbounds %struct.set_family, %struct.set_family* %677, i32 0, i32 0
  %679 = load i32, i32* %678, align 8
  %680 = mul nsw i32 %674, %679
  %681 = sext i32 %680 to i64
  %682 = getelementptr inbounds i32, i32* %669, i64 %681
  store i32* %682, i32** %20, align 8
  br label %683

683:                                              ; preds = %692, %636
  %684 = load i32*, i32** %18, align 8
  %685 = load i32*, i32** %20, align 8
  %686 = icmp ult i32* %684, %685
  br i1 %686, label %687, label %701

687:                                              ; preds = %683
  %688 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %689 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %690 = load i32*, i32** %18, align 8
  %691 = call i32 (%struct._IO_FILE*, %struct.PLA_t*, i32*, i8*, ...) bitcast (i32 (%struct._IO_FILE*, %struct.PLA_t*, i32*, i8*)* @kiss_print_cube to i32 (%struct._IO_FILE*, %struct.PLA_t*, i32*, i8*, ...)*)(%struct._IO_FILE* %688, %struct.PLA_t* %689, i32* %690, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.293, i64 0, i64 0))
  br label %692

692:                                              ; preds = %687
  %693 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %694 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %693, i32 0, i32 0
  %695 = load %struct.set_family*, %struct.set_family** %694, align 8
  %696 = getelementptr inbounds %struct.set_family, %struct.set_family* %695, i32 0, i32 0
  %697 = load i32, i32* %696, align 8
  %698 = load i32*, i32** %18, align 8
  %699 = sext i32 %697 to i64
  %700 = getelementptr inbounds i32, i32* %698, i64 %699
  store i32* %700, i32** %18, align 8
  br label %683

701:                                              ; preds = %683
  %702 = load i32, i32* %3, align 4
  ret i32 %702
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.set_family* @fsm_simplify(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %5 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %6 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 0, i32 %5)
  store %struct.set_family* %6, %struct.set_family** %3, align 8
  %7 = load %struct.set_family*, %struct.set_family** %2, align 8
  %8 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @cube1list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %7)
  %9 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @complement to %struct.set_family* (i32**, ...)*)(i32** %8)
  store %struct.set_family* %9, %struct.set_family** %4, align 8
  %10 = load %struct.set_family*, %struct.set_family** %2, align 8
  %11 = load %struct.set_family*, %struct.set_family** %3, align 8
  %12 = load %struct.set_family*, %struct.set_family** %4, align 8
  %13 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @espresso to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %10, %struct.set_family* %11, %struct.set_family* %12)
  store %struct.set_family* %13, %struct.set_family** %2, align 8
  %14 = load %struct.set_family*, %struct.set_family** %3, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %14)
  %15 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %15)
  %16 = load %struct.set_family*, %struct.set_family** %2, align 8
  ret %struct.set_family* %16
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.solution_struct* @sm_maximal_independent_set(%struct.sm_matrix_struct* %0, i32* %1) #0 {
  %3 = alloca %struct.sm_matrix_struct*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca %struct.sm_row_struct*, align 8
  %6 = alloca %struct.sm_row_struct*, align 8
  %7 = alloca %struct.sm_element_struct*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.sm_row_struct*, align 8
  %10 = alloca %struct.sm_matrix_struct*, align 8
  %11 = alloca %struct.solution_struct*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %3, align 8
  store i32* %1, i32** %4, align 8
  %12 = call %struct.solution_struct* (...) bitcast (%struct.solution_struct* ()* @solution_alloc to %struct.solution_struct* (...)*)()
  store %struct.solution_struct* %12, %struct.solution_struct** %11, align 8
  %13 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %14 = call %struct.sm_matrix_struct* @build_intersection_matrix(%struct.sm_matrix_struct* %13)
  store %struct.sm_matrix_struct* %14, %struct.sm_matrix_struct** %10, align 8
  br label %15

15:                                               ; preds = %152, %2
  %16 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %17 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %16, i32 0, i32 6
  %18 = load i32, i32* %17, align 8
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %154

20:                                               ; preds = %15
  %21 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %22 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %21, i32 0, i32 4
  %23 = load %struct.sm_row_struct*, %struct.sm_row_struct** %22, align 8
  store %struct.sm_row_struct* %23, %struct.sm_row_struct** %5, align 8
  %24 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %25 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %24, i32 0, i32 4
  %26 = load %struct.sm_row_struct*, %struct.sm_row_struct** %25, align 8
  %27 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %26, i32 0, i32 5
  %28 = load %struct.sm_row_struct*, %struct.sm_row_struct** %27, align 8
  store %struct.sm_row_struct* %28, %struct.sm_row_struct** %6, align 8
  br label %29

29:                                               ; preds = %43, %20
  %30 = load %struct.sm_row_struct*, %struct.sm_row_struct** %6, align 8
  %31 = icmp ne %struct.sm_row_struct* %30, null
  br i1 %31, label %32, label %47

32:                                               ; preds = %29
  %33 = load %struct.sm_row_struct*, %struct.sm_row_struct** %6, align 8
  %34 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %33, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %37 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %35, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %32
  %41 = load %struct.sm_row_struct*, %struct.sm_row_struct** %6, align 8
  store %struct.sm_row_struct* %41, %struct.sm_row_struct** %5, align 8
  br label %42

42:                                               ; preds = %40, %32
  br label %43

43:                                               ; preds = %42
  %44 = load %struct.sm_row_struct*, %struct.sm_row_struct** %6, align 8
  %45 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %44, i32 0, i32 5
  %46 = load %struct.sm_row_struct*, %struct.sm_row_struct** %45, align 8
  store %struct.sm_row_struct* %46, %struct.sm_row_struct** %6, align 8
  br label %29

47:                                               ; preds = %29
  %48 = load i32*, i32** %4, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  store i32 1, i32* %8, align 4
  br label %118

51:                                               ; preds = %47
  %52 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %53 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp sge i32 %54, 0
  br i1 %55, label %56, label %74

56:                                               ; preds = %51
  %57 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %58 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %61 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %60, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = icmp slt i32 %59, %62
  br i1 %63, label %64, label %74

64:                                               ; preds = %56
  %65 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %66 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %65, i32 0, i32 0
  %67 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %66, align 8
  %68 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %69 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %68, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %67, i64 %71
  %73 = load %struct.sm_row_struct*, %struct.sm_row_struct** %72, align 8
  br label %75

74:                                               ; preds = %56, %51
  br label %75

75:                                               ; preds = %74, %64
  %76 = phi %struct.sm_row_struct* [ %73, %64 ], [ null, %74 ]
  store %struct.sm_row_struct* %76, %struct.sm_row_struct** %6, align 8
  %77 = load i32*, i32** %4, align 8
  %78 = load %struct.sm_row_struct*, %struct.sm_row_struct** %6, align 8
  %79 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %78, i32 0, i32 3
  %80 = load %struct.sm_element_struct*, %struct.sm_element_struct** %79, align 8
  %81 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i32, i32* %77, i64 %83
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %8, align 4
  %86 = load %struct.sm_row_struct*, %struct.sm_row_struct** %6, align 8
  %87 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %86, i32 0, i32 3
  %88 = load %struct.sm_element_struct*, %struct.sm_element_struct** %87, align 8
  %89 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %88, i32 0, i32 4
  %90 = load %struct.sm_element_struct*, %struct.sm_element_struct** %89, align 8
  store %struct.sm_element_struct* %90, %struct.sm_element_struct** %7, align 8
  br label %91

91:                                               ; preds = %113, %75
  %92 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %93 = icmp ne %struct.sm_element_struct* %92, null
  br i1 %93, label %94, label %117

94:                                               ; preds = %91
  %95 = load i32*, i32** %4, align 8
  %96 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %97 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i32, i32* %95, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = load i32, i32* %8, align 4
  %103 = icmp slt i32 %101, %102
  br i1 %103, label %104, label %112

104:                                              ; preds = %94
  %105 = load i32*, i32** %4, align 8
  %106 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %107 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %106, i32 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i32, i32* %105, i64 %109
  %111 = load i32, i32* %110, align 4
  store i32 %111, i32* %8, align 4
  br label %112

112:                                              ; preds = %104, %94
  br label %113

113:                                              ; preds = %112
  %114 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %115 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %114, i32 0, i32 4
  %116 = load %struct.sm_element_struct*, %struct.sm_element_struct** %115, align 8
  store %struct.sm_element_struct* %116, %struct.sm_element_struct** %7, align 8
  br label %91

117:                                              ; preds = %91
  br label %118

118:                                              ; preds = %117, %50
  %119 = load i32, i32* %8, align 4
  %120 = load %struct.solution_struct*, %struct.solution_struct** %11, align 8
  %121 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %120, i32 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = add nsw i32 %122, %119
  store i32 %123, i32* %121, align 8
  %124 = load %struct.solution_struct*, %struct.solution_struct** %11, align 8
  %125 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %124, i32 0, i32 0
  %126 = load %struct.sm_row_struct*, %struct.sm_row_struct** %125, align 8
  %127 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %128 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %127, i32 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = call %struct.sm_element_struct* (%struct.sm_row_struct*, i32, ...) bitcast (%struct.sm_element_struct* (%struct.sm_row_struct*, i32)* @sm_row_insert to %struct.sm_element_struct* (%struct.sm_row_struct*, i32, ...)*)(%struct.sm_row_struct* %126, i32 %129)
  %131 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %132 = call %struct.sm_row_struct* (%struct.sm_row_struct*, ...) bitcast (%struct.sm_row_struct* (%struct.sm_row_struct*)* @sm_row_dup to %struct.sm_row_struct* (%struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %131)
  store %struct.sm_row_struct* %132, %struct.sm_row_struct** %9, align 8
  %133 = load %struct.sm_row_struct*, %struct.sm_row_struct** %9, align 8
  %134 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %133, i32 0, i32 3
  %135 = load %struct.sm_element_struct*, %struct.sm_element_struct** %134, align 8
  store %struct.sm_element_struct* %135, %struct.sm_element_struct** %7, align 8
  br label %136

136:                                              ; preds = %148, %118
  %137 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %138 = icmp ne %struct.sm_element_struct* %137, null
  br i1 %138, label %139, label %152

139:                                              ; preds = %136
  %140 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %141 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %142 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %141, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  call void (%struct.sm_matrix_struct*, i32, ...) bitcast (void (%struct.sm_matrix_struct*, i32)* @sm_delrow to void (%struct.sm_matrix_struct*, i32, ...)*)(%struct.sm_matrix_struct* %140, i32 %143)
  %144 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %145 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %146 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %145, i32 0, i32 1
  %147 = load i32, i32* %146, align 4
  call void (%struct.sm_matrix_struct*, i32, ...) bitcast (void (%struct.sm_matrix_struct*, i32)* @sm_delcol to void (%struct.sm_matrix_struct*, i32, ...)*)(%struct.sm_matrix_struct* %144, i32 %147)
  br label %148

148:                                              ; preds = %139
  %149 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %150 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %149, i32 0, i32 4
  %151 = load %struct.sm_element_struct*, %struct.sm_element_struct** %150, align 8
  store %struct.sm_element_struct* %151, %struct.sm_element_struct** %7, align 8
  br label %136

152:                                              ; preds = %136
  %153 = load %struct.sm_row_struct*, %struct.sm_row_struct** %9, align 8
  call void (%struct.sm_row_struct*, ...) bitcast (void (%struct.sm_row_struct*)* @sm_row_free to void (%struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %153)
  br label %15

154:                                              ; preds = %15
  %155 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  call void (%struct.sm_matrix_struct*, ...) bitcast (void (%struct.sm_matrix_struct*)* @sm_free to void (%struct.sm_matrix_struct*, ...)*)(%struct.sm_matrix_struct* %155)
  %156 = load %struct.solution_struct*, %struct.solution_struct** %11, align 8
  ret %struct.solution_struct* %156
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sm_matrix_struct* @build_intersection_matrix(%struct.sm_matrix_struct* %0) #0 {
  %2 = alloca %struct.sm_matrix_struct*, align 8
  %3 = alloca %struct.sm_row_struct*, align 8
  %4 = alloca %struct.sm_row_struct*, align 8
  %5 = alloca %struct.sm_element_struct*, align 8
  %6 = alloca %struct.sm_element_struct*, align 8
  %7 = alloca %struct.sm_col_struct*, align 8
  %8 = alloca %struct.sm_matrix_struct*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %2, align 8
  %9 = call %struct.sm_matrix_struct* (...) bitcast (%struct.sm_matrix_struct* ()* @sm_alloc to %struct.sm_matrix_struct* (...)*)()
  store %struct.sm_matrix_struct* %9, %struct.sm_matrix_struct** %8, align 8
  %10 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %11 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %10, i32 0, i32 4
  %12 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  store %struct.sm_row_struct* %12, %struct.sm_row_struct** %3, align 8
  br label %13

13:                                               ; preds = %183, %1
  %14 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %15 = icmp ne %struct.sm_row_struct* %14, null
  br i1 %15, label %16, label %187

16:                                               ; preds = %13
  %17 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %18 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %17, i32 0, i32 3
  %19 = load %struct.sm_element_struct*, %struct.sm_element_struct** %18, align 8
  store %struct.sm_element_struct* %19, %struct.sm_element_struct** %5, align 8
  br label %20

20:                                               ; preds = %88, %16
  %21 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %22 = icmp ne %struct.sm_element_struct* %21, null
  br i1 %22, label %23, label %92

23:                                               ; preds = %20
  %24 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %25 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %24, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp sge i32 %26, 0
  br i1 %27, label %28, label %46

28:                                               ; preds = %23
  %29 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %30 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %33 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %32, i32 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = icmp slt i32 %31, %34
  br i1 %35, label %36, label %46

36:                                               ; preds = %28
  %37 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %38 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %37, i32 0, i32 2
  %39 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %38, align 8
  %40 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %41 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %40, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %39, i64 %43
  %45 = load %struct.sm_col_struct*, %struct.sm_col_struct** %44, align 8
  br label %47

46:                                               ; preds = %28, %23
  br label %47

47:                                               ; preds = %46, %36
  %48 = phi %struct.sm_col_struct* [ %45, %36 ], [ null, %46 ]
  store %struct.sm_col_struct* %48, %struct.sm_col_struct** %7, align 8
  %49 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %50 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %49, i32 0, i32 3
  %51 = load %struct.sm_element_struct*, %struct.sm_element_struct** %50, align 8
  store %struct.sm_element_struct* %51, %struct.sm_element_struct** %6, align 8
  br label %52

52:                                               ; preds = %83, %47
  %53 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %54 = icmp ne %struct.sm_element_struct* %53, null
  br i1 %54, label %55, label %87

55:                                               ; preds = %52
  %56 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %57 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp sge i32 %58, 0
  br i1 %59, label %60, label %78

60:                                               ; preds = %55
  %61 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %62 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %61, i32 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %65 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = icmp slt i32 %63, %66
  br i1 %67, label %68, label %78

68:                                               ; preds = %60
  %69 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %70 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %69, i32 0, i32 0
  %71 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %70, align 8
  %72 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %73 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %72, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %71, i64 %75
  %77 = load %struct.sm_row_struct*, %struct.sm_row_struct** %76, align 8
  br label %79

78:                                               ; preds = %60, %55
  br label %79

79:                                               ; preds = %78, %68
  %80 = phi %struct.sm_row_struct* [ %77, %68 ], [ null, %78 ]
  store %struct.sm_row_struct* %80, %struct.sm_row_struct** %4, align 8
  %81 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %82 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %81, i32 0, i32 2
  store i32 0, i32* %82, align 8
  br label %83

83:                                               ; preds = %79
  %84 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %85 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %84, i32 0, i32 2
  %86 = load %struct.sm_element_struct*, %struct.sm_element_struct** %85, align 8
  store %struct.sm_element_struct* %86, %struct.sm_element_struct** %6, align 8
  br label %52

87:                                               ; preds = %52
  br label %88

88:                                               ; preds = %87
  %89 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %90 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %89, i32 0, i32 4
  %91 = load %struct.sm_element_struct*, %struct.sm_element_struct** %90, align 8
  store %struct.sm_element_struct* %91, %struct.sm_element_struct** %5, align 8
  br label %20

92:                                               ; preds = %20
  %93 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %94 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %93, i32 0, i32 3
  %95 = load %struct.sm_element_struct*, %struct.sm_element_struct** %94, align 8
  store %struct.sm_element_struct* %95, %struct.sm_element_struct** %5, align 8
  br label %96

96:                                               ; preds = %178, %92
  %97 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %98 = icmp ne %struct.sm_element_struct* %97, null
  br i1 %98, label %99, label %182

99:                                               ; preds = %96
  %100 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %101 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %100, i32 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = icmp sge i32 %102, 0
  br i1 %103, label %104, label %122

104:                                              ; preds = %99
  %105 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %106 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %105, i32 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %109 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %108, i32 0, i32 3
  %110 = load i32, i32* %109, align 8
  %111 = icmp slt i32 %107, %110
  br i1 %111, label %112, label %122

112:                                              ; preds = %104
  %113 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %114 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %113, i32 0, i32 2
  %115 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %114, align 8
  %116 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %117 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %116, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %115, i64 %119
  %121 = load %struct.sm_col_struct*, %struct.sm_col_struct** %120, align 8
  br label %123

122:                                              ; preds = %104, %99
  br label %123

123:                                              ; preds = %122, %112
  %124 = phi %struct.sm_col_struct* [ %121, %112 ], [ null, %122 ]
  store %struct.sm_col_struct* %124, %struct.sm_col_struct** %7, align 8
  %125 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %126 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %125, i32 0, i32 3
  %127 = load %struct.sm_element_struct*, %struct.sm_element_struct** %126, align 8
  store %struct.sm_element_struct* %127, %struct.sm_element_struct** %6, align 8
  br label %128

128:                                              ; preds = %173, %123
  %129 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %130 = icmp ne %struct.sm_element_struct* %129, null
  br i1 %130, label %131, label %177

131:                                              ; preds = %128
  %132 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %133 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %132, i32 0, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = icmp sge i32 %134, 0
  br i1 %135, label %136, label %154

136:                                              ; preds = %131
  %137 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %138 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %137, i32 0, i32 0
  %139 = load i32, i32* %138, align 8
  %140 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %141 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %140, i32 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = icmp slt i32 %139, %142
  br i1 %143, label %144, label %154

144:                                              ; preds = %136
  %145 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %146 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %145, i32 0, i32 0
  %147 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %146, align 8
  %148 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %149 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %148, i32 0, i32 0
  %150 = load i32, i32* %149, align 8
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %147, i64 %151
  %153 = load %struct.sm_row_struct*, %struct.sm_row_struct** %152, align 8
  br label %155

154:                                              ; preds = %136, %131
  br label %155

155:                                              ; preds = %154, %144
  %156 = phi %struct.sm_row_struct* [ %153, %144 ], [ null, %154 ]
  store %struct.sm_row_struct* %156, %struct.sm_row_struct** %4, align 8
  %157 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %158 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %157, i32 0, i32 2
  %159 = load i32, i32* %158, align 8
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %172, label %161

161:                                              ; preds = %155
  %162 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %163 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %162, i32 0, i32 2
  store i32 1, i32* %163, align 8
  %164 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %8, align 8
  %165 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %166 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %165, i32 0, i32 0
  %167 = load i32, i32* %166, align 8
  %168 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %169 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %168, i32 0, i32 0
  %170 = load i32, i32* %169, align 8
  %171 = call %struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32, ...) bitcast (%struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32)* @sm_insert to %struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32, ...)*)(%struct.sm_matrix_struct* %164, i32 %167, i32 %170)
  br label %172

172:                                              ; preds = %161, %155
  br label %173

173:                                              ; preds = %172
  %174 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %175 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %174, i32 0, i32 2
  %176 = load %struct.sm_element_struct*, %struct.sm_element_struct** %175, align 8
  store %struct.sm_element_struct* %176, %struct.sm_element_struct** %6, align 8
  br label %128

177:                                              ; preds = %128
  br label %178

178:                                              ; preds = %177
  %179 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %180 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %179, i32 0, i32 4
  %181 = load %struct.sm_element_struct*, %struct.sm_element_struct** %180, align 8
  store %struct.sm_element_struct* %181, %struct.sm_element_struct** %5, align 8
  br label %96

182:                                              ; preds = %96
  br label %183

183:                                              ; preds = %182
  %184 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %185 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %184, i32 0, i32 5
  %186 = load %struct.sm_row_struct*, %struct.sm_row_struct** %185, align 8
  store %struct.sm_row_struct* %186, %struct.sm_row_struct** %3, align 8
  br label %13

187:                                              ; preds = %13
  %188 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %8, align 8
  ret %struct.sm_matrix_struct* %188
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @irredundant(%struct.set_family* %0, %struct.set_family* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  %5 = load %struct.set_family*, %struct.set_family** %3, align 8
  %6 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void @mark_irredundant(%struct.set_family* %5, %struct.set_family* %6)
  %7 = load %struct.set_family*, %struct.set_family** %3, align 8
  %8 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_inactive to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %7)
  ret %struct.set_family* %8
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @mark_irredundant(%struct.set_family* %0, %struct.set_family* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca %struct.sm_matrix_struct*, align 8
  %12 = alloca %struct.sm_row_struct*, align 8
  %13 = alloca %struct.sm_element_struct*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  %14 = load %struct.set_family*, %struct.set_family** %3, align 8
  %15 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void @irred_split_cover(%struct.set_family* %14, %struct.set_family* %15, %struct.set_family** %5, %struct.set_family** %6, %struct.set_family** %7)
  %16 = load %struct.set_family*, %struct.set_family** %4, align 8
  %17 = load %struct.set_family*, %struct.set_family** %5, align 8
  %18 = load %struct.set_family*, %struct.set_family** %7, align 8
  %19 = call %struct.sm_matrix_struct* @irred_derive_table(%struct.set_family* %16, %struct.set_family* %17, %struct.set_family* %18)
  store %struct.sm_matrix_struct* %19, %struct.sm_matrix_struct** %11, align 8
  %20 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %11, align 8
  %21 = call %struct.sm_row_struct* (%struct.sm_matrix_struct*, i32*, i32, i32, ...) bitcast (%struct.sm_row_struct* (%struct.sm_matrix_struct*, i32*, i32, i32)* @sm_minimum_cover to %struct.sm_row_struct* (%struct.sm_matrix_struct*, i32*, i32, i32, ...)*)(%struct.sm_matrix_struct* %20, i32* null, i32 1, i32 0)
  store %struct.sm_row_struct* %21, %struct.sm_row_struct** %12, align 8
  %22 = load %struct.set_family*, %struct.set_family** %3, align 8
  %23 = getelementptr inbounds %struct.set_family, %struct.set_family* %22, i32 0, i32 5
  %24 = load i32*, i32** %23, align 8
  store i32* %24, i32** %8, align 8
  %25 = load i32*, i32** %8, align 8
  %26 = load %struct.set_family*, %struct.set_family** %3, align 8
  %27 = getelementptr inbounds %struct.set_family, %struct.set_family* %26, i32 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = load %struct.set_family*, %struct.set_family** %3, align 8
  %30 = getelementptr inbounds %struct.set_family, %struct.set_family* %29, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = mul nsw i32 %28, %31
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i32, i32* %25, i64 %33
  store i32* %34, i32** %10, align 8
  br label %35

35:                                               ; preds = %48, %2
  %36 = load i32*, i32** %8, align 8
  %37 = load i32*, i32** %10, align 8
  %38 = icmp ult i32* %36, %37
  br i1 %38, label %39, label %55

39:                                               ; preds = %35
  %40 = load i32*, i32** %8, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 0
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, -8193
  store i32 %43, i32* %41, align 4
  %44 = load i32*, i32** %8, align 8
  %45 = getelementptr inbounds i32, i32* %44, i64 0
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, -1025
  store i32 %47, i32* %45, align 4
  br label %48

48:                                               ; preds = %39
  %49 = load %struct.set_family*, %struct.set_family** %3, align 8
  %50 = getelementptr inbounds %struct.set_family, %struct.set_family* %49, i32 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = load i32*, i32** %8, align 8
  %53 = sext i32 %51 to i64
  %54 = getelementptr inbounds i32, i32* %52, i64 %53
  store i32* %54, i32** %8, align 8
  br label %35

55:                                               ; preds = %35
  %56 = load %struct.set_family*, %struct.set_family** %5, align 8
  %57 = getelementptr inbounds %struct.set_family, %struct.set_family* %56, i32 0, i32 5
  %58 = load i32*, i32** %57, align 8
  store i32* %58, i32** %8, align 8
  %59 = load i32*, i32** %8, align 8
  %60 = load %struct.set_family*, %struct.set_family** %5, align 8
  %61 = getelementptr inbounds %struct.set_family, %struct.set_family* %60, i32 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = load %struct.set_family*, %struct.set_family** %5, align 8
  %64 = getelementptr inbounds %struct.set_family, %struct.set_family* %63, i32 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = mul nsw i32 %62, %65
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %59, i64 %67
  store i32* %68, i32** %10, align 8
  br label %69

69:                                               ; preds = %102, %55
  %70 = load i32*, i32** %8, align 8
  %71 = load i32*, i32** %10, align 8
  %72 = icmp ult i32* %70, %71
  br i1 %72, label %73, label %109

73:                                               ; preds = %69
  %74 = load %struct.set_family*, %struct.set_family** %3, align 8
  %75 = getelementptr inbounds %struct.set_family, %struct.set_family* %74, i32 0, i32 5
  %76 = load i32*, i32** %75, align 8
  %77 = load %struct.set_family*, %struct.set_family** %3, align 8
  %78 = getelementptr inbounds %struct.set_family, %struct.set_family* %77, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = load i32*, i32** %8, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 0
  %82 = load i32, i32* %81, align 4
  %83 = lshr i32 %82, 16
  %84 = mul i32 %79, %83
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds i32, i32* %76, i64 %85
  store i32* %86, i32** %9, align 8
  %87 = load i32*, i32** %9, align 8
  %88 = load i32*, i32** %8, align 8
  %89 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_equal to i32 (i32*, i32*, ...)*)(i32* %87, i32* %88)
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %73
  br label %93

92:                                               ; preds = %73
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.300, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.301, i64 0, i64 0), i32 49, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__PRETTY_FUNCTION__.mark_irredundant, i64 0, i64 0)) #10
  unreachable

93:                                               ; preds = %91
  %94 = load i32*, i32** %9, align 8
  %95 = getelementptr inbounds i32, i32* %94, i64 0
  %96 = load i32, i32* %95, align 4
  %97 = or i32 %96, 8192
  store i32 %97, i32* %95, align 4
  %98 = load i32*, i32** %9, align 8
  %99 = getelementptr inbounds i32, i32* %98, i64 0
  %100 = load i32, i32* %99, align 4
  %101 = or i32 %100, 1024
  store i32 %101, i32* %99, align 4
  br label %102

102:                                              ; preds = %93
  %103 = load %struct.set_family*, %struct.set_family** %5, align 8
  %104 = getelementptr inbounds %struct.set_family, %struct.set_family* %103, i32 0, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = load i32*, i32** %8, align 8
  %107 = sext i32 %105 to i64
  %108 = getelementptr inbounds i32, i32* %106, i64 %107
  store i32* %108, i32** %8, align 8
  br label %69

109:                                              ; preds = %69
  %110 = load %struct.sm_row_struct*, %struct.sm_row_struct** %12, align 8
  %111 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %110, i32 0, i32 3
  %112 = load %struct.sm_element_struct*, %struct.sm_element_struct** %111, align 8
  store %struct.sm_element_struct* %112, %struct.sm_element_struct** %13, align 8
  br label %113

113:                                              ; preds = %133, %109
  %114 = load %struct.sm_element_struct*, %struct.sm_element_struct** %13, align 8
  %115 = icmp ne %struct.sm_element_struct* %114, null
  br i1 %115, label %116, label %137

116:                                              ; preds = %113
  %117 = load %struct.set_family*, %struct.set_family** %3, align 8
  %118 = getelementptr inbounds %struct.set_family, %struct.set_family* %117, i32 0, i32 5
  %119 = load i32*, i32** %118, align 8
  %120 = load %struct.set_family*, %struct.set_family** %3, align 8
  %121 = getelementptr inbounds %struct.set_family, %struct.set_family* %120, i32 0, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = load %struct.sm_element_struct*, %struct.sm_element_struct** %13, align 8
  %124 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %123, i32 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = mul nsw i32 %122, %125
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i32, i32* %119, i64 %127
  store i32* %128, i32** %9, align 8
  %129 = load i32*, i32** %9, align 8
  %130 = getelementptr inbounds i32, i32* %129, i64 0
  %131 = load i32, i32* %130, align 4
  %132 = or i32 %131, 8192
  store i32 %132, i32* %130, align 4
  br label %133

133:                                              ; preds = %116
  %134 = load %struct.sm_element_struct*, %struct.sm_element_struct** %13, align 8
  %135 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %134, i32 0, i32 4
  %136 = load %struct.sm_element_struct*, %struct.sm_element_struct** %135, align 8
  store %struct.sm_element_struct* %136, %struct.sm_element_struct** %13, align 8
  br label %113

137:                                              ; preds = %113
  %138 = load i32, i32* @debug, align 4
  %139 = and i32 %138, 32
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %141, label %172

141:                                              ; preds = %137
  %142 = load %struct.set_family*, %struct.set_family** %3, align 8
  %143 = getelementptr inbounds %struct.set_family, %struct.set_family* %142, i32 0, i32 3
  %144 = load i32, i32* %143, align 4
  %145 = load %struct.set_family*, %struct.set_family** %5, align 8
  %146 = getelementptr inbounds %struct.set_family, %struct.set_family* %145, i32 0, i32 3
  %147 = load i32, i32* %146, align 4
  %148 = load %struct.set_family*, %struct.set_family** %6, align 8
  %149 = getelementptr inbounds %struct.set_family, %struct.set_family* %148, i32 0, i32 3
  %150 = load i32, i32* %149, align 4
  %151 = load %struct.set_family*, %struct.set_family** %7, align 8
  %152 = getelementptr inbounds %struct.set_family, %struct.set_family* %151, i32 0, i32 3
  %153 = load i32, i32* %152, align 4
  %154 = add nsw i32 %150, %153
  %155 = load %struct.set_family*, %struct.set_family** %6, align 8
  %156 = getelementptr inbounds %struct.set_family, %struct.set_family* %155, i32 0, i32 3
  %157 = load i32, i32* %156, align 4
  %158 = load %struct.set_family*, %struct.set_family** %7, align 8
  %159 = getelementptr inbounds %struct.set_family, %struct.set_family* %158, i32 0, i32 3
  %160 = load i32, i32* %159, align 4
  %161 = load %struct.sm_row_struct*, %struct.sm_row_struct** %12, align 8
  %162 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %161, i32 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = load %struct.set_family*, %struct.set_family** %5, align 8
  %165 = getelementptr inbounds %struct.set_family, %struct.set_family* %164, i32 0, i32 3
  %166 = load i32, i32* %165, align 4
  %167 = load %struct.sm_row_struct*, %struct.sm_row_struct** %12, align 8
  %168 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %167, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = add nsw i32 %166, %169
  %171 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.2.302, i64 0, i64 0), i32 %144, i32 %147, i32 %154, i32 %157, i32 %160, i32 %163, i32 %170, i32 0)
  br label %172

172:                                              ; preds = %141, %137
  %173 = load %struct.set_family*, %struct.set_family** %5, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %173)
  %174 = load %struct.set_family*, %struct.set_family** %6, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %174)
  %175 = load %struct.set_family*, %struct.set_family** %7, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %175)
  %176 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %11, align 8
  call void (%struct.sm_matrix_struct*, ...) bitcast (void (%struct.sm_matrix_struct*)* @sm_free to void (%struct.sm_matrix_struct*, ...)*)(%struct.sm_matrix_struct* %176)
  %177 = load %struct.sm_row_struct*, %struct.sm_row_struct** %12, align 8
  call void (%struct.sm_row_struct*, ...) bitcast (void (%struct.sm_row_struct*)* @sm_row_free to void (%struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %177)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @irred_split_cover(%struct.set_family* %0, %struct.set_family* %1, %struct.set_family** %2, %struct.set_family** %3, %struct.set_family** %4) #0 {
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.set_family**, align 8
  %9 = alloca %struct.set_family**, align 8
  %10 = alloca %struct.set_family**, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct.set_family*, align 8
  %15 = alloca i32**, align 8
  %16 = alloca i32**, align 8
  store %struct.set_family* %0, %struct.set_family** %6, align 8
  store %struct.set_family* %1, %struct.set_family** %7, align 8
  store %struct.set_family** %2, %struct.set_family*** %8, align 8
  store %struct.set_family** %3, %struct.set_family*** %9, align 8
  store %struct.set_family** %4, %struct.set_family*** %10, align 8
  store i32 0, i32* %13, align 4
  %17 = load %struct.set_family*, %struct.set_family** %6, align 8
  %18 = getelementptr inbounds %struct.set_family, %struct.set_family* %17, i32 0, i32 5
  %19 = load i32*, i32** %18, align 8
  store i32* %19, i32** %11, align 8
  %20 = load i32*, i32** %11, align 8
  %21 = load %struct.set_family*, %struct.set_family** %6, align 8
  %22 = getelementptr inbounds %struct.set_family, %struct.set_family* %21, i32 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = load %struct.set_family*, %struct.set_family** %6, align 8
  %25 = getelementptr inbounds %struct.set_family, %struct.set_family* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = mul nsw i32 %23, %26
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, i32* %20, i64 %28
  store i32* %29, i32** %12, align 8
  br label %30

30:                                               ; preds = %47, %5
  %31 = load i32*, i32** %11, align 8
  %32 = load i32*, i32** %12, align 8
  %33 = icmp ult i32* %31, %32
  br i1 %33, label %34, label %54

34:                                               ; preds = %30
  %35 = load i32*, i32** %11, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 0
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 65535
  store i32 %38, i32* %36, align 4
  %39 = load i32, i32* %13, align 4
  %40 = shl i32 %39, 16
  %41 = load i32*, i32** %11, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = or i32 %43, %40
  store i32 %44, i32* %42, align 4
  %45 = load i32, i32* %13, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %13, align 4
  br label %47

47:                                               ; preds = %34
  %48 = load %struct.set_family*, %struct.set_family** %6, align 8
  %49 = getelementptr inbounds %struct.set_family, %struct.set_family* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = load i32*, i32** %11, align 8
  %52 = sext i32 %50 to i64
  %53 = getelementptr inbounds i32, i32* %51, i64 %52
  store i32* %53, i32** %11, align 8
  br label %30

54:                                               ; preds = %30
  %55 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %56 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 10, i32 %55)
  %57 = load %struct.set_family**, %struct.set_family*** %8, align 8
  store %struct.set_family* %56, %struct.set_family** %57, align 8
  %58 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %59 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 10, i32 %58)
  %60 = load %struct.set_family**, %struct.set_family*** %9, align 8
  store %struct.set_family* %59, %struct.set_family** %60, align 8
  %61 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %62 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 10, i32 %61)
  %63 = load %struct.set_family**, %struct.set_family*** %10, align 8
  store %struct.set_family* %62, %struct.set_family** %63, align 8
  %64 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %65 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 10, i32 %64)
  store %struct.set_family* %65, %struct.set_family** %14, align 8
  %66 = load %struct.set_family*, %struct.set_family** %6, align 8
  %67 = load %struct.set_family*, %struct.set_family** %7, align 8
  %68 = call i32** (%struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*)* @cube2list to i32** (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %66, %struct.set_family* %67)
  store i32** %68, i32*** %15, align 8
  %69 = load %struct.set_family*, %struct.set_family** %6, align 8
  %70 = getelementptr inbounds %struct.set_family, %struct.set_family* %69, i32 0, i32 5
  %71 = load i32*, i32** %70, align 8
  store i32* %71, i32** %11, align 8
  %72 = load i32*, i32** %11, align 8
  %73 = load %struct.set_family*, %struct.set_family** %6, align 8
  %74 = getelementptr inbounds %struct.set_family, %struct.set_family* %73, i32 0, i32 3
  %75 = load i32, i32* %74, align 4
  %76 = load %struct.set_family*, %struct.set_family** %6, align 8
  %77 = getelementptr inbounds %struct.set_family, %struct.set_family* %76, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = mul nsw i32 %75, %78
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %72, i64 %80
  store i32* %81, i32** %12, align 8
  br label %82

82:                                               ; preds = %129, %54
  %83 = load i32*, i32** %11, align 8
  %84 = load i32*, i32** %12, align 8
  %85 = icmp ult i32* %83, %84
  br i1 %85, label %86, label %136

86:                                               ; preds = %82
  %87 = load i32**, i32*** %15, align 8
  %88 = load i32*, i32** %11, align 8
  %89 = call i32 @cube_is_covered(i32** %87, i32* %88)
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %91, label %95

91:                                               ; preds = %86
  %92 = load %struct.set_family*, %struct.set_family** %14, align 8
  %93 = load i32*, i32** %11, align 8
  %94 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %92, i32* %93)
  store %struct.set_family* %94, %struct.set_family** %14, align 8
  br label %101

95:                                               ; preds = %86
  %96 = load %struct.set_family**, %struct.set_family*** %8, align 8
  %97 = load %struct.set_family*, %struct.set_family** %96, align 8
  %98 = load i32*, i32** %11, align 8
  %99 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %97, i32* %98)
  %100 = load %struct.set_family**, %struct.set_family*** %8, align 8
  store %struct.set_family* %99, %struct.set_family** %100, align 8
  br label %101

101:                                              ; preds = %95, %91
  %102 = load i32, i32* @debug, align 4
  %103 = and i32 %102, 16384
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %128

105:                                              ; preds = %101
  %106 = load %struct.set_family*, %struct.set_family** %14, align 8
  %107 = getelementptr inbounds %struct.set_family, %struct.set_family* %106, i32 0, i32 3
  %108 = load i32, i32* %107, align 4
  %109 = load %struct.set_family**, %struct.set_family*** %8, align 8
  %110 = load %struct.set_family*, %struct.set_family** %109, align 8
  %111 = getelementptr inbounds %struct.set_family, %struct.set_family* %110, i32 0, i32 3
  %112 = load i32, i32* %111, align 4
  %113 = load %struct.set_family*, %struct.set_family** %6, align 8
  %114 = getelementptr inbounds %struct.set_family, %struct.set_family* %113, i32 0, i32 3
  %115 = load i32, i32* %114, align 4
  %116 = load %struct.set_family*, %struct.set_family** %14, align 8
  %117 = getelementptr inbounds %struct.set_family, %struct.set_family* %116, i32 0, i32 3
  %118 = load i32, i32* %117, align 4
  %119 = load %struct.set_family**, %struct.set_family*** %8, align 8
  %120 = load %struct.set_family*, %struct.set_family** %119, align 8
  %121 = getelementptr inbounds %struct.set_family, %struct.set_family* %120, i32 0, i32 3
  %122 = load i32, i32* %121, align 4
  %123 = add nsw i32 %118, %122
  %124 = sub nsw i32 %115, %123
  %125 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %126 = call i8* @util_print_time(i64 %125)
  %127 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3.310, i64 0, i64 0), i32 %108, i32 %112, i32 %124, i8* %126)
  br label %128

128:                                              ; preds = %105, %101
  br label %129

129:                                              ; preds = %128
  %130 = load %struct.set_family*, %struct.set_family** %6, align 8
  %131 = getelementptr inbounds %struct.set_family, %struct.set_family* %130, i32 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = load i32*, i32** %11, align 8
  %134 = sext i32 %132 to i64
  %135 = getelementptr inbounds i32, i32* %133, i64 %134
  store i32* %135, i32** %11, align 8
  br label %82

136:                                              ; preds = %82
  %137 = load i32**, i32*** %15, align 8
  %138 = getelementptr inbounds i32*, i32** %137, i64 0
  %139 = load i32*, i32** %138, align 8
  %140 = icmp ne i32* %139, null
  br i1 %140, label %141, label %148

141:                                              ; preds = %136
  %142 = load i32**, i32*** %15, align 8
  %143 = getelementptr inbounds i32*, i32** %142, i64 0
  %144 = load i32*, i32** %143, align 8
  %145 = bitcast i32* %144 to i8*
  call void @free(i8* %145) #7
  %146 = load i32**, i32*** %15, align 8
  %147 = getelementptr inbounds i32*, i32** %146, i64 0
  store i32* null, i32** %147, align 8
  br label %148

148:                                              ; preds = %141, %136
  %149 = load i32**, i32*** %15, align 8
  %150 = icmp ne i32** %149, null
  br i1 %150, label %151, label %154

151:                                              ; preds = %148
  %152 = load i32**, i32*** %15, align 8
  %153 = bitcast i32** %152 to i8*
  call void @free(i8* %153) #7
  store i32** null, i32*** %15, align 8
  br label %154

154:                                              ; preds = %151, %148
  %155 = load %struct.set_family**, %struct.set_family*** %8, align 8
  %156 = load %struct.set_family*, %struct.set_family** %155, align 8
  %157 = load %struct.set_family*, %struct.set_family** %7, align 8
  %158 = call i32** (%struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*)* @cube2list to i32** (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %156, %struct.set_family* %157)
  store i32** %158, i32*** %16, align 8
  %159 = load %struct.set_family*, %struct.set_family** %14, align 8
  %160 = getelementptr inbounds %struct.set_family, %struct.set_family* %159, i32 0, i32 5
  %161 = load i32*, i32** %160, align 8
  store i32* %161, i32** %11, align 8
  %162 = load i32*, i32** %11, align 8
  %163 = load %struct.set_family*, %struct.set_family** %14, align 8
  %164 = getelementptr inbounds %struct.set_family, %struct.set_family* %163, i32 0, i32 3
  %165 = load i32, i32* %164, align 4
  %166 = load %struct.set_family*, %struct.set_family** %14, align 8
  %167 = getelementptr inbounds %struct.set_family, %struct.set_family* %166, i32 0, i32 0
  %168 = load i32, i32* %167, align 8
  %169 = mul nsw i32 %165, %168
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i32, i32* %162, i64 %170
  store i32* %171, i32** %12, align 8
  br label %172

172:                                              ; preds = %223, %154
  %173 = load i32*, i32** %11, align 8
  %174 = load i32*, i32** %12, align 8
  %175 = icmp ult i32* %173, %174
  br i1 %175, label %176, label %230

176:                                              ; preds = %172
  %177 = load i32**, i32*** %16, align 8
  %178 = load i32*, i32** %11, align 8
  %179 = call i32 @cube_is_covered(i32** %177, i32* %178)
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %181, label %187

181:                                              ; preds = %176
  %182 = load %struct.set_family**, %struct.set_family*** %9, align 8
  %183 = load %struct.set_family*, %struct.set_family** %182, align 8
  %184 = load i32*, i32** %11, align 8
  %185 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %183, i32* %184)
  %186 = load %struct.set_family**, %struct.set_family*** %9, align 8
  store %struct.set_family* %185, %struct.set_family** %186, align 8
  br label %193

187:                                              ; preds = %176
  %188 = load %struct.set_family**, %struct.set_family*** %10, align 8
  %189 = load %struct.set_family*, %struct.set_family** %188, align 8
  %190 = load i32*, i32** %11, align 8
  %191 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %189, i32* %190)
  %192 = load %struct.set_family**, %struct.set_family*** %10, align 8
  store %struct.set_family* %191, %struct.set_family** %192, align 8
  br label %193

193:                                              ; preds = %187, %181
  %194 = load i32, i32* @debug, align 4
  %195 = and i32 %194, 16384
  %196 = icmp ne i32 %195, 0
  br i1 %196, label %197, label %222

197:                                              ; preds = %193
  %198 = load %struct.set_family**, %struct.set_family*** %10, align 8
  %199 = load %struct.set_family*, %struct.set_family** %198, align 8
  %200 = getelementptr inbounds %struct.set_family, %struct.set_family* %199, i32 0, i32 3
  %201 = load i32, i32* %200, align 4
  %202 = load %struct.set_family**, %struct.set_family*** %9, align 8
  %203 = load %struct.set_family*, %struct.set_family** %202, align 8
  %204 = getelementptr inbounds %struct.set_family, %struct.set_family* %203, i32 0, i32 3
  %205 = load i32, i32* %204, align 4
  %206 = load %struct.set_family*, %struct.set_family** %14, align 8
  %207 = getelementptr inbounds %struct.set_family, %struct.set_family* %206, i32 0, i32 3
  %208 = load i32, i32* %207, align 4
  %209 = load %struct.set_family**, %struct.set_family*** %10, align 8
  %210 = load %struct.set_family*, %struct.set_family** %209, align 8
  %211 = getelementptr inbounds %struct.set_family, %struct.set_family* %210, i32 0, i32 3
  %212 = load i32, i32* %211, align 4
  %213 = load %struct.set_family**, %struct.set_family*** %9, align 8
  %214 = load %struct.set_family*, %struct.set_family** %213, align 8
  %215 = getelementptr inbounds %struct.set_family, %struct.set_family* %214, i32 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = add nsw i32 %212, %216
  %218 = sub nsw i32 %208, %217
  %219 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %220 = call i8* @util_print_time(i64 %219)
  %221 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4.311, i64 0, i64 0), i32 %201, i32 %205, i32 %218, i8* %220)
  br label %222

222:                                              ; preds = %197, %193
  br label %223

223:                                              ; preds = %222
  %224 = load %struct.set_family*, %struct.set_family** %14, align 8
  %225 = getelementptr inbounds %struct.set_family, %struct.set_family* %224, i32 0, i32 0
  %226 = load i32, i32* %225, align 8
  %227 = load i32*, i32** %11, align 8
  %228 = sext i32 %226 to i64
  %229 = getelementptr inbounds i32, i32* %227, i64 %228
  store i32* %229, i32** %11, align 8
  br label %172

230:                                              ; preds = %172
  %231 = load i32**, i32*** %16, align 8
  %232 = getelementptr inbounds i32*, i32** %231, i64 0
  %233 = load i32*, i32** %232, align 8
  %234 = icmp ne i32* %233, null
  br i1 %234, label %235, label %242

235:                                              ; preds = %230
  %236 = load i32**, i32*** %16, align 8
  %237 = getelementptr inbounds i32*, i32** %236, i64 0
  %238 = load i32*, i32** %237, align 8
  %239 = bitcast i32* %238 to i8*
  call void @free(i8* %239) #7
  %240 = load i32**, i32*** %16, align 8
  %241 = getelementptr inbounds i32*, i32** %240, i64 0
  store i32* null, i32** %241, align 8
  br label %242

242:                                              ; preds = %235, %230
  %243 = load i32**, i32*** %16, align 8
  %244 = icmp ne i32** %243, null
  br i1 %244, label %245, label %248

245:                                              ; preds = %242
  %246 = load i32**, i32*** %16, align 8
  %247 = bitcast i32** %246 to i8*
  call void @free(i8* %247) #7
  store i32** null, i32*** %16, align 8
  br label %248

248:                                              ; preds = %245, %242
  %249 = load %struct.set_family*, %struct.set_family** %14, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %249)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_matrix_struct* @irred_derive_table(%struct.set_family* %0, %struct.set_family* %1, %struct.set_family* %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32**, align 8
  %10 = alloca %struct.sm_matrix_struct*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store %struct.set_family* %1, %struct.set_family** %5, align 8
  store %struct.set_family* %2, %struct.set_family** %6, align 8
  %13 = load %struct.set_family*, %struct.set_family** %4, align 8
  %14 = getelementptr inbounds %struct.set_family, %struct.set_family* %13, i32 0, i32 5
  %15 = load i32*, i32** %14, align 8
  store i32* %15, i32** %8, align 8
  %16 = load i32*, i32** %8, align 8
  %17 = load %struct.set_family*, %struct.set_family** %4, align 8
  %18 = getelementptr inbounds %struct.set_family, %struct.set_family* %17, i32 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = load %struct.set_family*, %struct.set_family** %4, align 8
  %21 = getelementptr inbounds %struct.set_family, %struct.set_family* %20, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = mul nsw i32 %19, %22
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %16, i64 %24
  store i32* %25, i32** %7, align 8
  br label %26

26:                                               ; preds = %35, %3
  %27 = load i32*, i32** %8, align 8
  %28 = load i32*, i32** %7, align 8
  %29 = icmp ult i32* %27, %28
  br i1 %29, label %30, label %42

30:                                               ; preds = %26
  %31 = load i32*, i32** %8, align 8
  %32 = getelementptr inbounds i32, i32* %31, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, -4097
  store i32 %34, i32* %32, align 4
  br label %35

35:                                               ; preds = %30
  %36 = load %struct.set_family*, %struct.set_family** %4, align 8
  %37 = getelementptr inbounds %struct.set_family, %struct.set_family* %36, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = load i32*, i32** %8, align 8
  %40 = sext i32 %38 to i64
  %41 = getelementptr inbounds i32, i32* %39, i64 %40
  store i32* %41, i32** %8, align 8
  br label %26

42:                                               ; preds = %26
  %43 = load %struct.set_family*, %struct.set_family** %5, align 8
  %44 = getelementptr inbounds %struct.set_family, %struct.set_family* %43, i32 0, i32 5
  %45 = load i32*, i32** %44, align 8
  store i32* %45, i32** %8, align 8
  %46 = load i32*, i32** %8, align 8
  %47 = load %struct.set_family*, %struct.set_family** %5, align 8
  %48 = getelementptr inbounds %struct.set_family, %struct.set_family* %47, i32 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = load %struct.set_family*, %struct.set_family** %5, align 8
  %51 = getelementptr inbounds %struct.set_family, %struct.set_family* %50, i32 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = mul nsw i32 %49, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32* %46, i64 %54
  store i32* %55, i32** %7, align 8
  br label %56

56:                                               ; preds = %65, %42
  %57 = load i32*, i32** %8, align 8
  %58 = load i32*, i32** %7, align 8
  %59 = icmp ult i32* %57, %58
  br i1 %59, label %60, label %72

60:                                               ; preds = %56
  %61 = load i32*, i32** %8, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 0
  %63 = load i32, i32* %62, align 4
  %64 = and i32 %63, -4097
  store i32 %64, i32* %62, align 4
  br label %65

65:                                               ; preds = %60
  %66 = load %struct.set_family*, %struct.set_family** %5, align 8
  %67 = getelementptr inbounds %struct.set_family, %struct.set_family* %66, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = load i32*, i32** %8, align 8
  %70 = sext i32 %68 to i64
  %71 = getelementptr inbounds i32, i32* %69, i64 %70
  store i32* %71, i32** %8, align 8
  br label %56

72:                                               ; preds = %56
  %73 = load %struct.set_family*, %struct.set_family** %6, align 8
  %74 = getelementptr inbounds %struct.set_family, %struct.set_family* %73, i32 0, i32 5
  %75 = load i32*, i32** %74, align 8
  store i32* %75, i32** %8, align 8
  %76 = load i32*, i32** %8, align 8
  %77 = load %struct.set_family*, %struct.set_family** %6, align 8
  %78 = getelementptr inbounds %struct.set_family, %struct.set_family* %77, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %80 = load %struct.set_family*, %struct.set_family** %6, align 8
  %81 = getelementptr inbounds %struct.set_family, %struct.set_family* %80, i32 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = mul nsw i32 %79, %82
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i32, i32* %76, i64 %84
  store i32* %85, i32** %7, align 8
  br label %86

86:                                               ; preds = %95, %72
  %87 = load i32*, i32** %8, align 8
  %88 = load i32*, i32** %7, align 8
  %89 = icmp ult i32* %87, %88
  br i1 %89, label %90, label %102

90:                                               ; preds = %86
  %91 = load i32*, i32** %8, align 8
  %92 = getelementptr inbounds i32, i32* %91, i64 0
  %93 = load i32, i32* %92, align 4
  %94 = or i32 %93, 4096
  store i32 %94, i32* %92, align 4
  br label %95

95:                                               ; preds = %90
  %96 = load %struct.set_family*, %struct.set_family** %6, align 8
  %97 = getelementptr inbounds %struct.set_family, %struct.set_family* %96, i32 0, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = load i32*, i32** %8, align 8
  %100 = sext i32 %98 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  store i32* %101, i32** %8, align 8
  br label %86

102:                                              ; preds = %86
  %103 = load %struct.set_family*, %struct.set_family** %4, align 8
  %104 = load %struct.set_family*, %struct.set_family** %5, align 8
  %105 = load %struct.set_family*, %struct.set_family** %6, align 8
  %106 = call i32** (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @cube3list to i32** (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %103, %struct.set_family* %104, %struct.set_family* %105)
  store i32** %106, i32*** %9, align 8
  %107 = call %struct.sm_matrix_struct* (...) bitcast (%struct.sm_matrix_struct* ()* @sm_alloc to %struct.sm_matrix_struct* (...)*)()
  store %struct.sm_matrix_struct* %107, %struct.sm_matrix_struct** %10, align 8
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  %108 = load %struct.set_family*, %struct.set_family** %6, align 8
  %109 = getelementptr inbounds %struct.set_family, %struct.set_family* %108, i32 0, i32 5
  %110 = load i32*, i32** %109, align 8
  store i32* %110, i32** %8, align 8
  %111 = load i32*, i32** %8, align 8
  %112 = load %struct.set_family*, %struct.set_family** %6, align 8
  %113 = getelementptr inbounds %struct.set_family, %struct.set_family* %112, i32 0, i32 3
  %114 = load i32, i32* %113, align 4
  %115 = load %struct.set_family*, %struct.set_family** %6, align 8
  %116 = getelementptr inbounds %struct.set_family, %struct.set_family* %115, i32 0, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = mul nsw i32 %114, %117
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i32, i32* %111, i64 %119
  store i32* %120, i32** %7, align 8
  br label %121

121:                                              ; preds = %187, %102
  %122 = load i32*, i32** %8, align 8
  %123 = load i32*, i32** %7, align 8
  %124 = icmp ult i32* %122, %123
  br i1 %124, label %125, label %194

125:                                              ; preds = %121
  %126 = load i32*, i32** %8, align 8
  %127 = getelementptr inbounds i32, i32* %126, i64 0
  %128 = load i32, i32* %127, align 4
  %129 = lshr i32 %128, 16
  store i32 %129, i32* @Rp_current, align 4
  %130 = load i32**, i32*** %9, align 8
  %131 = load i32*, i32** %8, align 8
  %132 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  call void @fcube_is_covered(i32** %130, i32* %131, %struct.sm_matrix_struct* %132)
  %133 = load i32*, i32** %8, align 8
  %134 = getelementptr inbounds i32, i32* %133, i64 0
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %135, -4097
  store i32 %136, i32* %134, align 4
  %137 = load i32, i32* @debug, align 4
  %138 = and i32 %137, 16384
  %139 = icmp ne i32 %138, 0
  br i1 %139, label %140, label %159

140:                                              ; preds = %125
  %141 = load i32, i32* %12, align 4
  %142 = load %struct.set_family*, %struct.set_family** %6, align 8
  %143 = getelementptr inbounds %struct.set_family, %struct.set_family* %142, i32 0, i32 3
  %144 = load i32, i32* %143, align 4
  %145 = load %struct.set_family*, %struct.set_family** %6, align 8
  %146 = getelementptr inbounds %struct.set_family, %struct.set_family* %145, i32 0, i32 3
  %147 = load i32, i32* %146, align 4
  %148 = load i32, i32* %12, align 4
  %149 = sub nsw i32 %147, %148
  %150 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %151 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %150, i32 0, i32 6
  %152 = load i32, i32* %151, align 8
  %153 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %154 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %153, i32 0, i32 9
  %155 = load i32, i32* %154, align 8
  %156 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %157 = call i8* @util_print_time(i64 %156)
  %158 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.5.303, i64 0, i64 0), i32 %141, i32 %144, i32 %149, i32 %152, i32 %155, i8* %157)
  br label %159

159:                                              ; preds = %140, %125
  %160 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %161 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %160, i32 0, i32 6
  %162 = load i32, i32* %161, align 8
  %163 = load i32, i32* %11, align 4
  %164 = sub nsw i32 %162, %163
  %165 = icmp sgt i32 %164, 1000
  br i1 %165, label %166, label %184

166:                                              ; preds = %159
  %167 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %168 = call i32 (%struct.sm_matrix_struct*, ...) bitcast (i32 (%struct.sm_matrix_struct*)* @sm_row_dominance to i32 (%struct.sm_matrix_struct*, ...)*)(%struct.sm_matrix_struct* %167)
  %169 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %170 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %169, i32 0, i32 6
  %171 = load i32, i32* %170, align 8
  store i32 %171, i32* %11, align 4
  %172 = load i32, i32* @debug, align 4
  %173 = and i32 %172, 16384
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %175, label %183

175:                                              ; preds = %166
  %176 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %177 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %176, i32 0, i32 6
  %178 = load i32, i32* %177, align 8
  %179 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  %180 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %179, i32 0, i32 9
  %181 = load i32, i32* %180, align 8
  %182 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6.304, i64 0, i64 0), i32 %178, i32 %181)
  br label %183

183:                                              ; preds = %175, %166
  br label %184

184:                                              ; preds = %183, %159
  %185 = load i32, i32* %12, align 4
  %186 = add nsw i32 %185, 1
  store i32 %186, i32* %12, align 4
  br label %187

187:                                              ; preds = %184
  %188 = load %struct.set_family*, %struct.set_family** %6, align 8
  %189 = getelementptr inbounds %struct.set_family, %struct.set_family* %188, i32 0, i32 0
  %190 = load i32, i32* %189, align 8
  %191 = load i32*, i32** %8, align 8
  %192 = sext i32 %190 to i64
  %193 = getelementptr inbounds i32, i32* %191, i64 %192
  store i32* %193, i32** %8, align 8
  br label %121

194:                                              ; preds = %121
  %195 = load i32**, i32*** %9, align 8
  %196 = getelementptr inbounds i32*, i32** %195, i64 0
  %197 = load i32*, i32** %196, align 8
  %198 = icmp ne i32* %197, null
  br i1 %198, label %199, label %206

199:                                              ; preds = %194
  %200 = load i32**, i32*** %9, align 8
  %201 = getelementptr inbounds i32*, i32** %200, i64 0
  %202 = load i32*, i32** %201, align 8
  %203 = bitcast i32* %202 to i8*
  call void @free(i8* %203) #7
  %204 = load i32**, i32*** %9, align 8
  %205 = getelementptr inbounds i32*, i32** %204, i64 0
  store i32* null, i32** %205, align 8
  br label %206

206:                                              ; preds = %199, %194
  %207 = load i32**, i32*** %9, align 8
  %208 = icmp ne i32** %207, null
  br i1 %208, label %209, label %212

209:                                              ; preds = %206
  %210 = load i32**, i32*** %9, align 8
  %211 = bitcast i32** %210 to i8*
  call void @free(i8* %211) #7
  store i32** null, i32*** %9, align 8
  br label %212

212:                                              ; preds = %209, %206
  %213 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %10, align 8
  ret %struct.sm_matrix_struct* %213
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #6

; Function Attrs: noinline nounwind uwtable
define internal void @fcube_is_covered(i32** %0, i32* %1, %struct.sm_matrix_struct* %2) #0 {
  %4 = alloca i32**, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %struct.sm_matrix_struct*, align 8
  store i32** %0, i32*** %4, align 8
  store i32* %1, i32** %5, align 8
  store %struct.sm_matrix_struct* %2, %struct.sm_matrix_struct** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = call i32** (i32**, i32*, ...) bitcast (i32** (i32**, i32*)* @cofactor to i32** (i32**, i32*, ...)*)(i32** %7, i32* %8)
  %10 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  call void @ftautology(i32** %9, %struct.sm_matrix_struct* %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @ftautology(i32** %0, %struct.sm_matrix_struct* %1) #0 {
  %3 = alloca i32**, align 8
  %4 = alloca %struct.sm_matrix_struct*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i32** %0, i32*** %3, align 8
  store %struct.sm_matrix_struct* %1, %struct.sm_matrix_struct** %4, align 8
  %8 = load i32, i32* @debug, align 4
  %9 = and i32 %8, 512
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = load i32**, i32*** %3, align 8
  %13 = load i32, i32* @ftautology.ftaut_level, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* @ftautology.ftaut_level, align 4
  call void (i32**, i8*, i32, ...) bitcast (void (i32**, i8*, i32)* @debug_print to void (i32**, i8*, i32, ...)*)(i32** %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13.305, i64 0, i64 0), i32 %13)
  br label %15

15:                                               ; preds = %11, %2
  %16 = load i32**, i32*** %3, align 8
  %17 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %18 = call i32 @ftaut_special_cases(i32** %16, %struct.sm_matrix_struct* %17)
  %19 = icmp eq i32 %18, 2
  br i1 %19, label %20, label %99

20:                                               ; preds = %15
  %21 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %22 = icmp sle i32 %21, 32
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  br label %30

24:                                               ; preds = %20
  %25 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %26 = sub nsw i32 %25, 1
  %27 = ashr i32 %26, 5
  %28 = add nsw i32 %27, 1
  %29 = add nsw i32 %28, 1
  br label %30

30:                                               ; preds = %24, %23
  %31 = phi i32 [ 2, %23 ], [ %29, %24 ]
  %32 = sext i32 %31 to i64
  %33 = mul i64 4, %32
  %34 = call noalias i8* @malloc(i64 %33) #7
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %37 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %35, i32 %36)
  store i32* %37, i32** %5, align 8
  %38 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %39 = icmp sle i32 %38, 32
  br i1 %39, label %40, label %41

40:                                               ; preds = %30
  br label %47

41:                                               ; preds = %30
  %42 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %43 = sub nsw i32 %42, 1
  %44 = ashr i32 %43, 5
  %45 = add nsw i32 %44, 1
  %46 = add nsw i32 %45, 1
  br label %47

47:                                               ; preds = %41, %40
  %48 = phi i32 [ 2, %40 ], [ %46, %41 ]
  %49 = sext i32 %48 to i64
  %50 = mul i64 4, %49
  %51 = call noalias i8* @malloc(i64 %50) #7
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %54 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %52, i32 %53)
  store i32* %54, i32** %6, align 8
  %55 = load i32**, i32*** %3, align 8
  %56 = load i32*, i32** %5, align 8
  %57 = load i32*, i32** %6, align 8
  %58 = call i32 (i32**, i32*, i32*, i32, ...) bitcast (i32 (i32**, i32*, i32*, i32)* @binate_split_select to i32 (i32**, i32*, i32*, i32, ...)*)(i32** %55, i32* %56, i32* %57, i32 512)
  store i32 %58, i32* %7, align 4
  %59 = load i32**, i32*** %3, align 8
  %60 = load i32*, i32** %5, align 8
  %61 = load i32, i32* %7, align 4
  %62 = call i32** (i32**, i32*, i32, ...) bitcast (i32** (i32**, i32*, i32)* @scofactor to i32** (i32**, i32*, i32, ...)*)(i32** %59, i32* %60, i32 %61)
  %63 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  call void @ftautology(i32** %62, %struct.sm_matrix_struct* %63)
  %64 = load i32**, i32*** %3, align 8
  %65 = load i32*, i32** %6, align 8
  %66 = load i32, i32* %7, align 4
  %67 = call i32** (i32**, i32*, i32, ...) bitcast (i32** (i32**, i32*, i32)* @scofactor to i32** (i32**, i32*, i32, ...)*)(i32** %64, i32* %65, i32 %66)
  %68 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  call void @ftautology(i32** %67, %struct.sm_matrix_struct* %68)
  %69 = load i32**, i32*** %3, align 8
  %70 = getelementptr inbounds i32*, i32** %69, i64 0
  %71 = load i32*, i32** %70, align 8
  %72 = icmp ne i32* %71, null
  br i1 %72, label %73, label %80

73:                                               ; preds = %47
  %74 = load i32**, i32*** %3, align 8
  %75 = getelementptr inbounds i32*, i32** %74, i64 0
  %76 = load i32*, i32** %75, align 8
  %77 = bitcast i32* %76 to i8*
  call void @free(i8* %77) #7
  %78 = load i32**, i32*** %3, align 8
  %79 = getelementptr inbounds i32*, i32** %78, i64 0
  store i32* null, i32** %79, align 8
  br label %80

80:                                               ; preds = %73, %47
  %81 = load i32**, i32*** %3, align 8
  %82 = icmp ne i32** %81, null
  br i1 %82, label %83, label %86

83:                                               ; preds = %80
  %84 = load i32**, i32*** %3, align 8
  %85 = bitcast i32** %84 to i8*
  call void @free(i8* %85) #7
  store i32** null, i32*** %3, align 8
  br label %86

86:                                               ; preds = %83, %80
  %87 = load i32*, i32** %5, align 8
  %88 = icmp ne i32* %87, null
  br i1 %88, label %89, label %92

89:                                               ; preds = %86
  %90 = load i32*, i32** %5, align 8
  %91 = bitcast i32* %90 to i8*
  call void @free(i8* %91) #7
  store i32* null, i32** %5, align 8
  br label %92

92:                                               ; preds = %89, %86
  %93 = load i32*, i32** %6, align 8
  %94 = icmp ne i32* %93, null
  br i1 %94, label %95, label %98

95:                                               ; preds = %92
  %96 = load i32*, i32** %6, align 8
  %97 = bitcast i32* %96 to i8*
  call void @free(i8* %97) #7
  store i32* null, i32** %6, align 8
  br label %98

98:                                               ; preds = %95, %92
  br label %99

99:                                               ; preds = %98, %15
  %100 = load i32, i32* @debug, align 4
  %101 = and i32 %100, 512
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %113

103:                                              ; preds = %99
  %104 = load i32, i32* @ftautology.ftaut_level, align 4
  %105 = add nsw i32 %104, -1
  store i32 %105, i32* @ftautology.ftaut_level, align 4
  %106 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %107 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %106, i32 0, i32 6
  %108 = load i32, i32* %107, align 8
  %109 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %110 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %109, i32 0, i32 9
  %111 = load i32, i32* %110, align 8
  %112 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.306, i64 0, i64 0), i32 %105, i32 %108, i32 %111)
  br label %113

113:                                              ; preds = %103, %99
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ftaut_special_cases(i32** %0, %struct.sm_matrix_struct* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32**, align 8
  %5 = alloca %struct.sm_matrix_struct*, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32** %0, i32*** %4, align 8
  store %struct.sm_matrix_struct* %1, %struct.sm_matrix_struct** %5, align 8
  %14 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %15 = getelementptr inbounds i32*, i32** %14, i64 0
  %16 = load i32*, i32** %15, align 8
  store i32* %16, i32** %9, align 8
  %17 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %18 = getelementptr inbounds i32*, i32** %17, i64 1
  %19 = load i32*, i32** %18, align 8
  store i32* %19, i32** %10, align 8
  %20 = load i32**, i32*** %4, align 8
  %21 = getelementptr inbounds i32*, i32** %20, i64 2
  store i32** %21, i32*** %6, align 8
  br label %22

22:                                               ; preds = %60, %2
  %23 = load i32**, i32*** %6, align 8
  %24 = getelementptr inbounds i32*, i32** %23, i32 1
  store i32** %24, i32*** %6, align 8
  %25 = load i32*, i32** %23, align 8
  store i32* %25, i32** %8, align 8
  %26 = icmp ne i32* %25, null
  br i1 %26, label %27, label %61

27:                                               ; preds = %22
  %28 = load i32*, i32** %8, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 0
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 4096
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %60, label %33

33:                                               ; preds = %27
  %34 = load i32*, i32** %8, align 8
  %35 = load i32**, i32*** %4, align 8
  %36 = getelementptr inbounds i32*, i32** %35, i64 0
  %37 = load i32*, i32** %36, align 8
  %38 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @full_row to i32 (i32*, i32*, ...)*)(i32* %34, i32* %37)
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %59

40:                                               ; preds = %33
  %41 = load i32**, i32*** %4, align 8
  %42 = getelementptr inbounds i32*, i32** %41, i64 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp ne i32* %43, null
  br i1 %44, label %45, label %52

45:                                               ; preds = %40
  %46 = load i32**, i32*** %4, align 8
  %47 = getelementptr inbounds i32*, i32** %46, i64 0
  %48 = load i32*, i32** %47, align 8
  %49 = bitcast i32* %48 to i8*
  call void @free(i8* %49) #7
  %50 = load i32**, i32*** %4, align 8
  %51 = getelementptr inbounds i32*, i32** %50, i64 0
  store i32* null, i32** %51, align 8
  br label %52

52:                                               ; preds = %45, %40
  %53 = load i32**, i32*** %4, align 8
  %54 = icmp ne i32** %53, null
  br i1 %54, label %55, label %58

55:                                               ; preds = %52
  %56 = load i32**, i32*** %4, align 8
  %57 = bitcast i32** %56 to i8*
  call void @free(i8* %57) #7
  store i32** null, i32*** %4, align 8
  br label %58

58:                                               ; preds = %55, %52
  store i32 1, i32* %3, align 4
  br label %245

59:                                               ; preds = %33
  br label %60

60:                                               ; preds = %59, %27
  br label %22

61:                                               ; preds = %22
  br label %62

62:                                               ; preds = %242, %61
  %63 = load i32**, i32*** %4, align 8
  call void (i32**, ...) bitcast (void (i32**)* @massive_count to void (i32**, ...)*)(i32** %63)
  %64 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 5), align 4
  %65 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 4), align 8
  %66 = icmp eq i32 %64, %65
  br i1 %66, label %67, label %135

67:                                               ; preds = %62
  %68 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %69 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %68, i32 0, i32 5
  %70 = load %struct.sm_row_struct*, %struct.sm_row_struct** %69, align 8
  %71 = icmp ne %struct.sm_row_struct* %70, null
  br i1 %71, label %72, label %79

72:                                               ; preds = %67
  %73 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %74 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %73, i32 0, i32 5
  %75 = load %struct.sm_row_struct*, %struct.sm_row_struct** %74, align 8
  %76 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %75, i32 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = add nsw i32 %77, 1
  br label %80

79:                                               ; preds = %67
  br label %80

80:                                               ; preds = %79, %72
  %81 = phi i32 [ %78, %72 ], [ 0, %79 ]
  store i32 %81, i32* %12, align 4
  %82 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %83 = load i32, i32* %12, align 4
  %84 = load i32, i32* @Rp_current, align 4
  %85 = call %struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32, ...) bitcast (%struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32)* @sm_insert to %struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32, ...)*)(%struct.sm_matrix_struct* %82, i32 %83, i32 %84)
  %86 = load i32**, i32*** %4, align 8
  %87 = getelementptr inbounds i32*, i32** %86, i64 2
  store i32** %87, i32*** %6, align 8
  br label %88

88:                                               ; preds = %115, %80
  %89 = load i32**, i32*** %6, align 8
  %90 = getelementptr inbounds i32*, i32** %89, i32 1
  store i32** %90, i32*** %6, align 8
  %91 = load i32*, i32** %89, align 8
  store i32* %91, i32** %8, align 8
  %92 = icmp ne i32* %91, null
  br i1 %92, label %93, label %116

93:                                               ; preds = %88
  %94 = load i32*, i32** %8, align 8
  %95 = getelementptr inbounds i32, i32* %94, i64 0
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 4096
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %115

99:                                               ; preds = %93
  %100 = load i32*, i32** %8, align 8
  %101 = load i32**, i32*** %4, align 8
  %102 = getelementptr inbounds i32*, i32** %101, i64 0
  %103 = load i32*, i32** %102, align 8
  %104 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @full_row to i32 (i32*, i32*, ...)*)(i32* %100, i32* %103)
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %106, label %114

106:                                              ; preds = %99
  %107 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %108 = load i32, i32* %12, align 4
  %109 = load i32*, i32** %8, align 8
  %110 = getelementptr inbounds i32, i32* %109, i64 0
  %111 = load i32, i32* %110, align 4
  %112 = lshr i32 %111, 16
  %113 = call %struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32, ...) bitcast (%struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32)* @sm_insert to %struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32, ...)*)(%struct.sm_matrix_struct* %107, i32 %108, i32 %112)
  br label %114

114:                                              ; preds = %106, %99
  br label %115

115:                                              ; preds = %114, %93
  br label %88

116:                                              ; preds = %88
  %117 = load i32**, i32*** %4, align 8
  %118 = getelementptr inbounds i32*, i32** %117, i64 0
  %119 = load i32*, i32** %118, align 8
  %120 = icmp ne i32* %119, null
  br i1 %120, label %121, label %128

121:                                              ; preds = %116
  %122 = load i32**, i32*** %4, align 8
  %123 = getelementptr inbounds i32*, i32** %122, i64 0
  %124 = load i32*, i32** %123, align 8
  %125 = bitcast i32* %124 to i8*
  call void @free(i8* %125) #7
  %126 = load i32**, i32*** %4, align 8
  %127 = getelementptr inbounds i32*, i32** %126, i64 0
  store i32* null, i32** %127, align 8
  br label %128

128:                                              ; preds = %121, %116
  %129 = load i32**, i32*** %4, align 8
  %130 = icmp ne i32** %129, null
  br i1 %130, label %131, label %134

131:                                              ; preds = %128
  %132 = load i32**, i32*** %4, align 8
  %133 = bitcast i32** %132 to i8*
  call void @free(i8* %133) #7
  store i32** null, i32*** %4, align 8
  br label %134

134:                                              ; preds = %131, %128
  store i32 1, i32* %3, align 4
  br label %245

135:                                              ; preds = %62
  %136 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 5), align 4
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %243

138:                                              ; preds = %135
  %139 = load i32*, i32** %10, align 8
  %140 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 13), align 8
  %141 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %139, i32* %140)
  store i32 0, i32* %11, align 4
  br label %142

142:                                              ; preds = %193, %138
  %143 = load i32, i32* %11, align 4
  %144 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %145 = icmp slt i32 %143, %144
  br i1 %145, label %146, label %196

146:                                              ; preds = %142
  %147 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 3), align 8
  %148 = load i32, i32* %11, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i32, i32* %147, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = icmp ne i32 %151, 0
  br i1 %152, label %153, label %192

153:                                              ; preds = %146
  %154 = load i32*, i32** %10, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 0
  %156 = load i32, i32* %155, align 4
  %157 = and i32 %156, 1023
  store i32 %157, i32* %13, align 4
  %158 = load i32*, i32** %10, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 0
  %160 = load i32, i32* %159, align 4
  %161 = and i32 %160, -1024
  store i32 %161, i32* %159, align 4
  %162 = load i32, i32* %13, align 4
  %163 = load i32*, i32** %10, align 8
  %164 = getelementptr inbounds i32, i32* %163, i64 0
  %165 = load i32, i32* %164, align 4
  %166 = or i32 %165, %162
  store i32 %166, i32* %164, align 4
  br label %167

167:                                              ; preds = %187, %153
  %168 = load i32*, i32** %10, align 8
  %169 = load i32, i32* %13, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i32, i32* %168, i64 %170
  %172 = load i32, i32* %171, align 4
  %173 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %174 = load i32, i32* %11, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i32*, i32** %173, i64 %175
  %177 = load i32*, i32** %176, align 8
  %178 = load i32, i32* %13, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i32, i32* %177, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = or i32 %172, %181
  %183 = load i32*, i32** %10, align 8
  %184 = load i32, i32* %13, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds i32, i32* %183, i64 %185
  store i32 %182, i32* %186, align 4
  br label %187

187:                                              ; preds = %167
  %188 = load i32, i32* %13, align 4
  %189 = add nsw i32 %188, -1
  store i32 %189, i32* %13, align 4
  %190 = icmp sgt i32 %189, 0
  br i1 %190, label %167, label %191

191:                                              ; preds = %187
  br label %192

192:                                              ; preds = %191, %146
  br label %193

193:                                              ; preds = %192
  %194 = load i32, i32* %11, align 4
  %195 = add nsw i32 %194, 1
  store i32 %195, i32* %11, align 4
  br label %142

196:                                              ; preds = %142
  %197 = load i32**, i32*** %4, align 8
  %198 = getelementptr inbounds i32*, i32** %197, i64 2
  store i32** %198, i32*** %6, align 8
  store i32** %198, i32*** %7, align 8
  br label %199

199:                                              ; preds = %218, %196
  %200 = load i32**, i32*** %6, align 8
  %201 = getelementptr inbounds i32*, i32** %200, i32 1
  store i32** %201, i32*** %6, align 8
  %202 = load i32*, i32** %200, align 8
  store i32* %202, i32** %8, align 8
  %203 = icmp ne i32* %202, null
  br i1 %203, label %204, label %219

204:                                              ; preds = %199
  %205 = load i32*, i32** %10, align 8
  %206 = load i32*, i32** %9, align 8
  %207 = load i32*, i32** %8, align 8
  %208 = load i32**, i32*** %4, align 8
  %209 = getelementptr inbounds i32*, i32** %208, i64 0
  %210 = load i32*, i32** %209, align 8
  %211 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %206, i32* %207, i32* %210)
  %212 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_implies to i32 (i32*, i32*, ...)*)(i32* %205, i32* %211)
  %213 = icmp ne i32 %212, 0
  br i1 %213, label %214, label %218

214:                                              ; preds = %204
  %215 = load i32*, i32** %8, align 8
  %216 = load i32**, i32*** %7, align 8
  %217 = getelementptr inbounds i32*, i32** %216, i32 1
  store i32** %217, i32*** %7, align 8
  store i32* %215, i32** %216, align 8
  br label %218

218:                                              ; preds = %214, %204
  br label %199

219:                                              ; preds = %199
  %220 = load i32**, i32*** %7, align 8
  %221 = getelementptr inbounds i32*, i32** %220, i32 1
  store i32** %221, i32*** %7, align 8
  store i32* null, i32** %220, align 8
  %222 = load i32**, i32*** %7, align 8
  %223 = bitcast i32** %222 to i32*
  %224 = load i32**, i32*** %4, align 8
  %225 = getelementptr inbounds i32*, i32** %224, i64 1
  store i32* %223, i32** %225, align 8
  %226 = load i32, i32* @debug, align 4
  %227 = and i32 %226, 512
  %228 = icmp ne i32 %227, 0
  br i1 %228, label %229, label %242

229:                                              ; preds = %219
  %230 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 5), align 4
  %231 = load i32**, i32*** %4, align 8
  %232 = getelementptr inbounds i32*, i32** %231, i64 1
  %233 = load i32*, i32** %232, align 8
  %234 = bitcast i32* %233 to i32**
  %235 = load i32**, i32*** %4, align 8
  %236 = ptrtoint i32** %234 to i64
  %237 = ptrtoint i32** %235 to i64
  %238 = sub i64 %236, %237
  %239 = sdiv exact i64 %238, 8
  %240 = sub nsw i64 %239, 3
  %241 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.307, i64 0, i64 0), i32 %230, i64 %240)
  br label %242

242:                                              ; preds = %229, %219
  br label %62

243:                                              ; preds = %135
  br label %244

244:                                              ; preds = %243
  store i32 2, i32* %3, align 4
  br label %245

245:                                              ; preds = %244, %134, %58
  %246 = load i32, i32* %3, align 4
  ret i32 %246
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @cube_is_covered(i32** %0, i32* %1) #0 {
  %3 = alloca i32**, align 8
  %4 = alloca i32*, align 8
  store i32** %0, i32*** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32**, i32*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call i32** (i32**, i32*, ...) bitcast (i32** (i32**, i32*)* @cofactor to i32** (i32**, i32*, ...)*)(i32** %5, i32* %6)
  %8 = call i32 @tautology(i32** %7)
  ret i32 %8
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tautology(i32** %0) #0 {
  %2 = alloca i32**, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32** %0, i32*** %2, align 8
  %7 = load i32, i32* @debug, align 4
  %8 = and i32 %7, 512
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = load i32**, i32*** %2, align 8
  %12 = load i32, i32* @tautology.taut_level, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* @tautology.taut_level, align 4
  call void (i32**, i8*, i32, ...) bitcast (void (i32**, i8*, i32)* @debug_print to void (i32**, i8*, i32, ...)*)(i32** %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.312, i64 0, i64 0), i32 %12)
  br label %14

14:                                               ; preds = %10, %1
  %15 = load i32**, i32*** %2, align 8
  %16 = call i32 @taut_special_cases(i32** %15)
  store i32 %16, i32* %6, align 4
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %18, label %103

18:                                               ; preds = %14
  %19 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %20 = icmp sle i32 %19, 32
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  br label %28

22:                                               ; preds = %18
  %23 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %24 = sub nsw i32 %23, 1
  %25 = ashr i32 %24, 5
  %26 = add nsw i32 %25, 1
  %27 = add nsw i32 %26, 1
  br label %28

28:                                               ; preds = %22, %21
  %29 = phi i32 [ 2, %21 ], [ %27, %22 ]
  %30 = sext i32 %29 to i64
  %31 = mul i64 4, %30
  %32 = call noalias i8* @malloc(i64 %31) #7
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %35 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %33, i32 %34)
  store i32* %35, i32** %3, align 8
  %36 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %37 = icmp sle i32 %36, 32
  br i1 %37, label %38, label %39

38:                                               ; preds = %28
  br label %45

39:                                               ; preds = %28
  %40 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %41 = sub nsw i32 %40, 1
  %42 = ashr i32 %41, 5
  %43 = add nsw i32 %42, 1
  %44 = add nsw i32 %43, 1
  br label %45

45:                                               ; preds = %39, %38
  %46 = phi i32 [ 2, %38 ], [ %44, %39 ]
  %47 = sext i32 %46 to i64
  %48 = mul i64 4, %47
  %49 = call noalias i8* @malloc(i64 %48) #7
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %52 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %50, i32 %51)
  store i32* %52, i32** %4, align 8
  %53 = load i32**, i32*** %2, align 8
  %54 = load i32*, i32** %3, align 8
  %55 = load i32*, i32** %4, align 8
  %56 = call i32 (i32**, i32*, i32*, i32, ...) bitcast (i32 (i32**, i32*, i32*, i32)* @binate_split_select to i32 (i32**, i32*, i32*, i32, ...)*)(i32** %53, i32* %54, i32* %55, i32 512)
  store i32 %56, i32* %5, align 4
  %57 = load i32**, i32*** %2, align 8
  %58 = load i32*, i32** %3, align 8
  %59 = load i32, i32* %5, align 4
  %60 = call i32** (i32**, i32*, i32, ...) bitcast (i32** (i32**, i32*, i32)* @scofactor to i32** (i32**, i32*, i32, ...)*)(i32** %57, i32* %58, i32 %59)
  %61 = call i32 @tautology(i32** %60)
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %70

63:                                               ; preds = %45
  %64 = load i32**, i32*** %2, align 8
  %65 = load i32*, i32** %4, align 8
  %66 = load i32, i32* %5, align 4
  %67 = call i32** (i32**, i32*, i32, ...) bitcast (i32** (i32**, i32*, i32)* @scofactor to i32** (i32**, i32*, i32, ...)*)(i32** %64, i32* %65, i32 %66)
  %68 = call i32 @tautology(i32** %67)
  %69 = icmp ne i32 %68, 0
  br label %70

70:                                               ; preds = %63, %45
  %71 = phi i1 [ false, %45 ], [ %69, %63 ]
  %72 = zext i1 %71 to i32
  store i32 %72, i32* %6, align 4
  %73 = load i32**, i32*** %2, align 8
  %74 = getelementptr inbounds i32*, i32** %73, i64 0
  %75 = load i32*, i32** %74, align 8
  %76 = icmp ne i32* %75, null
  br i1 %76, label %77, label %84

77:                                               ; preds = %70
  %78 = load i32**, i32*** %2, align 8
  %79 = getelementptr inbounds i32*, i32** %78, i64 0
  %80 = load i32*, i32** %79, align 8
  %81 = bitcast i32* %80 to i8*
  call void @free(i8* %81) #7
  %82 = load i32**, i32*** %2, align 8
  %83 = getelementptr inbounds i32*, i32** %82, i64 0
  store i32* null, i32** %83, align 8
  br label %84

84:                                               ; preds = %77, %70
  %85 = load i32**, i32*** %2, align 8
  %86 = icmp ne i32** %85, null
  br i1 %86, label %87, label %90

87:                                               ; preds = %84
  %88 = load i32**, i32*** %2, align 8
  %89 = bitcast i32** %88 to i8*
  call void @free(i8* %89) #7
  store i32** null, i32*** %2, align 8
  br label %90

90:                                               ; preds = %87, %84
  %91 = load i32*, i32** %3, align 8
  %92 = icmp ne i32* %91, null
  br i1 %92, label %93, label %96

93:                                               ; preds = %90
  %94 = load i32*, i32** %3, align 8
  %95 = bitcast i32* %94 to i8*
  call void @free(i8* %95) #7
  store i32* null, i32** %3, align 8
  br label %96

96:                                               ; preds = %93, %90
  %97 = load i32*, i32** %4, align 8
  %98 = icmp ne i32* %97, null
  br i1 %98, label %99, label %102

99:                                               ; preds = %96
  %100 = load i32*, i32** %4, align 8
  %101 = bitcast i32* %100 to i8*
  call void @free(i8* %101) #7
  store i32* null, i32** %4, align 8
  br label %102

102:                                              ; preds = %99, %96
  br label %103

103:                                              ; preds = %102, %14
  %104 = load i32, i32* @debug, align 4
  %105 = and i32 %104, 512
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %121

107:                                              ; preds = %103
  %108 = load i32, i32* @tautology.taut_level, align 4
  %109 = add nsw i32 %108, -1
  store i32 %109, i32* @tautology.taut_level, align 4
  %110 = load i32, i32* %6, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %107
  br label %118

113:                                              ; preds = %107
  %114 = load i32, i32* %6, align 4
  %115 = icmp eq i32 %114, 1
  %116 = zext i1 %115 to i64
  %117 = select i1 %115, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.313, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11.314, i64 0, i64 0)
  br label %118

118:                                              ; preds = %113, %112
  %119 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9.315, i64 0, i64 0), %112 ], [ %117, %113 ]
  %120 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.316, i64 0, i64 0), i32 %109, i8* %119)
  br label %121

121:                                              ; preds = %118, %103
  %122 = load i32, i32* %6, align 4
  ret i32 %122
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @taut_special_cases(i32** %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32**, align 8
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i32**, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32** %0, i32*** %3, align 8
  %15 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %16 = getelementptr inbounds i32*, i32** %15, i64 0
  %17 = load i32*, i32** %16, align 8
  store i32* %17, i32** %7, align 8
  %18 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %19 = getelementptr inbounds i32*, i32** %18, i64 1
  %20 = load i32*, i32** %19, align 8
  store i32* %20, i32** %8, align 8
  %21 = load i32**, i32*** %3, align 8
  %22 = getelementptr inbounds i32*, i32** %21, i64 2
  store i32** %22, i32*** %4, align 8
  br label %23

23:                                               ; preds = %54, %1
  %24 = load i32**, i32*** %4, align 8
  %25 = getelementptr inbounds i32*, i32** %24, i32 1
  store i32** %25, i32*** %4, align 8
  %26 = load i32*, i32** %24, align 8
  store i32* %26, i32** %6, align 8
  %27 = icmp ne i32* %26, null
  br i1 %27, label %28, label %55

28:                                               ; preds = %23
  %29 = load i32*, i32** %6, align 8
  %30 = load i32**, i32*** %3, align 8
  %31 = getelementptr inbounds i32*, i32** %30, i64 0
  %32 = load i32*, i32** %31, align 8
  %33 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @full_row to i32 (i32*, i32*, ...)*)(i32* %29, i32* %32)
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %54

35:                                               ; preds = %28
  %36 = load i32**, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %36, i64 0
  %38 = load i32*, i32** %37, align 8
  %39 = icmp ne i32* %38, null
  br i1 %39, label %40, label %47

40:                                               ; preds = %35
  %41 = load i32**, i32*** %3, align 8
  %42 = getelementptr inbounds i32*, i32** %41, i64 0
  %43 = load i32*, i32** %42, align 8
  %44 = bitcast i32* %43 to i8*
  call void @free(i8* %44) #7
  %45 = load i32**, i32*** %3, align 8
  %46 = getelementptr inbounds i32*, i32** %45, i64 0
  store i32* null, i32** %46, align 8
  br label %47

47:                                               ; preds = %40, %35
  %48 = load i32**, i32*** %3, align 8
  %49 = icmp ne i32** %48, null
  br i1 %49, label %50, label %53

50:                                               ; preds = %47
  %51 = load i32**, i32*** %3, align 8
  %52 = bitcast i32** %51 to i8*
  call void @free(i8* %52) #7
  store i32** null, i32*** %3, align 8
  br label %53

53:                                               ; preds = %50, %47
  store i32 1, i32* %2, align 4
  br label %374

54:                                               ; preds = %28
  br label %23

55:                                               ; preds = %23
  br label %56

56:                                               ; preds = %299, %55
  %57 = load i32**, i32*** %3, align 8
  %58 = getelementptr inbounds i32*, i32** %57, i64 0
  %59 = load i32*, i32** %58, align 8
  %60 = getelementptr inbounds i32, i32* %59, i64 0
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %61, 1023
  store i32 %62, i32* %12, align 4
  br label %63

63:                                               ; preds = %75, %56
  %64 = load i32**, i32*** %3, align 8
  %65 = getelementptr inbounds i32*, i32** %64, i64 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i32, i32* %12, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %66, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = load i32*, i32** %7, align 8
  %72 = load i32, i32* %12, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i32, i32* %71, i64 %73
  store i32 %70, i32* %74, align 4
  br label %75

75:                                               ; preds = %63
  %76 = load i32, i32* %12, align 4
  %77 = add nsw i32 %76, -1
  store i32 %77, i32* %12, align 4
  %78 = icmp sge i32 %77, 0
  br i1 %78, label %63, label %79

79:                                               ; preds = %75
  %80 = load i32**, i32*** %3, align 8
  %81 = getelementptr inbounds i32*, i32** %80, i64 2
  store i32** %81, i32*** %4, align 8
  br label %82

82:                                               ; preds = %121, %79
  %83 = load i32**, i32*** %4, align 8
  %84 = getelementptr inbounds i32*, i32** %83, i32 1
  store i32** %84, i32*** %4, align 8
  %85 = load i32*, i32** %83, align 8
  store i32* %85, i32** %6, align 8
  %86 = icmp ne i32* %85, null
  br i1 %86, label %87, label %122

87:                                               ; preds = %82
  %88 = load i32*, i32** %7, align 8
  %89 = getelementptr inbounds i32, i32* %88, i64 0
  %90 = load i32, i32* %89, align 4
  %91 = and i32 %90, 1023
  store i32 %91, i32* %13, align 4
  %92 = load i32*, i32** %7, align 8
  %93 = getelementptr inbounds i32, i32* %92, i64 0
  %94 = load i32, i32* %93, align 4
  %95 = and i32 %94, -1024
  store i32 %95, i32* %93, align 4
  %96 = load i32, i32* %13, align 4
  %97 = load i32*, i32** %7, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 0
  %99 = load i32, i32* %98, align 4
  %100 = or i32 %99, %96
  store i32 %100, i32* %98, align 4
  br label %101

101:                                              ; preds = %117, %87
  %102 = load i32*, i32** %7, align 8
  %103 = load i32, i32* %13, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i32, i32* %102, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = load i32*, i32** %6, align 8
  %108 = load i32, i32* %13, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i32, i32* %107, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = or i32 %106, %111
  %113 = load i32*, i32** %7, align 8
  %114 = load i32, i32* %13, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i32, i32* %113, i64 %115
  store i32 %112, i32* %116, align 4
  br label %117

117:                                              ; preds = %101
  %118 = load i32, i32* %13, align 4
  %119 = add nsw i32 %118, -1
  store i32 %119, i32* %13, align 4
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %101, label %121

121:                                              ; preds = %117
  br label %82

122:                                              ; preds = %82
  %123 = load i32*, i32** %7, align 8
  %124 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %125 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_equal to i32 (i32*, i32*, ...)*)(i32* %123, i32* %124)
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %146, label %127

127:                                              ; preds = %122
  %128 = load i32**, i32*** %3, align 8
  %129 = getelementptr inbounds i32*, i32** %128, i64 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp ne i32* %130, null
  br i1 %131, label %132, label %139

132:                                              ; preds = %127
  %133 = load i32**, i32*** %3, align 8
  %134 = getelementptr inbounds i32*, i32** %133, i64 0
  %135 = load i32*, i32** %134, align 8
  %136 = bitcast i32* %135 to i8*
  call void @free(i8* %136) #7
  %137 = load i32**, i32*** %3, align 8
  %138 = getelementptr inbounds i32*, i32** %137, i64 0
  store i32* null, i32** %138, align 8
  br label %139

139:                                              ; preds = %132, %127
  %140 = load i32**, i32*** %3, align 8
  %141 = icmp ne i32** %140, null
  br i1 %141, label %142, label %145

142:                                              ; preds = %139
  %143 = load i32**, i32*** %3, align 8
  %144 = bitcast i32** %143 to i8*
  call void @free(i8* %144) #7
  store i32** null, i32*** %3, align 8
  br label %145

145:                                              ; preds = %142, %139
  store i32 0, i32* %2, align 4
  br label %374

146:                                              ; preds = %122
  %147 = load i32**, i32*** %3, align 8
  call void (i32**, ...) bitcast (void (i32**)* @massive_count to void (i32**, ...)*)(i32** %147)
  %148 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 5), align 4
  %149 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 4), align 8
  %150 = icmp eq i32 %148, %149
  br i1 %150, label %151, label %170

151:                                              ; preds = %146
  %152 = load i32**, i32*** %3, align 8
  %153 = getelementptr inbounds i32*, i32** %152, i64 0
  %154 = load i32*, i32** %153, align 8
  %155 = icmp ne i32* %154, null
  br i1 %155, label %156, label %163

156:                                              ; preds = %151
  %157 = load i32**, i32*** %3, align 8
  %158 = getelementptr inbounds i32*, i32** %157, i64 0
  %159 = load i32*, i32** %158, align 8
  %160 = bitcast i32* %159 to i8*
  call void @free(i8* %160) #7
  %161 = load i32**, i32*** %3, align 8
  %162 = getelementptr inbounds i32*, i32** %161, i64 0
  store i32* null, i32** %162, align 8
  br label %163

163:                                              ; preds = %156, %151
  %164 = load i32**, i32*** %3, align 8
  %165 = icmp ne i32** %164, null
  br i1 %165, label %166, label %169

166:                                              ; preds = %163
  %167 = load i32**, i32*** %3, align 8
  %168 = bitcast i32** %167 to i8*
  call void @free(i8* %168) #7
  store i32** null, i32*** %3, align 8
  br label %169

169:                                              ; preds = %166, %163
  store i32 0, i32* %2, align 4
  br label %374

170:                                              ; preds = %146
  %171 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 4), align 8
  %172 = icmp eq i32 %171, 1
  br i1 %172, label %173, label %192

173:                                              ; preds = %170
  %174 = load i32**, i32*** %3, align 8
  %175 = getelementptr inbounds i32*, i32** %174, i64 0
  %176 = load i32*, i32** %175, align 8
  %177 = icmp ne i32* %176, null
  br i1 %177, label %178, label %185

178:                                              ; preds = %173
  %179 = load i32**, i32*** %3, align 8
  %180 = getelementptr inbounds i32*, i32** %179, i64 0
  %181 = load i32*, i32** %180, align 8
  %182 = bitcast i32* %181 to i8*
  call void @free(i8* %182) #7
  %183 = load i32**, i32*** %3, align 8
  %184 = getelementptr inbounds i32*, i32** %183, i64 0
  store i32* null, i32** %184, align 8
  br label %185

185:                                              ; preds = %178, %173
  %186 = load i32**, i32*** %3, align 8
  %187 = icmp ne i32** %186, null
  br i1 %187, label %188, label %191

188:                                              ; preds = %185
  %189 = load i32**, i32*** %3, align 8
  %190 = bitcast i32** %189 to i8*
  call void @free(i8* %190) #7
  store i32** null, i32*** %3, align 8
  br label %191

191:                                              ; preds = %188, %185
  store i32 1, i32* %2, align 4
  br label %374

192:                                              ; preds = %170
  %193 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 5), align 4
  %194 = icmp ne i32 %193, 0
  br i1 %194, label %195, label %300

195:                                              ; preds = %192
  %196 = load i32*, i32** %7, align 8
  %197 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 13), align 8
  %198 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %196, i32* %197)
  store i32 0, i32* %11, align 4
  br label %199

199:                                              ; preds = %250, %195
  %200 = load i32, i32* %11, align 4
  %201 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %202 = icmp slt i32 %200, %201
  br i1 %202, label %203, label %253

203:                                              ; preds = %199
  %204 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 3), align 8
  %205 = load i32, i32* %11, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds i32, i32* %204, i64 %206
  %208 = load i32, i32* %207, align 4
  %209 = icmp ne i32 %208, 0
  br i1 %209, label %210, label %249

210:                                              ; preds = %203
  %211 = load i32*, i32** %7, align 8
  %212 = getelementptr inbounds i32, i32* %211, i64 0
  %213 = load i32, i32* %212, align 4
  %214 = and i32 %213, 1023
  store i32 %214, i32* %14, align 4
  %215 = load i32*, i32** %7, align 8
  %216 = getelementptr inbounds i32, i32* %215, i64 0
  %217 = load i32, i32* %216, align 4
  %218 = and i32 %217, -1024
  store i32 %218, i32* %216, align 4
  %219 = load i32, i32* %14, align 4
  %220 = load i32*, i32** %7, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 0
  %222 = load i32, i32* %221, align 4
  %223 = or i32 %222, %219
  store i32 %223, i32* %221, align 4
  br label %224

224:                                              ; preds = %244, %210
  %225 = load i32*, i32** %7, align 8
  %226 = load i32, i32* %14, align 4
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds i32, i32* %225, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %231 = load i32, i32* %11, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds i32*, i32** %230, i64 %232
  %234 = load i32*, i32** %233, align 8
  %235 = load i32, i32* %14, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i32, i32* %234, i64 %236
  %238 = load i32, i32* %237, align 4
  %239 = or i32 %229, %238
  %240 = load i32*, i32** %7, align 8
  %241 = load i32, i32* %14, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds i32, i32* %240, i64 %242
  store i32 %239, i32* %243, align 4
  br label %244

244:                                              ; preds = %224
  %245 = load i32, i32* %14, align 4
  %246 = add nsw i32 %245, -1
  store i32 %246, i32* %14, align 4
  %247 = icmp sgt i32 %246, 0
  br i1 %247, label %224, label %248

248:                                              ; preds = %244
  br label %249

249:                                              ; preds = %248, %203
  br label %250

250:                                              ; preds = %249
  %251 = load i32, i32* %11, align 4
  %252 = add nsw i32 %251, 1
  store i32 %252, i32* %11, align 4
  br label %199

253:                                              ; preds = %199
  %254 = load i32**, i32*** %3, align 8
  %255 = getelementptr inbounds i32*, i32** %254, i64 2
  store i32** %255, i32*** %4, align 8
  store i32** %255, i32*** %5, align 8
  br label %256

256:                                              ; preds = %275, %253
  %257 = load i32**, i32*** %4, align 8
  %258 = getelementptr inbounds i32*, i32** %257, i32 1
  store i32** %258, i32*** %4, align 8
  %259 = load i32*, i32** %257, align 8
  store i32* %259, i32** %6, align 8
  %260 = icmp ne i32* %259, null
  br i1 %260, label %261, label %276

261:                                              ; preds = %256
  %262 = load i32*, i32** %7, align 8
  %263 = load i32*, i32** %8, align 8
  %264 = load i32*, i32** %6, align 8
  %265 = load i32**, i32*** %3, align 8
  %266 = getelementptr inbounds i32*, i32** %265, i64 0
  %267 = load i32*, i32** %266, align 8
  %268 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %263, i32* %264, i32* %267)
  %269 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_implies to i32 (i32*, i32*, ...)*)(i32* %262, i32* %268)
  %270 = icmp ne i32 %269, 0
  br i1 %270, label %271, label %275

271:                                              ; preds = %261
  %272 = load i32*, i32** %6, align 8
  %273 = load i32**, i32*** %5, align 8
  %274 = getelementptr inbounds i32*, i32** %273, i32 1
  store i32** %274, i32*** %5, align 8
  store i32* %272, i32** %273, align 8
  br label %275

275:                                              ; preds = %271, %261
  br label %256

276:                                              ; preds = %256
  %277 = load i32**, i32*** %5, align 8
  %278 = getelementptr inbounds i32*, i32** %277, i32 1
  store i32** %278, i32*** %5, align 8
  store i32* null, i32** %277, align 8
  %279 = load i32**, i32*** %5, align 8
  %280 = bitcast i32** %279 to i32*
  %281 = load i32**, i32*** %3, align 8
  %282 = getelementptr inbounds i32*, i32** %281, i64 1
  store i32* %280, i32** %282, align 8
  %283 = load i32, i32* @debug, align 4
  %284 = and i32 %283, 512
  %285 = icmp ne i32 %284, 0
  br i1 %285, label %286, label %299

286:                                              ; preds = %276
  %287 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 5), align 4
  %288 = load i32**, i32*** %3, align 8
  %289 = getelementptr inbounds i32*, i32** %288, i64 1
  %290 = load i32*, i32** %289, align 8
  %291 = bitcast i32* %290 to i32**
  %292 = load i32**, i32*** %3, align 8
  %293 = ptrtoint i32** %291 to i64
  %294 = ptrtoint i32** %292 to i64
  %295 = sub i64 %293, %294
  %296 = sdiv exact i64 %295, 8
  %297 = sub nsw i64 %296, 3
  %298 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.307, i64 0, i64 0), i32 %287, i64 %297)
  br label %299

299:                                              ; preds = %286, %276
  br label %56

300:                                              ; preds = %192
  %301 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  %302 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 6), align 8
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds i32, i32* %301, i64 %303
  %305 = load i32, i32* %304, align 4
  %306 = sext i32 %305 to i64
  %307 = load i32**, i32*** %3, align 8
  %308 = getelementptr inbounds i32*, i32** %307, i64 1
  %309 = load i32*, i32** %308, align 8
  %310 = bitcast i32* %309 to i32**
  %311 = load i32**, i32*** %3, align 8
  %312 = ptrtoint i32** %310 to i64
  %313 = ptrtoint i32** %311 to i64
  %314 = sub i64 %312, %313
  %315 = sdiv exact i64 %314, 8
  %316 = sub nsw i64 %315, 3
  %317 = sdiv i64 %316, 2
  %318 = icmp slt i64 %306, %317
  br i1 %318, label %319, label %370

319:                                              ; preds = %300
  %320 = load i32**, i32*** %3, align 8
  %321 = load i32, i32* @debug, align 4
  %322 = and i32 %321, 512
  %323 = call i32 (i32**, i32***, i32***, i32, ...) bitcast (i32 (i32**, i32***, i32***, i32)* @cubelist_partition to i32 (i32**, i32***, i32***, i32, ...)*)(i32** %320, i32*** %9, i32*** %10, i32 %322)
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %326

325:                                              ; preds = %319
  store i32 2, i32* %2, align 4
  br label %374

326:                                              ; preds = %319
  %327 = load i32**, i32*** %3, align 8
  %328 = getelementptr inbounds i32*, i32** %327, i64 0
  %329 = load i32*, i32** %328, align 8
  %330 = icmp ne i32* %329, null
  br i1 %330, label %331, label %338

331:                                              ; preds = %326
  %332 = load i32**, i32*** %3, align 8
  %333 = getelementptr inbounds i32*, i32** %332, i64 0
  %334 = load i32*, i32** %333, align 8
  %335 = bitcast i32* %334 to i8*
  call void @free(i8* %335) #7
  %336 = load i32**, i32*** %3, align 8
  %337 = getelementptr inbounds i32*, i32** %336, i64 0
  store i32* null, i32** %337, align 8
  br label %338

338:                                              ; preds = %331, %326
  %339 = load i32**, i32*** %3, align 8
  %340 = icmp ne i32** %339, null
  br i1 %340, label %341, label %344

341:                                              ; preds = %338
  %342 = load i32**, i32*** %3, align 8
  %343 = bitcast i32** %342 to i8*
  call void @free(i8* %343) #7
  store i32** null, i32*** %3, align 8
  br label %344

344:                                              ; preds = %341, %338
  %345 = load i32**, i32*** %9, align 8
  %346 = call i32 @tautology(i32** %345)
  %347 = icmp ne i32 %346, 0
  br i1 %347, label %348, label %367

348:                                              ; preds = %344
  %349 = load i32**, i32*** %10, align 8
  %350 = getelementptr inbounds i32*, i32** %349, i64 0
  %351 = load i32*, i32** %350, align 8
  %352 = icmp ne i32* %351, null
  br i1 %352, label %353, label %360

353:                                              ; preds = %348
  %354 = load i32**, i32*** %10, align 8
  %355 = getelementptr inbounds i32*, i32** %354, i64 0
  %356 = load i32*, i32** %355, align 8
  %357 = bitcast i32* %356 to i8*
  call void @free(i8* %357) #7
  %358 = load i32**, i32*** %10, align 8
  %359 = getelementptr inbounds i32*, i32** %358, i64 0
  store i32* null, i32** %359, align 8
  br label %360

360:                                              ; preds = %353, %348
  %361 = load i32**, i32*** %10, align 8
  %362 = icmp ne i32** %361, null
  br i1 %362, label %363, label %366

363:                                              ; preds = %360
  %364 = load i32**, i32*** %10, align 8
  %365 = bitcast i32** %364 to i8*
  call void @free(i8* %365) #7
  store i32** null, i32*** %10, align 8
  br label %366

366:                                              ; preds = %363, %360
  store i32 1, i32* %2, align 4
  br label %374

367:                                              ; preds = %344
  %368 = load i32**, i32*** %10, align 8
  %369 = call i32 @tautology(i32** %368)
  store i32 %369, i32* %2, align 4
  br label %374

370:                                              ; preds = %300
  br label %371

371:                                              ; preds = %370
  br label %372

372:                                              ; preds = %371
  br label %373

373:                                              ; preds = %372
  store i32 2, i32* %2, align 4
  br label %374

374:                                              ; preds = %373, %367, %366, %325, %191, %169, %145, %53
  %375 = load i32, i32* %2, align 4
  ret i32 %375
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.PLA_t*, align 8
  %14 = alloca %struct.PLA_t*, align 8
  %15 = alloca %struct.set_family*, align 8
  %16 = alloca %struct.set_family*, align 8
  %17 = alloca %struct.set_family*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca %struct.cost_struct, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i32, align 4
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca i64, align 8
  %35 = alloca i64, align 8
  %36 = alloca %struct.set_family*, align 8
  %37 = alloca %struct.set_family*, align 8
  %38 = alloca %struct.set_family*, align 8
  %39 = alloca %struct.set_family*, align 8
  %40 = alloca i64, align 8
  %41 = alloca i64, align 8
  %42 = alloca i64, align 8
  %43 = alloca i64, align 8
  %44 = alloca i64, align 8
  %45 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %46 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %46, i64* %23, align 8
  store i32 0, i32* %21, align 4
  %47 = call i32 @init_runtime()
  store i32 0, i32* %12, align 4
  store i32 1, i32* %11, align 4
  store i32 0, i32* @debug, align 4
  store i32 0, i32* @verbose_debug, align 4
  store i32 1, i32* @print_solution, align 4
  store i32 0, i32* @summary, align 4
  store i32 0, i32* @trace, align 4
  store i32 0, i32* %10, align 4
  store i32 -1, i32* %8, align 4
  store i32 -1, i32* %9, align 4
  store i32 1, i32* @remove_essential, align 4
  store i32 1, i32* @force_irredundant, align 4
  store i32 1, i32* @unwrap_onset, align 4
  store i32 0, i32* @single_expand, align 4
  store i32 0, i32* @pos, align 4
  store i32 0, i32* @recompute_onset, align 4
  store i32 0, i32* @use_super_gasp, align 4
  store i32 0, i32* @use_random_order, align 4
  store i32 0, i32* @kiss, align 4
  store i32 1, i32* @echo_comments, align 4
  store i32 1, i32* @echo_unknown_commands, align 4
  store i32 0, i32* %22, align 4
  %48 = load i8**, i8*** %5, align 8
  %49 = call i32 @backward_compatibility_hack(i32* %4, i8** %48, i32* %12, i32* %11)
  br label %50

50:                                               ; preds = %251, %2
  %51 = load i32, i32* %4, align 4
  %52 = load i8**, i8*** %5, align 8
  %53 = call i32 (i32, i8**, i8*, ...) bitcast (i32 (i32, i8**, i8*)* @espresso_getopt to i32 (i32, i8**, i8*, ...)*)(i32 %51, i8** %52, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62.379, i64 0, i64 0))
  store i32 %53, i32* %6, align 4
  %54 = icmp ne i32 %53, -1
  br i1 %54, label %55, label %252

55:                                               ; preds = %50
  %56 = load i32, i32* %6, align 4
  switch i32 %56, label %249 [
    i32 68, label %57
    i32 111, label %95
    i32 101, label %138
    i32 100, label %185
    i32 118, label %187
    i32 116, label %231
    i32 115, label %232
    i32 120, label %233
    i32 83, label %234
    i32 114, label %237
  ]

57:                                               ; preds = %55
  store i32 0, i32* %7, align 4
  br label %58

58:                                               ; preds = %77, %57
  %59 = load i32, i32* %7, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [44 x %struct.anon], [44 x %struct.anon]* @option_table, i64 0, i64 %60
  %62 = getelementptr inbounds %struct.anon, %struct.anon* %61, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = icmp ne i8* %63, null
  br i1 %64, label %65, label %80

65:                                               ; preds = %58
  %66 = load i8*, i8** @optarg, align 8
  %67 = load i32, i32* %7, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [44 x %struct.anon], [44 x %struct.anon]* @option_table, i64 0, i64 %68
  %70 = getelementptr inbounds %struct.anon, %struct.anon* %69, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = call i32 @strcmp(i8* %66, i8* %71) #9
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %65
  %75 = load i32, i32* %7, align 4
  store i32 %75, i32* %12, align 4
  br label %80

76:                                               ; preds = %65
  br label %77

77:                                               ; preds = %76
  %78 = load i32, i32* %7, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %7, align 4
  br label %58

80:                                               ; preds = %74, %58
  %81 = load i32, i32* %7, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [44 x %struct.anon], [44 x %struct.anon]* @option_table, i64 0, i64 %82
  %84 = getelementptr inbounds %struct.anon, %struct.anon* %83, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = icmp eq i8* %85, null
  br i1 %86, label %87, label %94

87:                                               ; preds = %80
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %89 = load i8**, i8*** %5, align 8
  %90 = getelementptr inbounds i8*, i8** %89, i64 0
  %91 = load i8*, i8** %90, align 8
  %92 = load i8*, i8** @optarg, align 8
  %93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.63.380, i64 0, i64 0), i8* %91, i8* %92)
  call void @exit(i32 1) #10
  unreachable

94:                                               ; preds = %80
  br label %251

95:                                               ; preds = %55
  store i32 0, i32* %7, align 4
  br label %96

96:                                               ; preds = %120, %95
  %97 = load i32, i32* %7, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds [0 x %struct.pla_types_struct], [0 x %struct.pla_types_struct]* bitcast ([21 x %struct.pla_types_struct]* @pla_types to [0 x %struct.pla_types_struct]*), i64 0, i64 %98
  %100 = getelementptr inbounds %struct.pla_types_struct, %struct.pla_types_struct* %99, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = icmp ne i8* %101, null
  br i1 %102, label %103, label %123

103:                                              ; preds = %96
  %104 = load i8*, i8** @optarg, align 8
  %105 = load i32, i32* %7, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [0 x %struct.pla_types_struct], [0 x %struct.pla_types_struct]* bitcast ([21 x %struct.pla_types_struct]* @pla_types to [0 x %struct.pla_types_struct]*), i64 0, i64 %106
  %108 = getelementptr inbounds %struct.pla_types_struct, %struct.pla_types_struct* %107, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 1
  %111 = call i32 @strcmp(i8* %104, i8* %110) #9
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %119

113:                                              ; preds = %103
  %114 = load i32, i32* %7, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [0 x %struct.pla_types_struct], [0 x %struct.pla_types_struct]* bitcast ([21 x %struct.pla_types_struct]* @pla_types to [0 x %struct.pla_types_struct]*), i64 0, i64 %115
  %117 = getelementptr inbounds %struct.pla_types_struct, %struct.pla_types_struct* %116, i32 0, i32 1
  %118 = load i32, i32* %117, align 8
  store i32 %118, i32* %11, align 4
  br label %123

119:                                              ; preds = %103
  br label %120

120:                                              ; preds = %119
  %121 = load i32, i32* %7, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %7, align 4
  br label %96

123:                                              ; preds = %113, %96
  %124 = load i32, i32* %7, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [0 x %struct.pla_types_struct], [0 x %struct.pla_types_struct]* bitcast ([21 x %struct.pla_types_struct]* @pla_types to [0 x %struct.pla_types_struct]*), i64 0, i64 %125
  %127 = getelementptr inbounds %struct.pla_types_struct, %struct.pla_types_struct* %126, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = icmp eq i8* %128, null
  br i1 %129, label %130, label %137

130:                                              ; preds = %123
  %131 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %132 = load i8**, i8*** %5, align 8
  %133 = getelementptr inbounds i8*, i8** %132, i64 0
  %134 = load i8*, i8** %133, align 8
  %135 = load i8*, i8** @optarg, align 8
  %136 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %131, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.64.381, i64 0, i64 0), i8* %134, i8* %135)
  call void @exit(i32 1) #10
  unreachable

137:                                              ; preds = %123
  br label %251

138:                                              ; preds = %55
  store i32 0, i32* %7, align 4
  br label %139

139:                                              ; preds = %167, %138
  %140 = load i32, i32* %7, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [12 x %struct.anon.1], [12 x %struct.anon.1]* @esp_opt_table, i64 0, i64 %141
  %143 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %142, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = icmp ne i8* %144, null
  br i1 %145, label %146, label %170

146:                                              ; preds = %139
  %147 = load i8*, i8** @optarg, align 8
  %148 = load i32, i32* %7, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [12 x %struct.anon.1], [12 x %struct.anon.1]* @esp_opt_table, i64 0, i64 %149
  %151 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %150, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  %153 = call i32 @strcmp(i8* %147, i8* %152) #9
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %166

155:                                              ; preds = %146
  %156 = load i32, i32* %7, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [12 x %struct.anon.1], [12 x %struct.anon.1]* @esp_opt_table, i64 0, i64 %157
  %159 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %158, i32 0, i32 2
  %160 = load i32, i32* %159, align 8
  %161 = load i32, i32* %7, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds [12 x %struct.anon.1], [12 x %struct.anon.1]* @esp_opt_table, i64 0, i64 %162
  %164 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %163, i32 0, i32 1
  %165 = load i32*, i32** %164, align 8
  store i32 %160, i32* %165, align 4
  br label %170

166:                                              ; preds = %146
  br label %167

167:                                              ; preds = %166
  %168 = load i32, i32* %7, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %7, align 4
  br label %139

170:                                              ; preds = %155, %139
  %171 = load i32, i32* %7, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds [12 x %struct.anon.1], [12 x %struct.anon.1]* @esp_opt_table, i64 0, i64 %172
  %174 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %173, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = icmp eq i8* %175, null
  br i1 %176, label %177, label %184

177:                                              ; preds = %170
  %178 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %179 = load i8**, i8*** %5, align 8
  %180 = getelementptr inbounds i8*, i8** %179, i64 0
  %181 = load i8*, i8** %180, align 8
  %182 = load i8*, i8** @optarg, align 8
  %183 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %178, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.65.382, i64 0, i64 0), i8* %181, i8* %182)
  call void @exit(i32 1) #10
  unreachable

184:                                              ; preds = %170
  br label %251

185:                                              ; preds = %55
  %186 = load i32, i32* getelementptr inbounds ([17 x %struct.pla_types_struct], [17 x %struct.pla_types_struct]* @debug_table, i64 0, i64 0, i32 1), align 8
  store i32 %186, i32* @debug, align 4
  store i32 1, i32* @trace, align 4
  store i32 1, i32* @summary, align 4
  br label %251

187:                                              ; preds = %55
  store i32 1, i32* @verbose_debug, align 4
  store i32 0, i32* %7, align 4
  br label %188

188:                                              ; preds = %213, %187
  %189 = load i32, i32* %7, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [17 x %struct.pla_types_struct], [17 x %struct.pla_types_struct]* @debug_table, i64 0, i64 %190
  %192 = getelementptr inbounds %struct.pla_types_struct, %struct.pla_types_struct* %191, i32 0, i32 0
  %193 = load i8*, i8** %192, align 16
  %194 = icmp ne i8* %193, null
  br i1 %194, label %195, label %216

195:                                              ; preds = %188
  %196 = load i8*, i8** @optarg, align 8
  %197 = load i32, i32* %7, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [17 x %struct.pla_types_struct], [17 x %struct.pla_types_struct]* @debug_table, i64 0, i64 %198
  %200 = getelementptr inbounds %struct.pla_types_struct, %struct.pla_types_struct* %199, i32 0, i32 0
  %201 = load i8*, i8** %200, align 16
  %202 = call i32 @strcmp(i8* %196, i8* %201) #9
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %212

204:                                              ; preds = %195
  %205 = load i32, i32* %7, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [17 x %struct.pla_types_struct], [17 x %struct.pla_types_struct]* @debug_table, i64 0, i64 %206
  %208 = getelementptr inbounds %struct.pla_types_struct, %struct.pla_types_struct* %207, i32 0, i32 1
  %209 = load i32, i32* %208, align 8
  %210 = load i32, i32* @debug, align 4
  %211 = or i32 %210, %209
  store i32 %211, i32* @debug, align 4
  br label %216

212:                                              ; preds = %195
  br label %213

213:                                              ; preds = %212
  %214 = load i32, i32* %7, align 4
  %215 = add nsw i32 %214, 1
  store i32 %215, i32* %7, align 4
  br label %188

216:                                              ; preds = %204, %188
  %217 = load i32, i32* %7, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [17 x %struct.pla_types_struct], [17 x %struct.pla_types_struct]* @debug_table, i64 0, i64 %218
  %220 = getelementptr inbounds %struct.pla_types_struct, %struct.pla_types_struct* %219, i32 0, i32 0
  %221 = load i8*, i8** %220, align 16
  %222 = icmp eq i8* %221, null
  br i1 %222, label %223, label %230

223:                                              ; preds = %216
  %224 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %225 = load i8**, i8*** %5, align 8
  %226 = getelementptr inbounds i8*, i8** %225, i64 0
  %227 = load i8*, i8** %226, align 8
  %228 = load i8*, i8** @optarg, align 8
  %229 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %224, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.66.383, i64 0, i64 0), i8* %227, i8* %228)
  call void @exit(i32 1) #10
  unreachable

230:                                              ; preds = %216
  br label %251

231:                                              ; preds = %55
  store i32 1, i32* @trace, align 4
  br label %251

232:                                              ; preds = %55
  store i32 1, i32* @summary, align 4
  br label %251

233:                                              ; preds = %55
  store i32 0, i32* @print_solution, align 4
  br label %251

234:                                              ; preds = %55
  %235 = load i8*, i8** @optarg, align 8
  %236 = call i32 @atoi(i8* %235) #9
  store i32 %236, i32* %10, align 4
  br label %251

237:                                              ; preds = %55
  %238 = load i8*, i8** @optarg, align 8
  %239 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %238, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67.384, i64 0, i64 0), i32* %8, i32* %9) #7
  %240 = icmp slt i32 %239, 2
  br i1 %240, label %241, label %248

241:                                              ; preds = %237
  %242 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %243 = load i8**, i8*** %5, align 8
  %244 = getelementptr inbounds i8*, i8** %243, i64 0
  %245 = load i8*, i8** %244, align 8
  %246 = load i8*, i8** @optarg, align 8
  %247 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %242, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.68.385, i64 0, i64 0), i8* %245, i8* %246)
  call void @exit(i32 1) #10
  unreachable

248:                                              ; preds = %237
  br label %251

249:                                              ; preds = %55
  %250 = call i32 @usage()
  call void @exit(i32 1) #10
  unreachable

251:                                              ; preds = %248, %234, %233, %232, %231, %230, %185, %184, %137, %94
  br label %50

252:                                              ; preds = %50
  %253 = load i32, i32* @summary, align 4
  %254 = icmp ne i32 %253, 0
  br i1 %254, label %258, label %255

255:                                              ; preds = %252
  %256 = load i32, i32* @trace, align 4
  %257 = icmp ne i32 %256, 0
  br i1 %257, label %258, label %278

258:                                              ; preds = %255, %252
  %259 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.69, i64 0, i64 0))
  store i32 1, i32* %6, align 4
  br label %260

260:                                              ; preds = %272, %258
  %261 = load i32, i32* %6, align 4
  %262 = load i32, i32* %4, align 4
  %263 = icmp slt i32 %261, %262
  br i1 %263, label %264, label %275

264:                                              ; preds = %260
  %265 = load i8**, i8*** %5, align 8
  %266 = load i32, i32* %6, align 4
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds i8*, i8** %265, i64 %267
  %269 = load i8*, i8** %268, align 8
  %270 = call i8* @mybasename.386(i8* %269)
  %271 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0), i8* %270)
  br label %272

272:                                              ; preds = %264
  %273 = load i32, i32* %6, align 4
  %274 = add nsw i32 %273, 1
  store i32 %274, i32* %6, align 4
  br label %260

275:                                              ; preds = %260
  %276 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71, i64 0, i64 0))
  %277 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.73, i64 0, i64 0))
  br label %278

278:                                              ; preds = %275, %255
  store %struct.PLA_t* null, %struct.PLA_t** %14, align 8
  store %struct.PLA_t* null, %struct.PLA_t** %13, align 8
  %279 = load i32, i32* %12, align 4
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds [44 x %struct.anon], [44 x %struct.anon]* @option_table, i64 0, i64 %280
  %282 = getelementptr inbounds %struct.anon, %struct.anon* %281, i32 0, i32 2
  %283 = load i32, i32* %282, align 4
  switch i32 %283, label %319 [
    i32 2, label %284
    i32 1, label %305
  ]

284:                                              ; preds = %278
  %285 = load i32, i32* @optind, align 4
  %286 = add nsw i32 %285, 2
  %287 = load i32, i32* %4, align 4
  %288 = icmp slt i32 %286, %287
  br i1 %288, label %289, label %290

289:                                              ; preds = %284
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.74, i64 0, i64 0))
  br label %290

290:                                              ; preds = %289, %284
  %291 = load i32, i32* @optind, align 4
  %292 = add nsw i32 %291, 1
  store i32 %292, i32* @optind, align 4
  %293 = load i32, i32* %4, align 4
  %294 = load i8**, i8*** %5, align 8
  %295 = load i32, i32* %12, align 4
  %296 = load i32, i32* %11, align 4
  %297 = call i32 @getPLA(i32 %291, i32 %293, i8** %294, i32 %295, %struct.PLA_t** %13, i32 %296)
  %298 = load i32, i32* @optind, align 4
  %299 = add nsw i32 %298, 1
  store i32 %299, i32* @optind, align 4
  %300 = load i32, i32* %4, align 4
  %301 = load i8**, i8*** %5, align 8
  %302 = load i32, i32* %12, align 4
  %303 = load i32, i32* %11, align 4
  %304 = call i32 @getPLA(i32 %298, i32 %300, i8** %301, i32 %302, %struct.PLA_t** %14, i32 %303)
  br label %319

305:                                              ; preds = %278
  %306 = load i32, i32* @optind, align 4
  %307 = add nsw i32 %306, 1
  %308 = load i32, i32* %4, align 4
  %309 = icmp slt i32 %307, %308
  br i1 %309, label %310, label %311

310:                                              ; preds = %305
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.74, i64 0, i64 0))
  br label %311

311:                                              ; preds = %310, %305
  %312 = load i32, i32* @optind, align 4
  %313 = add nsw i32 %312, 1
  store i32 %313, i32* @optind, align 4
  %314 = load i32, i32* %4, align 4
  %315 = load i8**, i8*** %5, align 8
  %316 = load i32, i32* %12, align 4
  %317 = load i32, i32* %11, align 4
  %318 = call i32 @getPLA(i32 %312, i32 %314, i8** %315, i32 %316, %struct.PLA_t** %13, i32 %317)
  br label %319

319:                                              ; preds = %311, %290, %278
  %320 = load i32, i32* @optind, align 4
  %321 = load i32, i32* %4, align 4
  %322 = icmp slt i32 %320, %321
  br i1 %322, label %323, label %324

323:                                              ; preds = %319
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.74, i64 0, i64 0))
  br label %324

324:                                              ; preds = %323, %319
  %325 = load i32, i32* @summary, align 4
  %326 = icmp ne i32 %325, 0
  br i1 %326, label %330, label %327

327:                                              ; preds = %324
  %328 = load i32, i32* @trace, align 4
  %329 = icmp ne i32 %328, 0
  br i1 %329, label %330, label %341

330:                                              ; preds = %327, %324
  %331 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %332 = icmp ne %struct.PLA_t* %331, null
  br i1 %332, label %333, label %335

333:                                              ; preds = %330
  %334 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  call void (%struct.PLA_t*, ...) bitcast (void (%struct.PLA_t*)* @PLA_summary to void (%struct.PLA_t*, ...)*)(%struct.PLA_t* %334)
  br label %335

335:                                              ; preds = %333, %330
  %336 = load %struct.PLA_t*, %struct.PLA_t** %14, align 8
  %337 = icmp ne %struct.PLA_t* %336, null
  br i1 %337, label %338, label %340

338:                                              ; preds = %335
  %339 = load %struct.PLA_t*, %struct.PLA_t** %14, align 8
  call void (%struct.PLA_t*, ...) bitcast (void (%struct.PLA_t*)* @PLA_summary to void (%struct.PLA_t*, ...)*)(%struct.PLA_t* %339)
  br label %340

340:                                              ; preds = %338, %335
  br label %341

341:                                              ; preds = %340, %327
  %342 = load i32, i32* %12, align 4
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds [44 x %struct.anon], [44 x %struct.anon]* @option_table, i64 0, i64 %343
  %345 = getelementptr inbounds %struct.anon, %struct.anon* %344, i32 0, i32 1
  %346 = load i32, i32* %345, align 8
  switch i32 %346, label %1058 [
    i32 0, label %347
    i32 37, label %388
    i32 27, label %438
    i32 28, label %457
    i32 29, label %467
    i32 10, label %477
    i32 13, label %492
    i32 25, label %507
    i32 8, label %522
    i32 31, label %576
    i32 11, label %589
    i32 15, label %602
    i32 9, label %615
    i32 24, label %616
    i32 23, label %657
    i32 16, label %679
    i32 19, label %683
    i32 20, label %686
    i32 21, label %721
    i32 22, label %724
    i32 7, label %728
    i32 32, label %729
    i32 3, label %739
    i32 12, label %746
    i32 35, label %756
    i32 5, label %766
    i32 6, label %773
    i32 26, label %783
    i32 14, label %793
    i32 30, label %800
    i32 18, label %806
    i32 4, label %834
    i32 40, label %870
    i32 1, label %887
    i32 36, label %902
    i32 2, label %927
    i32 17, label %930
    i32 34, label %933
    i32 38, label %936
    i32 39, label %947
    i32 41, label %973
    i32 33, label %977
  ]

347:                                              ; preds = %341
  %348 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %349 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %348, i32 0, i32 0
  %350 = load %struct.set_family*, %struct.set_family** %349, align 8
  %351 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %350)
  store %struct.set_family* %351, %struct.set_family** %16, align 8
  %352 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %353 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %352, i32 0, i32 0
  %354 = load %struct.set_family*, %struct.set_family** %353, align 8
  %355 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %356 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %355, i32 0, i32 1
  %357 = load %struct.set_family*, %struct.set_family** %356, align 8
  %358 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %359 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %358, i32 0, i32 2
  %360 = load %struct.set_family*, %struct.set_family** %359, align 8
  %361 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @espresso to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %354, %struct.set_family* %357, %struct.set_family* %360)
  %362 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %363 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %362, i32 0, i32 0
  store %struct.set_family* %361, %struct.set_family** %363, align 8
  %364 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %364, i64* %24, align 8
  %365 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %366 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %365, i32 0, i32 0
  %367 = load %struct.set_family*, %struct.set_family** %366, align 8
  %368 = load %struct.set_family*, %struct.set_family** %16, align 8
  %369 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %370 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %369, i32 0, i32 1
  %371 = load %struct.set_family*, %struct.set_family** %370, align 8
  %372 = call i32 (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (i32 (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @verify to i32 (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %367, %struct.set_family* %368, %struct.set_family* %371)
  store i32 %372, i32* %21, align 4
  %373 = load i64, i64* %24, align 8
  %374 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %375 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %374, i32 0, i32 0
  %376 = load %struct.set_family*, %struct.set_family** %375, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %373, i32 14, %struct.set_family* %376, %struct.cost_struct* %20)
  %377 = load i32, i32* %21, align 4
  %378 = icmp ne i32 %377, 0
  br i1 %378, label %379, label %385

379:                                              ; preds = %347
  store i32 0, i32* @print_solution, align 4
  %380 = load %struct.set_family*, %struct.set_family** %16, align 8
  %381 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %382 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %381, i32 0, i32 0
  store %struct.set_family* %380, %struct.set_family** %382, align 8
  %383 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %384 = call i32 (%struct.PLA_t*, ...) bitcast (i32 (%struct.PLA_t*)* @check_consistency to i32 (%struct.PLA_t*, ...)*)(%struct.PLA_t* %383)
  br label %387

385:                                              ; preds = %347
  %386 = load %struct.set_family*, %struct.set_family** %16, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %386)
  br label %387

387:                                              ; preds = %385, %379
  br label %1058

388:                                              ; preds = %341
  br label %389

389:                                              ; preds = %432, %388
  %390 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %390, i64* %26, align 8
  %391 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %392 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %391, i32 0, i32 0
  %393 = load %struct.set_family*, %struct.set_family** %392, align 8
  %394 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %395 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %394, i32 0, i32 1
  %396 = load %struct.set_family*, %struct.set_family** %395, align 8
  %397 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %398 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %397, i32 0, i32 2
  %399 = load %struct.set_family*, %struct.set_family** %398, align 8
  %400 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @espresso to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %393, %struct.set_family* %396, %struct.set_family* %399)
  %401 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %402 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %401, i32 0, i32 0
  store %struct.set_family* %400, %struct.set_family** %402, align 8
  %403 = load i32, i32* @trace, align 4
  %404 = icmp ne i32 %403, 0
  br i1 %404, label %405, label %412

405:                                              ; preds = %389
  %406 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %407 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %406, i32 0, i32 0
  %408 = load %struct.set_family*, %struct.set_family** %407, align 8
  %409 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %410 = load i64, i64* %26, align 8
  %411 = sub nsw i64 %409, %410
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %408, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i64 %411)
  br label %412

412:                                              ; preds = %405, %389
  %413 = load i32, i32* @print_solution, align 4
  %414 = icmp ne i32 %413, 0
  br i1 %414, label %415, label %421

415:                                              ; preds = %412
  %416 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %417 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %418 = load i32, i32* %11, align 4
  call void (%struct._IO_FILE*, %struct.PLA_t*, i32, ...) bitcast (void (%struct._IO_FILE*, %struct.PLA_t*, i32)* @fprint_pla to void (%struct._IO_FILE*, %struct.PLA_t*, i32, ...)*)(%struct._IO_FILE* %416, %struct.PLA_t* %417, i32 %418)
  %419 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %420 = call i32 @fflush(%struct._IO_FILE* %419)
  br label %421

421:                                              ; preds = %415, %412
  %422 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %423 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %422, i32 0, i32 4
  %424 = load i32, i32* %423, align 8
  store i32 %424, i32* %25, align 4
  %425 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  call void (%struct.PLA_t*, ...) bitcast (void (%struct.PLA_t*)* @free_PLA to void (%struct.PLA_t*, ...)*)(%struct.PLA_t* %425)
  call void (...) bitcast (void ()* @setdown_cube to void (...)*)()
  %426 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %427 = icmp ne i32* %426, null
  br i1 %427, label %428, label %431

428:                                              ; preds = %421
  %429 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %430 = bitcast i32* %429 to i8*
  call void @free(i8* %430) #7
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  br label %431

431:                                              ; preds = %428, %421
  br label %432

432:                                              ; preds = %431
  %433 = load %struct._IO_FILE*, %struct._IO_FILE** @last_fp, align 8
  %434 = load i32, i32* %25, align 4
  %435 = call i32 (%struct._IO_FILE*, i32, i32, i32, %struct.PLA_t**, ...) bitcast (i32 (%struct._IO_FILE*, i32, i32, i32, %struct.PLA_t**)* @read_pla to i32 (%struct._IO_FILE*, i32, i32, i32, %struct.PLA_t**, ...)*)(%struct._IO_FILE* %433, i32 1, i32 1, i32 %434, %struct.PLA_t** %13)
  %436 = icmp ne i32 %435, -1
  br i1 %436, label %389, label %437

437:                                              ; preds = %432
  call void @exit(i32 0) #10
  unreachable

438:                                              ; preds = %341
  %439 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %439, i64* %27, align 8
  %440 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %441 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %440, i32 0, i32 0
  %442 = load %struct.set_family*, %struct.set_family** %441, align 8
  %443 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @cube1list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %442)
  %444 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @simplify to %struct.set_family* (i32**, ...)*)(i32** %443)
  %445 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %446 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %445, i32 0, i32 0
  store %struct.set_family* %444, %struct.set_family** %446, align 8
  %447 = load i32, i32* @trace, align 4
  %448 = icmp ne i32 %447, 0
  br i1 %448, label %449, label %456

449:                                              ; preds = %438
  %450 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %451 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %450, i32 0, i32 0
  %452 = load %struct.set_family*, %struct.set_family** %451, align 8
  %453 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %454 = load i64, i64* %27, align 8
  %455 = sub nsw i64 %453, %454
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %452, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.76, i64 0, i64 0), i64 %455)
  br label %456

456:                                              ; preds = %449, %438
  br label %1058

457:                                              ; preds = %341
  %458 = load i32, i32* %10, align 4
  %459 = icmp slt i32 %458, 0
  br i1 %459, label %463, label %460

460:                                              ; preds = %457
  %461 = load i32, i32* %10, align 4
  %462 = icmp sgt i32 %461, 1
  br i1 %462, label %463, label %464

463:                                              ; preds = %460, %457
  store i32 0, i32* %10, align 4
  br label %464

464:                                              ; preds = %463, %460
  %465 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %466 = load i32, i32* %10, align 4
  call void (%struct.PLA_t*, i32, ...) bitcast (void (%struct.PLA_t*, i32)* @so_espresso to void (%struct.PLA_t*, i32, ...)*)(%struct.PLA_t* %465, i32 %466)
  br label %1058

467:                                              ; preds = %341
  %468 = load i32, i32* %10, align 4
  %469 = icmp slt i32 %468, 0
  br i1 %469, label %473, label %470

470:                                              ; preds = %467
  %471 = load i32, i32* %10, align 4
  %472 = icmp sgt i32 %471, 1
  br i1 %472, label %473, label %474

473:                                              ; preds = %470, %467
  store i32 0, i32* %10, align 4
  br label %474

474:                                              ; preds = %473, %470
  %475 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %476 = load i32, i32* %10, align 4
  call void (%struct.PLA_t*, i32, ...) bitcast (void (%struct.PLA_t*, i32)* @so_both_espresso to void (%struct.PLA_t*, i32, ...)*)(%struct.PLA_t* %475, i32 %476)
  br label %1058

477:                                              ; preds = %341
  %478 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %478, i64* %28, align 8
  %479 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %480 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %479, i32 0, i32 0
  %481 = load %struct.set_family*, %struct.set_family** %480, align 8
  %482 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %483 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %482, i32 0, i32 2
  %484 = load %struct.set_family*, %struct.set_family** %483, align 8
  %485 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, i32)* @expand to %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...)*)(%struct.set_family* %481, %struct.set_family* %484, i32 0)
  %486 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %487 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %486, i32 0, i32 0
  store %struct.set_family* %485, %struct.set_family** %487, align 8
  %488 = load i64, i64* %28, align 8
  %489 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %490 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %489, i32 0, i32 0
  %491 = load %struct.set_family*, %struct.set_family** %490, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %488, i32 4, %struct.set_family* %491, %struct.cost_struct* %20)
  br label %1058

492:                                              ; preds = %341
  %493 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %493, i64* %29, align 8
  %494 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %495 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %494, i32 0, i32 0
  %496 = load %struct.set_family*, %struct.set_family** %495, align 8
  %497 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %498 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %497, i32 0, i32 1
  %499 = load %struct.set_family*, %struct.set_family** %498, align 8
  %500 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @irredundant to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %496, %struct.set_family* %499)
  %501 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %502 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %501, i32 0, i32 0
  store %struct.set_family* %500, %struct.set_family** %502, align 8
  %503 = load i64, i64* %29, align 8
  %504 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %505 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %504, i32 0, i32 0
  %506 = load %struct.set_family*, %struct.set_family** %505, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %503, i32 5, %struct.set_family* %506, %struct.cost_struct* %20)
  br label %1058

507:                                              ; preds = %341
  %508 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %508, i64* %30, align 8
  %509 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %510 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %509, i32 0, i32 0
  %511 = load %struct.set_family*, %struct.set_family** %510, align 8
  %512 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %513 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %512, i32 0, i32 1
  %514 = load %struct.set_family*, %struct.set_family** %513, align 8
  %515 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @reduce to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %511, %struct.set_family* %514)
  %516 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %517 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %516, i32 0, i32 0
  store %struct.set_family* %515, %struct.set_family** %517, align 8
  %518 = load i64, i64* %30, align 8
  %519 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %520 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %519, i32 0, i32 0
  %521 = load %struct.set_family*, %struct.set_family** %520, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %518, i32 6, %struct.set_family* %521, %struct.cost_struct* %20)
  br label %1058

522:                                              ; preds = %341
  %523 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %524 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %523, i32 0, i32 0
  %525 = load %struct.set_family*, %struct.set_family** %524, align 8
  %526 = getelementptr inbounds %struct.set_family, %struct.set_family* %525, i32 0, i32 5
  %527 = load i32*, i32** %526, align 8
  store i32* %527, i32** %19, align 8
  %528 = load i32*, i32** %19, align 8
  %529 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %530 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %529, i32 0, i32 0
  %531 = load %struct.set_family*, %struct.set_family** %530, align 8
  %532 = getelementptr inbounds %struct.set_family, %struct.set_family* %531, i32 0, i32 3
  %533 = load i32, i32* %532, align 4
  %534 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %535 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %534, i32 0, i32 0
  %536 = load %struct.set_family*, %struct.set_family** %535, align 8
  %537 = getelementptr inbounds %struct.set_family, %struct.set_family* %536, i32 0, i32 0
  %538 = load i32, i32* %537, align 8
  %539 = mul nsw i32 %533, %538
  %540 = sext i32 %539 to i64
  %541 = getelementptr inbounds i32, i32* %528, i64 %540
  store i32* %541, i32** %18, align 8
  br label %542

542:                                              ; preds = %555, %522
  %543 = load i32*, i32** %19, align 8
  %544 = load i32*, i32** %18, align 8
  %545 = icmp ult i32* %543, %544
  br i1 %545, label %546, label %564

546:                                              ; preds = %542
  %547 = load i32*, i32** %19, align 8
  %548 = getelementptr inbounds i32, i32* %547, i64 0
  %549 = load i32, i32* %548, align 4
  %550 = or i32 %549, 1024
  store i32 %550, i32* %548, align 4
  %551 = load i32*, i32** %19, align 8
  %552 = getelementptr inbounds i32, i32* %551, i64 0
  %553 = load i32, i32* %552, align 4
  %554 = and i32 %553, -16385
  store i32 %554, i32* %552, align 4
  br label %555

555:                                              ; preds = %546
  %556 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %557 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %556, i32 0, i32 0
  %558 = load %struct.set_family*, %struct.set_family** %557, align 8
  %559 = getelementptr inbounds %struct.set_family, %struct.set_family* %558, i32 0, i32 0
  %560 = load i32, i32* %559, align 8
  %561 = load i32*, i32** %19, align 8
  %562 = sext i32 %560 to i64
  %563 = getelementptr inbounds i32, i32* %561, i64 %562
  store i32* %563, i32** %19, align 8
  br label %542

564:                                              ; preds = %542
  %565 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %565, i64* %31, align 8
  %566 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %567 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %566, i32 0, i32 0
  %568 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %569 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %568, i32 0, i32 1
  %570 = call %struct.set_family* (%struct.set_family**, %struct.set_family**, ...) bitcast (%struct.set_family* (%struct.set_family**, %struct.set_family**)* @essential to %struct.set_family* (%struct.set_family**, %struct.set_family**, ...)*)(%struct.set_family** %567, %struct.set_family** %569)
  store %struct.set_family* %570, %struct.set_family** %15, align 8
  %571 = load i64, i64* %31, align 8
  %572 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %573 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %572, i32 0, i32 0
  %574 = load %struct.set_family*, %struct.set_family** %573, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %571, i32 3, %struct.set_family* %574, %struct.cost_struct* %20)
  %575 = load %struct.set_family*, %struct.set_family** %15, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %575)
  br label %1058

576:                                              ; preds = %341
  %577 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %578 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %577, i32 0, i32 0
  %579 = load %struct.set_family*, %struct.set_family** %578, align 8
  %580 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %581 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %580, i32 0, i32 1
  %582 = load %struct.set_family*, %struct.set_family** %581, align 8
  %583 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %584 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %583, i32 0, i32 2
  %585 = load %struct.set_family*, %struct.set_family** %584, align 8
  %586 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, %struct.cost_struct*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, %struct.cost_struct*)* @super_gasp to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, %struct.cost_struct*, ...)*)(%struct.set_family* %579, %struct.set_family* %582, %struct.set_family* %585, %struct.cost_struct* %20)
  %587 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %588 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %587, i32 0, i32 0
  store %struct.set_family* %586, %struct.set_family** %588, align 8
  br label %1058

589:                                              ; preds = %341
  %590 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %591 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %590, i32 0, i32 0
  %592 = load %struct.set_family*, %struct.set_family** %591, align 8
  %593 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %594 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %593, i32 0, i32 1
  %595 = load %struct.set_family*, %struct.set_family** %594, align 8
  %596 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %597 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %596, i32 0, i32 2
  %598 = load %struct.set_family*, %struct.set_family** %597, align 8
  %599 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, %struct.cost_struct*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, %struct.cost_struct*)* @last_gasp to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, %struct.cost_struct*, ...)*)(%struct.set_family* %592, %struct.set_family* %595, %struct.set_family* %598, %struct.cost_struct* %20)
  %600 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %601 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %600, i32 0, i32 0
  store %struct.set_family* %599, %struct.set_family** %601, align 8
  br label %1058

602:                                              ; preds = %341
  %603 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %604 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %603, i32 0, i32 0
  %605 = load %struct.set_family*, %struct.set_family** %604, align 8
  %606 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %607 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %606, i32 0, i32 1
  %608 = load %struct.set_family*, %struct.set_family** %607, align 8
  %609 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %610 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %609, i32 0, i32 2
  %611 = load %struct.set_family*, %struct.set_family** %610, align 8
  %612 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @make_sparse to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %605, %struct.set_family* %608, %struct.set_family* %611)
  %613 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %614 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %613, i32 0, i32 0
  store %struct.set_family* %612, %struct.set_family** %614, align 8
  br label %1058

615:                                              ; preds = %341
  store i32 1, i32* %22, align 4
  br label %616

616:                                              ; preds = %615, %341
  %617 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %618 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %617, i32 0, i32 0
  %619 = load %struct.set_family*, %struct.set_family** %618, align 8
  %620 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %619)
  store %struct.set_family* %620, %struct.set_family** %16, align 8
  %621 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %622 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %621, i32 0, i32 0
  %623 = load %struct.set_family*, %struct.set_family** %622, align 8
  %624 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %625 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %624, i32 0, i32 1
  %626 = load %struct.set_family*, %struct.set_family** %625, align 8
  %627 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %628 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %627, i32 0, i32 2
  %629 = load %struct.set_family*, %struct.set_family** %628, align 8
  %630 = load i32, i32* %22, align 4
  %631 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32)* @minimize_exact to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32, ...)*)(%struct.set_family* %623, %struct.set_family* %626, %struct.set_family* %629, i32 %630)
  %632 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %633 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %632, i32 0, i32 0
  store %struct.set_family* %631, %struct.set_family** %633, align 8
  %634 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %634, i64* %32, align 8
  %635 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %636 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %635, i32 0, i32 0
  %637 = load %struct.set_family*, %struct.set_family** %636, align 8
  %638 = load %struct.set_family*, %struct.set_family** %16, align 8
  %639 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %640 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %639, i32 0, i32 1
  %641 = load %struct.set_family*, %struct.set_family** %640, align 8
  %642 = call i32 (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (i32 (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @verify to i32 (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %637, %struct.set_family* %638, %struct.set_family* %641)
  store i32 %642, i32* %21, align 4
  %643 = load i64, i64* %32, align 8
  %644 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %645 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %644, i32 0, i32 0
  %646 = load %struct.set_family*, %struct.set_family** %645, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %643, i32 14, %struct.set_family* %646, %struct.cost_struct* %20)
  %647 = load i32, i32* %21, align 4
  %648 = icmp ne i32 %647, 0
  br i1 %648, label %649, label %655

649:                                              ; preds = %616
  store i32 0, i32* @print_solution, align 4
  %650 = load %struct.set_family*, %struct.set_family** %16, align 8
  %651 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %652 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %651, i32 0, i32 0
  store %struct.set_family* %650, %struct.set_family** %652, align 8
  %653 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %654 = call i32 (%struct.PLA_t*, ...) bitcast (i32 (%struct.PLA_t*)* @check_consistency to i32 (%struct.PLA_t*, ...)*)(%struct.PLA_t* %653)
  br label %655

655:                                              ; preds = %649, %616
  %656 = load %struct.set_family*, %struct.set_family** %16, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %656)
  br label %1058

657:                                              ; preds = %341
  %658 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %658, i64* %33, align 8
  %659 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %660 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %659, i32 0, i32 0
  %661 = load %struct.set_family*, %struct.set_family** %660, align 8
  %662 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %663 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %662, i32 0, i32 1
  %664 = load %struct.set_family*, %struct.set_family** %663, align 8
  %665 = call i32** (%struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*)* @cube2list to i32** (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %661, %struct.set_family* %664)
  %666 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @primes_consensus to %struct.set_family* (i32**, ...)*)(i32** %665)
  %667 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %668 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %667, i32 0, i32 0
  store %struct.set_family* %666, %struct.set_family** %668, align 8
  %669 = load i32, i32* @trace, align 4
  %670 = icmp ne i32 %669, 0
  br i1 %670, label %671, label %678

671:                                              ; preds = %657
  %672 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %673 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %672, i32 0, i32 0
  %674 = load %struct.set_family*, %struct.set_family** %673, align 8
  %675 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %676 = load i64, i64* %33, align 8
  %677 = sub nsw i64 %675, %676
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %674, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.77, i64 0, i64 0), i64 %677)
  br label %678

678:                                              ; preds = %671, %657
  br label %1058

679:                                              ; preds = %341
  %680 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %681 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %680, i32 0, i32 0
  %682 = load %struct.set_family*, %struct.set_family** %681, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @map to void (%struct.set_family*, ...)*)(%struct.set_family* %682)
  store i32 0, i32* @print_solution, align 4
  br label %1058

683:                                              ; preds = %341
  %684 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %685 = load i32, i32* %10, align 4
  call void (%struct.PLA_t*, i32, ...) bitcast (void (%struct.PLA_t*, i32)* @phase_assignment to void (%struct.PLA_t*, i32, ...)*)(%struct.PLA_t* %684, i32 %685)
  br label %1058

686:                                              ; preds = %341
  %687 = load i32, i32* %8, align 4
  %688 = icmp slt i32 %687, 0
  br i1 %688, label %697, label %689

689:                                              ; preds = %686
  %690 = load i32, i32* %8, align 4
  %691 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %692 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds i32, i32* %691, i64 %693
  %695 = load i32, i32* %694, align 4
  %696 = icmp sge i32 %690, %695
  br i1 %696, label %697, label %698

697:                                              ; preds = %689, %686
  store i32 0, i32* %8, align 4
  br label %698

698:                                              ; preds = %697, %689
  %699 = load i32, i32* %9, align 4
  %700 = icmp slt i32 %699, 0
  br i1 %700, label %709, label %701

701:                                              ; preds = %698
  %702 = load i32, i32* %9, align 4
  %703 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %704 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %705 = sext i32 %704 to i64
  %706 = getelementptr inbounds i32, i32* %703, i64 %705
  %707 = load i32, i32* %706, align 4
  %708 = icmp sge i32 %702, %707
  br i1 %708, label %709, label %716

709:                                              ; preds = %701, %698
  %710 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %711 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %712 = sext i32 %711 to i64
  %713 = getelementptr inbounds i32, i32* %710, i64 %712
  %714 = load i32, i32* %713, align 4
  %715 = sub nsw i32 %714, 1
  store i32 %715, i32* %9, align 4
  br label %716

716:                                              ; preds = %709, %701
  %717 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %718 = load i32, i32* %8, align 4
  %719 = load i32, i32* %9, align 4
  %720 = load i32, i32* %10, align 4
  call void (%struct.PLA_t*, i32, i32, i32, ...) bitcast (void (%struct.PLA_t*, i32, i32, i32)* @opoall to void (%struct.PLA_t*, i32, i32, i32, ...)*)(%struct.PLA_t* %717, i32 %718, i32 %719, i32 %720)
  br label %1058

721:                                              ; preds = %341
  %722 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %723 = load i32, i32* %10, align 4
  call void (%struct.PLA_t*, i32, ...) bitcast (void (%struct.PLA_t*, i32)* @find_optimal_pairing to void (%struct.PLA_t*, i32, ...)*)(%struct.PLA_t* %722, i32 %723)
  br label %1058

724:                                              ; preds = %341
  %725 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %726 = load i32, i32* %10, align 4
  %727 = call i32 (%struct.PLA_t*, i32, ...) bitcast (i32 (%struct.PLA_t*, i32)* @pair_all to i32 (%struct.PLA_t*, i32, ...)*)(%struct.PLA_t* %725, i32 %726)
  br label %1058

728:                                              ; preds = %341
  br label %1058

729:                                              ; preds = %341
  %730 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %731 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %730, i32 0, i32 0
  %732 = load %struct.set_family*, %struct.set_family** %731, align 8
  %733 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @cube1list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %732)
  %734 = call i32 (i32**, ...) bitcast (i32 (i32**)* @tautology to i32 (i32**, ...)*)(i32** %733)
  %735 = icmp ne i32 %734, 0
  %736 = zext i1 %735 to i64
  %737 = select i1 %735, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0)
  %738 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.78, i64 0, i64 0), i8* %737)
  store i32 0, i32* @print_solution, align 4
  br label %1058

739:                                              ; preds = %341
  %740 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %741 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %740, i32 0, i32 0
  %742 = load %struct.set_family*, %struct.set_family** %741, align 8
  %743 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %742)
  %744 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %745 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %744, i32 0, i32 0
  store %struct.set_family* %743, %struct.set_family** %745, align 8
  br label %1058

746:                                              ; preds = %341
  %747 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %748 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %747, i32 0, i32 0
  %749 = load %struct.set_family*, %struct.set_family** %748, align 8
  %750 = load %struct.PLA_t*, %struct.PLA_t** %14, align 8
  %751 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %750, i32 0, i32 0
  %752 = load %struct.set_family*, %struct.set_family** %751, align 8
  %753 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @cv_intersect to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %749, %struct.set_family* %752)
  %754 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %755 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %754, i32 0, i32 0
  store %struct.set_family* %753, %struct.set_family** %755, align 8
  br label %1058

756:                                              ; preds = %341
  %757 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %758 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %757, i32 0, i32 0
  %759 = load %struct.set_family*, %struct.set_family** %758, align 8
  %760 = load %struct.PLA_t*, %struct.PLA_t** %14, align 8
  %761 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %760, i32 0, i32 0
  %762 = load %struct.set_family*, %struct.set_family** %761, align 8
  %763 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_union to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %759, %struct.set_family* %762)
  %764 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %765 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %764, i32 0, i32 0
  store %struct.set_family* %763, %struct.set_family** %765, align 8
  br label %1058

766:                                              ; preds = %341
  %767 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %768 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %767, i32 0, i32 0
  %769 = load %struct.set_family*, %struct.set_family** %768, align 8
  %770 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @make_disjoint to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %769)
  %771 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %772 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %771, i32 0, i32 0
  store %struct.set_family* %770, %struct.set_family** %772, align 8
  br label %1058

773:                                              ; preds = %341
  %774 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %775 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %774, i32 0, i32 0
  %776 = load %struct.set_family*, %struct.set_family** %775, align 8
  %777 = load %struct.PLA_t*, %struct.PLA_t** %14, align 8
  %778 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %777, i32 0, i32 0
  %779 = load %struct.set_family*, %struct.set_family** %778, align 8
  %780 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @cv_dsharp to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %776, %struct.set_family* %779)
  %781 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %782 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %781, i32 0, i32 0
  store %struct.set_family* %780, %struct.set_family** %782, align 8
  br label %1058

783:                                              ; preds = %341
  %784 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %785 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %784, i32 0, i32 0
  %786 = load %struct.set_family*, %struct.set_family** %785, align 8
  %787 = load %struct.PLA_t*, %struct.PLA_t** %14, align 8
  %788 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %787, i32 0, i32 0
  %789 = load %struct.set_family*, %struct.set_family** %788, align 8
  %790 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @cv_sharp to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %786, %struct.set_family* %789)
  %791 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %792 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %791, i32 0, i32 0
  store %struct.set_family* %790, %struct.set_family** %792, align 8
  br label %1058

793:                                              ; preds = %341
  %794 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %795 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %794, i32 0, i32 0
  %796 = load %struct.set_family*, %struct.set_family** %795, align 8
  %797 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @lex_sort to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %796)
  %798 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %799 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %798, i32 0, i32 0
  store %struct.set_family* %797, %struct.set_family** %799, align 8
  br label %1058

800:                                              ; preds = %341
  %801 = load i32, i32* @summary, align 4
  %802 = icmp ne i32 %801, 0
  br i1 %802, label %805, label %803

803:                                              ; preds = %800
  %804 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  call void (%struct.PLA_t*, ...) bitcast (void (%struct.PLA_t*)* @PLA_summary to void (%struct.PLA_t*, ...)*)(%struct.PLA_t* %804)
  br label %805

805:                                              ; preds = %803, %800
  store i32 0, i32* @print_solution, align 4
  br label %1058

806:                                              ; preds = %341
  %807 = load i32, i32* %8, align 4
  %808 = icmp slt i32 %807, 0
  br i1 %808, label %813, label %809

809:                                              ; preds = %806
  %810 = load i32, i32* %8, align 4
  %811 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %812 = icmp sge i32 %810, %811
  br i1 %812, label %813, label %814

813:                                              ; preds = %809, %806
  store i32 0, i32* %8, align 4
  br label %814

814:                                              ; preds = %813, %809
  %815 = load i32, i32* %9, align 4
  %816 = icmp slt i32 %815, 0
  br i1 %816, label %821, label %817

817:                                              ; preds = %814
  %818 = load i32, i32* %9, align 4
  %819 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %820 = icmp sge i32 %818, %819
  br i1 %820, label %821, label %824

821:                                              ; preds = %817, %814
  %822 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %823 = sub nsw i32 %822, 1
  store i32 %823, i32* %9, align 4
  br label %824

824:                                              ; preds = %821, %817
  %825 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %826 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %825, i32 0, i32 0
  %827 = load %struct.set_family*, %struct.set_family** %826, align 8
  %828 = load i32, i32* %8, align 4
  %829 = load i32, i32* %9, align 4
  %830 = call %struct.set_family* (%struct.set_family*, i32, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32, i32)* @unravel_range to %struct.set_family* (%struct.set_family*, i32, i32, ...)*)(%struct.set_family* %827, i32 %828, i32 %829)
  %831 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_dupl to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %830)
  %832 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %833 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %832, i32 0, i32 0
  store %struct.set_family* %831, %struct.set_family** %833, align 8
  br label %1058

834:                                              ; preds = %341
  %835 = load i32, i32* %8, align 4
  %836 = icmp slt i32 %835, 0
  br i1 %836, label %841, label %837

837:                                              ; preds = %834
  %838 = load i32, i32* %8, align 4
  %839 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %840 = icmp sge i32 %838, %839
  br i1 %840, label %841, label %842

841:                                              ; preds = %837, %834
  store i32 0, i32* %8, align 4
  br label %842

842:                                              ; preds = %841, %837
  %843 = load i32, i32* %9, align 4
  %844 = icmp slt i32 %843, 0
  br i1 %844, label %849, label %845

845:                                              ; preds = %842
  %846 = load i32, i32* %9, align 4
  %847 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %848 = icmp sge i32 %846, %847
  br i1 %848, label %849, label %852

849:                                              ; preds = %845, %842
  %850 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %851 = sub nsw i32 %850, 1
  store i32 %851, i32* %9, align 4
  br label %852

852:                                              ; preds = %849, %845
  %853 = load i32, i32* %8, align 4
  store i32 %853, i32* %6, align 4
  br label %854

854:                                              ; preds = %866, %852
  %855 = load i32, i32* %6, align 4
  %856 = load i32, i32* %9, align 4
  %857 = icmp sle i32 %855, %856
  br i1 %857, label %858, label %869

858:                                              ; preds = %854
  %859 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %860 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %859, i32 0, i32 0
  %861 = load %struct.set_family*, %struct.set_family** %860, align 8
  %862 = load i32, i32* %6, align 4
  %863 = call %struct.set_family* (%struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32)* @d1merge to %struct.set_family* (%struct.set_family*, i32, ...)*)(%struct.set_family* %861, i32 %862)
  %864 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %865 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %864, i32 0, i32 0
  store %struct.set_family* %863, %struct.set_family** %865, align 8
  br label %866

866:                                              ; preds = %858
  %867 = load i32, i32* %6, align 4
  %868 = add nsw i32 %867, 1
  store i32 %868, i32* %6, align 4
  br label %854

869:                                              ; preds = %854
  br label %1058

870:                                              ; preds = %341
  store i32 0, i32* %6, align 4
  br label %871

871:                                              ; preds = %883, %870
  %872 = load i32, i32* %6, align 4
  %873 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %874 = icmp slt i32 %872, %873
  br i1 %874, label %875, label %886

875:                                              ; preds = %871
  %876 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %877 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %876, i32 0, i32 0
  %878 = load %struct.set_family*, %struct.set_family** %877, align 8
  %879 = load i32, i32* %6, align 4
  %880 = call %struct.set_family* (%struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32)* @d1merge to %struct.set_family* (%struct.set_family*, i32, ...)*)(%struct.set_family* %878, i32 %879)
  %881 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %882 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %881, i32 0, i32 0
  store %struct.set_family* %880, %struct.set_family** %882, align 8
  br label %883

883:                                              ; preds = %875
  %884 = load i32, i32* %6, align 4
  %885 = add nsw i32 %884, 1
  store i32 %885, i32* %6, align 4
  br label %871

886:                                              ; preds = %871
  br label %1058

887:                                              ; preds = %341
  %888 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %888, i64* %34, align 8
  %889 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %890 = load %struct.PLA_t*, %struct.PLA_t** %14, align 8
  %891 = call i32 (%struct.PLA_t*, %struct.PLA_t*, ...) bitcast (i32 (%struct.PLA_t*, %struct.PLA_t*)* @PLA_verify to i32 (%struct.PLA_t*, %struct.PLA_t*, ...)*)(%struct.PLA_t* %889, %struct.PLA_t* %890)
  store i32 %891, i32* %21, align 4
  %892 = load i64, i64* %34, align 8
  %893 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %894 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %893, i32 0, i32 0
  %895 = load %struct.set_family*, %struct.set_family** %894, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %892, i32 14, %struct.set_family* %895, %struct.cost_struct* %20)
  %896 = load i32, i32* %21, align 4
  %897 = icmp ne i32 %896, 0
  br i1 %897, label %898, label %900

898:                                              ; preds = %887
  %899 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.81.387, i64 0, i64 0))
  call void @exit(i32 1) #10
  unreachable

900:                                              ; preds = %887
  %901 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.82, i64 0, i64 0))
  call void @exit(i32 0) #10
  unreachable

902:                                              ; preds = %341
  %903 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %904 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %903, i32 0, i32 0
  %905 = load %struct.set_family*, %struct.set_family** %904, align 8
  store %struct.set_family* %905, %struct.set_family** %16, align 8
  %906 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %907 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %906, i32 0, i32 1
  %908 = load %struct.set_family*, %struct.set_family** %907, align 8
  store %struct.set_family* %908, %struct.set_family** %17, align 8
  %909 = load %struct.PLA_t*, %struct.PLA_t** %14, align 8
  %910 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %909, i32 0, i32 0
  %911 = load %struct.set_family*, %struct.set_family** %910, align 8
  store %struct.set_family* %911, %struct.set_family** %15, align 8
  %912 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %912, i64* %35, align 8
  %913 = load %struct.set_family*, %struct.set_family** %15, align 8
  %914 = load %struct.set_family*, %struct.set_family** %16, align 8
  %915 = load %struct.set_family*, %struct.set_family** %17, align 8
  %916 = call i32 (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (i32 (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @verify to i32 (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %913, %struct.set_family* %914, %struct.set_family* %915)
  store i32 %916, i32* %21, align 4
  %917 = load i64, i64* %35, align 8
  %918 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %919 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %918, i32 0, i32 0
  %920 = load %struct.set_family*, %struct.set_family** %919, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %917, i32 14, %struct.set_family* %920, %struct.cost_struct* %20)
  %921 = load i32, i32* %21, align 4
  %922 = icmp ne i32 %921, 0
  br i1 %922, label %923, label %925

923:                                              ; preds = %902
  %924 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.81.387, i64 0, i64 0))
  call void @exit(i32 1) #10
  unreachable

925:                                              ; preds = %902
  %926 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.82, i64 0, i64 0))
  call void @exit(i32 0) #10
  unreachable

927:                                              ; preds = %341
  %928 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %929 = call i32 (%struct.PLA_t*, ...) bitcast (i32 (%struct.PLA_t*)* @check_consistency to i32 (%struct.PLA_t*, ...)*)(%struct.PLA_t* %928)
  store i32 0, i32* @print_solution, align 4
  br label %1058

930:                                              ; preds = %341
  %931 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %932 = call i32 (%struct.PLA_t*, ...) bitcast (i32 (%struct.PLA_t*)* @map_dcset to i32 (%struct.PLA_t*, ...)*)(%struct.PLA_t* %931)
  store i32 3, i32* %11, align 4
  br label %1058

933:                                              ; preds = %341
  %934 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %935 = call i32 (%struct.PLA_t*, ...) bitcast (i32 (%struct.PLA_t*)* @find_equiv_outputs to i32 (%struct.PLA_t*, ...)*)(%struct.PLA_t* %934)
  store i32 0, i32* @print_solution, align 4
  br label %1058

936:                                              ; preds = %341
  %937 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %938 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %937, i32 0, i32 1
  %939 = load %struct.set_family*, %struct.set_family** %938, align 8
  %940 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %941 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %940, i32 0, i32 2
  %942 = load %struct.set_family*, %struct.set_family** %941, align 8
  %943 = call i32** (%struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*)* @cube2list to i32** (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %939, %struct.set_family* %942)
  %944 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @complement to %struct.set_family* (i32**, ...)*)(i32** %943)
  %945 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %946 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %945, i32 0, i32 0
  store %struct.set_family* %944, %struct.set_family** %946, align 8
  br label %1058

947:                                              ; preds = %341
  %948 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %949 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %948, i32 0, i32 0
  %950 = load %struct.set_family*, %struct.set_family** %949, align 8
  %951 = load %struct.PLA_t*, %struct.PLA_t** %14, align 8
  %952 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %951, i32 0, i32 2
  %953 = load %struct.set_family*, %struct.set_family** %952, align 8
  %954 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @cv_intersect to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %950, %struct.set_family* %953)
  store %struct.set_family* %954, %struct.set_family** %36, align 8
  %955 = load %struct.PLA_t*, %struct.PLA_t** %14, align 8
  %956 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %955, i32 0, i32 0
  %957 = load %struct.set_family*, %struct.set_family** %956, align 8
  %958 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %959 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %958, i32 0, i32 2
  %960 = load %struct.set_family*, %struct.set_family** %959, align 8
  %961 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @cv_intersect to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %957, %struct.set_family* %960)
  store %struct.set_family* %961, %struct.set_family** %37, align 8
  %962 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %963 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %962, i32 0, i32 0
  %964 = load %struct.set_family*, %struct.set_family** %963, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %964)
  %965 = load %struct.set_family*, %struct.set_family** %36, align 8
  %966 = load %struct.set_family*, %struct.set_family** %37, align 8
  %967 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_join to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %965, %struct.set_family* %966)
  %968 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %967)
  %969 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %970 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %969, i32 0, i32 0
  store %struct.set_family* %968, %struct.set_family** %970, align 8
  %971 = load %struct.set_family*, %struct.set_family** %36, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %971)
  %972 = load %struct.set_family*, %struct.set_family** %37, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %972)
  br label %1058

973:                                              ; preds = %341
  %974 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %975 = load i32, i32* @summary, align 4
  %976 = call i32 (%struct.PLA_t*, i32, ...) bitcast (i32 (%struct.PLA_t*, i32)* @disassemble_fsm to i32 (%struct.PLA_t*, i32, ...)*)(%struct.PLA_t* %974, i32 %975)
  store i32 0, i32* @print_solution, align 4
  br label %1058

977:                                              ; preds = %341
  %978 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %979 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %978, i32 0, i32 1
  %980 = load %struct.set_family*, %struct.set_family** %979, align 8
  %981 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %982 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %981, i32 0, i32 2
  %983 = load %struct.set_family*, %struct.set_family** %982, align 8
  %984 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_join to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %980, %struct.set_family* %983)
  store %struct.set_family* %984, %struct.set_family** %38, align 8
  %985 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %986 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 10, i32 %985)
  store %struct.set_family* %986, %struct.set_family** %39, align 8
  %987 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %988 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %987, i32 0, i32 0
  %989 = load %struct.set_family*, %struct.set_family** %988, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %989)
  %990 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %990, i64* %40, align 8
  %991 = load %struct.set_family*, %struct.set_family** %38, align 8
  %992 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @cube1list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %991)
  %993 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @complement to %struct.set_family* (i32**, ...)*)(i32** %992)
  %994 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %995 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %994, i32 0, i32 0
  store %struct.set_family* %993, %struct.set_family** %995, align 8
  %996 = load i64, i64* %40, align 8
  %997 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %998 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %997, i32 0, i32 0
  %999 = load %struct.set_family*, %struct.set_family** %998, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %996, i32 1, %struct.set_family* %999, %struct.cost_struct* %20)
  %1000 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %1000, i64* %41, align 8
  %1001 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1002 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %1001, i32 0, i32 0
  %1003 = load %struct.set_family*, %struct.set_family** %1002, align 8
  %1004 = load %struct.set_family*, %struct.set_family** %38, align 8
  %1005 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, i32)* @expand to %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...)*)(%struct.set_family* %1003, %struct.set_family* %1004, i32 0)
  %1006 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1007 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %1006, i32 0, i32 0
  store %struct.set_family* %1005, %struct.set_family** %1007, align 8
  %1008 = load i64, i64* %41, align 8
  %1009 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1010 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %1009, i32 0, i32 0
  %1011 = load %struct.set_family*, %struct.set_family** %1010, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %1008, i32 4, %struct.set_family* %1011, %struct.cost_struct* %20)
  %1012 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %1012, i64* %42, align 8
  %1013 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1014 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %1013, i32 0, i32 0
  %1015 = load %struct.set_family*, %struct.set_family** %1014, align 8
  %1016 = load %struct.set_family*, %struct.set_family** %39, align 8
  %1017 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @irredundant to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %1015, %struct.set_family* %1016)
  %1018 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1019 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %1018, i32 0, i32 0
  store %struct.set_family* %1017, %struct.set_family** %1019, align 8
  %1020 = load i64, i64* %42, align 8
  %1021 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1022 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %1021, i32 0, i32 0
  %1023 = load %struct.set_family*, %struct.set_family** %1022, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %1020, i32 5, %struct.set_family* %1023, %struct.cost_struct* %20)
  %1024 = load %struct.set_family*, %struct.set_family** %38, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %1024)
  %1025 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1026 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %1025, i32 0, i32 0
  %1027 = load %struct.set_family*, %struct.set_family** %1026, align 8
  %1028 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1029 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %1028, i32 0, i32 2
  %1030 = load %struct.set_family*, %struct.set_family** %1029, align 8
  %1031 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_join to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %1027, %struct.set_family* %1030)
  store %struct.set_family* %1031, %struct.set_family** %38, align 8
  %1032 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %1032, i64* %43, align 8
  %1033 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1034 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %1033, i32 0, i32 1
  %1035 = load %struct.set_family*, %struct.set_family** %1034, align 8
  %1036 = load %struct.set_family*, %struct.set_family** %38, align 8
  %1037 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, i32)* @expand to %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...)*)(%struct.set_family* %1035, %struct.set_family* %1036, i32 0)
  %1038 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1039 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %1038, i32 0, i32 1
  store %struct.set_family* %1037, %struct.set_family** %1039, align 8
  %1040 = load i64, i64* %43, align 8
  %1041 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1042 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %1041, i32 0, i32 1
  %1043 = load %struct.set_family*, %struct.set_family** %1042, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %1040, i32 4, %struct.set_family* %1043, %struct.cost_struct* %20)
  %1044 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %1044, i64* %44, align 8
  %1045 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1046 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %1045, i32 0, i32 1
  %1047 = load %struct.set_family*, %struct.set_family** %1046, align 8
  %1048 = load %struct.set_family*, %struct.set_family** %39, align 8
  %1049 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @irredundant to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %1047, %struct.set_family* %1048)
  %1050 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1051 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %1050, i32 0, i32 1
  store %struct.set_family* %1049, %struct.set_family** %1051, align 8
  %1052 = load i64, i64* %44, align 8
  %1053 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1054 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %1053, i32 0, i32 1
  %1055 = load %struct.set_family*, %struct.set_family** %1054, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %1052, i32 5, %struct.set_family* %1055, %struct.cost_struct* %20)
  %1056 = load %struct.set_family*, %struct.set_family** %38, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %1056)
  %1057 = load %struct.set_family*, %struct.set_family** %39, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %1057)
  br label %1058

1058:                                             ; preds = %977, %973, %947, %936, %933, %930, %927, %886, %869, %824, %805, %793, %783, %773, %766, %756, %746, %739, %729, %728, %724, %721, %716, %683, %679, %678, %655, %602, %589, %576, %564, %507, %492, %477, %474, %464, %456, %387, %341
  %1059 = load i32, i32* @trace, align 4
  %1060 = icmp ne i32 %1059, 0
  br i1 %1060, label %1061, label %1063

1061:                                             ; preds = %1058
  %1062 = call i32 @runtime()
  br label %1063

1063:                                             ; preds = %1061, %1058
  %1064 = load i32, i32* @summary, align 4
  %1065 = icmp ne i32 %1064, 0
  br i1 %1065, label %1069, label %1066

1066:                                             ; preds = %1063
  %1067 = load i32, i32* @trace, align 4
  %1068 = icmp ne i32 %1067, 0
  br i1 %1068, label %1069, label %1081

1069:                                             ; preds = %1066, %1063
  %1070 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1071 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %1070, i32 0, i32 0
  %1072 = load %struct.set_family*, %struct.set_family** %1071, align 8
  %1073 = load i32, i32* %12, align 4
  %1074 = sext i32 %1073 to i64
  %1075 = getelementptr inbounds [44 x %struct.anon], [44 x %struct.anon]* @option_table, i64 0, i64 %1074
  %1076 = getelementptr inbounds %struct.anon, %struct.anon* %1075, i32 0, i32 0
  %1077 = load i8*, i8** %1076, align 8
  %1078 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %1079 = load i64, i64* %23, align 8
  %1080 = sub nsw i64 %1078, %1079
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %1072, i8* %1077, i64 %1080)
  br label %1081

1081:                                             ; preds = %1069, %1066
  %1082 = load i32, i32* @print_solution, align 4
  %1083 = icmp ne i32 %1082, 0
  br i1 %1083, label %1084, label %1093

1084:                                             ; preds = %1081
  %1085 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %1085, i64* %45, align 8
  %1086 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %1087 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1088 = load i32, i32* %11, align 4
  call void (%struct._IO_FILE*, %struct.PLA_t*, i32, ...) bitcast (void (%struct._IO_FILE*, %struct.PLA_t*, i32)* @fprint_pla to void (%struct._IO_FILE*, %struct.PLA_t*, i32, ...)*)(%struct._IO_FILE* %1086, %struct.PLA_t* %1087, i32 %1088)
  %1089 = load i64, i64* %45, align 8
  %1090 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  %1091 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %1090, i32 0, i32 0
  %1092 = load %struct.set_family*, %struct.set_family** %1091, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %1089, i32 15, %struct.set_family* %1092, %struct.cost_struct* %20)
  br label %1093

1093:                                             ; preds = %1084, %1081
  %1094 = load i32, i32* %21, align 4
  %1095 = icmp ne i32 %1094, 0
  br i1 %1095, label %1096, label %1097

1096:                                             ; preds = %1093
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.83, i64 0, i64 0))
  br label %1097

1097:                                             ; preds = %1096, %1093
  %1098 = load %struct.PLA_t*, %struct.PLA_t** %13, align 8
  call void (%struct.PLA_t*, ...) bitcast (void (%struct.PLA_t*)* @free_PLA to void (%struct.PLA_t*, ...)*)(%struct.PLA_t* %1098)
  %1099 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %1100 = icmp ne i32* %1099, null
  br i1 %1100, label %1101, label %1104

1101:                                             ; preds = %1097
  %1102 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %1103 = bitcast i32* %1102 to i8*
  call void @free(i8* %1103) #7
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  br label %1104

1104:                                             ; preds = %1101, %1097
  call void (...) bitcast (void ()* @setdown_cube to void (...)*)()
  call void (...) bitcast (void ()* @sf_cleanup to void (...)*)()
  call void (...) bitcast (void ()* @sm_cleanup to void (...)*)()
  call void @exit(i32 0) #10
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @init_runtime() #0 {
  %1 = alloca i32, align 4
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.90, i64 0, i64 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @total_name, i64 0, i64 0), align 16
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.91, i64 0, i64 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @total_name, i64 0, i64 15), align 8
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.92, i64 0, i64 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @total_name, i64 0, i64 1), align 8
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i64 0, i64 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @total_name, i64 0, i64 6), align 16
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i64 0, i64 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @total_name, i64 0, i64 4), align 16
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.95, i64 0, i64 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @total_name, i64 0, i64 3), align 8
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.96, i64 0, i64 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @total_name, i64 0, i64 5), align 8
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.97, i64 0, i64 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @total_name, i64 0, i64 9), align 8
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.98, i64 0, i64 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @total_name, i64 0, i64 7), align 8
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.99, i64 0, i64 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @total_name, i64 0, i64 8), align 16
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.100, i64 0, i64 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @total_name, i64 0, i64 12), align 16
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.101, i64 0, i64 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @total_name, i64 0, i64 13), align 8
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.102, i64 0, i64 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @total_name, i64 0, i64 14), align 16
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.77, i64 0, i64 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @total_name, i64 0, i64 10), align 16
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.103, i64 0, i64 0), i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @total_name, i64 0, i64 11), align 8
  %2 = load i32, i32* %1, align 4
  ret i32 %2
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @backward_compatibility_hack(i32* %0, i8** %1, i32* %2, i32* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32* %0, i32** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i32* %2, i32** %8, align 8
  store i32* %3, i32** %9, align 8
  %12 = load i32*, i32** %8, align 8
  store i32 0, i32* %12, align 4
  store i32 1, i32* %10, align 4
  br label %13

13:                                               ; preds = %83, %4
  %14 = load i32, i32* %10, align 4
  %15 = load i32*, i32** %6, align 8
  %16 = load i32, i32* %15, align 4
  %17 = sub nsw i32 %16, 1
  %18 = icmp slt i32 %14, %17
  br i1 %18, label %19, label %86

19:                                               ; preds = %13
  %20 = load i8**, i8*** %7, align 8
  %21 = load i32, i32* %10, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8*, i8** %20, i64 %22
  %24 = load i8*, i8** %23, align 8
  %25 = call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.132, i64 0, i64 0)) #9
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %82

27:                                               ; preds = %19
  store i32 0, i32* %11, align 4
  br label %28

28:                                               ; preds = %62, %27
  %29 = load i32, i32* %11, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [44 x %struct.anon], [44 x %struct.anon]* @option_table, i64 0, i64 %30
  %32 = getelementptr inbounds %struct.anon, %struct.anon* %31, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = icmp ne i8* %33, null
  br i1 %34, label %35, label %65

35:                                               ; preds = %28
  %36 = load i8**, i8*** %7, align 8
  %37 = load i32, i32* %10, align 4
  %38 = add nsw i32 %37, 1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8*, i8** %36, i64 %39
  %41 = load i8*, i8** %40, align 8
  %42 = load i32, i32* %11, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [44 x %struct.anon], [44 x %struct.anon]* @option_table, i64 0, i64 %43
  %45 = getelementptr inbounds %struct.anon, %struct.anon* %44, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = call i32 @strcmp(i8* %41, i8* %46) #9
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %35
  %50 = load i32, i32* %11, align 4
  %51 = load i32*, i32** %8, align 8
  store i32 %50, i32* %51, align 4
  %52 = load i32*, i32** %6, align 8
  %53 = load i8**, i8*** %7, align 8
  %54 = load i32, i32* %10, align 4
  %55 = add nsw i32 %54, 1
  %56 = call i32 @delete_arg(i32* %52, i8** %53, i32 %55)
  %57 = load i32*, i32** %6, align 8
  %58 = load i8**, i8*** %7, align 8
  %59 = load i32, i32* %10, align 4
  %60 = call i32 @delete_arg(i32* %57, i8** %58, i32 %59)
  br label %65

61:                                               ; preds = %35
  br label %62

62:                                               ; preds = %61
  %63 = load i32, i32* %11, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %11, align 4
  br label %28

65:                                               ; preds = %49, %28
  %66 = load i32, i32* %11, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [44 x %struct.anon], [44 x %struct.anon]* @option_table, i64 0, i64 %67
  %69 = getelementptr inbounds %struct.anon, %struct.anon* %68, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %72, label %81

72:                                               ; preds = %65
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %74 = load i8**, i8*** %7, align 8
  %75 = load i32, i32* %10, align 4
  %76 = add nsw i32 %75, 1
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i8*, i8** %74, i64 %77
  %79 = load i8*, i8** %78, align 8
  %80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.133, i64 0, i64 0), i8* %79)
  call void @exit(i32 1) #10
  unreachable

81:                                               ; preds = %65
  br label %86

82:                                               ; preds = %19
  br label %83

83:                                               ; preds = %82
  %84 = load i32, i32* %10, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %10, align 4
  br label %13

86:                                               ; preds = %81, %13
  store i32 1, i32* %10, align 4
  br label %87

87:                                               ; preds = %162, %86
  %88 = load i32, i32* %10, align 4
  %89 = load i32*, i32** %6, align 8
  %90 = load i32, i32* %89, align 4
  %91 = sub nsw i32 %90, 1
  %92 = icmp slt i32 %88, %91
  br i1 %92, label %93, label %165

93:                                               ; preds = %87
  %94 = load i8**, i8*** %7, align 8
  %95 = load i32, i32* %10, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8*, i8** %94, i64 %96
  %98 = load i8*, i8** %97, align 8
  %99 = call i32 @strcmp(i8* %98, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i64 0, i64 0)) #9
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %161

101:                                              ; preds = %93
  store i32 0, i32* %11, align 4
  br label %102

102:                                              ; preds = %141, %101
  %103 = load i32, i32* %11, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [0 x %struct.pla_types_struct], [0 x %struct.pla_types_struct]* bitcast ([21 x %struct.pla_types_struct]* @pla_types to [0 x %struct.pla_types_struct]*), i64 0, i64 %104
  %106 = getelementptr inbounds %struct.pla_types_struct, %struct.pla_types_struct* %105, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = icmp ne i8* %107, null
  br i1 %108, label %109, label %144

109:                                              ; preds = %102
  %110 = load i32, i32* %11, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [0 x %struct.pla_types_struct], [0 x %struct.pla_types_struct]* bitcast ([21 x %struct.pla_types_struct]* @pla_types to [0 x %struct.pla_types_struct]*), i64 0, i64 %111
  %113 = getelementptr inbounds %struct.pla_types_struct, %struct.pla_types_struct* %112, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 1
  %116 = load i8**, i8*** %7, align 8
  %117 = load i32, i32* %10, align 4
  %118 = add nsw i32 %117, 1
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8*, i8** %116, i64 %119
  %121 = load i8*, i8** %120, align 8
  %122 = call i32 @strcmp(i8* %115, i8* %121) #9
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %140

124:                                              ; preds = %109
  %125 = load i32, i32* %11, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [0 x %struct.pla_types_struct], [0 x %struct.pla_types_struct]* bitcast ([21 x %struct.pla_types_struct]* @pla_types to [0 x %struct.pla_types_struct]*), i64 0, i64 %126
  %128 = getelementptr inbounds %struct.pla_types_struct, %struct.pla_types_struct* %127, i32 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = load i32*, i32** %9, align 8
  store i32 %129, i32* %130, align 4
  %131 = load i32*, i32** %6, align 8
  %132 = load i8**, i8*** %7, align 8
  %133 = load i32, i32* %10, align 4
  %134 = add nsw i32 %133, 1
  %135 = call i32 @delete_arg(i32* %131, i8** %132, i32 %134)
  %136 = load i32*, i32** %6, align 8
  %137 = load i8**, i8*** %7, align 8
  %138 = load i32, i32* %10, align 4
  %139 = call i32 @delete_arg(i32* %136, i8** %137, i32 %138)
  br label %144

140:                                              ; preds = %109
  br label %141

141:                                              ; preds = %140
  %142 = load i32, i32* %11, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %11, align 4
  br label %102

144:                                              ; preds = %124, %102
  %145 = load i32, i32* %11, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds [0 x %struct.pla_types_struct], [0 x %struct.pla_types_struct]* bitcast ([21 x %struct.pla_types_struct]* @pla_types to [0 x %struct.pla_types_struct]*), i64 0, i64 %146
  %148 = getelementptr inbounds %struct.pla_types_struct, %struct.pla_types_struct* %147, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  %150 = icmp eq i8* %149, null
  br i1 %150, label %151, label %160

151:                                              ; preds = %144
  %152 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %153 = load i8**, i8*** %7, align 8
  %154 = load i32, i32* %10, align 4
  %155 = add nsw i32 %154, 1
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i8*, i8** %153, i64 %156
  %158 = load i8*, i8** %157, align 8
  %159 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.135, i64 0, i64 0), i8* %158)
  call void @exit(i32 1) #10
  unreachable

160:                                              ; preds = %144
  br label %165

161:                                              ; preds = %93
  br label %162

162:                                              ; preds = %161
  %163 = load i32, i32* %10, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %10, align 4
  br label %87

165:                                              ; preds = %160, %87
  store i32 1, i32* %10, align 4
  br label %166

166:                                              ; preds = %224, %165
  %167 = load i32, i32* %10, align 4
  %168 = load i32*, i32** %6, align 8
  %169 = load i32, i32* %168, align 4
  %170 = icmp slt i32 %167, %169
  br i1 %170, label %171, label %227

171:                                              ; preds = %166
  %172 = load i8**, i8*** %7, align 8
  %173 = load i32, i32* %10, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i8*, i8** %172, i64 %174
  %176 = load i8*, i8** %175, align 8
  %177 = getelementptr inbounds i8, i8* %176, i64 0
  %178 = load i8, i8* %177, align 1
  %179 = sext i8 %178 to i32
  %180 = icmp eq i32 %179, 45
  br i1 %180, label %181, label %223

181:                                              ; preds = %171
  store i32 0, i32* %11, align 4
  br label %182

182:                                              ; preds = %219, %181
  %183 = load i32, i32* %11, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [12 x %struct.anon.1], [12 x %struct.anon.1]* @esp_opt_table, i64 0, i64 %184
  %186 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %185, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = icmp ne i8* %187, null
  br i1 %188, label %189, label %222

189:                                              ; preds = %182
  %190 = load i8**, i8*** %7, align 8
  %191 = load i32, i32* %10, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i8*, i8** %190, i64 %192
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr inbounds i8, i8* %194, i64 1
  %196 = load i32, i32* %11, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds [12 x %struct.anon.1], [12 x %struct.anon.1]* @esp_opt_table, i64 0, i64 %197
  %199 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %198, i32 0, i32 0
  %200 = load i8*, i8** %199, align 8
  %201 = call i32 @strcmp(i8* %195, i8* %200) #9
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %218

203:                                              ; preds = %189
  %204 = load i32*, i32** %6, align 8
  %205 = load i8**, i8*** %7, align 8
  %206 = load i32, i32* %10, align 4
  %207 = call i32 @delete_arg(i32* %204, i8** %205, i32 %206)
  %208 = load i32, i32* %11, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds [12 x %struct.anon.1], [12 x %struct.anon.1]* @esp_opt_table, i64 0, i64 %209
  %211 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %210, i32 0, i32 2
  %212 = load i32, i32* %211, align 8
  %213 = load i32, i32* %11, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [12 x %struct.anon.1], [12 x %struct.anon.1]* @esp_opt_table, i64 0, i64 %214
  %216 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %215, i32 0, i32 1
  %217 = load i32*, i32** %216, align 8
  store i32 %212, i32* %217, align 4
  br label %222

218:                                              ; preds = %189
  br label %219

219:                                              ; preds = %218
  %220 = load i32, i32* %11, align 4
  %221 = add nsw i32 %220, 1
  store i32 %221, i32* %11, align 4
  br label %182

222:                                              ; preds = %203, %182
  br label %223

223:                                              ; preds = %222, %171
  br label %224

224:                                              ; preds = %223
  %225 = load i32, i32* %10, align 4
  %226 = add nsw i32 %225, 1
  store i32 %226, i32* %10, align 4
  br label %166

227:                                              ; preds = %166
  %228 = load i32*, i32** %6, align 8
  %229 = load i8**, i8*** %7, align 8
  %230 = call i32 @check_arg(i32* %228, i8** %229, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.136, i64 0, i64 0))
  %231 = icmp ne i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %227
  store i32 7, i32* @input_type, align 4
  br label %233

233:                                              ; preds = %232, %227
  %234 = load i32*, i32** %6, align 8
  %235 = load i8**, i8*** %7, align 8
  %236 = call i32 @check_arg(i32* %234, i8** %235, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.137, i64 0, i64 0))
  %237 = icmp ne i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %233
  store i32 5, i32* @input_type, align 4
  br label %239

239:                                              ; preds = %238, %233
  %240 = load i32*, i32** %6, align 8
  %241 = load i8**, i8*** %7, align 8
  %242 = call i32 @check_arg(i32* %240, i8** %241, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.138, i64 0, i64 0))
  %243 = icmp ne i32 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %239
  store i32 1, i32* @input_type, align 4
  br label %245

245:                                              ; preds = %244, %239
  %246 = load i32, i32* %5, align 4
  ret i32 %246
}

; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #5

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @usage() #0 {
  %1 = alloca i32, align 4
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.73, i64 0, i64 0))
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.109, i64 0, i64 0))
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.110, i64 0, i64 0))
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.111, i64 0, i64 0))
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.112, i64 0, i64 0))
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.113, i64 0, i64 0))
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.114, i64 0, i64 0))
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.115, i64 0, i64 0))
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.116, i64 0, i64 0))
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.117, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.118, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.119, i64 0, i64 0))
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.120, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.121, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.122, i64 0, i64 0))
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.123, i64 0, i64 0))
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.124, i64 0, i64 0))
  %19 = call i32 @subcommands()
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.125, i64 0, i64 0))
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.126, i64 0, i64 0))
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.127, i64 0, i64 0))
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.128, i64 0, i64 0))
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.129, i64 0, i64 0))
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.130, i64 0, i64 0))
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.131, i64 0, i64 0))
  %27 = load i32, i32* %1, align 4
  ret i32 %27
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @mybasename.386(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call i8* @strrchr(i8* %4, i32 47) #9
  store i8* %5, i8** %3, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = load i8*, i8** %3, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 1
  br label %13

11:                                               ; preds = %1
  %12 = load i8*, i8** %2, align 8
  br label %13

13:                                               ; preds = %11, %8
  %14 = phi i8* [ %10, %8 ], [ %12, %11 ]
  ret i8* %14
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @getPLA(i32 %0, i32 %1, i8** %2, i32 %3, %struct.PLA_t** %4, i32 %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8**, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.PLA_t**, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct._IO_FILE*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  store i32 %0, i32* %8, align 4
  store i32 %1, i32* %9, align 4
  store i8** %2, i8*** %10, align 8
  store i32 %3, i32* %11, align 4
  store %struct.PLA_t** %4, %struct.PLA_t*** %12, align 8
  store i32 %5, i32* %13, align 4
  %18 = load i32, i32* %8, align 4
  %19 = load i32, i32* %9, align 4
  %20 = icmp sge i32 %18, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %6
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  store %struct._IO_FILE* %22, %struct._IO_FILE** %14, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i64 0, i64 0), i8** %17, align 8
  br label %51

23:                                               ; preds = %6
  %24 = load i8**, i8*** %10, align 8
  %25 = load i32, i32* %8, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8*, i8** %24, i64 %26
  %28 = load i8*, i8** %27, align 8
  store i8* %28, i8** %17, align 8
  %29 = load i8*, i8** %17, align 8
  %30 = call i32 @strcmp(i8* %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i64 0, i64 0)) #9
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  store %struct._IO_FILE* %33, %struct._IO_FILE** %14, align 8
  br label %50

34:                                               ; preds = %23
  %35 = load i8**, i8*** %10, align 8
  %36 = load i32, i32* %8, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8*, i8** %35, i64 %37
  %39 = load i8*, i8** %38, align 8
  %40 = call %struct._IO_FILE* @fopen(i8* %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86, i64 0, i64 0))
  store %struct._IO_FILE* %40, %struct._IO_FILE** %14, align 8
  %41 = icmp eq %struct._IO_FILE* %40, null
  br i1 %41, label %42, label %49

42:                                               ; preds = %34
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %44 = load i8**, i8*** %10, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 0
  %46 = load i8*, i8** %45, align 8
  %47 = load i8*, i8** %17, align 8
  %48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.87.388, i64 0, i64 0), i8* %46, i8* %47)
  call void @exit(i32 1) #10
  unreachable

49:                                               ; preds = %34
  br label %50

50:                                               ; preds = %49, %32
  br label %51

51:                                               ; preds = %50, %21
  %52 = load i32, i32* %11, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [44 x %struct.anon], [44 x %struct.anon]* @option_table, i64 0, i64 %53
  %55 = getelementptr inbounds %struct.anon, %struct.anon* %54, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 7
  br i1 %57, label %58, label %67

58:                                               ; preds = %51
  %59 = load i32, i32* %13, align 4
  %60 = and i32 %59, 2
  %61 = icmp ne i32 %60, 0
  %62 = zext i1 %61 to i32
  store i32 %62, i32* %15, align 4
  %63 = load i32, i32* %13, align 4
  %64 = and i32 %63, 4
  %65 = icmp ne i32 %64, 0
  %66 = zext i1 %65 to i32
  store i32 %66, i32* %16, align 4
  br label %78

67:                                               ; preds = %51
  %68 = load i32, i32* %11, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [44 x %struct.anon], [44 x %struct.anon]* @option_table, i64 0, i64 %69
  %71 = getelementptr inbounds %struct.anon, %struct.anon* %70, i32 0, i32 4
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %15, align 4
  %73 = load i32, i32* %11, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [44 x %struct.anon], [44 x %struct.anon]* @option_table, i64 0, i64 %74
  %76 = getelementptr inbounds %struct.anon, %struct.anon* %75, i32 0, i32 3
  %77 = load i32, i32* %76, align 8
  store i32 %77, i32* %16, align 4
  br label %78

78:                                               ; preds = %67, %58
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %80 = load i32, i32* %15, align 4
  %81 = load i32, i32* %16, align 4
  %82 = load i32, i32* @input_type, align 4
  %83 = load %struct.PLA_t**, %struct.PLA_t*** %12, align 8
  %84 = call i32 (%struct._IO_FILE*, i32, i32, i32, %struct.PLA_t**, ...) bitcast (i32 (%struct._IO_FILE*, i32, i32, i32, %struct.PLA_t**)* @read_pla to i32 (%struct._IO_FILE*, i32, i32, i32, %struct.PLA_t**, ...)*)(%struct._IO_FILE* %79, i32 %80, i32 %81, i32 %82, %struct.PLA_t** %83)
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %86, label %93

86:                                               ; preds = %78
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %88 = load i8**, i8*** %10, align 8
  %89 = getelementptr inbounds i8*, i8** %88, i64 0
  %90 = load i8*, i8** %89, align 8
  %91 = load i8*, i8** %17, align 8
  %92 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %87, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.88, i64 0, i64 0), i8* %90, i8* %91)
  call void @exit(i32 1) #10
  unreachable

93:                                               ; preds = %78
  %94 = load i8*, i8** %17, align 8
  %95 = call i8* @util_strsav(i8* %94)
  %96 = load %struct.PLA_t**, %struct.PLA_t*** %12, align 8
  %97 = load %struct.PLA_t*, %struct.PLA_t** %96, align 8
  %98 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %97, i32 0, i32 3
  store i8* %95, i8** %98, align 8
  %99 = load %struct.PLA_t**, %struct.PLA_t*** %12, align 8
  %100 = load %struct.PLA_t*, %struct.PLA_t** %99, align 8
  %101 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %100, i32 0, i32 3
  %102 = load i8*, i8** %101, align 8
  store i8* %102, i8** @filename, align 8
  %103 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  store %struct._IO_FILE* %103, %struct._IO_FILE** @last_fp, align 8
  %104 = load i32, i32* %7, align 4
  ret i32 %104
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @runtime() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 1, i64* %3, align 8
  store i32 0, i32* %2, align 4
  br label %5

5:                                                ; preds = %15, %0
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 16
  br i1 %7, label %8, label %18

8:                                                ; preds = %5
  %9 = load i32, i32* %2, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [16 x i64], [16 x i64]* @total_time, i64 0, i64 %10
  %12 = load i64, i64* %11, align 8
  %13 = load i64, i64* %3, align 8
  %14 = add nsw i64 %13, %12
  store i64 %14, i64* %3, align 8
  br label %15

15:                                               ; preds = %8
  %16 = load i32, i32* %2, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %2, align 4
  br label %5

18:                                               ; preds = %5
  store i32 0, i32* %2, align 4
  br label %19

19:                                               ; preds = %58, %18
  %20 = load i32, i32* %2, align 4
  %21 = icmp slt i32 %20, 16
  br i1 %21, label %22, label %61

22:                                               ; preds = %19
  %23 = load i32, i32* %2, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [16 x i32], [16 x i32]* @total_calls, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %57

28:                                               ; preds = %22
  %29 = load i32, i32* %2, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [16 x i64], [16 x i64]* @total_time, i64 0, i64 %30
  %32 = load i64, i64* %31, align 8
  %33 = mul nsw i64 100, %32
  store i64 %33, i64* %4, align 8
  store i64 0, i64* %4, align 8
  %34 = load i32, i32* %2, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [16 x i8*], [16 x i8*]* @total_name, i64 0, i64 %35
  %37 = load i8*, i8** %36, align 8
  %38 = load i32, i32* %2, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [16 x i32], [16 x i32]* @total_calls, i64 0, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = load i32, i32* %2, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [16 x i64], [16 x i64]* @total_time, i64 0, i64 %43
  %45 = load i64, i64* %44, align 8
  %46 = call i8* @util_print_time(i64 %45)
  %47 = load i64, i64* %4, align 8
  %48 = load i64, i64* %3, align 8
  %49 = sdiv i64 %47, %48
  %50 = load i64, i64* %4, align 8
  %51 = load i64, i64* %3, align 8
  %52 = srem i64 %50, %51
  %53 = mul nsw i64 10, %52
  %54 = load i64, i64* %3, align 8
  %55 = sdiv i64 %53, %54
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.89, i64 0, i64 0), i8* %37, i32 %41, i8* %46, i64 %49, i64 %55)
  br label %57

57:                                               ; preds = %28, %22
  br label %58

58:                                               ; preds = %57
  %59 = load i32, i32* %2, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %2, align 4
  br label %19

61:                                               ; preds = %19
  %62 = load i32, i32* %1, align 4
  ret i32 %62
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @subcommands() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.104, i64 0, i64 0))
  store i32 16, i32* %3, align 4
  store i32 0, i32* %2, align 4
  br label %5

5:                                                ; preds = %50, %0
  %6 = load i32, i32* %2, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [44 x %struct.anon], [44 x %struct.anon]* @option_table, i64 0, i64 %7
  %9 = getelementptr inbounds %struct.anon, %struct.anon* %8, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ne i8* %10, null
  br i1 %11, label %12, label %53

12:                                               ; preds = %5
  %13 = load i32, i32* %3, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32, i32* %2, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [44 x %struct.anon], [44 x %struct.anon]* @option_table, i64 0, i64 %16
  %18 = getelementptr inbounds %struct.anon, %struct.anon* %17, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = call i64 @strlen(i8* %19) #9
  %21 = add i64 %14, %20
  %22 = add i64 %21, 1
  %23 = icmp ugt i64 %22, 76
  br i1 %23, label %24, label %26

24:                                               ; preds = %12
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.105, i64 0, i64 0))
  store i32 16, i32* %3, align 4
  br label %32

26:                                               ; preds = %12
  %27 = load i32, i32* %2, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.106, i64 0, i64 0))
  br label %31

31:                                               ; preds = %29, %26
  br label %32

32:                                               ; preds = %31, %24
  %33 = load i32, i32* %2, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [44 x %struct.anon], [44 x %struct.anon]* @option_table, i64 0, i64 %34
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %35, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.107, i64 0, i64 0), i8* %37)
  %39 = load i32, i32* %2, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [44 x %struct.anon], [44 x %struct.anon]* @option_table, i64 0, i64 %40
  %42 = getelementptr inbounds %struct.anon, %struct.anon* %41, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = call i64 @strlen(i8* %43) #9
  %45 = add i64 %44, 2
  %46 = load i32, i32* %3, align 4
  %47 = sext i32 %46 to i64
  %48 = add i64 %47, %45
  %49 = trunc i64 %48 to i32
  store i32 %49, i32* %3, align 4
  br label %50

50:                                               ; preds = %32
  %51 = load i32, i32* %2, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %2, align 4
  br label %5

53:                                               ; preds = %5
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71, i64 0, i64 0))
  %55 = load i32, i32* %1, align 4
  ret i32 %55
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @delete_arg(i32* %0, i8** %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32* %0, i32** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i32 %2, i32* %7, align 4
  %9 = load i32*, i32** %5, align 8
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, -1
  store i32 %11, i32* %9, align 4
  %12 = load i32, i32* %7, align 4
  store i32 %12, i32* %8, align 4
  br label %13

13:                                               ; preds = %29, %3
  %14 = load i32, i32* %8, align 4
  %15 = load i32*, i32** %5, align 8
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %14, %16
  br i1 %17, label %18, label %32

18:                                               ; preds = %13
  %19 = load i8**, i8*** %6, align 8
  %20 = load i32, i32* %8, align 4
  %21 = add nsw i32 %20, 1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8*, i8** %19, i64 %22
  %24 = load i8*, i8** %23, align 8
  %25 = load i8**, i8*** %6, align 8
  %26 = load i32, i32* %8, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8*, i8** %25, i64 %27
  store i8* %24, i8** %28, align 8
  br label %29

29:                                               ; preds = %18
  %30 = load i32, i32* %8, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %8, align 4
  br label %13

32:                                               ; preds = %13
  %33 = load i32, i32* %4, align 4
  ret i32 %33
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @check_arg(i32* %0, i8** %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store i32* %0, i32** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i8* %2, i8** %7, align 8
  store i32 1, i32* %8, align 4
  br label %9

9:                                                ; preds = %29, %3
  %10 = load i32, i32* %8, align 4
  %11 = load i32*, i32** %5, align 8
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %10, %12
  br i1 %13, label %14, label %32

14:                                               ; preds = %9
  %15 = load i8**, i8*** %6, align 8
  %16 = load i32, i32* %8, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8*, i8** %15, i64 %17
  %19 = load i8*, i8** %18, align 8
  %20 = load i8*, i8** %7, align 8
  %21 = call i32 @strcmp(i8* %19, i8* %20) #9
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = load i32*, i32** %5, align 8
  %25 = load i8**, i8*** %6, align 8
  %26 = load i32, i32* %8, align 4
  %27 = call i32 @delete_arg(i32* %24, i8** %25, i32 %26)
  store i32 1, i32* %4, align 4
  br label %33

28:                                               ; preds = %14
  br label %29

29:                                               ; preds = %28
  %30 = load i32, i32* %8, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %8, align 4
  br label %9

32:                                               ; preds = %9
  store i32 0, i32* %4, align 4
  br label %33

33:                                               ; preds = %32, %23
  %34 = load i32, i32* %4, align 4
  ret i32 %34
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @minterms(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  store i32 1, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %6

6:                                                ; preds = %18, %1
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %9 = icmp slt i32 %7, %8
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %12 = load i32, i32* %4, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i32, i32* %11, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %3, align 4
  %17 = mul nsw i32 %16, %15
  store i32 %17, i32* %3, align 4
  br label %18

18:                                               ; preds = %10
  %19 = load i32, i32* %4, align 4
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %4, align 4
  br label %6

21:                                               ; preds = %6
  %22 = load i32, i32* %3, align 4
  %23 = icmp sle i32 %22, 32
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  br label %31

25:                                               ; preds = %21
  %26 = load i32, i32* %3, align 4
  %27 = sub nsw i32 %26, 1
  %28 = ashr i32 %27, 5
  %29 = add nsw i32 %28, 1
  %30 = add nsw i32 %29, 1
  br label %31

31:                                               ; preds = %25, %24
  %32 = phi i32 [ 2, %24 ], [ %30, %25 ]
  %33 = sext i32 %32 to i64
  %34 = mul i64 4, %33
  %35 = call noalias i8* @malloc(i64 %34) #7
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %3, align 4
  %38 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %36, i32 %37)
  store i32* %38, i32** @Gminterm, align 8
  %39 = load %struct.set_family*, %struct.set_family** %2, align 8
  %40 = getelementptr inbounds %struct.set_family, %struct.set_family* %39, i32 0, i32 5
  %41 = load i32*, i32** %40, align 8
  store i32* %41, i32** @Gcube, align 8
  %42 = load i32*, i32** @Gcube, align 8
  %43 = load %struct.set_family*, %struct.set_family** %2, align 8
  %44 = getelementptr inbounds %struct.set_family, %struct.set_family* %43, i32 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = load %struct.set_family*, %struct.set_family** %2, align 8
  %47 = getelementptr inbounds %struct.set_family, %struct.set_family* %46, i32 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = mul nsw i32 %45, %48
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, i32* %42, i64 %50
  store i32* %51, i32** %5, align 8
  br label %52

52:                                               ; preds = %59, %31
  %53 = load i32*, i32** @Gcube, align 8
  %54 = load i32*, i32** %5, align 8
  %55 = icmp ult i32* %53, %54
  br i1 %55, label %56, label %66

56:                                               ; preds = %52
  %57 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %58 = sub nsw i32 %57, 1
  call void @explode(i32 %58, i32 0)
  br label %59

59:                                               ; preds = %56
  %60 = load %struct.set_family*, %struct.set_family** %2, align 8
  %61 = getelementptr inbounds %struct.set_family, %struct.set_family* %60, i32 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = load i32*, i32** @Gcube, align 8
  %64 = sext i32 %62 to i64
  %65 = getelementptr inbounds i32, i32* %63, i64 %64
  store i32* %65, i32** @Gcube, align 8
  br label %52

66:                                               ; preds = %52
  %67 = load i32*, i32** @Gminterm, align 8
  ret i32* %67
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @explode(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %7 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %8 = load i32, i32* %3, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i32, i32* %7, i64 %9
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %6, align 4
  %12 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %13 = load i32, i32* %3, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %12, i64 %14
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %5, align 4
  %17 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %18 = load i32, i32* %3, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = load i32, i32* %4, align 4
  %23 = mul nsw i32 %22, %21
  store i32 %23, i32* %4, align 4
  br label %24

24:                                               ; preds = %62, %2
  %25 = load i32, i32* %5, align 4
  %26 = load i32, i32* %6, align 4
  %27 = icmp sle i32 %25, %26
  br i1 %27, label %28, label %67

28:                                               ; preds = %24
  %29 = load i32*, i32** @Gcube, align 8
  %30 = load i32, i32* %5, align 4
  %31 = ashr i32 %30, 5
  %32 = add nsw i32 %31, 1
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i32, i32* %29, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = load i32, i32* %5, align 4
  %37 = and i32 %36, 31
  %38 = shl i32 1, %37
  %39 = and i32 %35, %38
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %61

41:                                               ; preds = %28
  %42 = load i32, i32* %3, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %41
  %45 = load i32, i32* %4, align 4
  %46 = and i32 %45, 31
  %47 = shl i32 1, %46
  %48 = load i32*, i32** @Gminterm, align 8
  %49 = load i32, i32* %4, align 4
  %50 = ashr i32 %49, 5
  %51 = add nsw i32 %50, 1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, i32* %48, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = or i32 %54, %47
  store i32 %55, i32* %53, align 4
  br label %60

56:                                               ; preds = %41
  %57 = load i32, i32* %3, align 4
  %58 = sub nsw i32 %57, 1
  %59 = load i32, i32* %4, align 4
  call void @explode(i32 %58, i32 %59)
  br label %60

60:                                               ; preds = %56, %44
  br label %61

61:                                               ; preds = %60, %28
  br label %62

62:                                               ; preds = %61
  %63 = load i32, i32* %5, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %5, align 4
  %65 = load i32, i32* %4, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %4, align 4
  br label %24

67:                                               ; preds = %24
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @map(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %15 = load %struct.set_family*, %struct.set_family** %2, align 8
  %16 = call i32* @minterms(%struct.set_family* %15)
  store i32* %16, i32** %13, align 8
  %17 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %18 = shl i32 1, %17
  store i32 %18, i32* %10, align 4
  %19 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %20 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %21 = sub nsw i32 %20, 1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i32, i32* %19, i64 %22
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %11, align 4
  store i32 0, i32* %8, align 4
  br label %25

25:                                               ; preds = %152, %1
  %26 = load i32, i32* %8, align 4
  %27 = load i32, i32* %11, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %29, label %155

29:                                               ; preds = %25
  %30 = load i32, i32* %8, align 4
  %31 = load i32, i32* %10, align 4
  %32 = mul nsw i32 %30, %31
  store i32 %32, i32* %7, align 4
  %33 = load i32, i32* %8, align 4
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.391, i64 0, i64 0), i32 %33)
  store i32 0, i32* %5, align 4
  br label %35

35:                                               ; preds = %148, %29
  %36 = load i32, i32* %5, align 4
  %37 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %38 = sub nsw i32 %37, 8
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %42 = sub nsw i32 %41, 8
  br label %44

43:                                               ; preds = %35
  br label %44

44:                                               ; preds = %43, %40
  %45 = phi i32 [ %42, %40 ], [ 0, %43 ]
  %46 = icmp sle i32 %36, %45
  br i1 %46, label %47, label %151

47:                                               ; preds = %44
  %48 = load i32, i32* %5, align 4
  %49 = mul nsw i32 %48, 256
  store i32 %49, i32* %6, align 4
  store i32 0, i32* %4, align 4
  br label %50

50:                                               ; preds = %144, %47
  %51 = load i32, i32* %4, align 4
  %52 = icmp slt i32 %51, 16
  br i1 %52, label %53, label %147

53:                                               ; preds = %50
  store i32 0, i32* %14, align 4
  store i32 0, i32* %3, align 4
  br label %54

54:                                               ; preds = %108, %53
  %55 = load i32, i32* %3, align 4
  %56 = icmp slt i32 %55, 16
  br i1 %56, label %57, label %111

57:                                               ; preds = %54
  %58 = load i32, i32* %4, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @mapindex, i64 0, i64 %59
  %61 = load i32, i32* %3, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [16 x i32], [16 x i32]* %60, i64 0, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = load i32, i32* %6, align 4
  %66 = add nsw i32 %64, %65
  store i32 %66, i32* %9, align 4
  %67 = load i32, i32* %9, align 4
  %68 = load i32, i32* %10, align 4
  %69 = icmp slt i32 %67, %68
  br i1 %69, label %70, label %93

70:                                               ; preds = %57
  %71 = load i32*, i32** %13, align 8
  %72 = load i32, i32* %9, align 4
  %73 = load i32, i32* %7, align 4
  %74 = add nsw i32 %72, %73
  %75 = ashr i32 %74, 5
  %76 = add nsw i32 %75, 1
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i32, i32* %71, i64 %77
  %79 = load i32, i32* %78, align 4
  %80 = load i32, i32* %9, align 4
  %81 = load i32, i32* %7, align 4
  %82 = add nsw i32 %80, %81
  %83 = and i32 %82, 31
  %84 = shl i32 1, %83
  %85 = and i32 %79, %84
  %86 = icmp ne i32 %85, 0
  %87 = zext i1 %86 to i64
  %88 = select i1 %86, i32 49, i32 46
  %89 = trunc i32 %88 to i8
  store i8 %89, i8* %12, align 1
  %90 = load i8, i8* %12, align 1
  %91 = sext i8 %90 to i32
  %92 = call i32 @putchar(i32 %91)
  store i32 1, i32* %14, align 4
  br label %93

93:                                               ; preds = %70, %57
  %94 = load i32, i32* %3, align 4
  %95 = add nsw i32 %94, 1
  %96 = srem i32 %95, 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %93
  %99 = call i32 @putchar(i32 32)
  br label %100

100:                                              ; preds = %98, %93
  %101 = load i32, i32* %3, align 4
  %102 = add nsw i32 %101, 1
  %103 = srem i32 %102, 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %100
  %106 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.392, i64 0, i64 0))
  br label %107

107:                                              ; preds = %105, %100
  br label %108

108:                                              ; preds = %107
  %109 = load i32, i32* %3, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %3, align 4
  br label %54

111:                                              ; preds = %54
  %112 = load i32, i32* %14, align 4
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %111
  %115 = call i32 @putchar(i32 10)
  br label %116

116:                                              ; preds = %114, %111
  %117 = load i32, i32* %4, align 4
  %118 = add nsw i32 %117, 1
  %119 = srem i32 %118, 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %136

121:                                              ; preds = %116
  %122 = load i32, i32* %4, align 4
  %123 = icmp ne i32 %122, 15
  br i1 %123, label %124, label %134

124:                                              ; preds = %121
  %125 = load i32, i32* %4, align 4
  %126 = add nsw i32 %125, 1
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @mapindex, i64 0, i64 %127
  %129 = getelementptr inbounds [16 x i32], [16 x i32]* %128, i64 0, i64 0
  %130 = load i32, i32* %129, align 16
  %131 = load i32, i32* %10, align 4
  %132 = icmp sge i32 %130, %131
  br i1 %132, label %133, label %134

133:                                              ; preds = %124
  br label %147

134:                                              ; preds = %124, %121
  %135 = call i32 @putchar(i32 10)
  br label %136

136:                                              ; preds = %134, %116
  %137 = load i32, i32* %4, align 4
  %138 = add nsw i32 %137, 1
  %139 = srem i32 %138, 8
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %136
  %142 = call i32 @putchar(i32 10)
  br label %143

143:                                              ; preds = %141, %136
  br label %144

144:                                              ; preds = %143
  %145 = load i32, i32* %4, align 4
  %146 = add nsw i32 %145, 1
  store i32 %146, i32* %4, align 4
  br label %50

147:                                              ; preds = %133, %50
  br label %148

148:                                              ; preds = %147
  %149 = load i32, i32* %5, align 4
  %150 = add nsw i32 %149, 1
  store i32 %150, i32* %5, align 4
  br label %35

151:                                              ; preds = %44
  br label %152

152:                                              ; preds = %151
  %153 = load i32, i32* %8, align 4
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %8, align 4
  br label %25

155:                                              ; preds = %25
  %156 = load i32*, i32** %13, align 8
  %157 = icmp ne i32* %156, null
  br i1 %157, label %158, label %161

158:                                              ; preds = %155
  %159 = load i32*, i32** %13, align 8
  %160 = bitcast i32* %159 to i8*
  call void @free(i8* %160) #7
  store i32* null, i32** %13, align 8
  br label %161

161:                                              ; preds = %158, %155
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_matrix_struct* @sm_alloc() #0 {
  %1 = alloca %struct.sm_matrix_struct*, align 8
  %2 = call noalias i8* @malloc(i64 88) #7
  %3 = bitcast i8* %2 to %struct.sm_matrix_struct*
  store %struct.sm_matrix_struct* %3, %struct.sm_matrix_struct** %1, align 8
  %4 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %1, align 8
  %5 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %4, i32 0, i32 0
  store %struct.sm_row_struct** null, %struct.sm_row_struct*** %5, align 8
  %6 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %1, align 8
  %7 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %6, i32 0, i32 2
  store %struct.sm_col_struct** null, %struct.sm_col_struct*** %7, align 8
  %8 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %1, align 8
  %9 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %8, i32 0, i32 9
  store i32 0, i32* %9, align 8
  %10 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %1, align 8
  %11 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %10, i32 0, i32 6
  store i32 0, i32* %11, align 8
  %12 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %1, align 8
  %13 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %12, i32 0, i32 3
  store i32 0, i32* %13, align 8
  %14 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %1, align 8
  %15 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %14, i32 0, i32 1
  store i32 0, i32* %15, align 8
  %16 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %1, align 8
  %17 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %16, i32 0, i32 5
  store %struct.sm_row_struct* null, %struct.sm_row_struct** %17, align 8
  %18 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %1, align 8
  %19 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %18, i32 0, i32 4
  store %struct.sm_row_struct* null, %struct.sm_row_struct** %19, align 8
  %20 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %1, align 8
  %21 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %20, i32 0, i32 8
  store %struct.sm_col_struct* null, %struct.sm_col_struct** %21, align 8
  %22 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %1, align 8
  %23 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %22, i32 0, i32 7
  store %struct.sm_col_struct* null, %struct.sm_col_struct** %23, align 8
  %24 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %1, align 8
  %25 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %24, i32 0, i32 10
  store i8* null, i8** %25, align 8
  %26 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %1, align 8
  ret %struct.sm_matrix_struct* %26
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_matrix_struct* @sm_alloc_size(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.sm_matrix_struct*, align 8
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %6 = call %struct.sm_matrix_struct* @sm_alloc()
  store %struct.sm_matrix_struct* %6, %struct.sm_matrix_struct** %5, align 8
  %7 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %8 = load i32, i32* %3, align 4
  %9 = load i32, i32* %4, align 4
  call void @sm_resize(%struct.sm_matrix_struct* %7, i32 %8, i32 %9)
  %10 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  ret %struct.sm_matrix_struct* %10
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_resize(%struct.sm_matrix_struct* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.sm_matrix_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %9 = load i32, i32* %5, align 4
  %10 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %11 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sge i32 %9, %12
  br i1 %13, label %14, label %77

14:                                               ; preds = %3
  %15 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %16 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = mul nsw i32 %17, 2
  %19 = load i32, i32* %5, align 4
  %20 = add nsw i32 %19, 1
  %21 = icmp sgt i32 %18, %20
  br i1 %21, label %22, label %27

22:                                               ; preds = %14
  %23 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %24 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = mul nsw i32 %25, 2
  br label %30

27:                                               ; preds = %14
  %28 = load i32, i32* %5, align 4
  %29 = add nsw i32 %28, 1
  br label %30

30:                                               ; preds = %27, %22
  %31 = phi i32 [ %26, %22 ], [ %29, %27 ]
  store i32 %31, i32* %8, align 4
  %32 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %33 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %32, i32 0, i32 0
  %34 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %33, align 8
  %35 = icmp ne %struct.sm_row_struct** %34, null
  br i1 %35, label %36, label %46

36:                                               ; preds = %30
  %37 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %38 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %37, i32 0, i32 0
  %39 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %38, align 8
  %40 = bitcast %struct.sm_row_struct** %39 to i8*
  %41 = load i32, i32* %8, align 4
  %42 = sext i32 %41 to i64
  %43 = mul i64 8, %42
  %44 = call i8* @realloc(i8* %40, i64 %43) #7
  %45 = bitcast i8* %44 to %struct.sm_row_struct**
  br label %52

46:                                               ; preds = %30
  %47 = load i32, i32* %8, align 4
  %48 = sext i32 %47 to i64
  %49 = mul i64 8, %48
  %50 = call noalias i8* @malloc(i64 %49) #7
  %51 = bitcast i8* %50 to %struct.sm_row_struct**
  br label %52

52:                                               ; preds = %46, %36
  %53 = phi %struct.sm_row_struct** [ %45, %36 ], [ %51, %46 ]
  %54 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %55 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %54, i32 0, i32 0
  store %struct.sm_row_struct** %53, %struct.sm_row_struct*** %55, align 8
  %56 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %57 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  store i32 %58, i32* %7, align 4
  br label %59

59:                                               ; preds = %70, %52
  %60 = load i32, i32* %7, align 4
  %61 = load i32, i32* %8, align 4
  %62 = icmp slt i32 %60, %61
  br i1 %62, label %63, label %73

63:                                               ; preds = %59
  %64 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %65 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %64, i32 0, i32 0
  %66 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %65, align 8
  %67 = load i32, i32* %7, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %66, i64 %68
  store %struct.sm_row_struct* null, %struct.sm_row_struct** %69, align 8
  br label %70

70:                                               ; preds = %63
  %71 = load i32, i32* %7, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %7, align 4
  br label %59

73:                                               ; preds = %59
  %74 = load i32, i32* %8, align 4
  %75 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %76 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %75, i32 0, i32 1
  store i32 %74, i32* %76, align 8
  br label %77

77:                                               ; preds = %73, %3
  %78 = load i32, i32* %6, align 4
  %79 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %80 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %79, i32 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = icmp sge i32 %78, %81
  br i1 %82, label %83, label %146

83:                                               ; preds = %77
  %84 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %85 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %84, i32 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = mul nsw i32 %86, 2
  %88 = load i32, i32* %6, align 4
  %89 = add nsw i32 %88, 1
  %90 = icmp sgt i32 %87, %89
  br i1 %90, label %91, label %96

91:                                               ; preds = %83
  %92 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %93 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %92, i32 0, i32 3
  %94 = load i32, i32* %93, align 8
  %95 = mul nsw i32 %94, 2
  br label %99

96:                                               ; preds = %83
  %97 = load i32, i32* %6, align 4
  %98 = add nsw i32 %97, 1
  br label %99

99:                                               ; preds = %96, %91
  %100 = phi i32 [ %95, %91 ], [ %98, %96 ]
  store i32 %100, i32* %8, align 4
  %101 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %102 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %101, i32 0, i32 2
  %103 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %102, align 8
  %104 = icmp ne %struct.sm_col_struct** %103, null
  br i1 %104, label %105, label %115

105:                                              ; preds = %99
  %106 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %107 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %106, i32 0, i32 2
  %108 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %107, align 8
  %109 = bitcast %struct.sm_col_struct** %108 to i8*
  %110 = load i32, i32* %8, align 4
  %111 = sext i32 %110 to i64
  %112 = mul i64 8, %111
  %113 = call i8* @realloc(i8* %109, i64 %112) #7
  %114 = bitcast i8* %113 to %struct.sm_col_struct**
  br label %121

115:                                              ; preds = %99
  %116 = load i32, i32* %8, align 4
  %117 = sext i32 %116 to i64
  %118 = mul i64 8, %117
  %119 = call noalias i8* @malloc(i64 %118) #7
  %120 = bitcast i8* %119 to %struct.sm_col_struct**
  br label %121

121:                                              ; preds = %115, %105
  %122 = phi %struct.sm_col_struct** [ %114, %105 ], [ %120, %115 ]
  %123 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %124 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %123, i32 0, i32 2
  store %struct.sm_col_struct** %122, %struct.sm_col_struct*** %124, align 8
  %125 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %126 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %125, i32 0, i32 3
  %127 = load i32, i32* %126, align 8
  store i32 %127, i32* %7, align 4
  br label %128

128:                                              ; preds = %139, %121
  %129 = load i32, i32* %7, align 4
  %130 = load i32, i32* %8, align 4
  %131 = icmp slt i32 %129, %130
  br i1 %131, label %132, label %142

132:                                              ; preds = %128
  %133 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %134 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %133, i32 0, i32 2
  %135 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %134, align 8
  %136 = load i32, i32* %7, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %135, i64 %137
  store %struct.sm_col_struct* null, %struct.sm_col_struct** %138, align 8
  br label %139

139:                                              ; preds = %132
  %140 = load i32, i32* %7, align 4
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %7, align 4
  br label %128

142:                                              ; preds = %128
  %143 = load i32, i32* %8, align 4
  %144 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %145 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %144, i32 0, i32 3
  store i32 %143, i32* %145, align 8
  br label %146

146:                                              ; preds = %142, %77
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_free(%struct.sm_matrix_struct* %0) #0 {
  %2 = alloca %struct.sm_matrix_struct*, align 8
  %3 = alloca %struct.sm_row_struct*, align 8
  %4 = alloca %struct.sm_row_struct*, align 8
  %5 = alloca %struct.sm_col_struct*, align 8
  %6 = alloca %struct.sm_col_struct*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %2, align 8
  %7 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %8 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %7, i32 0, i32 4
  %9 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  store %struct.sm_row_struct* %9, %struct.sm_row_struct** %3, align 8
  br label %10

10:                                               ; preds = %18, %1
  %11 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %12 = icmp ne %struct.sm_row_struct* %11, null
  br i1 %12, label %13, label %20

13:                                               ; preds = %10
  %14 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %15 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %14, i32 0, i32 5
  %16 = load %struct.sm_row_struct*, %struct.sm_row_struct** %15, align 8
  store %struct.sm_row_struct* %16, %struct.sm_row_struct** %4, align 8
  %17 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  call void (%struct.sm_row_struct*, ...) bitcast (void (%struct.sm_row_struct*)* @sm_row_free to void (%struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %17)
  br label %18

18:                                               ; preds = %13
  %19 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  store %struct.sm_row_struct* %19, %struct.sm_row_struct** %3, align 8
  br label %10

20:                                               ; preds = %10
  %21 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %22 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %21, i32 0, i32 7
  %23 = load %struct.sm_col_struct*, %struct.sm_col_struct** %22, align 8
  store %struct.sm_col_struct* %23, %struct.sm_col_struct** %5, align 8
  br label %24

24:                                               ; preds = %36, %20
  %25 = load %struct.sm_col_struct*, %struct.sm_col_struct** %5, align 8
  %26 = icmp ne %struct.sm_col_struct* %25, null
  br i1 %26, label %27, label %38

27:                                               ; preds = %24
  %28 = load %struct.sm_col_struct*, %struct.sm_col_struct** %5, align 8
  %29 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %28, i32 0, i32 5
  %30 = load %struct.sm_col_struct*, %struct.sm_col_struct** %29, align 8
  store %struct.sm_col_struct* %30, %struct.sm_col_struct** %6, align 8
  %31 = load %struct.sm_col_struct*, %struct.sm_col_struct** %5, align 8
  %32 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %31, i32 0, i32 4
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %32, align 8
  %33 = load %struct.sm_col_struct*, %struct.sm_col_struct** %5, align 8
  %34 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %33, i32 0, i32 3
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %34, align 8
  %35 = load %struct.sm_col_struct*, %struct.sm_col_struct** %5, align 8
  call void (%struct.sm_col_struct*, ...) bitcast (void (%struct.sm_col_struct*)* @sm_col_free to void (%struct.sm_col_struct*, ...)*)(%struct.sm_col_struct* %35)
  br label %36

36:                                               ; preds = %27
  %37 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  store %struct.sm_col_struct* %37, %struct.sm_col_struct** %5, align 8
  br label %24

38:                                               ; preds = %24
  %39 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %40 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %39, i32 0, i32 0
  %41 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %40, align 8
  %42 = icmp ne %struct.sm_row_struct** %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %38
  %44 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %45 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %44, i32 0, i32 0
  %46 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %45, align 8
  %47 = bitcast %struct.sm_row_struct** %46 to i8*
  call void @free(i8* %47) #7
  %48 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %49 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %48, i32 0, i32 0
  store %struct.sm_row_struct** null, %struct.sm_row_struct*** %49, align 8
  br label %50

50:                                               ; preds = %43, %38
  %51 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %52 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %51, i32 0, i32 2
  %53 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %52, align 8
  %54 = icmp ne %struct.sm_col_struct** %53, null
  br i1 %54, label %55, label %62

55:                                               ; preds = %50
  %56 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %57 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %56, i32 0, i32 2
  %58 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %57, align 8
  %59 = bitcast %struct.sm_col_struct** %58 to i8*
  call void @free(i8* %59) #7
  %60 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %61 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %60, i32 0, i32 2
  store %struct.sm_col_struct** null, %struct.sm_col_struct*** %61, align 8
  br label %62

62:                                               ; preds = %55, %50
  %63 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %64 = icmp ne %struct.sm_matrix_struct* %63, null
  br i1 %64, label %65, label %68

65:                                               ; preds = %62
  %66 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %67 = bitcast %struct.sm_matrix_struct* %66 to i8*
  call void @free(i8* %67) #7
  store %struct.sm_matrix_struct* null, %struct.sm_matrix_struct** %2, align 8
  br label %68

68:                                               ; preds = %65, %62
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_matrix_struct* @sm_dup(%struct.sm_matrix_struct* %0) #0 {
  %2 = alloca %struct.sm_matrix_struct*, align 8
  %3 = alloca %struct.sm_row_struct*, align 8
  %4 = alloca %struct.sm_element_struct*, align 8
  %5 = alloca %struct.sm_matrix_struct*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %2, align 8
  %6 = call %struct.sm_matrix_struct* @sm_alloc()
  store %struct.sm_matrix_struct* %6, %struct.sm_matrix_struct** %5, align 8
  %7 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %8 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %7, i32 0, i32 5
  %9 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %10 = icmp ne %struct.sm_row_struct* %9, null
  br i1 %10, label %11, label %55

11:                                               ; preds = %1
  %12 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %13 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %14 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %13, i32 0, i32 5
  %15 = load %struct.sm_row_struct*, %struct.sm_row_struct** %14, align 8
  %16 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %19 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %18, i32 0, i32 8
  %20 = load %struct.sm_col_struct*, %struct.sm_col_struct** %19, align 8
  %21 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %20, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  call void @sm_resize(%struct.sm_matrix_struct* %12, i32 %17, i32 %22)
  %23 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %24 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %23, i32 0, i32 4
  %25 = load %struct.sm_row_struct*, %struct.sm_row_struct** %24, align 8
  store %struct.sm_row_struct* %25, %struct.sm_row_struct** %3, align 8
  br label %26

26:                                               ; preds = %50, %11
  %27 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %28 = icmp ne %struct.sm_row_struct* %27, null
  br i1 %28, label %29, label %54

29:                                               ; preds = %26
  %30 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %31 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %30, i32 0, i32 3
  %32 = load %struct.sm_element_struct*, %struct.sm_element_struct** %31, align 8
  store %struct.sm_element_struct* %32, %struct.sm_element_struct** %4, align 8
  br label %33

33:                                               ; preds = %45, %29
  %34 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %35 = icmp ne %struct.sm_element_struct* %34, null
  br i1 %35, label %36, label %49

36:                                               ; preds = %33
  %37 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %38 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %39 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %38, i32 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %42 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = call %struct.sm_element_struct* @sm_insert(%struct.sm_matrix_struct* %37, i32 %40, i32 %43)
  br label %45

45:                                               ; preds = %36
  %46 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %47 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %46, i32 0, i32 4
  %48 = load %struct.sm_element_struct*, %struct.sm_element_struct** %47, align 8
  store %struct.sm_element_struct* %48, %struct.sm_element_struct** %4, align 8
  br label %33

49:                                               ; preds = %33
  br label %50

50:                                               ; preds = %49
  %51 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %52 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %51, i32 0, i32 5
  %53 = load %struct.sm_row_struct*, %struct.sm_row_struct** %52, align 8
  store %struct.sm_row_struct* %53, %struct.sm_row_struct** %3, align 8
  br label %26

54:                                               ; preds = %26
  br label %55

55:                                               ; preds = %54, %1
  %56 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  ret %struct.sm_matrix_struct* %56
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_element_struct* @sm_insert(%struct.sm_matrix_struct* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.sm_matrix_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.sm_row_struct*, align 8
  %8 = alloca %struct.sm_col_struct*, align 8
  %9 = alloca %struct.sm_element_struct*, align 8
  %10 = alloca %struct.sm_element_struct*, align 8
  %11 = alloca %struct.sm_row_struct*, align 8
  %12 = alloca %struct.sm_col_struct*, align 8
  %13 = alloca %struct.sm_element_struct*, align 8
  %14 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %15 = load i32, i32* %5, align 4
  %16 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %17 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp sge i32 %15, %18
  br i1 %19, label %26, label %20

20:                                               ; preds = %3
  %21 = load i32, i32* %6, align 4
  %22 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %23 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %22, i32 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = icmp sge i32 %21, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %20, %3
  %27 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %28 = load i32, i32* %5, align 4
  %29 = load i32, i32* %6, align 4
  call void @sm_resize(%struct.sm_matrix_struct* %27, i32 %28, i32 %29)
  br label %30

30:                                               ; preds = %26, %20
  %31 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %32 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %31, i32 0, i32 0
  %33 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %32, align 8
  %34 = load i32, i32* %5, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %33, i64 %35
  %37 = load %struct.sm_row_struct*, %struct.sm_row_struct** %36, align 8
  store %struct.sm_row_struct* %37, %struct.sm_row_struct** %7, align 8
  %38 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %39 = icmp eq %struct.sm_row_struct* %38, null
  br i1 %39, label %40, label %189

40:                                               ; preds = %30
  %41 = call %struct.sm_row_struct* (...) bitcast (%struct.sm_row_struct* ()* @sm_row_alloc to %struct.sm_row_struct* (...)*)()
  %42 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %43 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %42, i32 0, i32 0
  %44 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %43, align 8
  %45 = load i32, i32* %5, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %44, i64 %46
  store %struct.sm_row_struct* %41, %struct.sm_row_struct** %47, align 8
  store %struct.sm_row_struct* %41, %struct.sm_row_struct** %7, align 8
  %48 = load i32, i32* %5, align 4
  %49 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %50 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %49, i32 0, i32 0
  store i32 %48, i32* %50, align 8
  %51 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %52 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %51, i32 0, i32 5
  %53 = load %struct.sm_row_struct*, %struct.sm_row_struct** %52, align 8
  %54 = icmp eq %struct.sm_row_struct* %53, null
  br i1 %54, label %55, label %73

55:                                               ; preds = %40
  %56 = load i32, i32* %5, align 4
  %57 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %58 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %57, i32 0, i32 0
  store i32 %56, i32* %58, align 8
  %59 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %60 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %61 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %60, i32 0, i32 4
  store %struct.sm_row_struct* %59, %struct.sm_row_struct** %61, align 8
  %62 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %63 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %64 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %63, i32 0, i32 5
  store %struct.sm_row_struct* %62, %struct.sm_row_struct** %64, align 8
  %65 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %66 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %65, i32 0, i32 5
  store %struct.sm_row_struct* null, %struct.sm_row_struct** %66, align 8
  %67 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %68 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %67, i32 0, i32 6
  store %struct.sm_row_struct* null, %struct.sm_row_struct** %68, align 8
  %69 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %70 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %69, i32 0, i32 6
  %71 = load i32, i32* %70, align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %70, align 8
  br label %188

73:                                               ; preds = %40
  %74 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %75 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %74, i32 0, i32 5
  %76 = load %struct.sm_row_struct*, %struct.sm_row_struct** %75, align 8
  %77 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %76, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = load i32, i32* %5, align 4
  %80 = icmp slt i32 %78, %79
  br i1 %80, label %81, label %104

81:                                               ; preds = %73
  %82 = load i32, i32* %5, align 4
  %83 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %84 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %83, i32 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %86 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %87 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %86, i32 0, i32 5
  %88 = load %struct.sm_row_struct*, %struct.sm_row_struct** %87, align 8
  %89 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %88, i32 0, i32 5
  store %struct.sm_row_struct* %85, %struct.sm_row_struct** %89, align 8
  %90 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %91 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %90, i32 0, i32 5
  %92 = load %struct.sm_row_struct*, %struct.sm_row_struct** %91, align 8
  %93 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %94 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %93, i32 0, i32 6
  store %struct.sm_row_struct* %92, %struct.sm_row_struct** %94, align 8
  %95 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %96 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %97 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %96, i32 0, i32 5
  store %struct.sm_row_struct* %95, %struct.sm_row_struct** %97, align 8
  %98 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %99 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %98, i32 0, i32 5
  store %struct.sm_row_struct* null, %struct.sm_row_struct** %99, align 8
  %100 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %101 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %100, i32 0, i32 6
  %102 = load i32, i32* %101, align 8
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %101, align 8
  br label %187

104:                                              ; preds = %73
  %105 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %106 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %105, i32 0, i32 4
  %107 = load %struct.sm_row_struct*, %struct.sm_row_struct** %106, align 8
  %108 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %107, i32 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = load i32, i32* %5, align 4
  %111 = icmp sgt i32 %109, %110
  br i1 %111, label %112, label %135

112:                                              ; preds = %104
  %113 = load i32, i32* %5, align 4
  %114 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %115 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %114, i32 0, i32 0
  store i32 %113, i32* %115, align 8
  %116 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %117 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %118 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %117, i32 0, i32 4
  %119 = load %struct.sm_row_struct*, %struct.sm_row_struct** %118, align 8
  %120 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %119, i32 0, i32 6
  store %struct.sm_row_struct* %116, %struct.sm_row_struct** %120, align 8
  %121 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %122 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %121, i32 0, i32 4
  %123 = load %struct.sm_row_struct*, %struct.sm_row_struct** %122, align 8
  %124 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %125 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %124, i32 0, i32 5
  store %struct.sm_row_struct* %123, %struct.sm_row_struct** %125, align 8
  %126 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %127 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %128 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %127, i32 0, i32 4
  store %struct.sm_row_struct* %126, %struct.sm_row_struct** %128, align 8
  %129 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %130 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %129, i32 0, i32 6
  store %struct.sm_row_struct* null, %struct.sm_row_struct** %130, align 8
  %131 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %132 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %131, i32 0, i32 6
  %133 = load i32, i32* %132, align 8
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %132, align 8
  br label %186

135:                                              ; preds = %104
  %136 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %137 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %136, i32 0, i32 4
  %138 = load %struct.sm_row_struct*, %struct.sm_row_struct** %137, align 8
  store %struct.sm_row_struct* %138, %struct.sm_row_struct** %11, align 8
  br label %139

139:                                              ; preds = %146, %135
  %140 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  %141 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %140, i32 0, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = load i32, i32* %5, align 4
  %144 = icmp slt i32 %142, %143
  br i1 %144, label %145, label %150

145:                                              ; preds = %139
  br label %146

146:                                              ; preds = %145
  %147 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  %148 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %147, i32 0, i32 5
  %149 = load %struct.sm_row_struct*, %struct.sm_row_struct** %148, align 8
  store %struct.sm_row_struct* %149, %struct.sm_row_struct** %11, align 8
  br label %139

150:                                              ; preds = %139
  %151 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  %152 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %151, i32 0, i32 0
  %153 = load i32, i32* %152, align 8
  %154 = load i32, i32* %5, align 4
  %155 = icmp sgt i32 %153, %154
  br i1 %155, label %156, label %183

156:                                              ; preds = %150
  %157 = load i32, i32* %5, align 4
  %158 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %159 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %158, i32 0, i32 0
  store i32 %157, i32* %159, align 8
  %160 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  %161 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %160, i32 0, i32 6
  %162 = load %struct.sm_row_struct*, %struct.sm_row_struct** %161, align 8
  store %struct.sm_row_struct* %162, %struct.sm_row_struct** %11, align 8
  %163 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %164 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  %165 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %164, i32 0, i32 5
  %166 = load %struct.sm_row_struct*, %struct.sm_row_struct** %165, align 8
  %167 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %166, i32 0, i32 6
  store %struct.sm_row_struct* %163, %struct.sm_row_struct** %167, align 8
  %168 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  %169 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %168, i32 0, i32 5
  %170 = load %struct.sm_row_struct*, %struct.sm_row_struct** %169, align 8
  %171 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %172 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %171, i32 0, i32 5
  store %struct.sm_row_struct* %170, %struct.sm_row_struct** %172, align 8
  %173 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %174 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  %175 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %174, i32 0, i32 5
  store %struct.sm_row_struct* %173, %struct.sm_row_struct** %175, align 8
  %176 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  %177 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %178 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %177, i32 0, i32 6
  store %struct.sm_row_struct* %176, %struct.sm_row_struct** %178, align 8
  %179 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %180 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %179, i32 0, i32 6
  %181 = load i32, i32* %180, align 8
  %182 = add nsw i32 %181, 1
  store i32 %182, i32* %180, align 8
  br label %185

183:                                              ; preds = %150
  %184 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  store %struct.sm_row_struct* %184, %struct.sm_row_struct** %7, align 8
  br label %185

185:                                              ; preds = %183, %156
  br label %186

186:                                              ; preds = %185, %112
  br label %187

187:                                              ; preds = %186, %81
  br label %188

188:                                              ; preds = %187, %55
  br label %189

189:                                              ; preds = %188, %30
  %190 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %191 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %190, i32 0, i32 2
  %192 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %191, align 8
  %193 = load i32, i32* %6, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %192, i64 %194
  %196 = load %struct.sm_col_struct*, %struct.sm_col_struct** %195, align 8
  store %struct.sm_col_struct* %196, %struct.sm_col_struct** %8, align 8
  %197 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %198 = icmp eq %struct.sm_col_struct* %197, null
  br i1 %198, label %199, label %348

199:                                              ; preds = %189
  %200 = call %struct.sm_col_struct* (...) bitcast (%struct.sm_col_struct* ()* @sm_col_alloc to %struct.sm_col_struct* (...)*)()
  %201 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %202 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %201, i32 0, i32 2
  %203 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %202, align 8
  %204 = load i32, i32* %6, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %203, i64 %205
  store %struct.sm_col_struct* %200, %struct.sm_col_struct** %206, align 8
  store %struct.sm_col_struct* %200, %struct.sm_col_struct** %8, align 8
  %207 = load i32, i32* %6, align 4
  %208 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %209 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %208, i32 0, i32 0
  store i32 %207, i32* %209, align 8
  %210 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %211 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %210, i32 0, i32 8
  %212 = load %struct.sm_col_struct*, %struct.sm_col_struct** %211, align 8
  %213 = icmp eq %struct.sm_col_struct* %212, null
  br i1 %213, label %214, label %232

214:                                              ; preds = %199
  %215 = load i32, i32* %6, align 4
  %216 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %217 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %216, i32 0, i32 0
  store i32 %215, i32* %217, align 8
  %218 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %219 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %220 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %219, i32 0, i32 7
  store %struct.sm_col_struct* %218, %struct.sm_col_struct** %220, align 8
  %221 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %222 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %223 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %222, i32 0, i32 8
  store %struct.sm_col_struct* %221, %struct.sm_col_struct** %223, align 8
  %224 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %225 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %224, i32 0, i32 5
  store %struct.sm_col_struct* null, %struct.sm_col_struct** %225, align 8
  %226 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %227 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %226, i32 0, i32 6
  store %struct.sm_col_struct* null, %struct.sm_col_struct** %227, align 8
  %228 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %229 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %228, i32 0, i32 9
  %230 = load i32, i32* %229, align 8
  %231 = add nsw i32 %230, 1
  store i32 %231, i32* %229, align 8
  br label %347

232:                                              ; preds = %199
  %233 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %234 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %233, i32 0, i32 8
  %235 = load %struct.sm_col_struct*, %struct.sm_col_struct** %234, align 8
  %236 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %235, i32 0, i32 0
  %237 = load i32, i32* %236, align 8
  %238 = load i32, i32* %6, align 4
  %239 = icmp slt i32 %237, %238
  br i1 %239, label %240, label %263

240:                                              ; preds = %232
  %241 = load i32, i32* %6, align 4
  %242 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %243 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %242, i32 0, i32 0
  store i32 %241, i32* %243, align 8
  %244 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %245 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %246 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %245, i32 0, i32 8
  %247 = load %struct.sm_col_struct*, %struct.sm_col_struct** %246, align 8
  %248 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %247, i32 0, i32 5
  store %struct.sm_col_struct* %244, %struct.sm_col_struct** %248, align 8
  %249 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %250 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %249, i32 0, i32 8
  %251 = load %struct.sm_col_struct*, %struct.sm_col_struct** %250, align 8
  %252 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %253 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %252, i32 0, i32 6
  store %struct.sm_col_struct* %251, %struct.sm_col_struct** %253, align 8
  %254 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %255 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %256 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %255, i32 0, i32 8
  store %struct.sm_col_struct* %254, %struct.sm_col_struct** %256, align 8
  %257 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %258 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %257, i32 0, i32 5
  store %struct.sm_col_struct* null, %struct.sm_col_struct** %258, align 8
  %259 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %260 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %259, i32 0, i32 9
  %261 = load i32, i32* %260, align 8
  %262 = add nsw i32 %261, 1
  store i32 %262, i32* %260, align 8
  br label %346

263:                                              ; preds = %232
  %264 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %265 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %264, i32 0, i32 7
  %266 = load %struct.sm_col_struct*, %struct.sm_col_struct** %265, align 8
  %267 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %266, i32 0, i32 0
  %268 = load i32, i32* %267, align 8
  %269 = load i32, i32* %6, align 4
  %270 = icmp sgt i32 %268, %269
  br i1 %270, label %271, label %294

271:                                              ; preds = %263
  %272 = load i32, i32* %6, align 4
  %273 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %274 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %273, i32 0, i32 0
  store i32 %272, i32* %274, align 8
  %275 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %276 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %277 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %276, i32 0, i32 7
  %278 = load %struct.sm_col_struct*, %struct.sm_col_struct** %277, align 8
  %279 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %278, i32 0, i32 6
  store %struct.sm_col_struct* %275, %struct.sm_col_struct** %279, align 8
  %280 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %281 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %280, i32 0, i32 7
  %282 = load %struct.sm_col_struct*, %struct.sm_col_struct** %281, align 8
  %283 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %284 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %283, i32 0, i32 5
  store %struct.sm_col_struct* %282, %struct.sm_col_struct** %284, align 8
  %285 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %286 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %287 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %286, i32 0, i32 7
  store %struct.sm_col_struct* %285, %struct.sm_col_struct** %287, align 8
  %288 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %289 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %288, i32 0, i32 6
  store %struct.sm_col_struct* null, %struct.sm_col_struct** %289, align 8
  %290 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %291 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %290, i32 0, i32 9
  %292 = load i32, i32* %291, align 8
  %293 = add nsw i32 %292, 1
  store i32 %293, i32* %291, align 8
  br label %345

294:                                              ; preds = %263
  %295 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %296 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %295, i32 0, i32 7
  %297 = load %struct.sm_col_struct*, %struct.sm_col_struct** %296, align 8
  store %struct.sm_col_struct* %297, %struct.sm_col_struct** %12, align 8
  br label %298

298:                                              ; preds = %305, %294
  %299 = load %struct.sm_col_struct*, %struct.sm_col_struct** %12, align 8
  %300 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %299, i32 0, i32 0
  %301 = load i32, i32* %300, align 8
  %302 = load i32, i32* %6, align 4
  %303 = icmp slt i32 %301, %302
  br i1 %303, label %304, label %309

304:                                              ; preds = %298
  br label %305

305:                                              ; preds = %304
  %306 = load %struct.sm_col_struct*, %struct.sm_col_struct** %12, align 8
  %307 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %306, i32 0, i32 5
  %308 = load %struct.sm_col_struct*, %struct.sm_col_struct** %307, align 8
  store %struct.sm_col_struct* %308, %struct.sm_col_struct** %12, align 8
  br label %298

309:                                              ; preds = %298
  %310 = load %struct.sm_col_struct*, %struct.sm_col_struct** %12, align 8
  %311 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %310, i32 0, i32 0
  %312 = load i32, i32* %311, align 8
  %313 = load i32, i32* %6, align 4
  %314 = icmp sgt i32 %312, %313
  br i1 %314, label %315, label %342

315:                                              ; preds = %309
  %316 = load i32, i32* %6, align 4
  %317 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %318 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %317, i32 0, i32 0
  store i32 %316, i32* %318, align 8
  %319 = load %struct.sm_col_struct*, %struct.sm_col_struct** %12, align 8
  %320 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %319, i32 0, i32 6
  %321 = load %struct.sm_col_struct*, %struct.sm_col_struct** %320, align 8
  store %struct.sm_col_struct* %321, %struct.sm_col_struct** %12, align 8
  %322 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %323 = load %struct.sm_col_struct*, %struct.sm_col_struct** %12, align 8
  %324 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %323, i32 0, i32 5
  %325 = load %struct.sm_col_struct*, %struct.sm_col_struct** %324, align 8
  %326 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %325, i32 0, i32 6
  store %struct.sm_col_struct* %322, %struct.sm_col_struct** %326, align 8
  %327 = load %struct.sm_col_struct*, %struct.sm_col_struct** %12, align 8
  %328 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %327, i32 0, i32 5
  %329 = load %struct.sm_col_struct*, %struct.sm_col_struct** %328, align 8
  %330 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %331 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %330, i32 0, i32 5
  store %struct.sm_col_struct* %329, %struct.sm_col_struct** %331, align 8
  %332 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %333 = load %struct.sm_col_struct*, %struct.sm_col_struct** %12, align 8
  %334 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %333, i32 0, i32 5
  store %struct.sm_col_struct* %332, %struct.sm_col_struct** %334, align 8
  %335 = load %struct.sm_col_struct*, %struct.sm_col_struct** %12, align 8
  %336 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %337 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %336, i32 0, i32 6
  store %struct.sm_col_struct* %335, %struct.sm_col_struct** %337, align 8
  %338 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %339 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %338, i32 0, i32 9
  %340 = load i32, i32* %339, align 8
  %341 = add nsw i32 %340, 1
  store i32 %341, i32* %339, align 8
  br label %344

342:                                              ; preds = %309
  %343 = load %struct.sm_col_struct*, %struct.sm_col_struct** %12, align 8
  store %struct.sm_col_struct* %343, %struct.sm_col_struct** %8, align 8
  br label %344

344:                                              ; preds = %342, %315
  br label %345

345:                                              ; preds = %344, %271
  br label %346

346:                                              ; preds = %345, %240
  br label %347

347:                                              ; preds = %346, %214
  br label %348

348:                                              ; preds = %347, %189
  %349 = call noalias i8* @malloc(i64 48) #7
  %350 = bitcast i8* %349 to %struct.sm_element_struct*
  store %struct.sm_element_struct* %350, %struct.sm_element_struct** %9, align 8
  %351 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %352 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %351, i32 0, i32 6
  store i8* null, i8** %352, align 8
  %353 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  store %struct.sm_element_struct* %353, %struct.sm_element_struct** %10, align 8
  %354 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %355 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %354, i32 0, i32 4
  %356 = load %struct.sm_element_struct*, %struct.sm_element_struct** %355, align 8
  %357 = icmp eq %struct.sm_element_struct* %356, null
  br i1 %357, label %358, label %376

358:                                              ; preds = %348
  %359 = load i32, i32* %6, align 4
  %360 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %361 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %360, i32 0, i32 1
  store i32 %359, i32* %361, align 4
  %362 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %363 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %364 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %363, i32 0, i32 3
  store %struct.sm_element_struct* %362, %struct.sm_element_struct** %364, align 8
  %365 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %366 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %367 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %366, i32 0, i32 4
  store %struct.sm_element_struct* %365, %struct.sm_element_struct** %367, align 8
  %368 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %369 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %368, i32 0, i32 4
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %369, align 8
  %370 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %371 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %370, i32 0, i32 5
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %371, align 8
  %372 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %373 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %372, i32 0, i32 1
  %374 = load i32, i32* %373, align 4
  %375 = add nsw i32 %374, 1
  store i32 %375, i32* %373, align 4
  br label %491

376:                                              ; preds = %348
  %377 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %378 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %377, i32 0, i32 4
  %379 = load %struct.sm_element_struct*, %struct.sm_element_struct** %378, align 8
  %380 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %379, i32 0, i32 1
  %381 = load i32, i32* %380, align 4
  %382 = load i32, i32* %6, align 4
  %383 = icmp slt i32 %381, %382
  br i1 %383, label %384, label %407

384:                                              ; preds = %376
  %385 = load i32, i32* %6, align 4
  %386 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %387 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %386, i32 0, i32 1
  store i32 %385, i32* %387, align 4
  %388 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %389 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %390 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %389, i32 0, i32 4
  %391 = load %struct.sm_element_struct*, %struct.sm_element_struct** %390, align 8
  %392 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %391, i32 0, i32 4
  store %struct.sm_element_struct* %388, %struct.sm_element_struct** %392, align 8
  %393 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %394 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %393, i32 0, i32 4
  %395 = load %struct.sm_element_struct*, %struct.sm_element_struct** %394, align 8
  %396 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %397 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %396, i32 0, i32 5
  store %struct.sm_element_struct* %395, %struct.sm_element_struct** %397, align 8
  %398 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %399 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %400 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %399, i32 0, i32 4
  store %struct.sm_element_struct* %398, %struct.sm_element_struct** %400, align 8
  %401 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %402 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %401, i32 0, i32 4
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %402, align 8
  %403 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %404 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %403, i32 0, i32 1
  %405 = load i32, i32* %404, align 4
  %406 = add nsw i32 %405, 1
  store i32 %406, i32* %404, align 4
  br label %490

407:                                              ; preds = %376
  %408 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %409 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %408, i32 0, i32 3
  %410 = load %struct.sm_element_struct*, %struct.sm_element_struct** %409, align 8
  %411 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %410, i32 0, i32 1
  %412 = load i32, i32* %411, align 4
  %413 = load i32, i32* %6, align 4
  %414 = icmp sgt i32 %412, %413
  br i1 %414, label %415, label %438

415:                                              ; preds = %407
  %416 = load i32, i32* %6, align 4
  %417 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %418 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %417, i32 0, i32 1
  store i32 %416, i32* %418, align 4
  %419 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %420 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %421 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %420, i32 0, i32 3
  %422 = load %struct.sm_element_struct*, %struct.sm_element_struct** %421, align 8
  %423 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %422, i32 0, i32 5
  store %struct.sm_element_struct* %419, %struct.sm_element_struct** %423, align 8
  %424 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %425 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %424, i32 0, i32 3
  %426 = load %struct.sm_element_struct*, %struct.sm_element_struct** %425, align 8
  %427 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %428 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %427, i32 0, i32 4
  store %struct.sm_element_struct* %426, %struct.sm_element_struct** %428, align 8
  %429 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %430 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %431 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %430, i32 0, i32 3
  store %struct.sm_element_struct* %429, %struct.sm_element_struct** %431, align 8
  %432 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %433 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %432, i32 0, i32 5
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %433, align 8
  %434 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %435 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %434, i32 0, i32 1
  %436 = load i32, i32* %435, align 4
  %437 = add nsw i32 %436, 1
  store i32 %437, i32* %435, align 4
  br label %489

438:                                              ; preds = %407
  %439 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %440 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %439, i32 0, i32 3
  %441 = load %struct.sm_element_struct*, %struct.sm_element_struct** %440, align 8
  store %struct.sm_element_struct* %441, %struct.sm_element_struct** %13, align 8
  br label %442

442:                                              ; preds = %449, %438
  %443 = load %struct.sm_element_struct*, %struct.sm_element_struct** %13, align 8
  %444 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %443, i32 0, i32 1
  %445 = load i32, i32* %444, align 4
  %446 = load i32, i32* %6, align 4
  %447 = icmp slt i32 %445, %446
  br i1 %447, label %448, label %453

448:                                              ; preds = %442
  br label %449

449:                                              ; preds = %448
  %450 = load %struct.sm_element_struct*, %struct.sm_element_struct** %13, align 8
  %451 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %450, i32 0, i32 4
  %452 = load %struct.sm_element_struct*, %struct.sm_element_struct** %451, align 8
  store %struct.sm_element_struct* %452, %struct.sm_element_struct** %13, align 8
  br label %442

453:                                              ; preds = %442
  %454 = load %struct.sm_element_struct*, %struct.sm_element_struct** %13, align 8
  %455 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %454, i32 0, i32 1
  %456 = load i32, i32* %455, align 4
  %457 = load i32, i32* %6, align 4
  %458 = icmp sgt i32 %456, %457
  br i1 %458, label %459, label %486

459:                                              ; preds = %453
  %460 = load i32, i32* %6, align 4
  %461 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %462 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %461, i32 0, i32 1
  store i32 %460, i32* %462, align 4
  %463 = load %struct.sm_element_struct*, %struct.sm_element_struct** %13, align 8
  %464 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %463, i32 0, i32 5
  %465 = load %struct.sm_element_struct*, %struct.sm_element_struct** %464, align 8
  store %struct.sm_element_struct* %465, %struct.sm_element_struct** %13, align 8
  %466 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %467 = load %struct.sm_element_struct*, %struct.sm_element_struct** %13, align 8
  %468 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %467, i32 0, i32 4
  %469 = load %struct.sm_element_struct*, %struct.sm_element_struct** %468, align 8
  %470 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %469, i32 0, i32 5
  store %struct.sm_element_struct* %466, %struct.sm_element_struct** %470, align 8
  %471 = load %struct.sm_element_struct*, %struct.sm_element_struct** %13, align 8
  %472 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %471, i32 0, i32 4
  %473 = load %struct.sm_element_struct*, %struct.sm_element_struct** %472, align 8
  %474 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %475 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %474, i32 0, i32 4
  store %struct.sm_element_struct* %473, %struct.sm_element_struct** %475, align 8
  %476 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %477 = load %struct.sm_element_struct*, %struct.sm_element_struct** %13, align 8
  %478 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %477, i32 0, i32 4
  store %struct.sm_element_struct* %476, %struct.sm_element_struct** %478, align 8
  %479 = load %struct.sm_element_struct*, %struct.sm_element_struct** %13, align 8
  %480 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %481 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %480, i32 0, i32 5
  store %struct.sm_element_struct* %479, %struct.sm_element_struct** %481, align 8
  %482 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %483 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %482, i32 0, i32 1
  %484 = load i32, i32* %483, align 4
  %485 = add nsw i32 %484, 1
  store i32 %485, i32* %483, align 4
  br label %488

486:                                              ; preds = %453
  %487 = load %struct.sm_element_struct*, %struct.sm_element_struct** %13, align 8
  store %struct.sm_element_struct* %487, %struct.sm_element_struct** %9, align 8
  br label %488

488:                                              ; preds = %486, %459
  br label %489

489:                                              ; preds = %488, %415
  br label %490

490:                                              ; preds = %489, %384
  br label %491

491:                                              ; preds = %490, %358
  %492 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %493 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %494 = icmp eq %struct.sm_element_struct* %492, %493
  br i1 %494, label %495, label %634

495:                                              ; preds = %491
  %496 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %497 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %496, i32 0, i32 4
  %498 = load %struct.sm_element_struct*, %struct.sm_element_struct** %497, align 8
  %499 = icmp eq %struct.sm_element_struct* %498, null
  br i1 %499, label %500, label %518

500:                                              ; preds = %495
  %501 = load i32, i32* %5, align 4
  %502 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %503 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %502, i32 0, i32 0
  store i32 %501, i32* %503, align 8
  %504 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %505 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %506 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %505, i32 0, i32 3
  store %struct.sm_element_struct* %504, %struct.sm_element_struct** %506, align 8
  %507 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %508 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %509 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %508, i32 0, i32 4
  store %struct.sm_element_struct* %507, %struct.sm_element_struct** %509, align 8
  %510 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %511 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %510, i32 0, i32 2
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %511, align 8
  %512 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %513 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %512, i32 0, i32 3
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %513, align 8
  %514 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %515 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %514, i32 0, i32 1
  %516 = load i32, i32* %515, align 4
  %517 = add nsw i32 %516, 1
  store i32 %517, i32* %515, align 4
  br label %633

518:                                              ; preds = %495
  %519 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %520 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %519, i32 0, i32 4
  %521 = load %struct.sm_element_struct*, %struct.sm_element_struct** %520, align 8
  %522 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %521, i32 0, i32 0
  %523 = load i32, i32* %522, align 8
  %524 = load i32, i32* %5, align 4
  %525 = icmp slt i32 %523, %524
  br i1 %525, label %526, label %549

526:                                              ; preds = %518
  %527 = load i32, i32* %5, align 4
  %528 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %529 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %528, i32 0, i32 0
  store i32 %527, i32* %529, align 8
  %530 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %531 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %532 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %531, i32 0, i32 4
  %533 = load %struct.sm_element_struct*, %struct.sm_element_struct** %532, align 8
  %534 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %533, i32 0, i32 2
  store %struct.sm_element_struct* %530, %struct.sm_element_struct** %534, align 8
  %535 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %536 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %535, i32 0, i32 4
  %537 = load %struct.sm_element_struct*, %struct.sm_element_struct** %536, align 8
  %538 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %539 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %538, i32 0, i32 3
  store %struct.sm_element_struct* %537, %struct.sm_element_struct** %539, align 8
  %540 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %541 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %542 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %541, i32 0, i32 4
  store %struct.sm_element_struct* %540, %struct.sm_element_struct** %542, align 8
  %543 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %544 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %543, i32 0, i32 2
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %544, align 8
  %545 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %546 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %545, i32 0, i32 1
  %547 = load i32, i32* %546, align 4
  %548 = add nsw i32 %547, 1
  store i32 %548, i32* %546, align 4
  br label %632

549:                                              ; preds = %518
  %550 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %551 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %550, i32 0, i32 3
  %552 = load %struct.sm_element_struct*, %struct.sm_element_struct** %551, align 8
  %553 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %552, i32 0, i32 0
  %554 = load i32, i32* %553, align 8
  %555 = load i32, i32* %5, align 4
  %556 = icmp sgt i32 %554, %555
  br i1 %556, label %557, label %580

557:                                              ; preds = %549
  %558 = load i32, i32* %5, align 4
  %559 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %560 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %559, i32 0, i32 0
  store i32 %558, i32* %560, align 8
  %561 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %562 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %563 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %562, i32 0, i32 3
  %564 = load %struct.sm_element_struct*, %struct.sm_element_struct** %563, align 8
  %565 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %564, i32 0, i32 3
  store %struct.sm_element_struct* %561, %struct.sm_element_struct** %565, align 8
  %566 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %567 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %566, i32 0, i32 3
  %568 = load %struct.sm_element_struct*, %struct.sm_element_struct** %567, align 8
  %569 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %570 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %569, i32 0, i32 2
  store %struct.sm_element_struct* %568, %struct.sm_element_struct** %570, align 8
  %571 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %572 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %573 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %572, i32 0, i32 3
  store %struct.sm_element_struct* %571, %struct.sm_element_struct** %573, align 8
  %574 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %575 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %574, i32 0, i32 3
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %575, align 8
  %576 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %577 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %576, i32 0, i32 1
  %578 = load i32, i32* %577, align 4
  %579 = add nsw i32 %578, 1
  store i32 %579, i32* %577, align 4
  br label %631

580:                                              ; preds = %549
  %581 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %582 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %581, i32 0, i32 3
  %583 = load %struct.sm_element_struct*, %struct.sm_element_struct** %582, align 8
  store %struct.sm_element_struct* %583, %struct.sm_element_struct** %14, align 8
  br label %584

584:                                              ; preds = %591, %580
  %585 = load %struct.sm_element_struct*, %struct.sm_element_struct** %14, align 8
  %586 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %585, i32 0, i32 0
  %587 = load i32, i32* %586, align 8
  %588 = load i32, i32* %5, align 4
  %589 = icmp slt i32 %587, %588
  br i1 %589, label %590, label %595

590:                                              ; preds = %584
  br label %591

591:                                              ; preds = %590
  %592 = load %struct.sm_element_struct*, %struct.sm_element_struct** %14, align 8
  %593 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %592, i32 0, i32 2
  %594 = load %struct.sm_element_struct*, %struct.sm_element_struct** %593, align 8
  store %struct.sm_element_struct* %594, %struct.sm_element_struct** %14, align 8
  br label %584

595:                                              ; preds = %584
  %596 = load %struct.sm_element_struct*, %struct.sm_element_struct** %14, align 8
  %597 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %596, i32 0, i32 0
  %598 = load i32, i32* %597, align 8
  %599 = load i32, i32* %5, align 4
  %600 = icmp sgt i32 %598, %599
  br i1 %600, label %601, label %628

601:                                              ; preds = %595
  %602 = load i32, i32* %5, align 4
  %603 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %604 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %603, i32 0, i32 0
  store i32 %602, i32* %604, align 8
  %605 = load %struct.sm_element_struct*, %struct.sm_element_struct** %14, align 8
  %606 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %605, i32 0, i32 3
  %607 = load %struct.sm_element_struct*, %struct.sm_element_struct** %606, align 8
  store %struct.sm_element_struct* %607, %struct.sm_element_struct** %14, align 8
  %608 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %609 = load %struct.sm_element_struct*, %struct.sm_element_struct** %14, align 8
  %610 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %609, i32 0, i32 2
  %611 = load %struct.sm_element_struct*, %struct.sm_element_struct** %610, align 8
  %612 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %611, i32 0, i32 3
  store %struct.sm_element_struct* %608, %struct.sm_element_struct** %612, align 8
  %613 = load %struct.sm_element_struct*, %struct.sm_element_struct** %14, align 8
  %614 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %613, i32 0, i32 2
  %615 = load %struct.sm_element_struct*, %struct.sm_element_struct** %614, align 8
  %616 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %617 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %616, i32 0, i32 2
  store %struct.sm_element_struct* %615, %struct.sm_element_struct** %617, align 8
  %618 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %619 = load %struct.sm_element_struct*, %struct.sm_element_struct** %14, align 8
  %620 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %619, i32 0, i32 2
  store %struct.sm_element_struct* %618, %struct.sm_element_struct** %620, align 8
  %621 = load %struct.sm_element_struct*, %struct.sm_element_struct** %14, align 8
  %622 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %623 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %622, i32 0, i32 3
  store %struct.sm_element_struct* %621, %struct.sm_element_struct** %623, align 8
  %624 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %625 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %624, i32 0, i32 1
  %626 = load i32, i32* %625, align 4
  %627 = add nsw i32 %626, 1
  store i32 %627, i32* %625, align 4
  br label %630

628:                                              ; preds = %595
  %629 = load %struct.sm_element_struct*, %struct.sm_element_struct** %14, align 8
  store %struct.sm_element_struct* %629, %struct.sm_element_struct** %9, align 8
  br label %630

630:                                              ; preds = %628, %601
  br label %631

631:                                              ; preds = %630, %557
  br label %632

632:                                              ; preds = %631, %526
  br label %633

633:                                              ; preds = %632, %500
  br label %641

634:                                              ; preds = %491
  %635 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %636 = icmp ne %struct.sm_element_struct* %635, null
  br i1 %636, label %637, label %640

637:                                              ; preds = %634
  %638 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %639 = bitcast %struct.sm_element_struct* %638 to i8*
  call void @free(i8* %639) #7
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %10, align 8
  br label %640

640:                                              ; preds = %637, %634
  br label %641

641:                                              ; preds = %640, %633
  %642 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  ret %struct.sm_element_struct* %642
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_element_struct* @sm_find(%struct.sm_matrix_struct* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.sm_element_struct*, align 8
  %5 = alloca %struct.sm_matrix_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.sm_row_struct*, align 8
  %9 = alloca %struct.sm_col_struct*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %10 = load i32, i32* %6, align 4
  %11 = icmp sge i32 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %3
  %13 = load i32, i32* %6, align 4
  %14 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %15 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %13, %16
  br i1 %17, label %18, label %26

18:                                               ; preds = %12
  %19 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %20 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %19, i32 0, i32 0
  %21 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %20, align 8
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %21, i64 %23
  %25 = load %struct.sm_row_struct*, %struct.sm_row_struct** %24, align 8
  br label %27

26:                                               ; preds = %12, %3
  br label %27

27:                                               ; preds = %26, %18
  %28 = phi %struct.sm_row_struct* [ %25, %18 ], [ null, %26 ]
  store %struct.sm_row_struct* %28, %struct.sm_row_struct** %8, align 8
  %29 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %30 = icmp eq %struct.sm_row_struct* %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %4, align 8
  br label %71

32:                                               ; preds = %27
  %33 = load i32, i32* %7, align 4
  %34 = icmp sge i32 %33, 0
  br i1 %34, label %35, label %49

35:                                               ; preds = %32
  %36 = load i32, i32* %7, align 4
  %37 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %38 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %37, i32 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = icmp slt i32 %36, %39
  br i1 %40, label %41, label %49

41:                                               ; preds = %35
  %42 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %43 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %42, i32 0, i32 2
  %44 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %43, align 8
  %45 = load i32, i32* %7, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %44, i64 %46
  %48 = load %struct.sm_col_struct*, %struct.sm_col_struct** %47, align 8
  br label %50

49:                                               ; preds = %35, %32
  br label %50

50:                                               ; preds = %49, %41
  %51 = phi %struct.sm_col_struct* [ %48, %41 ], [ null, %49 ]
  store %struct.sm_col_struct* %51, %struct.sm_col_struct** %9, align 8
  %52 = load %struct.sm_col_struct*, %struct.sm_col_struct** %9, align 8
  %53 = icmp eq %struct.sm_col_struct* %52, null
  br i1 %53, label %54, label %55

54:                                               ; preds = %50
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %4, align 8
  br label %71

55:                                               ; preds = %50
  %56 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %57 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = load %struct.sm_col_struct*, %struct.sm_col_struct** %9, align 8
  %60 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %58, %61
  br i1 %62, label %63, label %67

63:                                               ; preds = %55
  %64 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %65 = load i32, i32* %7, align 4
  %66 = call %struct.sm_element_struct* (%struct.sm_row_struct*, i32, ...) bitcast (%struct.sm_element_struct* (%struct.sm_row_struct*, i32)* @sm_row_find to %struct.sm_element_struct* (%struct.sm_row_struct*, i32, ...)*)(%struct.sm_row_struct* %64, i32 %65)
  store %struct.sm_element_struct* %66, %struct.sm_element_struct** %4, align 8
  br label %71

67:                                               ; preds = %55
  %68 = load %struct.sm_col_struct*, %struct.sm_col_struct** %9, align 8
  %69 = load i32, i32* %6, align 4
  %70 = call %struct.sm_element_struct* (%struct.sm_col_struct*, i32, ...) bitcast (%struct.sm_element_struct* (%struct.sm_col_struct*, i32)* @sm_col_find to %struct.sm_element_struct* (%struct.sm_col_struct*, i32, ...)*)(%struct.sm_col_struct* %68, i32 %69)
  store %struct.sm_element_struct* %70, %struct.sm_element_struct** %4, align 8
  br label %71

71:                                               ; preds = %67, %63, %54, %31
  %72 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  ret %struct.sm_element_struct* %72
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_remove(%struct.sm_matrix_struct* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.sm_matrix_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %8 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %9 = load i32, i32* %5, align 4
  %10 = load i32, i32* %6, align 4
  %11 = call %struct.sm_element_struct* @sm_find(%struct.sm_matrix_struct* %8, i32 %9, i32 %10)
  call void @sm_remove_element(%struct.sm_matrix_struct* %7, %struct.sm_element_struct* %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_remove_element(%struct.sm_matrix_struct* %0, %struct.sm_element_struct* %1) #0 {
  %3 = alloca %struct.sm_matrix_struct*, align 8
  %4 = alloca %struct.sm_element_struct*, align 8
  %5 = alloca %struct.sm_row_struct*, align 8
  %6 = alloca %struct.sm_col_struct*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %3, align 8
  store %struct.sm_element_struct* %1, %struct.sm_element_struct** %4, align 8
  %7 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %8 = icmp eq %struct.sm_element_struct* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  br label %170

10:                                               ; preds = %2
  %11 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %12 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %11, i32 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp sge i32 %13, 0
  br i1 %14, label %15, label %33

15:                                               ; preds = %10
  %16 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %17 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %20 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %18, %21
  br i1 %22, label %23, label %33

23:                                               ; preds = %15
  %24 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %25 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %24, i32 0, i32 0
  %26 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %25, align 8
  %27 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %28 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %26, i64 %30
  %32 = load %struct.sm_row_struct*, %struct.sm_row_struct** %31, align 8
  br label %34

33:                                               ; preds = %15, %10
  br label %34

34:                                               ; preds = %33, %23
  %35 = phi %struct.sm_row_struct* [ %32, %23 ], [ null, %33 ]
  store %struct.sm_row_struct* %35, %struct.sm_row_struct** %5, align 8
  %36 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %37 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %36, i32 0, i32 5
  %38 = load %struct.sm_element_struct*, %struct.sm_element_struct** %37, align 8
  %39 = icmp eq %struct.sm_element_struct* %38, null
  br i1 %39, label %40, label %46

40:                                               ; preds = %34
  %41 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %42 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %41, i32 0, i32 4
  %43 = load %struct.sm_element_struct*, %struct.sm_element_struct** %42, align 8
  %44 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %45 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %44, i32 0, i32 3
  store %struct.sm_element_struct* %43, %struct.sm_element_struct** %45, align 8
  br label %54

46:                                               ; preds = %34
  %47 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %48 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %47, i32 0, i32 4
  %49 = load %struct.sm_element_struct*, %struct.sm_element_struct** %48, align 8
  %50 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %51 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %50, i32 0, i32 5
  %52 = load %struct.sm_element_struct*, %struct.sm_element_struct** %51, align 8
  %53 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %52, i32 0, i32 4
  store %struct.sm_element_struct* %49, %struct.sm_element_struct** %53, align 8
  br label %54

54:                                               ; preds = %46, %40
  %55 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %56 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %55, i32 0, i32 4
  %57 = load %struct.sm_element_struct*, %struct.sm_element_struct** %56, align 8
  %58 = icmp eq %struct.sm_element_struct* %57, null
  br i1 %58, label %59, label %65

59:                                               ; preds = %54
  %60 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %61 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %60, i32 0, i32 5
  %62 = load %struct.sm_element_struct*, %struct.sm_element_struct** %61, align 8
  %63 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %64 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %63, i32 0, i32 4
  store %struct.sm_element_struct* %62, %struct.sm_element_struct** %64, align 8
  br label %73

65:                                               ; preds = %54
  %66 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %67 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %66, i32 0, i32 5
  %68 = load %struct.sm_element_struct*, %struct.sm_element_struct** %67, align 8
  %69 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %70 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %69, i32 0, i32 4
  %71 = load %struct.sm_element_struct*, %struct.sm_element_struct** %70, align 8
  %72 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %71, i32 0, i32 5
  store %struct.sm_element_struct* %68, %struct.sm_element_struct** %72, align 8
  br label %73

73:                                               ; preds = %65, %59
  %74 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %75 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %74, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = add nsw i32 %76, -1
  store i32 %77, i32* %75, align 4
  %78 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %79 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %78, i32 0, i32 3
  %80 = load %struct.sm_element_struct*, %struct.sm_element_struct** %79, align 8
  %81 = icmp eq %struct.sm_element_struct* %80, null
  br i1 %81, label %82, label %87

82:                                               ; preds = %73
  %83 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %84 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %85 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %84, i32 0, i32 0
  %86 = load i32, i32* %85, align 8
  call void @sm_delrow(%struct.sm_matrix_struct* %83, i32 %86)
  br label %87

87:                                               ; preds = %82, %73
  %88 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %89 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %88, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp sge i32 %90, 0
  br i1 %91, label %92, label %110

92:                                               ; preds = %87
  %93 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %94 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %97 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %96, i32 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = icmp slt i32 %95, %98
  br i1 %99, label %100, label %110

100:                                              ; preds = %92
  %101 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %102 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %101, i32 0, i32 2
  %103 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %102, align 8
  %104 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %105 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %104, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %103, i64 %107
  %109 = load %struct.sm_col_struct*, %struct.sm_col_struct** %108, align 8
  br label %111

110:                                              ; preds = %92, %87
  br label %111

111:                                              ; preds = %110, %100
  %112 = phi %struct.sm_col_struct* [ %109, %100 ], [ null, %110 ]
  store %struct.sm_col_struct* %112, %struct.sm_col_struct** %6, align 8
  %113 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %114 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %113, i32 0, i32 3
  %115 = load %struct.sm_element_struct*, %struct.sm_element_struct** %114, align 8
  %116 = icmp eq %struct.sm_element_struct* %115, null
  br i1 %116, label %117, label %123

117:                                              ; preds = %111
  %118 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %119 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %118, i32 0, i32 2
  %120 = load %struct.sm_element_struct*, %struct.sm_element_struct** %119, align 8
  %121 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %122 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %121, i32 0, i32 3
  store %struct.sm_element_struct* %120, %struct.sm_element_struct** %122, align 8
  br label %131

123:                                              ; preds = %111
  %124 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %125 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %124, i32 0, i32 2
  %126 = load %struct.sm_element_struct*, %struct.sm_element_struct** %125, align 8
  %127 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %128 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %127, i32 0, i32 3
  %129 = load %struct.sm_element_struct*, %struct.sm_element_struct** %128, align 8
  %130 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %129, i32 0, i32 2
  store %struct.sm_element_struct* %126, %struct.sm_element_struct** %130, align 8
  br label %131

131:                                              ; preds = %123, %117
  %132 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %133 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %132, i32 0, i32 2
  %134 = load %struct.sm_element_struct*, %struct.sm_element_struct** %133, align 8
  %135 = icmp eq %struct.sm_element_struct* %134, null
  br i1 %135, label %136, label %142

136:                                              ; preds = %131
  %137 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %138 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %137, i32 0, i32 3
  %139 = load %struct.sm_element_struct*, %struct.sm_element_struct** %138, align 8
  %140 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %141 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %140, i32 0, i32 4
  store %struct.sm_element_struct* %139, %struct.sm_element_struct** %141, align 8
  br label %150

142:                                              ; preds = %131
  %143 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %144 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %143, i32 0, i32 3
  %145 = load %struct.sm_element_struct*, %struct.sm_element_struct** %144, align 8
  %146 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %147 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %146, i32 0, i32 2
  %148 = load %struct.sm_element_struct*, %struct.sm_element_struct** %147, align 8
  %149 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %148, i32 0, i32 3
  store %struct.sm_element_struct* %145, %struct.sm_element_struct** %149, align 8
  br label %150

150:                                              ; preds = %142, %136
  %151 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %152 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %151, i32 0, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = add nsw i32 %153, -1
  store i32 %154, i32* %152, align 4
  %155 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %156 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %155, i32 0, i32 3
  %157 = load %struct.sm_element_struct*, %struct.sm_element_struct** %156, align 8
  %158 = icmp eq %struct.sm_element_struct* %157, null
  br i1 %158, label %159, label %164

159:                                              ; preds = %150
  %160 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %161 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %162 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %161, i32 0, i32 1
  %163 = load i32, i32* %162, align 4
  call void @sm_delcol(%struct.sm_matrix_struct* %160, i32 %163)
  br label %164

164:                                              ; preds = %159, %150
  %165 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %166 = icmp ne %struct.sm_element_struct* %165, null
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %169 = bitcast %struct.sm_element_struct* %168 to i8*
  call void @free(i8* %169) #7
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %4, align 8
  br label %170

170:                                              ; preds = %167, %164, %9
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_delrow(%struct.sm_matrix_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.sm_matrix_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.sm_element_struct*, align 8
  %6 = alloca %struct.sm_element_struct*, align 8
  %7 = alloca %struct.sm_col_struct*, align 8
  %8 = alloca %struct.sm_row_struct*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %9 = load i32, i32* %4, align 4
  %10 = icmp sge i32 %9, 0
  br i1 %10, label %11, label %25

11:                                               ; preds = %2
  %12 = load i32, i32* %4, align 4
  %13 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %14 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp slt i32 %12, %15
  br i1 %16, label %17, label %25

17:                                               ; preds = %11
  %18 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %19 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %18, i32 0, i32 0
  %20 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %19, align 8
  %21 = load i32, i32* %4, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %20, i64 %22
  %24 = load %struct.sm_row_struct*, %struct.sm_row_struct** %23, align 8
  br label %26

25:                                               ; preds = %11, %2
  br label %26

26:                                               ; preds = %25, %17
  %27 = phi %struct.sm_row_struct* [ %24, %17 ], [ null, %25 ]
  store %struct.sm_row_struct* %27, %struct.sm_row_struct** %8, align 8
  %28 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %29 = icmp ne %struct.sm_row_struct* %28, null
  br i1 %29, label %30, label %134

30:                                               ; preds = %26
  %31 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %32 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %31, i32 0, i32 3
  %33 = load %struct.sm_element_struct*, %struct.sm_element_struct** %32, align 8
  store %struct.sm_element_struct* %33, %struct.sm_element_struct** %5, align 8
  br label %34

34:                                               ; preds = %78, %30
  %35 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %36 = icmp ne %struct.sm_element_struct* %35, null
  br i1 %36, label %37, label %80

37:                                               ; preds = %34
  %38 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %39 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %38, i32 0, i32 4
  %40 = load %struct.sm_element_struct*, %struct.sm_element_struct** %39, align 8
  store %struct.sm_element_struct* %40, %struct.sm_element_struct** %6, align 8
  %41 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %42 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp sge i32 %43, 0
  br i1 %44, label %45, label %63

45:                                               ; preds = %37
  %46 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %47 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %46, i32 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %50 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %49, i32 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %48, %51
  br i1 %52, label %53, label %63

53:                                               ; preds = %45
  %54 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %55 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %54, i32 0, i32 2
  %56 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %55, align 8
  %57 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %58 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %57, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %56, i64 %60
  %62 = load %struct.sm_col_struct*, %struct.sm_col_struct** %61, align 8
  br label %64

63:                                               ; preds = %45, %37
  br label %64

64:                                               ; preds = %63, %53
  %65 = phi %struct.sm_col_struct* [ %62, %53 ], [ null, %63 ]
  store %struct.sm_col_struct* %65, %struct.sm_col_struct** %7, align 8
  %66 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %67 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  call void (%struct.sm_col_struct*, %struct.sm_element_struct*, ...) bitcast (void (%struct.sm_col_struct*, %struct.sm_element_struct*)* @sm_col_remove_element to void (%struct.sm_col_struct*, %struct.sm_element_struct*, ...)*)(%struct.sm_col_struct* %66, %struct.sm_element_struct* %67)
  %68 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %69 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %68, i32 0, i32 3
  %70 = load %struct.sm_element_struct*, %struct.sm_element_struct** %69, align 8
  %71 = icmp eq %struct.sm_element_struct* %70, null
  br i1 %71, label %72, label %77

72:                                               ; preds = %64
  %73 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %74 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %75 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %74, i32 0, i32 0
  %76 = load i32, i32* %75, align 8
  call void @sm_delcol(%struct.sm_matrix_struct* %73, i32 %76)
  br label %77

77:                                               ; preds = %72, %64
  br label %78

78:                                               ; preds = %77
  %79 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  store %struct.sm_element_struct* %79, %struct.sm_element_struct** %5, align 8
  br label %34

80:                                               ; preds = %34
  %81 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %82 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %81, i32 0, i32 0
  %83 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %82, align 8
  %84 = load i32, i32* %4, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %83, i64 %85
  store %struct.sm_row_struct* null, %struct.sm_row_struct** %86, align 8
  %87 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %88 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %87, i32 0, i32 6
  %89 = load %struct.sm_row_struct*, %struct.sm_row_struct** %88, align 8
  %90 = icmp eq %struct.sm_row_struct* %89, null
  br i1 %90, label %91, label %97

91:                                               ; preds = %80
  %92 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %93 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %92, i32 0, i32 5
  %94 = load %struct.sm_row_struct*, %struct.sm_row_struct** %93, align 8
  %95 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %96 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %95, i32 0, i32 4
  store %struct.sm_row_struct* %94, %struct.sm_row_struct** %96, align 8
  br label %105

97:                                               ; preds = %80
  %98 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %99 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %98, i32 0, i32 5
  %100 = load %struct.sm_row_struct*, %struct.sm_row_struct** %99, align 8
  %101 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %102 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %101, i32 0, i32 6
  %103 = load %struct.sm_row_struct*, %struct.sm_row_struct** %102, align 8
  %104 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %103, i32 0, i32 5
  store %struct.sm_row_struct* %100, %struct.sm_row_struct** %104, align 8
  br label %105

105:                                              ; preds = %97, %91
  %106 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %107 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %106, i32 0, i32 5
  %108 = load %struct.sm_row_struct*, %struct.sm_row_struct** %107, align 8
  %109 = icmp eq %struct.sm_row_struct* %108, null
  br i1 %109, label %110, label %116

110:                                              ; preds = %105
  %111 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %112 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %111, i32 0, i32 6
  %113 = load %struct.sm_row_struct*, %struct.sm_row_struct** %112, align 8
  %114 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %115 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %114, i32 0, i32 5
  store %struct.sm_row_struct* %113, %struct.sm_row_struct** %115, align 8
  br label %124

116:                                              ; preds = %105
  %117 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %118 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %117, i32 0, i32 6
  %119 = load %struct.sm_row_struct*, %struct.sm_row_struct** %118, align 8
  %120 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %121 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %120, i32 0, i32 5
  %122 = load %struct.sm_row_struct*, %struct.sm_row_struct** %121, align 8
  %123 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %122, i32 0, i32 6
  store %struct.sm_row_struct* %119, %struct.sm_row_struct** %123, align 8
  br label %124

124:                                              ; preds = %116, %110
  %125 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %126 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %125, i32 0, i32 6
  %127 = load i32, i32* %126, align 8
  %128 = add nsw i32 %127, -1
  store i32 %128, i32* %126, align 8
  %129 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %130 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %129, i32 0, i32 4
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %130, align 8
  %131 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %132 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %131, i32 0, i32 3
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %132, align 8
  %133 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  call void (%struct.sm_row_struct*, ...) bitcast (void (%struct.sm_row_struct*)* @sm_row_free to void (%struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %133)
  br label %134

134:                                              ; preds = %124, %26
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_delcol(%struct.sm_matrix_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.sm_matrix_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.sm_element_struct*, align 8
  %6 = alloca %struct.sm_element_struct*, align 8
  %7 = alloca %struct.sm_row_struct*, align 8
  %8 = alloca %struct.sm_col_struct*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %9 = load i32, i32* %4, align 4
  %10 = icmp sge i32 %9, 0
  br i1 %10, label %11, label %25

11:                                               ; preds = %2
  %12 = load i32, i32* %4, align 4
  %13 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %14 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %13, i32 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = icmp slt i32 %12, %15
  br i1 %16, label %17, label %25

17:                                               ; preds = %11
  %18 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %19 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %18, i32 0, i32 2
  %20 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %19, align 8
  %21 = load i32, i32* %4, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %20, i64 %22
  %24 = load %struct.sm_col_struct*, %struct.sm_col_struct** %23, align 8
  br label %26

25:                                               ; preds = %11, %2
  br label %26

26:                                               ; preds = %25, %17
  %27 = phi %struct.sm_col_struct* [ %24, %17 ], [ null, %25 ]
  store %struct.sm_col_struct* %27, %struct.sm_col_struct** %8, align 8
  %28 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %29 = icmp ne %struct.sm_col_struct* %28, null
  br i1 %29, label %30, label %134

30:                                               ; preds = %26
  %31 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %32 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %31, i32 0, i32 3
  %33 = load %struct.sm_element_struct*, %struct.sm_element_struct** %32, align 8
  store %struct.sm_element_struct* %33, %struct.sm_element_struct** %5, align 8
  br label %34

34:                                               ; preds = %78, %30
  %35 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %36 = icmp ne %struct.sm_element_struct* %35, null
  br i1 %36, label %37, label %80

37:                                               ; preds = %34
  %38 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %39 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %38, i32 0, i32 2
  %40 = load %struct.sm_element_struct*, %struct.sm_element_struct** %39, align 8
  store %struct.sm_element_struct* %40, %struct.sm_element_struct** %6, align 8
  %41 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %42 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %41, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = icmp sge i32 %43, 0
  br i1 %44, label %45, label %63

45:                                               ; preds = %37
  %46 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %47 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %46, i32 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %50 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %48, %51
  br i1 %52, label %53, label %63

53:                                               ; preds = %45
  %54 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %55 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %54, i32 0, i32 0
  %56 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %55, align 8
  %57 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %58 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %56, i64 %60
  %62 = load %struct.sm_row_struct*, %struct.sm_row_struct** %61, align 8
  br label %64

63:                                               ; preds = %45, %37
  br label %64

64:                                               ; preds = %63, %53
  %65 = phi %struct.sm_row_struct* [ %62, %53 ], [ null, %63 ]
  store %struct.sm_row_struct* %65, %struct.sm_row_struct** %7, align 8
  %66 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %67 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  call void (%struct.sm_row_struct*, %struct.sm_element_struct*, ...) bitcast (void (%struct.sm_row_struct*, %struct.sm_element_struct*)* @sm_row_remove_element to void (%struct.sm_row_struct*, %struct.sm_element_struct*, ...)*)(%struct.sm_row_struct* %66, %struct.sm_element_struct* %67)
  %68 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %69 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %68, i32 0, i32 3
  %70 = load %struct.sm_element_struct*, %struct.sm_element_struct** %69, align 8
  %71 = icmp eq %struct.sm_element_struct* %70, null
  br i1 %71, label %72, label %77

72:                                               ; preds = %64
  %73 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %74 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %75 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %74, i32 0, i32 0
  %76 = load i32, i32* %75, align 8
  call void @sm_delrow(%struct.sm_matrix_struct* %73, i32 %76)
  br label %77

77:                                               ; preds = %72, %64
  br label %78

78:                                               ; preds = %77
  %79 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  store %struct.sm_element_struct* %79, %struct.sm_element_struct** %5, align 8
  br label %34

80:                                               ; preds = %34
  %81 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %82 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %81, i32 0, i32 2
  %83 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %82, align 8
  %84 = load i32, i32* %4, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %83, i64 %85
  store %struct.sm_col_struct* null, %struct.sm_col_struct** %86, align 8
  %87 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %88 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %87, i32 0, i32 6
  %89 = load %struct.sm_col_struct*, %struct.sm_col_struct** %88, align 8
  %90 = icmp eq %struct.sm_col_struct* %89, null
  br i1 %90, label %91, label %97

91:                                               ; preds = %80
  %92 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %93 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %92, i32 0, i32 5
  %94 = load %struct.sm_col_struct*, %struct.sm_col_struct** %93, align 8
  %95 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %96 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %95, i32 0, i32 7
  store %struct.sm_col_struct* %94, %struct.sm_col_struct** %96, align 8
  br label %105

97:                                               ; preds = %80
  %98 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %99 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %98, i32 0, i32 5
  %100 = load %struct.sm_col_struct*, %struct.sm_col_struct** %99, align 8
  %101 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %102 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %101, i32 0, i32 6
  %103 = load %struct.sm_col_struct*, %struct.sm_col_struct** %102, align 8
  %104 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %103, i32 0, i32 5
  store %struct.sm_col_struct* %100, %struct.sm_col_struct** %104, align 8
  br label %105

105:                                              ; preds = %97, %91
  %106 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %107 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %106, i32 0, i32 5
  %108 = load %struct.sm_col_struct*, %struct.sm_col_struct** %107, align 8
  %109 = icmp eq %struct.sm_col_struct* %108, null
  br i1 %109, label %110, label %116

110:                                              ; preds = %105
  %111 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %112 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %111, i32 0, i32 6
  %113 = load %struct.sm_col_struct*, %struct.sm_col_struct** %112, align 8
  %114 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %115 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %114, i32 0, i32 8
  store %struct.sm_col_struct* %113, %struct.sm_col_struct** %115, align 8
  br label %124

116:                                              ; preds = %105
  %117 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %118 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %117, i32 0, i32 6
  %119 = load %struct.sm_col_struct*, %struct.sm_col_struct** %118, align 8
  %120 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %121 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %120, i32 0, i32 5
  %122 = load %struct.sm_col_struct*, %struct.sm_col_struct** %121, align 8
  %123 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %122, i32 0, i32 6
  store %struct.sm_col_struct* %119, %struct.sm_col_struct** %123, align 8
  br label %124

124:                                              ; preds = %116, %110
  %125 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %126 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %125, i32 0, i32 9
  %127 = load i32, i32* %126, align 8
  %128 = add nsw i32 %127, -1
  store i32 %128, i32* %126, align 8
  %129 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %130 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %129, i32 0, i32 4
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %130, align 8
  %131 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  %132 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %131, i32 0, i32 3
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %132, align 8
  %133 = load %struct.sm_col_struct*, %struct.sm_col_struct** %8, align 8
  call void (%struct.sm_col_struct*, ...) bitcast (void (%struct.sm_col_struct*)* @sm_col_free to void (%struct.sm_col_struct*, ...)*)(%struct.sm_col_struct* %133)
  br label %134

134:                                              ; preds = %124, %26
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_copy_row(%struct.sm_matrix_struct* %0, i32 %1, %struct.sm_row_struct* %2) #0 {
  %4 = alloca %struct.sm_matrix_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.sm_row_struct*, align 8
  %7 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %4, align 8
  store i32 %1, i32* %5, align 4
  store %struct.sm_row_struct* %2, %struct.sm_row_struct** %6, align 8
  %8 = load %struct.sm_row_struct*, %struct.sm_row_struct** %6, align 8
  %9 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %8, i32 0, i32 3
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  store %struct.sm_element_struct* %10, %struct.sm_element_struct** %7, align 8
  br label %11

11:                                               ; preds = %21, %3
  %12 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %13 = icmp ne %struct.sm_element_struct* %12, null
  br i1 %13, label %14, label %25

14:                                               ; preds = %11
  %15 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %16 = load i32, i32* %5, align 4
  %17 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %18 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = call %struct.sm_element_struct* @sm_insert(%struct.sm_matrix_struct* %15, i32 %16, i32 %19)
  br label %21

21:                                               ; preds = %14
  %22 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %23 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %22, i32 0, i32 4
  %24 = load %struct.sm_element_struct*, %struct.sm_element_struct** %23, align 8
  store %struct.sm_element_struct* %24, %struct.sm_element_struct** %7, align 8
  br label %11

25:                                               ; preds = %11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_copy_col(%struct.sm_matrix_struct* %0, i32 %1, %struct.sm_col_struct* %2) #0 {
  %4 = alloca %struct.sm_matrix_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.sm_col_struct*, align 8
  %7 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %4, align 8
  store i32 %1, i32* %5, align 4
  store %struct.sm_col_struct* %2, %struct.sm_col_struct** %6, align 8
  %8 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %9 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %8, i32 0, i32 3
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  store %struct.sm_element_struct* %10, %struct.sm_element_struct** %7, align 8
  br label %11

11:                                               ; preds = %21, %3
  %12 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %13 = icmp ne %struct.sm_element_struct* %12, null
  br i1 %13, label %14, label %25

14:                                               ; preds = %11
  %15 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %16 = load i32, i32* %5, align 4
  %17 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %18 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = call %struct.sm_element_struct* @sm_insert(%struct.sm_matrix_struct* %15, i32 %16, i32 %19)
  br label %21

21:                                               ; preds = %14
  %22 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %23 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %22, i32 0, i32 2
  %24 = load %struct.sm_element_struct*, %struct.sm_element_struct** %23, align 8
  store %struct.sm_element_struct* %24, %struct.sm_element_struct** %7, align 8
  br label %11

25:                                               ; preds = %11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_row_struct* @sm_longest_row(%struct.sm_matrix_struct* %0) #0 {
  %2 = alloca %struct.sm_matrix_struct*, align 8
  %3 = alloca %struct.sm_row_struct*, align 8
  %4 = alloca %struct.sm_row_struct*, align 8
  %5 = alloca i32, align 4
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %2, align 8
  store i32 0, i32* %5, align 4
  store %struct.sm_row_struct* null, %struct.sm_row_struct** %3, align 8
  %6 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %7 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %6, i32 0, i32 4
  %8 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  store %struct.sm_row_struct* %8, %struct.sm_row_struct** %4, align 8
  br label %9

9:                                                ; preds = %24, %1
  %10 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %11 = icmp ne %struct.sm_row_struct* %10, null
  br i1 %11, label %12, label %28

12:                                               ; preds = %9
  %13 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %14 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %5, align 4
  %17 = icmp sgt i32 %15, %16
  br i1 %17, label %18, label %23

18:                                               ; preds = %12
  %19 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %20 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %5, align 4
  %22 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  store %struct.sm_row_struct* %22, %struct.sm_row_struct** %3, align 8
  br label %23

23:                                               ; preds = %18, %12
  br label %24

24:                                               ; preds = %23
  %25 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %26 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %25, i32 0, i32 5
  %27 = load %struct.sm_row_struct*, %struct.sm_row_struct** %26, align 8
  store %struct.sm_row_struct* %27, %struct.sm_row_struct** %4, align 8
  br label %9

28:                                               ; preds = %9
  %29 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  ret %struct.sm_row_struct* %29
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_col_struct* @sm_longest_col(%struct.sm_matrix_struct* %0) #0 {
  %2 = alloca %struct.sm_matrix_struct*, align 8
  %3 = alloca %struct.sm_col_struct*, align 8
  %4 = alloca %struct.sm_col_struct*, align 8
  %5 = alloca i32, align 4
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %2, align 8
  store i32 0, i32* %5, align 4
  store %struct.sm_col_struct* null, %struct.sm_col_struct** %3, align 8
  %6 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %7 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %6, i32 0, i32 7
  %8 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  store %struct.sm_col_struct* %8, %struct.sm_col_struct** %4, align 8
  br label %9

9:                                                ; preds = %24, %1
  %10 = load %struct.sm_col_struct*, %struct.sm_col_struct** %4, align 8
  %11 = icmp ne %struct.sm_col_struct* %10, null
  br i1 %11, label %12, label %28

12:                                               ; preds = %9
  %13 = load %struct.sm_col_struct*, %struct.sm_col_struct** %4, align 8
  %14 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %5, align 4
  %17 = icmp sgt i32 %15, %16
  br i1 %17, label %18, label %23

18:                                               ; preds = %12
  %19 = load %struct.sm_col_struct*, %struct.sm_col_struct** %4, align 8
  %20 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %5, align 4
  %22 = load %struct.sm_col_struct*, %struct.sm_col_struct** %4, align 8
  store %struct.sm_col_struct* %22, %struct.sm_col_struct** %3, align 8
  br label %23

23:                                               ; preds = %18, %12
  br label %24

24:                                               ; preds = %23
  %25 = load %struct.sm_col_struct*, %struct.sm_col_struct** %4, align 8
  %26 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %25, i32 0, i32 5
  %27 = load %struct.sm_col_struct*, %struct.sm_col_struct** %26, align 8
  store %struct.sm_col_struct* %27, %struct.sm_col_struct** %4, align 8
  br label %9

28:                                               ; preds = %9
  %29 = load %struct.sm_col_struct*, %struct.sm_col_struct** %3, align 8
  ret %struct.sm_col_struct* %29
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sm_num_elements(%struct.sm_matrix_struct* %0) #0 {
  %2 = alloca %struct.sm_matrix_struct*, align 8
  %3 = alloca %struct.sm_row_struct*, align 8
  %4 = alloca i32, align 4
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %2, align 8
  store i32 0, i32* %4, align 4
  %5 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %2, align 8
  %6 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %5, i32 0, i32 4
  %7 = load %struct.sm_row_struct*, %struct.sm_row_struct** %6, align 8
  store %struct.sm_row_struct* %7, %struct.sm_row_struct** %3, align 8
  br label %8

8:                                                ; preds = %17, %1
  %9 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %10 = icmp ne %struct.sm_row_struct* %9, null
  br i1 %10, label %11, label %21

11:                                               ; preds = %8
  %12 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %13 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = load i32, i32* %4, align 4
  %16 = add nsw i32 %15, %14
  store i32 %16, i32* %4, align 4
  br label %17

17:                                               ; preds = %11
  %18 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %19 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %18, i32 0, i32 5
  %20 = load %struct.sm_row_struct*, %struct.sm_row_struct** %19, align 8
  store %struct.sm_row_struct* %20, %struct.sm_row_struct** %3, align 8
  br label %8

21:                                               ; preds = %8
  %22 = load i32, i32* %4, align 4
  ret i32 %22
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sm_read(%struct._IO_FILE* %0, %struct.sm_matrix_struct** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct.sm_matrix_struct**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store %struct.sm_matrix_struct** %1, %struct.sm_matrix_struct*** %5, align 8
  %9 = call %struct.sm_matrix_struct* @sm_alloc()
  %10 = load %struct.sm_matrix_struct**, %struct.sm_matrix_struct*** %5, align 8
  store %struct.sm_matrix_struct* %9, %struct.sm_matrix_struct** %10, align 8
  br label %11

11:                                               ; preds = %27, %2
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %13 = call i32 @feof(%struct._IO_FILE* %12) #7
  %14 = icmp ne i32 %13, 0
  %15 = xor i1 %14, true
  br i1 %15, label %16, label %33

16:                                               ; preds = %11
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %18 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.403, i64 0, i64 0), i32* %6, i32* %7)
  store i32 %18, i32* %8, align 4
  %19 = load i32, i32* %8, align 4
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  store i32 1, i32* %3, align 4
  br label %34

22:                                               ; preds = %16
  %23 = load i32, i32* %8, align 4
  %24 = icmp ne i32 %23, 2
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  store i32 0, i32* %3, align 4
  br label %34

26:                                               ; preds = %22
  br label %27

27:                                               ; preds = %26
  %28 = load %struct.sm_matrix_struct**, %struct.sm_matrix_struct*** %5, align 8
  %29 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %28, align 8
  %30 = load i32, i32* %6, align 4
  %31 = load i32, i32* %7, align 4
  %32 = call %struct.sm_element_struct* @sm_insert(%struct.sm_matrix_struct* %29, i32 %30, i32 %31)
  br label %11

33:                                               ; preds = %11
  store i32 1, i32* %3, align 4
  br label %34

34:                                               ; preds = %33, %25, %21
  %35 = load i32, i32* %3, align 4
  ret i32 %35
}

; Function Attrs: nounwind
declare dso_local i32 @feof(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sm_read_compressed(%struct._IO_FILE* %0, %struct.sm_matrix_struct** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct.sm_matrix_struct**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store %struct.sm_matrix_struct** %1, %struct.sm_matrix_struct*** %5, align 8
  %12 = call %struct.sm_matrix_struct* @sm_alloc()
  %13 = load %struct.sm_matrix_struct**, %struct.sm_matrix_struct*** %5, align 8
  store %struct.sm_matrix_struct* %12, %struct.sm_matrix_struct** %13, align 8
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %15 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.403, i64 0, i64 0), i32* %9, i32* %10)
  %16 = icmp ne i32 %15, 2
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %72

18:                                               ; preds = %2
  %19 = load %struct.sm_matrix_struct**, %struct.sm_matrix_struct*** %5, align 8
  %20 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %19, align 8
  %21 = load i32, i32* %9, align 4
  %22 = load i32, i32* %10, align 4
  call void @sm_resize(%struct.sm_matrix_struct* %20, i32 %21, i32 %22)
  store i32 0, i32* %6, align 4
  br label %23

23:                                               ; preds = %68, %18
  %24 = load i32, i32* %6, align 4
  %25 = load i32, i32* %9, align 4
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %27, label %71

27:                                               ; preds = %23
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %29 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.404, i64 0, i64 0), i64* %11)
  %30 = icmp ne i32 %29, 1
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  store i32 0, i32* %3, align 4
  br label %72

32:                                               ; preds = %27
  store i32 0, i32* %7, align 4
  br label %33

33:                                               ; preds = %64, %32
  %34 = load i32, i32* %7, align 4
  %35 = load i32, i32* %10, align 4
  %36 = icmp slt i32 %34, %35
  br i1 %36, label %37, label %67

37:                                               ; preds = %33
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %39 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.404, i64 0, i64 0), i64* %11)
  %40 = icmp ne i32 %39, 1
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  store i32 0, i32* %3, align 4
  br label %72

42:                                               ; preds = %37
  %43 = load i32, i32* %7, align 4
  store i32 %43, i32* %8, align 4
  br label %44

44:                                               ; preds = %58, %42
  %45 = load i64, i64* %11, align 8
  %46 = icmp ne i64 %45, 0
  br i1 %46, label %47, label %63

47:                                               ; preds = %44
  %48 = load i64, i64* %11, align 8
  %49 = and i64 %48, 1
  %50 = icmp ne i64 %49, 0
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = load %struct.sm_matrix_struct**, %struct.sm_matrix_struct*** %5, align 8
  %53 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %52, align 8
  %54 = load i32, i32* %6, align 4
  %55 = load i32, i32* %8, align 4
  %56 = call %struct.sm_element_struct* @sm_insert(%struct.sm_matrix_struct* %53, i32 %54, i32 %55)
  br label %57

57:                                               ; preds = %51, %47
  br label %58

58:                                               ; preds = %57
  %59 = load i64, i64* %11, align 8
  %60 = lshr i64 %59, 1
  store i64 %60, i64* %11, align 8
  %61 = load i32, i32* %8, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %8, align 4
  br label %44

63:                                               ; preds = %44
  br label %64

64:                                               ; preds = %63
  %65 = load i32, i32* %7, align 4
  %66 = add nsw i32 %65, 32
  store i32 %66, i32* %7, align 4
  br label %33

67:                                               ; preds = %33
  br label %68

68:                                               ; preds = %67
  %69 = load i32, i32* %6, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %6, align 4
  br label %23

71:                                               ; preds = %23
  store i32 1, i32* %3, align 4
  br label %72

72:                                               ; preds = %71, %41, %31, %17
  %73 = load i32, i32* %3, align 4
  ret i32 %73
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_write(%struct._IO_FILE* %0, %struct.sm_matrix_struct* %1) #0 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca %struct.sm_matrix_struct*, align 8
  %5 = alloca %struct.sm_row_struct*, align 8
  %6 = alloca %struct.sm_element_struct*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store %struct.sm_matrix_struct* %1, %struct.sm_matrix_struct** %4, align 8
  %7 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %8 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %7, i32 0, i32 4
  %9 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  store %struct.sm_row_struct* %9, %struct.sm_row_struct** %5, align 8
  br label %10

10:                                               ; preds = %34, %2
  %11 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %12 = icmp ne %struct.sm_row_struct* %11, null
  br i1 %12, label %13, label %38

13:                                               ; preds = %10
  %14 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %15 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %14, i32 0, i32 3
  %16 = load %struct.sm_element_struct*, %struct.sm_element_struct** %15, align 8
  store %struct.sm_element_struct* %16, %struct.sm_element_struct** %6, align 8
  br label %17

17:                                               ; preds = %29, %13
  %18 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %19 = icmp ne %struct.sm_element_struct* %18, null
  br i1 %19, label %20, label %33

20:                                               ; preds = %17
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %22 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %23 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %26 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.407, i64 0, i64 0), i32 %24, i32 %27)
  br label %29

29:                                               ; preds = %20
  %30 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %31 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %30, i32 0, i32 4
  %32 = load %struct.sm_element_struct*, %struct.sm_element_struct** %31, align 8
  store %struct.sm_element_struct* %32, %struct.sm_element_struct** %6, align 8
  br label %17

33:                                               ; preds = %17
  br label %34

34:                                               ; preds = %33
  %35 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %36 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %35, i32 0, i32 5
  %37 = load %struct.sm_row_struct*, %struct.sm_row_struct** %36, align 8
  store %struct.sm_row_struct* %37, %struct.sm_row_struct** %5, align 8
  br label %10

38:                                               ; preds = %10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_print(%struct._IO_FILE* %0, %struct.sm_matrix_struct* %1) #0 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca %struct.sm_matrix_struct*, align 8
  %5 = alloca %struct.sm_row_struct*, align 8
  %6 = alloca %struct.sm_col_struct*, align 8
  %7 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store %struct.sm_matrix_struct* %1, %struct.sm_matrix_struct** %4, align 8
  %8 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %9 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %8, i32 0, i32 8
  %10 = load %struct.sm_col_struct*, %struct.sm_col_struct** %9, align 8
  %11 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp sge i32 %12, 100
  br i1 %13, label %14, label %38

14:                                               ; preds = %2
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.408, i64 0, i64 0))
  %17 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %18 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %17, i32 0, i32 7
  %19 = load %struct.sm_col_struct*, %struct.sm_col_struct** %18, align 8
  store %struct.sm_col_struct* %19, %struct.sm_col_struct** %6, align 8
  br label %20

20:                                               ; preds = %31, %14
  %21 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %22 = icmp ne %struct.sm_col_struct* %21, null
  br i1 %22, label %23, label %35

23:                                               ; preds = %20
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %25 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %26 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = sdiv i32 %27, 100
  %29 = srem i32 %28, 10
  %30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.409, i64 0, i64 0), i32 %29)
  br label %31

31:                                               ; preds = %23
  %32 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %33 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %32, i32 0, i32 5
  %34 = load %struct.sm_col_struct*, %struct.sm_col_struct** %33, align 8
  store %struct.sm_col_struct* %34, %struct.sm_col_struct** %6, align 8
  br label %20

35:                                               ; preds = %20
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %37 = call i32 @putc(i32 10, %struct._IO_FILE* %36)
  br label %38

38:                                               ; preds = %35, %2
  %39 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %40 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %39, i32 0, i32 8
  %41 = load %struct.sm_col_struct*, %struct.sm_col_struct** %40, align 8
  %42 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %41, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = icmp sge i32 %43, 10
  br i1 %44, label %45, label %69

45:                                               ; preds = %38
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.408, i64 0, i64 0))
  %48 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %49 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %48, i32 0, i32 7
  %50 = load %struct.sm_col_struct*, %struct.sm_col_struct** %49, align 8
  store %struct.sm_col_struct* %50, %struct.sm_col_struct** %6, align 8
  br label %51

51:                                               ; preds = %62, %45
  %52 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %53 = icmp ne %struct.sm_col_struct* %52, null
  br i1 %53, label %54, label %66

54:                                               ; preds = %51
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %56 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %57 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = sdiv i32 %58, 10
  %60 = srem i32 %59, 10
  %61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.409, i64 0, i64 0), i32 %60)
  br label %62

62:                                               ; preds = %54
  %63 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %64 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %63, i32 0, i32 5
  %65 = load %struct.sm_col_struct*, %struct.sm_col_struct** %64, align 8
  store %struct.sm_col_struct* %65, %struct.sm_col_struct** %6, align 8
  br label %51

66:                                               ; preds = %51
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %68 = call i32 @putc(i32 10, %struct._IO_FILE* %67)
  br label %69

69:                                               ; preds = %66, %38
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.408, i64 0, i64 0))
  %72 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %73 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %72, i32 0, i32 7
  %74 = load %struct.sm_col_struct*, %struct.sm_col_struct** %73, align 8
  store %struct.sm_col_struct* %74, %struct.sm_col_struct** %6, align 8
  br label %75

75:                                               ; preds = %85, %69
  %76 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %77 = icmp ne %struct.sm_col_struct* %76, null
  br i1 %77, label %78, label %89

78:                                               ; preds = %75
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %80 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %81 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %80, i32 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = srem i32 %82, 10
  %84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.409, i64 0, i64 0), i32 %83)
  br label %85

85:                                               ; preds = %78
  %86 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %87 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %86, i32 0, i32 5
  %88 = load %struct.sm_col_struct*, %struct.sm_col_struct** %87, align 8
  store %struct.sm_col_struct* %88, %struct.sm_col_struct** %6, align 8
  br label %75

89:                                               ; preds = %75
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %91 = call i32 @putc(i32 10, %struct._IO_FILE* %90)
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.408, i64 0, i64 0))
  %94 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %95 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %94, i32 0, i32 7
  %96 = load %struct.sm_col_struct*, %struct.sm_col_struct** %95, align 8
  store %struct.sm_col_struct* %96, %struct.sm_col_struct** %6, align 8
  br label %97

97:                                               ; preds = %103, %89
  %98 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %99 = icmp ne %struct.sm_col_struct* %98, null
  br i1 %99, label %100, label %107

100:                                              ; preds = %97
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %102 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %101, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.410, i64 0, i64 0))
  br label %103

103:                                              ; preds = %100
  %104 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %105 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %104, i32 0, i32 5
  %106 = load %struct.sm_col_struct*, %struct.sm_col_struct** %105, align 8
  store %struct.sm_col_struct* %106, %struct.sm_col_struct** %6, align 8
  br label %97

107:                                              ; preds = %97
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %109 = call i32 @putc(i32 10, %struct._IO_FILE* %108)
  %110 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %111 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %110, i32 0, i32 4
  %112 = load %struct.sm_row_struct*, %struct.sm_row_struct** %111, align 8
  store %struct.sm_row_struct* %112, %struct.sm_row_struct** %5, align 8
  br label %113

113:                                              ; preds = %147, %107
  %114 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %115 = icmp ne %struct.sm_row_struct* %114, null
  br i1 %115, label %116, label %151

116:                                              ; preds = %113
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %118 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %119 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %118, i32 0, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %117, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.411, i64 0, i64 0), i32 %120)
  %122 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %123 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %122, i32 0, i32 7
  %124 = load %struct.sm_col_struct*, %struct.sm_col_struct** %123, align 8
  store %struct.sm_col_struct* %124, %struct.sm_col_struct** %6, align 8
  br label %125

125:                                              ; preds = %140, %116
  %126 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %127 = icmp ne %struct.sm_col_struct* %126, null
  br i1 %127, label %128, label %144

128:                                              ; preds = %125
  %129 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %130 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %131 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %130, i32 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = call %struct.sm_element_struct* (%struct.sm_row_struct*, i32, ...) bitcast (%struct.sm_element_struct* (%struct.sm_row_struct*, i32)* @sm_row_find to %struct.sm_element_struct* (%struct.sm_row_struct*, i32, ...)*)(%struct.sm_row_struct* %129, i32 %132)
  %134 = icmp ne %struct.sm_element_struct* %133, null
  %135 = zext i1 %134 to i64
  %136 = select i1 %134, i32 49, i32 46
  store i32 %136, i32* %7, align 4
  %137 = load i32, i32* %7, align 4
  %138 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %139 = call i32 @putc(i32 %137, %struct._IO_FILE* %138)
  br label %140

140:                                              ; preds = %128
  %141 = load %struct.sm_col_struct*, %struct.sm_col_struct** %6, align 8
  %142 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %141, i32 0, i32 5
  %143 = load %struct.sm_col_struct*, %struct.sm_col_struct** %142, align 8
  store %struct.sm_col_struct* %143, %struct.sm_col_struct** %6, align 8
  br label %125

144:                                              ; preds = %125
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %146 = call i32 @putc(i32 10, %struct._IO_FILE* %145)
  br label %147

147:                                              ; preds = %144
  %148 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %149 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %148, i32 0, i32 5
  %150 = load %struct.sm_row_struct*, %struct.sm_row_struct** %149, align 8
  store %struct.sm_row_struct* %150, %struct.sm_row_struct** %5, align 8
  br label %113

151:                                              ; preds = %113
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_dump(%struct.sm_matrix_struct* %0, i8* %1, i32 %2) #0 {
  %4 = alloca %struct.sm_matrix_struct*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct._IO_FILE*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %8, %struct._IO_FILE** %7, align 8
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %10 = load i8*, i8** %5, align 8
  %11 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %12 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %11, i32 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %15 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %14, i32 0, i32 9
  %16 = load i32, i32* %15, align 8
  %17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.412, i64 0, i64 0), i8* %10, i32 %13, i32 %16)
  %18 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %19 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %18, i32 0, i32 6
  %20 = load i32, i32* %19, align 8
  %21 = load i32, i32* %6, align 4
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %23, label %26

23:                                               ; preds = %3
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %25 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  call void @sm_print(%struct._IO_FILE* %24, %struct.sm_matrix_struct* %25)
  br label %26

26:                                               ; preds = %23, %3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_cleanup() #0 {
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_row_struct* @sm_minimum_cover(%struct.sm_matrix_struct* %0, i32* %1, i32 %2, i32 %3) #0 {
  %5 = alloca %struct.sm_row_struct*, align 8
  %6 = alloca %struct.sm_matrix_struct*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.stats_struct, align 8
  %11 = alloca %struct.solution_struct*, align 8
  %12 = alloca %struct.solution_struct*, align 8
  %13 = alloca %struct.sm_row_struct*, align 8
  %14 = alloca %struct.sm_row_struct*, align 8
  %15 = alloca %struct.sm_col_struct*, align 8
  %16 = alloca %struct.sm_matrix_struct*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca double, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %6, align 8
  store i32* %1, i32** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %20 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %21 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %20, i32 0, i32 6
  %22 = load i32, i32* %21, align 8
  %23 = icmp sle i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %4
  %25 = call %struct.sm_row_struct* (...) bitcast (%struct.sm_row_struct* ()* @sm_row_alloc to %struct.sm_row_struct* (...)*)()
  store %struct.sm_row_struct* %25, %struct.sm_row_struct** %5, align 8
  br label %179

26:                                               ; preds = %4
  %27 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %28 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 8
  store i64 %27, i64* %28, align 8
  %29 = load i32, i32* %9, align 4
  %30 = icmp sgt i32 %29, 0
  %31 = zext i1 %30 to i32
  %32 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 0
  store i32 %31, i32* %32, align 8
  %33 = load i32, i32* %9, align 4
  %34 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 1
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 2
  store i32 -1, i32* %35, align 8
  %36 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 3
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 5
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 4
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 6
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 7
  store i32 0, i32* %40, align 4
  %41 = load i32, i32* %8, align 4
  %42 = icmp ne i32 %41, 0
  %43 = zext i1 %42 to i32
  %44 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 9
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 10
  store i32 -1, i32* %45, align 4
  store i32 0, i32* %17, align 4
  %46 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %47 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %46, i32 0, i32 4
  %48 = load %struct.sm_row_struct*, %struct.sm_row_struct** %47, align 8
  store %struct.sm_row_struct* %48, %struct.sm_row_struct** %13, align 8
  br label %49

49:                                               ; preds = %58, %26
  %50 = load %struct.sm_row_struct*, %struct.sm_row_struct** %13, align 8
  %51 = icmp ne %struct.sm_row_struct* %50, null
  br i1 %51, label %52, label %62

52:                                               ; preds = %49
  %53 = load %struct.sm_row_struct*, %struct.sm_row_struct** %13, align 8
  %54 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = load i32, i32* %17, align 4
  %57 = add nsw i32 %56, %55
  store i32 %57, i32* %17, align 4
  br label %58

58:                                               ; preds = %52
  %59 = load %struct.sm_row_struct*, %struct.sm_row_struct** %13, align 8
  %60 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %59, i32 0, i32 5
  %61 = load %struct.sm_row_struct*, %struct.sm_row_struct** %60, align 8
  store %struct.sm_row_struct* %61, %struct.sm_row_struct** %13, align 8
  br label %49

62:                                               ; preds = %49
  %63 = load i32, i32* %17, align 4
  %64 = sitofp i32 %63 to double
  %65 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %66 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %65, i32 0, i32 6
  %67 = load i32, i32* %66, align 8
  %68 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %69 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %68, i32 0, i32 9
  %70 = load i32, i32* %69, align 8
  %71 = mul nsw i32 %67, %70
  %72 = sitofp i32 %71 to double
  %73 = fdiv double %64, %72
  store double %73, double* %19, align 8
  store i32 1, i32* %18, align 4
  %74 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %75 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %74, i32 0, i32 7
  %76 = load %struct.sm_col_struct*, %struct.sm_col_struct** %75, align 8
  store %struct.sm_col_struct* %76, %struct.sm_col_struct** %15, align 8
  br label %77

77:                                               ; preds = %96, %62
  %78 = load %struct.sm_col_struct*, %struct.sm_col_struct** %15, align 8
  %79 = icmp ne %struct.sm_col_struct* %78, null
  br i1 %79, label %80, label %100

80:                                               ; preds = %77
  %81 = load i32*, i32** %7, align 8
  %82 = icmp eq i32* %81, null
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  br label %92

84:                                               ; preds = %80
  %85 = load i32*, i32** %7, align 8
  %86 = load %struct.sm_col_struct*, %struct.sm_col_struct** %15, align 8
  %87 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %86, i32 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i32, i32* %85, i64 %89
  %91 = load i32, i32* %90, align 4
  br label %92

92:                                               ; preds = %84, %83
  %93 = phi i32 [ 1, %83 ], [ %91, %84 ]
  %94 = load i32, i32* %18, align 4
  %95 = add nsw i32 %94, %93
  store i32 %95, i32* %18, align 4
  br label %96

96:                                               ; preds = %92
  %97 = load %struct.sm_col_struct*, %struct.sm_col_struct** %15, align 8
  %98 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %97, i32 0, i32 5
  %99 = load %struct.sm_col_struct*, %struct.sm_col_struct** %98, align 8
  store %struct.sm_col_struct* %99, %struct.sm_col_struct** %15, align 8
  br label %77

100:                                              ; preds = %77
  %101 = call %struct.solution_struct* (...) bitcast (%struct.solution_struct* ()* @solution_alloc to %struct.solution_struct* (...)*)()
  store %struct.solution_struct* %101, %struct.solution_struct** %12, align 8
  %102 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %103 = call %struct.sm_matrix_struct* (%struct.sm_matrix_struct*, ...) bitcast (%struct.sm_matrix_struct* (%struct.sm_matrix_struct*)* @sm_dup to %struct.sm_matrix_struct* (%struct.sm_matrix_struct*, ...)*)(%struct.sm_matrix_struct* %102)
  store %struct.sm_matrix_struct* %103, %struct.sm_matrix_struct** %16, align 8
  %104 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %16, align 8
  %105 = load %struct.solution_struct*, %struct.solution_struct** %12, align 8
  %106 = load i32*, i32** %7, align 8
  %107 = load i32, i32* %18, align 4
  %108 = call %struct.solution_struct* @sm_mincov(%struct.sm_matrix_struct* %104, %struct.solution_struct* %105, i32* %106, i32 0, i32 %107, i32 0, %struct.stats_struct* %10)
  store %struct.solution_struct* %108, %struct.solution_struct** %11, align 8
  %109 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %16, align 8
  call void (%struct.sm_matrix_struct*, ...) bitcast (void (%struct.sm_matrix_struct*)* @sm_free to void (%struct.sm_matrix_struct*, ...)*)(%struct.sm_matrix_struct* %109)
  %110 = load %struct.solution_struct*, %struct.solution_struct** %12, align 8
  call void (%struct.solution_struct*, ...) bitcast (void (%struct.solution_struct*)* @solution_free to void (%struct.solution_struct*, ...)*)(%struct.solution_struct* %110)
  %111 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %162

114:                                              ; preds = %100
  %115 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 9
  %116 = load i32, i32* %115, align 8
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %123

118:                                              ; preds = %114
  %119 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.419, i64 0, i64 0))
  %120 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 10
  %121 = load i32, i32* %120, align 4
  %122 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.420, i64 0, i64 0), i32 %121)
  br label %123

123:                                              ; preds = %118, %114
  %124 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %125 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %124, i32 0, i32 6
  %126 = load i32, i32* %125, align 8
  %127 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %128 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %127, i32 0, i32 9
  %129 = load i32, i32* %128, align 8
  %130 = load i32, i32* %17, align 4
  %131 = load double, double* %19, align 8
  %132 = fmul double %131, 1.000000e+02
  %133 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2.421, i64 0, i64 0), i32 %126, i32 %129, i32 %130, double %132)
  %134 = load %struct.solution_struct*, %struct.solution_struct** %11, align 8
  %135 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %134, i32 0, i32 0
  %136 = load %struct.sm_row_struct*, %struct.sm_row_struct** %135, align 8
  %137 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %136, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.422, i64 0, i64 0), i32 %138)
  %140 = load %struct.solution_struct*, %struct.solution_struct** %11, align 8
  %141 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %140, i32 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.423, i64 0, i64 0), i32 %142)
  %144 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %145 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 8
  %146 = load i64, i64* %145, align 8
  %147 = sub nsw i64 %144, %146
  %148 = call i8* @util_print_time(i64 %147)
  %149 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5.424, i64 0, i64 0), i8* %148)
  %150 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 5
  %151 = load i32, i32* %150, align 4
  %152 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6.425, i64 0, i64 0), i32 %151)
  %153 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 6
  %154 = load i32, i32* %153, align 8
  %155 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7.426, i64 0, i64 0), i32 %154)
  %156 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 3
  %157 = load i32, i32* %156, align 4
  %158 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8.427, i64 0, i64 0), i32 %157)
  %159 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %10, i32 0, i32 2
  %160 = load i32, i32* %159, align 8
  %161 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9.428, i64 0, i64 0), i32 %160)
  br label %162

162:                                              ; preds = %123, %100
  %163 = load %struct.solution_struct*, %struct.solution_struct** %11, align 8
  %164 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %163, i32 0, i32 0
  %165 = load %struct.sm_row_struct*, %struct.sm_row_struct** %164, align 8
  %166 = call %struct.sm_row_struct* (%struct.sm_row_struct*, ...) bitcast (%struct.sm_row_struct* (%struct.sm_row_struct*)* @sm_row_dup to %struct.sm_row_struct* (%struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %165)
  store %struct.sm_row_struct* %166, %struct.sm_row_struct** %14, align 8
  %167 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %168 = load %struct.sm_row_struct*, %struct.sm_row_struct** %14, align 8
  %169 = call i32 @verify_cover(%struct.sm_matrix_struct* %167, %struct.sm_row_struct* %168)
  %170 = icmp ne i32 %169, 0
  br i1 %170, label %176, label %171

171:                                              ; preds = %162
  %172 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %173 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %172, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.10.429, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.430, i64 0, i64 0), i32 91, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.12.431, i64 0, i64 0))
  %174 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %175 = call i32 @fflush(%struct._IO_FILE* %174)
  call void @abort() #10
  unreachable

176:                                              ; preds = %162
  %177 = load %struct.solution_struct*, %struct.solution_struct** %11, align 8
  call void (%struct.solution_struct*, ...) bitcast (void (%struct.solution_struct*)* @solution_free to void (%struct.solution_struct*, ...)*)(%struct.solution_struct* %177)
  %178 = load %struct.sm_row_struct*, %struct.sm_row_struct** %14, align 8
  store %struct.sm_row_struct* %178, %struct.sm_row_struct** %5, align 8
  br label %179

179:                                              ; preds = %176, %24
  %180 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  ret %struct.sm_row_struct* %180
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.solution_struct* @sm_mincov(%struct.sm_matrix_struct* %0, %struct.solution_struct* %1, i32* %2, i32 %3, i32 %4, i32 %5, %struct.stats_struct* %6) #0 {
  %8 = alloca %struct.solution_struct*, align 8
  %9 = alloca %struct.sm_matrix_struct*, align 8
  %10 = alloca %struct.solution_struct*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.stats_struct*, align 8
  %16 = alloca %struct.sm_matrix_struct*, align 8
  %17 = alloca %struct.sm_matrix_struct*, align 8
  %18 = alloca %struct.sm_matrix_struct*, align 8
  %19 = alloca %struct.sm_matrix_struct*, align 8
  %20 = alloca %struct.sm_element_struct*, align 8
  %21 = alloca %struct.solution_struct*, align 8
  %22 = alloca %struct.solution_struct*, align 8
  %23 = alloca %struct.solution_struct*, align 8
  %24 = alloca %struct.solution_struct*, align 8
  %25 = alloca %struct.solution_struct*, align 8
  %26 = alloca %struct.solution_struct*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %9, align 8
  store %struct.solution_struct* %1, %struct.solution_struct** %10, align 8
  store i32* %2, i32** %11, align 8
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store i32 %5, i32* %14, align 4
  store %struct.stats_struct* %6, %struct.stats_struct** %15, align 8
  %30 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %31 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %30, i32 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %31, align 4
  %34 = load i32, i32* %14, align 4
  %35 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %36 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %35, i32 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = icmp sgt i32 %34, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %7
  %40 = load i32, i32* %14, align 4
  %41 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %42 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %41, i32 0, i32 2
  store i32 %40, i32* %42, align 8
  br label %43

43:                                               ; preds = %39, %7
  %44 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %45 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %44, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %43
  %49 = load i32, i32* %14, align 4
  %50 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %51 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %50, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp sle i32 %49, %52
  br label %54

54:                                               ; preds = %48, %43
  %55 = phi i1 [ false, %43 ], [ %53, %48 ]
  %56 = zext i1 %55 to i32
  store i32 %56, i32* %29, align 4
  %57 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %9, align 8
  %58 = load %struct.solution_struct*, %struct.solution_struct** %10, align 8
  %59 = load i32*, i32** %11, align 8
  %60 = load i32, i32* %13, align 4
  call void @select_essential(%struct.sm_matrix_struct* %57, %struct.solution_struct* %58, i32* %59, i32 %60)
  %61 = load %struct.solution_struct*, %struct.solution_struct** %10, align 8
  %62 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = load i32, i32* %13, align 4
  %65 = icmp sge i32 %63, %64
  br i1 %65, label %66, label %67

66:                                               ; preds = %54
  store %struct.solution_struct* null, %struct.solution_struct** %8, align 8
  br label %387

67:                                               ; preds = %54
  %68 = load i32*, i32** %11, align 8
  %69 = icmp eq i32* %68, null
  br i1 %69, label %70, label %83

70:                                               ; preds = %67
  %71 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %9, align 8
  %72 = load %struct.solution_struct*, %struct.solution_struct** %10, align 8
  %73 = load i32*, i32** %11, align 8
  %74 = load i32, i32* %12, align 4
  %75 = load i32, i32* %13, align 4
  %76 = load i32, i32* %14, align 4
  %77 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %78 = call i32 (%struct.sm_matrix_struct*, %struct.solution_struct*, i32*, i32, i32, i32, %struct.stats_struct*, %struct.solution_struct**, ...) bitcast (i32 (%struct.sm_matrix_struct*, %struct.solution_struct*, i32*, i32, i32, i32, %struct.stats_struct*, %struct.solution_struct**)* @gimpel_reduce to i32 (%struct.sm_matrix_struct*, %struct.solution_struct*, i32*, i32, i32, i32, %struct.stats_struct*, %struct.solution_struct**, ...)*)(%struct.sm_matrix_struct* %71, %struct.solution_struct* %72, i32* %73, i32 %74, i32 %75, i32 %76, %struct.stats_struct* %77, %struct.solution_struct** %23)
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %70
  %81 = load %struct.solution_struct*, %struct.solution_struct** %23, align 8
  store %struct.solution_struct* %81, %struct.solution_struct** %8, align 8
  br label %387

82:                                               ; preds = %70
  br label %83

83:                                               ; preds = %82, %67
  %84 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %9, align 8
  %85 = load i32*, i32** %11, align 8
  %86 = call %struct.solution_struct* (%struct.sm_matrix_struct*, i32*, ...) bitcast (%struct.solution_struct* (%struct.sm_matrix_struct*, i32*)* @sm_maximal_independent_set to %struct.solution_struct* (%struct.sm_matrix_struct*, i32*, ...)*)(%struct.sm_matrix_struct* %84, i32* %85)
  store %struct.solution_struct* %86, %struct.solution_struct** %26, align 8
  %87 = load %struct.solution_struct*, %struct.solution_struct** %10, align 8
  %88 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %87, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = load %struct.solution_struct*, %struct.solution_struct** %26, align 8
  %91 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %90, i32 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = add nsw i32 %89, %92
  %94 = load i32, i32* %12, align 4
  %95 = icmp sgt i32 %93, %94
  br i1 %95, label %96, label %104

96:                                               ; preds = %83
  %97 = load %struct.solution_struct*, %struct.solution_struct** %10, align 8
  %98 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %97, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = load %struct.solution_struct*, %struct.solution_struct** %26, align 8
  %101 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %100, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = add nsw i32 %99, %102
  br label %106

104:                                              ; preds = %83
  %105 = load i32, i32* %12, align 4
  br label %106

106:                                              ; preds = %104, %96
  %107 = phi i32 [ %103, %96 ], [ %105, %104 ]
  store i32 %107, i32* %28, align 4
  %108 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %9, align 8
  %109 = load i32*, i32** %11, align 8
  %110 = load %struct.solution_struct*, %struct.solution_struct** %26, align 8
  %111 = call i32 @select_column(%struct.sm_matrix_struct* %108, i32* %109, %struct.solution_struct* %110)
  store i32 %111, i32* %27, align 4
  %112 = load %struct.solution_struct*, %struct.solution_struct** %26, align 8
  call void (%struct.solution_struct*, ...) bitcast (void (%struct.solution_struct*)* @solution_free to void (%struct.solution_struct*, ...)*)(%struct.solution_struct* %112)
  %113 = load i32, i32* %14, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %123

115:                                              ; preds = %106
  %116 = load i32, i32* %28, align 4
  %117 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %118 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %117, i32 0, i32 7
  %119 = load i32, i32* %118, align 4
  %120 = add nsw i32 %116, %119
  %121 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %122 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %121, i32 0, i32 10
  store i32 %120, i32* %122, align 4
  br label %123

123:                                              ; preds = %115, %106
  %124 = load i32, i32* %29, align 4
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %126, label %165

126:                                              ; preds = %123
  %127 = load i32, i32* %14, align 4
  %128 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %129 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %128, i32 0, i32 4
  %130 = load i32, i32* %129, align 8
  %131 = icmp ne i32 %130, 0
  %132 = zext i1 %131 to i64
  %133 = select i1 %131, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14.432, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15.433, i64 0, i64 0)
  %134 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.434, i64 0, i64 0), i32 %127, i8* %133)
  %135 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %9, align 8
  %136 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %135, i32 0, i32 6
  %137 = load i32, i32* %136, align 8
  %138 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %9, align 8
  %139 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %138, i32 0, i32 9
  %140 = load i32, i32* %139, align 8
  %141 = load %struct.solution_struct*, %struct.solution_struct** %10, align 8
  %142 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %141, i32 0, i32 1
  %143 = load i32, i32* %142, align 8
  %144 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %145 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %144, i32 0, i32 7
  %146 = load i32, i32* %145, align 4
  %147 = add nsw i32 %143, %146
  %148 = load i32, i32* %13, align 4
  %149 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %150 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %149, i32 0, i32 7
  %151 = load i32, i32* %150, align 4
  %152 = add nsw i32 %148, %151
  %153 = load i32, i32* %28, align 4
  %154 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %155 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %154, i32 0, i32 7
  %156 = load i32, i32* %155, align 4
  %157 = add nsw i32 %153, %156
  %158 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %159 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %160 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %159, i32 0, i32 8
  %161 = load i64, i64* %160, align 8
  %162 = sub nsw i64 %158, %161
  %163 = call i8* @util_print_time(i64 %162)
  %164 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16.435, i64 0, i64 0), i32 %137, i32 %140, i32 %147, i32 %152, i32 %157, i8* %163)
  br label %165

165:                                              ; preds = %126, %123
  %166 = load i32, i32* %28, align 4
  %167 = load i32, i32* %13, align 4
  %168 = icmp sge i32 %166, %167
  br i1 %168, label %169, label %175

169:                                              ; preds = %165
  %170 = load i32, i32* %29, align 4
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %172, label %174

172:                                              ; preds = %169
  %173 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17.436, i64 0, i64 0))
  br label %174

174:                                              ; preds = %172, %169
  store %struct.solution_struct* null, %struct.solution_struct** %23, align 8
  br label %385

175:                                              ; preds = %165
  %176 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %9, align 8
  %177 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %176, i32 0, i32 6
  %178 = load i32, i32* %177, align 8
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %214

180:                                              ; preds = %175
  %181 = load %struct.solution_struct*, %struct.solution_struct** %10, align 8
  %182 = call %struct.solution_struct* (%struct.solution_struct*, ...) bitcast (%struct.solution_struct* (%struct.solution_struct*)* @solution_dup to %struct.solution_struct* (%struct.solution_struct*, ...)*)(%struct.solution_struct* %181)
  store %struct.solution_struct* %182, %struct.solution_struct** %23, align 8
  %183 = load i32, i32* %29, align 4
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %185, label %187

185:                                              ; preds = %180
  %186 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18.437, i64 0, i64 0))
  br label %187

187:                                              ; preds = %185, %180
  %188 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %189 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %188, i32 0, i32 0
  %190 = load i32, i32* %189, align 8
  %191 = icmp ne i32 %190, 0
  br i1 %191, label %192, label %213

192:                                              ; preds = %187
  %193 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %194 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %193, i32 0, i32 4
  %195 = load i32, i32* %194, align 8
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %213

197:                                              ; preds = %192
  %198 = load %struct.solution_struct*, %struct.solution_struct** %23, align 8
  %199 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %198, i32 0, i32 1
  %200 = load i32, i32* %199, align 8
  %201 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %202 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %201, i32 0, i32 7
  %203 = load i32, i32* %202, align 4
  %204 = add nsw i32 %200, %203
  %205 = load i32, i32* %14, align 4
  %206 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %207 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %208 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %207, i32 0, i32 8
  %209 = load i64, i64* %208, align 8
  %210 = sub nsw i64 %206, %209
  %211 = call i8* @util_print_time(i64 %210)
  %212 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.19.438, i64 0, i64 0), i32 %204, i32 %205, i8* %211)
  br label %213

213:                                              ; preds = %197, %192, %187
  br label %384

214:                                              ; preds = %175
  %215 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %9, align 8
  %216 = call i32 (%struct.sm_matrix_struct*, %struct.sm_matrix_struct**, %struct.sm_matrix_struct**, ...) bitcast (i32 (%struct.sm_matrix_struct*, %struct.sm_matrix_struct**, %struct.sm_matrix_struct**)* @sm_block_partition to i32 (%struct.sm_matrix_struct*, %struct.sm_matrix_struct**, %struct.sm_matrix_struct**, ...)*)(%struct.sm_matrix_struct* %215, %struct.sm_matrix_struct** %18, %struct.sm_matrix_struct** %19)
  %217 = icmp ne i32 %216, 0
  br i1 %217, label %218, label %304

218:                                              ; preds = %214
  %219 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %18, align 8
  %220 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %219, i32 0, i32 9
  %221 = load i32, i32* %220, align 8
  %222 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %19, align 8
  %223 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %222, i32 0, i32 9
  %224 = load i32, i32* %223, align 8
  %225 = icmp sgt i32 %221, %224
  br i1 %225, label %226, label %230

226:                                              ; preds = %218
  %227 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %18, align 8
  store %struct.sm_matrix_struct* %227, %struct.sm_matrix_struct** %16, align 8
  %228 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %19, align 8
  store %struct.sm_matrix_struct* %228, %struct.sm_matrix_struct** %18, align 8
  %229 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %16, align 8
  store %struct.sm_matrix_struct* %229, %struct.sm_matrix_struct** %19, align 8
  br label %230

230:                                              ; preds = %226, %218
  %231 = load i32, i32* %29, align 4
  %232 = icmp ne i32 %231, 0
  br i1 %232, label %233, label %241

233:                                              ; preds = %230
  %234 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %18, align 8
  %235 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %234, i32 0, i32 6
  %236 = load i32, i32* %235, align 8
  %237 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %19, align 8
  %238 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %237, i32 0, i32 6
  %239 = load i32, i32* %238, align 8
  %240 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.439, i64 0, i64 0), i32 %236, i32 %239)
  br label %241

241:                                              ; preds = %233, %230
  %242 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %243 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %242, i32 0, i32 5
  %244 = load i32, i32* %243, align 4
  %245 = add nsw i32 %244, 1
  store i32 %245, i32* %243, align 4
  %246 = call %struct.solution_struct* (...) bitcast (%struct.solution_struct* ()* @solution_alloc to %struct.solution_struct* (...)*)()
  store %struct.solution_struct* %246, %struct.solution_struct** %21, align 8
  %247 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %248 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %247, i32 0, i32 4
  %249 = load i32, i32* %248, align 8
  %250 = add nsw i32 %249, 1
  store i32 %250, i32* %248, align 8
  %251 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %18, align 8
  %252 = load %struct.solution_struct*, %struct.solution_struct** %21, align 8
  %253 = load i32*, i32** %11, align 8
  %254 = load i32, i32* %13, align 4
  %255 = load %struct.solution_struct*, %struct.solution_struct** %10, align 8
  %256 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %255, i32 0, i32 1
  %257 = load i32, i32* %256, align 8
  %258 = sub nsw i32 %254, %257
  %259 = load i32, i32* %14, align 4
  %260 = add nsw i32 %259, 1
  %261 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %262 = call %struct.solution_struct* @sm_mincov(%struct.sm_matrix_struct* %251, %struct.solution_struct* %252, i32* %253, i32 0, i32 %258, i32 %260, %struct.stats_struct* %261)
  store %struct.solution_struct* %262, %struct.solution_struct** %24, align 8
  %263 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %264 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %263, i32 0, i32 4
  %265 = load i32, i32* %264, align 8
  %266 = add nsw i32 %265, -1
  store i32 %266, i32* %264, align 8
  %267 = load %struct.solution_struct*, %struct.solution_struct** %21, align 8
  call void (%struct.solution_struct*, ...) bitcast (void (%struct.solution_struct*)* @solution_free to void (%struct.solution_struct*, ...)*)(%struct.solution_struct* %267)
  %268 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %18, align 8
  call void (%struct.sm_matrix_struct*, ...) bitcast (void (%struct.sm_matrix_struct*)* @sm_free to void (%struct.sm_matrix_struct*, ...)*)(%struct.sm_matrix_struct* %268)
  %269 = load %struct.solution_struct*, %struct.solution_struct** %24, align 8
  %270 = icmp eq %struct.solution_struct* %269, null
  br i1 %270, label %271, label %272

271:                                              ; preds = %241
  store %struct.solution_struct* null, %struct.solution_struct** %23, align 8
  br label %302

272:                                              ; preds = %241
  %273 = load %struct.solution_struct*, %struct.solution_struct** %24, align 8
  %274 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %273, i32 0, i32 0
  %275 = load %struct.sm_row_struct*, %struct.sm_row_struct** %274, align 8
  %276 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %275, i32 0, i32 3
  %277 = load %struct.sm_element_struct*, %struct.sm_element_struct** %276, align 8
  store %struct.sm_element_struct* %277, %struct.sm_element_struct** %20, align 8
  br label %278

278:                                              ; preds = %287, %272
  %279 = load %struct.sm_element_struct*, %struct.sm_element_struct** %20, align 8
  %280 = icmp ne %struct.sm_element_struct* %279, null
  br i1 %280, label %281, label %291

281:                                              ; preds = %278
  %282 = load %struct.solution_struct*, %struct.solution_struct** %10, align 8
  %283 = load i32*, i32** %11, align 8
  %284 = load %struct.sm_element_struct*, %struct.sm_element_struct** %20, align 8
  %285 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %284, i32 0, i32 1
  %286 = load i32, i32* %285, align 4
  call void (%struct.solution_struct*, i32*, i32, ...) bitcast (void (%struct.solution_struct*, i32*, i32)* @solution_add to void (%struct.solution_struct*, i32*, i32, ...)*)(%struct.solution_struct* %282, i32* %283, i32 %286)
  br label %287

287:                                              ; preds = %281
  %288 = load %struct.sm_element_struct*, %struct.sm_element_struct** %20, align 8
  %289 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %288, i32 0, i32 4
  %290 = load %struct.sm_element_struct*, %struct.sm_element_struct** %289, align 8
  store %struct.sm_element_struct* %290, %struct.sm_element_struct** %20, align 8
  br label %278

291:                                              ; preds = %278
  %292 = load %struct.solution_struct*, %struct.solution_struct** %24, align 8
  call void (%struct.solution_struct*, ...) bitcast (void (%struct.solution_struct*)* @solution_free to void (%struct.solution_struct*, ...)*)(%struct.solution_struct* %292)
  %293 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %19, align 8
  %294 = load %struct.solution_struct*, %struct.solution_struct** %10, align 8
  %295 = load i32*, i32** %11, align 8
  %296 = load i32, i32* %28, align 4
  %297 = load i32, i32* %13, align 4
  %298 = load i32, i32* %14, align 4
  %299 = add nsw i32 %298, 1
  %300 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %301 = call %struct.solution_struct* @sm_mincov(%struct.sm_matrix_struct* %293, %struct.solution_struct* %294, i32* %295, i32 %296, i32 %297, i32 %299, %struct.stats_struct* %300)
  store %struct.solution_struct* %301, %struct.solution_struct** %23, align 8
  br label %302

302:                                              ; preds = %291, %271
  %303 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %19, align 8
  call void (%struct.sm_matrix_struct*, ...) bitcast (void (%struct.sm_matrix_struct*)* @sm_free to void (%struct.sm_matrix_struct*, ...)*)(%struct.sm_matrix_struct* %303)
  br label %383

304:                                              ; preds = %214
  %305 = load i32, i32* %29, align 4
  %306 = icmp ne i32 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %304
  %308 = load i32, i32* %27, align 4
  %309 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21.440, i64 0, i64 0), i32 %308)
  br label %310

310:                                              ; preds = %307, %304
  %311 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %9, align 8
  %312 = call %struct.sm_matrix_struct* (%struct.sm_matrix_struct*, ...) bitcast (%struct.sm_matrix_struct* (%struct.sm_matrix_struct*)* @sm_dup to %struct.sm_matrix_struct* (%struct.sm_matrix_struct*, ...)*)(%struct.sm_matrix_struct* %311)
  store %struct.sm_matrix_struct* %312, %struct.sm_matrix_struct** %16, align 8
  %313 = load %struct.solution_struct*, %struct.solution_struct** %10, align 8
  %314 = call %struct.solution_struct* (%struct.solution_struct*, ...) bitcast (%struct.solution_struct* (%struct.solution_struct*)* @solution_dup to %struct.solution_struct* (%struct.solution_struct*, ...)*)(%struct.solution_struct* %313)
  store %struct.solution_struct* %314, %struct.solution_struct** %21, align 8
  %315 = load %struct.solution_struct*, %struct.solution_struct** %21, align 8
  %316 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %16, align 8
  %317 = load i32*, i32** %11, align 8
  %318 = load i32, i32* %27, align 4
  call void (%struct.solution_struct*, %struct.sm_matrix_struct*, i32*, i32, ...) bitcast (void (%struct.solution_struct*, %struct.sm_matrix_struct*, i32*, i32)* @solution_accept to void (%struct.solution_struct*, %struct.sm_matrix_struct*, i32*, i32, ...)*)(%struct.solution_struct* %315, %struct.sm_matrix_struct* %316, i32* %317, i32 %318)
  %319 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %16, align 8
  %320 = load %struct.solution_struct*, %struct.solution_struct** %21, align 8
  %321 = load i32*, i32** %11, align 8
  %322 = load i32, i32* %28, align 4
  %323 = load i32, i32* %13, align 4
  %324 = load i32, i32* %14, align 4
  %325 = add nsw i32 %324, 1
  %326 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %327 = call %struct.solution_struct* @sm_mincov(%struct.sm_matrix_struct* %319, %struct.solution_struct* %320, i32* %321, i32 %322, i32 %323, i32 %325, %struct.stats_struct* %326)
  store %struct.solution_struct* %327, %struct.solution_struct** %24, align 8
  %328 = load %struct.solution_struct*, %struct.solution_struct** %21, align 8
  call void (%struct.solution_struct*, ...) bitcast (void (%struct.solution_struct*)* @solution_free to void (%struct.solution_struct*, ...)*)(%struct.solution_struct* %328)
  %329 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %16, align 8
  call void (%struct.sm_matrix_struct*, ...) bitcast (void (%struct.sm_matrix_struct*)* @sm_free to void (%struct.sm_matrix_struct*, ...)*)(%struct.sm_matrix_struct* %329)
  %330 = load %struct.solution_struct*, %struct.solution_struct** %24, align 8
  %331 = icmp ne %struct.solution_struct* %330, null
  br i1 %331, label %332, label %342

332:                                              ; preds = %310
  %333 = load i32, i32* %13, align 4
  %334 = load %struct.solution_struct*, %struct.solution_struct** %24, align 8
  %335 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %334, i32 0, i32 1
  %336 = load i32, i32* %335, align 8
  %337 = icmp sgt i32 %333, %336
  br i1 %337, label %338, label %342

338:                                              ; preds = %332
  %339 = load %struct.solution_struct*, %struct.solution_struct** %24, align 8
  %340 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %339, i32 0, i32 1
  %341 = load i32, i32* %340, align 8
  store i32 %341, i32* %13, align 4
  br label %342

342:                                              ; preds = %338, %332, %310
  %343 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %344 = getelementptr inbounds %struct.stats_struct, %struct.stats_struct* %343, i32 0, i32 9
  %345 = load i32, i32* %344, align 8
  %346 = icmp ne i32 %345, 0
  br i1 %346, label %347, label %349

347:                                              ; preds = %342
  %348 = load %struct.solution_struct*, %struct.solution_struct** %24, align 8
  store %struct.solution_struct* %348, %struct.solution_struct** %8, align 8
  br label %387

349:                                              ; preds = %342
  %350 = load %struct.solution_struct*, %struct.solution_struct** %24, align 8
  %351 = icmp ne %struct.solution_struct* %350, null
  br i1 %351, label %352, label %360

352:                                              ; preds = %349
  %353 = load %struct.solution_struct*, %struct.solution_struct** %24, align 8
  %354 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %353, i32 0, i32 1
  %355 = load i32, i32* %354, align 8
  %356 = load i32, i32* %28, align 4
  %357 = icmp eq i32 %355, %356
  br i1 %357, label %358, label %360

358:                                              ; preds = %352
  %359 = load %struct.solution_struct*, %struct.solution_struct** %24, align 8
  store %struct.solution_struct* %359, %struct.solution_struct** %8, align 8
  br label %387

360:                                              ; preds = %352, %349
  %361 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %9, align 8
  %362 = call %struct.sm_matrix_struct* (%struct.sm_matrix_struct*, ...) bitcast (%struct.sm_matrix_struct* (%struct.sm_matrix_struct*)* @sm_dup to %struct.sm_matrix_struct* (%struct.sm_matrix_struct*, ...)*)(%struct.sm_matrix_struct* %361)
  store %struct.sm_matrix_struct* %362, %struct.sm_matrix_struct** %17, align 8
  %363 = load %struct.solution_struct*, %struct.solution_struct** %10, align 8
  %364 = call %struct.solution_struct* (%struct.solution_struct*, ...) bitcast (%struct.solution_struct* (%struct.solution_struct*)* @solution_dup to %struct.solution_struct* (%struct.solution_struct*, ...)*)(%struct.solution_struct* %363)
  store %struct.solution_struct* %364, %struct.solution_struct** %22, align 8
  %365 = load %struct.solution_struct*, %struct.solution_struct** %22, align 8
  %366 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %17, align 8
  %367 = load i32*, i32** %11, align 8
  %368 = load i32, i32* %27, align 4
  call void (%struct.solution_struct*, %struct.sm_matrix_struct*, i32*, i32, ...) bitcast (void (%struct.solution_struct*, %struct.sm_matrix_struct*, i32*, i32)* @solution_reject to void (%struct.solution_struct*, %struct.sm_matrix_struct*, i32*, i32, ...)*)(%struct.solution_struct* %365, %struct.sm_matrix_struct* %366, i32* %367, i32 %368)
  %369 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %17, align 8
  %370 = load %struct.solution_struct*, %struct.solution_struct** %22, align 8
  %371 = load i32*, i32** %11, align 8
  %372 = load i32, i32* %28, align 4
  %373 = load i32, i32* %13, align 4
  %374 = load i32, i32* %14, align 4
  %375 = add nsw i32 %374, 1
  %376 = load %struct.stats_struct*, %struct.stats_struct** %15, align 8
  %377 = call %struct.solution_struct* @sm_mincov(%struct.sm_matrix_struct* %369, %struct.solution_struct* %370, i32* %371, i32 %372, i32 %373, i32 %375, %struct.stats_struct* %376)
  store %struct.solution_struct* %377, %struct.solution_struct** %25, align 8
  %378 = load %struct.solution_struct*, %struct.solution_struct** %22, align 8
  call void (%struct.solution_struct*, ...) bitcast (void (%struct.solution_struct*)* @solution_free to void (%struct.solution_struct*, ...)*)(%struct.solution_struct* %378)
  %379 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %17, align 8
  call void (%struct.sm_matrix_struct*, ...) bitcast (void (%struct.sm_matrix_struct*)* @sm_free to void (%struct.sm_matrix_struct*, ...)*)(%struct.sm_matrix_struct* %379)
  %380 = load %struct.solution_struct*, %struct.solution_struct** %24, align 8
  %381 = load %struct.solution_struct*, %struct.solution_struct** %25, align 8
  %382 = call %struct.solution_struct* (%struct.solution_struct*, %struct.solution_struct*, ...) bitcast (%struct.solution_struct* (%struct.solution_struct*, %struct.solution_struct*)* @solution_choose_best to %struct.solution_struct* (%struct.solution_struct*, %struct.solution_struct*, ...)*)(%struct.solution_struct* %380, %struct.solution_struct* %381)
  store %struct.solution_struct* %382, %struct.solution_struct** %23, align 8
  br label %383

383:                                              ; preds = %360, %302
  br label %384

384:                                              ; preds = %383, %213
  br label %385

385:                                              ; preds = %384, %174
  %386 = load %struct.solution_struct*, %struct.solution_struct** %23, align 8
  store %struct.solution_struct* %386, %struct.solution_struct** %8, align 8
  br label %387

387:                                              ; preds = %385, %358, %347, %80, %66
  %388 = load %struct.solution_struct*, %struct.solution_struct** %8, align 8
  ret %struct.solution_struct* %388
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @verify_cover(%struct.sm_matrix_struct* %0, %struct.sm_row_struct* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.sm_matrix_struct*, align 8
  %5 = alloca %struct.sm_row_struct*, align 8
  %6 = alloca %struct.sm_row_struct*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %4, align 8
  store %struct.sm_row_struct* %1, %struct.sm_row_struct** %5, align 8
  %7 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %8 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %7, i32 0, i32 4
  %9 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  store %struct.sm_row_struct* %9, %struct.sm_row_struct** %6, align 8
  br label %10

10:                                               ; preds = %20, %2
  %11 = load %struct.sm_row_struct*, %struct.sm_row_struct** %6, align 8
  %12 = icmp ne %struct.sm_row_struct* %11, null
  br i1 %12, label %13, label %24

13:                                               ; preds = %10
  %14 = load %struct.sm_row_struct*, %struct.sm_row_struct** %6, align 8
  %15 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %16 = call i32 (%struct.sm_row_struct*, %struct.sm_row_struct*, ...) bitcast (i32 (%struct.sm_row_struct*, %struct.sm_row_struct*)* @sm_row_intersects to i32 (%struct.sm_row_struct*, %struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %14, %struct.sm_row_struct* %15)
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %13
  store i32 0, i32* %3, align 4
  br label %25

19:                                               ; preds = %13
  br label %20

20:                                               ; preds = %19
  %21 = load %struct.sm_row_struct*, %struct.sm_row_struct** %6, align 8
  %22 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %21, i32 0, i32 5
  %23 = load %struct.sm_row_struct*, %struct.sm_row_struct** %22, align 8
  store %struct.sm_row_struct* %23, %struct.sm_row_struct** %6, align 8
  br label %10

24:                                               ; preds = %10
  store i32 1, i32* %3, align 4
  br label %25

25:                                               ; preds = %24, %18
  %26 = load i32, i32* %3, align 4
  ret i32 %26
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #6

; Function Attrs: noinline nounwind uwtable
define internal void @select_essential(%struct.sm_matrix_struct* %0, %struct.solution_struct* %1, i32* %2, i32 %3) #0 {
  %5 = alloca %struct.sm_matrix_struct*, align 8
  %6 = alloca %struct.solution_struct*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.sm_element_struct*, align 8
  %10 = alloca %struct.sm_row_struct*, align 8
  %11 = alloca %struct.sm_row_struct*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %5, align 8
  store %struct.solution_struct* %1, %struct.solution_struct** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32 %3, i32* %8, align 4
  br label %15

15:                                               ; preds = %86, %4
  %16 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %17 = load i32*, i32** %7, align 8
  %18 = call i32 (%struct.sm_matrix_struct*, i32*, ...) bitcast (i32 (%struct.sm_matrix_struct*, i32*)* @sm_col_dominance to i32 (%struct.sm_matrix_struct*, i32*, ...)*)(%struct.sm_matrix_struct* %16, i32* %17)
  store i32 %18, i32* %12, align 4
  %19 = call %struct.sm_row_struct* (...) bitcast (%struct.sm_row_struct* ()* @sm_row_alloc to %struct.sm_row_struct* (...)*)()
  store %struct.sm_row_struct* %19, %struct.sm_row_struct** %11, align 8
  %20 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %21 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %20, i32 0, i32 4
  %22 = load %struct.sm_row_struct*, %struct.sm_row_struct** %21, align 8
  store %struct.sm_row_struct* %22, %struct.sm_row_struct** %10, align 8
  br label %23

23:                                               ; preds = %40, %15
  %24 = load %struct.sm_row_struct*, %struct.sm_row_struct** %10, align 8
  %25 = icmp ne %struct.sm_row_struct* %24, null
  br i1 %25, label %26, label %44

26:                                               ; preds = %23
  %27 = load %struct.sm_row_struct*, %struct.sm_row_struct** %10, align 8
  %28 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %39

31:                                               ; preds = %26
  %32 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  %33 = load %struct.sm_row_struct*, %struct.sm_row_struct** %10, align 8
  %34 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %33, i32 0, i32 3
  %35 = load %struct.sm_element_struct*, %struct.sm_element_struct** %34, align 8
  %36 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %35, i32 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = call %struct.sm_element_struct* (%struct.sm_row_struct*, i32, ...) bitcast (%struct.sm_element_struct* (%struct.sm_row_struct*, i32)* @sm_row_insert to %struct.sm_element_struct* (%struct.sm_row_struct*, i32, ...)*)(%struct.sm_row_struct* %32, i32 %37)
  br label %39

39:                                               ; preds = %31, %26
  br label %40

40:                                               ; preds = %39
  %41 = load %struct.sm_row_struct*, %struct.sm_row_struct** %10, align 8
  %42 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %41, i32 0, i32 5
  %43 = load %struct.sm_row_struct*, %struct.sm_row_struct** %42, align 8
  store %struct.sm_row_struct* %43, %struct.sm_row_struct** %10, align 8
  br label %23

44:                                               ; preds = %23
  %45 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  %46 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %45, i32 0, i32 3
  %47 = load %struct.sm_element_struct*, %struct.sm_element_struct** %46, align 8
  store %struct.sm_element_struct* %47, %struct.sm_element_struct** %9, align 8
  br label %48

48:                                               ; preds = %66, %44
  %49 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %50 = icmp ne %struct.sm_element_struct* %49, null
  br i1 %50, label %51, label %70

51:                                               ; preds = %48
  %52 = load %struct.solution_struct*, %struct.solution_struct** %6, align 8
  %53 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %54 = load i32*, i32** %7, align 8
  %55 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %56 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  call void (%struct.solution_struct*, %struct.sm_matrix_struct*, i32*, i32, ...) bitcast (void (%struct.solution_struct*, %struct.sm_matrix_struct*, i32*, i32)* @solution_accept to void (%struct.solution_struct*, %struct.sm_matrix_struct*, i32*, i32, ...)*)(%struct.solution_struct* %52, %struct.sm_matrix_struct* %53, i32* %54, i32 %57)
  %58 = load %struct.solution_struct*, %struct.solution_struct** %6, align 8
  %59 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %58, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = load i32, i32* %8, align 4
  %62 = icmp sge i32 %60, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %51
  %64 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  call void (%struct.sm_row_struct*, ...) bitcast (void (%struct.sm_row_struct*)* @sm_row_free to void (%struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %64)
  br label %88

65:                                               ; preds = %51
  br label %66

66:                                               ; preds = %65
  %67 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %68 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %67, i32 0, i32 4
  %69 = load %struct.sm_element_struct*, %struct.sm_element_struct** %68, align 8
  store %struct.sm_element_struct* %69, %struct.sm_element_struct** %9, align 8
  br label %48

70:                                               ; preds = %48
  %71 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  %72 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %71, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %14, align 4
  %74 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  call void (%struct.sm_row_struct*, ...) bitcast (void (%struct.sm_row_struct*)* @sm_row_free to void (%struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %74)
  %75 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %76 = call i32 (%struct.sm_matrix_struct*, ...) bitcast (i32 (%struct.sm_matrix_struct*)* @sm_row_dominance to i32 (%struct.sm_matrix_struct*, ...)*)(%struct.sm_matrix_struct* %75)
  store i32 %76, i32* %13, align 4
  br label %77

77:                                               ; preds = %70
  %78 = load i32, i32* %12, align 4
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %77
  %81 = load i32, i32* %13, align 4
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %80
  %84 = load i32, i32* %14, align 4
  %85 = icmp sgt i32 %84, 0
  br label %86

86:                                               ; preds = %83, %80, %77
  %87 = phi i1 [ true, %80 ], [ true, %77 ], [ %85, %83 ]
  br i1 %87, label %15, label %88

88:                                               ; preds = %86, %63
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @select_column(%struct.sm_matrix_struct* %0, i32* %1, %struct.solution_struct* %2) #0 {
  %4 = alloca %struct.sm_matrix_struct*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %struct.solution_struct*, align 8
  %7 = alloca %struct.sm_col_struct*, align 8
  %8 = alloca %struct.sm_row_struct*, align 8
  %9 = alloca %struct.sm_row_struct*, align 8
  %10 = alloca %struct.sm_element_struct*, align 8
  %11 = alloca %struct.sm_element_struct*, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca i32, align 4
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %4, align 8
  store i32* %1, i32** %5, align 8
  store %struct.solution_struct* %2, %struct.solution_struct** %6, align 8
  %15 = call %struct.sm_row_struct* (...) bitcast (%struct.sm_row_struct* ()* @sm_row_alloc to %struct.sm_row_struct* (...)*)()
  store %struct.sm_row_struct* %15, %struct.sm_row_struct** %9, align 8
  %16 = load %struct.solution_struct*, %struct.solution_struct** %6, align 8
  %17 = icmp ne %struct.solution_struct* %16, null
  br i1 %17, label %18, label %75

18:                                               ; preds = %3
  %19 = load %struct.solution_struct*, %struct.solution_struct** %6, align 8
  %20 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %19, i32 0, i32 0
  %21 = load %struct.sm_row_struct*, %struct.sm_row_struct** %20, align 8
  %22 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %21, i32 0, i32 3
  %23 = load %struct.sm_element_struct*, %struct.sm_element_struct** %22, align 8
  store %struct.sm_element_struct* %23, %struct.sm_element_struct** %10, align 8
  br label %24

24:                                               ; preds = %70, %18
  %25 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %26 = icmp ne %struct.sm_element_struct* %25, null
  br i1 %26, label %27, label %74

27:                                               ; preds = %24
  %28 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %29 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp sge i32 %30, 0
  br i1 %31, label %32, label %50

32:                                               ; preds = %27
  %33 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %34 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %33, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %37 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp slt i32 %35, %38
  br i1 %39, label %40, label %50

40:                                               ; preds = %32
  %41 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %42 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %41, i32 0, i32 0
  %43 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %42, align 8
  %44 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %45 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %43, i64 %47
  %49 = load %struct.sm_row_struct*, %struct.sm_row_struct** %48, align 8
  br label %51

50:                                               ; preds = %32, %27
  br label %51

51:                                               ; preds = %50, %40
  %52 = phi %struct.sm_row_struct* [ %49, %40 ], [ null, %50 ]
  store %struct.sm_row_struct* %52, %struct.sm_row_struct** %8, align 8
  %53 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %54 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %53, i32 0, i32 3
  %55 = load %struct.sm_element_struct*, %struct.sm_element_struct** %54, align 8
  store %struct.sm_element_struct* %55, %struct.sm_element_struct** %11, align 8
  br label %56

56:                                               ; preds = %65, %51
  %57 = load %struct.sm_element_struct*, %struct.sm_element_struct** %11, align 8
  %58 = icmp ne %struct.sm_element_struct* %57, null
  br i1 %58, label %59, label %69

59:                                               ; preds = %56
  %60 = load %struct.sm_row_struct*, %struct.sm_row_struct** %9, align 8
  %61 = load %struct.sm_element_struct*, %struct.sm_element_struct** %11, align 8
  %62 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = call %struct.sm_element_struct* (%struct.sm_row_struct*, i32, ...) bitcast (%struct.sm_element_struct* (%struct.sm_row_struct*, i32)* @sm_row_insert to %struct.sm_element_struct* (%struct.sm_row_struct*, i32, ...)*)(%struct.sm_row_struct* %60, i32 %63)
  br label %65

65:                                               ; preds = %59
  %66 = load %struct.sm_element_struct*, %struct.sm_element_struct** %11, align 8
  %67 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %66, i32 0, i32 4
  %68 = load %struct.sm_element_struct*, %struct.sm_element_struct** %67, align 8
  store %struct.sm_element_struct* %68, %struct.sm_element_struct** %11, align 8
  br label %56

69:                                               ; preds = %56
  br label %70

70:                                               ; preds = %69
  %71 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %72 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %71, i32 0, i32 4
  %73 = load %struct.sm_element_struct*, %struct.sm_element_struct** %72, align 8
  store %struct.sm_element_struct* %73, %struct.sm_element_struct** %10, align 8
  br label %24

74:                                               ; preds = %24
  br label %93

75:                                               ; preds = %3
  %76 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %77 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %76, i32 0, i32 7
  %78 = load %struct.sm_col_struct*, %struct.sm_col_struct** %77, align 8
  store %struct.sm_col_struct* %78, %struct.sm_col_struct** %7, align 8
  br label %79

79:                                               ; preds = %88, %75
  %80 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %81 = icmp ne %struct.sm_col_struct* %80, null
  br i1 %81, label %82, label %92

82:                                               ; preds = %79
  %83 = load %struct.sm_row_struct*, %struct.sm_row_struct** %9, align 8
  %84 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %85 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %84, i32 0, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = call %struct.sm_element_struct* (%struct.sm_row_struct*, i32, ...) bitcast (%struct.sm_element_struct* (%struct.sm_row_struct*, i32)* @sm_row_insert to %struct.sm_element_struct* (%struct.sm_row_struct*, i32, ...)*)(%struct.sm_row_struct* %83, i32 %86)
  br label %88

88:                                               ; preds = %82
  %89 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %90 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %89, i32 0, i32 5
  %91 = load %struct.sm_col_struct*, %struct.sm_col_struct** %90, align 8
  store %struct.sm_col_struct* %91, %struct.sm_col_struct** %7, align 8
  br label %79

92:                                               ; preds = %79
  br label %93

93:                                               ; preds = %92, %74
  store i32 -1, i32* %14, align 4
  store double -1.000000e+00, double* %13, align 8
  %94 = load %struct.sm_row_struct*, %struct.sm_row_struct** %9, align 8
  %95 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %94, i32 0, i32 3
  %96 = load %struct.sm_element_struct*, %struct.sm_element_struct** %95, align 8
  store %struct.sm_element_struct* %96, %struct.sm_element_struct** %11, align 8
  br label %97

97:                                               ; preds = %196, %93
  %98 = load %struct.sm_element_struct*, %struct.sm_element_struct** %11, align 8
  %99 = icmp ne %struct.sm_element_struct* %98, null
  br i1 %99, label %100, label %200

100:                                              ; preds = %97
  %101 = load %struct.sm_element_struct*, %struct.sm_element_struct** %11, align 8
  %102 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %101, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = icmp sge i32 %103, 0
  br i1 %104, label %105, label %123

105:                                              ; preds = %100
  %106 = load %struct.sm_element_struct*, %struct.sm_element_struct** %11, align 8
  %107 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %106, i32 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %110 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %109, i32 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = icmp slt i32 %108, %111
  br i1 %112, label %113, label %123

113:                                              ; preds = %105
  %114 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %115 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %114, i32 0, i32 2
  %116 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %115, align 8
  %117 = load %struct.sm_element_struct*, %struct.sm_element_struct** %11, align 8
  %118 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %117, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %116, i64 %120
  %122 = load %struct.sm_col_struct*, %struct.sm_col_struct** %121, align 8
  br label %124

123:                                              ; preds = %105, %100
  br label %124

124:                                              ; preds = %123, %113
  %125 = phi %struct.sm_col_struct* [ %122, %113 ], [ null, %123 ]
  store %struct.sm_col_struct* %125, %struct.sm_col_struct** %7, align 8
  store double 0.000000e+00, double* %12, align 8
  %126 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %127 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %126, i32 0, i32 3
  %128 = load %struct.sm_element_struct*, %struct.sm_element_struct** %127, align 8
  store %struct.sm_element_struct* %128, %struct.sm_element_struct** %10, align 8
  br label %129

129:                                              ; preds = %166, %124
  %130 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %131 = icmp ne %struct.sm_element_struct* %130, null
  br i1 %131, label %132, label %170

132:                                              ; preds = %129
  %133 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %134 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %133, i32 0, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = icmp sge i32 %135, 0
  br i1 %136, label %137, label %155

137:                                              ; preds = %132
  %138 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %139 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %138, i32 0, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %142 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %141, i32 0, i32 1
  %143 = load i32, i32* %142, align 8
  %144 = icmp slt i32 %140, %143
  br i1 %144, label %145, label %155

145:                                              ; preds = %137
  %146 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %4, align 8
  %147 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %146, i32 0, i32 0
  %148 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %147, align 8
  %149 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %150 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %149, i32 0, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %148, i64 %152
  %154 = load %struct.sm_row_struct*, %struct.sm_row_struct** %153, align 8
  br label %156

155:                                              ; preds = %137, %132
  br label %156

156:                                              ; preds = %155, %145
  %157 = phi %struct.sm_row_struct* [ %154, %145 ], [ null, %155 ]
  store %struct.sm_row_struct* %157, %struct.sm_row_struct** %8, align 8
  %158 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %159 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %158, i32 0, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = sitofp i32 %160 to double
  %162 = fsub double %161, 1.000000e+00
  %163 = fdiv double 1.000000e+00, %162
  %164 = load double, double* %12, align 8
  %165 = fadd double %164, %163
  store double %165, double* %12, align 8
  br label %166

166:                                              ; preds = %156
  %167 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %168 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %167, i32 0, i32 2
  %169 = load %struct.sm_element_struct*, %struct.sm_element_struct** %168, align 8
  store %struct.sm_element_struct* %169, %struct.sm_element_struct** %10, align 8
  br label %129

170:                                              ; preds = %129
  %171 = load double, double* %12, align 8
  %172 = load i32*, i32** %5, align 8
  %173 = icmp eq i32* %172, null
  br i1 %173, label %174, label %175

174:                                              ; preds = %170
  br label %183

175:                                              ; preds = %170
  %176 = load i32*, i32** %5, align 8
  %177 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %178 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %177, i32 0, i32 0
  %179 = load i32, i32* %178, align 8
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i32, i32* %176, i64 %180
  %182 = load i32, i32* %181, align 4
  br label %183

183:                                              ; preds = %175, %174
  %184 = phi i32 [ 1, %174 ], [ %182, %175 ]
  %185 = sitofp i32 %184 to double
  %186 = fdiv double %171, %185
  store double %186, double* %12, align 8
  %187 = load double, double* %12, align 8
  %188 = load double, double* %13, align 8
  %189 = fcmp ogt double %187, %188
  br i1 %189, label %190, label %195

190:                                              ; preds = %183
  %191 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %192 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %191, i32 0, i32 0
  %193 = load i32, i32* %192, align 8
  store i32 %193, i32* %14, align 4
  %194 = load double, double* %12, align 8
  store double %194, double* %13, align 8
  br label %195

195:                                              ; preds = %190, %183
  br label %196

196:                                              ; preds = %195
  %197 = load %struct.sm_element_struct*, %struct.sm_element_struct** %11, align 8
  %198 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %197, i32 0, i32 4
  %199 = load %struct.sm_element_struct*, %struct.sm_element_struct** %198, align 8
  store %struct.sm_element_struct* %199, %struct.sm_element_struct** %11, align 8
  br label %97

200:                                              ; preds = %97
  %201 = load %struct.sm_row_struct*, %struct.sm_row_struct** %9, align 8
  call void (%struct.sm_row_struct*, ...) bitcast (void (%struct.sm_row_struct*)* @sm_row_free to void (%struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %201)
  %202 = load i32, i32* %14, align 4
  ret i32 %202
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @phase_assignment(%struct.PLA_t* %0, i32 %1) #0 {
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca i32, align 4
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = srem i32 %5, 2
  store i32 %6, i32* @opo_no_make_sparse, align 4
  %7 = load i32, i32* @opo_no_make_sparse, align 4
  store i32 %7, i32* @skip_make_sparse, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sdiv i32 %8, 2
  %10 = srem i32 %9, 2
  store i32 %10, i32* @opo_repeated, align 4
  %11 = load i32, i32* %4, align 4
  %12 = sdiv i32 %11, 4
  %13 = srem i32 %12, 2
  store i32 %13, i32* @opo_exact, align 4
  %14 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %15 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %14, i32 0, i32 5
  %16 = load i32*, i32** %15, align 8
  %17 = icmp ne i32* %16, null
  br i1 %17, label %18, label %31

18:                                               ; preds = %2
  %19 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %20 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %19, i32 0, i32 5
  %21 = load i32*, i32** %20, align 8
  %22 = icmp ne i32* %21, null
  br i1 %22, label %23, label %30

23:                                               ; preds = %18
  %24 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %25 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %24, i32 0, i32 5
  %26 = load i32*, i32** %25, align 8
  %27 = bitcast i32* %26 to i8*
  call void @free(i8* %27) #7
  %28 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %29 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %28, i32 0, i32 5
  store i32* null, i32** %29, align 8
  br label %30

30:                                               ; preds = %23, %18
  br label %31

31:                                               ; preds = %30, %2
  %32 = load i32, i32* @opo_repeated, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %63

34:                                               ; preds = %31
  %35 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 0
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 1023
  %39 = mul i32 32, %38
  %40 = icmp ule i32 %39, 32
  br i1 %40, label %41, label %42

41:                                               ; preds = %34
  br label %52

42:                                               ; preds = %34
  %43 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 0
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 1023
  %47 = mul i32 32, %46
  %48 = sub i32 %47, 1
  %49 = lshr i32 %48, 5
  %50 = add i32 %49, 1
  %51 = add i32 %50, 1
  br label %52

52:                                               ; preds = %42, %41
  %53 = phi i32 [ 2, %41 ], [ %51, %42 ]
  %54 = zext i32 %53 to i64
  %55 = mul i64 4, %54
  %56 = call noalias i8* @malloc(i64 %55) #7
  %57 = bitcast i8* %56 to i32*
  %58 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %59 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %57, i32* %58)
  %60 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %61 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %60, i32 0, i32 5
  store i32* %59, i32** %61, align 8
  %62 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  call void @repeated_phase_assignment(%struct.PLA_t* %62)
  br label %68

63:                                               ; preds = %31
  %64 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %65 = call i32* @find_phase(%struct.PLA_t* %64, i32 0, i32* null)
  %66 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %67 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %66, i32 0, i32 5
  store i32* %65, i32** %67, align 8
  br label %68

68:                                               ; preds = %63, %52
  store i32 0, i32* @skip_make_sparse, align 4
  %69 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %70 = call %struct.PLA_t* @set_phase(%struct.PLA_t* %69)
  %71 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  call void @minimize(%struct.PLA_t* %71)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @repeated_phase_assignment(%struct.PLA_t* %0) #0 {
  %2 = alloca %struct.PLA_t*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %2, align 8
  store i32 0, i32* %3, align 4
  br label %5

5:                                                ; preds = %95, %1
  %6 = load i32, i32* %3, align 4
  %7 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %8 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i32, i32* %7, i64 %9
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %6, %11
  br i1 %12, label %13, label %98

13:                                               ; preds = %5
  %14 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %15 = load i32, i32* %3, align 4
  %16 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %17 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %16, i32 0, i32 5
  %18 = load i32*, i32** %17, align 8
  %19 = call i32* @find_phase(%struct.PLA_t* %14, i32 %15, i32* %18)
  store i32* %19, i32** %4, align 8
  %20 = load i32*, i32** %4, align 8
  %21 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %22 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i32, i32* %21, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = load i32, i32* %3, align 4
  %27 = add nsw i32 %25, %26
  %28 = ashr i32 %27, 5
  %29 = add nsw i32 %28, 1
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i32, i32* %20, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %34 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %33, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = load i32, i32* %3, align 4
  %39 = add nsw i32 %37, %38
  %40 = and i32 %39, 31
  %41 = shl i32 1, %40
  %42 = and i32 %32, %41
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %71, label %44

44:                                               ; preds = %13
  %45 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %46 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i32, i32* %45, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = load i32, i32* %3, align 4
  %51 = add nsw i32 %49, %50
  %52 = and i32 %51, 31
  %53 = shl i32 1, %52
  %54 = xor i32 %53, -1
  %55 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %56 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %55, i32 0, i32 5
  %57 = load i32*, i32** %56, align 8
  %58 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %59 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %58, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = load i32, i32* %3, align 4
  %64 = add nsw i32 %62, %63
  %65 = ashr i32 %64, 5
  %66 = add nsw i32 %65, 1
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %57, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = and i32 %69, %54
  store i32 %70, i32* %68, align 4
  br label %71

71:                                               ; preds = %44, %13
  %72 = load i32, i32* @trace, align 4
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %71
  %75 = load i32, i32* @summary, align 4
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %88

77:                                               ; preds = %74, %71
  %78 = load i32, i32* %3, align 4
  %79 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.452, i64 0, i64 0), i32 %78)
  %80 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %81 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %80, i32 0, i32 5
  %82 = load i32*, i32** %81, align 8
  %83 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %82)
  %84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.453, i64 0, i64 0), i8* %83)
  %85 = load i32*, i32** %4, align 8
  %86 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %85)
  %87 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.454, i64 0, i64 0), i8* %86)
  br label %88

88:                                               ; preds = %77, %74
  %89 = load i32*, i32** %4, align 8
  %90 = icmp ne i32* %89, null
  br i1 %90, label %91, label %94

91:                                               ; preds = %88
  %92 = load i32*, i32** %4, align 8
  %93 = bitcast i32* %92 to i8*
  call void @free(i8* %93) #7
  store i32* null, i32** %4, align 8
  br label %94

94:                                               ; preds = %91, %88
  br label %95

95:                                               ; preds = %94
  %96 = load i32, i32* %3, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %3, align 4
  br label %5

98:                                               ; preds = %5
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @find_phase(%struct.PLA_t* %0, i32 %1, i32* %2) #0 {
  %4 = alloca %struct.PLA_t*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %struct.PLA_t*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32* %2, i32** %6, align 8
  %11 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %12 = getelementptr inbounds i32, i32* %11, i64 0
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1023
  %15 = mul i32 32, %14
  %16 = icmp ule i32 %15, 32
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  br label %28

18:                                               ; preds = %3
  %19 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %20 = getelementptr inbounds i32, i32* %19, i64 0
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 1023
  %23 = mul i32 32, %22
  %24 = sub i32 %23, 1
  %25 = lshr i32 %24, 5
  %26 = add i32 %25, 1
  %27 = add i32 %26, 1
  br label %28

28:                                               ; preds = %18, %17
  %29 = phi i32 [ 2, %17 ], [ %27, %18 ]
  %30 = zext i32 %29 to i64
  %31 = mul i64 4, %30
  %32 = call noalias i8* @malloc(i64 %31) #7
  %33 = bitcast i8* %32 to i32*
  %34 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %35 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %33, i32* %34)
  store i32* %35, i32** %7, align 8
  %36 = call %struct.PLA_t* (...) bitcast (%struct.PLA_t* ()* @new_PLA to %struct.PLA_t* (...)*)()
  store %struct.PLA_t* %36, %struct.PLA_t** %8, align 8
  %37 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %38 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %37, i32 0, i32 0
  %39 = load %struct.set_family*, %struct.set_family** %38, align 8
  %40 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %39)
  %41 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %42 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %41, i32 0, i32 0
  store %struct.set_family* %40, %struct.set_family** %42, align 8
  %43 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %44 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %43, i32 0, i32 2
  %45 = load %struct.set_family*, %struct.set_family** %44, align 8
  %46 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %45)
  %47 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %48 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %47, i32 0, i32 2
  store %struct.set_family* %46, %struct.set_family** %48, align 8
  %49 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %50 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %49, i32 0, i32 1
  %51 = load %struct.set_family*, %struct.set_family** %50, align 8
  %52 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %51)
  %53 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %54 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %53, i32 0, i32 1
  store %struct.set_family* %52, %struct.set_family** %54, align 8
  %55 = load i32*, i32** %6, align 8
  %56 = icmp ne i32* %55, null
  br i1 %56, label %57, label %87

57:                                               ; preds = %28
  %58 = load i32*, i32** %6, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 0
  %60 = load i32, i32* %59, align 4
  %61 = and i32 %60, 1023
  %62 = mul i32 32, %61
  %63 = icmp ule i32 %62, 32
  br i1 %63, label %64, label %65

64:                                               ; preds = %57
  br label %75

65:                                               ; preds = %57
  %66 = load i32*, i32** %6, align 8
  %67 = getelementptr inbounds i32, i32* %66, i64 0
  %68 = load i32, i32* %67, align 4
  %69 = and i32 %68, 1023
  %70 = mul i32 32, %69
  %71 = sub i32 %70, 1
  %72 = lshr i32 %71, 5
  %73 = add i32 %72, 1
  %74 = add i32 %73, 1
  br label %75

75:                                               ; preds = %65, %64
  %76 = phi i32 [ 2, %64 ], [ %74, %65 ]
  %77 = zext i32 %76 to i64
  %78 = mul i64 4, %77
  %79 = call noalias i8* @malloc(i64 %78) #7
  %80 = bitcast i8* %79 to i32*
  %81 = load i32*, i32** %6, align 8
  %82 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %80, i32* %81)
  %83 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %84 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %83, i32 0, i32 5
  store i32* %82, i32** %84, align 8
  %85 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %86 = call %struct.PLA_t* @set_phase(%struct.PLA_t* %85)
  br label %87

87:                                               ; preds = %75, %28
  %88 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %88, i64* %9, align 8
  %89 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %90 = load i32, i32* %5, align 4
  %91 = call i32 @output_phase_setup(%struct.PLA_t* %89, i32 %90)
  %92 = load i32, i32* @summary, align 4
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %101

94:                                               ; preds = %87
  %95 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %96 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %95, i32 0, i32 0
  %97 = load %struct.set_family*, %struct.set_family** %96, align 8
  %98 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %99 = load i64, i64* %9, align 8
  %100 = sub nsw i64 %98, %99
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %97, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.447, i64 0, i64 0), i64 %100)
  br label %101

101:                                              ; preds = %94, %87
  %102 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  call void @minimize(%struct.PLA_t* %102)
  %103 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %103, i64* %10, align 8
  %104 = load i32*, i32** %7, align 8
  %105 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %106 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %105, i32 0, i32 0
  %107 = load %struct.set_family*, %struct.set_family** %106, align 8
  %108 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %109 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %108, i32 0, i32 1
  %110 = load %struct.set_family*, %struct.set_family** %109, align 8
  %111 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %112 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %111, i32 0, i32 2
  %113 = load %struct.set_family*, %struct.set_family** %112, align 8
  %114 = load i32, i32* %5, align 4
  %115 = call %struct.set_family* @opo(i32* %104, %struct.set_family* %107, %struct.set_family* %110, %struct.set_family* %113, i32 %114)
  %116 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %117 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %116, i32 0, i32 0
  store %struct.set_family* %115, %struct.set_family** %117, align 8
  %118 = load i32, i32* @summary, align 4
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %120, label %127

120:                                              ; preds = %101
  %121 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  %122 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %121, i32 0, i32 0
  %123 = load %struct.set_family*, %struct.set_family** %122, align 8
  %124 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %125 = load i64, i64* %10, align 8
  %126 = sub nsw i64 %124, %125
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %123, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4.448, i64 0, i64 0), i64 %126)
  br label %127

127:                                              ; preds = %120, %101
  %128 = load %struct.PLA_t*, %struct.PLA_t** %8, align 8
  call void (%struct.PLA_t*, ...) bitcast (void (%struct.PLA_t*)* @free_PLA to void (%struct.PLA_t*, ...)*)(%struct.PLA_t* %128)
  call void (...) bitcast (void ()* @setdown_cube to void (...)*)()
  %129 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %130 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i32, i32* %129, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = load i32, i32* %5, align 4
  %135 = sub nsw i32 %133, %134
  %136 = sdiv i32 %135, 2
  %137 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %138 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i32, i32* %137, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = sub nsw i32 %141, %136
  store i32 %142, i32* %140, align 4
  call void (...) bitcast (void ()* @cube_setup to void (...)*)()
  %143 = load i32*, i32** %7, align 8
  ret i32* %143
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.PLA_t* @set_phase(%struct.PLA_t* %0) #0 {
  %2 = alloca %struct.PLA_t*, align 8
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %2, align 8
  %11 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %12 = getelementptr inbounds i32*, i32** %11, i64 0
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %8, align 8
  %14 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %15 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %14, i32 0, i32 5
  %16 = load i32*, i32** %15, align 8
  store i32* %16, i32** %9, align 8
  %17 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %18 = getelementptr inbounds i32*, i32** %17, i64 1
  %19 = load i32*, i32** %18, align 8
  store i32* %19, i32** %10, align 8
  %20 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %21 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %22 = sub nsw i32 %21, 1
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i32*, i32** %20, i64 %23
  %25 = load i32*, i32** %24, align 8
  store i32* %25, i32** %7, align 8
  %26 = load i32*, i32** %10, align 8
  %27 = load i32*, i32** %7, align 8
  %28 = load i32*, i32** %9, align 8
  %29 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %26, i32* %27, i32* %28)
  %30 = load i32*, i32** %10, align 8
  %31 = load i32*, i32** %8, align 8
  %32 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %33 = load i32*, i32** %7, align 8
  %34 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %31, i32* %32, i32* %33)
  %35 = load i32*, i32** %10, align 8
  %36 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %30, i32* %34, i32* %35)
  %37 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %38 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %37, i32 0, i32 0
  %39 = load %struct.set_family*, %struct.set_family** %38, align 8
  %40 = getelementptr inbounds %struct.set_family, %struct.set_family* %39, i32 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %43 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %42, i32 0, i32 2
  %44 = load %struct.set_family*, %struct.set_family** %43, align 8
  %45 = getelementptr inbounds %struct.set_family, %struct.set_family* %44, i32 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = add nsw i32 %41, %46
  %48 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %49 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %47, i32 %48)
  store %struct.set_family* %49, %struct.set_family** %3, align 8
  %50 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %51 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %50, i32 0, i32 0
  %52 = load %struct.set_family*, %struct.set_family** %51, align 8
  %53 = getelementptr inbounds %struct.set_family, %struct.set_family* %52, i32 0, i32 3
  %54 = load i32, i32* %53, align 4
  %55 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %56 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %55, i32 0, i32 2
  %57 = load %struct.set_family*, %struct.set_family** %56, align 8
  %58 = getelementptr inbounds %struct.set_family, %struct.set_family* %57, i32 0, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = add nsw i32 %54, %59
  %61 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %62 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %60, i32 %61)
  store %struct.set_family* %62, %struct.set_family** %4, align 8
  %63 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %64 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %63, i32 0, i32 0
  %65 = load %struct.set_family*, %struct.set_family** %64, align 8
  %66 = getelementptr inbounds %struct.set_family, %struct.set_family* %65, i32 0, i32 5
  %67 = load i32*, i32** %66, align 8
  store i32* %67, i32** %6, align 8
  %68 = load i32*, i32** %6, align 8
  %69 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %70 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %69, i32 0, i32 0
  %71 = load %struct.set_family*, %struct.set_family** %70, align 8
  %72 = getelementptr inbounds %struct.set_family, %struct.set_family* %71, i32 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %75 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %74, i32 0, i32 0
  %76 = load %struct.set_family*, %struct.set_family** %75, align 8
  %77 = getelementptr inbounds %struct.set_family, %struct.set_family* %76, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = mul nsw i32 %73, %78
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %68, i64 %80
  store i32* %81, i32** %5, align 8
  br label %82

82:                                               ; preds = %135, %1
  %83 = load i32*, i32** %6, align 8
  %84 = load i32*, i32** %5, align 8
  %85 = icmp ult i32* %83, %84
  br i1 %85, label %86, label %144

86:                                               ; preds = %82
  %87 = load i32*, i32** %8, align 8
  %88 = load i32*, i32** %6, align 8
  %89 = load i32*, i32** %9, align 8
  %90 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_and to i32* (i32*, i32*, i32*, ...)*)(i32* %87, i32* %88, i32* %89)
  %91 = load i32*, i32** %7, align 8
  %92 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_disjoint to i32 (i32*, i32*, ...)*)(i32* %90, i32* %91)
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %110, label %94

94:                                               ; preds = %86
  %95 = load %struct.set_family*, %struct.set_family** %3, align 8
  %96 = getelementptr inbounds %struct.set_family, %struct.set_family* %95, i32 0, i32 5
  %97 = load i32*, i32** %96, align 8
  %98 = load %struct.set_family*, %struct.set_family** %3, align 8
  %99 = getelementptr inbounds %struct.set_family, %struct.set_family* %98, i32 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = load %struct.set_family*, %struct.set_family** %3, align 8
  %102 = getelementptr inbounds %struct.set_family, %struct.set_family* %101, i32 0, i32 3
  %103 = load i32, i32* %102, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %102, align 4
  %105 = mul nsw i32 %100, %103
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i32, i32* %97, i64 %106
  %108 = load i32*, i32** %8, align 8
  %109 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %107, i32* %108)
  br label %110

110:                                              ; preds = %94, %86
  %111 = load i32*, i32** %8, align 8
  %112 = load i32*, i32** %6, align 8
  %113 = load i32*, i32** %10, align 8
  %114 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_and to i32* (i32*, i32*, i32*, ...)*)(i32* %111, i32* %112, i32* %113)
  %115 = load i32*, i32** %7, align 8
  %116 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_disjoint to i32 (i32*, i32*, ...)*)(i32* %114, i32* %115)
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %110
  %119 = load %struct.set_family*, %struct.set_family** %4, align 8
  %120 = getelementptr inbounds %struct.set_family, %struct.set_family* %119, i32 0, i32 5
  %121 = load i32*, i32** %120, align 8
  %122 = load %struct.set_family*, %struct.set_family** %4, align 8
  %123 = getelementptr inbounds %struct.set_family, %struct.set_family* %122, i32 0, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = load %struct.set_family*, %struct.set_family** %4, align 8
  %126 = getelementptr inbounds %struct.set_family, %struct.set_family* %125, i32 0, i32 3
  %127 = load i32, i32* %126, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %126, align 4
  %129 = mul nsw i32 %124, %127
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i32, i32* %121, i64 %130
  %132 = load i32*, i32** %8, align 8
  %133 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %131, i32* %132)
  br label %134

134:                                              ; preds = %118, %110
  br label %135

135:                                              ; preds = %134
  %136 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %137 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %136, i32 0, i32 0
  %138 = load %struct.set_family*, %struct.set_family** %137, align 8
  %139 = getelementptr inbounds %struct.set_family, %struct.set_family* %138, i32 0, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = load i32*, i32** %6, align 8
  %142 = sext i32 %140 to i64
  %143 = getelementptr inbounds i32, i32* %141, i64 %142
  store i32* %143, i32** %6, align 8
  br label %82

144:                                              ; preds = %82
  %145 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %146 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %145, i32 0, i32 2
  %147 = load %struct.set_family*, %struct.set_family** %146, align 8
  %148 = getelementptr inbounds %struct.set_family, %struct.set_family* %147, i32 0, i32 5
  %149 = load i32*, i32** %148, align 8
  store i32* %149, i32** %6, align 8
  %150 = load i32*, i32** %6, align 8
  %151 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %152 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %151, i32 0, i32 2
  %153 = load %struct.set_family*, %struct.set_family** %152, align 8
  %154 = getelementptr inbounds %struct.set_family, %struct.set_family* %153, i32 0, i32 3
  %155 = load i32, i32* %154, align 4
  %156 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %157 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %156, i32 0, i32 2
  %158 = load %struct.set_family*, %struct.set_family** %157, align 8
  %159 = getelementptr inbounds %struct.set_family, %struct.set_family* %158, i32 0, i32 0
  %160 = load i32, i32* %159, align 8
  %161 = mul nsw i32 %155, %160
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i32, i32* %150, i64 %162
  store i32* %163, i32** %5, align 8
  br label %164

164:                                              ; preds = %217, %144
  %165 = load i32*, i32** %6, align 8
  %166 = load i32*, i32** %5, align 8
  %167 = icmp ult i32* %165, %166
  br i1 %167, label %168, label %226

168:                                              ; preds = %164
  %169 = load i32*, i32** %8, align 8
  %170 = load i32*, i32** %6, align 8
  %171 = load i32*, i32** %9, align 8
  %172 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_and to i32* (i32*, i32*, i32*, ...)*)(i32* %169, i32* %170, i32* %171)
  %173 = load i32*, i32** %7, align 8
  %174 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_disjoint to i32 (i32*, i32*, ...)*)(i32* %172, i32* %173)
  %175 = icmp ne i32 %174, 0
  br i1 %175, label %192, label %176

176:                                              ; preds = %168
  %177 = load %struct.set_family*, %struct.set_family** %4, align 8
  %178 = getelementptr inbounds %struct.set_family, %struct.set_family* %177, i32 0, i32 5
  %179 = load i32*, i32** %178, align 8
  %180 = load %struct.set_family*, %struct.set_family** %4, align 8
  %181 = getelementptr inbounds %struct.set_family, %struct.set_family* %180, i32 0, i32 0
  %182 = load i32, i32* %181, align 8
  %183 = load %struct.set_family*, %struct.set_family** %4, align 8
  %184 = getelementptr inbounds %struct.set_family, %struct.set_family* %183, i32 0, i32 3
  %185 = load i32, i32* %184, align 4
  %186 = add nsw i32 %185, 1
  store i32 %186, i32* %184, align 4
  %187 = mul nsw i32 %182, %185
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds i32, i32* %179, i64 %188
  %190 = load i32*, i32** %8, align 8
  %191 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %189, i32* %190)
  br label %192

192:                                              ; preds = %176, %168
  %193 = load i32*, i32** %8, align 8
  %194 = load i32*, i32** %6, align 8
  %195 = load i32*, i32** %10, align 8
  %196 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_and to i32* (i32*, i32*, i32*, ...)*)(i32* %193, i32* %194, i32* %195)
  %197 = load i32*, i32** %7, align 8
  %198 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_disjoint to i32 (i32*, i32*, ...)*)(i32* %196, i32* %197)
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %216, label %200

200:                                              ; preds = %192
  %201 = load %struct.set_family*, %struct.set_family** %3, align 8
  %202 = getelementptr inbounds %struct.set_family, %struct.set_family* %201, i32 0, i32 5
  %203 = load i32*, i32** %202, align 8
  %204 = load %struct.set_family*, %struct.set_family** %3, align 8
  %205 = getelementptr inbounds %struct.set_family, %struct.set_family* %204, i32 0, i32 0
  %206 = load i32, i32* %205, align 8
  %207 = load %struct.set_family*, %struct.set_family** %3, align 8
  %208 = getelementptr inbounds %struct.set_family, %struct.set_family* %207, i32 0, i32 3
  %209 = load i32, i32* %208, align 4
  %210 = add nsw i32 %209, 1
  store i32 %210, i32* %208, align 4
  %211 = mul nsw i32 %206, %209
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds i32, i32* %203, i64 %212
  %214 = load i32*, i32** %8, align 8
  %215 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %213, i32* %214)
  br label %216

216:                                              ; preds = %200, %192
  br label %217

217:                                              ; preds = %216
  %218 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %219 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %218, i32 0, i32 2
  %220 = load %struct.set_family*, %struct.set_family** %219, align 8
  %221 = getelementptr inbounds %struct.set_family, %struct.set_family* %220, i32 0, i32 0
  %222 = load i32, i32* %221, align 8
  %223 = load i32*, i32** %6, align 8
  %224 = sext i32 %222 to i64
  %225 = getelementptr inbounds i32, i32* %223, i64 %224
  store i32* %225, i32** %6, align 8
  br label %164

226:                                              ; preds = %164
  %227 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %228 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %227, i32 0, i32 0
  %229 = load %struct.set_family*, %struct.set_family** %228, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %229)
  %230 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %231 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %230, i32 0, i32 2
  %232 = load %struct.set_family*, %struct.set_family** %231, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %232)
  %233 = load %struct.set_family*, %struct.set_family** %3, align 8
  %234 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %235 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %234, i32 0, i32 0
  store %struct.set_family* %233, %struct.set_family** %235, align 8
  %236 = load %struct.set_family*, %struct.set_family** %4, align 8
  %237 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %238 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %237, i32 0, i32 2
  store %struct.set_family* %236, %struct.set_family** %238, align 8
  %239 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  ret %struct.PLA_t* %239
}

; Function Attrs: noinline nounwind uwtable
define internal void @minimize(%struct.PLA_t* %0) #0 {
  %2 = alloca %struct.PLA_t*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %2, align 8
  %5 = load i32, i32* @opo_exact, align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %31

7:                                                ; preds = %1
  %8 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %8, i64* %3, align 8
  %9 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %10 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %9, i32 0, i32 0
  %11 = load %struct.set_family*, %struct.set_family** %10, align 8
  %12 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %13 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %12, i32 0, i32 1
  %14 = load %struct.set_family*, %struct.set_family** %13, align 8
  %15 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %16 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %15, i32 0, i32 2
  %17 = load %struct.set_family*, %struct.set_family** %16, align 8
  %18 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32)* @minimize_exact to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32, ...)*)(%struct.set_family* %11, %struct.set_family* %14, %struct.set_family* %17, i32 1)
  %19 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %20 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %19, i32 0, i32 0
  store %struct.set_family* %18, %struct.set_family** %20, align 8
  %21 = load i32, i32* @summary, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %7
  %24 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %25 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %24, i32 0, i32 0
  %26 = load %struct.set_family*, %struct.set_family** %25, align 8
  %27 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %28 = load i64, i64* %3, align 8
  %29 = sub nsw i64 %27, %28
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %26, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9.445, i64 0, i64 0), i64 %29)
  br label %30

30:                                               ; preds = %23, %7
  br label %55

31:                                               ; preds = %1
  %32 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %32, i64* %4, align 8
  %33 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %34 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %33, i32 0, i32 0
  %35 = load %struct.set_family*, %struct.set_family** %34, align 8
  %36 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %37 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %36, i32 0, i32 1
  %38 = load %struct.set_family*, %struct.set_family** %37, align 8
  %39 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %40 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %39, i32 0, i32 2
  %41 = load %struct.set_family*, %struct.set_family** %40, align 8
  %42 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @espresso to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %35, %struct.set_family* %38, %struct.set_family* %41)
  %43 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %44 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %43, i32 0, i32 0
  store %struct.set_family* %42, %struct.set_family** %44, align 8
  %45 = load i32, i32* @summary, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %54

47:                                               ; preds = %31
  %48 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %49 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %48, i32 0, i32 0
  %50 = load %struct.set_family*, %struct.set_family** %49, align 8
  %51 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %52 = load i64, i64* %4, align 8
  %53 = sub nsw i64 %51, %52
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %50, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10.446, i64 0, i64 0), i64 %53)
  br label %54

54:                                               ; preds = %47, %31
  br label %55

55:                                               ; preds = %54, %30
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @output_phase_setup(%struct.PLA_t* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.PLA_t*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  store %struct.PLA_t* %0, %struct.PLA_t** %4, align 8
  store i32 %1, i32* %5, align 4
  %25 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %27, label %28

27:                                               ; preds = %2
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.451, i64 0, i64 0))
  br label %28

28:                                               ; preds = %27, %2
  %29 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %30 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %29, i32 0, i32 0
  %31 = load %struct.set_family*, %struct.set_family** %30, align 8
  store %struct.set_family* %31, %struct.set_family** %6, align 8
  %32 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %33 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %32, i32 0, i32 1
  %34 = load %struct.set_family*, %struct.set_family** %33, align 8
  store %struct.set_family* %34, %struct.set_family** %8, align 8
  %35 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %36 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %35, i32 0, i32 2
  %37 = load %struct.set_family*, %struct.set_family** %36, align 8
  store %struct.set_family* %37, %struct.set_family** %7, align 8
  %38 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %39 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32, i32* %38, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = load i32, i32* %5, align 4
  %44 = add nsw i32 %42, %43
  store i32 %44, i32* %12, align 4
  %45 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %46 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i32, i32* %45, i64 %47
  %49 = load i32, i32* %48, align 4
  store i32 %49, i32* %19, align 4
  %50 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %51 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, i32* %50, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = load i32, i32* %5, align 4
  %56 = sub nsw i32 %54, %55
  store i32 %56, i32* %13, align 4
  call void (...) bitcast (void ()* @setdown_cube to void (...)*)()
  %57 = load i32, i32* %13, align 4
  %58 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %59 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %58, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = add nsw i32 %62, %57
  store i32 %63, i32* %61, align 4
  call void (...) bitcast (void ()* @cube_setup to void (...)*)()
  %64 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 0
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 1023
  %68 = mul i32 32, %67
  %69 = icmp ule i32 %68, 32
  br i1 %69, label %70, label %71

70:                                               ; preds = %28
  br label %81

71:                                               ; preds = %28
  %72 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 0
  %74 = load i32, i32* %73, align 4
  %75 = and i32 %74, 1023
  %76 = mul i32 32, %75
  %77 = sub i32 %76, 1
  %78 = lshr i32 %77, 5
  %79 = add i32 %78, 1
  %80 = add i32 %79, 1
  br label %81

81:                                               ; preds = %71, %70
  %82 = phi i32 [ 2, %70 ], [ %80, %71 ]
  %83 = zext i32 %82 to i64
  %84 = mul i64 4, %83
  %85 = call noalias i8* @malloc(i64 %84) #7
  %86 = bitcast i8* %85 to i32*
  %87 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %88 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %86, i32* %87)
  store i32* %88, i32** %9, align 8
  %89 = load i32, i32* %12, align 4
  store i32 %89, i32* %18, align 4
  br label %90

90:                                               ; preds = %107, %81
  %91 = load i32, i32* %18, align 4
  %92 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %93 = icmp slt i32 %91, %92
  br i1 %93, label %94, label %110

94:                                               ; preds = %90
  %95 = load i32, i32* %18, align 4
  %96 = and i32 %95, 31
  %97 = shl i32 1, %96
  %98 = xor i32 %97, -1
  %99 = load i32*, i32** %9, align 8
  %100 = load i32, i32* %18, align 4
  %101 = ashr i32 %100, 5
  %102 = add nsw i32 %101, 1
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %99, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = and i32 %105, %98
  store i32 %106, i32* %104, align 4
  br label %107

107:                                              ; preds = %94
  %108 = load i32, i32* %18, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %18, align 4
  br label %90

110:                                              ; preds = %90
  %111 = load i32*, i32** %9, align 8
  %112 = getelementptr inbounds i32, i32* %111, i64 0
  %113 = load i32, i32* %112, align 4
  %114 = and i32 %113, 1023
  %115 = mul i32 32, %114
  %116 = icmp ule i32 %115, 32
  br i1 %116, label %117, label %118

117:                                              ; preds = %110
  br label %128

118:                                              ; preds = %110
  %119 = load i32*, i32** %9, align 8
  %120 = getelementptr inbounds i32, i32* %119, i64 0
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %121, 1023
  %123 = mul i32 32, %122
  %124 = sub i32 %123, 1
  %125 = lshr i32 %124, 5
  %126 = add i32 %125, 1
  %127 = add i32 %126, 1
  br label %128

128:                                              ; preds = %118, %117
  %129 = phi i32 [ 2, %117 ], [ %127, %118 ]
  %130 = zext i32 %129 to i64
  %131 = mul i64 4, %130
  %132 = call noalias i8* @malloc(i64 %131) #7
  %133 = bitcast i8* %132 to i32*
  %134 = load i32*, i32** %9, align 8
  %135 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %133, i32* %134)
  store i32* %135, i32** %10, align 8
  %136 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %137 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i32, i32* %136, i64 %138
  %140 = load i32, i32* %139, align 4
  store i32 %140, i32* %18, align 4
  br label %141

141:                                              ; preds = %158, %128
  %142 = load i32, i32* %18, align 4
  %143 = load i32, i32* %12, align 4
  %144 = icmp slt i32 %142, %143
  br i1 %144, label %145, label %161

145:                                              ; preds = %141
  %146 = load i32, i32* %18, align 4
  %147 = and i32 %146, 31
  %148 = shl i32 1, %147
  %149 = xor i32 %148, -1
  %150 = load i32*, i32** %10, align 8
  %151 = load i32, i32* %18, align 4
  %152 = ashr i32 %151, 5
  %153 = add nsw i32 %152, 1
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i32, i32* %150, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = and i32 %156, %149
  store i32 %157, i32* %155, align 4
  br label %158

158:                                              ; preds = %145
  %159 = load i32, i32* %18, align 4
  %160 = add nsw i32 %159, 1
  store i32 %160, i32* %18, align 4
  br label %141

161:                                              ; preds = %141
  %162 = load %struct.set_family*, %struct.set_family** %6, align 8
  %163 = getelementptr inbounds %struct.set_family, %struct.set_family* %162, i32 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = load %struct.set_family*, %struct.set_family** %7, align 8
  %166 = getelementptr inbounds %struct.set_family, %struct.set_family* %165, i32 0, i32 3
  %167 = load i32, i32* %166, align 4
  %168 = add nsw i32 %164, %167
  %169 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %170 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %168, i32 %169)
  %171 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %172 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %171, i32 0, i32 0
  store %struct.set_family* %170, %struct.set_family** %172, align 8
  %173 = load %struct.set_family*, %struct.set_family** %6, align 8
  %174 = getelementptr inbounds %struct.set_family, %struct.set_family* %173, i32 0, i32 3
  %175 = load i32, i32* %174, align 4
  %176 = load %struct.set_family*, %struct.set_family** %7, align 8
  %177 = getelementptr inbounds %struct.set_family, %struct.set_family* %176, i32 0, i32 3
  %178 = load i32, i32* %177, align 4
  %179 = add nsw i32 %175, %178
  %180 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %181 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %179, i32 %180)
  %182 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %183 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %182, i32 0, i32 2
  store %struct.set_family* %181, %struct.set_family** %183, align 8
  %184 = load %struct.set_family*, %struct.set_family** %8, align 8
  %185 = getelementptr inbounds %struct.set_family, %struct.set_family* %184, i32 0, i32 3
  %186 = load i32, i32* %185, align 4
  %187 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %188 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %186, i32 %187)
  %189 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %190 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %189, i32 0, i32 1
  store %struct.set_family* %188, %struct.set_family** %190, align 8
  %191 = load %struct.set_family*, %struct.set_family** %6, align 8
  %192 = getelementptr inbounds %struct.set_family, %struct.set_family* %191, i32 0, i32 5
  %193 = load i32*, i32** %192, align 8
  store i32* %193, i32** %15, align 8
  %194 = load i32*, i32** %15, align 8
  %195 = load %struct.set_family*, %struct.set_family** %6, align 8
  %196 = getelementptr inbounds %struct.set_family, %struct.set_family* %195, i32 0, i32 3
  %197 = load i32, i32* %196, align 4
  %198 = load %struct.set_family*, %struct.set_family** %6, align 8
  %199 = getelementptr inbounds %struct.set_family, %struct.set_family* %198, i32 0, i32 0
  %200 = load i32, i32* %199, align 8
  %201 = mul nsw i32 %197, %200
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds i32, i32* %194, i64 %202
  store i32* %203, i32** %11, align 8
  br label %204

204:                                              ; preds = %399, %161
  %205 = load i32*, i32** %15, align 8
  %206 = load i32*, i32** %11, align 8
  %207 = icmp ult i32* %205, %206
  br i1 %207, label %208, label %406

208:                                              ; preds = %204
  %209 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %210 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %209, i32 0, i32 0
  %211 = load %struct.set_family*, %struct.set_family** %210, align 8
  %212 = getelementptr inbounds %struct.set_family, %struct.set_family* %211, i32 0, i32 5
  %213 = load i32*, i32** %212, align 8
  %214 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %215 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %214, i32 0, i32 0
  %216 = load %struct.set_family*, %struct.set_family** %215, align 8
  %217 = getelementptr inbounds %struct.set_family, %struct.set_family* %216, i32 0, i32 0
  %218 = load i32, i32* %217, align 8
  %219 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %220 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %219, i32 0, i32 0
  %221 = load %struct.set_family*, %struct.set_family** %220, align 8
  %222 = getelementptr inbounds %struct.set_family, %struct.set_family* %221, i32 0, i32 3
  %223 = load i32, i32* %222, align 4
  %224 = add nsw i32 %223, 1
  store i32 %224, i32* %222, align 4
  %225 = mul nsw i32 %218, %223
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds i32, i32* %213, i64 %226
  store i32* %227, i32** %17, align 8
  %228 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %229 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %228, i32 0, i32 2
  %230 = load %struct.set_family*, %struct.set_family** %229, align 8
  %231 = getelementptr inbounds %struct.set_family, %struct.set_family* %230, i32 0, i32 5
  %232 = load i32*, i32** %231, align 8
  %233 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %234 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %233, i32 0, i32 2
  %235 = load %struct.set_family*, %struct.set_family** %234, align 8
  %236 = getelementptr inbounds %struct.set_family, %struct.set_family* %235, i32 0, i32 0
  %237 = load i32, i32* %236, align 8
  %238 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %239 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %238, i32 0, i32 2
  %240 = load %struct.set_family*, %struct.set_family** %239, align 8
  %241 = getelementptr inbounds %struct.set_family, %struct.set_family* %240, i32 0, i32 3
  %242 = load i32, i32* %241, align 4
  %243 = add nsw i32 %242, 1
  store i32 %243, i32* %241, align 4
  %244 = mul nsw i32 %237, %242
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds i32, i32* %232, i64 %245
  store i32* %246, i32** %16, align 8
  %247 = load i32*, i32** %9, align 8
  %248 = getelementptr inbounds i32, i32* %247, i64 0
  %249 = load i32, i32* %248, align 4
  %250 = and i32 %249, 1023
  store i32 %250, i32* %20, align 4
  %251 = load i32*, i32** %17, align 8
  %252 = getelementptr inbounds i32, i32* %251, i64 0
  %253 = load i32, i32* %252, align 4
  %254 = and i32 %253, -1024
  store i32 %254, i32* %252, align 4
  %255 = load i32, i32* %20, align 4
  %256 = load i32*, i32** %17, align 8
  %257 = getelementptr inbounds i32, i32* %256, i64 0
  %258 = load i32, i32* %257, align 4
  %259 = or i32 %258, %255
  store i32 %259, i32* %257, align 4
  br label %260

260:                                              ; preds = %276, %208
  %261 = load i32*, i32** %9, align 8
  %262 = load i32, i32* %20, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds i32, i32* %261, i64 %263
  %265 = load i32, i32* %264, align 4
  %266 = load i32*, i32** %15, align 8
  %267 = load i32, i32* %20, align 4
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds i32, i32* %266, i64 %268
  %270 = load i32, i32* %269, align 4
  %271 = and i32 %265, %270
  %272 = load i32*, i32** %17, align 8
  %273 = load i32, i32* %20, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds i32, i32* %272, i64 %274
  store i32 %271, i32* %275, align 4
  br label %276

276:                                              ; preds = %260
  %277 = load i32, i32* %20, align 4
  %278 = add nsw i32 %277, -1
  store i32 %278, i32* %20, align 4
  %279 = icmp sgt i32 %278, 0
  br i1 %279, label %260, label %280

280:                                              ; preds = %276
  %281 = load i32*, i32** %10, align 8
  %282 = getelementptr inbounds i32, i32* %281, i64 0
  %283 = load i32, i32* %282, align 4
  %284 = and i32 %283, 1023
  store i32 %284, i32* %21, align 4
  %285 = load i32*, i32** %16, align 8
  %286 = getelementptr inbounds i32, i32* %285, i64 0
  %287 = load i32, i32* %286, align 4
  %288 = and i32 %287, -1024
  store i32 %288, i32* %286, align 4
  %289 = load i32, i32* %21, align 4
  %290 = load i32*, i32** %16, align 8
  %291 = getelementptr inbounds i32, i32* %290, i64 0
  %292 = load i32, i32* %291, align 4
  %293 = or i32 %292, %289
  store i32 %293, i32* %291, align 4
  br label %294

294:                                              ; preds = %310, %280
  %295 = load i32*, i32** %10, align 8
  %296 = load i32, i32* %21, align 4
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds i32, i32* %295, i64 %297
  %299 = load i32, i32* %298, align 4
  %300 = load i32*, i32** %15, align 8
  %301 = load i32, i32* %21, align 4
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds i32, i32* %300, i64 %302
  %304 = load i32, i32* %303, align 4
  %305 = and i32 %299, %304
  %306 = load i32*, i32** %16, align 8
  %307 = load i32, i32* %21, align 4
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds i32, i32* %306, i64 %308
  store i32 %305, i32* %309, align 4
  br label %310

310:                                              ; preds = %294
  %311 = load i32, i32* %21, align 4
  %312 = add nsw i32 %311, -1
  store i32 %312, i32* %21, align 4
  %313 = icmp sgt i32 %312, 0
  br i1 %313, label %294, label %314

314:                                              ; preds = %310
  %315 = load i32, i32* %12, align 4
  store i32 %315, i32* %18, align 4
  br label %316

316:                                              ; preds = %346, %314
  %317 = load i32, i32* %18, align 4
  %318 = load i32, i32* %19, align 4
  %319 = icmp sle i32 %317, %318
  br i1 %319, label %320, label %349

320:                                              ; preds = %316
  %321 = load i32*, i32** %15, align 8
  %322 = load i32, i32* %18, align 4
  %323 = ashr i32 %322, 5
  %324 = add nsw i32 %323, 1
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds i32, i32* %321, i64 %325
  %327 = load i32, i32* %326, align 4
  %328 = load i32, i32* %18, align 4
  %329 = and i32 %328, 31
  %330 = shl i32 1, %329
  %331 = and i32 %327, %330
  %332 = icmp ne i32 %331, 0
  br i1 %332, label %333, label %345

333:                                              ; preds = %320
  %334 = load i32, i32* %18, align 4
  %335 = and i32 %334, 31
  %336 = shl i32 1, %335
  %337 = load i32*, i32** %17, align 8
  %338 = load i32, i32* %18, align 4
  %339 = ashr i32 %338, 5
  %340 = add nsw i32 %339, 1
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds i32, i32* %337, i64 %341
  %343 = load i32, i32* %342, align 4
  %344 = or i32 %343, %336
  store i32 %344, i32* %342, align 4
  br label %345

345:                                              ; preds = %333, %320
  br label %346

346:                                              ; preds = %345
  %347 = load i32, i32* %18, align 4
  %348 = add nsw i32 %347, 1
  store i32 %348, i32* %18, align 4
  br label %316

349:                                              ; preds = %316
  store i32 0, i32* %14, align 4
  %350 = load i32, i32* %12, align 4
  store i32 %350, i32* %18, align 4
  br label %351

351:                                              ; preds = %385, %349
  %352 = load i32, i32* %18, align 4
  %353 = load i32, i32* %19, align 4
  %354 = icmp sle i32 %352, %353
  br i1 %354, label %355, label %388

355:                                              ; preds = %351
  %356 = load i32*, i32** %15, align 8
  %357 = load i32, i32* %18, align 4
  %358 = ashr i32 %357, 5
  %359 = add nsw i32 %358, 1
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds i32, i32* %356, i64 %360
  %362 = load i32, i32* %361, align 4
  %363 = load i32, i32* %18, align 4
  %364 = and i32 %363, 31
  %365 = shl i32 1, %364
  %366 = and i32 %362, %365
  %367 = icmp ne i32 %366, 0
  br i1 %367, label %368, label %384

368:                                              ; preds = %355
  store i32 1, i32* %14, align 4
  %369 = load i32, i32* %18, align 4
  %370 = load i32, i32* %13, align 4
  %371 = add nsw i32 %369, %370
  %372 = and i32 %371, 31
  %373 = shl i32 1, %372
  %374 = load i32*, i32** %16, align 8
  %375 = load i32, i32* %18, align 4
  %376 = load i32, i32* %13, align 4
  %377 = add nsw i32 %375, %376
  %378 = ashr i32 %377, 5
  %379 = add nsw i32 %378, 1
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds i32, i32* %374, i64 %380
  %382 = load i32, i32* %381, align 4
  %383 = or i32 %382, %373
  store i32 %383, i32* %381, align 4
  br label %384

384:                                              ; preds = %368, %355
  br label %385

385:                                              ; preds = %384
  %386 = load i32, i32* %18, align 4
  %387 = add nsw i32 %386, 1
  store i32 %387, i32* %18, align 4
  br label %351

388:                                              ; preds = %351
  %389 = load i32, i32* %14, align 4
  %390 = icmp ne i32 %389, 0
  br i1 %390, label %398, label %391

391:                                              ; preds = %388
  %392 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %393 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %392, i32 0, i32 2
  %394 = load %struct.set_family*, %struct.set_family** %393, align 8
  %395 = getelementptr inbounds %struct.set_family, %struct.set_family* %394, i32 0, i32 3
  %396 = load i32, i32* %395, align 4
  %397 = add nsw i32 %396, -1
  store i32 %397, i32* %395, align 4
  br label %398

398:                                              ; preds = %391, %388
  br label %399

399:                                              ; preds = %398
  %400 = load %struct.set_family*, %struct.set_family** %6, align 8
  %401 = getelementptr inbounds %struct.set_family, %struct.set_family* %400, i32 0, i32 0
  %402 = load i32, i32* %401, align 8
  %403 = load i32*, i32** %15, align 8
  %404 = sext i32 %402 to i64
  %405 = getelementptr inbounds i32, i32* %403, i64 %404
  store i32* %405, i32** %15, align 8
  br label %204

406:                                              ; preds = %204
  %407 = load %struct.set_family*, %struct.set_family** %7, align 8
  %408 = getelementptr inbounds %struct.set_family, %struct.set_family* %407, i32 0, i32 5
  %409 = load i32*, i32** %408, align 8
  store i32* %409, i32** %15, align 8
  %410 = load i32*, i32** %15, align 8
  %411 = load %struct.set_family*, %struct.set_family** %7, align 8
  %412 = getelementptr inbounds %struct.set_family, %struct.set_family* %411, i32 0, i32 3
  %413 = load i32, i32* %412, align 4
  %414 = load %struct.set_family*, %struct.set_family** %7, align 8
  %415 = getelementptr inbounds %struct.set_family, %struct.set_family* %414, i32 0, i32 0
  %416 = load i32, i32* %415, align 8
  %417 = mul nsw i32 %413, %416
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds i32, i32* %410, i64 %418
  store i32* %419, i32** %11, align 8
  br label %420

420:                                              ; preds = %615, %406
  %421 = load i32*, i32** %15, align 8
  %422 = load i32*, i32** %11, align 8
  %423 = icmp ult i32* %421, %422
  br i1 %423, label %424, label %622

424:                                              ; preds = %420
  %425 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %426 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %425, i32 0, i32 0
  %427 = load %struct.set_family*, %struct.set_family** %426, align 8
  %428 = getelementptr inbounds %struct.set_family, %struct.set_family* %427, i32 0, i32 5
  %429 = load i32*, i32** %428, align 8
  %430 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %431 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %430, i32 0, i32 0
  %432 = load %struct.set_family*, %struct.set_family** %431, align 8
  %433 = getelementptr inbounds %struct.set_family, %struct.set_family* %432, i32 0, i32 0
  %434 = load i32, i32* %433, align 8
  %435 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %436 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %435, i32 0, i32 0
  %437 = load %struct.set_family*, %struct.set_family** %436, align 8
  %438 = getelementptr inbounds %struct.set_family, %struct.set_family* %437, i32 0, i32 3
  %439 = load i32, i32* %438, align 4
  %440 = add nsw i32 %439, 1
  store i32 %440, i32* %438, align 4
  %441 = mul nsw i32 %434, %439
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds i32, i32* %429, i64 %442
  store i32* %443, i32** %17, align 8
  %444 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %445 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %444, i32 0, i32 2
  %446 = load %struct.set_family*, %struct.set_family** %445, align 8
  %447 = getelementptr inbounds %struct.set_family, %struct.set_family* %446, i32 0, i32 5
  %448 = load i32*, i32** %447, align 8
  %449 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %450 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %449, i32 0, i32 2
  %451 = load %struct.set_family*, %struct.set_family** %450, align 8
  %452 = getelementptr inbounds %struct.set_family, %struct.set_family* %451, i32 0, i32 0
  %453 = load i32, i32* %452, align 8
  %454 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %455 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %454, i32 0, i32 2
  %456 = load %struct.set_family*, %struct.set_family** %455, align 8
  %457 = getelementptr inbounds %struct.set_family, %struct.set_family* %456, i32 0, i32 3
  %458 = load i32, i32* %457, align 4
  %459 = add nsw i32 %458, 1
  store i32 %459, i32* %457, align 4
  %460 = mul nsw i32 %453, %458
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds i32, i32* %448, i64 %461
  store i32* %462, i32** %16, align 8
  %463 = load i32*, i32** %10, align 8
  %464 = getelementptr inbounds i32, i32* %463, i64 0
  %465 = load i32, i32* %464, align 4
  %466 = and i32 %465, 1023
  store i32 %466, i32* %22, align 4
  %467 = load i32*, i32** %17, align 8
  %468 = getelementptr inbounds i32, i32* %467, i64 0
  %469 = load i32, i32* %468, align 4
  %470 = and i32 %469, -1024
  store i32 %470, i32* %468, align 4
  %471 = load i32, i32* %22, align 4
  %472 = load i32*, i32** %17, align 8
  %473 = getelementptr inbounds i32, i32* %472, i64 0
  %474 = load i32, i32* %473, align 4
  %475 = or i32 %474, %471
  store i32 %475, i32* %473, align 4
  br label %476

476:                                              ; preds = %492, %424
  %477 = load i32*, i32** %10, align 8
  %478 = load i32, i32* %22, align 4
  %479 = sext i32 %478 to i64
  %480 = getelementptr inbounds i32, i32* %477, i64 %479
  %481 = load i32, i32* %480, align 4
  %482 = load i32*, i32** %15, align 8
  %483 = load i32, i32* %22, align 4
  %484 = sext i32 %483 to i64
  %485 = getelementptr inbounds i32, i32* %482, i64 %484
  %486 = load i32, i32* %485, align 4
  %487 = and i32 %481, %486
  %488 = load i32*, i32** %17, align 8
  %489 = load i32, i32* %22, align 4
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds i32, i32* %488, i64 %490
  store i32 %487, i32* %491, align 4
  br label %492

492:                                              ; preds = %476
  %493 = load i32, i32* %22, align 4
  %494 = add nsw i32 %493, -1
  store i32 %494, i32* %22, align 4
  %495 = icmp sgt i32 %494, 0
  br i1 %495, label %476, label %496

496:                                              ; preds = %492
  %497 = load i32*, i32** %9, align 8
  %498 = getelementptr inbounds i32, i32* %497, i64 0
  %499 = load i32, i32* %498, align 4
  %500 = and i32 %499, 1023
  store i32 %500, i32* %23, align 4
  %501 = load i32*, i32** %16, align 8
  %502 = getelementptr inbounds i32, i32* %501, i64 0
  %503 = load i32, i32* %502, align 4
  %504 = and i32 %503, -1024
  store i32 %504, i32* %502, align 4
  %505 = load i32, i32* %23, align 4
  %506 = load i32*, i32** %16, align 8
  %507 = getelementptr inbounds i32, i32* %506, i64 0
  %508 = load i32, i32* %507, align 4
  %509 = or i32 %508, %505
  store i32 %509, i32* %507, align 4
  br label %510

510:                                              ; preds = %526, %496
  %511 = load i32*, i32** %9, align 8
  %512 = load i32, i32* %23, align 4
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds i32, i32* %511, i64 %513
  %515 = load i32, i32* %514, align 4
  %516 = load i32*, i32** %15, align 8
  %517 = load i32, i32* %23, align 4
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds i32, i32* %516, i64 %518
  %520 = load i32, i32* %519, align 4
  %521 = and i32 %515, %520
  %522 = load i32*, i32** %16, align 8
  %523 = load i32, i32* %23, align 4
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds i32, i32* %522, i64 %524
  store i32 %521, i32* %525, align 4
  br label %526

526:                                              ; preds = %510
  %527 = load i32, i32* %23, align 4
  %528 = add nsw i32 %527, -1
  store i32 %528, i32* %23, align 4
  %529 = icmp sgt i32 %528, 0
  br i1 %529, label %510, label %530

530:                                              ; preds = %526
  store i32 0, i32* %14, align 4
  %531 = load i32, i32* %12, align 4
  store i32 %531, i32* %18, align 4
  br label %532

532:                                              ; preds = %566, %530
  %533 = load i32, i32* %18, align 4
  %534 = load i32, i32* %19, align 4
  %535 = icmp sle i32 %533, %534
  br i1 %535, label %536, label %569

536:                                              ; preds = %532
  %537 = load i32*, i32** %15, align 8
  %538 = load i32, i32* %18, align 4
  %539 = ashr i32 %538, 5
  %540 = add nsw i32 %539, 1
  %541 = sext i32 %540 to i64
  %542 = getelementptr inbounds i32, i32* %537, i64 %541
  %543 = load i32, i32* %542, align 4
  %544 = load i32, i32* %18, align 4
  %545 = and i32 %544, 31
  %546 = shl i32 1, %545
  %547 = and i32 %543, %546
  %548 = icmp ne i32 %547, 0
  br i1 %548, label %549, label %565

549:                                              ; preds = %536
  store i32 1, i32* %14, align 4
  %550 = load i32, i32* %18, align 4
  %551 = load i32, i32* %13, align 4
  %552 = add nsw i32 %550, %551
  %553 = and i32 %552, 31
  %554 = shl i32 1, %553
  %555 = load i32*, i32** %17, align 8
  %556 = load i32, i32* %18, align 4
  %557 = load i32, i32* %13, align 4
  %558 = add nsw i32 %556, %557
  %559 = ashr i32 %558, 5
  %560 = add nsw i32 %559, 1
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds i32, i32* %555, i64 %561
  %563 = load i32, i32* %562, align 4
  %564 = or i32 %563, %554
  store i32 %564, i32* %562, align 4
  br label %565

565:                                              ; preds = %549, %536
  br label %566

566:                                              ; preds = %565
  %567 = load i32, i32* %18, align 4
  %568 = add nsw i32 %567, 1
  store i32 %568, i32* %18, align 4
  br label %532

569:                                              ; preds = %532
  %570 = load i32, i32* %14, align 4
  %571 = icmp ne i32 %570, 0
  br i1 %571, label %579, label %572

572:                                              ; preds = %569
  %573 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %574 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %573, i32 0, i32 0
  %575 = load %struct.set_family*, %struct.set_family** %574, align 8
  %576 = getelementptr inbounds %struct.set_family, %struct.set_family* %575, i32 0, i32 3
  %577 = load i32, i32* %576, align 4
  %578 = add nsw i32 %577, -1
  store i32 %578, i32* %576, align 4
  br label %579

579:                                              ; preds = %572, %569
  %580 = load i32, i32* %12, align 4
  store i32 %580, i32* %18, align 4
  br label %581

581:                                              ; preds = %611, %579
  %582 = load i32, i32* %18, align 4
  %583 = load i32, i32* %19, align 4
  %584 = icmp sle i32 %582, %583
  br i1 %584, label %585, label %614

585:                                              ; preds = %581
  %586 = load i32*, i32** %15, align 8
  %587 = load i32, i32* %18, align 4
  %588 = ashr i32 %587, 5
  %589 = add nsw i32 %588, 1
  %590 = sext i32 %589 to i64
  %591 = getelementptr inbounds i32, i32* %586, i64 %590
  %592 = load i32, i32* %591, align 4
  %593 = load i32, i32* %18, align 4
  %594 = and i32 %593, 31
  %595 = shl i32 1, %594
  %596 = and i32 %592, %595
  %597 = icmp ne i32 %596, 0
  br i1 %597, label %598, label %610

598:                                              ; preds = %585
  %599 = load i32, i32* %18, align 4
  %600 = and i32 %599, 31
  %601 = shl i32 1, %600
  %602 = load i32*, i32** %16, align 8
  %603 = load i32, i32* %18, align 4
  %604 = ashr i32 %603, 5
  %605 = add nsw i32 %604, 1
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds i32, i32* %602, i64 %606
  %608 = load i32, i32* %607, align 4
  %609 = or i32 %608, %601
  store i32 %609, i32* %607, align 4
  br label %610

610:                                              ; preds = %598, %585
  br label %611

611:                                              ; preds = %610
  %612 = load i32, i32* %18, align 4
  %613 = add nsw i32 %612, 1
  store i32 %613, i32* %18, align 4
  br label %581

614:                                              ; preds = %581
  br label %615

615:                                              ; preds = %614
  %616 = load %struct.set_family*, %struct.set_family** %7, align 8
  %617 = getelementptr inbounds %struct.set_family, %struct.set_family* %616, i32 0, i32 0
  %618 = load i32, i32* %617, align 8
  %619 = load i32*, i32** %15, align 8
  %620 = sext i32 %618 to i64
  %621 = getelementptr inbounds i32, i32* %619, i64 %620
  store i32* %621, i32** %15, align 8
  br label %420

622:                                              ; preds = %420
  %623 = load %struct.set_family*, %struct.set_family** %8, align 8
  %624 = getelementptr inbounds %struct.set_family, %struct.set_family* %623, i32 0, i32 5
  %625 = load i32*, i32** %624, align 8
  store i32* %625, i32** %15, align 8
  %626 = load i32*, i32** %15, align 8
  %627 = load %struct.set_family*, %struct.set_family** %8, align 8
  %628 = getelementptr inbounds %struct.set_family, %struct.set_family* %627, i32 0, i32 3
  %629 = load i32, i32* %628, align 4
  %630 = load %struct.set_family*, %struct.set_family** %8, align 8
  %631 = getelementptr inbounds %struct.set_family, %struct.set_family* %630, i32 0, i32 0
  %632 = load i32, i32* %631, align 8
  %633 = mul nsw i32 %629, %632
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds i32, i32* %626, i64 %634
  store i32* %635, i32** %11, align 8
  br label %636

636:                                              ; preds = %744, %622
  %637 = load i32*, i32** %15, align 8
  %638 = load i32*, i32** %11, align 8
  %639 = icmp ult i32* %637, %638
  br i1 %639, label %640, label %751

640:                                              ; preds = %636
  %641 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %642 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %641, i32 0, i32 1
  %643 = load %struct.set_family*, %struct.set_family** %642, align 8
  %644 = getelementptr inbounds %struct.set_family, %struct.set_family* %643, i32 0, i32 5
  %645 = load i32*, i32** %644, align 8
  %646 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %647 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %646, i32 0, i32 1
  %648 = load %struct.set_family*, %struct.set_family** %647, align 8
  %649 = getelementptr inbounds %struct.set_family, %struct.set_family* %648, i32 0, i32 0
  %650 = load i32, i32* %649, align 8
  %651 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %652 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %651, i32 0, i32 1
  %653 = load %struct.set_family*, %struct.set_family** %652, align 8
  %654 = getelementptr inbounds %struct.set_family, %struct.set_family* %653, i32 0, i32 3
  %655 = load i32, i32* %654, align 4
  %656 = add nsw i32 %655, 1
  store i32 %656, i32* %654, align 4
  %657 = mul nsw i32 %650, %655
  %658 = sext i32 %657 to i64
  %659 = getelementptr inbounds i32, i32* %645, i64 %658
  store i32* %659, i32** %17, align 8
  %660 = load i32*, i32** %9, align 8
  %661 = getelementptr inbounds i32, i32* %660, i64 0
  %662 = load i32, i32* %661, align 4
  %663 = and i32 %662, 1023
  store i32 %663, i32* %24, align 4
  %664 = load i32*, i32** %17, align 8
  %665 = getelementptr inbounds i32, i32* %664, i64 0
  %666 = load i32, i32* %665, align 4
  %667 = and i32 %666, -1024
  store i32 %667, i32* %665, align 4
  %668 = load i32, i32* %24, align 4
  %669 = load i32*, i32** %17, align 8
  %670 = getelementptr inbounds i32, i32* %669, i64 0
  %671 = load i32, i32* %670, align 4
  %672 = or i32 %671, %668
  store i32 %672, i32* %670, align 4
  br label %673

673:                                              ; preds = %689, %640
  %674 = load i32*, i32** %9, align 8
  %675 = load i32, i32* %24, align 4
  %676 = sext i32 %675 to i64
  %677 = getelementptr inbounds i32, i32* %674, i64 %676
  %678 = load i32, i32* %677, align 4
  %679 = load i32*, i32** %15, align 8
  %680 = load i32, i32* %24, align 4
  %681 = sext i32 %680 to i64
  %682 = getelementptr inbounds i32, i32* %679, i64 %681
  %683 = load i32, i32* %682, align 4
  %684 = and i32 %678, %683
  %685 = load i32*, i32** %17, align 8
  %686 = load i32, i32* %24, align 4
  %687 = sext i32 %686 to i64
  %688 = getelementptr inbounds i32, i32* %685, i64 %687
  store i32 %684, i32* %688, align 4
  br label %689

689:                                              ; preds = %673
  %690 = load i32, i32* %24, align 4
  %691 = add nsw i32 %690, -1
  store i32 %691, i32* %24, align 4
  %692 = icmp sgt i32 %691, 0
  br i1 %692, label %673, label %693

693:                                              ; preds = %689
  %694 = load i32, i32* %12, align 4
  store i32 %694, i32* %18, align 4
  br label %695

695:                                              ; preds = %740, %693
  %696 = load i32, i32* %18, align 4
  %697 = load i32, i32* %19, align 4
  %698 = icmp sle i32 %696, %697
  br i1 %698, label %699, label %743

699:                                              ; preds = %695
  %700 = load i32*, i32** %15, align 8
  %701 = load i32, i32* %18, align 4
  %702 = ashr i32 %701, 5
  %703 = add nsw i32 %702, 1
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds i32, i32* %700, i64 %704
  %706 = load i32, i32* %705, align 4
  %707 = load i32, i32* %18, align 4
  %708 = and i32 %707, 31
  %709 = shl i32 1, %708
  %710 = and i32 %706, %709
  %711 = icmp ne i32 %710, 0
  br i1 %711, label %712, label %739

712:                                              ; preds = %699
  %713 = load i32, i32* %18, align 4
  %714 = and i32 %713, 31
  %715 = shl i32 1, %714
  %716 = load i32*, i32** %17, align 8
  %717 = load i32, i32* %18, align 4
  %718 = ashr i32 %717, 5
  %719 = add nsw i32 %718, 1
  %720 = sext i32 %719 to i64
  %721 = getelementptr inbounds i32, i32* %716, i64 %720
  %722 = load i32, i32* %721, align 4
  %723 = or i32 %722, %715
  store i32 %723, i32* %721, align 4
  %724 = load i32, i32* %18, align 4
  %725 = load i32, i32* %13, align 4
  %726 = add nsw i32 %724, %725
  %727 = and i32 %726, 31
  %728 = shl i32 1, %727
  %729 = load i32*, i32** %17, align 8
  %730 = load i32, i32* %18, align 4
  %731 = load i32, i32* %13, align 4
  %732 = add nsw i32 %730, %731
  %733 = ashr i32 %732, 5
  %734 = add nsw i32 %733, 1
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds i32, i32* %729, i64 %735
  %737 = load i32, i32* %736, align 4
  %738 = or i32 %737, %728
  store i32 %738, i32* %736, align 4
  br label %739

739:                                              ; preds = %712, %699
  br label %740

740:                                              ; preds = %739
  %741 = load i32, i32* %18, align 4
  %742 = add nsw i32 %741, 1
  store i32 %742, i32* %18, align 4
  br label %695

743:                                              ; preds = %695
  br label %744

744:                                              ; preds = %743
  %745 = load %struct.set_family*, %struct.set_family** %8, align 8
  %746 = getelementptr inbounds %struct.set_family, %struct.set_family* %745, i32 0, i32 0
  %747 = load i32, i32* %746, align 8
  %748 = load i32*, i32** %15, align 8
  %749 = sext i32 %747 to i64
  %750 = getelementptr inbounds i32, i32* %748, i64 %749
  store i32* %750, i32** %15, align 8
  br label %636

751:                                              ; preds = %636
  %752 = load %struct.set_family*, %struct.set_family** %6, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %752)
  %753 = load %struct.set_family*, %struct.set_family** %8, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %753)
  %754 = load %struct.set_family*, %struct.set_family** %7, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %754)
  %755 = load i32*, i32** %9, align 8
  %756 = icmp ne i32* %755, null
  br i1 %756, label %757, label %760

757:                                              ; preds = %751
  %758 = load i32*, i32** %9, align 8
  %759 = bitcast i32* %758 to i8*
  call void @free(i8* %759) #7
  store i32* null, i32** %9, align 8
  br label %760

760:                                              ; preds = %757, %751
  %761 = load i32*, i32** %10, align 8
  %762 = icmp ne i32* %761, null
  br i1 %762, label %763, label %766

763:                                              ; preds = %760
  %764 = load i32*, i32** %10, align 8
  %765 = bitcast i32* %764 to i8*
  call void @free(i8* %765) #7
  store i32* null, i32** %10, align 8
  br label %766

766:                                              ; preds = %763, %760
  %767 = load i32, i32* %3, align 4
  ret i32 %767
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @opo(i32* %0, %struct.set_family* %1, %struct.set_family* %2, %struct.set_family* %3, i32 %4) #0 {
  %6 = alloca i32*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca %struct.set_family*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca i32*, align 8
  %21 = alloca i32*, align 8
  %22 = alloca i32*, align 8
  %23 = alloca i32*, align 8
  %24 = alloca %struct.set_family*, align 8
  %25 = alloca %struct.set_family*, align 8
  %26 = alloca %struct.set_family*, align 8
  store i32* %0, i32** %6, align 8
  store %struct.set_family* %1, %struct.set_family** %7, align 8
  store %struct.set_family* %2, %struct.set_family** %8, align 8
  store %struct.set_family* %3, %struct.set_family** %9, align 8
  store i32 %4, i32* %10, align 4
  %27 = load %struct.set_family*, %struct.set_family** %7, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = icmp sle i32 %29, 32
  br i1 %30, label %31, label %32

31:                                               ; preds = %5
  br label %40

32:                                               ; preds = %5
  %33 = load %struct.set_family*, %struct.set_family** %7, align 8
  %34 = getelementptr inbounds %struct.set_family, %struct.set_family* %33, i32 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = sub nsw i32 %35, 1
  %37 = ashr i32 %36, 5
  %38 = add nsw i32 %37, 1
  %39 = add nsw i32 %38, 1
  br label %40

40:                                               ; preds = %32, %31
  %41 = phi i32 [ 2, %31 ], [ %39, %32 ]
  %42 = sext i32 %41 to i64
  %43 = mul i64 4, %42
  %44 = call noalias i8* @malloc(i64 %43) #7
  %45 = bitcast i8* %44 to i32*
  %46 = load %struct.set_family*, %struct.set_family** %7, align 8
  %47 = getelementptr inbounds %struct.set_family, %struct.set_family* %46, i32 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_fill to i32* (i32*, i32, ...)*)(i32* %45, i32 %48)
  store i32* %49, i32** %17, align 8
  store i32 0, i32* %12, align 4
  br label %50

50:                                               ; preds = %108, %40
  %51 = load i32, i32* %12, align 4
  %52 = load i32, i32* %10, align 4
  %53 = icmp slt i32 %51, %52
  br i1 %53, label %54, label %111

54:                                               ; preds = %50
  %55 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %56 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %55, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = load i32, i32* %12, align 4
  %61 = add nsw i32 %59, %60
  store i32 %61, i32* %15, align 4
  %62 = load %struct.set_family*, %struct.set_family** %7, align 8
  %63 = getelementptr inbounds %struct.set_family, %struct.set_family* %62, i32 0, i32 5
  %64 = load i32*, i32** %63, align 8
  store i32* %64, i32** %18, align 8
  store i32 0, i32* %13, align 4
  br label %65

65:                                               ; preds = %98, %54
  %66 = load i32, i32* %13, align 4
  %67 = load %struct.set_family*, %struct.set_family** %7, align 8
  %68 = getelementptr inbounds %struct.set_family, %struct.set_family* %67, i32 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = icmp slt i32 %66, %69
  br i1 %70, label %71, label %107

71:                                               ; preds = %65
  %72 = load i32*, i32** %18, align 8
  %73 = load i32, i32* %15, align 4
  %74 = ashr i32 %73, 5
  %75 = add nsw i32 %74, 1
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i32, i32* %72, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = load i32, i32* %15, align 4
  %80 = and i32 %79, 31
  %81 = shl i32 1, %80
  %82 = and i32 %78, %81
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %97

84:                                               ; preds = %71
  %85 = load i32, i32* %13, align 4
  %86 = and i32 %85, 31
  %87 = shl i32 1, %86
  %88 = xor i32 %87, -1
  %89 = load i32*, i32** %17, align 8
  %90 = load i32, i32* %13, align 4
  %91 = ashr i32 %90, 5
  %92 = add nsw i32 %91, 1
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i32, i32* %89, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = and i32 %95, %88
  store i32 %96, i32* %94, align 4
  br label %97

97:                                               ; preds = %84, %71
  br label %98

98:                                               ; preds = %97
  %99 = load %struct.set_family*, %struct.set_family** %7, align 8
  %100 = getelementptr inbounds %struct.set_family, %struct.set_family* %99, i32 0, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = load i32*, i32** %18, align 8
  %103 = sext i32 %101 to i64
  %104 = getelementptr inbounds i32, i32* %102, i64 %103
  store i32* %104, i32** %18, align 8
  %105 = load i32, i32* %13, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %13, align 4
  br label %65

107:                                              ; preds = %65
  br label %108

108:                                              ; preds = %107
  %109 = load i32, i32* %12, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %12, align 4
  br label %50

111:                                              ; preds = %50
  %112 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %113 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %112, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = load i32, i32* %10, align 4
  %118 = sub nsw i32 %116, %117
  %119 = sdiv i32 %118, 2
  store i32 %119, i32* %11, align 4
  %120 = load i32, i32* %10, align 4
  %121 = load i32, i32* %11, align 4
  %122 = add nsw i32 %120, %121
  %123 = sub nsw i32 %122, 1
  store i32 %123, i32* %14, align 4
  %124 = load %struct.set_family*, %struct.set_family** %7, align 8
  %125 = load %struct.set_family*, %struct.set_family** %8, align 8
  %126 = load i32*, i32** %17, align 8
  %127 = load i32, i32* %11, align 4
  %128 = load i32, i32* %10, align 4
  %129 = load i32, i32* %14, align 4
  %130 = call %struct.set_family* @opo_recur(%struct.set_family* %124, %struct.set_family* %125, i32* %126, i32 %127, i32 %128, i32 %129)
  store %struct.set_family* %130, %struct.set_family** %24, align 8
  %131 = load %struct.set_family*, %struct.set_family** %24, align 8
  %132 = getelementptr inbounds %struct.set_family, %struct.set_family* %131, i32 0, i32 5
  %133 = load i32*, i32** %132, align 8
  store i32* %133, i32** %16, align 8
  %134 = load %struct.set_family*, %struct.set_family** %7, align 8
  %135 = getelementptr inbounds %struct.set_family, %struct.set_family* %134, i32 0, i32 3
  %136 = load i32, i32* %135, align 4
  %137 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %138 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %136, i32 %137)
  store %struct.set_family* %138, %struct.set_family** %25, align 8
  %139 = load %struct.set_family*, %struct.set_family** %7, align 8
  %140 = getelementptr inbounds %struct.set_family, %struct.set_family* %139, i32 0, i32 5
  %141 = load i32*, i32** %140, align 8
  store i32* %141, i32** %18, align 8
  store i32 0, i32* %13, align 4
  br label %142

142:                                              ; preds = %166, %111
  %143 = load i32, i32* %13, align 4
  %144 = load %struct.set_family*, %struct.set_family** %7, align 8
  %145 = getelementptr inbounds %struct.set_family, %struct.set_family* %144, i32 0, i32 3
  %146 = load i32, i32* %145, align 4
  %147 = icmp slt i32 %143, %146
  br i1 %147, label %148, label %175

148:                                              ; preds = %142
  %149 = load i32*, i32** %16, align 8
  %150 = load i32, i32* %13, align 4
  %151 = ashr i32 %150, 5
  %152 = add nsw i32 %151, 1
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i32, i32* %149, i64 %153
  %155 = load i32, i32* %154, align 4
  %156 = load i32, i32* %13, align 4
  %157 = and i32 %156, 31
  %158 = shl i32 1, %157
  %159 = and i32 %155, %158
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %165, label %161

161:                                              ; preds = %148
  %162 = load %struct.set_family*, %struct.set_family** %25, align 8
  %163 = load i32*, i32** %18, align 8
  %164 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %162, i32* %163)
  store %struct.set_family* %164, %struct.set_family** %25, align 8
  br label %165

165:                                              ; preds = %161, %148
  br label %166

166:                                              ; preds = %165
  %167 = load %struct.set_family*, %struct.set_family** %7, align 8
  %168 = getelementptr inbounds %struct.set_family, %struct.set_family* %167, i32 0, i32 0
  %169 = load i32, i32* %168, align 8
  %170 = load i32*, i32** %18, align 8
  %171 = sext i32 %169 to i64
  %172 = getelementptr inbounds i32, i32* %170, i64 %171
  store i32* %172, i32** %18, align 8
  %173 = load i32, i32* %13, align 4
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* %13, align 4
  br label %142

175:                                              ; preds = %142
  %176 = load i32*, i32** %17, align 8
  %177 = icmp ne i32* %176, null
  br i1 %177, label %178, label %181

178:                                              ; preds = %175
  %179 = load i32*, i32** %17, align 8
  %180 = bitcast i32* %179 to i8*
  call void @free(i8* %180) #7
  store i32* null, i32** %17, align 8
  br label %181

181:                                              ; preds = %178, %175
  %182 = load %struct.set_family*, %struct.set_family** %24, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %182)
  %183 = load %struct.set_family*, %struct.set_family** %25, align 8
  %184 = call i32** (%struct.set_family*, ...) bitcast (i32** (%struct.set_family*)* @cube1list to i32** (%struct.set_family*, ...)*)(%struct.set_family* %183)
  %185 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @complement to %struct.set_family* (i32**, ...)*)(i32** %184)
  store %struct.set_family* %185, %struct.set_family** %26, align 8
  %186 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %187 = icmp sle i32 %186, 32
  br i1 %187, label %188, label %189

188:                                              ; preds = %181
  br label %195

189:                                              ; preds = %181
  %190 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %191 = sub nsw i32 %190, 1
  %192 = ashr i32 %191, 5
  %193 = add nsw i32 %192, 1
  %194 = add nsw i32 %193, 1
  br label %195

195:                                              ; preds = %189, %188
  %196 = phi i32 [ 2, %188 ], [ %194, %189 ]
  %197 = sext i32 %196 to i64
  %198 = mul i64 4, %197
  %199 = call noalias i8* @malloc(i64 %198) #7
  %200 = bitcast i8* %199 to i32*
  %201 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %202 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %200, i32 %201)
  store i32* %202, i32** %22, align 8
  %203 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %204 = icmp sle i32 %203, 32
  br i1 %204, label %205, label %206

205:                                              ; preds = %195
  br label %212

206:                                              ; preds = %195
  %207 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %208 = sub nsw i32 %207, 1
  %209 = ashr i32 %208, 5
  %210 = add nsw i32 %209, 1
  %211 = add nsw i32 %210, 1
  br label %212

212:                                              ; preds = %206, %205
  %213 = phi i32 [ 2, %205 ], [ %211, %206 ]
  %214 = sext i32 %213 to i64
  %215 = mul i64 4, %214
  %216 = call noalias i8* @malloc(i64 %215) #7
  %217 = bitcast i8* %216 to i32*
  %218 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %219 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %217, i32 %218)
  store i32* %219, i32** %23, align 8
  %220 = load %struct.set_family*, %struct.set_family** %7, align 8
  %221 = getelementptr inbounds %struct.set_family, %struct.set_family* %220, i32 0, i32 5
  %222 = load i32*, i32** %221, align 8
  store i32* %222, i32** %18, align 8
  %223 = load i32*, i32** %18, align 8
  %224 = load %struct.set_family*, %struct.set_family** %7, align 8
  %225 = getelementptr inbounds %struct.set_family, %struct.set_family* %224, i32 0, i32 3
  %226 = load i32, i32* %225, align 4
  %227 = load %struct.set_family*, %struct.set_family** %7, align 8
  %228 = getelementptr inbounds %struct.set_family, %struct.set_family* %227, i32 0, i32 0
  %229 = load i32, i32* %228, align 8
  %230 = mul nsw i32 %226, %229
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i32, i32* %223, i64 %231
  store i32* %232, i32** %20, align 8
  br label %233

233:                                              ; preds = %277, %212
  %234 = load i32*, i32** %18, align 8
  %235 = load i32*, i32** %20, align 8
  %236 = icmp ult i32* %234, %235
  br i1 %236, label %237, label %284

237:                                              ; preds = %233
  %238 = load %struct.set_family*, %struct.set_family** %26, align 8
  %239 = getelementptr inbounds %struct.set_family, %struct.set_family* %238, i32 0, i32 5
  %240 = load i32*, i32** %239, align 8
  store i32* %240, i32** %19, align 8
  %241 = load i32*, i32** %19, align 8
  %242 = load %struct.set_family*, %struct.set_family** %26, align 8
  %243 = getelementptr inbounds %struct.set_family, %struct.set_family* %242, i32 0, i32 3
  %244 = load i32, i32* %243, align 4
  %245 = load %struct.set_family*, %struct.set_family** %26, align 8
  %246 = getelementptr inbounds %struct.set_family, %struct.set_family* %245, i32 0, i32 0
  %247 = load i32, i32* %246, align 8
  %248 = mul nsw i32 %244, %247
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds i32, i32* %241, i64 %249
  store i32* %250, i32** %21, align 8
  br label %251

251:                                              ; preds = %269, %237
  %252 = load i32*, i32** %19, align 8
  %253 = load i32*, i32** %21, align 8
  %254 = icmp ult i32* %252, %253
  br i1 %254, label %255, label %276

255:                                              ; preds = %251
  %256 = load i32*, i32** %18, align 8
  %257 = load i32*, i32** %19, align 8
  %258 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @cdist0 to i32 (i32*, i32*, ...)*)(i32* %256, i32* %257)
  %259 = icmp ne i32 %258, 0
  br i1 %259, label %260, label %268

260:                                              ; preds = %255
  %261 = load i32*, i32** %22, align 8
  %262 = load i32*, i32** %22, align 8
  %263 = load i32*, i32** %23, align 8
  %264 = load i32*, i32** %18, align 8
  %265 = load i32*, i32** %19, align 8
  %266 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_and to i32* (i32*, i32*, i32*, ...)*)(i32* %263, i32* %264, i32* %265)
  %267 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %261, i32* %262, i32* %266)
  br label %268

268:                                              ; preds = %260, %255
  br label %269

269:                                              ; preds = %268
  %270 = load %struct.set_family*, %struct.set_family** %26, align 8
  %271 = getelementptr inbounds %struct.set_family, %struct.set_family* %270, i32 0, i32 0
  %272 = load i32, i32* %271, align 8
  %273 = load i32*, i32** %19, align 8
  %274 = sext i32 %272 to i64
  %275 = getelementptr inbounds i32, i32* %273, i64 %274
  store i32* %275, i32** %19, align 8
  br label %251

276:                                              ; preds = %251
  br label %277

277:                                              ; preds = %276
  %278 = load %struct.set_family*, %struct.set_family** %7, align 8
  %279 = getelementptr inbounds %struct.set_family, %struct.set_family* %278, i32 0, i32 0
  %280 = load i32, i32* %279, align 8
  %281 = load i32*, i32** %18, align 8
  %282 = sext i32 %280 to i64
  %283 = getelementptr inbounds i32, i32* %281, i64 %282
  store i32* %283, i32** %18, align 8
  br label %233

284:                                              ; preds = %233
  %285 = load %struct.set_family*, %struct.set_family** %7, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %285)
  %286 = load %struct.set_family*, %struct.set_family** %26, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %286)
  %287 = load i32*, i32** %23, align 8
  %288 = icmp ne i32* %287, null
  br i1 %288, label %289, label %292

289:                                              ; preds = %284
  %290 = load i32*, i32** %23, align 8
  %291 = bitcast i32* %290 to i8*
  call void @free(i8* %291) #7
  store i32* null, i32** %23, align 8
  br label %292

292:                                              ; preds = %289, %284
  %293 = load i32, i32* %10, align 4
  store i32 %293, i32* %12, align 4
  br label %294

294:                                              ; preds = %351, %292
  %295 = load i32, i32* %12, align 4
  %296 = load i32, i32* %14, align 4
  %297 = icmp sle i32 %295, %296
  br i1 %297, label %298, label %354

298:                                              ; preds = %294
  %299 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %300 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds i32, i32* %299, i64 %301
  %303 = load i32, i32* %302, align 4
  %304 = load i32, i32* %12, align 4
  %305 = add nsw i32 %303, %304
  store i32 %305, i32* %15, align 4
  %306 = load i32*, i32** %22, align 8
  %307 = load i32, i32* %15, align 4
  %308 = ashr i32 %307, 5
  %309 = add nsw i32 %308, 1
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds i32, i32* %306, i64 %310
  %312 = load i32, i32* %311, align 4
  %313 = load i32, i32* %15, align 4
  %314 = and i32 %313, 31
  %315 = shl i32 1, %314
  %316 = and i32 %312, %315
  %317 = icmp ne i32 %316, 0
  br i1 %317, label %318, label %350

318:                                              ; preds = %298
  %319 = load i32*, i32** %22, align 8
  %320 = load i32, i32* %15, align 4
  %321 = load i32, i32* %11, align 4
  %322 = add nsw i32 %320, %321
  %323 = ashr i32 %322, 5
  %324 = add nsw i32 %323, 1
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds i32, i32* %319, i64 %325
  %327 = load i32, i32* %326, align 4
  %328 = load i32, i32* %15, align 4
  %329 = load i32, i32* %11, align 4
  %330 = add nsw i32 %328, %329
  %331 = and i32 %330, 31
  %332 = shl i32 1, %331
  %333 = and i32 %327, %332
  %334 = icmp ne i32 %333, 0
  br i1 %334, label %335, label %336

335:                                              ; preds = %318
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.449, i64 0, i64 0))
  br label %349

336:                                              ; preds = %318
  %337 = load i32, i32* %15, align 4
  %338 = and i32 %337, 31
  %339 = shl i32 1, %338
  %340 = xor i32 %339, -1
  %341 = load i32*, i32** %6, align 8
  %342 = load i32, i32* %15, align 4
  %343 = ashr i32 %342, 5
  %344 = add nsw i32 %343, 1
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds i32, i32* %341, i64 %345
  %347 = load i32, i32* %346, align 4
  %348 = and i32 %347, %340
  store i32 %348, i32* %346, align 4
  br label %349

349:                                              ; preds = %336, %335
  br label %350

350:                                              ; preds = %349, %298
  br label %351

351:                                              ; preds = %350
  %352 = load i32, i32* %12, align 4
  %353 = add nsw i32 %352, 1
  store i32 %353, i32* %12, align 4
  br label %294

354:                                              ; preds = %294
  %355 = load i32*, i32** %22, align 8
  %356 = icmp ne i32* %355, null
  br i1 %356, label %357, label %360

357:                                              ; preds = %354
  %358 = load i32*, i32** %22, align 8
  %359 = bitcast i32* %358 to i8*
  call void @free(i8* %359) #7
  store i32* null, i32** %22, align 8
  br label %360

360:                                              ; preds = %357, %354
  %361 = load %struct.set_family*, %struct.set_family** %25, align 8
  ret %struct.set_family* %361
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @opo_recur(%struct.set_family* %0, %struct.set_family* %1, i32* %2, i32 %3, i32 %4, i32 %5) #0 {
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.set_family*, align 8
  %15 = alloca %struct.set_family*, align 8
  %16 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %7, align 8
  store %struct.set_family* %1, %struct.set_family** %8, align 8
  store i32* %2, i32** %9, align 8
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  %17 = load i32, i32* @opo_recur.level, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* @opo_recur.level, align 4
  %19 = load i32, i32* %11, align 4
  %20 = load i32, i32* %12, align 4
  %21 = icmp eq i32 %19, %20
  br i1 %21, label %22, label %30

22:                                               ; preds = %6
  %23 = load %struct.set_family*, %struct.set_family** %7, align 8
  %24 = load i32*, i32** %9, align 8
  %25 = load i32, i32* %11, align 4
  %26 = load i32, i32* %11, align 4
  %27 = load i32, i32* %10, align 4
  %28 = add nsw i32 %26, %27
  %29 = call %struct.set_family* @opo_leaf(%struct.set_family* %23, i32* %24, i32 %25, i32 %28)
  store %struct.set_family* %29, %struct.set_family** %16, align 8
  br label %78

30:                                               ; preds = %6
  %31 = load i32, i32* %11, align 4
  %32 = load i32, i32* %12, align 4
  %33 = add nsw i32 %31, %32
  %34 = sdiv i32 %33, 2
  store i32 %34, i32* %13, align 4
  %35 = load %struct.set_family*, %struct.set_family** %7, align 8
  %36 = load %struct.set_family*, %struct.set_family** %8, align 8
  %37 = load i32*, i32** %9, align 8
  %38 = load i32, i32* %10, align 4
  %39 = load i32, i32* %11, align 4
  %40 = load i32, i32* %13, align 4
  %41 = call %struct.set_family* @opo_recur(%struct.set_family* %35, %struct.set_family* %36, i32* %37, i32 %38, i32 %39, i32 %40)
  store %struct.set_family* %41, %struct.set_family** %14, align 8
  %42 = load %struct.set_family*, %struct.set_family** %7, align 8
  %43 = load %struct.set_family*, %struct.set_family** %8, align 8
  %44 = load i32*, i32** %9, align 8
  %45 = load i32, i32* %10, align 4
  %46 = load i32, i32* %13, align 4
  %47 = add nsw i32 %46, 1
  %48 = load i32, i32* %12, align 4
  %49 = call %struct.set_family* @opo_recur(%struct.set_family* %42, %struct.set_family* %43, i32* %44, i32 %45, i32 %47, i32 %48)
  store %struct.set_family* %49, %struct.set_family** %15, align 8
  %50 = load %struct.set_family*, %struct.set_family** %14, align 8
  %51 = load %struct.set_family*, %struct.set_family** %15, align 8
  %52 = load i32, i32* @opo_recur.level, align 4
  %53 = icmp eq i32 %52, 1
  %54 = zext i1 %53 to i32
  %55 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, i32)* @unate_intersect to %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...)*)(%struct.set_family* %50, %struct.set_family* %51, i32 %54)
  store %struct.set_family* %55, %struct.set_family** %16, align 8
  %56 = load i32, i32* @trace, align 4
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %75

58:                                               ; preds = %30
  %59 = load i32, i32* @opo_recur.level, align 4
  %60 = sub nsw i32 %59, 1
  %61 = load %struct.set_family*, %struct.set_family** %16, align 8
  %62 = getelementptr inbounds %struct.set_family, %struct.set_family* %61, i32 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = load %struct.set_family*, %struct.set_family** %14, align 8
  %65 = getelementptr inbounds %struct.set_family, %struct.set_family* %64, i32 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = load %struct.set_family*, %struct.set_family** %15, align 8
  %68 = getelementptr inbounds %struct.set_family, %struct.set_family* %67, i32 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %71 = call i8* @util_print_time(i64 %70)
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6.450, i64 0, i64 0), i32 %60, i32 %63, i32 %66, i32 %69, i8* %71)
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %74 = call i32 @fflush(%struct._IO_FILE* %73)
  br label %75

75:                                               ; preds = %58, %30
  %76 = load %struct.set_family*, %struct.set_family** %14, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %76)
  %77 = load %struct.set_family*, %struct.set_family** %15, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %77)
  br label %78

78:                                               ; preds = %75, %22
  %79 = load i32, i32* @opo_recur.level, align 4
  %80 = add nsw i32 %79, -1
  store i32 %80, i32* @opo_recur.level, align 4
  %81 = load %struct.set_family*, %struct.set_family** %16, align 8
  ret %struct.set_family* %81
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @opo_leaf(%struct.set_family* %0, i32* %1, i32 %2, i32 %3) #0 {
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.set_family*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %13 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %14 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i32, i32* %13, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = load i32, i32* %7, align 4
  %19 = add nsw i32 %18, %17
  store i32 %19, i32* %7, align 4
  %20 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %21 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i32, i32* %20, i64 %22
  %24 = load i32, i32* %23, align 4
  %25 = load i32, i32* %8, align 4
  %26 = add nsw i32 %25, %24
  store i32 %26, i32* %8, align 4
  %27 = load %struct.set_family*, %struct.set_family** %5, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 2, i32 %29)
  store %struct.set_family* %30, %struct.set_family** %9, align 8
  %31 = load %struct.set_family*, %struct.set_family** %9, align 8
  %32 = getelementptr inbounds %struct.set_family, %struct.set_family* %31, i32 0, i32 5
  %33 = load i32*, i32** %32, align 8
  %34 = load %struct.set_family*, %struct.set_family** %9, align 8
  %35 = getelementptr inbounds %struct.set_family, %struct.set_family* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = load %struct.set_family*, %struct.set_family** %9, align 8
  %38 = getelementptr inbounds %struct.set_family, %struct.set_family* %37, i32 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %38, align 4
  %41 = mul nsw i32 %36, %39
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %33, i64 %42
  store i32* %43, i32** %11, align 8
  %44 = load i32*, i32** %11, align 8
  %45 = load i32*, i32** %6, align 8
  %46 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %44, i32* %45)
  %47 = load %struct.set_family*, %struct.set_family** %5, align 8
  %48 = getelementptr inbounds %struct.set_family, %struct.set_family* %47, i32 0, i32 5
  %49 = load i32*, i32** %48, align 8
  store i32* %49, i32** %10, align 8
  store i32 0, i32* %12, align 4
  br label %50

50:                                               ; preds = %83, %4
  %51 = load i32, i32* %12, align 4
  %52 = load %struct.set_family*, %struct.set_family** %5, align 8
  %53 = getelementptr inbounds %struct.set_family, %struct.set_family* %52, i32 0, i32 3
  %54 = load i32, i32* %53, align 4
  %55 = icmp slt i32 %51, %54
  br i1 %55, label %56, label %92

56:                                               ; preds = %50
  %57 = load i32*, i32** %10, align 8
  %58 = load i32, i32* %7, align 4
  %59 = ashr i32 %58, 5
  %60 = add nsw i32 %59, 1
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i32, i32* %57, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = load i32, i32* %7, align 4
  %65 = and i32 %64, 31
  %66 = shl i32 1, %65
  %67 = and i32 %63, %66
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %82

69:                                               ; preds = %56
  %70 = load i32, i32* %12, align 4
  %71 = and i32 %70, 31
  %72 = shl i32 1, %71
  %73 = xor i32 %72, -1
  %74 = load i32*, i32** %11, align 8
  %75 = load i32, i32* %12, align 4
  %76 = ashr i32 %75, 5
  %77 = add nsw i32 %76, 1
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i32, i32* %74, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = and i32 %80, %73
  store i32 %81, i32* %79, align 4
  br label %82

82:                                               ; preds = %69, %56
  br label %83

83:                                               ; preds = %82
  %84 = load %struct.set_family*, %struct.set_family** %5, align 8
  %85 = getelementptr inbounds %struct.set_family, %struct.set_family* %84, i32 0, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = load i32*, i32** %10, align 8
  %88 = sext i32 %86 to i64
  %89 = getelementptr inbounds i32, i32* %87, i64 %88
  store i32* %89, i32** %10, align 8
  %90 = load i32, i32* %12, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %12, align 4
  br label %50

92:                                               ; preds = %50
  %93 = load %struct.set_family*, %struct.set_family** %9, align 8
  %94 = getelementptr inbounds %struct.set_family, %struct.set_family* %93, i32 0, i32 5
  %95 = load i32*, i32** %94, align 8
  %96 = load %struct.set_family*, %struct.set_family** %9, align 8
  %97 = getelementptr inbounds %struct.set_family, %struct.set_family* %96, i32 0, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = load %struct.set_family*, %struct.set_family** %9, align 8
  %100 = getelementptr inbounds %struct.set_family, %struct.set_family* %99, i32 0, i32 3
  %101 = load i32, i32* %100, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %100, align 4
  %103 = mul nsw i32 %98, %101
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i32, i32* %95, i64 %104
  store i32* %105, i32** %11, align 8
  %106 = load i32*, i32** %11, align 8
  %107 = load i32*, i32** %6, align 8
  %108 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %106, i32* %107)
  %109 = load %struct.set_family*, %struct.set_family** %5, align 8
  %110 = getelementptr inbounds %struct.set_family, %struct.set_family* %109, i32 0, i32 5
  %111 = load i32*, i32** %110, align 8
  store i32* %111, i32** %10, align 8
  store i32 0, i32* %12, align 4
  br label %112

112:                                              ; preds = %145, %92
  %113 = load i32, i32* %12, align 4
  %114 = load %struct.set_family*, %struct.set_family** %5, align 8
  %115 = getelementptr inbounds %struct.set_family, %struct.set_family* %114, i32 0, i32 3
  %116 = load i32, i32* %115, align 4
  %117 = icmp slt i32 %113, %116
  br i1 %117, label %118, label %154

118:                                              ; preds = %112
  %119 = load i32*, i32** %10, align 8
  %120 = load i32, i32* %8, align 4
  %121 = ashr i32 %120, 5
  %122 = add nsw i32 %121, 1
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i32, i32* %119, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = load i32, i32* %8, align 4
  %127 = and i32 %126, 31
  %128 = shl i32 1, %127
  %129 = and i32 %125, %128
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %131, label %144

131:                                              ; preds = %118
  %132 = load i32, i32* %12, align 4
  %133 = and i32 %132, 31
  %134 = shl i32 1, %133
  %135 = xor i32 %134, -1
  %136 = load i32*, i32** %11, align 8
  %137 = load i32, i32* %12, align 4
  %138 = ashr i32 %137, 5
  %139 = add nsw i32 %138, 1
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i32, i32* %136, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = and i32 %142, %135
  store i32 %143, i32* %141, align 4
  br label %144

144:                                              ; preds = %131, %118
  br label %145

145:                                              ; preds = %144
  %146 = load %struct.set_family*, %struct.set_family** %5, align 8
  %147 = getelementptr inbounds %struct.set_family, %struct.set_family* %146, i32 0, i32 0
  %148 = load i32, i32* %147, align 8
  %149 = load i32*, i32** %10, align 8
  %150 = sext i32 %148 to i64
  %151 = getelementptr inbounds i32, i32* %149, i64 %150
  store i32* %151, i32** %10, align 8
  %152 = load i32, i32* %12, align 4
  %153 = add nsw i32 %152, 1
  store i32 %153, i32* %12, align 4
  br label %112

154:                                              ; preds = %112
  %155 = load %struct.set_family*, %struct.set_family** %9, align 8
  ret %struct.set_family* %155
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @opoall(%struct.PLA_t* %0, i32 %1, i32 %2, i32 %3) #0 {
  %5 = alloca %struct.PLA_t*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.set_family*, align 8
  %10 = alloca %struct.set_family*, align 8
  %11 = alloca %struct.set_family*, align 8
  %12 = alloca %struct.set_family*, align 8
  %13 = alloca %struct.set_family*, align 8
  %14 = alloca %struct.set_family*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32*, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %20 = load i32, i32* %8, align 4
  store i32 %20, i32* @opo_exact, align 4
  %21 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %22 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %21, i32 0, i32 5
  %23 = load i32*, i32** %22, align 8
  %24 = icmp ne i32* %23, null
  br i1 %24, label %25, label %38

25:                                               ; preds = %4
  %26 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %27 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %26, i32 0, i32 5
  %28 = load i32*, i32** %27, align 8
  %29 = icmp ne i32* %28, null
  br i1 %29, label %30, label %37

30:                                               ; preds = %25
  %31 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %32 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %31, i32 0, i32 5
  %33 = load i32*, i32** %32, align 8
  %34 = bitcast i32* %33 to i8*
  call void @free(i8* %34) #7
  %35 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %36 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %35, i32 0, i32 5
  store i32* null, i32** %36, align 8
  br label %37

37:                                               ; preds = %30, %25
  br label %38

38:                                               ; preds = %37, %4
  %39 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 0
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, 1023
  %43 = mul i32 32, %42
  %44 = icmp ule i32 %43, 32
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  br label %56

46:                                               ; preds = %38
  %47 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %48 = getelementptr inbounds i32, i32* %47, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, 1023
  %51 = mul i32 32, %50
  %52 = sub i32 %51, 1
  %53 = lshr i32 %52, 5
  %54 = add i32 %53, 1
  %55 = add i32 %54, 1
  br label %56

56:                                               ; preds = %46, %45
  %57 = phi i32 [ 2, %45 ], [ %55, %46 ]
  %58 = zext i32 %57 to i64
  %59 = mul i64 4, %58
  %60 = call noalias i8* @malloc(i64 %59) #7
  %61 = bitcast i8* %60 to i32*
  %62 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %63 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %61, i32* %62)
  store i32* %63, i32** %19, align 8
  %64 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %65 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %64, i32 0, i32 0
  %66 = load %struct.set_family*, %struct.set_family** %65, align 8
  %67 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %66)
  store %struct.set_family* %67, %struct.set_family** %12, align 8
  %68 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %69 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %68, i32 0, i32 1
  %70 = load %struct.set_family*, %struct.set_family** %69, align 8
  %71 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %70)
  store %struct.set_family* %71, %struct.set_family** %13, align 8
  %72 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %73 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %72, i32 0, i32 2
  %74 = load %struct.set_family*, %struct.set_family** %73, align 8
  %75 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %74)
  store %struct.set_family* %75, %struct.set_family** %14, align 8
  store i32 0, i32* %15, align 4
  br label %76

76:                                               ; preds = %230, %56
  %77 = load i32, i32* %15, align 4
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %6, align 4
  %80 = sub nsw i32 %78, %79
  %81 = add nsw i32 %80, 1
  %82 = shl i32 1, %81
  %83 = icmp slt i32 %77, %82
  br i1 %83, label %84, label %233

84:                                               ; preds = %76
  %85 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %86 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %85, i32 0, i32 0
  %87 = load %struct.set_family*, %struct.set_family** %86, align 8
  %88 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %87)
  store %struct.set_family* %88, %struct.set_family** %9, align 8
  %89 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %90 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %89, i32 0, i32 1
  %91 = load %struct.set_family*, %struct.set_family** %90, align 8
  %92 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %91)
  store %struct.set_family* %92, %struct.set_family** %10, align 8
  %93 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %94 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %93, i32 0, i32 2
  %95 = load %struct.set_family*, %struct.set_family** %94, align 8
  %96 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %95)
  store %struct.set_family* %96, %struct.set_family** %11, align 8
  %97 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 0
  %99 = load i32, i32* %98, align 4
  %100 = and i32 %99, 1023
  %101 = mul i32 32, %100
  %102 = icmp ule i32 %101, 32
  br i1 %102, label %103, label %104

103:                                              ; preds = %84
  br label %114

104:                                              ; preds = %84
  %105 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %106 = getelementptr inbounds i32, i32* %105, i64 0
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 1023
  %109 = mul i32 32, %108
  %110 = sub i32 %109, 1
  %111 = lshr i32 %110, 5
  %112 = add i32 %111, 1
  %113 = add i32 %112, 1
  br label %114

114:                                              ; preds = %104, %103
  %115 = phi i32 [ 2, %103 ], [ %113, %104 ]
  %116 = zext i32 %115 to i64
  %117 = mul i64 4, %116
  %118 = call noalias i8* @malloc(i64 %117) #7
  %119 = bitcast i8* %118 to i32*
  %120 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %121 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %119, i32* %120)
  %122 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %123 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %122, i32 0, i32 5
  store i32* %121, i32** %123, align 8
  %124 = load i32, i32* %15, align 4
  store i32 %124, i32* %18, align 4
  %125 = load i32, i32* %7, align 4
  store i32 %125, i32* %16, align 4
  br label %126

126:                                              ; preds = %159, %114
  %127 = load i32, i32* %16, align 4
  %128 = load i32, i32* %6, align 4
  %129 = icmp sge i32 %127, %128
  br i1 %129, label %130, label %162

130:                                              ; preds = %126
  %131 = load i32, i32* %18, align 4
  %132 = srem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %156

134:                                              ; preds = %130
  %135 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %136 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 18), align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i32, i32* %135, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = load i32, i32* %16, align 4
  %141 = add nsw i32 %139, %140
  store i32 %141, i32* %17, align 4
  %142 = load i32, i32* %17, align 4
  %143 = and i32 %142, 31
  %144 = shl i32 1, %143
  %145 = xor i32 %144, -1
  %146 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %147 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %146, i32 0, i32 5
  %148 = load i32*, i32** %147, align 8
  %149 = load i32, i32* %17, align 4
  %150 = ashr i32 %149, 5
  %151 = add nsw i32 %150, 1
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i32, i32* %148, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = and i32 %154, %145
  store i32 %155, i32* %153, align 4
  br label %156

156:                                              ; preds = %134, %130
  %157 = load i32, i32* %18, align 4
  %158 = sdiv i32 %157, 2
  store i32 %158, i32* %18, align 4
  br label %159

159:                                              ; preds = %156
  %160 = load i32, i32* %16, align 4
  %161 = add nsw i32 %160, -1
  store i32 %161, i32* %16, align 4
  br label %126

162:                                              ; preds = %126
  %163 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %164 = call %struct.PLA_t* @set_phase(%struct.PLA_t* %163)
  %165 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %166 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %165, i32 0, i32 5
  %167 = load i32*, i32** %166, align 8
  %168 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %167)
  %169 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8.457, i64 0, i64 0), i8* %168)
  store i32 1, i32* @summary, align 4
  %170 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  call void @minimize(%struct.PLA_t* %170)
  %171 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %172 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %171, i32 0, i32 0
  %173 = load %struct.set_family*, %struct.set_family** %172, align 8
  %174 = getelementptr inbounds %struct.set_family, %struct.set_family* %173, i32 0, i32 3
  %175 = load i32, i32* %174, align 4
  %176 = load %struct.set_family*, %struct.set_family** %12, align 8
  %177 = getelementptr inbounds %struct.set_family, %struct.set_family* %176, i32 0, i32 3
  %178 = load i32, i32* %177, align 4
  %179 = icmp slt i32 %175, %178
  br i1 %179, label %180, label %198

180:                                              ; preds = %162
  %181 = load i32*, i32** %19, align 8
  %182 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %183 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %182, i32 0, i32 5
  %184 = load i32*, i32** %183, align 8
  %185 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %181, i32* %184)
  %186 = load %struct.set_family*, %struct.set_family** %12, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %186)
  %187 = load %struct.set_family*, %struct.set_family** %13, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %187)
  %188 = load %struct.set_family*, %struct.set_family** %14, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %188)
  %189 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %190 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %189, i32 0, i32 0
  %191 = load %struct.set_family*, %struct.set_family** %190, align 8
  store %struct.set_family* %191, %struct.set_family** %12, align 8
  %192 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %193 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %192, i32 0, i32 1
  %194 = load %struct.set_family*, %struct.set_family** %193, align 8
  store %struct.set_family* %194, %struct.set_family** %13, align 8
  %195 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %196 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %195, i32 0, i32 2
  %197 = load %struct.set_family*, %struct.set_family** %196, align 8
  store %struct.set_family* %197, %struct.set_family** %14, align 8
  br label %208

198:                                              ; preds = %162
  %199 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %200 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %199, i32 0, i32 0
  %201 = load %struct.set_family*, %struct.set_family** %200, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %201)
  %202 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %203 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %202, i32 0, i32 1
  %204 = load %struct.set_family*, %struct.set_family** %203, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %204)
  %205 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %206 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %205, i32 0, i32 2
  %207 = load %struct.set_family*, %struct.set_family** %206, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %207)
  br label %208

208:                                              ; preds = %198, %180
  %209 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %210 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %209, i32 0, i32 5
  %211 = load i32*, i32** %210, align 8
  %212 = icmp ne i32* %211, null
  br i1 %212, label %213, label %220

213:                                              ; preds = %208
  %214 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %215 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %214, i32 0, i32 5
  %216 = load i32*, i32** %215, align 8
  %217 = bitcast i32* %216 to i8*
  call void @free(i8* %217) #7
  %218 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %219 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %218, i32 0, i32 5
  store i32* null, i32** %219, align 8
  br label %220

220:                                              ; preds = %213, %208
  %221 = load %struct.set_family*, %struct.set_family** %9, align 8
  %222 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %223 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %222, i32 0, i32 0
  store %struct.set_family* %221, %struct.set_family** %223, align 8
  %224 = load %struct.set_family*, %struct.set_family** %10, align 8
  %225 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %226 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %225, i32 0, i32 1
  store %struct.set_family* %224, %struct.set_family** %226, align 8
  %227 = load %struct.set_family*, %struct.set_family** %11, align 8
  %228 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %229 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %228, i32 0, i32 2
  store %struct.set_family* %227, %struct.set_family** %229, align 8
  br label %230

230:                                              ; preds = %220
  %231 = load i32, i32* %15, align 4
  %232 = add nsw i32 %231, 1
  store i32 %232, i32* %15, align 4
  br label %76

233:                                              ; preds = %76
  %234 = load i32*, i32** %19, align 8
  %235 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %236 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %235, i32 0, i32 5
  store i32* %234, i32** %236, align 8
  %237 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %238 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %237, i32 0, i32 0
  %239 = load %struct.set_family*, %struct.set_family** %238, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %239)
  %240 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %241 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %240, i32 0, i32 1
  %242 = load %struct.set_family*, %struct.set_family** %241, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %242)
  %243 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %244 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %243, i32 0, i32 2
  %245 = load %struct.set_family*, %struct.set_family** %244, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %245)
  %246 = load %struct.set_family*, %struct.set_family** %12, align 8
  %247 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %248 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %247, i32 0, i32 0
  store %struct.set_family* %246, %struct.set_family** %248, align 8
  %249 = load %struct.set_family*, %struct.set_family** %13, align 8
  %250 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %251 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %250, i32 0, i32 1
  store %struct.set_family* %249, %struct.set_family** %251, align 8
  %252 = load %struct.set_family*, %struct.set_family** %14, align 8
  %253 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %254 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %253, i32 0, i32 2
  store %struct.set_family* %252, %struct.set_family** %254, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @set_pair(%struct.PLA_t* %0) #0 {
  %2 = alloca %struct.PLA_t*, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %2, align 8
  %3 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  call void @set_pair1(%struct.PLA_t* %3, i32 1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @set_pair1(%struct.PLA_t* %0, i32 %1) #0 {
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.pair_struct*, align 8
  %18 = alloca [1000 x i8], align 16
  %19 = alloca i8**, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  store i32 %1, i32* %4, align 4
  %24 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %25 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %24, i32 0, i32 6
  %26 = load %struct.pair_struct*, %struct.pair_struct** %25, align 8
  store %struct.pair_struct* %26, %struct.pair_struct** %17, align 8
  %27 = load i32, i32* %4, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %2
  %30 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %31 = call i32 (%struct.PLA_t*, ...) bitcast (i32 (%struct.PLA_t*)* @makeup_labels to i32 (%struct.PLA_t*, ...)*)(%struct.PLA_t* %30)
  br label %32

32:                                               ; preds = %29, %2
  %33 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %34 = sext i32 %33 to i64
  %35 = mul i64 4, %34
  %36 = call noalias i8* @malloc(i64 %35) #7
  %37 = bitcast i8* %36 to i32*
  store i32* %37, i32** %7, align 8
  store i32 0, i32* %6, align 4
  br label %38

38:                                               ; preds = %47, %32
  %39 = load i32, i32* %6, align 4
  %40 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = load i32*, i32** %7, align 8
  %44 = load i32, i32* %6, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %43, i64 %45
  store i32 0, i32* %46, align 4
  br label %47

47:                                               ; preds = %42
  %48 = load i32, i32* %6, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %6, align 4
  br label %38

50:                                               ; preds = %38
  store i32 0, i32* %5, align 4
  br label %51

51:                                               ; preds = %120, %50
  %52 = load i32, i32* %5, align 4
  %53 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %54 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = icmp slt i32 %52, %55
  br i1 %56, label %57, label %123

57:                                               ; preds = %51
  %58 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %59 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %58, i32 0, i32 1
  %60 = load i32*, i32** %59, align 8
  %61 = load i32, i32* %5, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %60, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %118

66:                                               ; preds = %57
  %67 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %68 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %67, i32 0, i32 1
  %69 = load i32*, i32** %68, align 8
  %70 = load i32, i32* %5, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i32, i32* %69, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %75 = icmp sle i32 %73, %74
  br i1 %75, label %76, label %118

76:                                               ; preds = %66
  %77 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %78 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %77, i32 0, i32 2
  %79 = load i32*, i32** %78, align 8
  %80 = load i32, i32* %5, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i32, i32* %79, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %83, 0
  br i1 %84, label %85, label %118

85:                                               ; preds = %76
  %86 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %87 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %86, i32 0, i32 2
  %88 = load i32*, i32** %87, align 8
  %89 = load i32, i32* %5, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i32, i32* %88, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %94 = icmp sle i32 %92, %93
  br i1 %94, label %95, label %118

95:                                               ; preds = %85
  %96 = load i32*, i32** %7, align 8
  %97 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %98 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %97, i32 0, i32 1
  %99 = load i32*, i32** %98, align 8
  %100 = load i32, i32* %5, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, i32* %99, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = sub nsw i32 %103, 1
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i32, i32* %96, i64 %105
  store i32 1, i32* %106, align 4
  %107 = load i32*, i32** %7, align 8
  %108 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %109 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %108, i32 0, i32 2
  %110 = load i32*, i32** %109, align 8
  %111 = load i32, i32* %5, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i32, i32* %110, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = sub nsw i32 %114, 1
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i32, i32* %107, i64 %116
  store i32 1, i32* %117, align 4
  br label %119

118:                                              ; preds = %85, %76, %66, %57
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.460, i64 0, i64 0))
  br label %119

119:                                              ; preds = %118, %95
  br label %120

120:                                              ; preds = %119
  %121 = load i32, i32* %5, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %5, align 4
  br label %51

123:                                              ; preds = %51
  %124 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %125 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %124, i32 0, i32 0
  %126 = load %struct.set_family*, %struct.set_family** %125, align 8
  %127 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %128 = call %struct.set_family* @pairvar(%struct.set_family* %126, %struct.pair_struct* %127)
  %129 = load i32*, i32** %7, align 8
  %130 = call %struct.set_family* @delvar(%struct.set_family* %128, i32* %129)
  %131 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %132 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %131, i32 0, i32 0
  store %struct.set_family* %130, %struct.set_family** %132, align 8
  %133 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %134 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %133, i32 0, i32 2
  %135 = load %struct.set_family*, %struct.set_family** %134, align 8
  %136 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %137 = call %struct.set_family* @pairvar(%struct.set_family* %135, %struct.pair_struct* %136)
  %138 = load i32*, i32** %7, align 8
  %139 = call %struct.set_family* @delvar(%struct.set_family* %137, i32* %138)
  %140 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %141 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %140, i32 0, i32 2
  store %struct.set_family* %139, %struct.set_family** %141, align 8
  %142 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %143 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %142, i32 0, i32 1
  %144 = load %struct.set_family*, %struct.set_family** %143, align 8
  %145 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %146 = call %struct.set_family* @pairvar(%struct.set_family* %144, %struct.pair_struct* %145)
  %147 = load i32*, i32** %7, align 8
  %148 = call %struct.set_family* @delvar(%struct.set_family* %146, i32* %147)
  %149 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %150 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %149, i32 0, i32 1
  store %struct.set_family* %148, %struct.set_family** %150, align 8
  %151 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  store i32 %151, i32* %11, align 4
  %152 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  store i32 %152, i32* %9, align 4
  %153 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %153, i32* %10, align 4
  %154 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %155 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i32, i32* %154, i64 %156
  %158 = load i32, i32* %157, align 4
  store i32 %158, i32* %12, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %6, align 4
  br label %159

159:                                              ; preds = %173, %123
  %160 = load i32, i32* %6, align 4
  %161 = load i32, i32* %10, align 4
  %162 = icmp slt i32 %160, %161
  br i1 %162, label %163, label %176

163:                                              ; preds = %159
  %164 = load i32*, i32** %7, align 8
  %165 = load i32, i32* %6, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i32, i32* %164, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 0
  %170 = zext i1 %169 to i32
  %171 = load i32, i32* %15, align 4
  %172 = add nsw i32 %171, %170
  store i32 %172, i32* %15, align 4
  br label %173

173:                                              ; preds = %163
  %174 = load i32, i32* %6, align 4
  %175 = add nsw i32 %174, 1
  store i32 %175, i32* %6, align 4
  br label %159

176:                                              ; preds = %159
  %177 = load i32, i32* %15, align 4
  %178 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %179 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %178, i32 0, i32 0
  %180 = load i32, i32* %179, align 8
  %181 = add nsw i32 %177, %180
  store i32 %181, i32* %14, align 4
  %182 = load i32, i32* %9, align 4
  %183 = load i32, i32* %10, align 4
  %184 = sub nsw i32 %182, %183
  %185 = load i32, i32* %14, align 4
  %186 = add nsw i32 %185, %184
  store i32 %186, i32* %14, align 4
  %187 = load i32, i32* %14, align 4
  %188 = sext i32 %187 to i64
  %189 = mul i64 4, %188
  %190 = call noalias i8* @malloc(i64 %189) #7
  %191 = bitcast i8* %190 to i32*
  store i32* %191, i32** %13, align 8
  store i32 0, i32* %6, align 4
  br label %192

192:                                              ; preds = %205, %176
  %193 = load i32, i32* %6, align 4
  %194 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %195 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %194, i32 0, i32 0
  %196 = load i32, i32* %195, align 8
  %197 = icmp slt i32 %193, %196
  br i1 %197, label %198, label %208

198:                                              ; preds = %192
  %199 = load i32*, i32** %13, align 8
  %200 = load i32, i32* %15, align 4
  %201 = load i32, i32* %6, align 4
  %202 = add nsw i32 %200, %201
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i32, i32* %199, i64 %203
  store i32 4, i32* %204, align 4
  br label %205

205:                                              ; preds = %198
  %206 = load i32, i32* %6, align 4
  %207 = add nsw i32 %206, 1
  store i32 %207, i32* %6, align 4
  br label %192

208:                                              ; preds = %192
  store i32 0, i32* %6, align 4
  br label %209

209:                                              ; preds = %233, %208
  %210 = load i32, i32* %6, align 4
  %211 = load i32, i32* %9, align 4
  %212 = load i32, i32* %10, align 4
  %213 = sub nsw i32 %211, %212
  %214 = icmp slt i32 %210, %213
  br i1 %214, label %215, label %236

215:                                              ; preds = %209
  %216 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %217 = load i32, i32* %10, align 4
  %218 = load i32, i32* %6, align 4
  %219 = add nsw i32 %217, %218
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i32, i32* %216, i64 %220
  %222 = load i32, i32* %221, align 4
  %223 = load i32*, i32** %13, align 8
  %224 = load i32, i32* %15, align 4
  %225 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %226 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %225, i32 0, i32 0
  %227 = load i32, i32* %226, align 8
  %228 = add nsw i32 %224, %227
  %229 = load i32, i32* %6, align 4
  %230 = add nsw i32 %228, %229
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i32, i32* %223, i64 %231
  store i32 %222, i32* %232, align 4
  br label %233

233:                                              ; preds = %215
  %234 = load i32, i32* %6, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %6, align 4
  br label %209

236:                                              ; preds = %209
  call void (...) bitcast (void ()* @setdown_cube to void (...)*)()
  %237 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %238 = icmp ne i32* %237, null
  br i1 %238, label %239, label %242

239:                                              ; preds = %236
  %240 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %241 = bitcast i32* %240 to i8*
  call void @free(i8* %241) #7
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  br label %242

242:                                              ; preds = %239, %236
  %243 = load i32, i32* %14, align 4
  store i32 %243, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %244 = load i32, i32* %15, align 4
  store i32 %244, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %245 = load i32*, i32** %13, align 8
  store i32* %245, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  call void (...) bitcast (void ()* @cube_setup to void (...)*)()
  %246 = load i32, i32* %4, align 4
  %247 = icmp ne i32 %246, 0
  br i1 %247, label %248, label %514

248:                                              ; preds = %242
  %249 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %250 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %249, i32 0, i32 7
  %251 = load i8**, i8*** %250, align 8
  store i8** %251, i8*** %19, align 8
  %252 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %253 = sext i32 %252 to i64
  %254 = mul i64 8, %253
  %255 = call noalias i8* @malloc(i64 %254) #7
  %256 = bitcast i8* %255 to i8**
  %257 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %258 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %257, i32 0, i32 7
  store i8** %256, i8*** %258, align 8
  store i32 0, i32* %6, align 4
  br label %259

259:                                              ; preds = %376, %248
  %260 = load i32, i32* %6, align 4
  %261 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %262 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %261, i32 0, i32 0
  %263 = load i32, i32* %262, align 8
  %264 = icmp slt i32 %260, %263
  br i1 %264, label %265, label %379

265:                                              ; preds = %259
  %266 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %267 = mul nsw i32 %266, 2
  %268 = load i32, i32* %6, align 4
  %269 = mul nsw i32 %268, 4
  %270 = add nsw i32 %267, %269
  store i32 %270, i32* %8, align 4
  %271 = load i8**, i8*** %19, align 8
  %272 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %273 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %272, i32 0, i32 1
  %274 = load i32*, i32** %273, align 8
  %275 = load i32, i32* %6, align 4
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds i32, i32* %274, i64 %276
  %278 = load i32, i32* %277, align 4
  %279 = sub nsw i32 %278, 1
  %280 = mul nsw i32 %279, 2
  %281 = add nsw i32 %280, 1
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds i8*, i8** %271, i64 %282
  %284 = load i8*, i8** %283, align 8
  store i8* %284, i8** %20, align 8
  %285 = load i8**, i8*** %19, align 8
  %286 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %287 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %286, i32 0, i32 2
  %288 = load i32*, i32** %287, align 8
  %289 = load i32, i32* %6, align 4
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds i32, i32* %288, i64 %290
  %292 = load i32, i32* %291, align 4
  %293 = sub nsw i32 %292, 1
  %294 = mul nsw i32 %293, 2
  %295 = add nsw i32 %294, 1
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds i8*, i8** %285, i64 %296
  %298 = load i8*, i8** %297, align 8
  store i8* %298, i8** %22, align 8
  %299 = load i8**, i8*** %19, align 8
  %300 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %301 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %300, i32 0, i32 1
  %302 = load i32*, i32** %301, align 8
  %303 = load i32, i32* %6, align 4
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds i32, i32* %302, i64 %304
  %306 = load i32, i32* %305, align 4
  %307 = sub nsw i32 %306, 1
  %308 = mul nsw i32 %307, 2
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds i8*, i8** %299, i64 %309
  %311 = load i8*, i8** %310, align 8
  store i8* %311, i8** %21, align 8
  %312 = load i8**, i8*** %19, align 8
  %313 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %314 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %313, i32 0, i32 2
  %315 = load i32*, i32** %314, align 8
  %316 = load i32, i32* %6, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds i32, i32* %315, i64 %317
  %319 = load i32, i32* %318, align 4
  %320 = sub nsw i32 %319, 1
  %321 = mul nsw i32 %320, 2
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds i8*, i8** %312, i64 %322
  %324 = load i8*, i8** %323, align 8
  store i8* %324, i8** %23, align 8
  %325 = getelementptr inbounds [1000 x i8], [1000 x i8]* %18, i64 0, i64 0
  %326 = load i8*, i8** %21, align 8
  %327 = load i8*, i8** %23, align 8
  %328 = call i32 (i8*, i8*, ...) @sprintf(i8* %325, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.461, i64 0, i64 0), i8* %326, i8* %327) #7
  %329 = getelementptr inbounds [1000 x i8], [1000 x i8]* %18, i64 0, i64 0
  %330 = call i8* @util_strsav(i8* %329)
  %331 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %332 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %331, i32 0, i32 7
  %333 = load i8**, i8*** %332, align 8
  %334 = load i32, i32* %8, align 4
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds i8*, i8** %333, i64 %335
  store i8* %330, i8** %336, align 8
  %337 = getelementptr inbounds [1000 x i8], [1000 x i8]* %18, i64 0, i64 0
  %338 = load i8*, i8** %21, align 8
  %339 = load i8*, i8** %22, align 8
  %340 = call i32 (i8*, i8*, ...) @sprintf(i8* %337, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.461, i64 0, i64 0), i8* %338, i8* %339) #7
  %341 = getelementptr inbounds [1000 x i8], [1000 x i8]* %18, i64 0, i64 0
  %342 = call i8* @util_strsav(i8* %341)
  %343 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %344 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %343, i32 0, i32 7
  %345 = load i8**, i8*** %344, align 8
  %346 = load i32, i32* %8, align 4
  %347 = add nsw i32 %346, 1
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds i8*, i8** %345, i64 %348
  store i8* %342, i8** %349, align 8
  %350 = getelementptr inbounds [1000 x i8], [1000 x i8]* %18, i64 0, i64 0
  %351 = load i8*, i8** %20, align 8
  %352 = load i8*, i8** %23, align 8
  %353 = call i32 (i8*, i8*, ...) @sprintf(i8* %350, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.461, i64 0, i64 0), i8* %351, i8* %352) #7
  %354 = getelementptr inbounds [1000 x i8], [1000 x i8]* %18, i64 0, i64 0
  %355 = call i8* @util_strsav(i8* %354)
  %356 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %357 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %356, i32 0, i32 7
  %358 = load i8**, i8*** %357, align 8
  %359 = load i32, i32* %8, align 4
  %360 = add nsw i32 %359, 2
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds i8*, i8** %358, i64 %361
  store i8* %355, i8** %362, align 8
  %363 = getelementptr inbounds [1000 x i8], [1000 x i8]* %18, i64 0, i64 0
  %364 = load i8*, i8** %20, align 8
  %365 = load i8*, i8** %22, align 8
  %366 = call i32 (i8*, i8*, ...) @sprintf(i8* %363, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.461, i64 0, i64 0), i8* %364, i8* %365) #7
  %367 = getelementptr inbounds [1000 x i8], [1000 x i8]* %18, i64 0, i64 0
  %368 = call i8* @util_strsav(i8* %367)
  %369 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %370 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %369, i32 0, i32 7
  %371 = load i8**, i8*** %370, align 8
  %372 = load i32, i32* %8, align 4
  %373 = add nsw i32 %372, 3
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds i8*, i8** %371, i64 %374
  store i8* %368, i8** %375, align 8
  br label %376

376:                                              ; preds = %265
  %377 = load i32, i32* %6, align 4
  %378 = add nsw i32 %377, 1
  store i32 %378, i32* %6, align 4
  br label %259

379:                                              ; preds = %259
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %380

380:                                              ; preds = %434, %379
  %381 = load i32, i32* %6, align 4
  %382 = load i32, i32* %10, align 4
  %383 = icmp slt i32 %381, %382
  br i1 %383, label %384, label %437

384:                                              ; preds = %380
  %385 = load i32*, i32** %7, align 8
  %386 = load i32, i32* %6, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds i32, i32* %385, i64 %387
  %389 = load i32, i32* %388, align 4
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %433

391:                                              ; preds = %384
  %392 = load i8**, i8*** %19, align 8
  %393 = load i32, i32* %6, align 4
  %394 = mul nsw i32 2, %393
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds i8*, i8** %392, i64 %395
  %397 = load i8*, i8** %396, align 8
  %398 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %399 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %398, i32 0, i32 7
  %400 = load i8**, i8*** %399, align 8
  %401 = load i32, i32* %5, align 4
  %402 = mul nsw i32 2, %401
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds i8*, i8** %400, i64 %403
  store i8* %397, i8** %404, align 8
  %405 = load i8**, i8*** %19, align 8
  %406 = load i32, i32* %6, align 4
  %407 = mul nsw i32 2, %406
  %408 = add nsw i32 %407, 1
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds i8*, i8** %405, i64 %409
  %411 = load i8*, i8** %410, align 8
  %412 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %413 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %412, i32 0, i32 7
  %414 = load i8**, i8*** %413, align 8
  %415 = load i32, i32* %5, align 4
  %416 = mul nsw i32 2, %415
  %417 = add nsw i32 %416, 1
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds i8*, i8** %414, i64 %418
  store i8* %411, i8** %419, align 8
  %420 = load i8**, i8*** %19, align 8
  %421 = load i32, i32* %6, align 4
  %422 = mul nsw i32 2, %421
  %423 = add nsw i32 %422, 1
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds i8*, i8** %420, i64 %424
  store i8* null, i8** %425, align 8
  %426 = load i8**, i8*** %19, align 8
  %427 = load i32, i32* %6, align 4
  %428 = mul nsw i32 2, %427
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds i8*, i8** %426, i64 %429
  store i8* null, i8** %430, align 8
  %431 = load i32, i32* %5, align 4
  %432 = add nsw i32 %431, 1
  store i32 %432, i32* %5, align 4
  br label %433

433:                                              ; preds = %391, %384
  br label %434

434:                                              ; preds = %433
  %435 = load i32, i32* %6, align 4
  %436 = add nsw i32 %435, 1
  store i32 %436, i32* %6, align 4
  br label %380

437:                                              ; preds = %380
  %438 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %439 = mul nsw i32 %438, 2
  %440 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %441 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %440, i32 0, i32 0
  %442 = load i32, i32* %441, align 8
  %443 = mul nsw i32 %442, 4
  %444 = add nsw i32 %439, %443
  store i32 %444, i32* %16, align 4
  %445 = load i32, i32* %12, align 4
  store i32 %445, i32* %5, align 4
  br label %446

446:                                              ; preds = %470, %437
  %447 = load i32, i32* %5, align 4
  %448 = load i32, i32* %11, align 4
  %449 = icmp slt i32 %447, %448
  br i1 %449, label %450, label %473

450:                                              ; preds = %446
  %451 = load i8**, i8*** %19, align 8
  %452 = load i32, i32* %5, align 4
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds i8*, i8** %451, i64 %453
  %455 = load i8*, i8** %454, align 8
  %456 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %457 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %456, i32 0, i32 7
  %458 = load i8**, i8*** %457, align 8
  %459 = load i32, i32* %16, align 4
  %460 = load i32, i32* %5, align 4
  %461 = add nsw i32 %459, %460
  %462 = load i32, i32* %12, align 4
  %463 = sub nsw i32 %461, %462
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds i8*, i8** %458, i64 %464
  store i8* %455, i8** %465, align 8
  %466 = load i8**, i8*** %19, align 8
  %467 = load i32, i32* %5, align 4
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds i8*, i8** %466, i64 %468
  store i8* null, i8** %469, align 8
  br label %470

470:                                              ; preds = %450
  %471 = load i32, i32* %5, align 4
  %472 = add nsw i32 %471, 1
  store i32 %472, i32* %5, align 4
  br label %446

473:                                              ; preds = %446
  store i32 0, i32* %5, align 4
  br label %474

474:                                              ; preds = %504, %473
  %475 = load i32, i32* %5, align 4
  %476 = load i32, i32* %11, align 4
  %477 = icmp slt i32 %475, %476
  br i1 %477, label %478, label %507

478:                                              ; preds = %474
  %479 = load i8**, i8*** %19, align 8
  %480 = load i32, i32* %5, align 4
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds i8*, i8** %479, i64 %481
  %483 = load i8*, i8** %482, align 8
  %484 = icmp ne i8* %483, null
  br i1 %484, label %485, label %503

485:                                              ; preds = %478
  %486 = load i8**, i8*** %19, align 8
  %487 = load i32, i32* %5, align 4
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds i8*, i8** %486, i64 %488
  %490 = load i8*, i8** %489, align 8
  %491 = icmp ne i8* %490, null
  br i1 %491, label %492, label %502

492:                                              ; preds = %485
  %493 = load i8**, i8*** %19, align 8
  %494 = load i32, i32* %5, align 4
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds i8*, i8** %493, i64 %495
  %497 = load i8*, i8** %496, align 8
  call void @free(i8* %497) #7
  %498 = load i8**, i8*** %19, align 8
  %499 = load i32, i32* %5, align 4
  %500 = sext i32 %499 to i64
  %501 = getelementptr inbounds i8*, i8** %498, i64 %500
  store i8* null, i8** %501, align 8
  br label %502

502:                                              ; preds = %492, %485
  br label %503

503:                                              ; preds = %502, %478
  br label %504

504:                                              ; preds = %503
  %505 = load i32, i32* %5, align 4
  %506 = add nsw i32 %505, 1
  store i32 %506, i32* %5, align 4
  br label %474

507:                                              ; preds = %474
  %508 = load i8**, i8*** %19, align 8
  %509 = icmp ne i8** %508, null
  br i1 %509, label %510, label %513

510:                                              ; preds = %507
  %511 = load i8**, i8*** %19, align 8
  %512 = bitcast i8** %511 to i8*
  call void @free(i8* %512) #7
  store i8** null, i8*** %19, align 8
  br label %513

513:                                              ; preds = %510, %507
  br label %514

514:                                              ; preds = %513, %242
  store i32 0, i32* %6, align 4
  br label %515

515:                                              ; preds = %528, %514
  %516 = load i32, i32* %6, align 4
  %517 = load %struct.pair_struct*, %struct.pair_struct** %17, align 8
  %518 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %517, i32 0, i32 0
  %519 = load i32, i32* %518, align 8
  %520 = icmp slt i32 %516, %519
  br i1 %520, label %521, label %531

521:                                              ; preds = %515
  %522 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 16), align 8
  %523 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %524 = load i32, i32* %6, align 4
  %525 = add nsw i32 %523, %524
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds i32, i32* %522, i64 %526
  store i32 0, i32* %527, align 4
  br label %528

528:                                              ; preds = %521
  %529 = load i32, i32* %6, align 4
  %530 = add nsw i32 %529, 1
  store i32 %530, i32* %6, align 4
  br label %515

531:                                              ; preds = %515
  %532 = load i32*, i32** %7, align 8
  %533 = icmp ne i32* %532, null
  br i1 %533, label %534, label %537

534:                                              ; preds = %531
  %535 = load i32*, i32** %7, align 8
  %536 = bitcast i32* %535 to i8*
  call void @free(i8* %536) #7
  store i32* null, i32** %7, align 8
  br label %537

537:                                              ; preds = %534, %531
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @pairvar(%struct.set_family* %0, %struct.pair_struct* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.pair_struct*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.pair_struct* %1, %struct.pair_struct** %4, align 8
  %14 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %15 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %16 = sub nsw i32 %15, 1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %14, i64 %17
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %12, align 4
  %20 = load %struct.set_family*, %struct.set_family** %3, align 8
  %21 = load i32, i32* %12, align 4
  %22 = load %struct.pair_struct*, %struct.pair_struct** %4, align 8
  %23 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = mul nsw i32 -4, %24
  %26 = call %struct.set_family* (%struct.set_family*, i32, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32, i32)* @sf_delcol to %struct.set_family* (%struct.set_family*, i32, i32, ...)*)(%struct.set_family* %20, i32 %21, i32 %25)
  store %struct.set_family* %26, %struct.set_family** %3, align 8
  %27 = load %struct.set_family*, %struct.set_family** %3, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 5
  %29 = load i32*, i32** %28, align 8
  store i32* %29, i32** %6, align 8
  %30 = load i32*, i32** %6, align 8
  %31 = load %struct.set_family*, %struct.set_family** %3, align 8
  %32 = getelementptr inbounds %struct.set_family, %struct.set_family* %31, i32 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = load %struct.set_family*, %struct.set_family** %3, align 8
  %35 = getelementptr inbounds %struct.set_family, %struct.set_family* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = mul nsw i32 %33, %36
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i32, i32* %30, i64 %38
  store i32* %39, i32** %5, align 8
  br label %40

40:                                               ; preds = %204, %2
  %41 = load i32*, i32** %6, align 8
  %42 = load i32*, i32** %5, align 8
  %43 = icmp ult i32* %41, %42
  br i1 %43, label %44, label %211

44:                                               ; preds = %40
  store i32 0, i32* %13, align 4
  br label %45

45:                                               ; preds = %200, %44
  %46 = load i32, i32* %13, align 4
  %47 = load %struct.pair_struct*, %struct.pair_struct** %4, align 8
  %48 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %47, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = icmp slt i32 %46, %49
  br i1 %50, label %51, label %203

51:                                               ; preds = %45
  %52 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %53 = load %struct.pair_struct*, %struct.pair_struct** %4, align 8
  %54 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %53, i32 0, i32 1
  %55 = load i32*, i32** %54, align 8
  %56 = load i32, i32* %13, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %55, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = sub nsw i32 %59, 1
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i32, i32* %52, i64 %61
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %8, align 4
  %64 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %65 = load %struct.pair_struct*, %struct.pair_struct** %4, align 8
  %66 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %65, i32 0, i32 2
  %67 = load i32*, i32** %66, align 8
  %68 = load i32, i32* %13, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %67, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = sub nsw i32 %71, 1
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i32, i32* %64, i64 %73
  %75 = load i32, i32* %74, align 4
  store i32 %75, i32* %9, align 4
  %76 = load i32*, i32** %6, align 8
  %77 = load i32, i32* %9, align 4
  %78 = add nsw i32 %77, 1
  %79 = ashr i32 %78, 5
  %80 = add nsw i32 %79, 1
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i32, i32* %76, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = load i32, i32* %9, align 4
  %85 = add nsw i32 %84, 1
  %86 = and i32 %85, 31
  %87 = shl i32 1, %86
  %88 = and i32 %83, %87
  store i32 %88, i32* %10, align 4
  %89 = load i32*, i32** %6, align 8
  %90 = load i32, i32* %9, align 4
  %91 = ashr i32 %90, 5
  %92 = add nsw i32 %91, 1
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i32, i32* %89, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = load i32, i32* %9, align 4
  %97 = and i32 %96, 31
  %98 = shl i32 1, %97
  %99 = and i32 %95, %98
  store i32 %99, i32* %11, align 4
  %100 = load i32, i32* %12, align 4
  %101 = load i32, i32* %13, align 4
  %102 = mul nsw i32 %101, 4
  %103 = add nsw i32 %100, %102
  store i32 %103, i32* %7, align 4
  %104 = load i32*, i32** %6, align 8
  %105 = load i32, i32* %8, align 4
  %106 = ashr i32 %105, 5
  %107 = add nsw i32 %106, 1
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i32, i32* %104, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = load i32, i32* %8, align 4
  %112 = and i32 %111, 31
  %113 = shl i32 1, %112
  %114 = and i32 %110, %113
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %116, label %151

116:                                              ; preds = %51
  %117 = load i32, i32* %11, align 4
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %133

119:                                              ; preds = %116
  %120 = load i32, i32* %7, align 4
  %121 = add nsw i32 %120, 3
  %122 = and i32 %121, 31
  %123 = shl i32 1, %122
  %124 = load i32*, i32** %6, align 8
  %125 = load i32, i32* %7, align 4
  %126 = add nsw i32 %125, 3
  %127 = ashr i32 %126, 5
  %128 = add nsw i32 %127, 1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32, i32* %124, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = or i32 %131, %123
  store i32 %132, i32* %130, align 4
  br label %133

133:                                              ; preds = %119, %116
  %134 = load i32, i32* %10, align 4
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %136, label %150

136:                                              ; preds = %133
  %137 = load i32, i32* %7, align 4
  %138 = add nsw i32 %137, 2
  %139 = and i32 %138, 31
  %140 = shl i32 1, %139
  %141 = load i32*, i32** %6, align 8
  %142 = load i32, i32* %7, align 4
  %143 = add nsw i32 %142, 2
  %144 = ashr i32 %143, 5
  %145 = add nsw i32 %144, 1
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i32, i32* %141, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = or i32 %148, %140
  store i32 %149, i32* %147, align 4
  br label %150

150:                                              ; preds = %136, %133
  br label %151

151:                                              ; preds = %150, %51
  %152 = load i32*, i32** %6, align 8
  %153 = load i32, i32* %8, align 4
  %154 = add nsw i32 %153, 1
  %155 = ashr i32 %154, 5
  %156 = add nsw i32 %155, 1
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i32, i32* %152, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = load i32, i32* %8, align 4
  %161 = add nsw i32 %160, 1
  %162 = and i32 %161, 31
  %163 = shl i32 1, %162
  %164 = and i32 %159, %163
  %165 = icmp ne i32 %164, 0
  br i1 %165, label %166, label %199

166:                                              ; preds = %151
  %167 = load i32, i32* %11, align 4
  %168 = icmp ne i32 %167, 0
  br i1 %168, label %169, label %183

169:                                              ; preds = %166
  %170 = load i32, i32* %7, align 4
  %171 = add nsw i32 %170, 1
  %172 = and i32 %171, 31
  %173 = shl i32 1, %172
  %174 = load i32*, i32** %6, align 8
  %175 = load i32, i32* %7, align 4
  %176 = add nsw i32 %175, 1
  %177 = ashr i32 %176, 5
  %178 = add nsw i32 %177, 1
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i32, i32* %174, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = or i32 %181, %173
  store i32 %182, i32* %180, align 4
  br label %183

183:                                              ; preds = %169, %166
  %184 = load i32, i32* %10, align 4
  %185 = icmp ne i32 %184, 0
  br i1 %185, label %186, label %198

186:                                              ; preds = %183
  %187 = load i32, i32* %7, align 4
  %188 = and i32 %187, 31
  %189 = shl i32 1, %188
  %190 = load i32*, i32** %6, align 8
  %191 = load i32, i32* %7, align 4
  %192 = ashr i32 %191, 5
  %193 = add nsw i32 %192, 1
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds i32, i32* %190, i64 %194
  %196 = load i32, i32* %195, align 4
  %197 = or i32 %196, %189
  store i32 %197, i32* %195, align 4
  br label %198

198:                                              ; preds = %186, %183
  br label %199

199:                                              ; preds = %198, %151
  br label %200

200:                                              ; preds = %199
  %201 = load i32, i32* %13, align 4
  %202 = add nsw i32 %201, 1
  store i32 %202, i32* %13, align 4
  br label %45

203:                                              ; preds = %45
  br label %204

204:                                              ; preds = %203
  %205 = load %struct.set_family*, %struct.set_family** %3, align 8
  %206 = getelementptr inbounds %struct.set_family, %struct.set_family* %205, i32 0, i32 0
  %207 = load i32, i32* %206, align 8
  %208 = load i32*, i32** %6, align 8
  %209 = sext i32 %207 to i64
  %210 = getelementptr inbounds i32, i32* %208, i64 %209
  store i32* %210, i32** %6, align 8
  br label %40

211:                                              ; preds = %40
  %212 = load %struct.set_family*, %struct.set_family** %3, align 8
  ret %struct.set_family* %212
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @delvar(%struct.set_family* %0, i32* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32* %1, i32** %4, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %5, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  br label %10

10:                                               ; preds = %59, %2
  %11 = load i32, i32* %8, align 4
  %12 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %13 = icmp slt i32 %11, %12
  br i1 %13, label %14, label %62

14:                                               ; preds = %10
  %15 = load i32*, i32** %4, align 8
  %16 = load i32, i32* %8, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %15, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %44

21:                                               ; preds = %14
  %22 = load i32, i32* %5, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %21
  %25 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %26 = load i32, i32* %8, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %25, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = load i32, i32* %7, align 4
  %31 = add nsw i32 %30, %29
  store i32 %31, i32* %7, align 4
  br label %43

32:                                               ; preds = %21
  store i32 1, i32* %5, align 4
  %33 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %34 = load i32, i32* %8, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %33, i64 %35
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %6, align 4
  %38 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %39 = load i32, i32* %8, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32, i32* %38, i64 %40
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %7, align 4
  br label %43

43:                                               ; preds = %32, %24
  br label %58

44:                                               ; preds = %14
  %45 = load i32, i32* %5, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %44
  %48 = load %struct.set_family*, %struct.set_family** %3, align 8
  %49 = load i32, i32* %6, align 4
  %50 = load i32, i32* %9, align 4
  %51 = sub nsw i32 %49, %50
  %52 = load i32, i32* %7, align 4
  %53 = call %struct.set_family* (%struct.set_family*, i32, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32, i32)* @sf_delcol to %struct.set_family* (%struct.set_family*, i32, i32, ...)*)(%struct.set_family* %48, i32 %51, i32 %52)
  store %struct.set_family* %53, %struct.set_family** %3, align 8
  store i32 0, i32* %5, align 4
  %54 = load i32, i32* %7, align 4
  %55 = load i32, i32* %9, align 4
  %56 = add nsw i32 %55, %54
  store i32 %56, i32* %9, align 4
  br label %57

57:                                               ; preds = %47, %44
  br label %58

58:                                               ; preds = %57, %43
  br label %59

59:                                               ; preds = %58
  %60 = load i32, i32* %8, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %8, align 4
  br label %10

62:                                               ; preds = %10
  %63 = load i32, i32* %5, align 4
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %72

65:                                               ; preds = %62
  %66 = load %struct.set_family*, %struct.set_family** %3, align 8
  %67 = load i32, i32* %6, align 4
  %68 = load i32, i32* %9, align 4
  %69 = sub nsw i32 %67, %68
  %70 = load i32, i32* %7, align 4
  %71 = call %struct.set_family* (%struct.set_family*, i32, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32, i32)* @sf_delcol to %struct.set_family* (%struct.set_family*, i32, i32, ...)*)(%struct.set_family* %66, i32 %69, i32 %70)
  store %struct.set_family* %71, %struct.set_family** %3, align 8
  br label %72

72:                                               ; preds = %65, %62
  %73 = load %struct.set_family*, %struct.set_family** %3, align 8
  ret %struct.set_family* %73
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @find_optimal_pairing(%struct.PLA_t* %0, i32 %1) #0 {
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32**, align 8
  %8 = alloca i64, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  store i32 %1, i32* %4, align 4
  %9 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %10 = load i32, i32* %4, align 4
  %11 = call i32** @find_pairing_cost(%struct.PLA_t* %9, i32 %10)
  store i32** %11, i32*** %7, align 8
  %12 = load i32, i32* @summary, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %61

14:                                               ; preds = %2
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.464, i64 0, i64 0))
  store i32 0, i32* %5, align 4
  br label %16

16:                                               ; preds = %24, %14
  %17 = load i32, i32* %5, align 4
  %18 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %20, label %27

20:                                               ; preds = %16
  %21 = load i32, i32* %5, align 4
  %22 = add nsw i32 %21, 1
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.465, i64 0, i64 0), i32 %22)
  br label %24

24:                                               ; preds = %20
  %25 = load i32, i32* %5, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %5, align 4
  br label %16

27:                                               ; preds = %16
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.466, i64 0, i64 0))
  store i32 0, i32* %5, align 4
  br label %29

29:                                               ; preds = %57, %27
  %30 = load i32, i32* %5, align 4
  %31 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %32 = icmp slt i32 %30, %31
  br i1 %32, label %33, label %60

33:                                               ; preds = %29
  %34 = load i32, i32* %5, align 4
  %35 = add nsw i32 %34, 1
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.465, i64 0, i64 0), i32 %35)
  store i32 0, i32* %6, align 4
  br label %37

37:                                               ; preds = %52, %33
  %38 = load i32, i32* %6, align 4
  %39 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %40 = icmp slt i32 %38, %39
  br i1 %40, label %41, label %55

41:                                               ; preds = %37
  %42 = load i32**, i32*** %7, align 8
  %43 = load i32, i32* %5, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i32*, i32** %42, i64 %44
  %46 = load i32*, i32** %45, align 8
  %47 = load i32, i32* %6, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, i32* %46, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.465, i64 0, i64 0), i32 %50)
  br label %52

52:                                               ; preds = %41
  %53 = load i32, i32* %6, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %6, align 4
  br label %37

55:                                               ; preds = %37
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.466, i64 0, i64 0))
  br label %57

57:                                               ; preds = %55
  %58 = load i32, i32* %5, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %5, align 4
  br label %29

60:                                               ; preds = %29
  br label %61

61:                                               ; preds = %60, %2
  %62 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %63 = icmp sle i32 %62, 14
  br i1 %63, label %64, label %69

64:                                               ; preds = %61
  %65 = load i32**, i32*** %7, align 8
  %66 = call %struct.pair_struct* @pair_best_cost(i32** %65)
  %67 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %68 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %67, i32 0, i32 6
  store %struct.pair_struct* %66, %struct.pair_struct** %68, align 8
  br label %74

69:                                               ; preds = %61
  %70 = load i32**, i32*** %7, align 8
  %71 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %72 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %71, i32 0, i32 6
  %73 = call i32 @greedy_best_cost(i32** %70, %struct.pair_struct** %72)
  br label %74

74:                                               ; preds = %69, %64
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.467, i64 0, i64 0))
  %76 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %77 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %76, i32 0, i32 6
  %78 = load %struct.pair_struct*, %struct.pair_struct** %77, align 8
  %79 = call i32 @print_pair(%struct.pair_struct* %78)
  store i32 0, i32* %5, align 4
  br label %80

80:                                               ; preds = %103, %74
  %81 = load i32, i32* %5, align 4
  %82 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %83 = icmp slt i32 %81, %82
  br i1 %83, label %84, label %106

84:                                               ; preds = %80
  %85 = load i32**, i32*** %7, align 8
  %86 = load i32, i32* %5, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i32*, i32** %85, i64 %87
  %89 = load i32*, i32** %88, align 8
  %90 = icmp ne i32* %89, null
  br i1 %90, label %91, label %102

91:                                               ; preds = %84
  %92 = load i32**, i32*** %7, align 8
  %93 = load i32, i32* %5, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i32*, i32** %92, i64 %94
  %96 = load i32*, i32** %95, align 8
  %97 = bitcast i32* %96 to i8*
  call void @free(i8* %97) #7
  %98 = load i32**, i32*** %7, align 8
  %99 = load i32, i32* %5, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i32*, i32** %98, i64 %100
  store i32* null, i32** %101, align 8
  br label %102

102:                                              ; preds = %91, %84
  br label %103

103:                                              ; preds = %102
  %104 = load i32, i32* %5, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %5, align 4
  br label %80

106:                                              ; preds = %80
  %107 = load i32**, i32*** %7, align 8
  %108 = icmp ne i32** %107, null
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = load i32**, i32*** %7, align 8
  %111 = bitcast i32** %110 to i8*
  call void @free(i8* %111) #7
  store i32** null, i32*** %7, align 8
  br label %112

112:                                              ; preds = %109, %106
  %113 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  call void @set_pair(%struct.PLA_t* %113)
  %114 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %114, i64* %8, align 8
  %115 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %116 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %115, i32 0, i32 0
  %117 = load %struct.set_family*, %struct.set_family** %116, align 8
  %118 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %119 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %118, i32 0, i32 1
  %120 = load %struct.set_family*, %struct.set_family** %119, align 8
  %121 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %122 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %121, i32 0, i32 2
  %123 = load %struct.set_family*, %struct.set_family** %122, align 8
  %124 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @espresso to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %117, %struct.set_family* %120, %struct.set_family* %123)
  %125 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %126 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %125, i32 0, i32 0
  store %struct.set_family* %124, %struct.set_family** %126, align 8
  %127 = load i32, i32* @summary, align 4
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %136

129:                                              ; preds = %112
  %130 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %131 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %130, i32 0, i32 0
  %132 = load %struct.set_family*, %struct.set_family** %131, align 8
  %133 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %134 = load i64, i64* %8, align 8
  %135 = sub nsw i64 %133, %134
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %132, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.468, i64 0, i64 0), i64 %135)
  br label %136

136:                                              ; preds = %129, %112
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32** @find_pairing_cost(%struct.PLA_t* %0, i32 %1) #0 {
  %3 = alloca %struct.PLA_t*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct.set_family*, align 8
  %15 = alloca %struct.set_family*, align 8
  %16 = alloca %struct.set_family*, align 8
  %17 = alloca %struct.set_family*, align 8
  %18 = alloca i32*, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %3, align 8
  store i32 %1, i32* %4, align 4
  %19 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %20 = sext i32 %19 to i64
  %21 = mul i64 8, %20
  %22 = call noalias i8* @malloc(i64 %21) #7
  %23 = bitcast i8* %22 to i32**
  store i32** %23, i32*** %7, align 8
  store i32 0, i32* %8, align 4
  br label %24

24:                                               ; preds = %38, %2
  %25 = load i32, i32* %8, align 4
  %26 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %27 = icmp slt i32 %25, %26
  br i1 %27, label %28, label %41

28:                                               ; preds = %24
  %29 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %30 = sext i32 %29 to i64
  %31 = mul i64 4, %30
  %32 = call noalias i8* @malloc(i64 %31) #7
  %33 = bitcast i8* %32 to i32*
  %34 = load i32**, i32*** %7, align 8
  %35 = load i32, i32* %8, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i32*, i32** %34, i64 %36
  store i32* %33, i32** %37, align 8
  br label %38

38:                                               ; preds = %28
  %39 = load i32, i32* %8, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %8, align 4
  br label %24

41:                                               ; preds = %24
  store i32 0, i32* %8, align 4
  br label %42

42:                                               ; preds = %64, %41
  %43 = load i32, i32* %8, align 4
  %44 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %45 = icmp slt i32 %43, %44
  br i1 %45, label %46, label %67

46:                                               ; preds = %42
  store i32 0, i32* %9, align 4
  br label %47

47:                                               ; preds = %60, %46
  %48 = load i32, i32* %9, align 4
  %49 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %50 = icmp slt i32 %48, %49
  br i1 %50, label %51, label %63

51:                                               ; preds = %47
  %52 = load i32**, i32*** %7, align 8
  %53 = load i32, i32* %8, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32*, i32** %52, i64 %54
  %56 = load i32*, i32** %55, align 8
  %57 = load i32, i32* %9, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %56, i64 %58
  store i32 0, i32* %59, align 4
  br label %60

60:                                               ; preds = %51
  %61 = load i32, i32* %9, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %9, align 4
  br label %47

63:                                               ; preds = %47
  br label %64

64:                                               ; preds = %63
  %65 = load i32, i32* %8, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %8, align 4
  br label %42

67:                                               ; preds = %42
  %68 = call %struct.pair_struct* @pair_new(i32 1)
  %69 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %70 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %69, i32 0, i32 6
  store %struct.pair_struct* %68, %struct.pair_struct** %70, align 8
  %71 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %72 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %71, i32 0, i32 6
  %73 = load %struct.pair_struct*, %struct.pair_struct** %72, align 8
  %74 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %73, i32 0, i32 0
  store i32 1, i32* %74, align 8
  store i32 0, i32* %5, align 4
  br label %75

75:                                               ; preds = %325, %67
  %76 = load i32, i32* %5, align 4
  %77 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %78 = sub nsw i32 %77, 1
  %79 = icmp slt i32 %76, %78
  br i1 %79, label %80, label %328

80:                                               ; preds = %75
  %81 = load i32, i32* %5, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %6, align 4
  br label %83

83:                                               ; preds = %321, %80
  %84 = load i32, i32* %6, align 4
  %85 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %86 = icmp slt i32 %84, %85
  br i1 %86, label %87, label %324

87:                                               ; preds = %83
  %88 = load i32, i32* %4, align 4
  %89 = icmp sgt i32 %88, 0
  br i1 %89, label %90, label %145

90:                                               ; preds = %87
  %91 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %92 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %91, i32 0, i32 0
  %93 = load %struct.set_family*, %struct.set_family** %92, align 8
  %94 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %93)
  store %struct.set_family* %94, %struct.set_family** %15, align 8
  %95 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %96 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %95, i32 0, i32 1
  %97 = load %struct.set_family*, %struct.set_family** %96, align 8
  %98 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %97)
  store %struct.set_family* %98, %struct.set_family** %16, align 8
  %99 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %100 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %99, i32 0, i32 2
  %101 = load %struct.set_family*, %struct.set_family** %100, align 8
  %102 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %101)
  store %struct.set_family* %102, %struct.set_family** %17, align 8
  %103 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %103, i32* %10, align 4
  %104 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  store i32 %104, i32* %11, align 4
  %105 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %106 = sext i32 %105 to i64
  %107 = mul i64 4, %106
  %108 = call noalias i8* @malloc(i64 %107) #7
  %109 = bitcast i8* %108 to i32*
  store i32* %109, i32** %12, align 8
  store i32 0, i32* %8, align 4
  br label %110

110:                                              ; preds = %124, %90
  %111 = load i32, i32* %8, align 4
  %112 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %113 = icmp slt i32 %111, %112
  br i1 %113, label %114, label %127

114:                                              ; preds = %110
  %115 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %116 = load i32, i32* %8, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, i32* %115, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = load i32*, i32** %12, align 8
  %121 = load i32, i32* %8, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i32, i32* %120, i64 %122
  store i32 %119, i32* %123, align 4
  br label %124

124:                                              ; preds = %114
  %125 = load i32, i32* %8, align 4
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* %8, align 4
  br label %110

127:                                              ; preds = %110
  %128 = load i32, i32* %5, align 4
  %129 = add nsw i32 %128, 1
  %130 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %131 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %130, i32 0, i32 6
  %132 = load %struct.pair_struct*, %struct.pair_struct** %131, align 8
  %133 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %132, i32 0, i32 1
  %134 = load i32*, i32** %133, align 8
  %135 = getelementptr inbounds i32, i32* %134, i64 0
  store i32 %129, i32* %135, align 4
  %136 = load i32, i32* %6, align 4
  %137 = add nsw i32 %136, 1
  %138 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %139 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %138, i32 0, i32 6
  %140 = load %struct.pair_struct*, %struct.pair_struct** %139, align 8
  %141 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %140, i32 0, i32 2
  %142 = load i32*, i32** %141, align 8
  %143 = getelementptr inbounds i32, i32* %142, i64 0
  store i32 %137, i32* %143, align 4
  %144 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  call void @set_pair1(%struct.PLA_t* %144, i32 0)
  br label %145

145:                                              ; preds = %127, %87
  %146 = load i32, i32* %4, align 4
  switch i32 %146, label %280 [
    i32 3, label %147
    i32 2, label %169
    i32 1, label %191
    i32 0, label %228
  ]

147:                                              ; preds = %145
  %148 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %149 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %148, i32 0, i32 0
  %150 = load %struct.set_family*, %struct.set_family** %149, align 8
  %151 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %152 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %151, i32 0, i32 1
  %153 = load %struct.set_family*, %struct.set_family** %152, align 8
  %154 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %155 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %154, i32 0, i32 2
  %156 = load %struct.set_family*, %struct.set_family** %155, align 8
  %157 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32)* @minimize_exact to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32, ...)*)(%struct.set_family* %150, %struct.set_family* %153, %struct.set_family* %156, i32 1)
  %158 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %159 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %158, i32 0, i32 0
  store %struct.set_family* %157, %struct.set_family** %159, align 8
  %160 = load %struct.set_family*, %struct.set_family** %15, align 8
  %161 = getelementptr inbounds %struct.set_family, %struct.set_family* %160, i32 0, i32 3
  %162 = load i32, i32* %161, align 4
  %163 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %164 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %163, i32 0, i32 0
  %165 = load %struct.set_family*, %struct.set_family** %164, align 8
  %166 = getelementptr inbounds %struct.set_family, %struct.set_family* %165, i32 0, i32 3
  %167 = load i32, i32* %166, align 4
  %168 = sub nsw i32 %162, %167
  store i32 %168, i32* %13, align 4
  br label %280

169:                                              ; preds = %145
  %170 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %171 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %170, i32 0, i32 0
  %172 = load %struct.set_family*, %struct.set_family** %171, align 8
  %173 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %174 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %173, i32 0, i32 1
  %175 = load %struct.set_family*, %struct.set_family** %174, align 8
  %176 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %177 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %176, i32 0, i32 2
  %178 = load %struct.set_family*, %struct.set_family** %177, align 8
  %179 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @espresso to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %172, %struct.set_family* %175, %struct.set_family* %178)
  %180 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %181 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %180, i32 0, i32 0
  store %struct.set_family* %179, %struct.set_family** %181, align 8
  %182 = load %struct.set_family*, %struct.set_family** %15, align 8
  %183 = getelementptr inbounds %struct.set_family, %struct.set_family* %182, i32 0, i32 3
  %184 = load i32, i32* %183, align 4
  %185 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %186 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %185, i32 0, i32 0
  %187 = load %struct.set_family*, %struct.set_family** %186, align 8
  %188 = getelementptr inbounds %struct.set_family, %struct.set_family* %187, i32 0, i32 3
  %189 = load i32, i32* %188, align 4
  %190 = sub nsw i32 %184, %189
  store i32 %190, i32* %13, align 4
  br label %280

191:                                              ; preds = %145
  %192 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %193 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %192, i32 0, i32 0
  %194 = load %struct.set_family*, %struct.set_family** %193, align 8
  %195 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %196 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %195, i32 0, i32 1
  %197 = load %struct.set_family*, %struct.set_family** %196, align 8
  %198 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @reduce to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %194, %struct.set_family* %197)
  %199 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %200 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %199, i32 0, i32 0
  store %struct.set_family* %198, %struct.set_family** %200, align 8
  %201 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %202 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %201, i32 0, i32 0
  %203 = load %struct.set_family*, %struct.set_family** %202, align 8
  %204 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %205 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %204, i32 0, i32 2
  %206 = load %struct.set_family*, %struct.set_family** %205, align 8
  %207 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, i32)* @expand to %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...)*)(%struct.set_family* %203, %struct.set_family* %206, i32 0)
  %208 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %209 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %208, i32 0, i32 0
  store %struct.set_family* %207, %struct.set_family** %209, align 8
  %210 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %211 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %210, i32 0, i32 0
  %212 = load %struct.set_family*, %struct.set_family** %211, align 8
  %213 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %214 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %213, i32 0, i32 1
  %215 = load %struct.set_family*, %struct.set_family** %214, align 8
  %216 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @irredundant to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %212, %struct.set_family* %215)
  %217 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %218 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %217, i32 0, i32 0
  store %struct.set_family* %216, %struct.set_family** %218, align 8
  %219 = load %struct.set_family*, %struct.set_family** %15, align 8
  %220 = getelementptr inbounds %struct.set_family, %struct.set_family* %219, i32 0, i32 3
  %221 = load i32, i32* %220, align 4
  %222 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %223 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %222, i32 0, i32 0
  %224 = load %struct.set_family*, %struct.set_family** %223, align 8
  %225 = getelementptr inbounds %struct.set_family, %struct.set_family* %224, i32 0, i32 3
  %226 = load i32, i32* %225, align 4
  %227 = sub nsw i32 %221, %226
  store i32 %227, i32* %13, align 4
  br label %280

228:                                              ; preds = %145
  %229 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %230 = icmp sle i32 %229, 32
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  br label %238

232:                                              ; preds = %228
  %233 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %234 = sub nsw i32 %233, 1
  %235 = ashr i32 %234, 5
  %236 = add nsw i32 %235, 1
  %237 = add nsw i32 %236, 1
  br label %238

238:                                              ; preds = %232, %231
  %239 = phi i32 [ 2, %231 ], [ %237, %232 ]
  %240 = sext i32 %239 to i64
  %241 = mul i64 4, %240
  %242 = call noalias i8* @malloc(i64 %241) #7
  %243 = bitcast i8* %242 to i32*
  %244 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %245 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %243, i32 %244)
  store i32* %245, i32** %18, align 8
  %246 = load i32*, i32** %18, align 8
  %247 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %248 = load i32, i32* %5, align 4
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds i32*, i32** %247, i64 %249
  %251 = load i32*, i32** %250, align 8
  %252 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %253 = load i32, i32* %6, align 4
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds i32*, i32** %252, i64 %254
  %256 = load i32*, i32** %255, align 8
  %257 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %246, i32* %251, i32* %256)
  %258 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %259 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %258, i32 0, i32 0
  %260 = load %struct.set_family*, %struct.set_family** %259, align 8
  %261 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %260)
  %262 = load i32*, i32** %18, align 8
  %263 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @dist_merge to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %261, i32* %262)
  store %struct.set_family* %263, %struct.set_family** %14, align 8
  %264 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %265 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %264, i32 0, i32 0
  %266 = load %struct.set_family*, %struct.set_family** %265, align 8
  %267 = getelementptr inbounds %struct.set_family, %struct.set_family* %266, i32 0, i32 3
  %268 = load i32, i32* %267, align 4
  %269 = load %struct.set_family*, %struct.set_family** %14, align 8
  %270 = getelementptr inbounds %struct.set_family, %struct.set_family* %269, i32 0, i32 3
  %271 = load i32, i32* %270, align 4
  %272 = sub nsw i32 %268, %271
  store i32 %272, i32* %13, align 4
  %273 = load %struct.set_family*, %struct.set_family** %14, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %273)
  %274 = load i32*, i32** %18, align 8
  %275 = icmp ne i32* %274, null
  br i1 %275, label %276, label %279

276:                                              ; preds = %238
  %277 = load i32*, i32** %18, align 8
  %278 = bitcast i32* %277 to i8*
  call void @free(i8* %278) #7
  store i32* null, i32** %18, align 8
  br label %279

279:                                              ; preds = %276, %238
  br label %280

280:                                              ; preds = %279, %191, %169, %147, %145
  %281 = load i32, i32* %13, align 4
  %282 = load i32**, i32*** %7, align 8
  %283 = load i32, i32* %5, align 4
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds i32*, i32** %282, i64 %284
  %286 = load i32*, i32** %285, align 8
  %287 = load i32, i32* %6, align 4
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds i32, i32* %286, i64 %288
  store i32 %281, i32* %289, align 4
  %290 = load i32, i32* %4, align 4
  %291 = icmp sgt i32 %290, 0
  br i1 %291, label %292, label %320

292:                                              ; preds = %280
  call void (...) bitcast (void ()* @setdown_cube to void (...)*)()
  %293 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %294 = icmp ne i32* %293, null
  br i1 %294, label %295, label %298

295:                                              ; preds = %292
  %296 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %297 = bitcast i32* %296 to i8*
  call void @free(i8* %297) #7
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  br label %298

298:                                              ; preds = %295, %292
  %299 = load i32, i32* %10, align 4
  store i32 %299, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %300 = load i32, i32* %11, align 4
  store i32 %300, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %301 = load i32*, i32** %12, align 8
  store i32* %301, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  call void (...) bitcast (void ()* @cube_setup to void (...)*)()
  %302 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %303 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %302, i32 0, i32 0
  %304 = load %struct.set_family*, %struct.set_family** %303, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %304)
  %305 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %306 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %305, i32 0, i32 1
  %307 = load %struct.set_family*, %struct.set_family** %306, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %307)
  %308 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %309 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %308, i32 0, i32 2
  %310 = load %struct.set_family*, %struct.set_family** %309, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %310)
  %311 = load %struct.set_family*, %struct.set_family** %15, align 8
  %312 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %313 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %312, i32 0, i32 0
  store %struct.set_family* %311, %struct.set_family** %313, align 8
  %314 = load %struct.set_family*, %struct.set_family** %16, align 8
  %315 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %316 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %315, i32 0, i32 1
  store %struct.set_family* %314, %struct.set_family** %316, align 8
  %317 = load %struct.set_family*, %struct.set_family** %17, align 8
  %318 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %319 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %318, i32 0, i32 2
  store %struct.set_family* %317, %struct.set_family** %319, align 8
  br label %320

320:                                              ; preds = %298, %280
  br label %321

321:                                              ; preds = %320
  %322 = load i32, i32* %6, align 4
  %323 = add nsw i32 %322, 1
  store i32 %323, i32* %6, align 4
  br label %83

324:                                              ; preds = %83
  br label %325

325:                                              ; preds = %324
  %326 = load i32, i32* %5, align 4
  %327 = add nsw i32 %326, 1
  store i32 %327, i32* %5, align 4
  br label %75

328:                                              ; preds = %75
  %329 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %330 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %329, i32 0, i32 6
  %331 = load %struct.pair_struct*, %struct.pair_struct** %330, align 8
  %332 = call i32 @pair_free(%struct.pair_struct* %331)
  %333 = load %struct.PLA_t*, %struct.PLA_t** %3, align 8
  %334 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %333, i32 0, i32 6
  store %struct.pair_struct* null, %struct.pair_struct** %334, align 8
  %335 = load i32**, i32*** %7, align 8
  ret i32** %335
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.pair_struct* @pair_best_cost(i32** %0) #0 {
  %2 = alloca i32**, align 8
  %3 = alloca %struct.pair_struct*, align 8
  %4 = alloca i32*, align 8
  store i32** %0, i32*** %2, align 8
  store i32 -1, i32* @best_cost, align 4
  store %struct.pair_struct* null, %struct.pair_struct** @best_pair, align 8
  %5 = load i32**, i32*** %2, align 8
  store i32** %5, i32*** @cost_array, align 8
  %6 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %7 = call %struct.pair_struct* @pair_new(i32 %6)
  store %struct.pair_struct* %7, %struct.pair_struct** %3, align 8
  %8 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %9 = icmp sle i32 %8, 32
  br i1 %9, label %10, label %11

10:                                               ; preds = %1
  br label %17

11:                                               ; preds = %1
  %12 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %13 = sub nsw i32 %12, 1
  %14 = ashr i32 %13, 5
  %15 = add nsw i32 %14, 1
  %16 = add nsw i32 %15, 1
  br label %17

17:                                               ; preds = %11, %10
  %18 = phi i32 [ 2, %10 ], [ %16, %11 ]
  %19 = sext i32 %18 to i64
  %20 = mul i64 4, %19
  %21 = call noalias i8* @malloc(i64 %20) #7
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %24 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_fill to i32* (i32*, i32, ...)*)(i32* %22, i32 %23)
  store i32* %24, i32** %4, align 8
  %25 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %26 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %27 = load i32*, i32** %4, align 8
  %28 = call i32 @generate_all_pairs(%struct.pair_struct* %25, i32 %26, i32* %27, i32 (...)* bitcast (i32 (%struct.pair_struct*)* @find_best_cost to i32 (...)*))
  %29 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %30 = call i32 @pair_free(%struct.pair_struct* %29)
  %31 = load i32*, i32** %4, align 8
  %32 = icmp ne i32* %31, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %17
  %34 = load i32*, i32** %4, align 8
  %35 = bitcast i32* %34 to i8*
  call void @free(i8* %35) #7
  store i32* null, i32** %4, align 8
  br label %36

36:                                               ; preds = %33, %17
  %37 = load %struct.pair_struct*, %struct.pair_struct** @best_pair, align 8
  ret %struct.pair_struct* %37
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @greedy_best_cost(i32** %0, %struct.pair_struct** %1) #0 {
  %3 = alloca i32**, align 8
  %4 = alloca %struct.pair_struct**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 8
  %12 = alloca %struct.pair_struct*, align 8
  store i32** %0, i32*** %3, align 8
  store %struct.pair_struct** %1, %struct.pair_struct*** %4, align 8
  %13 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %14 = call %struct.pair_struct* @pair_new(i32 %13)
  store %struct.pair_struct* %14, %struct.pair_struct** %12, align 8
  %15 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %16 = icmp sle i32 %15, 32
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  br label %24

18:                                               ; preds = %2
  %19 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %20 = sub nsw i32 %19, 1
  %21 = ashr i32 %20, 5
  %22 = add nsw i32 %21, 1
  %23 = add nsw i32 %22, 1
  br label %24

24:                                               ; preds = %18, %17
  %25 = phi i32 [ 2, %17 ], [ %23, %18 ]
  %26 = sext i32 %25 to i64
  %27 = mul i64 4, %26
  %28 = call noalias i8* @malloc(i64 %27) #7
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %31 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_fill to i32* (i32*, i32, ...)*)(i32* %29, i32 %30)
  store i32* %31, i32** %11, align 8
  store i32 0, i32* %10, align 4
  br label %32

32:                                               ; preds = %108, %24
  %33 = load i32*, i32** %11, align 8
  %34 = call i32 (i32*, ...) bitcast (i32 (i32*)* @set_ord to i32 (i32*, ...)*)(i32* %33)
  %35 = icmp sge i32 %34, 2
  br i1 %35, label %36, label %160

36:                                               ; preds = %32
  store i32 -1, i32* %9, align 4
  store i32 0, i32* %5, align 4
  br label %37

37:                                               ; preds = %105, %36
  %38 = load i32, i32* %5, align 4
  %39 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %40 = icmp slt i32 %38, %39
  br i1 %40, label %41, label %108

41:                                               ; preds = %37
  %42 = load i32*, i32** %11, align 8
  %43 = load i32, i32* %5, align 4
  %44 = ashr i32 %43, 5
  %45 = add nsw i32 %44, 1
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i32, i32* %42, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = load i32, i32* %5, align 4
  %50 = and i32 %49, 31
  %51 = shl i32 1, %50
  %52 = and i32 %48, %51
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %104

54:                                               ; preds = %41
  %55 = load i32, i32* %5, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %6, align 4
  br label %57

57:                                               ; preds = %100, %54
  %58 = load i32, i32* %6, align 4
  %59 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %103

61:                                               ; preds = %57
  %62 = load i32*, i32** %11, align 8
  %63 = load i32, i32* %6, align 4
  %64 = ashr i32 %63, 5
  %65 = add nsw i32 %64, 1
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i32, i32* %62, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = load i32, i32* %6, align 4
  %70 = and i32 %69, 31
  %71 = shl i32 1, %70
  %72 = and i32 %68, %71
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %99

74:                                               ; preds = %61
  %75 = load i32**, i32*** %3, align 8
  %76 = load i32, i32* %5, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i32*, i32** %75, i64 %77
  %79 = load i32*, i32** %78, align 8
  %80 = load i32, i32* %6, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i32, i32* %79, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = load i32, i32* %9, align 4
  %85 = icmp sgt i32 %83, %84
  br i1 %85, label %86, label %98

86:                                               ; preds = %74
  %87 = load i32**, i32*** %3, align 8
  %88 = load i32, i32* %5, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i32*, i32** %87, i64 %89
  %91 = load i32*, i32** %90, align 8
  %92 = load i32, i32* %6, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i32, i32* %91, i64 %93
  %95 = load i32, i32* %94, align 4
  store i32 %95, i32* %9, align 4
  %96 = load i32, i32* %5, align 4
  store i32 %96, i32* %7, align 4
  %97 = load i32, i32* %6, align 4
  store i32 %97, i32* %8, align 4
  br label %98

98:                                               ; preds = %86, %74
  br label %99

99:                                               ; preds = %98, %61
  br label %100

100:                                              ; preds = %99
  %101 = load i32, i32* %6, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %6, align 4
  br label %57

103:                                              ; preds = %57
  br label %104

104:                                              ; preds = %103, %41
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %5, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %5, align 4
  br label %37

108:                                              ; preds = %37
  %109 = load i32, i32* %7, align 4
  %110 = add nsw i32 %109, 1
  %111 = load %struct.pair_struct*, %struct.pair_struct** %12, align 8
  %112 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %111, i32 0, i32 1
  %113 = load i32*, i32** %112, align 8
  %114 = load %struct.pair_struct*, %struct.pair_struct** %12, align 8
  %115 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %114, i32 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, i32* %113, i64 %117
  store i32 %110, i32* %118, align 4
  %119 = load i32, i32* %8, align 4
  %120 = add nsw i32 %119, 1
  %121 = load %struct.pair_struct*, %struct.pair_struct** %12, align 8
  %122 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %121, i32 0, i32 2
  %123 = load i32*, i32** %122, align 8
  %124 = load %struct.pair_struct*, %struct.pair_struct** %12, align 8
  %125 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %124, i32 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i32, i32* %123, i64 %127
  store i32 %120, i32* %128, align 4
  %129 = load %struct.pair_struct*, %struct.pair_struct** %12, align 8
  %130 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %129, i32 0, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %130, align 8
  %133 = load i32, i32* %7, align 4
  %134 = and i32 %133, 31
  %135 = shl i32 1, %134
  %136 = xor i32 %135, -1
  %137 = load i32*, i32** %11, align 8
  %138 = load i32, i32* %7, align 4
  %139 = ashr i32 %138, 5
  %140 = add nsw i32 %139, 1
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i32, i32* %137, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = and i32 %143, %136
  store i32 %144, i32* %142, align 4
  %145 = load i32, i32* %8, align 4
  %146 = and i32 %145, 31
  %147 = shl i32 1, %146
  %148 = xor i32 %147, -1
  %149 = load i32*, i32** %11, align 8
  %150 = load i32, i32* %8, align 4
  %151 = ashr i32 %150, 5
  %152 = add nsw i32 %151, 1
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i32, i32* %149, i64 %153
  %155 = load i32, i32* %154, align 4
  %156 = and i32 %155, %148
  store i32 %156, i32* %154, align 4
  %157 = load i32, i32* %9, align 4
  %158 = load i32, i32* %10, align 4
  %159 = add nsw i32 %158, %157
  store i32 %159, i32* %10, align 4
  br label %32

160:                                              ; preds = %32
  %161 = load i32*, i32** %11, align 8
  %162 = icmp ne i32* %161, null
  br i1 %162, label %163, label %166

163:                                              ; preds = %160
  %164 = load i32*, i32** %11, align 8
  %165 = bitcast i32* %164 to i8*
  call void @free(i8* %165) #7
  store i32* null, i32** %11, align 8
  br label %166

166:                                              ; preds = %163, %160
  %167 = load %struct.pair_struct*, %struct.pair_struct** %12, align 8
  %168 = load %struct.pair_struct**, %struct.pair_struct*** %4, align 8
  store %struct.pair_struct* %167, %struct.pair_struct** %168, align 8
  %169 = load i32, i32* %10, align 4
  ret i32 %169
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @print_pair(%struct.pair_struct* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.pair_struct*, align 8
  %4 = alloca i32, align 4
  store %struct.pair_struct* %0, %struct.pair_struct** %3, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7.469, i64 0, i64 0))
  store i32 0, i32* %4, align 4
  br label %6

6:                                                ; preds = %28, %1
  %7 = load i32, i32* %4, align 4
  %8 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %9 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %12, label %31

12:                                               ; preds = %6
  %13 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %14 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %13, i32 0, i32 1
  %15 = load i32*, i32** %14, align 8
  %16 = load i32, i32* %4, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %15, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %21 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %20, i32 0, i32 2
  %22 = load i32*, i32** %21, align 8
  %23 = load i32, i32* %4, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %22, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.470, i64 0, i64 0), i32 %19, i32 %26)
  br label %28

28:                                               ; preds = %12
  %29 = load i32, i32* %4, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %4, align 4
  br label %6

31:                                               ; preds = %6
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.466, i64 0, i64 0))
  %33 = load i32, i32* %2, align 4
  ret i32 %33
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.pair_struct* @pair_new(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.pair_struct*, align 8
  store i32 %0, i32* %2, align 4
  %4 = call noalias i8* @malloc(i64 24) #7
  %5 = bitcast i8* %4 to %struct.pair_struct*
  store %struct.pair_struct* %5, %struct.pair_struct** %3, align 8
  %6 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %7 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %6, i32 0, i32 0
  store i32 0, i32* %7, align 8
  %8 = load i32, i32* %2, align 4
  %9 = sext i32 %8 to i64
  %10 = mul i64 4, %9
  %11 = call noalias i8* @malloc(i64 %10) #7
  %12 = bitcast i8* %11 to i32*
  %13 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %14 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %13, i32 0, i32 1
  store i32* %12, i32** %14, align 8
  %15 = load i32, i32* %2, align 4
  %16 = sext i32 %15 to i64
  %17 = mul i64 4, %16
  %18 = call noalias i8* @malloc(i64 %17) #7
  %19 = bitcast i8* %18 to i32*
  %20 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %21 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %20, i32 0, i32 2
  store i32* %19, i32** %21, align 8
  %22 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  ret %struct.pair_struct* %22
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @find_best_cost(%struct.pair_struct* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.pair_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.pair_struct* %0, %struct.pair_struct** %3, align 8
  store i32 0, i32* %5, align 4
  store i32 0, i32* %4, align 4
  br label %6

6:                                                ; preds = %38, %1
  %7 = load i32, i32* %4, align 4
  %8 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %9 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %12, label %41

12:                                               ; preds = %6
  %13 = load i32**, i32*** @cost_array, align 8
  %14 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %15 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %14, i32 0, i32 1
  %16 = load i32*, i32** %15, align 8
  %17 = load i32, i32* %4, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %16, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %20, 1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i32*, i32** %13, i64 %22
  %24 = load i32*, i32** %23, align 8
  %25 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %26 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %25, i32 0, i32 2
  %27 = load i32*, i32** %26, align 8
  %28 = load i32, i32* %4, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %27, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = sub nsw i32 %31, 1
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i32, i32* %24, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = load i32, i32* %5, align 4
  %37 = add nsw i32 %36, %35
  store i32 %37, i32* %5, align 4
  br label %38

38:                                               ; preds = %12
  %39 = load i32, i32* %4, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %4, align 4
  br label %6

41:                                               ; preds = %6
  %42 = load i32, i32* %5, align 4
  %43 = load i32, i32* @best_cost, align 4
  %44 = icmp sgt i32 %42, %43
  br i1 %44, label %45, label %52

45:                                               ; preds = %41
  %46 = load i32, i32* %5, align 4
  store i32 %46, i32* @best_cost, align 4
  %47 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %48 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %49 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = call %struct.pair_struct* @pair_save(%struct.pair_struct* %47, i32 %50)
  store %struct.pair_struct* %51, %struct.pair_struct** @best_pair, align 8
  br label %52

52:                                               ; preds = %45, %41
  %53 = load i32, i32* @debug, align 4
  %54 = and i32 %53, 2048
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %64

56:                                               ; preds = %52
  %57 = load i32, i32* @trace, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %64

59:                                               ; preds = %56
  %60 = load i32, i32* %5, align 4
  %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9.471, i64 0, i64 0), i32 %60)
  %62 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %63 = call i32 @print_pair(%struct.pair_struct* %62)
  br label %64

64:                                               ; preds = %59, %56, %52
  %65 = load i32, i32* %2, align 4
  ret i32 %65
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @generate_all_pairs(%struct.pair_struct* %0, i32 %1, i32* %2, i32 (...)* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.pair_struct*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32 (...)*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32*, align 8
  %13 = alloca %struct.pair_struct*, align 8
  store %struct.pair_struct* %0, %struct.pair_struct** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32* %2, i32** %8, align 8
  store i32 (...)* %3, i32 (...)** %9, align 8
  %14 = load i32*, i32** %8, align 8
  %15 = call i32 (i32*, ...) bitcast (i32 (i32*)* @set_ord to i32 (i32*, ...)*)(i32* %14)
  %16 = icmp slt i32 %15, 2
  br i1 %16, label %17, label %22

17:                                               ; preds = %4
  %18 = load i32 (...)*, i32 (...)** %9, align 8
  %19 = load %struct.pair_struct*, %struct.pair_struct** %6, align 8
  %20 = bitcast i32 (...)* %18 to i32 (%struct.pair_struct*, ...)*
  %21 = call i32 (%struct.pair_struct*, ...) %20(%struct.pair_struct* %19)
  store i32 0, i32* %5, align 4
  br label %208

22:                                               ; preds = %4
  %23 = load %struct.pair_struct*, %struct.pair_struct** %6, align 8
  %24 = load i32, i32* %7, align 4
  %25 = call %struct.pair_struct* @pair_save(%struct.pair_struct* %23, i32 %24)
  store %struct.pair_struct* %25, %struct.pair_struct** %13, align 8
  %26 = load i32*, i32** %8, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 0
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 1023
  %30 = mul i32 32, %29
  %31 = icmp ule i32 %30, 32
  br i1 %31, label %32, label %33

32:                                               ; preds = %22
  br label %43

33:                                               ; preds = %22
  %34 = load i32*, i32** %8, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1023
  %38 = mul i32 32, %37
  %39 = sub i32 %38, 1
  %40 = lshr i32 %39, 5
  %41 = add i32 %40, 1
  %42 = add i32 %41, 1
  br label %43

43:                                               ; preds = %33, %32
  %44 = phi i32 [ 2, %32 ], [ %42, %33 ]
  %45 = zext i32 %44 to i64
  %46 = mul i64 4, %45
  %47 = call noalias i8* @malloc(i64 %46) #7
  %48 = bitcast i8* %47 to i32*
  %49 = load i32*, i32** %8, align 8
  %50 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %48, i32* %49)
  store i32* %50, i32** %12, align 8
  store i32 0, i32* %10, align 4
  br label %51

51:                                               ; preds = %70, %43
  %52 = load i32, i32* %10, align 4
  %53 = load i32, i32* %7, align 4
  %54 = icmp slt i32 %52, %53
  br i1 %54, label %55, label %73

55:                                               ; preds = %51
  %56 = load i32*, i32** %8, align 8
  %57 = load i32, i32* %10, align 4
  %58 = ashr i32 %57, 5
  %59 = add nsw i32 %58, 1
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %56, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = load i32, i32* %10, align 4
  %64 = and i32 %63, 31
  %65 = shl i32 1, %64
  %66 = and i32 %62, %65
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %55
  br label %73

69:                                               ; preds = %55
  br label %70

70:                                               ; preds = %69
  %71 = load i32, i32* %10, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %10, align 4
  br label %51

73:                                               ; preds = %68, %51
  %74 = load i32, i32* %10, align 4
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %11, align 4
  br label %76

76:                                               ; preds = %174, %73
  %77 = load i32, i32* %11, align 4
  %78 = load i32, i32* %7, align 4
  %79 = icmp slt i32 %77, %78
  br i1 %79, label %80, label %177

80:                                               ; preds = %76
  %81 = load i32*, i32** %8, align 8
  %82 = load i32, i32* %11, align 4
  %83 = ashr i32 %82, 5
  %84 = add nsw i32 %83, 1
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i32, i32* %81, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = load i32, i32* %11, align 4
  %89 = and i32 %88, 31
  %90 = shl i32 1, %89
  %91 = and i32 %87, %90
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %173

93:                                               ; preds = %80
  %94 = load i32, i32* %10, align 4
  %95 = and i32 %94, 31
  %96 = shl i32 1, %95
  %97 = xor i32 %96, -1
  %98 = load i32*, i32** %12, align 8
  %99 = load i32, i32* %10, align 4
  %100 = ashr i32 %99, 5
  %101 = add nsw i32 %100, 1
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i32, i32* %98, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = and i32 %104, %97
  store i32 %105, i32* %103, align 4
  %106 = load i32, i32* %11, align 4
  %107 = and i32 %106, 31
  %108 = shl i32 1, %107
  %109 = xor i32 %108, -1
  %110 = load i32*, i32** %12, align 8
  %111 = load i32, i32* %11, align 4
  %112 = ashr i32 %111, 5
  %113 = add nsw i32 %112, 1
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %110, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, %109
  store i32 %117, i32* %115, align 4
  %118 = load i32, i32* %10, align 4
  %119 = add nsw i32 %118, 1
  %120 = load %struct.pair_struct*, %struct.pair_struct** %13, align 8
  %121 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %120, i32 0, i32 1
  %122 = load i32*, i32** %121, align 8
  %123 = load %struct.pair_struct*, %struct.pair_struct** %13, align 8
  %124 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %123, i32 0, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i32, i32* %122, i64 %126
  store i32 %119, i32* %127, align 4
  %128 = load i32, i32* %11, align 4
  %129 = add nsw i32 %128, 1
  %130 = load %struct.pair_struct*, %struct.pair_struct** %13, align 8
  %131 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %130, i32 0, i32 2
  %132 = load i32*, i32** %131, align 8
  %133 = load %struct.pair_struct*, %struct.pair_struct** %13, align 8
  %134 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %133, i32 0, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i32, i32* %132, i64 %136
  store i32 %129, i32* %137, align 4
  %138 = load %struct.pair_struct*, %struct.pair_struct** %13, align 8
  %139 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %138, i32 0, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %139, align 8
  %142 = load %struct.pair_struct*, %struct.pair_struct** %13, align 8
  %143 = load i32, i32* %7, align 4
  %144 = load i32*, i32** %12, align 8
  %145 = load i32 (...)*, i32 (...)** %9, align 8
  %146 = call i32 @generate_all_pairs(%struct.pair_struct* %142, i32 %143, i32* %144, i32 (...)* %145)
  %147 = load %struct.pair_struct*, %struct.pair_struct** %13, align 8
  %148 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %147, i32 0, i32 0
  %149 = load i32, i32* %148, align 8
  %150 = add nsw i32 %149, -1
  store i32 %150, i32* %148, align 8
  %151 = load i32, i32* %10, align 4
  %152 = and i32 %151, 31
  %153 = shl i32 1, %152
  %154 = load i32*, i32** %12, align 8
  %155 = load i32, i32* %10, align 4
  %156 = ashr i32 %155, 5
  %157 = add nsw i32 %156, 1
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i32, i32* %154, i64 %158
  %160 = load i32, i32* %159, align 4
  %161 = or i32 %160, %153
  store i32 %161, i32* %159, align 4
  %162 = load i32, i32* %11, align 4
  %163 = and i32 %162, 31
  %164 = shl i32 1, %163
  %165 = load i32*, i32** %12, align 8
  %166 = load i32, i32* %11, align 4
  %167 = ashr i32 %166, 5
  %168 = add nsw i32 %167, 1
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i32, i32* %165, i64 %169
  %171 = load i32, i32* %170, align 4
  %172 = or i32 %171, %164
  store i32 %172, i32* %170, align 4
  br label %173

173:                                              ; preds = %93, %80
  br label %174

174:                                              ; preds = %173
  %175 = load i32, i32* %11, align 4
  %176 = add nsw i32 %175, 1
  store i32 %176, i32* %11, align 4
  br label %76

177:                                              ; preds = %76
  %178 = load i32*, i32** %8, align 8
  %179 = call i32 (i32*, ...) bitcast (i32 (i32*)* @set_ord to i32 (i32*, ...)*)(i32* %178)
  %180 = srem i32 %179, 2
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %200

182:                                              ; preds = %177
  %183 = load i32, i32* %10, align 4
  %184 = and i32 %183, 31
  %185 = shl i32 1, %184
  %186 = xor i32 %185, -1
  %187 = load i32*, i32** %12, align 8
  %188 = load i32, i32* %10, align 4
  %189 = ashr i32 %188, 5
  %190 = add nsw i32 %189, 1
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i32, i32* %187, i64 %191
  %193 = load i32, i32* %192, align 4
  %194 = and i32 %193, %186
  store i32 %194, i32* %192, align 4
  %195 = load %struct.pair_struct*, %struct.pair_struct** %13, align 8
  %196 = load i32, i32* %7, align 4
  %197 = load i32*, i32** %12, align 8
  %198 = load i32 (...)*, i32 (...)** %9, align 8
  %199 = call i32 @generate_all_pairs(%struct.pair_struct* %195, i32 %196, i32* %197, i32 (...)* %198)
  br label %200

200:                                              ; preds = %182, %177
  %201 = load %struct.pair_struct*, %struct.pair_struct** %13, align 8
  %202 = call i32 @pair_free(%struct.pair_struct* %201)
  %203 = load i32*, i32** %12, align 8
  %204 = icmp ne i32* %203, null
  br i1 %204, label %205, label %208

205:                                              ; preds = %200
  %206 = load i32*, i32** %12, align 8
  %207 = bitcast i32* %206 to i8*
  call void @free(i8* %207) #7
  store i32* null, i32** %12, align 8
  br label %208

208:                                              ; preds = %205, %200, %17
  %209 = load i32, i32* %5, align 4
  ret i32 %209
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @pair_free(%struct.pair_struct* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.pair_struct*, align 8
  store %struct.pair_struct* %0, %struct.pair_struct** %3, align 8
  %4 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %5 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %4, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = icmp ne i32* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %1
  %9 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %10 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %9, i32 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = bitcast i32* %11 to i8*
  call void @free(i8* %12) #7
  %13 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %14 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %13, i32 0, i32 1
  store i32* null, i32** %14, align 8
  br label %15

15:                                               ; preds = %8, %1
  %16 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %17 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %16, i32 0, i32 2
  %18 = load i32*, i32** %17, align 8
  %19 = icmp ne i32* %18, null
  br i1 %19, label %20, label %27

20:                                               ; preds = %15
  %21 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %22 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %21, i32 0, i32 2
  %23 = load i32*, i32** %22, align 8
  %24 = bitcast i32* %23 to i8*
  call void @free(i8* %24) #7
  %25 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %26 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %25, i32 0, i32 2
  store i32* null, i32** %26, align 8
  br label %27

27:                                               ; preds = %20, %15
  %28 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %29 = icmp ne %struct.pair_struct* %28, null
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %32 = bitcast %struct.pair_struct* %31 to i8*
  call void @free(i8* %32) #7
  store %struct.pair_struct* null, %struct.pair_struct** %3, align 8
  br label %33

33:                                               ; preds = %30, %27
  %34 = load i32, i32* %2, align 4
  ret i32 %34
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.pair_struct* @pair_save(%struct.pair_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.pair_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.pair_struct*, align 8
  store %struct.pair_struct* %0, %struct.pair_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load i32, i32* %4, align 4
  %8 = call %struct.pair_struct* @pair_new(i32 %7)
  store %struct.pair_struct* %8, %struct.pair_struct** %6, align 8
  %9 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %10 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %9, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = load %struct.pair_struct*, %struct.pair_struct** %6, align 8
  %13 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %12, i32 0, i32 0
  store i32 %11, i32* %13, align 8
  store i32 0, i32* %5, align 4
  br label %14

14:                                               ; preds = %47, %2
  %15 = load i32, i32* %5, align 4
  %16 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %17 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp slt i32 %15, %18
  br i1 %19, label %20, label %50

20:                                               ; preds = %14
  %21 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %22 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %21, i32 0, i32 1
  %23 = load i32*, i32** %22, align 8
  %24 = load i32, i32* %5, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %23, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = load %struct.pair_struct*, %struct.pair_struct** %6, align 8
  %29 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %28, i32 0, i32 1
  %30 = load i32*, i32** %29, align 8
  %31 = load i32, i32* %5, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i32, i32* %30, i64 %32
  store i32 %27, i32* %33, align 4
  %34 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %35 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %34, i32 0, i32 2
  %36 = load i32*, i32** %35, align 8
  %37 = load i32, i32* %5, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i32, i32* %36, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = load %struct.pair_struct*, %struct.pair_struct** %6, align 8
  %42 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %41, i32 0, i32 2
  %43 = load i32*, i32** %42, align 8
  %44 = load i32, i32* %5, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %43, i64 %45
  store i32 %40, i32* %46, align 4
  br label %47

47:                                               ; preds = %20
  %48 = load i32, i32* %5, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %5, align 4
  br label %14

50:                                               ; preds = %14
  %51 = load %struct.pair_struct*, %struct.pair_struct** %6, align 8
  ret %struct.pair_struct* %51
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @pair_all(%struct.PLA_t* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.PLA_t*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.pair_struct*, align 8
  %7 = alloca i32*, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %4, align 8
  store i32 %1, i32* %5, align 4
  %8 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  store %struct.PLA_t* %8, %struct.PLA_t** @global_PLA, align 8
  %9 = load i32, i32* %5, align 4
  store i32 %9, i32* @pair_minim_strategy, align 4
  %10 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %11 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %10, i32 0, i32 0
  %12 = load %struct.set_family*, %struct.set_family** %11, align 8
  %13 = getelementptr inbounds %struct.set_family, %struct.set_family* %12, i32 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* @best_cost, align 4
  store %struct.pair_struct* null, %struct.pair_struct** @best_pair, align 8
  store i32* null, i32** @best_phase, align 8
  store %struct.set_family* null, %struct.set_family** @best_R, align 8
  store %struct.set_family* null, %struct.set_family** @best_D, align 8
  store %struct.set_family* null, %struct.set_family** @best_F, align 8
  %16 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %17 = call %struct.pair_struct* @pair_new(i32 %16)
  store %struct.pair_struct* %17, %struct.pair_struct** %6, align 8
  %18 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %19 = icmp sle i32 %18, 32
  br i1 %19, label %20, label %21

20:                                               ; preds = %2
  br label %27

21:                                               ; preds = %2
  %22 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %23 = sub nsw i32 %22, 1
  %24 = ashr i32 %23, 5
  %25 = add nsw i32 %24, 1
  %26 = add nsw i32 %25, 1
  br label %27

27:                                               ; preds = %21, %20
  %28 = phi i32 [ 2, %20 ], [ %26, %21 ]
  %29 = sext i32 %28 to i64
  %30 = mul i64 4, %29
  %31 = call noalias i8* @malloc(i64 %30) #7
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %34 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %32, i32 %33)
  %35 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %36 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_fill to i32* (i32*, i32, ...)*)(i32* %34, i32 %35)
  store i32* %36, i32** %7, align 8
  %37 = load %struct.pair_struct*, %struct.pair_struct** %6, align 8
  %38 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %39 = load i32*, i32** %7, align 8
  %40 = call i32 @generate_all_pairs(%struct.pair_struct* %37, i32 %38, i32* %39, i32 (...)* bitcast (i32 (%struct.pair_struct*)* @minimize_pair to i32 (...)*))
  %41 = load %struct.pair_struct*, %struct.pair_struct** %6, align 8
  %42 = call i32 @pair_free(%struct.pair_struct* %41)
  %43 = load i32*, i32** %7, align 8
  %44 = icmp ne i32* %43, null
  br i1 %44, label %45, label %48

45:                                               ; preds = %27
  %46 = load i32*, i32** %7, align 8
  %47 = bitcast i32* %46 to i8*
  call void @free(i8* %47) #7
  store i32* null, i32** %7, align 8
  br label %48

48:                                               ; preds = %45, %27
  %49 = load %struct.pair_struct*, %struct.pair_struct** @best_pair, align 8
  %50 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %51 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %50, i32 0, i32 6
  store %struct.pair_struct* %49, %struct.pair_struct** %51, align 8
  %52 = load i32*, i32** @best_phase, align 8
  %53 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %54 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %53, i32 0, i32 5
  store i32* %52, i32** %54, align 8
  %55 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  call void @set_pair(%struct.PLA_t* %55)
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.467, i64 0, i64 0))
  %57 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %58 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %57, i32 0, i32 6
  %59 = load %struct.pair_struct*, %struct.pair_struct** %58, align 8
  %60 = call i32 @print_pair(%struct.pair_struct* %59)
  %61 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %62 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %61, i32 0, i32 0
  %63 = load %struct.set_family*, %struct.set_family** %62, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %63)
  %64 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %65 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %64, i32 0, i32 1
  %66 = load %struct.set_family*, %struct.set_family** %65, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %66)
  %67 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %68 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %67, i32 0, i32 2
  %69 = load %struct.set_family*, %struct.set_family** %68, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %69)
  %70 = load %struct.set_family*, %struct.set_family** @best_F, align 8
  %71 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %72 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %71, i32 0, i32 0
  store %struct.set_family* %70, %struct.set_family** %72, align 8
  %73 = load %struct.set_family*, %struct.set_family** @best_D, align 8
  %74 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %75 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %74, i32 0, i32 1
  store %struct.set_family* %73, %struct.set_family** %75, align 8
  %76 = load %struct.set_family*, %struct.set_family** @best_R, align 8
  %77 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %78 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %77, i32 0, i32 2
  store %struct.set_family* %76, %struct.set_family** %78, align 8
  %79 = load i32, i32* %3, align 4
  ret i32 %79
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @minimize_pair(%struct.pair_struct* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.pair_struct*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %struct.pair_struct* %0, %struct.pair_struct** %3, align 8
  %14 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %15 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %14, i32 0, i32 0
  %16 = load %struct.set_family*, %struct.set_family** %15, align 8
  %17 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %16)
  store %struct.set_family* %17, %struct.set_family** %4, align 8
  %18 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %19 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %18, i32 0, i32 1
  %20 = load %struct.set_family*, %struct.set_family** %19, align 8
  %21 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %20)
  store %struct.set_family* %21, %struct.set_family** %5, align 8
  %22 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %23 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %22, i32 0, i32 2
  %24 = load %struct.set_family*, %struct.set_family** %23, align 8
  %25 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %24)
  store %struct.set_family* %25, %struct.set_family** %6, align 8
  %26 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %26, i32* %8, align 4
  %27 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  store i32 %27, i32* %9, align 4
  %28 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %29 = sext i32 %28 to i64
  %30 = mul i64 4, %29
  %31 = call noalias i8* @malloc(i64 %30) #7
  %32 = bitcast i8* %31 to i32*
  store i32* %32, i32** %10, align 8
  store i32 0, i32* %7, align 4
  br label %33

33:                                               ; preds = %47, %1
  %34 = load i32, i32* %7, align 4
  %35 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %36 = icmp slt i32 %34, %35
  br i1 %36, label %37, label %50

37:                                               ; preds = %33
  %38 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %39 = load i32, i32* %7, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32, i32* %38, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = load i32*, i32** %10, align 8
  %44 = load i32, i32* %7, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %43, i64 %45
  store i32 %42, i32* %46, align 4
  br label %47

47:                                               ; preds = %37
  %48 = load i32, i32* %7, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %7, align 4
  br label %33

50:                                               ; preds = %33
  %51 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %52 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %53 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %52, i32 0, i32 6
  store %struct.pair_struct* %51, %struct.pair_struct** %53, align 8
  %54 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  call void @set_pair1(%struct.PLA_t* %54, i32 0)
  %55 = load i32, i32* @summary, align 4
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %50
  %58 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %59 = call i32 @print_pair(%struct.pair_struct* %58)
  br label %60

60:                                               ; preds = %57, %50
  %61 = load i32, i32* @pair_minim_strategy, align 4
  switch i32 %61, label %132 [
    i32 2, label %62
    i32 1, label %84
    i32 0, label %108
  ]

62:                                               ; preds = %60
  %63 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %63, i64* %11, align 8
  %64 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  call void (%struct.PLA_t*, i32, ...) bitcast (void (%struct.PLA_t*, i32)* @phase_assignment to void (%struct.PLA_t*, i32, ...)*)(%struct.PLA_t* %64, i32 0)
  %65 = load i32, i32* @summary, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %74

67:                                               ; preds = %62
  %68 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %69 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %68, i32 0, i32 0
  %70 = load %struct.set_family*, %struct.set_family** %69, align 8
  %71 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %72 = load i64, i64* %11, align 8
  %73 = sub nsw i64 %71, %72
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %70, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10.474, i64 0, i64 0), i64 %73)
  br label %74

74:                                               ; preds = %67, %62
  %75 = load i32, i32* @summary, align 4
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %83

77:                                               ; preds = %74
  %78 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %79 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %78, i32 0, i32 5
  %80 = load i32*, i32** %79, align 8
  %81 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %80)
  %82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11.475, i64 0, i64 0), i8* %81)
  br label %83

83:                                               ; preds = %77, %74
  br label %133

84:                                               ; preds = %60
  %85 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %85, i64* %12, align 8
  %86 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %87 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %86, i32 0, i32 0
  %88 = load %struct.set_family*, %struct.set_family** %87, align 8
  %89 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %90 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %89, i32 0, i32 1
  %91 = load %struct.set_family*, %struct.set_family** %90, align 8
  %92 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %93 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %92, i32 0, i32 2
  %94 = load %struct.set_family*, %struct.set_family** %93, align 8
  %95 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32)* @minimize_exact to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, i32, ...)*)(%struct.set_family* %88, %struct.set_family* %91, %struct.set_family* %94, i32 1)
  %96 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %97 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %96, i32 0, i32 0
  store %struct.set_family* %95, %struct.set_family** %97, align 8
  %98 = load i32, i32* @summary, align 4
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %107

100:                                              ; preds = %84
  %101 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %102 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %101, i32 0, i32 0
  %103 = load %struct.set_family*, %struct.set_family** %102, align 8
  %104 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %105 = load i64, i64* %12, align 8
  %106 = sub nsw i64 %104, %105
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %103, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12.476, i64 0, i64 0), i64 %106)
  br label %107

107:                                              ; preds = %100, %84
  br label %133

108:                                              ; preds = %60
  %109 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %109, i64* %13, align 8
  %110 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %111 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %110, i32 0, i32 0
  %112 = load %struct.set_family*, %struct.set_family** %111, align 8
  %113 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %114 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %113, i32 0, i32 1
  %115 = load %struct.set_family*, %struct.set_family** %114, align 8
  %116 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %117 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %116, i32 0, i32 2
  %118 = load %struct.set_family*, %struct.set_family** %117, align 8
  %119 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @espresso to %struct.set_family* (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %112, %struct.set_family* %115, %struct.set_family* %118)
  %120 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %121 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %120, i32 0, i32 0
  store %struct.set_family* %119, %struct.set_family** %121, align 8
  %122 = load i32, i32* @summary, align 4
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %131

124:                                              ; preds = %108
  %125 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %126 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %125, i32 0, i32 0
  %127 = load %struct.set_family*, %struct.set_family** %126, align 8
  %128 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %129 = load i64, i64* %13, align 8
  %130 = sub nsw i64 %128, %129
  call void (%struct.set_family*, i8*, i64, ...) bitcast (void (%struct.set_family*, i8*, i64)* @print_trace to void (%struct.set_family*, i8*, i64, ...)*)(%struct.set_family* %127, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.468, i64 0, i64 0), i64 %130)
  br label %131

131:                                              ; preds = %124, %108
  br label %133

132:                                              ; preds = %60
  br label %133

133:                                              ; preds = %132, %131, %107, %83
  %134 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %135 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %134, i32 0, i32 0
  %136 = load %struct.set_family*, %struct.set_family** %135, align 8
  %137 = getelementptr inbounds %struct.set_family, %struct.set_family* %136, i32 0, i32 3
  %138 = load i32, i32* %137, align 4
  %139 = load i32, i32* @best_cost, align 4
  %140 = icmp slt i32 %138, %139
  br i1 %140, label %141, label %218

141:                                              ; preds = %133
  %142 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %143 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %142, i32 0, i32 0
  %144 = load %struct.set_family*, %struct.set_family** %143, align 8
  %145 = getelementptr inbounds %struct.set_family, %struct.set_family* %144, i32 0, i32 3
  %146 = load i32, i32* %145, align 4
  store i32 %146, i32* @best_cost, align 4
  %147 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %148 = load %struct.pair_struct*, %struct.pair_struct** %3, align 8
  %149 = getelementptr inbounds %struct.pair_struct, %struct.pair_struct* %148, i32 0, i32 0
  %150 = load i32, i32* %149, align 8
  %151 = call %struct.pair_struct* @pair_save(%struct.pair_struct* %147, i32 %150)
  store %struct.pair_struct* %151, %struct.pair_struct** @best_pair, align 8
  %152 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %153 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %152, i32 0, i32 5
  %154 = load i32*, i32** %153, align 8
  %155 = icmp ne i32* %154, null
  br i1 %155, label %156, label %188

156:                                              ; preds = %141
  %157 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %158 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %157, i32 0, i32 5
  %159 = load i32*, i32** %158, align 8
  %160 = getelementptr inbounds i32, i32* %159, i64 0
  %161 = load i32, i32* %160, align 4
  %162 = and i32 %161, 1023
  %163 = mul i32 32, %162
  %164 = icmp ule i32 %163, 32
  br i1 %164, label %165, label %166

165:                                              ; preds = %156
  br label %178

166:                                              ; preds = %156
  %167 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %168 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %167, i32 0, i32 5
  %169 = load i32*, i32** %168, align 8
  %170 = getelementptr inbounds i32, i32* %169, i64 0
  %171 = load i32, i32* %170, align 4
  %172 = and i32 %171, 1023
  %173 = mul i32 32, %172
  %174 = sub i32 %173, 1
  %175 = lshr i32 %174, 5
  %176 = add i32 %175, 1
  %177 = add i32 %176, 1
  br label %178

178:                                              ; preds = %166, %165
  %179 = phi i32 [ 2, %165 ], [ %177, %166 ]
  %180 = zext i32 %179 to i64
  %181 = mul i64 4, %180
  %182 = call noalias i8* @malloc(i64 %181) #7
  %183 = bitcast i8* %182 to i32*
  %184 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %185 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %184, i32 0, i32 5
  %186 = load i32*, i32** %185, align 8
  %187 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %183, i32* %186)
  br label %189

188:                                              ; preds = %141
  br label %189

189:                                              ; preds = %188, %178
  %190 = phi i32* [ %187, %178 ], [ null, %188 ]
  store i32* %190, i32** @best_phase, align 8
  %191 = load %struct.set_family*, %struct.set_family** @best_F, align 8
  %192 = icmp ne %struct.set_family* %191, null
  br i1 %192, label %193, label %195

193:                                              ; preds = %189
  %194 = load %struct.set_family*, %struct.set_family** @best_F, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %194)
  br label %195

195:                                              ; preds = %193, %189
  %196 = load %struct.set_family*, %struct.set_family** @best_D, align 8
  %197 = icmp ne %struct.set_family* %196, null
  br i1 %197, label %198, label %200

198:                                              ; preds = %195
  %199 = load %struct.set_family*, %struct.set_family** @best_D, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %199)
  br label %200

200:                                              ; preds = %198, %195
  %201 = load %struct.set_family*, %struct.set_family** @best_R, align 8
  %202 = icmp ne %struct.set_family* %201, null
  br i1 %202, label %203, label %205

203:                                              ; preds = %200
  %204 = load %struct.set_family*, %struct.set_family** @best_R, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %204)
  br label %205

205:                                              ; preds = %203, %200
  %206 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %207 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %206, i32 0, i32 0
  %208 = load %struct.set_family*, %struct.set_family** %207, align 8
  %209 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %208)
  store %struct.set_family* %209, %struct.set_family** @best_F, align 8
  %210 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %211 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %210, i32 0, i32 1
  %212 = load %struct.set_family*, %struct.set_family** %211, align 8
  %213 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %212)
  store %struct.set_family* %213, %struct.set_family** @best_D, align 8
  %214 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %215 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %214, i32 0, i32 2
  %216 = load %struct.set_family*, %struct.set_family** %215, align 8
  %217 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %216)
  store %struct.set_family* %217, %struct.set_family** @best_R, align 8
  br label %218

218:                                              ; preds = %205, %133
  call void (...) bitcast (void ()* @setdown_cube to void (...)*)()
  %219 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %220 = icmp ne i32* %219, null
  br i1 %220, label %221, label %224

221:                                              ; preds = %218
  %222 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  %223 = bitcast i32* %222 to i8*
  call void @free(i8* %223) #7
  store i32* null, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  br label %224

224:                                              ; preds = %221, %218
  %225 = load i32, i32* %8, align 4
  store i32 %225, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  %226 = load i32, i32* %9, align 4
  store i32 %226, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %227 = load i32*, i32** %10, align 8
  store i32* %227, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 5), align 8
  call void (...) bitcast (void ()* @cube_setup to void (...)*)()
  %228 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %229 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %228, i32 0, i32 0
  %230 = load %struct.set_family*, %struct.set_family** %229, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %230)
  %231 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %232 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %231, i32 0, i32 1
  %233 = load %struct.set_family*, %struct.set_family** %232, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %233)
  %234 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %235 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %234, i32 0, i32 2
  %236 = load %struct.set_family*, %struct.set_family** %235, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %236)
  %237 = load %struct.set_family*, %struct.set_family** %4, align 8
  %238 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %239 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %238, i32 0, i32 0
  store %struct.set_family* %237, %struct.set_family** %239, align 8
  %240 = load %struct.set_family*, %struct.set_family** %5, align 8
  %241 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %242 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %241, i32 0, i32 1
  store %struct.set_family* %240, %struct.set_family** %242, align 8
  %243 = load %struct.set_family*, %struct.set_family** %6, align 8
  %244 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %245 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %244, i32 0, i32 2
  store %struct.set_family* %243, %struct.set_family** %245, align 8
  %246 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %247 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %246, i32 0, i32 6
  store %struct.pair_struct* null, %struct.pair_struct** %247, align 8
  %248 = load %struct.PLA_t*, %struct.PLA_t** @global_PLA, align 8
  %249 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %248, i32 0, i32 5
  store i32* null, i32** %249, align 8
  %250 = load i32, i32* %2, align 4
  ret i32 %250
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @visit_col(%struct.sm_matrix_struct* %0, %struct.sm_col_struct* %1, i32* %2, i32* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.sm_matrix_struct*, align 8
  %7 = alloca %struct.sm_col_struct*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %struct.sm_element_struct*, align 8
  %11 = alloca %struct.sm_row_struct*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %6, align 8
  store %struct.sm_col_struct* %1, %struct.sm_col_struct** %7, align 8
  store i32* %2, i32** %8, align 8
  store i32* %3, i32** %9, align 8
  %12 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %13 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %12, i32 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %81, label %16

16:                                               ; preds = %4
  %17 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %18 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %17, i32 0, i32 2
  store i32 1, i32* %18, align 8
  %19 = load i32*, i32** %9, align 8
  %20 = load i32, i32* %19, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %19, align 4
  %22 = load i32*, i32** %9, align 8
  %23 = load i32, i32* %22, align 4
  %24 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %25 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %24, i32 0, i32 9
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %23, %26
  br i1 %27, label %28, label %29

28:                                               ; preds = %16
  store i32 1, i32* %5, align 4
  br label %82

29:                                               ; preds = %16
  %30 = load %struct.sm_col_struct*, %struct.sm_col_struct** %7, align 8
  %31 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %30, i32 0, i32 3
  %32 = load %struct.sm_element_struct*, %struct.sm_element_struct** %31, align 8
  store %struct.sm_element_struct* %32, %struct.sm_element_struct** %10, align 8
  br label %33

33:                                               ; preds = %76, %29
  %34 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %35 = icmp ne %struct.sm_element_struct* %34, null
  br i1 %35, label %36, label %80

36:                                               ; preds = %33
  %37 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %38 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp sge i32 %39, 0
  br i1 %40, label %41, label %59

41:                                               ; preds = %36
  %42 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %43 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %42, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %46 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %45, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp slt i32 %44, %47
  br i1 %48, label %49, label %59

49:                                               ; preds = %41
  %50 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %51 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %50, i32 0, i32 0
  %52 = load %struct.sm_row_struct**, %struct.sm_row_struct*** %51, align 8
  %53 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %54 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds %struct.sm_row_struct*, %struct.sm_row_struct** %52, i64 %56
  %58 = load %struct.sm_row_struct*, %struct.sm_row_struct** %57, align 8
  br label %60

59:                                               ; preds = %41, %36
  br label %60

60:                                               ; preds = %59, %49
  %61 = phi %struct.sm_row_struct* [ %58, %49 ], [ null, %59 ]
  store %struct.sm_row_struct* %61, %struct.sm_row_struct** %11, align 8
  %62 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  %63 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %62, i32 0, i32 2
  %64 = load i32, i32* %63, align 8
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %75, label %66

66:                                               ; preds = %60
  %67 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %68 = load %struct.sm_row_struct*, %struct.sm_row_struct** %11, align 8
  %69 = load i32*, i32** %8, align 8
  %70 = load i32*, i32** %9, align 8
  %71 = call i32 @visit_row(%struct.sm_matrix_struct* %67, %struct.sm_row_struct* %68, i32* %69, i32* %70)
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %66
  store i32 1, i32* %5, align 4
  br label %82

74:                                               ; preds = %66
  br label %75

75:                                               ; preds = %74, %60
  br label %76

76:                                               ; preds = %75
  %77 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %78 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %77, i32 0, i32 2
  %79 = load %struct.sm_element_struct*, %struct.sm_element_struct** %78, align 8
  store %struct.sm_element_struct* %79, %struct.sm_element_struct** %10, align 8
  br label %33

80:                                               ; preds = %33
  br label %81

81:                                               ; preds = %80, %4
  store i32 0, i32* %5, align 4
  br label %82

82:                                               ; preds = %81, %73, %28
  %83 = load i32, i32* %5, align 4
  ret i32 %83
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @visit_row(%struct.sm_matrix_struct* %0, %struct.sm_row_struct* %1, i32* %2, i32* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.sm_matrix_struct*, align 8
  %7 = alloca %struct.sm_row_struct*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %struct.sm_element_struct*, align 8
  %11 = alloca %struct.sm_col_struct*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %6, align 8
  store %struct.sm_row_struct* %1, %struct.sm_row_struct** %7, align 8
  store i32* %2, i32** %8, align 8
  store i32* %3, i32** %9, align 8
  %12 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %13 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %12, i32 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %81, label %16

16:                                               ; preds = %4
  %17 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %18 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %17, i32 0, i32 2
  store i32 1, i32* %18, align 8
  %19 = load i32*, i32** %8, align 8
  %20 = load i32, i32* %19, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %19, align 4
  %22 = load i32*, i32** %8, align 8
  %23 = load i32, i32* %22, align 4
  %24 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %25 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %24, i32 0, i32 6
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %23, %26
  br i1 %27, label %28, label %29

28:                                               ; preds = %16
  store i32 1, i32* %5, align 4
  br label %82

29:                                               ; preds = %16
  %30 = load %struct.sm_row_struct*, %struct.sm_row_struct** %7, align 8
  %31 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %30, i32 0, i32 3
  %32 = load %struct.sm_element_struct*, %struct.sm_element_struct** %31, align 8
  store %struct.sm_element_struct* %32, %struct.sm_element_struct** %10, align 8
  br label %33

33:                                               ; preds = %76, %29
  %34 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %35 = icmp ne %struct.sm_element_struct* %34, null
  br i1 %35, label %36, label %80

36:                                               ; preds = %33
  %37 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %38 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %37, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp sge i32 %39, 0
  br i1 %40, label %41, label %59

41:                                               ; preds = %36
  %42 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %43 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %46 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %45, i32 0, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = icmp slt i32 %44, %47
  br i1 %48, label %49, label %59

49:                                               ; preds = %41
  %50 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %51 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %50, i32 0, i32 2
  %52 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %51, align 8
  %53 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %54 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %52, i64 %56
  %58 = load %struct.sm_col_struct*, %struct.sm_col_struct** %57, align 8
  br label %60

59:                                               ; preds = %41, %36
  br label %60

60:                                               ; preds = %59, %49
  %61 = phi %struct.sm_col_struct* [ %58, %49 ], [ null, %59 ]
  store %struct.sm_col_struct* %61, %struct.sm_col_struct** %11, align 8
  %62 = load %struct.sm_col_struct*, %struct.sm_col_struct** %11, align 8
  %63 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %62, i32 0, i32 2
  %64 = load i32, i32* %63, align 8
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %75, label %66

66:                                               ; preds = %60
  %67 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %68 = load %struct.sm_col_struct*, %struct.sm_col_struct** %11, align 8
  %69 = load i32*, i32** %8, align 8
  %70 = load i32*, i32** %9, align 8
  %71 = call i32 @visit_col(%struct.sm_matrix_struct* %67, %struct.sm_col_struct* %68, i32* %69, i32* %70)
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %66
  store i32 1, i32* %5, align 4
  br label %82

74:                                               ; preds = %66
  br label %75

75:                                               ; preds = %74, %60
  br label %76

76:                                               ; preds = %75
  %77 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  %78 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %77, i32 0, i32 4
  %79 = load %struct.sm_element_struct*, %struct.sm_element_struct** %78, align 8
  store %struct.sm_element_struct* %79, %struct.sm_element_struct** %10, align 8
  br label %33

80:                                               ; preds = %33
  br label %81

81:                                               ; preds = %80, %4
  store i32 0, i32* %5, align 4
  br label %82

82:                                               ; preds = %81, %73, %28
  %83 = load i32, i32* %5, align 4
  ret i32 %83
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sm_block_partition(%struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %1, %struct.sm_matrix_struct** %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.sm_matrix_struct*, align 8
  %6 = alloca %struct.sm_matrix_struct**, align 8
  %7 = alloca %struct.sm_matrix_struct**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.sm_row_struct*, align 8
  %11 = alloca %struct.sm_col_struct*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %5, align 8
  store %struct.sm_matrix_struct** %1, %struct.sm_matrix_struct*** %6, align 8
  store %struct.sm_matrix_struct** %2, %struct.sm_matrix_struct*** %7, align 8
  %12 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %13 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %12, i32 0, i32 6
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  store i32 0, i32* %4, align 4
  br label %83

17:                                               ; preds = %3
  %18 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %19 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %18, i32 0, i32 4
  %20 = load %struct.sm_row_struct*, %struct.sm_row_struct** %19, align 8
  store %struct.sm_row_struct* %20, %struct.sm_row_struct** %10, align 8
  br label %21

21:                                               ; preds = %27, %17
  %22 = load %struct.sm_row_struct*, %struct.sm_row_struct** %10, align 8
  %23 = icmp ne %struct.sm_row_struct* %22, null
  br i1 %23, label %24, label %31

24:                                               ; preds = %21
  %25 = load %struct.sm_row_struct*, %struct.sm_row_struct** %10, align 8
  %26 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %25, i32 0, i32 2
  store i32 0, i32* %26, align 8
  br label %27

27:                                               ; preds = %24
  %28 = load %struct.sm_row_struct*, %struct.sm_row_struct** %10, align 8
  %29 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %28, i32 0, i32 5
  %30 = load %struct.sm_row_struct*, %struct.sm_row_struct** %29, align 8
  store %struct.sm_row_struct* %30, %struct.sm_row_struct** %10, align 8
  br label %21

31:                                               ; preds = %21
  %32 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %33 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %32, i32 0, i32 7
  %34 = load %struct.sm_col_struct*, %struct.sm_col_struct** %33, align 8
  store %struct.sm_col_struct* %34, %struct.sm_col_struct** %11, align 8
  br label %35

35:                                               ; preds = %41, %31
  %36 = load %struct.sm_col_struct*, %struct.sm_col_struct** %11, align 8
  %37 = icmp ne %struct.sm_col_struct* %36, null
  br i1 %37, label %38, label %45

38:                                               ; preds = %35
  %39 = load %struct.sm_col_struct*, %struct.sm_col_struct** %11, align 8
  %40 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %39, i32 0, i32 2
  store i32 0, i32* %40, align 8
  br label %41

41:                                               ; preds = %38
  %42 = load %struct.sm_col_struct*, %struct.sm_col_struct** %11, align 8
  %43 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %42, i32 0, i32 5
  %44 = load %struct.sm_col_struct*, %struct.sm_col_struct** %43, align 8
  store %struct.sm_col_struct* %44, %struct.sm_col_struct** %11, align 8
  br label %35

45:                                               ; preds = %35
  store i32 0, i32* %9, align 4
  store i32 0, i32* %8, align 4
  %46 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %47 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %48 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %47, i32 0, i32 4
  %49 = load %struct.sm_row_struct*, %struct.sm_row_struct** %48, align 8
  %50 = call i32 @visit_row(%struct.sm_matrix_struct* %46, %struct.sm_row_struct* %49, i32* %9, i32* %8)
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %45
  store i32 0, i32* %4, align 4
  br label %83

53:                                               ; preds = %45
  %54 = call %struct.sm_matrix_struct* (...) bitcast (%struct.sm_matrix_struct* ()* @sm_alloc to %struct.sm_matrix_struct* (...)*)()
  %55 = load %struct.sm_matrix_struct**, %struct.sm_matrix_struct*** %6, align 8
  store %struct.sm_matrix_struct* %54, %struct.sm_matrix_struct** %55, align 8
  %56 = call %struct.sm_matrix_struct* (...) bitcast (%struct.sm_matrix_struct* ()* @sm_alloc to %struct.sm_matrix_struct* (...)*)()
  %57 = load %struct.sm_matrix_struct**, %struct.sm_matrix_struct*** %7, align 8
  store %struct.sm_matrix_struct* %56, %struct.sm_matrix_struct** %57, align 8
  %58 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %5, align 8
  %59 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %58, i32 0, i32 4
  %60 = load %struct.sm_row_struct*, %struct.sm_row_struct** %59, align 8
  store %struct.sm_row_struct* %60, %struct.sm_row_struct** %10, align 8
  br label %61

61:                                               ; preds = %78, %53
  %62 = load %struct.sm_row_struct*, %struct.sm_row_struct** %10, align 8
  %63 = icmp ne %struct.sm_row_struct* %62, null
  br i1 %63, label %64, label %82

64:                                               ; preds = %61
  %65 = load %struct.sm_row_struct*, %struct.sm_row_struct** %10, align 8
  %66 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %65, i32 0, i32 2
  %67 = load i32, i32* %66, align 8
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %64
  %70 = load %struct.sm_matrix_struct**, %struct.sm_matrix_struct*** %6, align 8
  %71 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %70, align 8
  %72 = load %struct.sm_row_struct*, %struct.sm_row_struct** %10, align 8
  call void @copy_row(%struct.sm_matrix_struct* %71, %struct.sm_row_struct* %72)
  br label %77

73:                                               ; preds = %64
  %74 = load %struct.sm_matrix_struct**, %struct.sm_matrix_struct*** %7, align 8
  %75 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %74, align 8
  %76 = load %struct.sm_row_struct*, %struct.sm_row_struct** %10, align 8
  call void @copy_row(%struct.sm_matrix_struct* %75, %struct.sm_row_struct* %76)
  br label %77

77:                                               ; preds = %73, %69
  br label %78

78:                                               ; preds = %77
  %79 = load %struct.sm_row_struct*, %struct.sm_row_struct** %10, align 8
  %80 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %79, i32 0, i32 5
  %81 = load %struct.sm_row_struct*, %struct.sm_row_struct** %80, align 8
  store %struct.sm_row_struct* %81, %struct.sm_row_struct** %10, align 8
  br label %61

82:                                               ; preds = %61
  store i32 1, i32* %4, align 4
  br label %83

83:                                               ; preds = %82, %52, %16
  %84 = load i32, i32* %4, align 4
  ret i32 %84
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_row(%struct.sm_matrix_struct* %0, %struct.sm_row_struct* %1) #0 {
  %3 = alloca %struct.sm_matrix_struct*, align 8
  %4 = alloca %struct.sm_row_struct*, align 8
  %5 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_matrix_struct* %0, %struct.sm_matrix_struct** %3, align 8
  store %struct.sm_row_struct* %1, %struct.sm_row_struct** %4, align 8
  %6 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %7 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %6, i32 0, i32 3
  %8 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  store %struct.sm_element_struct* %8, %struct.sm_element_struct** %5, align 8
  br label %9

9:                                                ; preds = %21, %2
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %11 = icmp ne %struct.sm_element_struct* %10, null
  br i1 %11, label %12, label %25

12:                                               ; preds = %9
  %13 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %14 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %15 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %18 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = call %struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32, ...) bitcast (%struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32)* @sm_insert to %struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32, ...)*)(%struct.sm_matrix_struct* %13, i32 %16, i32 %19)
  br label %21

21:                                               ; preds = %12
  %22 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %23 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %22, i32 0, i32 4
  %24 = load %struct.sm_element_struct*, %struct.sm_element_struct** %23, align 8
  store %struct.sm_element_struct* %24, %struct.sm_element_struct** %5, align 8
  br label %9

25:                                               ; preds = %9
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @primes_consensus(i32** %0) #0 {
  %2 = alloca i32**, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.set_family*, align 8
  store i32** %0, i32*** %2, align 8
  %9 = load i32**, i32*** %2, align 8
  %10 = call i32 @primes_consensus_special_cases(i32** %9, %struct.set_family** %6)
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %12, label %96

12:                                               ; preds = %1
  %13 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %14 = icmp sle i32 %13, 32
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  br label %22

16:                                               ; preds = %12
  %17 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %18 = sub nsw i32 %17, 1
  %19 = ashr i32 %18, 5
  %20 = add nsw i32 %19, 1
  %21 = add nsw i32 %20, 1
  br label %22

22:                                               ; preds = %16, %15
  %23 = phi i32 [ 2, %15 ], [ %21, %16 ]
  %24 = sext i32 %23 to i64
  %25 = mul i64 4, %24
  %26 = call noalias i8* @malloc(i64 %25) #7
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %29 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %27, i32 %28)
  store i32* %29, i32** %3, align 8
  %30 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %31 = icmp sle i32 %30, 32
  br i1 %31, label %32, label %33

32:                                               ; preds = %22
  br label %39

33:                                               ; preds = %22
  %34 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %35 = sub nsw i32 %34, 1
  %36 = ashr i32 %35, 5
  %37 = add nsw i32 %36, 1
  %38 = add nsw i32 %37, 1
  br label %39

39:                                               ; preds = %33, %32
  %40 = phi i32 [ 2, %32 ], [ %38, %33 ]
  %41 = sext i32 %40 to i64
  %42 = mul i64 4, %41
  %43 = call noalias i8* @malloc(i64 %42) #7
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %46 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %44, i32 %45)
  store i32* %46, i32** %4, align 8
  %47 = load i32**, i32*** %2, align 8
  %48 = load i32*, i32** %3, align 8
  %49 = load i32*, i32** %4, align 8
  %50 = call i32 (i32**, i32*, i32*, i32, ...) bitcast (i32 (i32**, i32*, i32*, i32)* @binate_split_select to i32 (i32**, i32*, i32*, i32, ...)*)(i32** %47, i32* %48, i32* %49, i32 1)
  store i32 %50, i32* %5, align 4
  %51 = load i32**, i32*** %2, align 8
  %52 = load i32*, i32** %3, align 8
  %53 = load i32, i32* %5, align 4
  %54 = call i32** (i32**, i32*, i32, ...) bitcast (i32** (i32**, i32*, i32)* @scofactor to i32** (i32**, i32*, i32, ...)*)(i32** %51, i32* %52, i32 %53)
  %55 = call %struct.set_family* @primes_consensus(i32** %54)
  store %struct.set_family* %55, %struct.set_family** %7, align 8
  %56 = load i32**, i32*** %2, align 8
  %57 = load i32*, i32** %4, align 8
  %58 = load i32, i32* %5, align 4
  %59 = call i32** (i32**, i32*, i32, ...) bitcast (i32** (i32**, i32*, i32)* @scofactor to i32** (i32**, i32*, i32, ...)*)(i32** %56, i32* %57, i32 %58)
  %60 = call %struct.set_family* @primes_consensus(i32** %59)
  store %struct.set_family* %60, %struct.set_family** %8, align 8
  %61 = load %struct.set_family*, %struct.set_family** %7, align 8
  %62 = load %struct.set_family*, %struct.set_family** %8, align 8
  %63 = load i32*, i32** %3, align 8
  %64 = load i32*, i32** %4, align 8
  %65 = call %struct.set_family* @primes_consensus_merge(%struct.set_family* %61, %struct.set_family* %62, i32* %63, i32* %64)
  store %struct.set_family* %65, %struct.set_family** %6, align 8
  %66 = load i32*, i32** %3, align 8
  %67 = icmp ne i32* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %39
  %69 = load i32*, i32** %3, align 8
  %70 = bitcast i32* %69 to i8*
  call void @free(i8* %70) #7
  store i32* null, i32** %3, align 8
  br label %71

71:                                               ; preds = %68, %39
  %72 = load i32*, i32** %4, align 8
  %73 = icmp ne i32* %72, null
  br i1 %73, label %74, label %77

74:                                               ; preds = %71
  %75 = load i32*, i32** %4, align 8
  %76 = bitcast i32* %75 to i8*
  call void @free(i8* %76) #7
  store i32* null, i32** %4, align 8
  br label %77

77:                                               ; preds = %74, %71
  %78 = load i32**, i32*** %2, align 8
  %79 = getelementptr inbounds i32*, i32** %78, i64 0
  %80 = load i32*, i32** %79, align 8
  %81 = icmp ne i32* %80, null
  br i1 %81, label %82, label %89

82:                                               ; preds = %77
  %83 = load i32**, i32*** %2, align 8
  %84 = getelementptr inbounds i32*, i32** %83, i64 0
  %85 = load i32*, i32** %84, align 8
  %86 = bitcast i32* %85 to i8*
  call void @free(i8* %86) #7
  %87 = load i32**, i32*** %2, align 8
  %88 = getelementptr inbounds i32*, i32** %87, i64 0
  store i32* null, i32** %88, align 8
  br label %89

89:                                               ; preds = %82, %77
  %90 = load i32**, i32*** %2, align 8
  %91 = icmp ne i32** %90, null
  br i1 %91, label %92, label %95

92:                                               ; preds = %89
  %93 = load i32**, i32*** %2, align 8
  %94 = bitcast i32** %93 to i8*
  call void @free(i8* %94) #7
  store i32** null, i32*** %2, align 8
  br label %95

95:                                               ; preds = %92, %89
  br label %96

96:                                               ; preds = %95, %1
  %97 = load %struct.set_family*, %struct.set_family** %6, align 8
  ret %struct.set_family* %97
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @primes_consensus_special_cases(i32** %0, %struct.set_family** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32**, align 8
  %5 = alloca %struct.set_family**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca %struct.set_family*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32** %0, i32*** %4, align 8
  store %struct.set_family** %1, %struct.set_family*** %5, align 8
  %14 = load i32**, i32*** %4, align 8
  %15 = getelementptr inbounds i32*, i32** %14, i64 0
  %16 = load i32*, i32** %15, align 8
  store i32* %16, i32** %9, align 8
  %17 = load i32**, i32*** %4, align 8
  %18 = getelementptr inbounds i32*, i32** %17, i64 2
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %21, label %43

21:                                               ; preds = %2
  %22 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %23 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 0, i32 %22)
  %24 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %23, %struct.set_family** %24, align 8
  %25 = load i32**, i32*** %4, align 8
  %26 = getelementptr inbounds i32*, i32** %25, i64 0
  %27 = load i32*, i32** %26, align 8
  %28 = icmp ne i32* %27, null
  br i1 %28, label %29, label %36

29:                                               ; preds = %21
  %30 = load i32**, i32*** %4, align 8
  %31 = getelementptr inbounds i32*, i32** %30, i64 0
  %32 = load i32*, i32** %31, align 8
  %33 = bitcast i32* %32 to i8*
  call void @free(i8* %33) #7
  %34 = load i32**, i32*** %4, align 8
  %35 = getelementptr inbounds i32*, i32** %34, i64 0
  store i32* null, i32** %35, align 8
  br label %36

36:                                               ; preds = %29, %21
  %37 = load i32**, i32*** %4, align 8
  %38 = icmp ne i32** %37, null
  br i1 %38, label %39, label %42

39:                                               ; preds = %36
  %40 = load i32**, i32*** %4, align 8
  %41 = bitcast i32** %40 to i8*
  call void @free(i8* %41) #7
  store i32** null, i32*** %4, align 8
  br label %42

42:                                               ; preds = %39, %36
  store i32 1, i32* %3, align 4
  br label %353

43:                                               ; preds = %2
  %44 = load i32**, i32*** %4, align 8
  %45 = getelementptr inbounds i32*, i32** %44, i64 3
  %46 = load i32*, i32** %45, align 8
  %47 = icmp eq i32* %46, null
  br i1 %47, label %48, label %77

48:                                               ; preds = %43
  %49 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %50 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %49)
  %51 = load i32*, i32** %9, align 8
  %52 = load i32*, i32** %9, align 8
  %53 = load i32**, i32*** %4, align 8
  %54 = getelementptr inbounds i32*, i32** %53, i64 2
  %55 = load i32*, i32** %54, align 8
  %56 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %51, i32* %52, i32* %55)
  %57 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %50, i32* %56)
  %58 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %57, %struct.set_family** %58, align 8
  %59 = load i32**, i32*** %4, align 8
  %60 = getelementptr inbounds i32*, i32** %59, i64 0
  %61 = load i32*, i32** %60, align 8
  %62 = icmp ne i32* %61, null
  br i1 %62, label %63, label %70

63:                                               ; preds = %48
  %64 = load i32**, i32*** %4, align 8
  %65 = getelementptr inbounds i32*, i32** %64, i64 0
  %66 = load i32*, i32** %65, align 8
  %67 = bitcast i32* %66 to i8*
  call void @free(i8* %67) #7
  %68 = load i32**, i32*** %4, align 8
  %69 = getelementptr inbounds i32*, i32** %68, i64 0
  store i32* null, i32** %69, align 8
  br label %70

70:                                               ; preds = %63, %48
  %71 = load i32**, i32*** %4, align 8
  %72 = icmp ne i32** %71, null
  br i1 %72, label %73, label %76

73:                                               ; preds = %70
  %74 = load i32**, i32*** %4, align 8
  %75 = bitcast i32** %74 to i8*
  call void @free(i8* %75) #7
  store i32** null, i32*** %4, align 8
  br label %76

76:                                               ; preds = %73, %70
  store i32 1, i32* %3, align 4
  br label %353

77:                                               ; preds = %43
  %78 = load i32**, i32*** %4, align 8
  %79 = getelementptr inbounds i32*, i32** %78, i64 2
  store i32** %79, i32*** %6, align 8
  br label %80

80:                                               ; preds = %114, %77
  %81 = load i32**, i32*** %6, align 8
  %82 = getelementptr inbounds i32*, i32** %81, i32 1
  store i32** %82, i32*** %6, align 8
  %83 = load i32*, i32** %81, align 8
  store i32* %83, i32** %7, align 8
  %84 = icmp ne i32* %83, null
  br i1 %84, label %85, label %115

85:                                               ; preds = %80
  %86 = load i32*, i32** %7, align 8
  %87 = load i32*, i32** %9, align 8
  %88 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @full_row to i32 (i32*, i32*, ...)*)(i32* %86, i32* %87)
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %90, label %114

90:                                               ; preds = %85
  %91 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %92 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %91)
  %93 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %94 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %92, i32* %93)
  %95 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %94, %struct.set_family** %95, align 8
  %96 = load i32**, i32*** %4, align 8
  %97 = getelementptr inbounds i32*, i32** %96, i64 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp ne i32* %98, null
  br i1 %99, label %100, label %107

100:                                              ; preds = %90
  %101 = load i32**, i32*** %4, align 8
  %102 = getelementptr inbounds i32*, i32** %101, i64 0
  %103 = load i32*, i32** %102, align 8
  %104 = bitcast i32* %103 to i8*
  call void @free(i8* %104) #7
  %105 = load i32**, i32*** %4, align 8
  %106 = getelementptr inbounds i32*, i32** %105, i64 0
  store i32* null, i32** %106, align 8
  br label %107

107:                                              ; preds = %100, %90
  %108 = load i32**, i32*** %4, align 8
  %109 = icmp ne i32** %108, null
  br i1 %109, label %110, label %113

110:                                              ; preds = %107
  %111 = load i32**, i32*** %4, align 8
  %112 = bitcast i32** %111 to i8*
  call void @free(i8* %112) #7
  store i32** null, i32*** %4, align 8
  br label %113

113:                                              ; preds = %110, %107
  store i32 1, i32* %3, align 4
  br label %353

114:                                              ; preds = %85
  br label %80

115:                                              ; preds = %80
  %116 = load i32*, i32** %9, align 8
  %117 = getelementptr inbounds i32, i32* %116, i64 0
  %118 = load i32, i32* %117, align 4
  %119 = and i32 %118, 1023
  %120 = mul i32 32, %119
  %121 = icmp ule i32 %120, 32
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  br label %133

123:                                              ; preds = %115
  %124 = load i32*, i32** %9, align 8
  %125 = getelementptr inbounds i32, i32* %124, i64 0
  %126 = load i32, i32* %125, align 4
  %127 = and i32 %126, 1023
  %128 = mul i32 32, %127
  %129 = sub i32 %128, 1
  %130 = lshr i32 %129, 5
  %131 = add i32 %130, 1
  %132 = add i32 %131, 1
  br label %133

133:                                              ; preds = %123, %122
  %134 = phi i32 [ 2, %122 ], [ %132, %123 ]
  %135 = zext i32 %134 to i64
  %136 = mul i64 4, %135
  %137 = call noalias i8* @malloc(i64 %136) #7
  %138 = bitcast i8* %137 to i32*
  %139 = load i32*, i32** %9, align 8
  %140 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %138, i32* %139)
  store i32* %140, i32** %8, align 8
  %141 = load i32**, i32*** %4, align 8
  %142 = getelementptr inbounds i32*, i32** %141, i64 2
  store i32** %142, i32*** %6, align 8
  br label %143

143:                                              ; preds = %182, %133
  %144 = load i32**, i32*** %6, align 8
  %145 = getelementptr inbounds i32*, i32** %144, i32 1
  store i32** %145, i32*** %6, align 8
  %146 = load i32*, i32** %144, align 8
  store i32* %146, i32** %7, align 8
  %147 = icmp ne i32* %146, null
  br i1 %147, label %148, label %183

148:                                              ; preds = %143
  %149 = load i32*, i32** %8, align 8
  %150 = getelementptr inbounds i32, i32* %149, i64 0
  %151 = load i32, i32* %150, align 4
  %152 = and i32 %151, 1023
  store i32 %152, i32* %12, align 4
  %153 = load i32*, i32** %8, align 8
  %154 = getelementptr inbounds i32, i32* %153, i64 0
  %155 = load i32, i32* %154, align 4
  %156 = and i32 %155, -1024
  store i32 %156, i32* %154, align 4
  %157 = load i32, i32* %12, align 4
  %158 = load i32*, i32** %8, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 0
  %160 = load i32, i32* %159, align 4
  %161 = or i32 %160, %157
  store i32 %161, i32* %159, align 4
  br label %162

162:                                              ; preds = %178, %148
  %163 = load i32*, i32** %8, align 8
  %164 = load i32, i32* %12, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i32, i32* %163, i64 %165
  %167 = load i32, i32* %166, align 4
  %168 = load i32*, i32** %7, align 8
  %169 = load i32, i32* %12, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i32, i32* %168, i64 %170
  %172 = load i32, i32* %171, align 4
  %173 = or i32 %167, %172
  %174 = load i32*, i32** %8, align 8
  %175 = load i32, i32* %12, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i32, i32* %174, i64 %176
  store i32 %173, i32* %177, align 4
  br label %178

178:                                              ; preds = %162
  %179 = load i32, i32* %12, align 4
  %180 = add nsw i32 %179, -1
  store i32 %180, i32* %12, align 4
  %181 = icmp sgt i32 %180, 0
  br i1 %181, label %162, label %182

182:                                              ; preds = %178
  br label %143

183:                                              ; preds = %143
  %184 = load i32*, i32** %8, align 8
  %185 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %186 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_equal to i32 (i32*, i32*, ...)*)(i32* %184, i32* %185)
  %187 = icmp ne i32 %186, 0
  br i1 %187, label %290, label %188

188:                                              ; preds = %183
  %189 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %190 = icmp sle i32 %189, 32
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  br label %198

192:                                              ; preds = %188
  %193 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %194 = sub nsw i32 %193, 1
  %195 = ashr i32 %194, 5
  %196 = add nsw i32 %195, 1
  %197 = add nsw i32 %196, 1
  br label %198

198:                                              ; preds = %192, %191
  %199 = phi i32 [ 2, %191 ], [ %197, %192 ]
  %200 = sext i32 %199 to i64
  %201 = mul i64 4, %200
  %202 = call noalias i8* @malloc(i64 %201) #7
  %203 = bitcast i8* %202 to i32*
  %204 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %205 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %203, i32 %204)
  store i32* %205, i32** %7, align 8
  %206 = load i32*, i32** %7, align 8
  %207 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %208 = load i32*, i32** %8, align 8
  %209 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %206, i32* %207, i32* %208)
  %210 = load i32*, i32** %9, align 8
  %211 = load i32*, i32** %9, align 8
  %212 = load i32*, i32** %7, align 8
  %213 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %210, i32* %211, i32* %212)
  %214 = load i32*, i32** %7, align 8
  %215 = icmp ne i32* %214, null
  br i1 %215, label %216, label %219

216:                                              ; preds = %198
  %217 = load i32*, i32** %7, align 8
  %218 = bitcast i32* %217 to i8*
  call void @free(i8* %218) #7
  store i32* null, i32** %7, align 8
  br label %219

219:                                              ; preds = %216, %198
  %220 = load i32**, i32*** %4, align 8
  %221 = call %struct.set_family* @primes_consensus(i32** %220)
  store %struct.set_family* %221, %struct.set_family** %11, align 8
  %222 = load %struct.set_family*, %struct.set_family** %11, align 8
  %223 = getelementptr inbounds %struct.set_family, %struct.set_family* %222, i32 0, i32 5
  %224 = load i32*, i32** %223, align 8
  store i32* %224, i32** %7, align 8
  %225 = load i32*, i32** %7, align 8
  %226 = load %struct.set_family*, %struct.set_family** %11, align 8
  %227 = getelementptr inbounds %struct.set_family, %struct.set_family* %226, i32 0, i32 3
  %228 = load i32, i32* %227, align 4
  %229 = load %struct.set_family*, %struct.set_family** %11, align 8
  %230 = getelementptr inbounds %struct.set_family, %struct.set_family* %229, i32 0, i32 0
  %231 = load i32, i32* %230, align 8
  %232 = mul nsw i32 %228, %231
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds i32, i32* %225, i64 %233
  store i32* %234, i32** %10, align 8
  br label %235

235:                                              ; preds = %274, %219
  %236 = load i32*, i32** %7, align 8
  %237 = load i32*, i32** %10, align 8
  %238 = icmp ult i32* %236, %237
  br i1 %238, label %239, label %281

239:                                              ; preds = %235
  %240 = load i32*, i32** %7, align 8
  %241 = getelementptr inbounds i32, i32* %240, i64 0
  %242 = load i32, i32* %241, align 4
  %243 = and i32 %242, 1023
  store i32 %243, i32* %13, align 4
  %244 = load i32*, i32** %7, align 8
  %245 = getelementptr inbounds i32, i32* %244, i64 0
  %246 = load i32, i32* %245, align 4
  %247 = and i32 %246, -1024
  store i32 %247, i32* %245, align 4
  %248 = load i32, i32* %13, align 4
  %249 = load i32*, i32** %7, align 8
  %250 = getelementptr inbounds i32, i32* %249, i64 0
  %251 = load i32, i32* %250, align 4
  %252 = or i32 %251, %248
  store i32 %252, i32* %250, align 4
  br label %253

253:                                              ; preds = %269, %239
  %254 = load i32*, i32** %7, align 8
  %255 = load i32, i32* %13, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds i32, i32* %254, i64 %256
  %258 = load i32, i32* %257, align 4
  %259 = load i32*, i32** %8, align 8
  %260 = load i32, i32* %13, align 4
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds i32, i32* %259, i64 %261
  %263 = load i32, i32* %262, align 4
  %264 = and i32 %258, %263
  %265 = load i32*, i32** %7, align 8
  %266 = load i32, i32* %13, align 4
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds i32, i32* %265, i64 %267
  store i32 %264, i32* %268, align 4
  br label %269

269:                                              ; preds = %253
  %270 = load i32, i32* %13, align 4
  %271 = add nsw i32 %270, -1
  store i32 %271, i32* %13, align 4
  %272 = icmp sgt i32 %271, 0
  br i1 %272, label %253, label %273

273:                                              ; preds = %269
  br label %274

274:                                              ; preds = %273
  %275 = load %struct.set_family*, %struct.set_family** %11, align 8
  %276 = getelementptr inbounds %struct.set_family, %struct.set_family* %275, i32 0, i32 0
  %277 = load i32, i32* %276, align 8
  %278 = load i32*, i32** %7, align 8
  %279 = sext i32 %277 to i64
  %280 = getelementptr inbounds i32, i32* %278, i64 %279
  store i32* %280, i32** %7, align 8
  br label %235

281:                                              ; preds = %235
  %282 = load %struct.set_family*, %struct.set_family** %11, align 8
  %283 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %282, %struct.set_family** %283, align 8
  %284 = load i32*, i32** %8, align 8
  %285 = icmp ne i32* %284, null
  br i1 %285, label %286, label %289

286:                                              ; preds = %281
  %287 = load i32*, i32** %8, align 8
  %288 = bitcast i32* %287 to i8*
  call void @free(i8* %288) #7
  store i32* null, i32** %8, align 8
  br label %289

289:                                              ; preds = %286, %281
  store i32 1, i32* %3, align 4
  br label %353

290:                                              ; preds = %183
  %291 = load i32*, i32** %8, align 8
  %292 = icmp ne i32* %291, null
  br i1 %292, label %293, label %296

293:                                              ; preds = %290
  %294 = load i32*, i32** %8, align 8
  %295 = bitcast i32* %294 to i8*
  call void @free(i8* %295) #7
  store i32* null, i32** %8, align 8
  br label %296

296:                                              ; preds = %293, %290
  %297 = load i32**, i32*** %4, align 8
  call void (i32**, ...) bitcast (void (i32**)* @massive_count to void (i32**, ...)*)(i32** %297)
  %298 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 4), align 8
  %299 = icmp eq i32 %298, 1
  br i1 %299, label %300, label %324

300:                                              ; preds = %296
  %301 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %302 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %301)
  %303 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %304 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %302, i32* %303)
  %305 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %304, %struct.set_family** %305, align 8
  %306 = load i32**, i32*** %4, align 8
  %307 = getelementptr inbounds i32*, i32** %306, i64 0
  %308 = load i32*, i32** %307, align 8
  %309 = icmp ne i32* %308, null
  br i1 %309, label %310, label %317

310:                                              ; preds = %300
  %311 = load i32**, i32*** %4, align 8
  %312 = getelementptr inbounds i32*, i32** %311, i64 0
  %313 = load i32*, i32** %312, align 8
  %314 = bitcast i32* %313 to i8*
  call void @free(i8* %314) #7
  %315 = load i32**, i32*** %4, align 8
  %316 = getelementptr inbounds i32*, i32** %315, i64 0
  store i32* null, i32** %316, align 8
  br label %317

317:                                              ; preds = %310, %300
  %318 = load i32**, i32*** %4, align 8
  %319 = icmp ne i32** %318, null
  br i1 %319, label %320, label %323

320:                                              ; preds = %317
  %321 = load i32**, i32*** %4, align 8
  %322 = bitcast i32** %321 to i8*
  call void @free(i8* %322) #7
  store i32** null, i32*** %4, align 8
  br label %323

323:                                              ; preds = %320, %317
  store i32 1, i32* %3, align 4
  br label %353

324:                                              ; preds = %296
  %325 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 5), align 4
  %326 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 4), align 8
  %327 = icmp eq i32 %325, %326
  br i1 %327, label %328, label %352

328:                                              ; preds = %324
  %329 = load i32**, i32*** %4, align 8
  %330 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @cubeunlist to %struct.set_family* (i32**, ...)*)(i32** %329)
  store %struct.set_family* %330, %struct.set_family** %11, align 8
  %331 = load %struct.set_family*, %struct.set_family** %11, align 8
  %332 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %331)
  %333 = load %struct.set_family**, %struct.set_family*** %5, align 8
  store %struct.set_family* %332, %struct.set_family** %333, align 8
  %334 = load i32**, i32*** %4, align 8
  %335 = getelementptr inbounds i32*, i32** %334, i64 0
  %336 = load i32*, i32** %335, align 8
  %337 = icmp ne i32* %336, null
  br i1 %337, label %338, label %345

338:                                              ; preds = %328
  %339 = load i32**, i32*** %4, align 8
  %340 = getelementptr inbounds i32*, i32** %339, i64 0
  %341 = load i32*, i32** %340, align 8
  %342 = bitcast i32* %341 to i8*
  call void @free(i8* %342) #7
  %343 = load i32**, i32*** %4, align 8
  %344 = getelementptr inbounds i32*, i32** %343, i64 0
  store i32* null, i32** %344, align 8
  br label %345

345:                                              ; preds = %338, %328
  %346 = load i32**, i32*** %4, align 8
  %347 = icmp ne i32** %346, null
  br i1 %347, label %348, label %351

348:                                              ; preds = %345
  %349 = load i32**, i32*** %4, align 8
  %350 = bitcast i32** %349 to i8*
  call void @free(i8* %350) #7
  store i32** null, i32*** %4, align 8
  br label %351

351:                                              ; preds = %348, %345
  store i32 1, i32* %3, align 4
  br label %353

352:                                              ; preds = %324
  store i32 2, i32* %3, align 4
  br label %353

353:                                              ; preds = %352, %351, %323, %289, %113, %76, %42
  %354 = load i32, i32* %3, align 4
  ret i32 %354
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.set_family* @primes_consensus_merge(%struct.set_family* %0, %struct.set_family* %1, i32* %2, i32* %3) #0 {
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca %struct.set_family*, align 8
  %15 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %5, align 8
  store %struct.set_family* %1, %struct.set_family** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %16 = load %struct.set_family*, %struct.set_family** %5, align 8
  %17 = load i32*, i32** %7, align 8
  %18 = call %struct.set_family* @and_with_cofactor(%struct.set_family* %16, i32* %17)
  store %struct.set_family* %18, %struct.set_family** %5, align 8
  %19 = load %struct.set_family*, %struct.set_family** %6, align 8
  %20 = load i32*, i32** %8, align 8
  %21 = call %struct.set_family* @and_with_cofactor(%struct.set_family* %19, i32* %20)
  store %struct.set_family* %21, %struct.set_family** %6, align 8
  %22 = load %struct.set_family*, %struct.set_family** %5, align 8
  %23 = getelementptr inbounds %struct.set_family, %struct.set_family* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 500, i32 %24)
  store %struct.set_family* %25, %struct.set_family** %14, align 8
  %26 = load %struct.set_family*, %struct.set_family** %14, align 8
  %27 = getelementptr inbounds %struct.set_family, %struct.set_family* %26, i32 0, i32 5
  %28 = load i32*, i32** %27, align 8
  store i32* %28, i32** %13, align 8
  %29 = load %struct.set_family*, %struct.set_family** %5, align 8
  %30 = load %struct.set_family*, %struct.set_family** %6, align 8
  %31 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_join to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %29, %struct.set_family* %30)
  %32 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %31)
  store %struct.set_family* %32, %struct.set_family** %15, align 8
  %33 = load %struct.set_family*, %struct.set_family** %5, align 8
  %34 = getelementptr inbounds %struct.set_family, %struct.set_family* %33, i32 0, i32 5
  %35 = load i32*, i32** %34, align 8
  store i32* %35, i32** %9, align 8
  %36 = load i32*, i32** %9, align 8
  %37 = load %struct.set_family*, %struct.set_family** %5, align 8
  %38 = getelementptr inbounds %struct.set_family, %struct.set_family* %37, i32 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = load %struct.set_family*, %struct.set_family** %5, align 8
  %41 = getelementptr inbounds %struct.set_family, %struct.set_family* %40, i32 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = mul nsw i32 %39, %42
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %36, i64 %44
  store i32* %45, i32** %11, align 8
  br label %46

46:                                               ; preds = %114, %4
  %47 = load i32*, i32** %9, align 8
  %48 = load i32*, i32** %11, align 8
  %49 = icmp ult i32* %47, %48
  br i1 %49, label %50, label %121

50:                                               ; preds = %46
  %51 = load %struct.set_family*, %struct.set_family** %6, align 8
  %52 = getelementptr inbounds %struct.set_family, %struct.set_family* %51, i32 0, i32 5
  %53 = load i32*, i32** %52, align 8
  store i32* %53, i32** %10, align 8
  %54 = load i32*, i32** %10, align 8
  %55 = load %struct.set_family*, %struct.set_family** %6, align 8
  %56 = getelementptr inbounds %struct.set_family, %struct.set_family* %55, i32 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = load %struct.set_family*, %struct.set_family** %6, align 8
  %59 = getelementptr inbounds %struct.set_family, %struct.set_family* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = mul nsw i32 %57, %60
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %54, i64 %62
  store i32* %63, i32** %12, align 8
  br label %64

64:                                               ; preds = %106, %50
  %65 = load i32*, i32** %10, align 8
  %66 = load i32*, i32** %12, align 8
  %67 = icmp ult i32* %65, %66
  br i1 %67, label %68, label %113

68:                                               ; preds = %64
  %69 = load i32*, i32** %9, align 8
  %70 = load i32*, i32** %10, align 8
  %71 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @cdist01 to i32 (i32*, i32*, ...)*)(i32* %69, i32* %70)
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %105

73:                                               ; preds = %68
  %74 = load i32*, i32** %13, align 8
  %75 = load i32*, i32** %9, align 8
  %76 = load i32*, i32** %10, align 8
  call void (i32*, i32*, i32*, ...) bitcast (void (i32*, i32*, i32*)* @consensus to void (i32*, i32*, i32*, ...)*)(i32* %74, i32* %75, i32* %76)
  %77 = load %struct.set_family*, %struct.set_family** %14, align 8
  %78 = getelementptr inbounds %struct.set_family, %struct.set_family* %77, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = load %struct.set_family*, %struct.set_family** %14, align 8
  %82 = getelementptr inbounds %struct.set_family, %struct.set_family* %81, i32 0, i32 2
  %83 = load i32, i32* %82, align 8
  %84 = icmp sge i32 %80, %83
  br i1 %84, label %85, label %97

85:                                               ; preds = %73
  %86 = load %struct.set_family*, %struct.set_family** %15, align 8
  %87 = load %struct.set_family*, %struct.set_family** %14, align 8
  %88 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %87)
  %89 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_union to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %86, %struct.set_family* %88)
  store %struct.set_family* %89, %struct.set_family** %15, align 8
  %90 = load %struct.set_family*, %struct.set_family** %5, align 8
  %91 = getelementptr inbounds %struct.set_family, %struct.set_family* %90, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 500, i32 %92)
  store %struct.set_family* %93, %struct.set_family** %14, align 8
  %94 = load %struct.set_family*, %struct.set_family** %14, align 8
  %95 = getelementptr inbounds %struct.set_family, %struct.set_family* %94, i32 0, i32 5
  %96 = load i32*, i32** %95, align 8
  store i32* %96, i32** %13, align 8
  br label %104

97:                                               ; preds = %73
  %98 = load %struct.set_family*, %struct.set_family** %14, align 8
  %99 = getelementptr inbounds %struct.set_family, %struct.set_family* %98, i32 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = load i32*, i32** %13, align 8
  %102 = sext i32 %100 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  store i32* %103, i32** %13, align 8
  br label %104

104:                                              ; preds = %97, %85
  br label %105

105:                                              ; preds = %104, %68
  br label %106

106:                                              ; preds = %105
  %107 = load %struct.set_family*, %struct.set_family** %6, align 8
  %108 = getelementptr inbounds %struct.set_family, %struct.set_family* %107, i32 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = load i32*, i32** %10, align 8
  %111 = sext i32 %109 to i64
  %112 = getelementptr inbounds i32, i32* %110, i64 %111
  store i32* %112, i32** %10, align 8
  br label %64

113:                                              ; preds = %64
  br label %114

114:                                              ; preds = %113
  %115 = load %struct.set_family*, %struct.set_family** %5, align 8
  %116 = getelementptr inbounds %struct.set_family, %struct.set_family* %115, i32 0, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = load i32*, i32** %9, align 8
  %119 = sext i32 %117 to i64
  %120 = getelementptr inbounds i32, i32* %118, i64 %119
  store i32* %120, i32** %9, align 8
  br label %46

121:                                              ; preds = %46
  %122 = load %struct.set_family*, %struct.set_family** %5, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %122)
  %123 = load %struct.set_family*, %struct.set_family** %6, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %123)
  %124 = load %struct.set_family*, %struct.set_family** %15, align 8
  %125 = load %struct.set_family*, %struct.set_family** %14, align 8
  %126 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %125)
  %127 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_union to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %124, %struct.set_family* %126)
  store %struct.set_family* %127, %struct.set_family** %15, align 8
  %128 = load %struct.set_family*, %struct.set_family** %15, align 8
  ret %struct.set_family* %128
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.set_family* @and_with_cofactor(%struct.set_family* %0, i32* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32* %1, i32** %4, align 8
  %8 = load %struct.set_family*, %struct.set_family** %3, align 8
  %9 = getelementptr inbounds %struct.set_family, %struct.set_family* %8, i32 0, i32 5
  %10 = load i32*, i32** %9, align 8
  store i32* %10, i32** %6, align 8
  %11 = load i32*, i32** %6, align 8
  %12 = load %struct.set_family*, %struct.set_family** %3, align 8
  %13 = getelementptr inbounds %struct.set_family, %struct.set_family* %12, i32 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = load %struct.set_family*, %struct.set_family** %3, align 8
  %16 = getelementptr inbounds %struct.set_family, %struct.set_family* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = mul nsw i32 %14, %17
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %11, i64 %19
  store i32* %20, i32** %5, align 8
  br label %21

21:                                               ; preds = %75, %2
  %22 = load i32*, i32** %6, align 8
  %23 = load i32*, i32** %5, align 8
  %24 = icmp ult i32* %22, %23
  br i1 %24, label %25, label %82

25:                                               ; preds = %21
  %26 = load i32*, i32** %6, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 0
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 1023
  store i32 %29, i32* %7, align 4
  %30 = load i32*, i32** %6, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 0
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, -1024
  store i32 %33, i32* %31, align 4
  %34 = load i32, i32* %7, align 4
  %35 = load i32*, i32** %6, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 0
  %37 = load i32, i32* %36, align 4
  %38 = or i32 %37, %34
  store i32 %38, i32* %36, align 4
  br label %39

39:                                               ; preds = %55, %25
  %40 = load i32*, i32** %6, align 8
  %41 = load i32, i32* %7, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %40, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = load i32*, i32** %4, align 8
  %46 = load i32, i32* %7, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i32, i32* %45, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %44, %49
  %51 = load i32*, i32** %6, align 8
  %52 = load i32, i32* %7, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, i32* %51, i64 %53
  store i32 %50, i32* %54, align 4
  br label %55

55:                                               ; preds = %39
  %56 = load i32, i32* %7, align 4
  %57 = add nsw i32 %56, -1
  store i32 %57, i32* %7, align 4
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %39, label %59

59:                                               ; preds = %55
  %60 = load i32*, i32** %6, align 8
  %61 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %62 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @cdist to i32 (i32*, i32*, ...)*)(i32* %60, i32* %61)
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %69

64:                                               ; preds = %59
  %65 = load i32*, i32** %6, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 0
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, -8193
  store i32 %68, i32* %66, align 4
  br label %74

69:                                               ; preds = %59
  %70 = load i32*, i32** %6, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 0
  %72 = load i32, i32* %71, align 4
  %73 = or i32 %72, 8192
  store i32 %73, i32* %71, align 4
  br label %74

74:                                               ; preds = %69, %64
  br label %75

75:                                               ; preds = %74
  %76 = load %struct.set_family*, %struct.set_family** %3, align 8
  %77 = getelementptr inbounds %struct.set_family, %struct.set_family* %76, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = load i32*, i32** %6, align 8
  %80 = sext i32 %78 to i64
  %81 = getelementptr inbounds i32, i32* %79, i64 %80
  store i32* %81, i32** %6, align 8
  br label %21

82:                                               ; preds = %21
  %83 = load %struct.set_family*, %struct.set_family** %3, align 8
  %84 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_inactive to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %83)
  ret %struct.set_family* %84
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @reduce(%struct.set_family* %0, %struct.set_family* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32**, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  %9 = load i32, i32* @use_random_order, align 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = load %struct.set_family*, %struct.set_family** %3, align 8
  %13 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @random_order to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %12)
  store %struct.set_family* %13, %struct.set_family** %3, align 8
  br label %29

14:                                               ; preds = %2
  %15 = load i32, i32* @toggle, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %14
  %18 = load %struct.set_family*, %struct.set_family** %3, align 8
  %19 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sort_reduce to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %18)
  br label %23

20:                                               ; preds = %14
  %21 = load %struct.set_family*, %struct.set_family** %3, align 8
  %22 = call %struct.set_family* (%struct.set_family*, i32 (...)*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32 (...)*)* @mini_sort to %struct.set_family* (%struct.set_family*, i32 (...)*, ...)*)(%struct.set_family* %21, i32 (...)* bitcast (i32 (i32**, i32**)* @descend to i32 (...)*))
  br label %23

23:                                               ; preds = %20, %17
  %24 = phi %struct.set_family* [ %19, %17 ], [ %22, %20 ]
  store %struct.set_family* %24, %struct.set_family** %3, align 8
  %25 = load i32, i32* @toggle, align 4
  %26 = icmp ne i32 %25, 0
  %27 = xor i1 %26, true
  %28 = zext i1 %27 to i32
  store i32 %28, i32* @toggle, align 4
  br label %29

29:                                               ; preds = %23, %11
  %30 = load %struct.set_family*, %struct.set_family** %3, align 8
  %31 = load %struct.set_family*, %struct.set_family** %4, align 8
  %32 = call i32** (%struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*)* @cube2list to i32** (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %30, %struct.set_family* %31)
  store i32** %32, i32*** %8, align 8
  %33 = load %struct.set_family*, %struct.set_family** %3, align 8
  %34 = getelementptr inbounds %struct.set_family, %struct.set_family* %33, i32 0, i32 5
  %35 = load i32*, i32** %34, align 8
  store i32* %35, i32** %6, align 8
  %36 = load i32*, i32** %6, align 8
  %37 = load %struct.set_family*, %struct.set_family** %3, align 8
  %38 = getelementptr inbounds %struct.set_family, %struct.set_family* %37, i32 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = load %struct.set_family*, %struct.set_family** %3, align 8
  %41 = getelementptr inbounds %struct.set_family, %struct.set_family* %40, i32 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = mul nsw i32 %39, %42
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %36, i64 %44
  store i32* %45, i32** %5, align 8
  br label %46

46:                                               ; preds = %108, %29
  %47 = load i32*, i32** %6, align 8
  %48 = load i32*, i32** %5, align 8
  %49 = icmp ult i32* %47, %48
  br i1 %49, label %50, label %115

50:                                               ; preds = %46
  %51 = load i32**, i32*** %8, align 8
  %52 = load i32*, i32** %6, align 8
  %53 = call i32* @reduce_cube(i32** %51, i32* %52)
  store i32* %53, i32** %7, align 8
  %54 = load i32*, i32** %7, align 8
  %55 = load i32*, i32** %6, align 8
  %56 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_equal to i32 (i32*, i32*, ...)*)(i32* %54, i32* %55)
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %67

58:                                               ; preds = %50
  %59 = load i32*, i32** %6, align 8
  %60 = getelementptr inbounds i32, i32* %59, i64 0
  %61 = load i32, i32* %60, align 4
  %62 = or i32 %61, 8192
  store i32 %62, i32* %60, align 4
  %63 = load i32*, i32** %6, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 0
  %65 = load i32, i32* %64, align 4
  %66 = or i32 %65, 32768
  store i32 %66, i32* %64, align 4
  br label %101

67:                                               ; preds = %50
  %68 = load i32, i32* @debug, align 4
  %69 = and i32 %68, 64
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %71, label %79

71:                                               ; preds = %67
  %72 = load i32*, i32** %6, align 8
  %73 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %72)
  %74 = load i32*, i32** %7, align 8
  %75 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc2 to i8* (i32*, ...)*)(i32* %74)
  %76 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %77 = call i8* @util_print_time(i64 %76)
  %78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.485, i64 0, i64 0), i8* %73, i8* %75, i8* %77)
  br label %79

79:                                               ; preds = %71, %67
  %80 = load i32*, i32** %6, align 8
  %81 = load i32*, i32** %7, align 8
  %82 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %80, i32* %81)
  %83 = load i32*, i32** %6, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 0
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, -32769
  store i32 %86, i32* %84, align 4
  %87 = load i32*, i32** %7, align 8
  %88 = call i32 (i32*, ...) bitcast (i32 (i32*)* @setp_empty to i32 (i32*, ...)*)(i32* %87)
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %90, label %95

90:                                               ; preds = %79
  %91 = load i32*, i32** %6, align 8
  %92 = getelementptr inbounds i32, i32* %91, i64 0
  %93 = load i32, i32* %92, align 4
  %94 = and i32 %93, -8193
  store i32 %94, i32* %92, align 4
  br label %100

95:                                               ; preds = %79
  %96 = load i32*, i32** %6, align 8
  %97 = getelementptr inbounds i32, i32* %96, i64 0
  %98 = load i32, i32* %97, align 4
  %99 = or i32 %98, 8192
  store i32 %99, i32* %97, align 4
  br label %100

100:                                              ; preds = %95, %90
  br label %101

101:                                              ; preds = %100, %58
  %102 = load i32*, i32** %7, align 8
  %103 = icmp ne i32* %102, null
  br i1 %103, label %104, label %107

104:                                              ; preds = %101
  %105 = load i32*, i32** %7, align 8
  %106 = bitcast i32* %105 to i8*
  call void @free(i8* %106) #7
  store i32* null, i32** %7, align 8
  br label %107

107:                                              ; preds = %104, %101
  br label %108

108:                                              ; preds = %107
  %109 = load %struct.set_family*, %struct.set_family** %3, align 8
  %110 = getelementptr inbounds %struct.set_family, %struct.set_family* %109, i32 0, i32 0
  %111 = load i32, i32* %110, align 8
  %112 = load i32*, i32** %6, align 8
  %113 = sext i32 %111 to i64
  %114 = getelementptr inbounds i32, i32* %112, i64 %113
  store i32* %114, i32** %6, align 8
  br label %46

115:                                              ; preds = %46
  %116 = load i32**, i32*** %8, align 8
  %117 = getelementptr inbounds i32*, i32** %116, i64 0
  %118 = load i32*, i32** %117, align 8
  %119 = icmp ne i32* %118, null
  br i1 %119, label %120, label %127

120:                                              ; preds = %115
  %121 = load i32**, i32*** %8, align 8
  %122 = getelementptr inbounds i32*, i32** %121, i64 0
  %123 = load i32*, i32** %122, align 8
  %124 = bitcast i32* %123 to i8*
  call void @free(i8* %124) #7
  %125 = load i32**, i32*** %8, align 8
  %126 = getelementptr inbounds i32*, i32** %125, i64 0
  store i32* null, i32** %126, align 8
  br label %127

127:                                              ; preds = %120, %115
  %128 = load i32**, i32*** %8, align 8
  %129 = icmp ne i32** %128, null
  br i1 %129, label %130, label %133

130:                                              ; preds = %127
  %131 = load i32**, i32*** %8, align 8
  %132 = bitcast i32** %131 to i8*
  call void @free(i8* %132) #7
  store i32** null, i32*** %8, align 8
  br label %133

133:                                              ; preds = %130, %127
  %134 = load %struct.set_family*, %struct.set_family** %3, align 8
  %135 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_inactive to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %134)
  ret %struct.set_family* %135
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @reduce_cube(i32** %0, i32* %1) #0 {
  %3 = alloca i32**, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  store i32** %0, i32*** %3, align 8
  store i32* %1, i32** %4, align 8
  %6 = load i32**, i32*** %3, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32** (i32**, i32*, ...) bitcast (i32** (i32**, i32*)* @cofactor to i32** (i32**, i32*, ...)*)(i32** %6, i32* %7)
  %9 = call i32* @sccc(i32** %8)
  store i32* %9, i32** %5, align 8
  %10 = load i32*, i32** %5, align 8
  %11 = load i32*, i32** %5, align 8
  %12 = load i32*, i32** %4, align 8
  %13 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_and to i32* (i32*, i32*, i32*, ...)*)(i32* %10, i32* %11, i32* %12)
  ret i32* %13
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @sccc(i32** %0) #0 {
  %2 = alloca i32**, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  store i32** %0, i32*** %2, align 8
  %7 = load i32, i32* @debug, align 4
  %8 = and i32 %7, 128
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = load i32**, i32*** %2, align 8
  %12 = load i32, i32* @sccc.sccc_level, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* @sccc.sccc_level, align 4
  call void (i32**, i8*, i32, ...) bitcast (void (i32**, i8*, i32)* @debug_print to void (i32**, i8*, i32, ...)*)(i32** %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.486, i64 0, i64 0), i32 %12)
  br label %14

14:                                               ; preds = %10, %1
  %15 = load i32**, i32*** %2, align 8
  %16 = call i32 @sccc_special_cases(i32** %15, i32** %3)
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %18, label %88

18:                                               ; preds = %14
  %19 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %20 = icmp sle i32 %19, 32
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  br label %28

22:                                               ; preds = %18
  %23 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %24 = sub nsw i32 %23, 1
  %25 = ashr i32 %24, 5
  %26 = add nsw i32 %25, 1
  %27 = add nsw i32 %26, 1
  br label %28

28:                                               ; preds = %22, %21
  %29 = phi i32 [ 2, %21 ], [ %27, %22 ]
  %30 = sext i32 %29 to i64
  %31 = mul i64 4, %30
  %32 = call noalias i8* @malloc(i64 %31) #7
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %35 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %33, i32 %34)
  store i32* %35, i32** %4, align 8
  %36 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %37 = icmp sle i32 %36, 32
  br i1 %37, label %38, label %39

38:                                               ; preds = %28
  br label %45

39:                                               ; preds = %28
  %40 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %41 = sub nsw i32 %40, 1
  %42 = ashr i32 %41, 5
  %43 = add nsw i32 %42, 1
  %44 = add nsw i32 %43, 1
  br label %45

45:                                               ; preds = %39, %38
  %46 = phi i32 [ 2, %38 ], [ %44, %39 ]
  %47 = sext i32 %46 to i64
  %48 = mul i64 4, %47
  %49 = call noalias i8* @malloc(i64 %48) #7
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %52 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %50, i32 %51)
  store i32* %52, i32** %5, align 8
  %53 = load i32**, i32*** %2, align 8
  %54 = load i32*, i32** %4, align 8
  %55 = load i32*, i32** %5, align 8
  %56 = call i32 (i32**, i32*, i32*, i32, ...) bitcast (i32 (i32**, i32*, i32*, i32)* @binate_split_select to i32 (i32**, i32*, i32*, i32, ...)*)(i32** %53, i32* %54, i32* %55, i32 128)
  store i32 %56, i32* %6, align 4
  %57 = load i32**, i32*** %2, align 8
  %58 = load i32*, i32** %4, align 8
  %59 = load i32, i32* %6, align 4
  %60 = call i32** (i32**, i32*, i32, ...) bitcast (i32** (i32**, i32*, i32)* @scofactor to i32** (i32**, i32*, i32, ...)*)(i32** %57, i32* %58, i32 %59)
  %61 = call i32* @sccc(i32** %60)
  %62 = load i32**, i32*** %2, align 8
  %63 = load i32*, i32** %5, align 8
  %64 = load i32, i32* %6, align 4
  %65 = call i32** (i32**, i32*, i32, ...) bitcast (i32** (i32**, i32*, i32)* @scofactor to i32** (i32**, i32*, i32, ...)*)(i32** %62, i32* %63, i32 %64)
  %66 = call i32* @sccc(i32** %65)
  %67 = load i32*, i32** %4, align 8
  %68 = load i32*, i32** %5, align 8
  %69 = call i32* @sccc_merge(i32* %61, i32* %66, i32* %67, i32* %68)
  store i32* %69, i32** %3, align 8
  %70 = load i32**, i32*** %2, align 8
  %71 = getelementptr inbounds i32*, i32** %70, i64 0
  %72 = load i32*, i32** %71, align 8
  %73 = icmp ne i32* %72, null
  br i1 %73, label %74, label %81

74:                                               ; preds = %45
  %75 = load i32**, i32*** %2, align 8
  %76 = getelementptr inbounds i32*, i32** %75, i64 0
  %77 = load i32*, i32** %76, align 8
  %78 = bitcast i32* %77 to i8*
  call void @free(i8* %78) #7
  %79 = load i32**, i32*** %2, align 8
  %80 = getelementptr inbounds i32*, i32** %79, i64 0
  store i32* null, i32** %80, align 8
  br label %81

81:                                               ; preds = %74, %45
  %82 = load i32**, i32*** %2, align 8
  %83 = icmp ne i32** %82, null
  br i1 %83, label %84, label %87

84:                                               ; preds = %81
  %85 = load i32**, i32*** %2, align 8
  %86 = bitcast i32** %85 to i8*
  call void @free(i8* %86) #7
  store i32** null, i32*** %2, align 8
  br label %87

87:                                               ; preds = %84, %81
  br label %88

88:                                               ; preds = %87, %14
  %89 = load i32, i32* @debug, align 4
  %90 = and i32 %89, 128
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = load i32, i32* @sccc.sccc_level, align 4
  %94 = add nsw i32 %93, -1
  store i32 %94, i32* @sccc.sccc_level, align 4
  %95 = load i32*, i32** %3, align 8
  %96 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %95)
  %97 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.487, i64 0, i64 0), i32 %94, i8* %96)
  br label %98

98:                                               ; preds = %92, %88
  %99 = load i32*, i32** %3, align 8
  ret i32* %99
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sccc_special_cases(i32** %0, i32** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32**, align 8
  %12 = alloca i32**, align 8
  %13 = alloca i32, align 4
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  %14 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %15 = getelementptr inbounds i32*, i32** %14, i64 1
  %16 = load i32*, i32** %15, align 8
  store i32* %16, i32** %8, align 8
  %17 = load i32**, i32*** %4, align 8
  %18 = getelementptr inbounds i32*, i32** %17, i64 0
  %19 = load i32*, i32** %18, align 8
  store i32* %19, i32** %10, align 8
  %20 = load i32**, i32*** %4, align 8
  %21 = getelementptr inbounds i32*, i32** %20, i64 2
  %22 = load i32*, i32** %21, align 8
  %23 = icmp eq i32* %22, null
  br i1 %23, label %24, label %69

24:                                               ; preds = %2
  %25 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %26 = getelementptr inbounds i32, i32* %25, i64 0
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 1023
  %29 = mul i32 32, %28
  %30 = icmp ule i32 %29, 32
  br i1 %30, label %31, label %32

31:                                               ; preds = %24
  br label %42

32:                                               ; preds = %24
  %33 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 0
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 1023
  %37 = mul i32 32, %36
  %38 = sub i32 %37, 1
  %39 = lshr i32 %38, 5
  %40 = add i32 %39, 1
  %41 = add i32 %40, 1
  br label %42

42:                                               ; preds = %32, %31
  %43 = phi i32 [ 2, %31 ], [ %41, %32 ]
  %44 = zext i32 %43 to i64
  %45 = mul i64 4, %44
  %46 = call noalias i8* @malloc(i64 %45) #7
  %47 = bitcast i8* %46 to i32*
  %48 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %49 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %47, i32* %48)
  %50 = load i32**, i32*** %5, align 8
  store i32* %49, i32** %50, align 8
  %51 = load i32**, i32*** %4, align 8
  %52 = getelementptr inbounds i32*, i32** %51, i64 0
  %53 = load i32*, i32** %52, align 8
  %54 = icmp ne i32* %53, null
  br i1 %54, label %55, label %62

55:                                               ; preds = %42
  %56 = load i32**, i32*** %4, align 8
  %57 = getelementptr inbounds i32*, i32** %56, i64 0
  %58 = load i32*, i32** %57, align 8
  %59 = bitcast i32* %58 to i8*
  call void @free(i8* %59) #7
  %60 = load i32**, i32*** %4, align 8
  %61 = getelementptr inbounds i32*, i32** %60, i64 0
  store i32* null, i32** %61, align 8
  br label %62

62:                                               ; preds = %55, %42
  %63 = load i32**, i32*** %4, align 8
  %64 = icmp ne i32** %63, null
  br i1 %64, label %65, label %68

65:                                               ; preds = %62
  %66 = load i32**, i32*** %4, align 8
  %67 = bitcast i32** %66 to i8*
  call void @free(i8* %67) #7
  store i32** null, i32*** %4, align 8
  br label %68

68:                                               ; preds = %65, %62
  store i32 1, i32* %3, align 4
  br label %468

69:                                               ; preds = %2
  %70 = load i32**, i32*** %4, align 8
  %71 = getelementptr inbounds i32*, i32** %70, i64 2
  store i32** %71, i32*** %6, align 8
  br label %72

72:                                               ; preds = %119, %69
  %73 = load i32**, i32*** %6, align 8
  %74 = getelementptr inbounds i32*, i32** %73, i32 1
  store i32** %74, i32*** %6, align 8
  %75 = load i32*, i32** %73, align 8
  store i32* %75, i32** %7, align 8
  %76 = icmp ne i32* %75, null
  br i1 %76, label %77, label %120

77:                                               ; preds = %72
  %78 = load i32*, i32** %7, align 8
  %79 = load i32*, i32** %10, align 8
  %80 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @full_row to i32 (i32*, i32*, ...)*)(i32* %78, i32* %79)
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %119

82:                                               ; preds = %77
  %83 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %84 = icmp sle i32 %83, 32
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  br label %92

86:                                               ; preds = %82
  %87 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %88 = sub nsw i32 %87, 1
  %89 = ashr i32 %88, 5
  %90 = add nsw i32 %89, 1
  %91 = add nsw i32 %90, 1
  br label %92

92:                                               ; preds = %86, %85
  %93 = phi i32 [ 2, %85 ], [ %91, %86 ]
  %94 = sext i32 %93 to i64
  %95 = mul i64 4, %94
  %96 = call noalias i8* @malloc(i64 %95) #7
  %97 = bitcast i8* %96 to i32*
  %98 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %99 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %97, i32 %98)
  %100 = load i32**, i32*** %5, align 8
  store i32* %99, i32** %100, align 8
  %101 = load i32**, i32*** %4, align 8
  %102 = getelementptr inbounds i32*, i32** %101, i64 0
  %103 = load i32*, i32** %102, align 8
  %104 = icmp ne i32* %103, null
  br i1 %104, label %105, label %112

105:                                              ; preds = %92
  %106 = load i32**, i32*** %4, align 8
  %107 = getelementptr inbounds i32*, i32** %106, i64 0
  %108 = load i32*, i32** %107, align 8
  %109 = bitcast i32* %108 to i8*
  call void @free(i8* %109) #7
  %110 = load i32**, i32*** %4, align 8
  %111 = getelementptr inbounds i32*, i32** %110, i64 0
  store i32* null, i32** %111, align 8
  br label %112

112:                                              ; preds = %105, %92
  %113 = load i32**, i32*** %4, align 8
  %114 = icmp ne i32** %113, null
  br i1 %114, label %115, label %118

115:                                              ; preds = %112
  %116 = load i32**, i32*** %4, align 8
  %117 = bitcast i32** %116 to i8*
  call void @free(i8* %117) #7
  store i32** null, i32*** %4, align 8
  br label %118

118:                                              ; preds = %115, %112
  store i32 1, i32* %3, align 4
  br label %468

119:                                              ; preds = %77
  br label %72

120:                                              ; preds = %72
  %121 = load i32**, i32*** %4, align 8
  call void (i32**, ...) bitcast (void (i32**)* @massive_count to void (i32**, ...)*)(i32** %121)
  %122 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 5), align 4
  %123 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 4), align 8
  %124 = icmp eq i32 %122, %123
  br i1 %124, label %130, label %125

125:                                              ; preds = %120
  %126 = load i32**, i32*** %4, align 8
  %127 = getelementptr inbounds i32*, i32** %126, i64 3
  %128 = load i32*, i32** %127, align 8
  %129 = icmp eq i32* %128, null
  br i1 %129, label %130, label %191

130:                                              ; preds = %125, %120
  %131 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %132 = getelementptr inbounds i32, i32* %131, i64 0
  %133 = load i32, i32* %132, align 4
  %134 = and i32 %133, 1023
  %135 = mul i32 32, %134
  %136 = icmp ule i32 %135, 32
  br i1 %136, label %137, label %138

137:                                              ; preds = %130
  br label %148

138:                                              ; preds = %130
  %139 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %140 = getelementptr inbounds i32, i32* %139, i64 0
  %141 = load i32, i32* %140, align 4
  %142 = and i32 %141, 1023
  %143 = mul i32 32, %142
  %144 = sub i32 %143, 1
  %145 = lshr i32 %144, 5
  %146 = add i32 %145, 1
  %147 = add i32 %146, 1
  br label %148

148:                                              ; preds = %138, %137
  %149 = phi i32 [ 2, %137 ], [ %147, %138 ]
  %150 = zext i32 %149 to i64
  %151 = mul i64 4, %150
  %152 = call noalias i8* @malloc(i64 %151) #7
  %153 = bitcast i8* %152 to i32*
  %154 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %155 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %153, i32* %154)
  %156 = load i32**, i32*** %5, align 8
  store i32* %155, i32** %156, align 8
  %157 = load i32**, i32*** %4, align 8
  %158 = getelementptr inbounds i32*, i32** %157, i64 2
  store i32** %158, i32*** %6, align 8
  br label %159

159:                                              ; preds = %164, %148
  %160 = load i32**, i32*** %6, align 8
  %161 = getelementptr inbounds i32*, i32** %160, i32 1
  store i32** %161, i32*** %6, align 8
  %162 = load i32*, i32** %160, align 8
  store i32* %162, i32** %7, align 8
  %163 = icmp ne i32* %162, null
  br i1 %163, label %164, label %172

164:                                              ; preds = %159
  %165 = load i32**, i32*** %5, align 8
  %166 = load i32*, i32** %165, align 8
  %167 = load i32*, i32** %8, align 8
  %168 = load i32*, i32** %7, align 8
  %169 = load i32*, i32** %10, align 8
  %170 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %167, i32* %168, i32* %169)
  %171 = call i32* @sccc_cube(i32* %166, i32* %170)
  br label %159

172:                                              ; preds = %159
  %173 = load i32**, i32*** %4, align 8
  %174 = getelementptr inbounds i32*, i32** %173, i64 0
  %175 = load i32*, i32** %174, align 8
  %176 = icmp ne i32* %175, null
  br i1 %176, label %177, label %184

177:                                              ; preds = %172
  %178 = load i32**, i32*** %4, align 8
  %179 = getelementptr inbounds i32*, i32** %178, i64 0
  %180 = load i32*, i32** %179, align 8
  %181 = bitcast i32* %180 to i8*
  call void @free(i8* %181) #7
  %182 = load i32**, i32*** %4, align 8
  %183 = getelementptr inbounds i32*, i32** %182, i64 0
  store i32* null, i32** %183, align 8
  br label %184

184:                                              ; preds = %177, %172
  %185 = load i32**, i32*** %4, align 8
  %186 = icmp ne i32** %185, null
  br i1 %186, label %187, label %190

187:                                              ; preds = %184
  %188 = load i32**, i32*** %4, align 8
  %189 = bitcast i32** %188 to i8*
  call void @free(i8* %189) #7
  store i32** null, i32*** %4, align 8
  br label %190

190:                                              ; preds = %187, %184
  store i32 1, i32* %3, align 4
  br label %468

191:                                              ; preds = %125
  %192 = load i32*, i32** %10, align 8
  %193 = getelementptr inbounds i32, i32* %192, i64 0
  %194 = load i32, i32* %193, align 4
  %195 = and i32 %194, 1023
  %196 = mul i32 32, %195
  %197 = icmp ule i32 %196, 32
  br i1 %197, label %198, label %199

198:                                              ; preds = %191
  br label %209

199:                                              ; preds = %191
  %200 = load i32*, i32** %10, align 8
  %201 = getelementptr inbounds i32, i32* %200, i64 0
  %202 = load i32, i32* %201, align 4
  %203 = and i32 %202, 1023
  %204 = mul i32 32, %203
  %205 = sub i32 %204, 1
  %206 = lshr i32 %205, 5
  %207 = add i32 %206, 1
  %208 = add i32 %207, 1
  br label %209

209:                                              ; preds = %199, %198
  %210 = phi i32 [ 2, %198 ], [ %208, %199 ]
  %211 = zext i32 %210 to i64
  %212 = mul i64 4, %211
  %213 = call noalias i8* @malloc(i64 %212) #7
  %214 = bitcast i8* %213 to i32*
  %215 = load i32*, i32** %10, align 8
  %216 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %214, i32* %215)
  store i32* %216, i32** %9, align 8
  %217 = load i32**, i32*** %4, align 8
  %218 = getelementptr inbounds i32*, i32** %217, i64 2
  store i32** %218, i32*** %6, align 8
  br label %219

219:                                              ; preds = %258, %209
  %220 = load i32**, i32*** %6, align 8
  %221 = getelementptr inbounds i32*, i32** %220, i32 1
  store i32** %221, i32*** %6, align 8
  %222 = load i32*, i32** %220, align 8
  store i32* %222, i32** %7, align 8
  %223 = icmp ne i32* %222, null
  br i1 %223, label %224, label %259

224:                                              ; preds = %219
  %225 = load i32*, i32** %9, align 8
  %226 = getelementptr inbounds i32, i32* %225, i64 0
  %227 = load i32, i32* %226, align 4
  %228 = and i32 %227, 1023
  store i32 %228, i32* %13, align 4
  %229 = load i32*, i32** %9, align 8
  %230 = getelementptr inbounds i32, i32* %229, i64 0
  %231 = load i32, i32* %230, align 4
  %232 = and i32 %231, -1024
  store i32 %232, i32* %230, align 4
  %233 = load i32, i32* %13, align 4
  %234 = load i32*, i32** %9, align 8
  %235 = getelementptr inbounds i32, i32* %234, i64 0
  %236 = load i32, i32* %235, align 4
  %237 = or i32 %236, %233
  store i32 %237, i32* %235, align 4
  br label %238

238:                                              ; preds = %254, %224
  %239 = load i32*, i32** %9, align 8
  %240 = load i32, i32* %13, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i32, i32* %239, i64 %241
  %243 = load i32, i32* %242, align 4
  %244 = load i32*, i32** %7, align 8
  %245 = load i32, i32* %13, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i32, i32* %244, i64 %246
  %248 = load i32, i32* %247, align 4
  %249 = or i32 %243, %248
  %250 = load i32*, i32** %9, align 8
  %251 = load i32, i32* %13, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds i32, i32* %250, i64 %252
  store i32 %249, i32* %253, align 4
  br label %254

254:                                              ; preds = %238
  %255 = load i32, i32* %13, align 4
  %256 = add nsw i32 %255, -1
  store i32 %256, i32* %13, align 4
  %257 = icmp sgt i32 %256, 0
  br i1 %257, label %238, label %258

258:                                              ; preds = %254
  br label %219

259:                                              ; preds = %219
  %260 = load i32*, i32** %9, align 8
  %261 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %262 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_equal to i32 (i32*, i32*, ...)*)(i32* %260, i32* %261)
  %263 = icmp ne i32 %262, 0
  br i1 %263, label %359, label %264

264:                                              ; preds = %259
  %265 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %266 = getelementptr inbounds i32, i32* %265, i64 0
  %267 = load i32, i32* %266, align 4
  %268 = and i32 %267, 1023
  %269 = mul i32 32, %268
  %270 = icmp ule i32 %269, 32
  br i1 %270, label %271, label %272

271:                                              ; preds = %264
  br label %282

272:                                              ; preds = %264
  %273 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %274 = getelementptr inbounds i32, i32* %273, i64 0
  %275 = load i32, i32* %274, align 4
  %276 = and i32 %275, 1023
  %277 = mul i32 32, %276
  %278 = sub i32 %277, 1
  %279 = lshr i32 %278, 5
  %280 = add i32 %279, 1
  %281 = add i32 %280, 1
  br label %282

282:                                              ; preds = %272, %271
  %283 = phi i32 [ 2, %271 ], [ %281, %272 ]
  %284 = zext i32 %283 to i64
  %285 = mul i64 4, %284
  %286 = call noalias i8* @malloc(i64 %285) #7
  %287 = bitcast i8* %286 to i32*
  %288 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %289 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %287, i32* %288)
  %290 = load i32*, i32** %9, align 8
  %291 = call i32* @sccc_cube(i32* %289, i32* %290)
  %292 = load i32**, i32*** %5, align 8
  store i32* %291, i32** %292, align 8
  %293 = load i32**, i32*** %5, align 8
  %294 = load i32*, i32** %293, align 8
  %295 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %296 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_equal to i32 (i32*, i32*, ...)*)(i32* %294, i32* %295)
  %297 = icmp ne i32 %296, 0
  br i1 %297, label %298, label %305

298:                                              ; preds = %282
  %299 = load i32*, i32** %9, align 8
  %300 = icmp ne i32* %299, null
  br i1 %300, label %301, label %304

301:                                              ; preds = %298
  %302 = load i32*, i32** %9, align 8
  %303 = bitcast i32* %302 to i8*
  call void @free(i8* %303) #7
  store i32* null, i32** %9, align 8
  br label %304

304:                                              ; preds = %301, %298
  br label %340

305:                                              ; preds = %282
  %306 = load i32**, i32*** %4, align 8
  %307 = load i32*, i32** %9, align 8
  %308 = call i32** (i32**, i32*, ...) bitcast (i32** (i32**, i32*)* @cofactor to i32** (i32**, i32*, ...)*)(i32** %306, i32* %307)
  %309 = call i32* @sccc(i32** %308)
  %310 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %311 = getelementptr inbounds i32, i32* %310, i64 0
  %312 = load i32, i32* %311, align 4
  %313 = and i32 %312, 1023
  %314 = mul i32 32, %313
  %315 = icmp ule i32 %314, 32
  br i1 %315, label %316, label %317

316:                                              ; preds = %305
  br label %327

317:                                              ; preds = %305
  %318 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %319 = getelementptr inbounds i32, i32* %318, i64 0
  %320 = load i32, i32* %319, align 4
  %321 = and i32 %320, 1023
  %322 = mul i32 32, %321
  %323 = sub i32 %322, 1
  %324 = lshr i32 %323, 5
  %325 = add i32 %324, 1
  %326 = add i32 %325, 1
  br label %327

327:                                              ; preds = %317, %316
  %328 = phi i32 [ 2, %316 ], [ %326, %317 ]
  %329 = zext i32 %328 to i64
  %330 = mul i64 4, %329
  %331 = call noalias i8* @malloc(i64 %330) #7
  %332 = bitcast i8* %331 to i32*
  %333 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %334 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %332, i32* %333)
  %335 = load i32*, i32** %9, align 8
  %336 = load i32**, i32*** %5, align 8
  %337 = load i32*, i32** %336, align 8
  %338 = call i32* @sccc_merge(i32* %309, i32* %334, i32* %335, i32* %337)
  %339 = load i32**, i32*** %5, align 8
  store i32* %338, i32** %339, align 8
  br label %340

340:                                              ; preds = %327, %304
  %341 = load i32**, i32*** %4, align 8
  %342 = getelementptr inbounds i32*, i32** %341, i64 0
  %343 = load i32*, i32** %342, align 8
  %344 = icmp ne i32* %343, null
  br i1 %344, label %345, label %352

345:                                              ; preds = %340
  %346 = load i32**, i32*** %4, align 8
  %347 = getelementptr inbounds i32*, i32** %346, i64 0
  %348 = load i32*, i32** %347, align 8
  %349 = bitcast i32* %348 to i8*
  call void @free(i8* %349) #7
  %350 = load i32**, i32*** %4, align 8
  %351 = getelementptr inbounds i32*, i32** %350, i64 0
  store i32* null, i32** %351, align 8
  br label %352

352:                                              ; preds = %345, %340
  %353 = load i32**, i32*** %4, align 8
  %354 = icmp ne i32** %353, null
  br i1 %354, label %355, label %358

355:                                              ; preds = %352
  %356 = load i32**, i32*** %4, align 8
  %357 = bitcast i32** %356 to i8*
  call void @free(i8* %357) #7
  store i32** null, i32*** %4, align 8
  br label %358

358:                                              ; preds = %355, %352
  store i32 1, i32* %3, align 4
  br label %468

359:                                              ; preds = %259
  %360 = load i32*, i32** %9, align 8
  %361 = icmp ne i32* %360, null
  br i1 %361, label %362, label %365

362:                                              ; preds = %359
  %363 = load i32*, i32** %9, align 8
  %364 = bitcast i32* %363 to i8*
  call void @free(i8* %364) #7
  store i32* null, i32** %9, align 8
  br label %365

365:                                              ; preds = %362, %359
  %366 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 4), align 8
  %367 = icmp eq i32 %366, 1
  br i1 %367, label %368, label %405

368:                                              ; preds = %365
  %369 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %370 = icmp sle i32 %369, 32
  br i1 %370, label %371, label %372

371:                                              ; preds = %368
  br label %378

372:                                              ; preds = %368
  %373 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %374 = sub nsw i32 %373, 1
  %375 = ashr i32 %374, 5
  %376 = add nsw i32 %375, 1
  %377 = add nsw i32 %376, 1
  br label %378

378:                                              ; preds = %372, %371
  %379 = phi i32 [ 2, %371 ], [ %377, %372 ]
  %380 = sext i32 %379 to i64
  %381 = mul i64 4, %380
  %382 = call noalias i8* @malloc(i64 %381) #7
  %383 = bitcast i8* %382 to i32*
  %384 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %385 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %383, i32 %384)
  %386 = load i32**, i32*** %5, align 8
  store i32* %385, i32** %386, align 8
  %387 = load i32**, i32*** %4, align 8
  %388 = getelementptr inbounds i32*, i32** %387, i64 0
  %389 = load i32*, i32** %388, align 8
  %390 = icmp ne i32* %389, null
  br i1 %390, label %391, label %398

391:                                              ; preds = %378
  %392 = load i32**, i32*** %4, align 8
  %393 = getelementptr inbounds i32*, i32** %392, i64 0
  %394 = load i32*, i32** %393, align 8
  %395 = bitcast i32* %394 to i8*
  call void @free(i8* %395) #7
  %396 = load i32**, i32*** %4, align 8
  %397 = getelementptr inbounds i32*, i32** %396, i64 0
  store i32* null, i32** %397, align 8
  br label %398

398:                                              ; preds = %391, %378
  %399 = load i32**, i32*** %4, align 8
  %400 = icmp ne i32** %399, null
  br i1 %400, label %401, label %404

401:                                              ; preds = %398
  %402 = load i32**, i32*** %4, align 8
  %403 = bitcast i32** %402 to i8*
  call void @free(i8* %403) #7
  store i32** null, i32*** %4, align 8
  br label %404

404:                                              ; preds = %401, %398
  store i32 1, i32* %3, align 4
  br label %468

405:                                              ; preds = %365
  %406 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 1), align 8
  %407 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 6), align 8
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds i32, i32* %406, i64 %408
  %410 = load i32, i32* %409, align 4
  %411 = sext i32 %410 to i64
  %412 = load i32**, i32*** %4, align 8
  %413 = getelementptr inbounds i32*, i32** %412, i64 1
  %414 = load i32*, i32** %413, align 8
  %415 = bitcast i32* %414 to i32**
  %416 = load i32**, i32*** %4, align 8
  %417 = ptrtoint i32** %415 to i64
  %418 = ptrtoint i32** %416 to i64
  %419 = sub i64 %417, %418
  %420 = sdiv exact i64 %419, 8
  %421 = sub nsw i64 %420, 3
  %422 = sdiv i64 %421, 2
  %423 = icmp slt i64 %411, %422
  br i1 %423, label %424, label %467

424:                                              ; preds = %405
  %425 = load i32**, i32*** %4, align 8
  %426 = load i32, i32* @debug, align 4
  %427 = and i32 %426, 128
  %428 = call i32 (i32**, i32***, i32***, i32, ...) bitcast (i32 (i32**, i32***, i32***, i32)* @cubelist_partition to i32 (i32**, i32***, i32***, i32, ...)*)(i32** %425, i32*** %11, i32*** %12, i32 %427)
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %430, label %431

430:                                              ; preds = %424
  store i32 2, i32* %3, align 4
  br label %468

431:                                              ; preds = %424
  %432 = load i32**, i32*** %4, align 8
  %433 = getelementptr inbounds i32*, i32** %432, i64 0
  %434 = load i32*, i32** %433, align 8
  %435 = icmp ne i32* %434, null
  br i1 %435, label %436, label %443

436:                                              ; preds = %431
  %437 = load i32**, i32*** %4, align 8
  %438 = getelementptr inbounds i32*, i32** %437, i64 0
  %439 = load i32*, i32** %438, align 8
  %440 = bitcast i32* %439 to i8*
  call void @free(i8* %440) #7
  %441 = load i32**, i32*** %4, align 8
  %442 = getelementptr inbounds i32*, i32** %441, i64 0
  store i32* null, i32** %442, align 8
  br label %443

443:                                              ; preds = %436, %431
  %444 = load i32**, i32*** %4, align 8
  %445 = icmp ne i32** %444, null
  br i1 %445, label %446, label %449

446:                                              ; preds = %443
  %447 = load i32**, i32*** %4, align 8
  %448 = bitcast i32** %447 to i8*
  call void @free(i8* %448) #7
  store i32** null, i32*** %4, align 8
  br label %449

449:                                              ; preds = %446, %443
  %450 = load i32**, i32*** %11, align 8
  %451 = call i32* @sccc(i32** %450)
  %452 = load i32**, i32*** %5, align 8
  store i32* %451, i32** %452, align 8
  %453 = load i32**, i32*** %12, align 8
  %454 = call i32* @sccc(i32** %453)
  store i32* %454, i32** %9, align 8
  %455 = load i32**, i32*** %5, align 8
  %456 = load i32*, i32** %455, align 8
  %457 = load i32**, i32*** %5, align 8
  %458 = load i32*, i32** %457, align 8
  %459 = load i32*, i32** %9, align 8
  %460 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_and to i32* (i32*, i32*, i32*, ...)*)(i32* %456, i32* %458, i32* %459)
  %461 = load i32*, i32** %9, align 8
  %462 = icmp ne i32* %461, null
  br i1 %462, label %463, label %466

463:                                              ; preds = %449
  %464 = load i32*, i32** %9, align 8
  %465 = bitcast i32* %464 to i8*
  call void @free(i8* %465) #7
  store i32* null, i32** %9, align 8
  br label %466

466:                                              ; preds = %463, %449
  store i32 1, i32* %3, align 4
  br label %468

467:                                              ; preds = %405
  store i32 2, i32* %3, align 4
  br label %468

468:                                              ; preds = %467, %466, %430, %404, %358, %190, %118, %68
  %469 = load i32, i32* %3, align 4
  ret i32 %469
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @sccc_merge(i32* %0, i32* %1, i32* %2, i32* %3) #0 {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %12 = load i32*, i32** %5, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 0
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 1023
  store i32 %15, i32* %9, align 4
  %16 = load i32*, i32** %5, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, -1024
  store i32 %19, i32* %17, align 4
  %20 = load i32, i32* %9, align 4
  %21 = load i32*, i32** %5, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = or i32 %23, %20
  store i32 %24, i32* %22, align 4
  br label %25

25:                                               ; preds = %41, %4
  %26 = load i32*, i32** %5, align 8
  %27 = load i32, i32* %9, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, i32* %26, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = load i32*, i32** %7, align 8
  %32 = load i32, i32* %9, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i32, i32* %31, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %30, %35
  %37 = load i32*, i32** %5, align 8
  %38 = load i32, i32* %9, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %37, i64 %39
  store i32 %36, i32* %40, align 4
  br label %41

41:                                               ; preds = %25
  %42 = load i32, i32* %9, align 4
  %43 = add nsw i32 %42, -1
  store i32 %43, i32* %9, align 4
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %25, label %45

45:                                               ; preds = %41
  %46 = load i32*, i32** %6, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 0
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 1023
  store i32 %49, i32* %10, align 4
  %50 = load i32*, i32** %6, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 0
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, -1024
  store i32 %53, i32* %51, align 4
  %54 = load i32, i32* %10, align 4
  %55 = load i32*, i32** %6, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 0
  %57 = load i32, i32* %56, align 4
  %58 = or i32 %57, %54
  store i32 %58, i32* %56, align 4
  br label %59

59:                                               ; preds = %75, %45
  %60 = load i32*, i32** %6, align 8
  %61 = load i32, i32* %10, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %60, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = load i32*, i32** %8, align 8
  %66 = load i32, i32* %10, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %65, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = and i32 %64, %69
  %71 = load i32*, i32** %6, align 8
  %72 = load i32, i32* %10, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i32, i32* %71, i64 %73
  store i32 %70, i32* %74, align 4
  br label %75

75:                                               ; preds = %59
  %76 = load i32, i32* %10, align 4
  %77 = add nsw i32 %76, -1
  store i32 %77, i32* %10, align 4
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %59, label %79

79:                                               ; preds = %75
  %80 = load i32*, i32** %5, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 0
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, 1023
  store i32 %83, i32* %11, align 4
  %84 = load i32*, i32** %5, align 8
  %85 = getelementptr inbounds i32, i32* %84, i64 0
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, -1024
  store i32 %87, i32* %85, align 4
  %88 = load i32, i32* %11, align 4
  %89 = load i32*, i32** %5, align 8
  %90 = getelementptr inbounds i32, i32* %89, i64 0
  %91 = load i32, i32* %90, align 4
  %92 = or i32 %91, %88
  store i32 %92, i32* %90, align 4
  br label %93

93:                                               ; preds = %109, %79
  %94 = load i32*, i32** %5, align 8
  %95 = load i32, i32* %11, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i32, i32* %94, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = load i32*, i32** %6, align 8
  %100 = load i32, i32* %11, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, i32* %99, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = or i32 %98, %103
  %105 = load i32*, i32** %5, align 8
  %106 = load i32, i32* %11, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i32, i32* %105, i64 %107
  store i32 %104, i32* %108, align 4
  br label %109

109:                                              ; preds = %93
  %110 = load i32, i32* %11, align 4
  %111 = add nsw i32 %110, -1
  store i32 %111, i32* %11, align 4
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %93, label %113

113:                                              ; preds = %109
  %114 = load i32*, i32** %6, align 8
  %115 = icmp ne i32* %114, null
  br i1 %115, label %116, label %119

116:                                              ; preds = %113
  %117 = load i32*, i32** %6, align 8
  %118 = bitcast i32* %117 to i8*
  call void @free(i8* %118) #7
  store i32* null, i32** %6, align 8
  br label %119

119:                                              ; preds = %116, %113
  %120 = load i32*, i32** %7, align 8
  %121 = icmp ne i32* %120, null
  br i1 %121, label %122, label %125

122:                                              ; preds = %119
  %123 = load i32*, i32** %7, align 8
  %124 = bitcast i32* %123 to i8*
  call void @free(i8* %124) #7
  store i32* null, i32** %7, align 8
  br label %125

125:                                              ; preds = %122, %119
  %126 = load i32*, i32** %8, align 8
  %127 = icmp ne i32* %126, null
  br i1 %127, label %128, label %131

128:                                              ; preds = %125
  %129 = load i32*, i32** %8, align 8
  %130 = bitcast i32* %129 to i8*
  call void @free(i8* %130) #7
  store i32* null, i32** %8, align 8
  br label %131

131:                                              ; preds = %128, %125
  %132 = load i32*, i32** %5, align 8
  ret i32* %132
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @sccc_cube(i32* %0, i32* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %10 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %11 = getelementptr inbounds i32*, i32** %10, i64 0
  %12 = load i32*, i32** %11, align 8
  store i32* %12, i32** %5, align 8
  %13 = load i32*, i32** %4, align 8
  %14 = call i32 (i32*, ...) bitcast (i32 (i32*)* @cactive to i32 (i32*, ...)*)(i32* %13)
  store i32 %14, i32* %7, align 4
  %15 = icmp sge i32 %14, 0
  br i1 %15, label %16, label %90

16:                                               ; preds = %2
  %17 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32*, i32** %17, i64 %19
  %21 = load i32*, i32** %20, align 8
  store i32* %21, i32** %6, align 8
  %22 = load i32*, i32** %4, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 1023
  store i32 %25, i32* %8, align 4
  %26 = load i32*, i32** %5, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 0
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, -1024
  store i32 %29, i32* %27, align 4
  %30 = load i32, i32* %8, align 4
  %31 = load i32*, i32** %5, align 8
  %32 = getelementptr inbounds i32, i32* %31, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = or i32 %33, %30
  store i32 %34, i32* %32, align 4
  br label %35

35:                                               ; preds = %51, %16
  %36 = load i32*, i32** %4, align 8
  %37 = load i32, i32* %8, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i32, i32* %36, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = load i32*, i32** %6, align 8
  %42 = load i32, i32* %8, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %41, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = xor i32 %40, %45
  %47 = load i32*, i32** %5, align 8
  %48 = load i32, i32* %8, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, i32* %47, i64 %49
  store i32 %46, i32* %50, align 4
  br label %51

51:                                               ; preds = %35
  %52 = load i32, i32* %8, align 4
  %53 = add nsw i32 %52, -1
  store i32 %53, i32* %8, align 4
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %35, label %55

55:                                               ; preds = %51
  %56 = load i32*, i32** %3, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 0
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, 1023
  store i32 %59, i32* %9, align 4
  %60 = load i32*, i32** %3, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 0
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, -1024
  store i32 %63, i32* %61, align 4
  %64 = load i32, i32* %9, align 4
  %65 = load i32*, i32** %3, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 0
  %67 = load i32, i32* %66, align 4
  %68 = or i32 %67, %64
  store i32 %68, i32* %66, align 4
  br label %69

69:                                               ; preds = %85, %55
  %70 = load i32*, i32** %3, align 8
  %71 = load i32, i32* %9, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %70, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = load i32*, i32** %5, align 8
  %76 = load i32, i32* %9, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i32, i32* %75, i64 %77
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %74, %79
  %81 = load i32*, i32** %3, align 8
  %82 = load i32, i32* %9, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i32, i32* %81, i64 %83
  store i32 %80, i32* %84, align 4
  br label %85

85:                                               ; preds = %69
  %86 = load i32, i32* %9, align 4
  %87 = add nsw i32 %86, -1
  store i32 %87, i32* %9, align 4
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %69, label %89

89:                                               ; preds = %85
  br label %90

90:                                               ; preds = %89, %2
  %91 = load i32*, i32** %3, align 8
  ret i32* %91
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_row_struct* @sm_row_alloc() #0 {
  %1 = alloca %struct.sm_row_struct*, align 8
  %2 = call noalias i8* @malloc(i64 56) #7
  %3 = bitcast i8* %2 to %struct.sm_row_struct*
  store %struct.sm_row_struct* %3, %struct.sm_row_struct** %1, align 8
  %4 = load %struct.sm_row_struct*, %struct.sm_row_struct** %1, align 8
  %5 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %4, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = load %struct.sm_row_struct*, %struct.sm_row_struct** %1, align 8
  %7 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %6, i32 0, i32 1
  store i32 0, i32* %7, align 4
  %8 = load %struct.sm_row_struct*, %struct.sm_row_struct** %1, align 8
  %9 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %8, i32 0, i32 4
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %9, align 8
  %10 = load %struct.sm_row_struct*, %struct.sm_row_struct** %1, align 8
  %11 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %10, i32 0, i32 3
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %11, align 8
  %12 = load %struct.sm_row_struct*, %struct.sm_row_struct** %1, align 8
  %13 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %12, i32 0, i32 6
  store %struct.sm_row_struct* null, %struct.sm_row_struct** %13, align 8
  %14 = load %struct.sm_row_struct*, %struct.sm_row_struct** %1, align 8
  %15 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %14, i32 0, i32 5
  store %struct.sm_row_struct* null, %struct.sm_row_struct** %15, align 8
  %16 = load %struct.sm_row_struct*, %struct.sm_row_struct** %1, align 8
  %17 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %16, i32 0, i32 2
  store i32 0, i32* %17, align 8
  %18 = load %struct.sm_row_struct*, %struct.sm_row_struct** %1, align 8
  %19 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %18, i32 0, i32 7
  store i8* null, i8** %19, align 8
  %20 = load %struct.sm_row_struct*, %struct.sm_row_struct** %1, align 8
  ret %struct.sm_row_struct* %20
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_row_free(%struct.sm_row_struct* %0) #0 {
  %2 = alloca %struct.sm_row_struct*, align 8
  %3 = alloca %struct.sm_element_struct*, align 8
  %4 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_row_struct* %0, %struct.sm_row_struct** %2, align 8
  %5 = load %struct.sm_row_struct*, %struct.sm_row_struct** %2, align 8
  %6 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %5, i32 0, i32 3
  %7 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  store %struct.sm_element_struct* %7, %struct.sm_element_struct** %3, align 8
  br label %8

8:                                                ; preds = %21, %1
  %9 = load %struct.sm_element_struct*, %struct.sm_element_struct** %3, align 8
  %10 = icmp ne %struct.sm_element_struct* %9, null
  br i1 %10, label %11, label %23

11:                                               ; preds = %8
  %12 = load %struct.sm_element_struct*, %struct.sm_element_struct** %3, align 8
  %13 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %12, i32 0, i32 4
  %14 = load %struct.sm_element_struct*, %struct.sm_element_struct** %13, align 8
  store %struct.sm_element_struct* %14, %struct.sm_element_struct** %4, align 8
  %15 = load %struct.sm_element_struct*, %struct.sm_element_struct** %3, align 8
  %16 = icmp ne %struct.sm_element_struct* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = load %struct.sm_element_struct*, %struct.sm_element_struct** %3, align 8
  %19 = bitcast %struct.sm_element_struct* %18 to i8*
  call void @free(i8* %19) #7
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %3, align 8
  br label %20

20:                                               ; preds = %17, %11
  br label %21

21:                                               ; preds = %20
  %22 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  store %struct.sm_element_struct* %22, %struct.sm_element_struct** %3, align 8
  br label %8

23:                                               ; preds = %8
  %24 = load %struct.sm_row_struct*, %struct.sm_row_struct** %2, align 8
  %25 = icmp ne %struct.sm_row_struct* %24, null
  br i1 %25, label %26, label %29

26:                                               ; preds = %23
  %27 = load %struct.sm_row_struct*, %struct.sm_row_struct** %2, align 8
  %28 = bitcast %struct.sm_row_struct* %27 to i8*
  call void @free(i8* %28) #7
  store %struct.sm_row_struct* null, %struct.sm_row_struct** %2, align 8
  br label %29

29:                                               ; preds = %26, %23
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_row_struct* @sm_row_dup(%struct.sm_row_struct* %0) #0 {
  %2 = alloca %struct.sm_row_struct*, align 8
  %3 = alloca %struct.sm_row_struct*, align 8
  %4 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_row_struct* %0, %struct.sm_row_struct** %2, align 8
  %5 = call %struct.sm_row_struct* @sm_row_alloc()
  store %struct.sm_row_struct* %5, %struct.sm_row_struct** %3, align 8
  %6 = load %struct.sm_row_struct*, %struct.sm_row_struct** %2, align 8
  %7 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %6, i32 0, i32 3
  %8 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  store %struct.sm_element_struct* %8, %struct.sm_element_struct** %4, align 8
  br label %9

9:                                                ; preds = %18, %1
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %11 = icmp ne %struct.sm_element_struct* %10, null
  br i1 %11, label %12, label %22

12:                                               ; preds = %9
  %13 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %14 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %15 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = call %struct.sm_element_struct* @sm_row_insert(%struct.sm_row_struct* %13, i32 %16)
  br label %18

18:                                               ; preds = %12
  %19 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %20 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %19, i32 0, i32 4
  %21 = load %struct.sm_element_struct*, %struct.sm_element_struct** %20, align 8
  store %struct.sm_element_struct* %21, %struct.sm_element_struct** %4, align 8
  br label %9

22:                                               ; preds = %9
  %23 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  ret %struct.sm_row_struct* %23
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_element_struct* @sm_row_insert(%struct.sm_row_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.sm_row_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.sm_element_struct*, align 8
  %6 = alloca %struct.sm_element_struct*, align 8
  %7 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_row_struct* %0, %struct.sm_row_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = call noalias i8* @malloc(i64 48) #7
  %9 = bitcast i8* %8 to %struct.sm_element_struct*
  store %struct.sm_element_struct* %9, %struct.sm_element_struct** %6, align 8
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %11 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %10, i32 0, i32 6
  store i8* null, i8** %11, align 8
  %12 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  store %struct.sm_element_struct* %12, %struct.sm_element_struct** %5, align 8
  %13 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %14 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %13, i32 0, i32 4
  %15 = load %struct.sm_element_struct*, %struct.sm_element_struct** %14, align 8
  %16 = icmp eq %struct.sm_element_struct* %15, null
  br i1 %16, label %17, label %35

17:                                               ; preds = %2
  %18 = load i32, i32* %4, align 4
  %19 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %20 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %19, i32 0, i32 1
  store i32 %18, i32* %20, align 4
  %21 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %22 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %23 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %22, i32 0, i32 3
  store %struct.sm_element_struct* %21, %struct.sm_element_struct** %23, align 8
  %24 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %25 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %26 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %25, i32 0, i32 4
  store %struct.sm_element_struct* %24, %struct.sm_element_struct** %26, align 8
  %27 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %28 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %27, i32 0, i32 4
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %28, align 8
  %29 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %30 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %29, i32 0, i32 5
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %30, align 8
  %31 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %32 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %31, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %32, align 4
  br label %150

35:                                               ; preds = %2
  %36 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %37 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %36, i32 0, i32 4
  %38 = load %struct.sm_element_struct*, %struct.sm_element_struct** %37, align 8
  %39 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %38, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = load i32, i32* %4, align 4
  %42 = icmp slt i32 %40, %41
  br i1 %42, label %43, label %66

43:                                               ; preds = %35
  %44 = load i32, i32* %4, align 4
  %45 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %46 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %45, i32 0, i32 1
  store i32 %44, i32* %46, align 4
  %47 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %48 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %49 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %48, i32 0, i32 4
  %50 = load %struct.sm_element_struct*, %struct.sm_element_struct** %49, align 8
  %51 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %50, i32 0, i32 4
  store %struct.sm_element_struct* %47, %struct.sm_element_struct** %51, align 8
  %52 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %53 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %52, i32 0, i32 4
  %54 = load %struct.sm_element_struct*, %struct.sm_element_struct** %53, align 8
  %55 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %56 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %55, i32 0, i32 5
  store %struct.sm_element_struct* %54, %struct.sm_element_struct** %56, align 8
  %57 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %58 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %59 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %58, i32 0, i32 4
  store %struct.sm_element_struct* %57, %struct.sm_element_struct** %59, align 8
  %60 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %61 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %60, i32 0, i32 4
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %61, align 8
  %62 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %63 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %62, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %63, align 4
  br label %149

66:                                               ; preds = %35
  %67 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %68 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %67, i32 0, i32 3
  %69 = load %struct.sm_element_struct*, %struct.sm_element_struct** %68, align 8
  %70 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %69, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = load i32, i32* %4, align 4
  %73 = icmp sgt i32 %71, %72
  br i1 %73, label %74, label %97

74:                                               ; preds = %66
  %75 = load i32, i32* %4, align 4
  %76 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %77 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %76, i32 0, i32 1
  store i32 %75, i32* %77, align 4
  %78 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %79 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %80 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %79, i32 0, i32 3
  %81 = load %struct.sm_element_struct*, %struct.sm_element_struct** %80, align 8
  %82 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %81, i32 0, i32 5
  store %struct.sm_element_struct* %78, %struct.sm_element_struct** %82, align 8
  %83 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %84 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %83, i32 0, i32 3
  %85 = load %struct.sm_element_struct*, %struct.sm_element_struct** %84, align 8
  %86 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %87 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %86, i32 0, i32 4
  store %struct.sm_element_struct* %85, %struct.sm_element_struct** %87, align 8
  %88 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %89 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %90 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %89, i32 0, i32 3
  store %struct.sm_element_struct* %88, %struct.sm_element_struct** %90, align 8
  %91 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %92 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %91, i32 0, i32 5
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %92, align 8
  %93 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %94 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %94, align 4
  br label %148

97:                                               ; preds = %66
  %98 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %99 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %98, i32 0, i32 3
  %100 = load %struct.sm_element_struct*, %struct.sm_element_struct** %99, align 8
  store %struct.sm_element_struct* %100, %struct.sm_element_struct** %7, align 8
  br label %101

101:                                              ; preds = %108, %97
  %102 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %103 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %102, i32 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = load i32, i32* %4, align 4
  %106 = icmp slt i32 %104, %105
  br i1 %106, label %107, label %112

107:                                              ; preds = %101
  br label %108

108:                                              ; preds = %107
  %109 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %110 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %109, i32 0, i32 4
  %111 = load %struct.sm_element_struct*, %struct.sm_element_struct** %110, align 8
  store %struct.sm_element_struct* %111, %struct.sm_element_struct** %7, align 8
  br label %101

112:                                              ; preds = %101
  %113 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %114 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %113, i32 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = load i32, i32* %4, align 4
  %117 = icmp sgt i32 %115, %116
  br i1 %117, label %118, label %145

118:                                              ; preds = %112
  %119 = load i32, i32* %4, align 4
  %120 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %121 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %120, i32 0, i32 1
  store i32 %119, i32* %121, align 4
  %122 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %123 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %122, i32 0, i32 5
  %124 = load %struct.sm_element_struct*, %struct.sm_element_struct** %123, align 8
  store %struct.sm_element_struct* %124, %struct.sm_element_struct** %7, align 8
  %125 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %126 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %127 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %126, i32 0, i32 4
  %128 = load %struct.sm_element_struct*, %struct.sm_element_struct** %127, align 8
  %129 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %128, i32 0, i32 5
  store %struct.sm_element_struct* %125, %struct.sm_element_struct** %129, align 8
  %130 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %131 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %130, i32 0, i32 4
  %132 = load %struct.sm_element_struct*, %struct.sm_element_struct** %131, align 8
  %133 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %134 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %133, i32 0, i32 4
  store %struct.sm_element_struct* %132, %struct.sm_element_struct** %134, align 8
  %135 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %136 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %137 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %136, i32 0, i32 4
  store %struct.sm_element_struct* %135, %struct.sm_element_struct** %137, align 8
  %138 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %139 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %140 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %139, i32 0, i32 5
  store %struct.sm_element_struct* %138, %struct.sm_element_struct** %140, align 8
  %141 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %142 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %141, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %142, align 4
  br label %147

145:                                              ; preds = %112
  %146 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  store %struct.sm_element_struct* %146, %struct.sm_element_struct** %5, align 8
  br label %147

147:                                              ; preds = %145, %118
  br label %148

148:                                              ; preds = %147, %74
  br label %149

149:                                              ; preds = %148, %43
  br label %150

150:                                              ; preds = %149, %17
  %151 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %152 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %153 = icmp ne %struct.sm_element_struct* %151, %152
  br i1 %153, label %154, label %161

154:                                              ; preds = %150
  %155 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %156 = icmp ne %struct.sm_element_struct* %155, null
  br i1 %156, label %157, label %160

157:                                              ; preds = %154
  %158 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %159 = bitcast %struct.sm_element_struct* %158 to i8*
  call void @free(i8* %159) #7
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %6, align 8
  br label %160

160:                                              ; preds = %157, %154
  br label %161

161:                                              ; preds = %160, %150
  %162 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  ret %struct.sm_element_struct* %162
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_row_remove(%struct.sm_row_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.sm_row_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_row_struct* %0, %struct.sm_row_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %7 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %6, i32 0, i32 3
  %8 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  store %struct.sm_element_struct* %8, %struct.sm_element_struct** %5, align 8
  br label %9

9:                                                ; preds = %21, %2
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %11 = icmp ne %struct.sm_element_struct* %10, null
  br i1 %11, label %12, label %18

12:                                               ; preds = %9
  %13 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %14 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %4, align 4
  %17 = icmp slt i32 %15, %16
  br label %18

18:                                               ; preds = %12, %9
  %19 = phi i1 [ false, %9 ], [ %17, %12 ]
  br i1 %19, label %20, label %25

20:                                               ; preds = %18
  br label %21

21:                                               ; preds = %20
  %22 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %23 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %22, i32 0, i32 4
  %24 = load %struct.sm_element_struct*, %struct.sm_element_struct** %23, align 8
  store %struct.sm_element_struct* %24, %struct.sm_element_struct** %5, align 8
  br label %9

25:                                               ; preds = %18
  %26 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %27 = icmp ne %struct.sm_element_struct* %26, null
  br i1 %27, label %28, label %83

28:                                               ; preds = %25
  %29 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %30 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = load i32, i32* %4, align 4
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %34, label %83

34:                                               ; preds = %28
  %35 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %36 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %35, i32 0, i32 5
  %37 = load %struct.sm_element_struct*, %struct.sm_element_struct** %36, align 8
  %38 = icmp eq %struct.sm_element_struct* %37, null
  br i1 %38, label %39, label %45

39:                                               ; preds = %34
  %40 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %41 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %40, i32 0, i32 4
  %42 = load %struct.sm_element_struct*, %struct.sm_element_struct** %41, align 8
  %43 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %44 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %43, i32 0, i32 3
  store %struct.sm_element_struct* %42, %struct.sm_element_struct** %44, align 8
  br label %53

45:                                               ; preds = %34
  %46 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %47 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %46, i32 0, i32 4
  %48 = load %struct.sm_element_struct*, %struct.sm_element_struct** %47, align 8
  %49 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %50 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %49, i32 0, i32 5
  %51 = load %struct.sm_element_struct*, %struct.sm_element_struct** %50, align 8
  %52 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %51, i32 0, i32 4
  store %struct.sm_element_struct* %48, %struct.sm_element_struct** %52, align 8
  br label %53

53:                                               ; preds = %45, %39
  %54 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %55 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %54, i32 0, i32 4
  %56 = load %struct.sm_element_struct*, %struct.sm_element_struct** %55, align 8
  %57 = icmp eq %struct.sm_element_struct* %56, null
  br i1 %57, label %58, label %64

58:                                               ; preds = %53
  %59 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %60 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %59, i32 0, i32 5
  %61 = load %struct.sm_element_struct*, %struct.sm_element_struct** %60, align 8
  %62 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %63 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %62, i32 0, i32 4
  store %struct.sm_element_struct* %61, %struct.sm_element_struct** %63, align 8
  br label %72

64:                                               ; preds = %53
  %65 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %66 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %65, i32 0, i32 5
  %67 = load %struct.sm_element_struct*, %struct.sm_element_struct** %66, align 8
  %68 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %69 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %68, i32 0, i32 4
  %70 = load %struct.sm_element_struct*, %struct.sm_element_struct** %69, align 8
  %71 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %70, i32 0, i32 5
  store %struct.sm_element_struct* %67, %struct.sm_element_struct** %71, align 8
  br label %72

72:                                               ; preds = %64, %58
  %73 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %74 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %73, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = add nsw i32 %75, -1
  store i32 %76, i32* %74, align 4
  %77 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %78 = icmp ne %struct.sm_element_struct* %77, null
  br i1 %78, label %79, label %82

79:                                               ; preds = %72
  %80 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %81 = bitcast %struct.sm_element_struct* %80 to i8*
  call void @free(i8* %81) #7
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %5, align 8
  br label %82

82:                                               ; preds = %79, %72
  br label %83

83:                                               ; preds = %82, %28, %25
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_element_struct* @sm_row_find(%struct.sm_row_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.sm_element_struct*, align 8
  %4 = alloca %struct.sm_row_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_row_struct* %0, %struct.sm_row_struct** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %8 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %7, i32 0, i32 3
  %9 = load %struct.sm_element_struct*, %struct.sm_element_struct** %8, align 8
  store %struct.sm_element_struct* %9, %struct.sm_element_struct** %6, align 8
  br label %10

10:                                               ; preds = %22, %2
  %11 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %12 = icmp ne %struct.sm_element_struct* %11, null
  br i1 %12, label %13, label %19

13:                                               ; preds = %10
  %14 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %15 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = load i32, i32* %5, align 4
  %18 = icmp slt i32 %16, %17
  br label %19

19:                                               ; preds = %13, %10
  %20 = phi i1 [ false, %10 ], [ %18, %13 ]
  br i1 %20, label %21, label %26

21:                                               ; preds = %19
  br label %22

22:                                               ; preds = %21
  %23 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %24 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %23, i32 0, i32 4
  %25 = load %struct.sm_element_struct*, %struct.sm_element_struct** %24, align 8
  store %struct.sm_element_struct* %25, %struct.sm_element_struct** %6, align 8
  br label %10

26:                                               ; preds = %19
  %27 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %28 = icmp ne %struct.sm_element_struct* %27, null
  br i1 %28, label %29, label %37

29:                                               ; preds = %26
  %30 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %31 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = load i32, i32* %5, align 4
  %34 = icmp eq i32 %32, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  store %struct.sm_element_struct* %36, %struct.sm_element_struct** %3, align 8
  br label %38

37:                                               ; preds = %29, %26
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %3, align 8
  br label %38

38:                                               ; preds = %37, %35
  %39 = load %struct.sm_element_struct*, %struct.sm_element_struct** %3, align 8
  ret %struct.sm_element_struct* %39
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sm_row_contains(%struct.sm_row_struct* %0, %struct.sm_row_struct* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.sm_row_struct*, align 8
  %5 = alloca %struct.sm_row_struct*, align 8
  %6 = alloca %struct.sm_element_struct*, align 8
  %7 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_row_struct* %0, %struct.sm_row_struct** %4, align 8
  store %struct.sm_row_struct* %1, %struct.sm_row_struct** %5, align 8
  %8 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %9 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %8, i32 0, i32 3
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  store %struct.sm_element_struct* %10, %struct.sm_element_struct** %6, align 8
  %11 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %12 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %11, i32 0, i32 3
  %13 = load %struct.sm_element_struct*, %struct.sm_element_struct** %12, align 8
  store %struct.sm_element_struct* %13, %struct.sm_element_struct** %7, align 8
  br label %14

14:                                               ; preds = %49, %2
  %15 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %16 = icmp ne %struct.sm_element_struct* %15, null
  br i1 %16, label %17, label %50

17:                                               ; preds = %14
  %18 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %19 = icmp eq %struct.sm_element_struct* %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %17
  %21 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %22 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %25 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %24, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %23, %26
  br i1 %27, label %28, label %29

28:                                               ; preds = %20, %17
  store i32 0, i32* %3, align 4
  br label %51

29:                                               ; preds = %20
  %30 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %31 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %34 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %33, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %32, %35
  br i1 %36, label %37, label %44

37:                                               ; preds = %29
  %38 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %39 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %38, i32 0, i32 4
  %40 = load %struct.sm_element_struct*, %struct.sm_element_struct** %39, align 8
  store %struct.sm_element_struct* %40, %struct.sm_element_struct** %6, align 8
  %41 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %42 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %41, i32 0, i32 4
  %43 = load %struct.sm_element_struct*, %struct.sm_element_struct** %42, align 8
  store %struct.sm_element_struct* %43, %struct.sm_element_struct** %7, align 8
  br label %48

44:                                               ; preds = %29
  %45 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %46 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %45, i32 0, i32 4
  %47 = load %struct.sm_element_struct*, %struct.sm_element_struct** %46, align 8
  store %struct.sm_element_struct* %47, %struct.sm_element_struct** %7, align 8
  br label %48

48:                                               ; preds = %44, %37
  br label %49

49:                                               ; preds = %48
  br label %14

50:                                               ; preds = %14
  store i32 1, i32* %3, align 4
  br label %51

51:                                               ; preds = %50, %28
  %52 = load i32, i32* %3, align 4
  ret i32 %52
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sm_row_intersects(%struct.sm_row_struct* %0, %struct.sm_row_struct* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.sm_row_struct*, align 8
  %5 = alloca %struct.sm_row_struct*, align 8
  %6 = alloca %struct.sm_element_struct*, align 8
  %7 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_row_struct* %0, %struct.sm_row_struct** %4, align 8
  store %struct.sm_row_struct* %1, %struct.sm_row_struct** %5, align 8
  %8 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %9 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %8, i32 0, i32 3
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  store %struct.sm_element_struct* %10, %struct.sm_element_struct** %6, align 8
  %11 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %12 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %11, i32 0, i32 3
  %13 = load %struct.sm_element_struct*, %struct.sm_element_struct** %12, align 8
  store %struct.sm_element_struct* %13, %struct.sm_element_struct** %7, align 8
  %14 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %15 = icmp eq %struct.sm_element_struct* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %18 = icmp eq %struct.sm_element_struct* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %16, %2
  store i32 0, i32* %3, align 4
  br label %54

20:                                               ; preds = %16
  br label %21

21:                                               ; preds = %53, %20
  %22 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %23 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %26 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %24, %27
  br i1 %28, label %29, label %36

29:                                               ; preds = %21
  %30 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %31 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %30, i32 0, i32 4
  %32 = load %struct.sm_element_struct*, %struct.sm_element_struct** %31, align 8
  store %struct.sm_element_struct* %32, %struct.sm_element_struct** %6, align 8
  %33 = icmp eq %struct.sm_element_struct* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i32 0, i32* %3, align 4
  br label %54

35:                                               ; preds = %29
  br label %53

36:                                               ; preds = %21
  %37 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %38 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %37, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %41 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %40, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp sgt i32 %39, %42
  br i1 %43, label %44, label %51

44:                                               ; preds = %36
  %45 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %46 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %45, i32 0, i32 4
  %47 = load %struct.sm_element_struct*, %struct.sm_element_struct** %46, align 8
  store %struct.sm_element_struct* %47, %struct.sm_element_struct** %7, align 8
  %48 = icmp eq %struct.sm_element_struct* %47, null
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  store i32 0, i32* %3, align 4
  br label %54

50:                                               ; preds = %44
  br label %52

51:                                               ; preds = %36
  store i32 1, i32* %3, align 4
  br label %54

52:                                               ; preds = %50
  br label %53

53:                                               ; preds = %52, %35
  br label %21

54:                                               ; preds = %51, %49, %34, %19
  %55 = load i32, i32* %3, align 4
  ret i32 %55
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sm_row_compare(%struct.sm_row_struct* %0, %struct.sm_row_struct* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.sm_row_struct*, align 8
  %5 = alloca %struct.sm_row_struct*, align 8
  %6 = alloca %struct.sm_element_struct*, align 8
  %7 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_row_struct* %0, %struct.sm_row_struct** %4, align 8
  store %struct.sm_row_struct* %1, %struct.sm_row_struct** %5, align 8
  %8 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %9 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %8, i32 0, i32 3
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  store %struct.sm_element_struct* %10, %struct.sm_element_struct** %6, align 8
  %11 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %12 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %11, i32 0, i32 3
  %13 = load %struct.sm_element_struct*, %struct.sm_element_struct** %12, align 8
  store %struct.sm_element_struct* %13, %struct.sm_element_struct** %7, align 8
  br label %14

14:                                               ; preds = %38, %2
  %15 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %16 = icmp ne %struct.sm_element_struct* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %14
  %18 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %19 = icmp ne %struct.sm_element_struct* %18, null
  br label %20

20:                                               ; preds = %17, %14
  %21 = phi i1 [ false, %14 ], [ %19, %17 ]
  br i1 %21, label %22, label %45

22:                                               ; preds = %20
  %23 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %24 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %27 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %26, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp ne i32 %25, %28
  br i1 %29, label %30, label %38

30:                                               ; preds = %22
  %31 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %32 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %31, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %35 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sub nsw i32 %33, %36
  store i32 %37, i32* %3, align 4
  br label %54

38:                                               ; preds = %22
  %39 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %40 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %39, i32 0, i32 4
  %41 = load %struct.sm_element_struct*, %struct.sm_element_struct** %40, align 8
  store %struct.sm_element_struct* %41, %struct.sm_element_struct** %6, align 8
  %42 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %43 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %42, i32 0, i32 4
  %44 = load %struct.sm_element_struct*, %struct.sm_element_struct** %43, align 8
  store %struct.sm_element_struct* %44, %struct.sm_element_struct** %7, align 8
  br label %14

45:                                               ; preds = %20
  %46 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %47 = icmp ne %struct.sm_element_struct* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  store i32 1, i32* %3, align 4
  br label %54

49:                                               ; preds = %45
  %50 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %51 = icmp ne %struct.sm_element_struct* %50, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  store i32 -1, i32* %3, align 4
  br label %54

53:                                               ; preds = %49
  store i32 0, i32* %3, align 4
  br label %54

54:                                               ; preds = %53, %52, %48, %30
  %55 = load i32, i32* %3, align 4
  ret i32 %55
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sm_row_struct* @sm_row_and(%struct.sm_row_struct* %0, %struct.sm_row_struct* %1) #0 {
  %3 = alloca %struct.sm_row_struct*, align 8
  %4 = alloca %struct.sm_row_struct*, align 8
  %5 = alloca %struct.sm_row_struct*, align 8
  %6 = alloca %struct.sm_element_struct*, align 8
  %7 = alloca %struct.sm_element_struct*, align 8
  %8 = alloca %struct.sm_row_struct*, align 8
  store %struct.sm_row_struct* %0, %struct.sm_row_struct** %4, align 8
  store %struct.sm_row_struct* %1, %struct.sm_row_struct** %5, align 8
  %9 = call %struct.sm_row_struct* @sm_row_alloc()
  store %struct.sm_row_struct* %9, %struct.sm_row_struct** %8, align 8
  %10 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %11 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %10, i32 0, i32 3
  %12 = load %struct.sm_element_struct*, %struct.sm_element_struct** %11, align 8
  store %struct.sm_element_struct* %12, %struct.sm_element_struct** %6, align 8
  %13 = load %struct.sm_row_struct*, %struct.sm_row_struct** %5, align 8
  %14 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %13, i32 0, i32 3
  %15 = load %struct.sm_element_struct*, %struct.sm_element_struct** %14, align 8
  store %struct.sm_element_struct* %15, %struct.sm_element_struct** %7, align 8
  %16 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %17 = icmp eq %struct.sm_element_struct* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %2
  %19 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %20 = icmp eq %struct.sm_element_struct* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %18, %2
  %22 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  store %struct.sm_row_struct* %22, %struct.sm_row_struct** %3, align 8
  br label %78

23:                                               ; preds = %18
  br label %24

24:                                               ; preds = %77, %23
  %25 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %26 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %29 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %27, %30
  br i1 %31, label %32, label %40

32:                                               ; preds = %24
  %33 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %34 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %33, i32 0, i32 4
  %35 = load %struct.sm_element_struct*, %struct.sm_element_struct** %34, align 8
  store %struct.sm_element_struct* %35, %struct.sm_element_struct** %6, align 8
  %36 = icmp eq %struct.sm_element_struct* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %32
  %38 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  store %struct.sm_row_struct* %38, %struct.sm_row_struct** %3, align 8
  br label %78

39:                                               ; preds = %32
  br label %77

40:                                               ; preds = %24
  %41 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %42 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %45 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %43, %46
  br i1 %47, label %48, label %56

48:                                               ; preds = %40
  %49 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %50 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %49, i32 0, i32 4
  %51 = load %struct.sm_element_struct*, %struct.sm_element_struct** %50, align 8
  store %struct.sm_element_struct* %51, %struct.sm_element_struct** %7, align 8
  %52 = icmp eq %struct.sm_element_struct* %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  store %struct.sm_row_struct* %54, %struct.sm_row_struct** %3, align 8
  br label %78

55:                                               ; preds = %48
  br label %76

56:                                               ; preds = %40
  %57 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %58 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %59 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %58, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = call %struct.sm_element_struct* @sm_row_insert(%struct.sm_row_struct* %57, i32 %60)
  %62 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %63 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %62, i32 0, i32 4
  %64 = load %struct.sm_element_struct*, %struct.sm_element_struct** %63, align 8
  store %struct.sm_element_struct* %64, %struct.sm_element_struct** %6, align 8
  %65 = icmp eq %struct.sm_element_struct* %64, null
  br i1 %65, label %66, label %68

66:                                               ; preds = %56
  %67 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  store %struct.sm_row_struct* %67, %struct.sm_row_struct** %3, align 8
  br label %78

68:                                               ; preds = %56
  %69 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  %70 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %69, i32 0, i32 4
  %71 = load %struct.sm_element_struct*, %struct.sm_element_struct** %70, align 8
  store %struct.sm_element_struct* %71, %struct.sm_element_struct** %7, align 8
  %72 = icmp eq %struct.sm_element_struct* %71, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %68
  %74 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  store %struct.sm_row_struct* %74, %struct.sm_row_struct** %3, align 8
  br label %78

75:                                               ; preds = %68
  br label %76

76:                                               ; preds = %75, %55
  br label %77

77:                                               ; preds = %76, %39
  br label %24

78:                                               ; preds = %73, %66, %53, %37, %21
  %79 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  ret %struct.sm_row_struct* %79
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sm_row_hash(%struct.sm_row_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.sm_row_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_row_struct* %0, %struct.sm_row_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %7 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %8 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %7, i32 0, i32 3
  %9 = load %struct.sm_element_struct*, %struct.sm_element_struct** %8, align 8
  store %struct.sm_element_struct* %9, %struct.sm_element_struct** %6, align 8
  br label %10

10:                                               ; preds = %22, %2
  %11 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %12 = icmp ne %struct.sm_element_struct* %11, null
  br i1 %12, label %13, label %26

13:                                               ; preds = %10
  %14 = load i32, i32* %5, align 4
  %15 = mul nsw i32 %14, 17
  %16 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %17 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %15, %18
  %20 = load i32, i32* %4, align 4
  %21 = srem i32 %19, %20
  store i32 %21, i32* %5, align 4
  br label %22

22:                                               ; preds = %13
  %23 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %24 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %23, i32 0, i32 4
  %25 = load %struct.sm_element_struct*, %struct.sm_element_struct** %24, align 8
  store %struct.sm_element_struct* %25, %struct.sm_element_struct** %6, align 8
  br label %10

26:                                               ; preds = %10
  %27 = load i32, i32* %5, align 4
  ret i32 %27
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_row_remove_element(%struct.sm_row_struct* %0, %struct.sm_element_struct* %1) #0 {
  %3 = alloca %struct.sm_row_struct*, align 8
  %4 = alloca %struct.sm_element_struct*, align 8
  store %struct.sm_row_struct* %0, %struct.sm_row_struct** %3, align 8
  store %struct.sm_element_struct* %1, %struct.sm_element_struct** %4, align 8
  %5 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %6 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %5, i32 0, i32 5
  %7 = load %struct.sm_element_struct*, %struct.sm_element_struct** %6, align 8
  %8 = icmp eq %struct.sm_element_struct* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %11 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %10, i32 0, i32 4
  %12 = load %struct.sm_element_struct*, %struct.sm_element_struct** %11, align 8
  %13 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %14 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %13, i32 0, i32 3
  store %struct.sm_element_struct* %12, %struct.sm_element_struct** %14, align 8
  br label %23

15:                                               ; preds = %2
  %16 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %17 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %16, i32 0, i32 4
  %18 = load %struct.sm_element_struct*, %struct.sm_element_struct** %17, align 8
  %19 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %20 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %19, i32 0, i32 5
  %21 = load %struct.sm_element_struct*, %struct.sm_element_struct** %20, align 8
  %22 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %21, i32 0, i32 4
  store %struct.sm_element_struct* %18, %struct.sm_element_struct** %22, align 8
  br label %23

23:                                               ; preds = %15, %9
  %24 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %25 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %24, i32 0, i32 4
  %26 = load %struct.sm_element_struct*, %struct.sm_element_struct** %25, align 8
  %27 = icmp eq %struct.sm_element_struct* %26, null
  br i1 %27, label %28, label %34

28:                                               ; preds = %23
  %29 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %30 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %29, i32 0, i32 5
  %31 = load %struct.sm_element_struct*, %struct.sm_element_struct** %30, align 8
  %32 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %33 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %32, i32 0, i32 4
  store %struct.sm_element_struct* %31, %struct.sm_element_struct** %33, align 8
  br label %42

34:                                               ; preds = %23
  %35 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %36 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %35, i32 0, i32 5
  %37 = load %struct.sm_element_struct*, %struct.sm_element_struct** %36, align 8
  %38 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %39 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %38, i32 0, i32 4
  %40 = load %struct.sm_element_struct*, %struct.sm_element_struct** %39, align 8
  %41 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %40, i32 0, i32 5
  store %struct.sm_element_struct* %37, %struct.sm_element_struct** %41, align 8
  br label %42

42:                                               ; preds = %34, %28
  %43 = load %struct.sm_row_struct*, %struct.sm_row_struct** %3, align 8
  %44 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = add nsw i32 %45, -1
  store i32 %46, i32* %44, align 4
  %47 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %48 = icmp ne %struct.sm_element_struct* %47, null
  br i1 %48, label %49, label %52

49:                                               ; preds = %42
  %50 = load %struct.sm_element_struct*, %struct.sm_element_struct** %4, align 8
  %51 = bitcast %struct.sm_element_struct* %50 to i8*
  call void @free(i8* %51) #7
  store %struct.sm_element_struct* null, %struct.sm_element_struct** %4, align 8
  br label %52

52:                                               ; preds = %49, %42
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sm_row_print(%struct._IO_FILE* %0, %struct.sm_row_struct* %1) #0 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca %struct.sm_row_struct*, align 8
  %5 = alloca %struct.sm_element_struct*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store %struct.sm_row_struct* %1, %struct.sm_row_struct** %4, align 8
  %6 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %7 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %6, i32 0, i32 3
  %8 = load %struct.sm_element_struct*, %struct.sm_element_struct** %7, align 8
  store %struct.sm_element_struct* %8, %struct.sm_element_struct** %5, align 8
  br label %9

9:                                                ; preds = %18, %2
  %10 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %11 = icmp ne %struct.sm_element_struct* %10, null
  br i1 %11, label %12, label %22

12:                                               ; preds = %9
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %14 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %15 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.506, i64 0, i64 0), i32 %16)
  br label %18

18:                                               ; preds = %12
  %19 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %20 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %19, i32 0, i32 4
  %21 = load %struct.sm_element_struct*, %struct.sm_element_struct** %20, align 8
  store %struct.sm_element_struct* %21, %struct.sm_element_struct** %5, align 8
  br label %9

22:                                               ; preds = %9
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @full_row(i32* %0, i32* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = getelementptr inbounds i32, i32* %7, i64 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1023
  store i32 %10, i32* %6, align 4
  br label %11

11:                                               ; preds = %31, %2
  %12 = load i32*, i32** %4, align 8
  %13 = load i32, i32* %6, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %12, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = load i32*, i32** %5, align 8
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = or i32 %16, %21
  %23 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 12), align 8
  %24 = load i32, i32* %6, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %23, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %22, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %11
  store i32 0, i32* %3, align 4
  br label %36

30:                                               ; preds = %11
  br label %31

31:                                               ; preds = %30
  %32 = load i32, i32* %6, align 4
  %33 = add nsw i32 %32, -1
  store i32 %33, i32* %6, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %11, label %35

35:                                               ; preds = %31
  store i32 1, i32* %3, align 4
  br label %36

36:                                               ; preds = %35, %29
  %37 = load i32, i32* %3, align 4
  ret i32 %37
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @cdist0(i32* %0, i32* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  %13 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 15), align 4
  store i32 %13, i32* %7, align 4
  %14 = icmp ne i32 %13, -1
  br i1 %14, label %15, label %66

15:                                               ; preds = %2
  %16 = load i32*, i32** %4, align 8
  %17 = load i32, i32* %7, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %16, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = load i32*, i32** %5, align 8
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i32, i32* %21, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %20, %25
  store i32 %26, i32* %8, align 4
  %27 = load i32, i32* %8, align 4
  %28 = load i32, i32* %8, align 4
  %29 = lshr i32 %28, 1
  %30 = or i32 %27, %29
  %31 = xor i32 %30, -1
  %32 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 14), align 8
  %33 = and i32 %31, %32
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %15
  store i32 0, i32* %3, align 4
  br label %122

36:                                               ; preds = %15
  store i32 1, i32* %6, align 4
  br label %37

37:                                               ; preds = %62, %36
  %38 = load i32, i32* %6, align 4
  %39 = load i32, i32* %7, align 4
  %40 = icmp slt i32 %38, %39
  br i1 %40, label %41, label %65

41:                                               ; preds = %37
  %42 = load i32*, i32** %4, align 8
  %43 = load i32, i32* %6, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %42, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = load i32*, i32** %5, align 8
  %48 = load i32, i32* %6, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, i32* %47, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %46, %51
  store i32 %52, i32* %8, align 4
  %53 = load i32, i32* %8, align 4
  %54 = load i32, i32* %8, align 4
  %55 = lshr i32 %54, 1
  %56 = or i32 %53, %55
  %57 = xor i32 %56, -1
  %58 = and i32 %57, 1431655765
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %41
  store i32 0, i32* %3, align 4
  br label %122

61:                                               ; preds = %41
  br label %62

62:                                               ; preds = %61
  %63 = load i32, i32* %6, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %6, align 4
  br label %37

65:                                               ; preds = %37
  br label %66

66:                                               ; preds = %65, %2
  %67 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %67, i32* %10, align 4
  br label %68

68:                                               ; preds = %118, %66
  %69 = load i32, i32* %10, align 4
  %70 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %71 = icmp slt i32 %69, %70
  br i1 %71, label %72, label %121

72:                                               ; preds = %68
  %73 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %74 = load i32, i32* %10, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32*, i32** %73, i64 %75
  %77 = load i32*, i32** %76, align 8
  store i32* %77, i32** %12, align 8
  %78 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  %79 = load i32, i32* %10, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %78, i64 %80
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %11, align 4
  %83 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %84 = load i32, i32* %10, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i32, i32* %83, i64 %85
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %9, align 4
  br label %88

88:                                               ; preds = %113, %72
  %89 = load i32, i32* %9, align 4
  %90 = load i32, i32* %11, align 4
  %91 = icmp sle i32 %89, %90
  br i1 %91, label %92, label %116

92:                                               ; preds = %88
  %93 = load i32*, i32** %4, align 8
  %94 = load i32, i32* %9, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i32, i32* %93, i64 %95
  %97 = load i32, i32* %96, align 4
  %98 = load i32*, i32** %5, align 8
  %99 = load i32, i32* %9, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i32, i32* %98, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = and i32 %97, %102
  %104 = load i32*, i32** %12, align 8
  %105 = load i32, i32* %9, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i32, i32* %104, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = and i32 %103, %108
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %92
  br label %117

112:                                              ; preds = %92
  br label %113

113:                                              ; preds = %112
  %114 = load i32, i32* %9, align 4
  %115 = add nsw i32 %114, 1
  store i32 %115, i32* %9, align 4
  br label %88

116:                                              ; preds = %88
  store i32 0, i32* %3, align 4
  br label %122

117:                                              ; preds = %111
  br label %118

118:                                              ; preds = %117
  %119 = load i32, i32* %10, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %10, align 4
  br label %68

121:                                              ; preds = %68
  store i32 1, i32* %3, align 4
  br label %122

122:                                              ; preds = %121, %116, %60, %35
  %123 = load i32, i32* %3, align 4
  ret i32 %123
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @cdist01(i32* %0, i32* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32 0, i32* %6, align 4
  %14 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 15), align 4
  store i32 %14, i32* %8, align 4
  %15 = icmp ne i32 %14, -1
  br i1 %15, label %16, label %130

16:                                               ; preds = %2
  %17 = load i32*, i32** %4, align 8
  %18 = load i32, i32* %8, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = load i32*, i32** %5, align 8
  %23 = load i32, i32* %8, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %22, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %21, %26
  store i32 %27, i32* %9, align 4
  %28 = load i32, i32* %9, align 4
  %29 = load i32, i32* %9, align 4
  %30 = lshr i32 %29, 1
  %31 = or i32 %28, %30
  %32 = xor i32 %31, -1
  %33 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 14), align 8
  %34 = and i32 %32, %33
  store i32 %34, i32* %9, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %66

36:                                               ; preds = %16
  %37 = load i32, i32* %9, align 4
  %38 = and i32 %37, 255
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = load i32, i32* %9, align 4
  %43 = lshr i32 %42, 8
  %44 = and i32 %43, 255
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = add nsw i32 %41, %47
  %49 = load i32, i32* %9, align 4
  %50 = lshr i32 %49, 16
  %51 = and i32 %50, 255
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = add nsw i32 %48, %54
  %56 = load i32, i32* %9, align 4
  %57 = lshr i32 %56, 24
  %58 = and i32 %57, 255
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = add nsw i32 %55, %61
  store i32 %62, i32* %6, align 4
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %65

64:                                               ; preds = %36
  store i32 2, i32* %3, align 4
  br label %192

65:                                               ; preds = %36
  br label %66

66:                                               ; preds = %65, %16
  store i32 1, i32* %7, align 4
  br label %67

67:                                               ; preds = %126, %66
  %68 = load i32, i32* %7, align 4
  %69 = load i32, i32* %8, align 4
  %70 = icmp slt i32 %68, %69
  br i1 %70, label %71, label %129

71:                                               ; preds = %67
  %72 = load i32*, i32** %4, align 8
  %73 = load i32, i32* %7, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, i32* %72, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = load i32*, i32** %5, align 8
  %78 = load i32, i32* %7, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i32, i32* %77, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %76, %81
  store i32 %82, i32* %9, align 4
  %83 = load i32, i32* %9, align 4
  %84 = load i32, i32* %9, align 4
  %85 = lshr i32 %84, 1
  %86 = or i32 %83, %85
  %87 = xor i32 %86, -1
  %88 = and i32 %87, 1431655765
  store i32 %88, i32* %9, align 4
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %90, label %125

90:                                               ; preds = %71
  %91 = load i32, i32* %6, align 4
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %123, label %93

93:                                               ; preds = %90
  %94 = load i32, i32* %9, align 4
  %95 = and i32 %94, 255
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = load i32, i32* %9, align 4
  %100 = lshr i32 %99, 8
  %101 = and i32 %100, 255
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = add nsw i32 %98, %104
  %106 = load i32, i32* %9, align 4
  %107 = lshr i32 %106, 16
  %108 = and i32 %107, 255
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = add nsw i32 %105, %111
  %113 = load i32, i32* %9, align 4
  %114 = lshr i32 %113, 24
  %115 = and i32 %114, 255
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = add nsw i32 %112, %118
  %120 = load i32, i32* %6, align 4
  %121 = add nsw i32 %120, %119
  store i32 %121, i32* %6, align 4
  %122 = icmp sgt i32 %121, 1
  br i1 %122, label %123, label %124

123:                                              ; preds = %93, %90
  store i32 2, i32* %3, align 4
  br label %192

124:                                              ; preds = %93
  br label %125

125:                                              ; preds = %124, %71
  br label %126

126:                                              ; preds = %125
  %127 = load i32, i32* %7, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %7, align 4
  br label %67

129:                                              ; preds = %67
  br label %130

130:                                              ; preds = %129, %2
  %131 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %131, i32* %11, align 4
  br label %132

132:                                              ; preds = %187, %130
  %133 = load i32, i32* %11, align 4
  %134 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %135 = icmp slt i32 %133, %134
  br i1 %135, label %136, label %190

136:                                              ; preds = %132
  %137 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %138 = load i32, i32* %11, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i32*, i32** %137, i64 %139
  %141 = load i32*, i32** %140, align 8
  store i32* %141, i32** %13, align 8
  %142 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  %143 = load i32, i32* %11, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds i32, i32* %142, i64 %144
  %146 = load i32, i32* %145, align 4
  store i32 %146, i32* %12, align 4
  %147 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %148 = load i32, i32* %11, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i32, i32* %147, i64 %149
  %151 = load i32, i32* %150, align 4
  store i32 %151, i32* %10, align 4
  br label %152

152:                                              ; preds = %177, %136
  %153 = load i32, i32* %10, align 4
  %154 = load i32, i32* %12, align 4
  %155 = icmp sle i32 %153, %154
  br i1 %155, label %156, label %180

156:                                              ; preds = %152
  %157 = load i32*, i32** %4, align 8
  %158 = load i32, i32* %10, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i32, i32* %157, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = load i32*, i32** %5, align 8
  %163 = load i32, i32* %10, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i32, i32* %162, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = and i32 %161, %166
  %168 = load i32*, i32** %13, align 8
  %169 = load i32, i32* %10, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i32, i32* %168, i64 %170
  %172 = load i32, i32* %171, align 4
  %173 = and i32 %167, %172
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %156
  br label %186

176:                                              ; preds = %156
  br label %177

177:                                              ; preds = %176
  %178 = load i32, i32* %10, align 4
  %179 = add nsw i32 %178, 1
  store i32 %179, i32* %10, align 4
  br label %152

180:                                              ; preds = %152
  %181 = load i32, i32* %6, align 4
  %182 = add nsw i32 %181, 1
  store i32 %182, i32* %6, align 4
  %183 = icmp sgt i32 %182, 1
  br i1 %183, label %184, label %185

184:                                              ; preds = %180
  store i32 2, i32* %3, align 4
  br label %192

185:                                              ; preds = %180
  br label %186

186:                                              ; preds = %185, %175
  br label %187

187:                                              ; preds = %186
  %188 = load i32, i32* %11, align 4
  %189 = add nsw i32 %188, 1
  store i32 %189, i32* %11, align 4
  br label %132

190:                                              ; preds = %132
  %191 = load i32, i32* %6, align 4
  store i32 %191, i32* %3, align 4
  br label %192

192:                                              ; preds = %190, %184, %123, %64
  %193 = load i32, i32* %3, align 4
  ret i32 %193
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @cdist(i32* %0, i32* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  store i32 0, i32* %5, align 4
  %13 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 15), align 4
  store i32 %13, i32* %7, align 4
  %14 = icmp ne i32 %13, -1
  br i1 %14, label %15, label %120

15:                                               ; preds = %2
  %16 = load i32*, i32** %3, align 8
  %17 = load i32, i32* %7, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %16, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = load i32*, i32** %4, align 8
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i32, i32* %21, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %20, %25
  store i32 %26, i32* %8, align 4
  %27 = load i32, i32* %8, align 4
  %28 = load i32, i32* %8, align 4
  %29 = lshr i32 %28, 1
  %30 = or i32 %27, %29
  %31 = xor i32 %30, -1
  %32 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 14), align 8
  %33 = and i32 %31, %32
  store i32 %33, i32* %8, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %62

35:                                               ; preds = %15
  %36 = load i32, i32* %8, align 4
  %37 = and i32 %36, 255
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = load i32, i32* %8, align 4
  %42 = lshr i32 %41, 8
  %43 = and i32 %42, 255
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = add nsw i32 %40, %46
  %48 = load i32, i32* %8, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 255
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = add nsw i32 %47, %53
  %55 = load i32, i32* %8, align 4
  %56 = lshr i32 %55, 24
  %57 = and i32 %56, 255
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = add nsw i32 %54, %60
  store i32 %61, i32* %5, align 4
  br label %62

62:                                               ; preds = %35, %15
  store i32 1, i32* %6, align 4
  br label %63

63:                                               ; preds = %116, %62
  %64 = load i32, i32* %6, align 4
  %65 = load i32, i32* %7, align 4
  %66 = icmp slt i32 %64, %65
  br i1 %66, label %67, label %119

67:                                               ; preds = %63
  %68 = load i32*, i32** %3, align 8
  %69 = load i32, i32* %6, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, i32* %68, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = load i32*, i32** %4, align 8
  %74 = load i32, i32* %6, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %73, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = and i32 %72, %77
  store i32 %78, i32* %8, align 4
  %79 = load i32, i32* %8, align 4
  %80 = load i32, i32* %8, align 4
  %81 = lshr i32 %80, 1
  %82 = or i32 %79, %81
  %83 = xor i32 %82, -1
  %84 = and i32 %83, 1431655765
  store i32 %84, i32* %8, align 4
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %115

86:                                               ; preds = %67
  %87 = load i32, i32* %8, align 4
  %88 = and i32 %87, 255
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = load i32, i32* %8, align 4
  %93 = lshr i32 %92, 8
  %94 = and i32 %93, 255
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %95
  %97 = load i32, i32* %96, align 4
  %98 = add nsw i32 %91, %97
  %99 = load i32, i32* %8, align 4
  %100 = lshr i32 %99, 16
  %101 = and i32 %100, 255
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = add nsw i32 %98, %104
  %106 = load i32, i32* %8, align 4
  %107 = lshr i32 %106, 24
  %108 = and i32 %107, 255
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = add nsw i32 %105, %111
  %113 = load i32, i32* %5, align 4
  %114 = add nsw i32 %113, %112
  store i32 %114, i32* %5, align 4
  br label %115

115:                                              ; preds = %86, %67
  br label %116

116:                                              ; preds = %115
  %117 = load i32, i32* %6, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %6, align 4
  br label %63

119:                                              ; preds = %63
  br label %120

120:                                              ; preds = %119, %2
  %121 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %121, i32* %10, align 4
  br label %122

122:                                              ; preds = %174, %120
  %123 = load i32, i32* %10, align 4
  %124 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %125 = icmp slt i32 %123, %124
  br i1 %125, label %126, label %177

126:                                              ; preds = %122
  %127 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %128 = load i32, i32* %10, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32*, i32** %127, i64 %129
  %131 = load i32*, i32** %130, align 8
  store i32* %131, i32** %12, align 8
  %132 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  %133 = load i32, i32* %10, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i32, i32* %132, i64 %134
  %136 = load i32, i32* %135, align 4
  store i32 %136, i32* %11, align 4
  %137 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %138 = load i32, i32* %10, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i32, i32* %137, i64 %139
  %141 = load i32, i32* %140, align 4
  store i32 %141, i32* %9, align 4
  br label %142

142:                                              ; preds = %167, %126
  %143 = load i32, i32* %9, align 4
  %144 = load i32, i32* %11, align 4
  %145 = icmp sle i32 %143, %144
  br i1 %145, label %146, label %170

146:                                              ; preds = %142
  %147 = load i32*, i32** %3, align 8
  %148 = load i32, i32* %9, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i32, i32* %147, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = load i32*, i32** %4, align 8
  %153 = load i32, i32* %9, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i32, i32* %152, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = and i32 %151, %156
  %158 = load i32*, i32** %12, align 8
  %159 = load i32, i32* %9, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i32, i32* %158, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = and i32 %157, %162
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %146
  br label %173

166:                                              ; preds = %146
  br label %167

167:                                              ; preds = %166
  %168 = load i32, i32* %9, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %9, align 4
  br label %142

170:                                              ; preds = %142
  %171 = load i32, i32* %5, align 4
  %172 = add nsw i32 %171, 1
  store i32 %172, i32* %5, align 4
  br label %173

173:                                              ; preds = %170, %165
  br label %174

174:                                              ; preds = %173
  %175 = load i32, i32* %10, align 4
  %176 = add nsw i32 %175, 1
  store i32 %176, i32* %10, align 4
  br label %122

177:                                              ; preds = %122
  %178 = load i32, i32* %5, align 4
  ret i32 %178
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @force_lower(i32* %0, i32* %1, i32* %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %14 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 15), align 4
  store i32 %14, i32* %8, align 4
  %15 = icmp ne i32 %14, -1
  br i1 %15, label %16, label %99

16:                                               ; preds = %3
  %17 = load i32*, i32** %5, align 8
  %18 = load i32, i32* %8, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = load i32*, i32** %6, align 8
  %23 = load i32, i32* %8, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %22, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %21, %26
  store i32 %27, i32* %9, align 4
  %28 = load i32, i32* %9, align 4
  %29 = load i32, i32* %9, align 4
  %30 = lshr i32 %29, 1
  %31 = or i32 %28, %30
  %32 = xor i32 %31, -1
  %33 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 14), align 8
  %34 = and i32 %32, %33
  store i32 %34, i32* %9, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %53

36:                                               ; preds = %16
  %37 = load i32, i32* %9, align 4
  %38 = load i32, i32* %9, align 4
  %39 = shl i32 %38, 1
  %40 = or i32 %37, %39
  %41 = load i32*, i32** %5, align 8
  %42 = load i32, i32* %8, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %41, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %40, %45
  %47 = load i32*, i32** %4, align 8
  %48 = load i32, i32* %8, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, i32* %47, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = or i32 %51, %46
  store i32 %52, i32* %50, align 4
  br label %53

53:                                               ; preds = %36, %16
  store i32 1, i32* %7, align 4
  br label %54

54:                                               ; preds = %95, %53
  %55 = load i32, i32* %7, align 4
  %56 = load i32, i32* %8, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %58, label %98

58:                                               ; preds = %54
  %59 = load i32*, i32** %5, align 8
  %60 = load i32, i32* %7, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i32, i32* %59, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = load i32*, i32** %6, align 8
  %65 = load i32, i32* %7, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i32, i32* %64, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = and i32 %63, %68
  store i32 %69, i32* %9, align 4
  %70 = load i32, i32* %9, align 4
  %71 = load i32, i32* %9, align 4
  %72 = lshr i32 %71, 1
  %73 = or i32 %70, %72
  %74 = xor i32 %73, -1
  %75 = and i32 %74, 1431655765
  store i32 %75, i32* %9, align 4
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %94

77:                                               ; preds = %58
  %78 = load i32, i32* %9, align 4
  %79 = load i32, i32* %9, align 4
  %80 = shl i32 %79, 1
  %81 = or i32 %78, %80
  %82 = load i32*, i32** %5, align 8
  %83 = load i32, i32* %7, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i32, i32* %82, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %81, %86
  %88 = load i32*, i32** %4, align 8
  %89 = load i32, i32* %7, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i32, i32* %88, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = or i32 %92, %87
  store i32 %93, i32* %91, align 4
  br label %94

94:                                               ; preds = %77, %58
  br label %95

95:                                               ; preds = %94
  %96 = load i32, i32* %7, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %7, align 4
  br label %54

98:                                               ; preds = %54
  br label %99

99:                                               ; preds = %98, %3
  %100 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %100, i32* %11, align 4
  br label %101

101:                                              ; preds = %182, %99
  %102 = load i32, i32* %11, align 4
  %103 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %105, label %185

105:                                              ; preds = %101
  %106 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %107 = load i32, i32* %11, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i32*, i32** %106, i64 %108
  %110 = load i32*, i32** %109, align 8
  store i32* %110, i32** %13, align 8
  %111 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  %112 = load i32, i32* %11, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, i32* %111, i64 %113
  %115 = load i32, i32* %114, align 4
  store i32 %115, i32* %12, align 4
  %116 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %117 = load i32, i32* %11, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i32, i32* %116, i64 %118
  %120 = load i32, i32* %119, align 4
  store i32 %120, i32* %10, align 4
  br label %121

121:                                              ; preds = %146, %105
  %122 = load i32, i32* %10, align 4
  %123 = load i32, i32* %12, align 4
  %124 = icmp sle i32 %122, %123
  br i1 %124, label %125, label %149

125:                                              ; preds = %121
  %126 = load i32*, i32** %5, align 8
  %127 = load i32, i32* %10, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i32, i32* %126, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = load i32*, i32** %6, align 8
  %132 = load i32, i32* %10, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i32, i32* %131, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %130, %135
  %137 = load i32*, i32** %13, align 8
  %138 = load i32, i32* %10, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i32, i32* %137, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = and i32 %136, %141
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %125
  br label %181

145:                                              ; preds = %125
  br label %146

146:                                              ; preds = %145
  %147 = load i32, i32* %10, align 4
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %10, align 4
  br label %121

149:                                              ; preds = %121
  %150 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %151 = load i32, i32* %11, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i32, i32* %150, i64 %152
  %154 = load i32, i32* %153, align 4
  store i32 %154, i32* %10, align 4
  br label %155

155:                                              ; preds = %177, %149
  %156 = load i32, i32* %10, align 4
  %157 = load i32, i32* %12, align 4
  %158 = icmp sle i32 %156, %157
  br i1 %158, label %159, label %180

159:                                              ; preds = %155
  %160 = load i32*, i32** %5, align 8
  %161 = load i32, i32* %10, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i32, i32* %160, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = load i32*, i32** %13, align 8
  %166 = load i32, i32* %10, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i32, i32* %165, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = and i32 %164, %169
  %171 = load i32*, i32** %4, align 8
  %172 = load i32, i32* %10, align 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i32, i32* %171, i64 %173
  %175 = load i32, i32* %174, align 4
  %176 = or i32 %175, %170
  store i32 %176, i32* %174, align 4
  br label %177

177:                                              ; preds = %159
  %178 = load i32, i32* %10, align 4
  %179 = add nsw i32 %178, 1
  store i32 %179, i32* %10, align 4
  br label %155

180:                                              ; preds = %155
  br label %181

181:                                              ; preds = %180, %144
  br label %182

182:                                              ; preds = %181
  %183 = load i32, i32* %11, align 4
  %184 = add nsw i32 %183, 1
  store i32 %184, i32* %11, align 4
  br label %101

185:                                              ; preds = %101
  %186 = load i32*, i32** %4, align 8
  ret i32* %186
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @consensus(i32* %0, i32* %1, i32* %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %17 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %18 = icmp sle i32 %17, 32
  br i1 %18, label %19, label %20

19:                                               ; preds = %3
  br label %25

20:                                               ; preds = %3
  %21 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %22 = sub nsw i32 %21, 1
  %23 = ashr i32 %22, 5
  %24 = add nsw i32 %23, 1
  br label %25

25:                                               ; preds = %20, %19
  %26 = phi i32 [ 1, %19 ], [ %24, %20 ]
  store i32 %26, i32* %7, align 4
  %27 = load i32, i32* %7, align 4
  %28 = load i32*, i32** %4, align 8
  store i32 %27, i32* %28, align 4
  br label %29

29:                                               ; preds = %34, %25
  %30 = load i32*, i32** %4, align 8
  %31 = load i32, i32* %7, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i32, i32* %30, i64 %32
  store i32 0, i32* %33, align 4
  br label %34

34:                                               ; preds = %29
  %35 = load i32, i32* %7, align 4
  %36 = add nsw i32 %35, -1
  store i32 %36, i32* %7, align 4
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %29, label %38

38:                                               ; preds = %34
  %39 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 15), align 4
  store i32 %39, i32* %9, align 4
  %40 = icmp ne i32 %39, -1
  br i1 %40, label %41, label %144

41:                                               ; preds = %38
  %42 = load i32*, i32** %5, align 8
  %43 = load i32, i32* %9, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %42, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = load i32*, i32** %6, align 8
  %48 = load i32, i32* %9, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, i32* %47, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %46, %51
  store i32 %52, i32* %10, align 4
  %53 = load i32*, i32** %4, align 8
  %54 = load i32, i32* %9, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %53, i64 %55
  store i32 %52, i32* %56, align 4
  %57 = load i32, i32* %10, align 4
  %58 = load i32, i32* %10, align 4
  %59 = lshr i32 %58, 1
  %60 = or i32 %57, %59
  %61 = xor i32 %60, -1
  %62 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 14), align 8
  %63 = and i32 %61, %62
  store i32 %63, i32* %10, align 4
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %88

65:                                               ; preds = %41
  %66 = load i32, i32* %10, align 4
  %67 = load i32, i32* %10, align 4
  %68 = shl i32 %67, 1
  %69 = or i32 %66, %68
  %70 = load i32*, i32** %5, align 8
  %71 = load i32, i32* %9, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %70, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = load i32*, i32** %6, align 8
  %76 = load i32, i32* %9, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i32, i32* %75, i64 %77
  %79 = load i32, i32* %78, align 4
  %80 = or i32 %74, %79
  %81 = and i32 %69, %80
  %82 = load i32*, i32** %4, align 8
  %83 = load i32, i32* %9, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i32, i32* %82, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = or i32 %86, %81
  store i32 %87, i32* %85, align 4
  br label %88

88:                                               ; preds = %65, %41
  store i32 1, i32* %8, align 4
  br label %89

89:                                               ; preds = %140, %88
  %90 = load i32, i32* %8, align 4
  %91 = load i32, i32* %9, align 4
  %92 = icmp slt i32 %90, %91
  br i1 %92, label %93, label %143

93:                                               ; preds = %89
  %94 = load i32*, i32** %5, align 8
  %95 = load i32, i32* %8, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i32, i32* %94, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = load i32*, i32** %6, align 8
  %100 = load i32, i32* %8, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, i32* %99, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %98, %103
  store i32 %104, i32* %10, align 4
  %105 = load i32*, i32** %4, align 8
  %106 = load i32, i32* %8, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i32, i32* %105, i64 %107
  store i32 %104, i32* %108, align 4
  %109 = load i32, i32* %10, align 4
  %110 = load i32, i32* %10, align 4
  %111 = lshr i32 %110, 1
  %112 = or i32 %109, %111
  %113 = xor i32 %112, -1
  %114 = and i32 %113, 1431655765
  store i32 %114, i32* %10, align 4
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %116, label %139

116:                                              ; preds = %93
  %117 = load i32, i32* %10, align 4
  %118 = load i32, i32* %10, align 4
  %119 = shl i32 %118, 1
  %120 = or i32 %117, %119
  %121 = load i32*, i32** %5, align 8
  %122 = load i32, i32* %8, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i32, i32* %121, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = load i32*, i32** %6, align 8
  %127 = load i32, i32* %8, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i32, i32* %126, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = or i32 %125, %130
  %132 = and i32 %120, %131
  %133 = load i32*, i32** %4, align 8
  %134 = load i32, i32* %8, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i32, i32* %133, i64 %135
  %137 = load i32, i32* %136, align 4
  %138 = or i32 %137, %132
  store i32 %138, i32* %136, align 4
  br label %139

139:                                              ; preds = %116, %93
  br label %140

140:                                              ; preds = %139
  %141 = load i32, i32* %8, align 4
  %142 = add nsw i32 %141, 1
  store i32 %142, i32* %8, align 4
  br label %89

143:                                              ; preds = %89
  br label %144

144:                                              ; preds = %143, %38
  %145 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %145, i32* %12, align 4
  br label %146

146:                                              ; preds = %243, %144
  %147 = load i32, i32* %12, align 4
  %148 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %149 = icmp slt i32 %147, %148
  br i1 %149, label %150, label %246

150:                                              ; preds = %146
  %151 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %152 = load i32, i32* %12, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i32*, i32** %151, i64 %153
  %155 = load i32*, i32** %154, align 8
  store i32* %155, i32** %16, align 8
  %156 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  %157 = load i32, i32* %12, align 4
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i32, i32* %156, i64 %158
  %160 = load i32, i32* %159, align 4
  store i32 %160, i32* %15, align 4
  store i32 1, i32* %11, align 4
  %161 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %162 = load i32, i32* %12, align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i32, i32* %161, i64 %163
  %165 = load i32, i32* %164, align 4
  store i32 %165, i32* %14, align 4
  br label %166

166:                                              ; preds = %198, %150
  %167 = load i32, i32* %14, align 4
  %168 = load i32, i32* %15, align 4
  %169 = icmp sle i32 %167, %168
  br i1 %169, label %170, label %201

170:                                              ; preds = %166
  %171 = load i32*, i32** %5, align 8
  %172 = load i32, i32* %14, align 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i32, i32* %171, i64 %173
  %175 = load i32, i32* %174, align 4
  %176 = load i32*, i32** %6, align 8
  %177 = load i32, i32* %14, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds i32, i32* %176, i64 %178
  %180 = load i32, i32* %179, align 4
  %181 = and i32 %175, %180
  %182 = load i32*, i32** %16, align 8
  %183 = load i32, i32* %14, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i32, i32* %182, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = and i32 %181, %186
  store i32 %187, i32* %13, align 4
  %188 = icmp ne i32 %187, 0
  br i1 %188, label %189, label %197

189:                                              ; preds = %170
  store i32 0, i32* %11, align 4
  %190 = load i32, i32* %13, align 4
  %191 = load i32*, i32** %4, align 8
  %192 = load i32, i32* %14, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds i32, i32* %191, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = or i32 %195, %190
  store i32 %196, i32* %194, align 4
  br label %197

197:                                              ; preds = %189, %170
  br label %198

198:                                              ; preds = %197
  %199 = load i32, i32* %14, align 4
  %200 = add nsw i32 %199, 1
  store i32 %200, i32* %14, align 4
  br label %166

201:                                              ; preds = %166
  %202 = load i32, i32* %11, align 4
  %203 = icmp ne i32 %202, 0
  br i1 %203, label %204, label %242

204:                                              ; preds = %201
  %205 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %206 = load i32, i32* %12, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds i32, i32* %205, i64 %207
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %14, align 4
  br label %210

210:                                              ; preds = %238, %204
  %211 = load i32, i32* %14, align 4
  %212 = load i32, i32* %15, align 4
  %213 = icmp sle i32 %211, %212
  br i1 %213, label %214, label %241

214:                                              ; preds = %210
  %215 = load i32*, i32** %16, align 8
  %216 = load i32, i32* %14, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds i32, i32* %215, i64 %217
  %219 = load i32, i32* %218, align 4
  %220 = load i32*, i32** %5, align 8
  %221 = load i32, i32* %14, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i32, i32* %220, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = load i32*, i32** %6, align 8
  %226 = load i32, i32* %14, align 4
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds i32, i32* %225, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = or i32 %224, %229
  %231 = and i32 %219, %230
  %232 = load i32*, i32** %4, align 8
  %233 = load i32, i32* %14, align 4
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds i32, i32* %232, i64 %234
  %236 = load i32, i32* %235, align 4
  %237 = or i32 %236, %231
  store i32 %237, i32* %235, align 4
  br label %238

238:                                              ; preds = %214
  %239 = load i32, i32* %14, align 4
  %240 = add nsw i32 %239, 1
  store i32 %240, i32* %14, align 4
  br label %210

241:                                              ; preds = %210
  br label %242

242:                                              ; preds = %241, %201
  br label %243

243:                                              ; preds = %242
  %244 = load i32, i32* %12, align 4
  %245 = add nsw i32 %244, 1
  store i32 %245, i32* %12, align 4
  br label %146

246:                                              ; preds = %146
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @cactive(i32* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32 -1, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %13 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 15), align 4
  store i32 %13, i32* %7, align 4
  %14 = icmp ne i32 %13, -1
  br i1 %14, label %15, label %128

15:                                               ; preds = %1
  %16 = load i32*, i32** %3, align 8
  %17 = load i32, i32* %7, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %16, i64 %18
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %8, align 4
  %21 = load i32, i32* %8, align 4
  %22 = load i32, i32* %8, align 4
  %23 = lshr i32 %22, 1
  %24 = and i32 %21, %23
  %25 = xor i32 %24, -1
  %26 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 14), align 8
  %27 = and i32 %25, %26
  store i32 %27, i32* %8, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %66

29:                                               ; preds = %15
  %30 = load i32, i32* %8, align 4
  %31 = and i32 %30, 255
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = load i32, i32* %8, align 4
  %36 = lshr i32 %35, 8
  %37 = and i32 %36, 255
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %34, %40
  %42 = load i32, i32* %8, align 4
  %43 = lshr i32 %42, 16
  %44 = and i32 %43, 255
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = add nsw i32 %41, %47
  %49 = load i32, i32* %8, align 4
  %50 = lshr i32 %49, 24
  %51 = and i32 %50, 255
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = add nsw i32 %48, %54
  store i32 %55, i32* %5, align 4
  %56 = icmp sgt i32 %55, 1
  br i1 %56, label %57, label %58

57:                                               ; preds = %29
  store i32 -1, i32* %2, align 4
  br label %185

58:                                               ; preds = %29
  %59 = load i32, i32* %7, align 4
  %60 = sub nsw i32 %59, 1
  %61 = mul nsw i32 %60, 16
  %62 = load i32, i32* %8, align 4
  %63 = call i32 (i32, ...) bitcast (i32 (i32)* @bit_index to i32 (i32, ...)*)(i32 %62)
  %64 = sdiv i32 %63, 2
  %65 = add nsw i32 %61, %64
  store i32 %65, i32* %4, align 4
  br label %66

66:                                               ; preds = %58, %15
  store i32 1, i32* %6, align 4
  br label %67

67:                                               ; preds = %124, %66
  %68 = load i32, i32* %6, align 4
  %69 = load i32, i32* %7, align 4
  %70 = icmp slt i32 %68, %69
  br i1 %70, label %71, label %127

71:                                               ; preds = %67
  %72 = load i32*, i32** %3, align 8
  %73 = load i32, i32* %6, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, i32* %72, i64 %74
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %8, align 4
  %77 = load i32, i32* %8, align 4
  %78 = load i32, i32* %8, align 4
  %79 = lshr i32 %78, 1
  %80 = and i32 %77, %79
  %81 = xor i32 %80, -1
  %82 = and i32 %81, 1431655765
  store i32 %82, i32* %8, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %123

84:                                               ; preds = %71
  %85 = load i32, i32* %8, align 4
  %86 = and i32 %85, 255
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = load i32, i32* %8, align 4
  %91 = lshr i32 %90, 8
  %92 = and i32 %91, 255
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = add nsw i32 %89, %95
  %97 = load i32, i32* %8, align 4
  %98 = lshr i32 %97, 16
  %99 = and i32 %98, 255
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = add nsw i32 %96, %102
  %104 = load i32, i32* %8, align 4
  %105 = lshr i32 %104, 24
  %106 = and i32 %105, 255
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = add nsw i32 %103, %109
  %111 = load i32, i32* %5, align 4
  %112 = add nsw i32 %111, %110
  store i32 %112, i32* %5, align 4
  %113 = icmp sgt i32 %112, 1
  br i1 %113, label %114, label %115

114:                                              ; preds = %84
  store i32 -1, i32* %2, align 4
  br label %185

115:                                              ; preds = %84
  %116 = load i32, i32* %6, align 4
  %117 = sub nsw i32 %116, 1
  %118 = mul nsw i32 %117, 16
  %119 = load i32, i32* %8, align 4
  %120 = call i32 (i32, ...) bitcast (i32 (i32)* @bit_index to i32 (i32, ...)*)(i32 %119)
  %121 = sdiv i32 %120, 2
  %122 = add nsw i32 %118, %121
  store i32 %122, i32* %4, align 4
  br label %123

123:                                              ; preds = %115, %71
  br label %124

124:                                              ; preds = %123
  %125 = load i32, i32* %6, align 4
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* %6, align 4
  br label %67

127:                                              ; preds = %67
  br label %128

128:                                              ; preds = %127, %1
  %129 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %129, i32* %10, align 4
  br label %130

130:                                              ; preds = %180, %128
  %131 = load i32, i32* %10, align 4
  %132 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %133 = icmp slt i32 %131, %132
  br i1 %133, label %134, label %183

134:                                              ; preds = %130
  %135 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %136 = load i32, i32* %10, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i32*, i32** %135, i64 %137
  %139 = load i32*, i32** %138, align 8
  store i32* %139, i32** %12, align 8
  %140 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  %141 = load i32, i32* %10, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i32, i32* %140, i64 %142
  %144 = load i32, i32* %143, align 4
  store i32 %144, i32* %11, align 4
  %145 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %146 = load i32, i32* %10, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i32, i32* %145, i64 %147
  %149 = load i32, i32* %148, align 4
  store i32 %149, i32* %9, align 4
  br label %150

150:                                              ; preds = %176, %134
  %151 = load i32, i32* %9, align 4
  %152 = load i32, i32* %11, align 4
  %153 = icmp sle i32 %151, %152
  br i1 %153, label %154, label %179

154:                                              ; preds = %150
  %155 = load i32*, i32** %12, align 8
  %156 = load i32, i32* %9, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i32, i32* %155, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = load i32*, i32** %3, align 8
  %161 = load i32, i32* %9, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i32, i32* %160, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = xor i32 %164, -1
  %166 = and i32 %159, %165
  %167 = icmp ne i32 %166, 0
  br i1 %167, label %168, label %175

168:                                              ; preds = %154
  %169 = load i32, i32* %5, align 4
  %170 = add nsw i32 %169, 1
  store i32 %170, i32* %5, align 4
  %171 = icmp sgt i32 %170, 1
  br i1 %171, label %172, label %173

172:                                              ; preds = %168
  store i32 -1, i32* %2, align 4
  br label %185

173:                                              ; preds = %168
  %174 = load i32, i32* %10, align 4
  store i32 %174, i32* %4, align 4
  br label %179

175:                                              ; preds = %154
  br label %176

176:                                              ; preds = %175
  %177 = load i32, i32* %9, align 4
  %178 = add nsw i32 %177, 1
  store i32 %178, i32* %9, align 4
  br label %150

179:                                              ; preds = %173, %150
  br label %180

180:                                              ; preds = %179
  %181 = load i32, i32* %10, align 4
  %182 = add nsw i32 %181, 1
  store i32 %182, i32* %10, align 4
  br label %130

183:                                              ; preds = %130
  %184 = load i32, i32* %4, align 4
  store i32 %184, i32* %2, align 4
  br label %185

185:                                              ; preds = %183, %172, %114, %57
  %186 = load i32, i32* %2, align 4
  ret i32 %186
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccommon(i32* %0, i32* %1, i32* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  %16 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 15), align 4
  store i32 %16, i32* %8, align 4
  %17 = icmp ne i32 %16, -1
  br i1 %17, label %18, label %103

18:                                               ; preds = %3
  %19 = load i32*, i32** %5, align 8
  %20 = load i32, i32* %8, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %19, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = load i32*, i32** %7, align 8
  %25 = load i32, i32* %8, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %24, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = or i32 %23, %28
  store i32 %29, i32* %10, align 4
  %30 = load i32*, i32** %6, align 8
  %31 = load i32, i32* %8, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i32, i32* %30, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = load i32*, i32** %7, align 8
  %36 = load i32, i32* %8, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %35, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = or i32 %34, %39
  store i32 %40, i32* %11, align 4
  %41 = load i32, i32* %10, align 4
  %42 = load i32, i32* %10, align 4
  %43 = lshr i32 %42, 1
  %44 = and i32 %41, %43
  %45 = xor i32 %44, -1
  %46 = load i32, i32* %11, align 4
  %47 = load i32, i32* %11, align 4
  %48 = lshr i32 %47, 1
  %49 = and i32 %46, %48
  %50 = xor i32 %49, -1
  %51 = and i32 %45, %50
  %52 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 14), align 8
  %53 = and i32 %51, %52
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %18
  store i32 1, i32* %4, align 4
  br label %196

56:                                               ; preds = %18
  store i32 1, i32* %9, align 4
  br label %57

57:                                               ; preds = %99, %56
  %58 = load i32, i32* %9, align 4
  %59 = load i32, i32* %8, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %102

61:                                               ; preds = %57
  %62 = load i32*, i32** %5, align 8
  %63 = load i32, i32* %9, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %62, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = load i32*, i32** %7, align 8
  %68 = load i32, i32* %9, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %67, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = or i32 %66, %71
  store i32 %72, i32* %10, align 4
  %73 = load i32*, i32** %6, align 8
  %74 = load i32, i32* %9, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %73, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = load i32*, i32** %7, align 8
  %79 = load i32, i32* %9, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %78, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = or i32 %77, %82
  store i32 %83, i32* %11, align 4
  %84 = load i32, i32* %10, align 4
  %85 = load i32, i32* %10, align 4
  %86 = lshr i32 %85, 1
  %87 = and i32 %84, %86
  %88 = xor i32 %87, -1
  %89 = load i32, i32* %11, align 4
  %90 = load i32, i32* %11, align 4
  %91 = lshr i32 %90, 1
  %92 = and i32 %89, %91
  %93 = xor i32 %92, -1
  %94 = and i32 %88, %93
  %95 = and i32 %94, 1431655765
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %61
  store i32 1, i32* %4, align 4
  br label %196

98:                                               ; preds = %61
  br label %99

99:                                               ; preds = %98
  %100 = load i32, i32* %9, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %9, align 4
  br label %57

102:                                              ; preds = %57
  br label %103

103:                                              ; preds = %102, %3
  %104 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 2), align 8
  store i32 %104, i32* %12, align 4
  br label %105

105:                                              ; preds = %192, %103
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %108 = icmp slt i32 %106, %107
  br i1 %108, label %109, label %195

109:                                              ; preds = %105
  %110 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %111 = load i32, i32* %12, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i32*, i32** %110, i64 %112
  %114 = load i32*, i32** %113, align 8
  store i32* %114, i32** %15, align 8
  %115 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 7), align 8
  %116 = load i32, i32* %12, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, i32* %115, i64 %117
  %119 = load i32, i32* %118, align 4
  store i32 %119, i32* %14, align 4
  %120 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %121 = load i32, i32* %12, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i32, i32* %120, i64 %122
  %124 = load i32, i32* %123, align 4
  store i32 %124, i32* %13, align 4
  br label %125

125:                                              ; preds = %188, %109
  %126 = load i32, i32* %13, align 4
  %127 = load i32, i32* %14, align 4
  %128 = icmp sle i32 %126, %127
  br i1 %128, label %129, label %191

129:                                              ; preds = %125
  %130 = load i32*, i32** %15, align 8
  %131 = load i32, i32* %13, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i32, i32* %130, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = load i32*, i32** %5, align 8
  %136 = load i32, i32* %13, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i32, i32* %135, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = xor i32 %139, -1
  %141 = and i32 %134, %140
  %142 = load i32*, i32** %7, align 8
  %143 = load i32, i32* %13, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds i32, i32* %142, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = xor i32 %146, -1
  %148 = and i32 %141, %147
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %150, label %187

150:                                              ; preds = %129
  %151 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 6), align 8
  %152 = load i32, i32* %12, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i32, i32* %151, i64 %153
  %155 = load i32, i32* %154, align 4
  store i32 %155, i32* %13, align 4
  br label %156

156:                                              ; preds = %183, %150
  %157 = load i32, i32* %13, align 4
  %158 = load i32, i32* %14, align 4
  %159 = icmp sle i32 %157, %158
  br i1 %159, label %160, label %186

160:                                              ; preds = %156
  %161 = load i32*, i32** %15, align 8
  %162 = load i32, i32* %13, align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i32, i32* %161, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = load i32*, i32** %6, align 8
  %167 = load i32, i32* %13, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i32, i32* %166, i64 %168
  %170 = load i32, i32* %169, align 4
  %171 = xor i32 %170, -1
  %172 = and i32 %165, %171
  %173 = load i32*, i32** %7, align 8
  %174 = load i32, i32* %13, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i32, i32* %173, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = xor i32 %177, -1
  %179 = and i32 %172, %178
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %160
  store i32 1, i32* %4, align 4
  br label %196

182:                                              ; preds = %160
  br label %183

183:                                              ; preds = %182
  %184 = load i32, i32* %13, align 4
  %185 = add nsw i32 %184, 1
  store i32 %185, i32* %13, align 4
  br label %156

186:                                              ; preds = %156
  br label %191

187:                                              ; preds = %129
  br label %188

188:                                              ; preds = %187
  %189 = load i32, i32* %13, align 4
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %13, align 4
  br label %125

191:                                              ; preds = %186, %125
  br label %192

192:                                              ; preds = %191
  %193 = load i32, i32* %12, align 4
  %194 = add nsw i32 %193, 1
  store i32 %194, i32* %12, align 4
  br label %105

195:                                              ; preds = %105
  store i32 0, i32* %4, align 4
  br label %196

196:                                              ; preds = %195, %181, %97, %55
  %197 = load i32, i32* %4, align 4
  ret i32 %197
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @descend(i32** %0, i32** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  %9 = load i32**, i32*** %4, align 8
  %10 = load i32*, i32** %9, align 8
  store i32* %10, i32** %6, align 8
  %11 = load i32**, i32*** %5, align 8
  %12 = load i32*, i32** %11, align 8
  store i32* %12, i32** %7, align 8
  %13 = load i32*, i32** %6, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 0
  %15 = load i32, i32* %14, align 4
  %16 = lshr i32 %15, 16
  %17 = load i32*, i32** %7, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 0
  %19 = load i32, i32* %18, align 4
  %20 = lshr i32 %19, 16
  %21 = icmp ugt i32 %16, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %2
  store i32 -1, i32* %3, align 4
  br label %74

23:                                               ; preds = %2
  %24 = load i32*, i32** %6, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 0
  %26 = load i32, i32* %25, align 4
  %27 = lshr i32 %26, 16
  %28 = load i32*, i32** %7, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 0
  %30 = load i32, i32* %29, align 4
  %31 = lshr i32 %30, 16
  %32 = icmp ult i32 %27, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %23
  store i32 1, i32* %3, align 4
  br label %74

34:                                               ; preds = %23
  %35 = load i32*, i32** %6, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 0
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 1023
  store i32 %38, i32* %8, align 4
  br label %39

39:                                               ; preds = %67, %34
  %40 = load i32*, i32** %6, align 8
  %41 = load i32, i32* %8, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %40, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = load i32*, i32** %7, align 8
  %46 = load i32, i32* %8, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i32, i32* %45, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = icmp ugt i32 %44, %49
  br i1 %50, label %51, label %52

51:                                               ; preds = %39
  store i32 -1, i32* %3, align 4
  br label %74

52:                                               ; preds = %39
  %53 = load i32*, i32** %6, align 8
  %54 = load i32, i32* %8, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %53, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = load i32*, i32** %7, align 8
  %59 = load i32, i32* %8, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %58, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = icmp ult i32 %57, %62
  br i1 %63, label %64, label %65

64:                                               ; preds = %52
  store i32 1, i32* %3, align 4
  br label %74

65:                                               ; preds = %52
  br label %66

66:                                               ; preds = %65
  br label %67

67:                                               ; preds = %66
  %68 = load i32, i32* %8, align 4
  %69 = add nsw i32 %68, -1
  store i32 %69, i32* %8, align 4
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %39, label %71

71:                                               ; preds = %67
  br label %72

72:                                               ; preds = %71
  br label %73

73:                                               ; preds = %72
  store i32 0, i32* %3, align 4
  br label %74

74:                                               ; preds = %73, %64, %51, %33, %22
  %75 = load i32, i32* %3, align 4
  ret i32 %75
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ascend(i32** %0, i32** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  %9 = load i32**, i32*** %4, align 8
  %10 = load i32*, i32** %9, align 8
  store i32* %10, i32** %6, align 8
  %11 = load i32**, i32*** %5, align 8
  %12 = load i32*, i32** %11, align 8
  store i32* %12, i32** %7, align 8
  %13 = load i32*, i32** %6, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 0
  %15 = load i32, i32* %14, align 4
  %16 = lshr i32 %15, 16
  %17 = load i32*, i32** %7, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 0
  %19 = load i32, i32* %18, align 4
  %20 = lshr i32 %19, 16
  %21 = icmp ugt i32 %16, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %2
  store i32 1, i32* %3, align 4
  br label %74

23:                                               ; preds = %2
  %24 = load i32*, i32** %6, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 0
  %26 = load i32, i32* %25, align 4
  %27 = lshr i32 %26, 16
  %28 = load i32*, i32** %7, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 0
  %30 = load i32, i32* %29, align 4
  %31 = lshr i32 %30, 16
  %32 = icmp ult i32 %27, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %23
  store i32 -1, i32* %3, align 4
  br label %74

34:                                               ; preds = %23
  %35 = load i32*, i32** %6, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 0
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 1023
  store i32 %38, i32* %8, align 4
  br label %39

39:                                               ; preds = %67, %34
  %40 = load i32*, i32** %6, align 8
  %41 = load i32, i32* %8, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %40, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = load i32*, i32** %7, align 8
  %46 = load i32, i32* %8, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i32, i32* %45, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = icmp ugt i32 %44, %49
  br i1 %50, label %51, label %52

51:                                               ; preds = %39
  store i32 1, i32* %3, align 4
  br label %74

52:                                               ; preds = %39
  %53 = load i32*, i32** %6, align 8
  %54 = load i32, i32* %8, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %53, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = load i32*, i32** %7, align 8
  %59 = load i32, i32* %8, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %58, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = icmp ult i32 %57, %62
  br i1 %63, label %64, label %65

64:                                               ; preds = %52
  store i32 -1, i32* %3, align 4
  br label %74

65:                                               ; preds = %52
  br label %66

66:                                               ; preds = %65
  br label %67

67:                                               ; preds = %66
  %68 = load i32, i32* %8, align 4
  %69 = add nsw i32 %68, -1
  store i32 %69, i32* %8, align 4
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %39, label %71

71:                                               ; preds = %67
  br label %72

72:                                               ; preds = %71
  br label %73

73:                                               ; preds = %72
  store i32 0, i32* %3, align 4
  br label %74

74:                                               ; preds = %73, %64, %51, %33, %22
  %75 = load i32, i32* %3, align 4
  ret i32 %75
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @lex_order(i32** %0, i32** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  %9 = load i32**, i32*** %4, align 8
  %10 = load i32*, i32** %9, align 8
  store i32* %10, i32** %6, align 8
  %11 = load i32**, i32*** %5, align 8
  %12 = load i32*, i32** %11, align 8
  store i32* %12, i32** %7, align 8
  %13 = load i32*, i32** %6, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 0
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 1023
  store i32 %16, i32* %8, align 4
  br label %17

17:                                               ; preds = %45, %2
  %18 = load i32*, i32** %6, align 8
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, i32* %18, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = load i32*, i32** %7, align 8
  %24 = load i32, i32* %8, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %23, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = icmp ugt i32 %22, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %17
  store i32 -1, i32* %3, align 4
  br label %50

30:                                               ; preds = %17
  %31 = load i32*, i32** %6, align 8
  %32 = load i32, i32* %8, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i32, i32* %31, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = load i32*, i32** %7, align 8
  %37 = load i32, i32* %8, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i32, i32* %36, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = icmp ult i32 %35, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %30
  store i32 1, i32* %3, align 4
  br label %50

43:                                               ; preds = %30
  br label %44

44:                                               ; preds = %43
  br label %45

45:                                               ; preds = %44
  %46 = load i32, i32* %8, align 4
  %47 = add nsw i32 %46, -1
  store i32 %47, i32* %8, align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %17, label %49

49:                                               ; preds = %45
  store i32 0, i32* %3, align 4
  br label %50

50:                                               ; preds = %49, %42, %29
  %51 = load i32, i32* %3, align 4
  ret i32 %51
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @d1_order(i32** %0, i32** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  %12 = load i32**, i32*** %4, align 8
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %6, align 8
  %14 = load i32**, i32*** %5, align 8
  %15 = load i32*, i32** %14, align 8
  store i32* %15, i32** %7, align 8
  %16 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %17 = getelementptr inbounds i32*, i32** %16, i64 0
  %18 = load i32*, i32** %17, align 8
  store i32* %18, i32** %8, align 8
  %19 = load i32*, i32** %6, align 8
  %20 = getelementptr inbounds i32, i32* %19, i64 0
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 1023
  store i32 %22, i32* %9, align 4
  br label %23

23:                                               ; preds = %55, %2
  %24 = load i32*, i32** %6, align 8
  %25 = load i32, i32* %9, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %24, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = load i32*, i32** %8, align 8
  %30 = load i32, i32* %9, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %29, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = or i32 %28, %33
  store i32 %34, i32* %10, align 4
  %35 = load i32*, i32** %7, align 8
  %36 = load i32, i32* %9, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %35, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = load i32*, i32** %8, align 8
  %41 = load i32, i32* %9, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %40, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = or i32 %39, %44
  store i32 %45, i32* %11, align 4
  %46 = icmp ugt i32 %34, %45
  br i1 %46, label %47, label %48

47:                                               ; preds = %23
  store i32 -1, i32* %3, align 4
  br label %60

48:                                               ; preds = %23
  %49 = load i32, i32* %10, align 4
  %50 = load i32, i32* %11, align 4
  %51 = icmp ult i32 %49, %50
  br i1 %51, label %52, label %53

52:                                               ; preds = %48
  store i32 1, i32* %3, align 4
  br label %60

53:                                               ; preds = %48
  br label %54

54:                                               ; preds = %53
  br label %55

55:                                               ; preds = %54
  %56 = load i32, i32* %9, align 4
  %57 = add nsw i32 %56, -1
  store i32 %57, i32* %9, align 4
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %23, label %59

59:                                               ; preds = %55
  store i32 0, i32* %3, align 4
  br label %60

60:                                               ; preds = %59, %52, %47
  %61 = load i32, i32* %3, align 4
  ret i32 %61
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @desc1(i32* %0, i32* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = icmp eq i32* %7, null
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = load i32*, i32** %5, align 8
  %11 = icmp eq i32* %10, null
  %12 = zext i1 %11 to i64
  %13 = select i1 %11, i32 0, i32 1
  store i32 %13, i32* %3, align 4
  br label %81

14:                                               ; preds = %2
  %15 = load i32*, i32** %5, align 8
  %16 = icmp eq i32* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  store i32 -1, i32* %3, align 4
  br label %81

18:                                               ; preds = %14
  br label %19

19:                                               ; preds = %18
  %20 = load i32*, i32** %4, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = lshr i32 %22, 16
  %24 = load i32*, i32** %5, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 0
  %26 = load i32, i32* %25, align 4
  %27 = lshr i32 %26, 16
  %28 = icmp ugt i32 %23, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %19
  store i32 -1, i32* %3, align 4
  br label %81

30:                                               ; preds = %19
  %31 = load i32*, i32** %4, align 8
  %32 = getelementptr inbounds i32, i32* %31, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = lshr i32 %33, 16
  %35 = load i32*, i32** %5, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 0
  %37 = load i32, i32* %36, align 4
  %38 = lshr i32 %37, 16
  %39 = icmp ult i32 %34, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %30
  store i32 1, i32* %3, align 4
  br label %81

41:                                               ; preds = %30
  %42 = load i32*, i32** %4, align 8
  %43 = getelementptr inbounds i32, i32* %42, i64 0
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 1023
  store i32 %45, i32* %6, align 4
  br label %46

46:                                               ; preds = %74, %41
  %47 = load i32*, i32** %4, align 8
  %48 = load i32, i32* %6, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, i32* %47, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = load i32*, i32** %5, align 8
  %53 = load i32, i32* %6, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32* %52, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = icmp ugt i32 %51, %56
  br i1 %57, label %58, label %59

58:                                               ; preds = %46
  store i32 -1, i32* %3, align 4
  br label %81

59:                                               ; preds = %46
  %60 = load i32*, i32** %4, align 8
  %61 = load i32, i32* %6, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %60, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = load i32*, i32** %5, align 8
  %66 = load i32, i32* %6, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %65, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = icmp ult i32 %64, %69
  br i1 %70, label %71, label %72

71:                                               ; preds = %59
  store i32 1, i32* %3, align 4
  br label %81

72:                                               ; preds = %59
  br label %73

73:                                               ; preds = %72
  br label %74

74:                                               ; preds = %73
  %75 = load i32, i32* %6, align 4
  %76 = add nsw i32 %75, -1
  store i32 %76, i32* %6, align 4
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %46, label %78

78:                                               ; preds = %74
  br label %79

79:                                               ; preds = %78
  br label %80

80:                                               ; preds = %79
  store i32 0, i32* %3, align 4
  br label %81

81:                                               ; preds = %80, %71, %58, %40, %29, %17, %9
  %82 = load i32, i32* %3, align 4
  ret i32 %82
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @bit_index(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %5 = load i32, i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 -1, i32* %2, align 4
  br label %21

8:                                                ; preds = %1
  store i32 0, i32* %4, align 4
  br label %9

9:                                                ; preds = %14, %8
  %10 = load i32, i32* %3, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  br label %14

14:                                               ; preds = %13
  %15 = load i32, i32* %3, align 4
  %16 = lshr i32 %15, 1
  store i32 %16, i32* %3, align 4
  %17 = load i32, i32* %4, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %4, align 4
  br label %9

19:                                               ; preds = %9
  %20 = load i32, i32* %4, align 4
  store i32 %20, i32* %2, align 4
  br label %21

21:                                               ; preds = %19, %7
  %22 = load i32, i32* %2, align 4
  ret i32 %22
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @set_ord(i32* %0) #0 {
  %2 = alloca i32*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32* %0, i32** %2, align 8
  store i32 0, i32* %4, align 4
  %6 = load i32*, i32** %2, align 8
  %7 = getelementptr inbounds i32, i32* %6, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1023
  store i32 %9, i32* %3, align 4
  br label %10

10:                                               ; preds = %50, %1
  %11 = load i32, i32* %3, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %53

13:                                               ; preds = %10
  %14 = load i32*, i32** %2, align 8
  %15 = load i32, i32* %3, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i32, i32* %14, i64 %16
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %5, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %49

20:                                               ; preds = %13
  %21 = load i32, i32* %5, align 4
  %22 = and i32 %21, 255
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = load i32, i32* %5, align 4
  %27 = lshr i32 %26, 8
  %28 = and i32 %27, 255
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = add nsw i32 %25, %31
  %33 = load i32, i32* %5, align 4
  %34 = lshr i32 %33, 16
  %35 = and i32 %34, 255
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %32, %38
  %40 = load i32, i32* %5, align 4
  %41 = lshr i32 %40, 24
  %42 = and i32 %41, 255
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = add nsw i32 %39, %45
  %47 = load i32, i32* %4, align 4
  %48 = add nsw i32 %47, %46
  store i32 %48, i32* %4, align 4
  br label %49

49:                                               ; preds = %20, %13
  br label %50

50:                                               ; preds = %49
  %51 = load i32, i32* %3, align 4
  %52 = add nsw i32 %51, -1
  store i32 %52, i32* %3, align 4
  br label %10

53:                                               ; preds = %10
  %54 = load i32, i32* %4, align 4
  ret i32 %54
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @set_dist(i32* %0, i32* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  store i32 0, i32* %6, align 4
  %8 = load i32*, i32** %3, align 8
  %9 = getelementptr inbounds i32, i32* %8, i64 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1023
  store i32 %11, i32* %5, align 4
  br label %12

12:                                               ; preds = %58, %2
  %13 = load i32, i32* %5, align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %61

15:                                               ; preds = %12
  %16 = load i32*, i32** %3, align 8
  %17 = load i32, i32* %5, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %16, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = load i32*, i32** %4, align 8
  %22 = load i32, i32* %5, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i32, i32* %21, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %20, %25
  store i32 %26, i32* %7, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %57

28:                                               ; preds = %15
  %29 = load i32, i32* %7, align 4
  %30 = and i32 %29, 255
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = load i32, i32* %7, align 4
  %35 = lshr i32 %34, 8
  %36 = and i32 %35, 255
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add nsw i32 %33, %39
  %41 = load i32, i32* %7, align 4
  %42 = lshr i32 %41, 16
  %43 = and i32 %42, 255
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = add nsw i32 %40, %46
  %48 = load i32, i32* %7, align 4
  %49 = lshr i32 %48, 24
  %50 = and i32 %49, 255
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds [256 x i32], [256 x i32]* @bit_count, i64 0, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = add nsw i32 %47, %53
  %55 = load i32, i32* %6, align 4
  %56 = add nsw i32 %55, %54
  store i32 %56, i32* %6, align 4
  br label %57

57:                                               ; preds = %28, %15
  br label %58

58:                                               ; preds = %57
  %59 = load i32, i32* %5, align 4
  %60 = add nsw i32 %59, -1
  store i32 %60, i32* %5, align 4
  br label %12

61:                                               ; preds = %12
  %62 = load i32, i32* %6, align 4
  ret i32 %62
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @set_clear(i32* %0, i32 %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp sle i32 %6, 32
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  br label %14

9:                                                ; preds = %2
  %10 = load i32, i32* %4, align 4
  %11 = sub nsw i32 %10, 1
  %12 = ashr i32 %11, 5
  %13 = add nsw i32 %12, 1
  br label %14

14:                                               ; preds = %9, %8
  %15 = phi i32 [ 1, %8 ], [ %13, %9 ]
  store i32 %15, i32* %5, align 4
  %16 = load i32, i32* %5, align 4
  %17 = load i32*, i32** %3, align 8
  store i32 %16, i32* %17, align 4
  br label %18

18:                                               ; preds = %23, %14
  %19 = load i32*, i32** %3, align 8
  %20 = load i32, i32* %5, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %19, i64 %21
  store i32 0, i32* %22, align 4
  br label %23

23:                                               ; preds = %18
  %24 = load i32, i32* %5, align 4
  %25 = add nsw i32 %24, -1
  store i32 %25, i32* %5, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %18, label %27

27:                                               ; preds = %23
  %28 = load i32*, i32** %3, align 8
  ret i32* %28
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @set_fill(i32* %0, i32 %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp sle i32 %6, 32
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  br label %14

9:                                                ; preds = %2
  %10 = load i32, i32* %4, align 4
  %11 = sub nsw i32 %10, 1
  %12 = ashr i32 %11, 5
  %13 = add nsw i32 %12, 1
  br label %14

14:                                               ; preds = %9, %8
  %15 = phi i32 [ 1, %8 ], [ %13, %9 ]
  store i32 %15, i32* %5, align 4
  %16 = load i32, i32* %5, align 4
  %17 = load i32*, i32** %3, align 8
  store i32 %16, i32* %17, align 4
  %18 = load i32*, i32** %3, align 8
  %19 = load i32, i32* %5, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, i32* %18, i64 %20
  store i32 -1, i32* %21, align 4
  %22 = load i32, i32* %5, align 4
  %23 = mul nsw i32 %22, 32
  %24 = load i32, i32* %4, align 4
  %25 = sub nsw i32 %23, %24
  %26 = load i32*, i32** %3, align 8
  %27 = load i32, i32* %5, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, i32* %26, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = lshr i32 %30, %25
  store i32 %31, i32* %29, align 4
  br label %32

32:                                               ; preds = %36, %14
  %33 = load i32, i32* %5, align 4
  %34 = add nsw i32 %33, -1
  store i32 %34, i32* %5, align 4
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %32
  %37 = load i32*, i32** %3, align 8
  %38 = load i32, i32* %5, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %37, i64 %39
  store i32 -1, i32* %40, align 4
  br label %32

41:                                               ; preds = %32
  %42 = load i32*, i32** %3, align 8
  ret i32* %42
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @set_copy(i32* %0, i32* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = getelementptr inbounds i32, i32* %6, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1023
  store i32 %9, i32* %5, align 4
  br label %10

10:                                               ; preds = %20, %2
  %11 = load i32*, i32** %4, align 8
  %12 = load i32, i32* %5, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i32, i32* %11, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = load i32*, i32** %3, align 8
  %17 = load i32, i32* %5, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %16, i64 %18
  store i32 %15, i32* %19, align 4
  br label %20

20:                                               ; preds = %10
  %21 = load i32, i32* %5, align 4
  %22 = add nsw i32 %21, -1
  store i32 %22, i32* %5, align 4
  %23 = icmp sge i32 %22, 0
  br i1 %23, label %10, label %24

24:                                               ; preds = %20
  %25 = load i32*, i32** %3, align 8
  ret i32* %25
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @set_and(i32* %0, i32* %1, i32* %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = getelementptr inbounds i32, i32* %8, i64 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1023
  store i32 %11, i32* %7, align 4
  %12 = load i32*, i32** %4, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 0
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, -1024
  store i32 %15, i32* %13, align 4
  %16 = load i32, i32* %7, align 4
  %17 = load i32*, i32** %4, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 0
  %19 = load i32, i32* %18, align 4
  %20 = or i32 %19, %16
  store i32 %20, i32* %18, align 4
  br label %21

21:                                               ; preds = %37, %3
  %22 = load i32*, i32** %5, align 8
  %23 = load i32, i32* %7, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %22, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = load i32*, i32** %6, align 8
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %27, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %26, %31
  %33 = load i32*, i32** %4, align 8
  %34 = load i32, i32* %7, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %33, i64 %35
  store i32 %32, i32* %36, align 4
  br label %37

37:                                               ; preds = %21
  %38 = load i32, i32* %7, align 4
  %39 = add nsw i32 %38, -1
  store i32 %39, i32* %7, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %21, label %41

41:                                               ; preds = %37
  %42 = load i32*, i32** %4, align 8
  ret i32* %42
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @set_or(i32* %0, i32* %1, i32* %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = getelementptr inbounds i32, i32* %8, i64 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1023
  store i32 %11, i32* %7, align 4
  %12 = load i32*, i32** %4, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 0
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, -1024
  store i32 %15, i32* %13, align 4
  %16 = load i32, i32* %7, align 4
  %17 = load i32*, i32** %4, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 0
  %19 = load i32, i32* %18, align 4
  %20 = or i32 %19, %16
  store i32 %20, i32* %18, align 4
  br label %21

21:                                               ; preds = %37, %3
  %22 = load i32*, i32** %5, align 8
  %23 = load i32, i32* %7, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %22, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = load i32*, i32** %6, align 8
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %27, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = or i32 %26, %31
  %33 = load i32*, i32** %4, align 8
  %34 = load i32, i32* %7, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %33, i64 %35
  store i32 %32, i32* %36, align 4
  br label %37

37:                                               ; preds = %21
  %38 = load i32, i32* %7, align 4
  %39 = add nsw i32 %38, -1
  store i32 %39, i32* %7, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %21, label %41

41:                                               ; preds = %37
  %42 = load i32*, i32** %4, align 8
  ret i32* %42
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @set_diff(i32* %0, i32* %1, i32* %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = getelementptr inbounds i32, i32* %8, i64 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1023
  store i32 %11, i32* %7, align 4
  %12 = load i32*, i32** %4, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 0
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, -1024
  store i32 %15, i32* %13, align 4
  %16 = load i32, i32* %7, align 4
  %17 = load i32*, i32** %4, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 0
  %19 = load i32, i32* %18, align 4
  %20 = or i32 %19, %16
  store i32 %20, i32* %18, align 4
  br label %21

21:                                               ; preds = %38, %3
  %22 = load i32*, i32** %5, align 8
  %23 = load i32, i32* %7, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %22, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = load i32*, i32** %6, align 8
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %27, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = xor i32 %31, -1
  %33 = and i32 %26, %32
  %34 = load i32*, i32** %4, align 8
  %35 = load i32, i32* %7, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %34, i64 %36
  store i32 %33, i32* %37, align 4
  br label %38

38:                                               ; preds = %21
  %39 = load i32, i32* %7, align 4
  %40 = add nsw i32 %39, -1
  store i32 %40, i32* %7, align 4
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %21, label %42

42:                                               ; preds = %38
  %43 = load i32*, i32** %4, align 8
  ret i32* %43
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @set_xor(i32* %0, i32* %1, i32* %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = getelementptr inbounds i32, i32* %8, i64 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1023
  store i32 %11, i32* %7, align 4
  %12 = load i32*, i32** %4, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 0
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, -1024
  store i32 %15, i32* %13, align 4
  %16 = load i32, i32* %7, align 4
  %17 = load i32*, i32** %4, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 0
  %19 = load i32, i32* %18, align 4
  %20 = or i32 %19, %16
  store i32 %20, i32* %18, align 4
  br label %21

21:                                               ; preds = %37, %3
  %22 = load i32*, i32** %5, align 8
  %23 = load i32, i32* %7, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %22, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = load i32*, i32** %6, align 8
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %27, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = xor i32 %26, %31
  %33 = load i32*, i32** %4, align 8
  %34 = load i32, i32* %7, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %33, i64 %35
  store i32 %32, i32* %36, align 4
  br label %37

37:                                               ; preds = %21
  %38 = load i32, i32* %7, align 4
  %39 = add nsw i32 %38, -1
  store i32 %39, i32* %7, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %21, label %41

41:                                               ; preds = %37
  %42 = load i32*, i32** %4, align 8
  ret i32* %42
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @set_merge(i32* %0, i32* %1, i32* %2, i32* %3) #0 {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = getelementptr inbounds i32, i32* %10, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1023
  store i32 %13, i32* %9, align 4
  %14 = load i32*, i32** %5, align 8
  %15 = getelementptr inbounds i32, i32* %14, i64 0
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, -1024
  store i32 %17, i32* %15, align 4
  %18 = load i32, i32* %9, align 4
  %19 = load i32*, i32** %5, align 8
  %20 = getelementptr inbounds i32, i32* %19, i64 0
  %21 = load i32, i32* %20, align 4
  %22 = or i32 %21, %18
  store i32 %22, i32* %20, align 4
  br label %23

23:                                               ; preds = %52, %4
  %24 = load i32*, i32** %6, align 8
  %25 = load i32, i32* %9, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %24, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = load i32*, i32** %8, align 8
  %30 = load i32, i32* %9, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %29, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %28, %33
  %35 = load i32*, i32** %7, align 8
  %36 = load i32, i32* %9, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %35, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = load i32*, i32** %8, align 8
  %41 = load i32, i32* %9, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %40, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = xor i32 %44, -1
  %46 = and i32 %39, %45
  %47 = or i32 %34, %46
  %48 = load i32*, i32** %5, align 8
  %49 = load i32, i32* %9, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, i32* %48, i64 %50
  store i32 %47, i32* %51, align 4
  br label %52

52:                                               ; preds = %23
  %53 = load i32, i32* %9, align 4
  %54 = add nsw i32 %53, -1
  store i32 %54, i32* %9, align 4
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %23, label %56

56:                                               ; preds = %52
  %57 = load i32*, i32** %5, align 8
  ret i32* %57
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @set_andp(i32* %0, i32* %1, i32* %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = getelementptr inbounds i32, i32* %9, i64 0
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1023
  store i32 %12, i32* %7, align 4
  store i32 0, i32* %8, align 4
  %13 = load i32*, i32** %4, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 0
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, -1024
  store i32 %16, i32* %14, align 4
  %17 = load i32, i32* %7, align 4
  %18 = load i32*, i32** %4, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 0
  %20 = load i32, i32* %19, align 4
  %21 = or i32 %20, %17
  store i32 %21, i32* %19, align 4
  br label %22

22:                                               ; preds = %45, %3
  %23 = load i32*, i32** %5, align 8
  %24 = load i32, i32* %7, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %23, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = load i32*, i32** %6, align 8
  %29 = load i32, i32* %7, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i32, i32* %28, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %27, %32
  %34 = load i32*, i32** %4, align 8
  %35 = load i32, i32* %7, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %34, i64 %36
  store i32 %33, i32* %37, align 4
  %38 = load i32*, i32** %4, align 8
  %39 = load i32, i32* %7, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32, i32* %38, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = load i32, i32* %8, align 4
  %44 = or i32 %43, %42
  store i32 %44, i32* %8, align 4
  br label %45

45:                                               ; preds = %22
  %46 = load i32, i32* %7, align 4
  %47 = add nsw i32 %46, -1
  store i32 %47, i32* %7, align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %22, label %49

49:                                               ; preds = %45
  %50 = load i32, i32* %8, align 4
  %51 = icmp ne i32 %50, 0
  %52 = zext i1 %51 to i32
  ret i32 %52
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @set_orp(i32* %0, i32* %1, i32* %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = getelementptr inbounds i32, i32* %9, i64 0
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1023
  store i32 %12, i32* %7, align 4
  store i32 0, i32* %8, align 4
  %13 = load i32*, i32** %4, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 0
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, -1024
  store i32 %16, i32* %14, align 4
  %17 = load i32, i32* %7, align 4
  %18 = load i32*, i32** %4, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 0
  %20 = load i32, i32* %19, align 4
  %21 = or i32 %20, %17
  store i32 %21, i32* %19, align 4
  br label %22

22:                                               ; preds = %45, %3
  %23 = load i32*, i32** %5, align 8
  %24 = load i32, i32* %7, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %23, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = load i32*, i32** %6, align 8
  %29 = load i32, i32* %7, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i32, i32* %28, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = or i32 %27, %32
  %34 = load i32*, i32** %4, align 8
  %35 = load i32, i32* %7, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %34, i64 %36
  store i32 %33, i32* %37, align 4
  %38 = load i32*, i32** %4, align 8
  %39 = load i32, i32* %7, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32, i32* %38, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = load i32, i32* %8, align 4
  %44 = or i32 %43, %42
  store i32 %44, i32* %8, align 4
  br label %45

45:                                               ; preds = %22
  %46 = load i32, i32* %7, align 4
  %47 = add nsw i32 %46, -1
  store i32 %47, i32* %7, align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %22, label %49

49:                                               ; preds = %45
  %50 = load i32, i32* %8, align 4
  %51 = icmp ne i32 %50, 0
  %52 = zext i1 %51 to i32
  ret i32 %52
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @setp_empty(i32* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = getelementptr inbounds i32, i32* %5, i64 0
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 1023
  store i32 %8, i32* %4, align 4
  br label %9

9:                                                ; preds = %18, %1
  %10 = load i32*, i32** %3, align 8
  %11 = load i32, i32* %4, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i32, i32* %10, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %9
  store i32 0, i32* %2, align 4
  br label %23

17:                                               ; preds = %9
  br label %18

18:                                               ; preds = %17
  %19 = load i32, i32* %4, align 4
  %20 = add nsw i32 %19, -1
  store i32 %20, i32* %4, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %9, label %22

22:                                               ; preds = %18
  store i32 1, i32* %2, align 4
  br label %23

23:                                               ; preds = %22, %16
  %24 = load i32, i32* %2, align 4
  ret i32 %24
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @setp_full(i32* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32 %1, i32* %5, align 4
  %8 = load i32*, i32** %4, align 8
  %9 = getelementptr inbounds i32, i32* %8, i64 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1023
  store i32 %11, i32* %6, align 4
  store i32 -1, i32* %7, align 4
  %12 = load i32, i32* %6, align 4
  %13 = mul nsw i32 %12, 32
  %14 = load i32, i32* %5, align 4
  %15 = sub nsw i32 %13, %14
  %16 = load i32, i32* %7, align 4
  %17 = lshr i32 %16, %15
  store i32 %17, i32* %7, align 4
  %18 = load i32*, i32** %4, align 8
  %19 = load i32, i32* %6, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, i32* %18, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = load i32, i32* %7, align 4
  %24 = icmp ne i32 %22, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %41

26:                                               ; preds = %2
  br label %27

27:                                               ; preds = %39, %26
  %28 = load i32, i32* %6, align 4
  %29 = add nsw i32 %28, -1
  store i32 %29, i32* %6, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %40

31:                                               ; preds = %27
  %32 = load i32*, i32** %4, align 8
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %32, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = icmp ne i32 %36, -1
  br i1 %37, label %38, label %39

38:                                               ; preds = %31
  store i32 0, i32* %3, align 4
  br label %41

39:                                               ; preds = %31
  br label %27

40:                                               ; preds = %27
  store i32 1, i32* %3, align 4
  br label %41

41:                                               ; preds = %40, %38, %25
  %42 = load i32, i32* %3, align 4
  ret i32 %42
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @setp_equal(i32* %0, i32* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = getelementptr inbounds i32, i32* %7, i64 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1023
  store i32 %10, i32* %6, align 4
  br label %11

11:                                               ; preds = %25, %2
  %12 = load i32*, i32** %4, align 8
  %13 = load i32, i32* %6, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %12, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = load i32*, i32** %5, align 8
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %16, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %11
  store i32 0, i32* %3, align 4
  br label %30

24:                                               ; preds = %11
  br label %25

25:                                               ; preds = %24
  %26 = load i32, i32* %6, align 4
  %27 = add nsw i32 %26, -1
  store i32 %27, i32* %6, align 4
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %11, label %29

29:                                               ; preds = %25
  store i32 1, i32* %3, align 4
  br label %30

30:                                               ; preds = %29, %23
  %31 = load i32, i32* %3, align 4
  ret i32 %31
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @setp_disjoint(i32* %0, i32* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = getelementptr inbounds i32, i32* %7, i64 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1023
  store i32 %10, i32* %6, align 4
  br label %11

11:                                               ; preds = %26, %2
  %12 = load i32*, i32** %4, align 8
  %13 = load i32, i32* %6, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %12, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = load i32*, i32** %5, align 8
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %16, %21
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %11
  store i32 0, i32* %3, align 4
  br label %31

25:                                               ; preds = %11
  br label %26

26:                                               ; preds = %25
  %27 = load i32, i32* %6, align 4
  %28 = add nsw i32 %27, -1
  store i32 %28, i32* %6, align 4
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %11, label %30

30:                                               ; preds = %26
  store i32 1, i32* %3, align 4
  br label %31

31:                                               ; preds = %30, %24
  %32 = load i32, i32* %3, align 4
  ret i32 %32
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @setp_implies(i32* %0, i32* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = getelementptr inbounds i32, i32* %7, i64 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1023
  store i32 %10, i32* %6, align 4
  br label %11

11:                                               ; preds = %27, %2
  %12 = load i32*, i32** %4, align 8
  %13 = load i32, i32* %6, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %12, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = load i32*, i32** %5, align 8
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = xor i32 %21, -1
  %23 = and i32 %16, %22
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %11
  store i32 0, i32* %3, align 4
  br label %32

26:                                               ; preds = %11
  br label %27

27:                                               ; preds = %26
  %28 = load i32, i32* %6, align 4
  %29 = add nsw i32 %28, -1
  store i32 %29, i32* %6, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %11, label %31

31:                                               ; preds = %27
  store i32 1, i32* %3, align 4
  br label %32

32:                                               ; preds = %31, %25
  %33 = load i32, i32* %3, align 4
  ret i32 %33
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @sf_or(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %7 = load %struct.set_family*, %struct.set_family** %2, align 8
  %8 = getelementptr inbounds %struct.set_family, %struct.set_family* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp sle i32 %9, 32
  br i1 %10, label %11, label %12

11:                                               ; preds = %1
  br label %20

12:                                               ; preds = %1
  %13 = load %struct.set_family*, %struct.set_family** %2, align 8
  %14 = getelementptr inbounds %struct.set_family, %struct.set_family* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sub nsw i32 %15, 1
  %17 = ashr i32 %16, 5
  %18 = add nsw i32 %17, 1
  %19 = add nsw i32 %18, 1
  br label %20

20:                                               ; preds = %12, %11
  %21 = phi i32 [ 2, %11 ], [ %19, %12 ]
  %22 = sext i32 %21 to i64
  %23 = mul i64 4, %22
  %24 = call noalias i8* @malloc(i64 %23) #7
  %25 = bitcast i8* %24 to i32*
  %26 = load %struct.set_family*, %struct.set_family** %2, align 8
  %27 = getelementptr inbounds %struct.set_family, %struct.set_family* %26, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = call i32* @set_clear(i32* %25, i32 %28)
  store i32* %29, i32** %3, align 8
  %30 = load %struct.set_family*, %struct.set_family** %2, align 8
  %31 = getelementptr inbounds %struct.set_family, %struct.set_family* %30, i32 0, i32 5
  %32 = load i32*, i32** %31, align 8
  store i32* %32, i32** %5, align 8
  %33 = load i32*, i32** %5, align 8
  %34 = load %struct.set_family*, %struct.set_family** %2, align 8
  %35 = getelementptr inbounds %struct.set_family, %struct.set_family* %34, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = load %struct.set_family*, %struct.set_family** %2, align 8
  %38 = getelementptr inbounds %struct.set_family, %struct.set_family* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = mul nsw i32 %36, %39
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i32, i32* %33, i64 %41
  store i32* %42, i32** %4, align 8
  br label %43

43:                                               ; preds = %82, %20
  %44 = load i32*, i32** %5, align 8
  %45 = load i32*, i32** %4, align 8
  %46 = icmp ult i32* %44, %45
  br i1 %46, label %47, label %89

47:                                               ; preds = %43
  %48 = load i32*, i32** %3, align 8
  %49 = getelementptr inbounds i32, i32* %48, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 1023
  store i32 %51, i32* %6, align 4
  %52 = load i32*, i32** %3, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 0
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, -1024
  store i32 %55, i32* %53, align 4
  %56 = load i32, i32* %6, align 4
  %57 = load i32*, i32** %3, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 0
  %59 = load i32, i32* %58, align 4
  %60 = or i32 %59, %56
  store i32 %60, i32* %58, align 4
  br label %61

61:                                               ; preds = %77, %47
  %62 = load i32*, i32** %3, align 8
  %63 = load i32, i32* %6, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %62, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = load i32*, i32** %5, align 8
  %68 = load i32, i32* %6, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %67, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = or i32 %66, %71
  %73 = load i32*, i32** %3, align 8
  %74 = load i32, i32* %6, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %73, i64 %75
  store i32 %72, i32* %76, align 4
  br label %77

77:                                               ; preds = %61
  %78 = load i32, i32* %6, align 4
  %79 = add nsw i32 %78, -1
  store i32 %79, i32* %6, align 4
  %80 = icmp sgt i32 %79, 0
  br i1 %80, label %61, label %81

81:                                               ; preds = %77
  br label %82

82:                                               ; preds = %81
  %83 = load %struct.set_family*, %struct.set_family** %2, align 8
  %84 = getelementptr inbounds %struct.set_family, %struct.set_family* %83, i32 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = load i32*, i32** %5, align 8
  %87 = sext i32 %85 to i64
  %88 = getelementptr inbounds i32, i32* %86, i64 %87
  store i32* %88, i32** %5, align 8
  br label %43

89:                                               ; preds = %43
  %90 = load i32*, i32** %3, align 8
  ret i32* %90
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @sf_and(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %7 = load %struct.set_family*, %struct.set_family** %2, align 8
  %8 = getelementptr inbounds %struct.set_family, %struct.set_family* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp sle i32 %9, 32
  br i1 %10, label %11, label %12

11:                                               ; preds = %1
  br label %20

12:                                               ; preds = %1
  %13 = load %struct.set_family*, %struct.set_family** %2, align 8
  %14 = getelementptr inbounds %struct.set_family, %struct.set_family* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sub nsw i32 %15, 1
  %17 = ashr i32 %16, 5
  %18 = add nsw i32 %17, 1
  %19 = add nsw i32 %18, 1
  br label %20

20:                                               ; preds = %12, %11
  %21 = phi i32 [ 2, %11 ], [ %19, %12 ]
  %22 = sext i32 %21 to i64
  %23 = mul i64 4, %22
  %24 = call noalias i8* @malloc(i64 %23) #7
  %25 = bitcast i8* %24 to i32*
  %26 = load %struct.set_family*, %struct.set_family** %2, align 8
  %27 = getelementptr inbounds %struct.set_family, %struct.set_family* %26, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = call i32* @set_clear(i32* %25, i32 %28)
  %30 = load %struct.set_family*, %struct.set_family** %2, align 8
  %31 = getelementptr inbounds %struct.set_family, %struct.set_family* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = call i32* @set_fill(i32* %29, i32 %32)
  store i32* %33, i32** %3, align 8
  %34 = load %struct.set_family*, %struct.set_family** %2, align 8
  %35 = getelementptr inbounds %struct.set_family, %struct.set_family* %34, i32 0, i32 5
  %36 = load i32*, i32** %35, align 8
  store i32* %36, i32** %5, align 8
  %37 = load i32*, i32** %5, align 8
  %38 = load %struct.set_family*, %struct.set_family** %2, align 8
  %39 = getelementptr inbounds %struct.set_family, %struct.set_family* %38, i32 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = load %struct.set_family*, %struct.set_family** %2, align 8
  %42 = getelementptr inbounds %struct.set_family, %struct.set_family* %41, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = mul nsw i32 %40, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %37, i64 %45
  store i32* %46, i32** %4, align 8
  br label %47

47:                                               ; preds = %86, %20
  %48 = load i32*, i32** %5, align 8
  %49 = load i32*, i32** %4, align 8
  %50 = icmp ult i32* %48, %49
  br i1 %50, label %51, label %93

51:                                               ; preds = %47
  %52 = load i32*, i32** %3, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 0
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, 1023
  store i32 %55, i32* %6, align 4
  %56 = load i32*, i32** %3, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 0
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, -1024
  store i32 %59, i32* %57, align 4
  %60 = load i32, i32* %6, align 4
  %61 = load i32*, i32** %3, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 0
  %63 = load i32, i32* %62, align 4
  %64 = or i32 %63, %60
  store i32 %64, i32* %62, align 4
  br label %65

65:                                               ; preds = %81, %51
  %66 = load i32*, i32** %3, align 8
  %67 = load i32, i32* %6, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %66, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = load i32*, i32** %5, align 8
  %72 = load i32, i32* %6, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i32, i32* %71, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %70, %75
  %77 = load i32*, i32** %3, align 8
  %78 = load i32, i32* %6, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i32, i32* %77, i64 %79
  store i32 %76, i32* %80, align 4
  br label %81

81:                                               ; preds = %65
  %82 = load i32, i32* %6, align 4
  %83 = add nsw i32 %82, -1
  store i32 %83, i32* %6, align 4
  %84 = icmp sgt i32 %83, 0
  br i1 %84, label %65, label %85

85:                                               ; preds = %81
  br label %86

86:                                               ; preds = %85
  %87 = load %struct.set_family*, %struct.set_family** %2, align 8
  %88 = getelementptr inbounds %struct.set_family, %struct.set_family* %87, i32 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = load i32*, i32** %5, align 8
  %91 = sext i32 %89 to i64
  %92 = getelementptr inbounds i32, i32* %90, i64 %91
  store i32* %92, i32** %5, align 8
  br label %47

93:                                               ; preds = %47
  %94 = load i32*, i32** %3, align 8
  ret i32* %94
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_active(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %5 = load %struct.set_family*, %struct.set_family** %2, align 8
  %6 = getelementptr inbounds %struct.set_family, %struct.set_family* %5, i32 0, i32 5
  %7 = load i32*, i32** %6, align 8
  store i32* %7, i32** %3, align 8
  %8 = load i32*, i32** %3, align 8
  %9 = load %struct.set_family*, %struct.set_family** %2, align 8
  %10 = getelementptr inbounds %struct.set_family, %struct.set_family* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = load %struct.set_family*, %struct.set_family** %2, align 8
  %13 = getelementptr inbounds %struct.set_family, %struct.set_family* %12, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = mul nsw i32 %11, %14
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i32, i32* %8, i64 %16
  store i32* %17, i32** %4, align 8
  br label %18

18:                                               ; preds = %27, %1
  %19 = load i32*, i32** %3, align 8
  %20 = load i32*, i32** %4, align 8
  %21 = icmp ult i32* %19, %20
  br i1 %21, label %22, label %34

22:                                               ; preds = %18
  %23 = load i32*, i32** %3, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 0
  %25 = load i32, i32* %24, align 4
  %26 = or i32 %25, 8192
  store i32 %26, i32* %24, align 4
  br label %27

27:                                               ; preds = %22
  %28 = load %struct.set_family*, %struct.set_family** %2, align 8
  %29 = getelementptr inbounds %struct.set_family, %struct.set_family* %28, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = load i32*, i32** %3, align 8
  %32 = sext i32 %30 to i64
  %33 = getelementptr inbounds i32, i32* %31, i64 %32
  store i32* %33, i32** %3, align 8
  br label %18

34:                                               ; preds = %18
  %35 = load %struct.set_family*, %struct.set_family** %2, align 8
  %36 = getelementptr inbounds %struct.set_family, %struct.set_family* %35, i32 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = load %struct.set_family*, %struct.set_family** %2, align 8
  %39 = getelementptr inbounds %struct.set_family, %struct.set_family* %38, i32 0, i32 4
  store i32 %37, i32* %39, align 8
  %40 = load %struct.set_family*, %struct.set_family** %2, align 8
  ret %struct.set_family* %40
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_inactive(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %7 = load %struct.set_family*, %struct.set_family** %2, align 8
  %8 = getelementptr inbounds %struct.set_family, %struct.set_family* %7, i32 0, i32 5
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %5, align 8
  %10 = load %struct.set_family*, %struct.set_family** %2, align 8
  %11 = getelementptr inbounds %struct.set_family, %struct.set_family* %10, i32 0, i32 5
  %12 = load i32*, i32** %11, align 8
  store i32* %12, i32** %3, align 8
  %13 = load i32*, i32** %3, align 8
  %14 = load %struct.set_family*, %struct.set_family** %2, align 8
  %15 = getelementptr inbounds %struct.set_family, %struct.set_family* %14, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = load %struct.set_family*, %struct.set_family** %2, align 8
  %18 = getelementptr inbounds %struct.set_family, %struct.set_family* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = mul nsw i32 %16, %19
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %13, i64 %21
  store i32* %22, i32** %4, align 8
  br label %23

23:                                               ; preds = %70, %1
  %24 = load i32*, i32** %3, align 8
  %25 = load i32*, i32** %4, align 8
  %26 = icmp ult i32* %24, %25
  br i1 %26, label %27, label %77

27:                                               ; preds = %23
  %28 = load i32*, i32** %3, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 0
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 8192
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %64

33:                                               ; preds = %27
  %34 = load i32*, i32** %5, align 8
  %35 = load i32*, i32** %3, align 8
  %36 = icmp ne i32* %34, %35
  br i1 %36, label %37, label %57

37:                                               ; preds = %33
  %38 = load i32*, i32** %3, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 0
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 1023
  store i32 %41, i32* %6, align 4
  br label %42

42:                                               ; preds = %52, %37
  %43 = load i32*, i32** %3, align 8
  %44 = load i32, i32* %6, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %43, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = load i32*, i32** %5, align 8
  %49 = load i32, i32* %6, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, i32* %48, i64 %50
  store i32 %47, i32* %51, align 4
  br label %52

52:                                               ; preds = %42
  %53 = load i32, i32* %6, align 4
  %54 = add nsw i32 %53, -1
  store i32 %54, i32* %6, align 4
  %55 = icmp sge i32 %54, 0
  br i1 %55, label %42, label %56

56:                                               ; preds = %52
  br label %57

57:                                               ; preds = %56, %33
  %58 = load %struct.set_family*, %struct.set_family** %2, align 8
  %59 = getelementptr inbounds %struct.set_family, %struct.set_family* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = load i32*, i32** %5, align 8
  %62 = sext i32 %60 to i64
  %63 = getelementptr inbounds i32, i32* %61, i64 %62
  store i32* %63, i32** %5, align 8
  br label %69

64:                                               ; preds = %27
  %65 = load %struct.set_family*, %struct.set_family** %2, align 8
  %66 = getelementptr inbounds %struct.set_family, %struct.set_family* %65, i32 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = add nsw i32 %67, -1
  store i32 %68, i32* %66, align 4
  br label %69

69:                                               ; preds = %64, %57
  br label %70

70:                                               ; preds = %69
  %71 = load %struct.set_family*, %struct.set_family** %2, align 8
  %72 = getelementptr inbounds %struct.set_family, %struct.set_family* %71, i32 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = load i32*, i32** %3, align 8
  %75 = sext i32 %73 to i64
  %76 = getelementptr inbounds i32, i32* %74, i64 %75
  store i32* %76, i32** %3, align 8
  br label %23

77:                                               ; preds = %23
  %78 = load %struct.set_family*, %struct.set_family** %2, align 8
  ret %struct.set_family* %78
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_copy(%struct.set_family* %0, %struct.set_family* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  %5 = load %struct.set_family*, %struct.set_family** %4, align 8
  %6 = getelementptr inbounds %struct.set_family, %struct.set_family* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = load %struct.set_family*, %struct.set_family** %3, align 8
  %9 = getelementptr inbounds %struct.set_family, %struct.set_family* %8, i32 0, i32 1
  store i32 %7, i32* %9, align 4
  %10 = load %struct.set_family*, %struct.set_family** %4, align 8
  %11 = getelementptr inbounds %struct.set_family, %struct.set_family* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = load %struct.set_family*, %struct.set_family** %3, align 8
  %14 = getelementptr inbounds %struct.set_family, %struct.set_family* %13, i32 0, i32 0
  store i32 %12, i32* %14, align 8
  %15 = load %struct.set_family*, %struct.set_family** %4, align 8
  %16 = getelementptr inbounds %struct.set_family, %struct.set_family* %15, i32 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = load %struct.set_family*, %struct.set_family** %3, align 8
  %19 = getelementptr inbounds %struct.set_family, %struct.set_family* %18, i32 0, i32 3
  store i32 %17, i32* %19, align 4
  %20 = load %struct.set_family*, %struct.set_family** %4, align 8
  %21 = getelementptr inbounds %struct.set_family, %struct.set_family* %20, i32 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = load %struct.set_family*, %struct.set_family** %3, align 8
  %24 = getelementptr inbounds %struct.set_family, %struct.set_family* %23, i32 0, i32 4
  store i32 %22, i32* %24, align 8
  %25 = load %struct.set_family*, %struct.set_family** %3, align 8
  %26 = getelementptr inbounds %struct.set_family, %struct.set_family* %25, i32 0, i32 5
  %27 = load i32*, i32** %26, align 8
  %28 = load %struct.set_family*, %struct.set_family** %4, align 8
  %29 = getelementptr inbounds %struct.set_family, %struct.set_family* %28, i32 0, i32 5
  %30 = load i32*, i32** %29, align 8
  %31 = load %struct.set_family*, %struct.set_family** %4, align 8
  %32 = getelementptr inbounds %struct.set_family, %struct.set_family* %31, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = load %struct.set_family*, %struct.set_family** %4, align 8
  %36 = getelementptr inbounds %struct.set_family, %struct.set_family* %35, i32 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = mul nsw i64 %34, %38
  %40 = call i32 @intcpy(i32* %27, i32* %30, i64 %39)
  %41 = load %struct.set_family*, %struct.set_family** %3, align 8
  ret %struct.set_family* %41
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @intcpy(i32* %0, i32* %1, i64 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i64 %2, i64* %7, align 8
  store i32 0, i32* %8, align 4
  br label %9

9:                                                ; preds = %20, %3
  %10 = load i32, i32* %8, align 4
  %11 = sext i32 %10 to i64
  %12 = load i64, i64* %7, align 8
  %13 = icmp slt i64 %11, %12
  br i1 %13, label %14, label %23

14:                                               ; preds = %9
  %15 = load i32*, i32** %6, align 8
  %16 = getelementptr inbounds i32, i32* %15, i32 1
  store i32* %16, i32** %6, align 8
  %17 = load i32, i32* %15, align 4
  %18 = load i32*, i32** %5, align 8
  %19 = getelementptr inbounds i32, i32* %18, i32 1
  store i32* %19, i32** %5, align 8
  store i32 %17, i32* %18, align 4
  br label %20

20:                                               ; preds = %14
  %21 = load i32, i32* %8, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %8, align 4
  br label %9

23:                                               ; preds = %9
  %24 = load i32, i32* %4, align 4
  ret i32 %24
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_join(%struct.set_family* %0, %struct.set_family* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  %8 = load %struct.set_family*, %struct.set_family** %3, align 8
  %9 = getelementptr inbounds %struct.set_family, %struct.set_family* %8, i32 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = load %struct.set_family*, %struct.set_family** %3, align 8
  %12 = getelementptr inbounds %struct.set_family, %struct.set_family* %11, i32 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = mul nsw i32 %10, %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %6, align 8
  %16 = load %struct.set_family*, %struct.set_family** %4, align 8
  %17 = getelementptr inbounds %struct.set_family, %struct.set_family* %16, i32 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = load %struct.set_family*, %struct.set_family** %4, align 8
  %20 = getelementptr inbounds %struct.set_family, %struct.set_family* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = mul nsw i32 %18, %21
  %23 = sext i32 %22 to i64
  store i64 %23, i64* %7, align 8
  %24 = load %struct.set_family*, %struct.set_family** %3, align 8
  %25 = getelementptr inbounds %struct.set_family, %struct.set_family* %24, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = load %struct.set_family*, %struct.set_family** %4, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp ne i32 %26, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %2
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.569, i64 0, i64 0))
  br label %32

32:                                               ; preds = %31, %2
  %33 = load %struct.set_family*, %struct.set_family** %3, align 8
  %34 = getelementptr inbounds %struct.set_family, %struct.set_family* %33, i32 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = load %struct.set_family*, %struct.set_family** %4, align 8
  %37 = getelementptr inbounds %struct.set_family, %struct.set_family* %36, i32 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %35, %38
  %40 = load %struct.set_family*, %struct.set_family** %3, align 8
  %41 = getelementptr inbounds %struct.set_family, %struct.set_family* %40, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = call %struct.set_family* @sf_new(i32 %39, i32 %42)
  store %struct.set_family* %43, %struct.set_family** %5, align 8
  %44 = load %struct.set_family*, %struct.set_family** %3, align 8
  %45 = getelementptr inbounds %struct.set_family, %struct.set_family* %44, i32 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = load %struct.set_family*, %struct.set_family** %4, align 8
  %48 = getelementptr inbounds %struct.set_family, %struct.set_family* %47, i32 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = add nsw i32 %46, %49
  %51 = load %struct.set_family*, %struct.set_family** %5, align 8
  %52 = getelementptr inbounds %struct.set_family, %struct.set_family* %51, i32 0, i32 3
  store i32 %50, i32* %52, align 4
  %53 = load %struct.set_family*, %struct.set_family** %3, align 8
  %54 = getelementptr inbounds %struct.set_family, %struct.set_family* %53, i32 0, i32 4
  %55 = load i32, i32* %54, align 8
  %56 = load %struct.set_family*, %struct.set_family** %4, align 8
  %57 = getelementptr inbounds %struct.set_family, %struct.set_family* %56, i32 0, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = add nsw i32 %55, %58
  %60 = load %struct.set_family*, %struct.set_family** %5, align 8
  %61 = getelementptr inbounds %struct.set_family, %struct.set_family* %60, i32 0, i32 4
  store i32 %59, i32* %61, align 8
  %62 = load %struct.set_family*, %struct.set_family** %5, align 8
  %63 = getelementptr inbounds %struct.set_family, %struct.set_family* %62, i32 0, i32 5
  %64 = load i32*, i32** %63, align 8
  %65 = load %struct.set_family*, %struct.set_family** %3, align 8
  %66 = getelementptr inbounds %struct.set_family, %struct.set_family* %65, i32 0, i32 5
  %67 = load i32*, i32** %66, align 8
  %68 = load i64, i64* %6, align 8
  %69 = call i32 @intcpy(i32* %64, i32* %67, i64 %68)
  %70 = load %struct.set_family*, %struct.set_family** %5, align 8
  %71 = getelementptr inbounds %struct.set_family, %struct.set_family* %70, i32 0, i32 5
  %72 = load i32*, i32** %71, align 8
  %73 = load i64, i64* %6, align 8
  %74 = getelementptr inbounds i32, i32* %72, i64 %73
  %75 = load %struct.set_family*, %struct.set_family** %4, align 8
  %76 = getelementptr inbounds %struct.set_family, %struct.set_family* %75, i32 0, i32 5
  %77 = load i32*, i32** %76, align 8
  %78 = load i64, i64* %7, align 8
  %79 = call i32 @intcpy(i32* %74, i32* %77, i64 %78)
  %80 = load %struct.set_family*, %struct.set_family** %5, align 8
  ret %struct.set_family* %80
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_new(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.set_family*, align 8
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %6 = load %struct.set_family*, %struct.set_family** @set_family_garbage, align 8
  %7 = icmp eq %struct.set_family* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = call noalias i8* @malloc(i64 40) #7
  %10 = bitcast i8* %9 to %struct.set_family*
  store %struct.set_family* %10, %struct.set_family** %5, align 8
  br label %16

11:                                               ; preds = %2
  %12 = load %struct.set_family*, %struct.set_family** @set_family_garbage, align 8
  store %struct.set_family* %12, %struct.set_family** %5, align 8
  %13 = load %struct.set_family*, %struct.set_family** %5, align 8
  %14 = getelementptr inbounds %struct.set_family, %struct.set_family* %13, i32 0, i32 6
  %15 = load %struct.set_family*, %struct.set_family** %14, align 8
  store %struct.set_family* %15, %struct.set_family** @set_family_garbage, align 8
  br label %16

16:                                               ; preds = %11, %8
  %17 = load i32, i32* %4, align 4
  %18 = load %struct.set_family*, %struct.set_family** %5, align 8
  %19 = getelementptr inbounds %struct.set_family, %struct.set_family* %18, i32 0, i32 1
  store i32 %17, i32* %19, align 4
  %20 = load i32, i32* %4, align 4
  %21 = icmp sle i32 %20, 32
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  br label %29

23:                                               ; preds = %16
  %24 = load i32, i32* %4, align 4
  %25 = sub nsw i32 %24, 1
  %26 = ashr i32 %25, 5
  %27 = add nsw i32 %26, 1
  %28 = add nsw i32 %27, 1
  br label %29

29:                                               ; preds = %23, %22
  %30 = phi i32 [ 2, %22 ], [ %28, %23 ]
  %31 = load %struct.set_family*, %struct.set_family** %5, align 8
  %32 = getelementptr inbounds %struct.set_family, %struct.set_family* %31, i32 0, i32 0
  store i32 %30, i32* %32, align 8
  %33 = load i32, i32* %3, align 4
  %34 = load %struct.set_family*, %struct.set_family** %5, align 8
  %35 = getelementptr inbounds %struct.set_family, %struct.set_family* %34, i32 0, i32 2
  store i32 %33, i32* %35, align 8
  %36 = load %struct.set_family*, %struct.set_family** %5, align 8
  %37 = getelementptr inbounds %struct.set_family, %struct.set_family* %36, i32 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = sext i32 %38 to i64
  %40 = load %struct.set_family*, %struct.set_family** %5, align 8
  %41 = getelementptr inbounds %struct.set_family, %struct.set_family* %40, i32 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = sext i32 %42 to i64
  %44 = mul nsw i64 %39, %43
  %45 = mul i64 4, %44
  %46 = call noalias i8* @malloc(i64 %45) #7
  %47 = bitcast i8* %46 to i32*
  %48 = load %struct.set_family*, %struct.set_family** %5, align 8
  %49 = getelementptr inbounds %struct.set_family, %struct.set_family* %48, i32 0, i32 5
  store i32* %47, i32** %49, align 8
  %50 = load %struct.set_family*, %struct.set_family** %5, align 8
  %51 = getelementptr inbounds %struct.set_family, %struct.set_family* %50, i32 0, i32 3
  store i32 0, i32* %51, align 4
  %52 = load %struct.set_family*, %struct.set_family** %5, align 8
  %53 = getelementptr inbounds %struct.set_family, %struct.set_family* %52, i32 0, i32 4
  store i32 0, i32* %53, align 8
  %54 = load %struct.set_family*, %struct.set_family** %5, align 8
  ret %struct.set_family* %54
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_append(%struct.set_family* %0, %struct.set_family* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  %7 = load %struct.set_family*, %struct.set_family** %3, align 8
  %8 = getelementptr inbounds %struct.set_family, %struct.set_family* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = load %struct.set_family*, %struct.set_family** %3, align 8
  %11 = getelementptr inbounds %struct.set_family, %struct.set_family* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = mul nsw i32 %9, %12
  %14 = sext i32 %13 to i64
  store i64 %14, i64* %5, align 8
  %15 = load %struct.set_family*, %struct.set_family** %4, align 8
  %16 = getelementptr inbounds %struct.set_family, %struct.set_family* %15, i32 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = load %struct.set_family*, %struct.set_family** %4, align 8
  %19 = getelementptr inbounds %struct.set_family, %struct.set_family* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = mul nsw i32 %17, %20
  %22 = sext i32 %21 to i64
  store i64 %22, i64* %6, align 8
  %23 = load %struct.set_family*, %struct.set_family** %3, align 8
  %24 = getelementptr inbounds %struct.set_family, %struct.set_family* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = load %struct.set_family*, %struct.set_family** %4, align 8
  %27 = getelementptr inbounds %struct.set_family, %struct.set_family* %26, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp ne i32 %25, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %2
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.574, i64 0, i64 0))
  br label %31

31:                                               ; preds = %30, %2
  %32 = load %struct.set_family*, %struct.set_family** %3, align 8
  %33 = getelementptr inbounds %struct.set_family, %struct.set_family* %32, i32 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = load %struct.set_family*, %struct.set_family** %4, align 8
  %36 = getelementptr inbounds %struct.set_family, %struct.set_family* %35, i32 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %34, %37
  %39 = load %struct.set_family*, %struct.set_family** %3, align 8
  %40 = getelementptr inbounds %struct.set_family, %struct.set_family* %39, i32 0, i32 2
  store i32 %38, i32* %40, align 8
  %41 = load %struct.set_family*, %struct.set_family** %3, align 8
  %42 = getelementptr inbounds %struct.set_family, %struct.set_family* %41, i32 0, i32 5
  %43 = load i32*, i32** %42, align 8
  %44 = icmp ne i32* %43, null
  br i1 %44, label %45, label %62

45:                                               ; preds = %31
  %46 = load %struct.set_family*, %struct.set_family** %3, align 8
  %47 = getelementptr inbounds %struct.set_family, %struct.set_family* %46, i32 0, i32 5
  %48 = load i32*, i32** %47, align 8
  %49 = bitcast i32* %48 to i8*
  %50 = load %struct.set_family*, %struct.set_family** %3, align 8
  %51 = getelementptr inbounds %struct.set_family, %struct.set_family* %50, i32 0, i32 2
  %52 = load i32, i32* %51, align 8
  %53 = sext i32 %52 to i64
  %54 = load %struct.set_family*, %struct.set_family** %3, align 8
  %55 = getelementptr inbounds %struct.set_family, %struct.set_family* %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = sext i32 %56 to i64
  %58 = mul nsw i64 %53, %57
  %59 = mul i64 4, %58
  %60 = call i8* @realloc(i8* %49, i64 %59) #7
  %61 = bitcast i8* %60 to i32*
  br label %75

62:                                               ; preds = %31
  %63 = load %struct.set_family*, %struct.set_family** %3, align 8
  %64 = getelementptr inbounds %struct.set_family, %struct.set_family* %63, i32 0, i32 2
  %65 = load i32, i32* %64, align 8
  %66 = sext i32 %65 to i64
  %67 = load %struct.set_family*, %struct.set_family** %3, align 8
  %68 = getelementptr inbounds %struct.set_family, %struct.set_family* %67, i32 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = sext i32 %69 to i64
  %71 = mul nsw i64 %66, %70
  %72 = mul i64 4, %71
  %73 = call noalias i8* @malloc(i64 %72) #7
  %74 = bitcast i8* %73 to i32*
  br label %75

75:                                               ; preds = %62, %45
  %76 = phi i32* [ %61, %45 ], [ %74, %62 ]
  %77 = load %struct.set_family*, %struct.set_family** %3, align 8
  %78 = getelementptr inbounds %struct.set_family, %struct.set_family* %77, i32 0, i32 5
  store i32* %76, i32** %78, align 8
  %79 = load %struct.set_family*, %struct.set_family** %3, align 8
  %80 = getelementptr inbounds %struct.set_family, %struct.set_family* %79, i32 0, i32 5
  %81 = load i32*, i32** %80, align 8
  %82 = load i64, i64* %5, align 8
  %83 = getelementptr inbounds i32, i32* %81, i64 %82
  %84 = load %struct.set_family*, %struct.set_family** %4, align 8
  %85 = getelementptr inbounds %struct.set_family, %struct.set_family* %84, i32 0, i32 5
  %86 = load i32*, i32** %85, align 8
  %87 = load i64, i64* %6, align 8
  %88 = call i32 @intcpy(i32* %83, i32* %86, i64 %87)
  %89 = load %struct.set_family*, %struct.set_family** %4, align 8
  %90 = getelementptr inbounds %struct.set_family, %struct.set_family* %89, i32 0, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = load %struct.set_family*, %struct.set_family** %3, align 8
  %93 = getelementptr inbounds %struct.set_family, %struct.set_family* %92, i32 0, i32 3
  %94 = load i32, i32* %93, align 4
  %95 = add nsw i32 %94, %91
  store i32 %95, i32* %93, align 4
  %96 = load %struct.set_family*, %struct.set_family** %4, align 8
  %97 = getelementptr inbounds %struct.set_family, %struct.set_family* %96, i32 0, i32 4
  %98 = load i32, i32* %97, align 8
  %99 = load %struct.set_family*, %struct.set_family** %3, align 8
  %100 = getelementptr inbounds %struct.set_family, %struct.set_family* %99, i32 0, i32 4
  %101 = load i32, i32* %100, align 8
  %102 = add nsw i32 %101, %98
  store i32 %102, i32* %100, align 8
  %103 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void @sf_free(%struct.set_family* %103)
  %104 = load %struct.set_family*, %struct.set_family** %3, align 8
  ret %struct.set_family* %104
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sf_free(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %3 = load %struct.set_family*, %struct.set_family** %2, align 8
  %4 = getelementptr inbounds %struct.set_family, %struct.set_family* %3, i32 0, i32 5
  %5 = load i32*, i32** %4, align 8
  %6 = icmp ne i32* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = load %struct.set_family*, %struct.set_family** %2, align 8
  %9 = getelementptr inbounds %struct.set_family, %struct.set_family* %8, i32 0, i32 5
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast i32* %10 to i8*
  call void @free(i8* %11) #7
  %12 = load %struct.set_family*, %struct.set_family** %2, align 8
  %13 = getelementptr inbounds %struct.set_family, %struct.set_family* %12, i32 0, i32 5
  store i32* null, i32** %13, align 8
  br label %14

14:                                               ; preds = %7, %1
  %15 = load %struct.set_family*, %struct.set_family** @set_family_garbage, align 8
  %16 = load %struct.set_family*, %struct.set_family** %2, align 8
  %17 = getelementptr inbounds %struct.set_family, %struct.set_family* %16, i32 0, i32 6
  store %struct.set_family* %15, %struct.set_family** %17, align 8
  %18 = load %struct.set_family*, %struct.set_family** %2, align 8
  store %struct.set_family* %18, %struct.set_family** @set_family_garbage, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_save(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %3 = load %struct.set_family*, %struct.set_family** %2, align 8
  %4 = getelementptr inbounds %struct.set_family, %struct.set_family* %3, i32 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = load %struct.set_family*, %struct.set_family** %2, align 8
  %7 = getelementptr inbounds %struct.set_family, %struct.set_family* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = call %struct.set_family* @sf_new(i32 %5, i32 %8)
  %10 = load %struct.set_family*, %struct.set_family** %2, align 8
  %11 = call %struct.set_family* @sf_copy(%struct.set_family* %9, %struct.set_family* %10)
  ret %struct.set_family* %11
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sf_cleanup() #0 {
  %1 = alloca %struct.set_family*, align 8
  %2 = alloca %struct.set_family*, align 8
  %3 = load %struct.set_family*, %struct.set_family** @set_family_garbage, align 8
  store %struct.set_family* %3, %struct.set_family** %1, align 8
  br label %4

4:                                                ; preds = %17, %0
  %5 = load %struct.set_family*, %struct.set_family** %1, align 8
  %6 = icmp ne %struct.set_family* %5, null
  br i1 %6, label %7, label %19

7:                                                ; preds = %4
  %8 = load %struct.set_family*, %struct.set_family** %1, align 8
  %9 = getelementptr inbounds %struct.set_family, %struct.set_family* %8, i32 0, i32 6
  %10 = load %struct.set_family*, %struct.set_family** %9, align 8
  store %struct.set_family* %10, %struct.set_family** %2, align 8
  %11 = load %struct.set_family*, %struct.set_family** %1, align 8
  %12 = icmp ne %struct.set_family* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %7
  %14 = load %struct.set_family*, %struct.set_family** %1, align 8
  %15 = bitcast %struct.set_family* %14 to i8*
  call void @free(i8* %15) #7
  store %struct.set_family* null, %struct.set_family** %1, align 8
  br label %16

16:                                               ; preds = %13, %7
  br label %17

17:                                               ; preds = %16
  %18 = load %struct.set_family*, %struct.set_family** %2, align 8
  store %struct.set_family* %18, %struct.set_family** %1, align 8
  br label %4

19:                                               ; preds = %4
  store %struct.set_family* null, %struct.set_family** @set_family_garbage, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_addset(%struct.set_family* %0, i32* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32* %1, i32** %4, align 8
  %7 = load %struct.set_family*, %struct.set_family** %3, align 8
  %8 = getelementptr inbounds %struct.set_family, %struct.set_family* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = load %struct.set_family*, %struct.set_family** %3, align 8
  %11 = getelementptr inbounds %struct.set_family, %struct.set_family* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp sge i32 %9, %12
  br i1 %13, label %14, label %64

14:                                               ; preds = %2
  %15 = load %struct.set_family*, %struct.set_family** %3, align 8
  %16 = getelementptr inbounds %struct.set_family, %struct.set_family* %15, i32 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = load %struct.set_family*, %struct.set_family** %3, align 8
  %19 = getelementptr inbounds %struct.set_family, %struct.set_family* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = sdiv i32 %20, 2
  %22 = add nsw i32 %17, %21
  %23 = add nsw i32 %22, 1
  %24 = load %struct.set_family*, %struct.set_family** %3, align 8
  %25 = getelementptr inbounds %struct.set_family, %struct.set_family* %24, i32 0, i32 2
  store i32 %23, i32* %25, align 8
  %26 = load %struct.set_family*, %struct.set_family** %3, align 8
  %27 = getelementptr inbounds %struct.set_family, %struct.set_family* %26, i32 0, i32 5
  %28 = load i32*, i32** %27, align 8
  %29 = icmp ne i32* %28, null
  br i1 %29, label %30, label %47

30:                                               ; preds = %14
  %31 = load %struct.set_family*, %struct.set_family** %3, align 8
  %32 = getelementptr inbounds %struct.set_family, %struct.set_family* %31, i32 0, i32 5
  %33 = load i32*, i32** %32, align 8
  %34 = bitcast i32* %33 to i8*
  %35 = load %struct.set_family*, %struct.set_family** %3, align 8
  %36 = getelementptr inbounds %struct.set_family, %struct.set_family* %35, i32 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = sext i32 %37 to i64
  %39 = load %struct.set_family*, %struct.set_family** %3, align 8
  %40 = getelementptr inbounds %struct.set_family, %struct.set_family* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = mul nsw i64 %38, %42
  %44 = mul i64 4, %43
  %45 = call i8* @realloc(i8* %34, i64 %44) #7
  %46 = bitcast i8* %45 to i32*
  br label %60

47:                                               ; preds = %14
  %48 = load %struct.set_family*, %struct.set_family** %3, align 8
  %49 = getelementptr inbounds %struct.set_family, %struct.set_family* %48, i32 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = sext i32 %50 to i64
  %52 = load %struct.set_family*, %struct.set_family** %3, align 8
  %53 = getelementptr inbounds %struct.set_family, %struct.set_family* %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = sext i32 %54 to i64
  %56 = mul nsw i64 %51, %55
  %57 = mul i64 4, %56
  %58 = call noalias i8* @malloc(i64 %57) #7
  %59 = bitcast i8* %58 to i32*
  br label %60

60:                                               ; preds = %47, %30
  %61 = phi i32* [ %46, %30 ], [ %59, %47 ]
  %62 = load %struct.set_family*, %struct.set_family** %3, align 8
  %63 = getelementptr inbounds %struct.set_family, %struct.set_family* %62, i32 0, i32 5
  store i32* %61, i32** %63, align 8
  br label %64

64:                                               ; preds = %60, %2
  %65 = load %struct.set_family*, %struct.set_family** %3, align 8
  %66 = getelementptr inbounds %struct.set_family, %struct.set_family* %65, i32 0, i32 5
  %67 = load i32*, i32** %66, align 8
  %68 = load %struct.set_family*, %struct.set_family** %3, align 8
  %69 = getelementptr inbounds %struct.set_family, %struct.set_family* %68, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = load %struct.set_family*, %struct.set_family** %3, align 8
  %72 = getelementptr inbounds %struct.set_family, %struct.set_family* %71, i32 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %72, align 4
  %75 = mul nsw i32 %70, %73
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i32, i32* %67, i64 %76
  store i32* %77, i32** %5, align 8
  %78 = load i32*, i32** %4, align 8
  %79 = getelementptr inbounds i32, i32* %78, i64 0
  %80 = load i32, i32* %79, align 4
  %81 = and i32 %80, 1023
  store i32 %81, i32* %6, align 4
  br label %82

82:                                               ; preds = %92, %64
  %83 = load i32*, i32** %4, align 8
  %84 = load i32, i32* %6, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i32, i32* %83, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = load i32*, i32** %5, align 8
  %89 = load i32, i32* %6, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i32, i32* %88, i64 %90
  store i32 %87, i32* %91, align 4
  br label %92

92:                                               ; preds = %82
  %93 = load i32, i32* %6, align 4
  %94 = add nsw i32 %93, -1
  store i32 %94, i32* %6, align 4
  %95 = icmp sge i32 %94, 0
  br i1 %95, label %82, label %96

96:                                               ; preds = %92
  %97 = load %struct.set_family*, %struct.set_family** %3, align 8
  ret %struct.set_family* %97
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sf_delset(%struct.set_family* %0, i32 %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.set_family*, %struct.set_family** %3, align 8
  %6 = getelementptr inbounds %struct.set_family, %struct.set_family* %5, i32 0, i32 5
  %7 = load i32*, i32** %6, align 8
  %8 = load %struct.set_family*, %struct.set_family** %3, align 8
  %9 = getelementptr inbounds %struct.set_family, %struct.set_family* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = load i32, i32* %4, align 4
  %12 = mul nsw i32 %10, %11
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i32, i32* %7, i64 %13
  %15 = load %struct.set_family*, %struct.set_family** %3, align 8
  %16 = getelementptr inbounds %struct.set_family, %struct.set_family* %15, i32 0, i32 5
  %17 = load i32*, i32** %16, align 8
  %18 = load %struct.set_family*, %struct.set_family** %3, align 8
  %19 = getelementptr inbounds %struct.set_family, %struct.set_family* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = load %struct.set_family*, %struct.set_family** %3, align 8
  %22 = getelementptr inbounds %struct.set_family, %struct.set_family* %21, i32 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = add nsw i32 %23, -1
  store i32 %24, i32* %22, align 4
  %25 = mul nsw i32 %20, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %17, i64 %26
  %28 = call i32* @set_copy(i32* %14, i32* %27)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sf_print(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %5 = load %struct.set_family*, %struct.set_family** %2, align 8
  %6 = getelementptr inbounds %struct.set_family, %struct.set_family* %5, i32 0, i32 5
  %7 = load i32*, i32** %6, align 8
  store i32* %7, i32** %3, align 8
  store i32 0, i32* %4, align 4
  br label %8

8:                                                ; preds = %19, %1
  %9 = load i32, i32* %4, align 4
  %10 = load %struct.set_family*, %struct.set_family** %2, align 8
  %11 = getelementptr inbounds %struct.set_family, %struct.set_family* %10, i32 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %9, %12
  br i1 %13, label %14, label %28

14:                                               ; preds = %8
  %15 = load i32, i32* %4, align 4
  %16 = load i32*, i32** %3, align 8
  %17 = call i8* @ps1(i32* %16)
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.585, i64 0, i64 0), i32 %15, i8* %17)
  br label %19

19:                                               ; preds = %14
  %20 = load %struct.set_family*, %struct.set_family** %2, align 8
  %21 = getelementptr inbounds %struct.set_family, %struct.set_family* %20, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = load i32*, i32** %3, align 8
  %24 = sext i32 %22 to i64
  %25 = getelementptr inbounds i32, i32* %23, i64 %24
  store i32* %25, i32** %3, align 8
  %26 = load i32, i32* %4, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %4, align 4
  br label %8

28:                                               ; preds = %8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ps1(i32* %0) #0 {
  %2 = alloca i32*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [20 x i8], align 16
  %9 = alloca i32, align 4
  store i32* %0, i32** %2, align 8
  store i32 0, i32* %6, align 4
  %10 = load i32*, i32** %2, align 8
  %11 = getelementptr inbounds i32, i32* %10, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1023
  %14 = mul i32 32, %13
  store i32 %14, i32* %7, align 4
  store i32 1, i32* %9, align 4
  %15 = load i32, i32* %6, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %6, align 4
  %17 = sext i32 %15 to i64
  %18 = getelementptr inbounds [120 x i8], [120 x i8]* @s1, i64 0, i64 %17
  store i8 91, i8* %18, align 1
  store i32 0, i32* %3, align 4
  br label %19

19:                                               ; preds = %91, %1
  %20 = load i32, i32* %3, align 4
  %21 = load i32, i32* %7, align 4
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %23, label %94

23:                                               ; preds = %19
  %24 = load i32*, i32** %2, align 8
  %25 = load i32, i32* %3, align 4
  %26 = ashr i32 %25, 5
  %27 = add nsw i32 %26, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, i32* %24, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = load i32, i32* %3, align 4
  %32 = and i32 %31, 31
  %33 = shl i32 1, %32
  %34 = and i32 %30, %33
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %90

36:                                               ; preds = %23
  %37 = load i32, i32* %9, align 4
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %36
  %40 = load i32, i32* %6, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %6, align 4
  %42 = sext i32 %40 to i64
  %43 = getelementptr inbounds [120 x i8], [120 x i8]* @s1, i64 0, i64 %42
  store i8 44, i8* %43, align 1
  br label %44

44:                                               ; preds = %39, %36
  store i32 0, i32* %9, align 4
  %45 = load i32, i32* %3, align 4
  store i32 %45, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %46

46:                                               ; preds = %55, %44
  %47 = load i32, i32* %4, align 4
  %48 = srem i32 %47, 10
  %49 = add nsw i32 %48, 48
  %50 = trunc i32 %49 to i8
  %51 = load i32, i32* %5, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %5, align 4
  %53 = sext i32 %51 to i64
  %54 = getelementptr inbounds [20 x i8], [20 x i8]* %8, i64 0, i64 %53
  store i8 %50, i8* %54, align 1
  br label %55

55:                                               ; preds = %46
  %56 = load i32, i32* %4, align 4
  %57 = sdiv i32 %56, 10
  store i32 %57, i32* %4, align 4
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %46, label %59

59:                                               ; preds = %55
  br label %60

60:                                               ; preds = %70, %59
  %61 = load i32, i32* %5, align 4
  %62 = add nsw i32 %61, -1
  store i32 %62, i32* %5, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [20 x i8], [20 x i8]* %8, i64 0, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = load i32, i32* %6, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %6, align 4
  %68 = sext i32 %66 to i64
  %69 = getelementptr inbounds [120 x i8], [120 x i8]* @s1, i64 0, i64 %68
  store i8 %65, i8* %69, align 1
  br label %70

70:                                               ; preds = %60
  %71 = load i32, i32* %5, align 4
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %60, label %73

73:                                               ; preds = %70
  %74 = load i32, i32* %6, align 4
  %75 = icmp sgt i32 %74, 105
  br i1 %75, label %76, label %89

76:                                               ; preds = %73
  %77 = load i32, i32* %6, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %6, align 4
  %79 = sext i32 %77 to i64
  %80 = getelementptr inbounds [120 x i8], [120 x i8]* @s1, i64 0, i64 %79
  store i8 46, i8* %80, align 1
  %81 = load i32, i32* %6, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %6, align 4
  %83 = sext i32 %81 to i64
  %84 = getelementptr inbounds [120 x i8], [120 x i8]* @s1, i64 0, i64 %83
  store i8 46, i8* %84, align 1
  %85 = load i32, i32* %6, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %6, align 4
  %87 = sext i32 %85 to i64
  %88 = getelementptr inbounds [120 x i8], [120 x i8]* @s1, i64 0, i64 %87
  store i8 46, i8* %88, align 1
  br label %94

89:                                               ; preds = %73
  br label %90

90:                                               ; preds = %89, %23
  br label %91

91:                                               ; preds = %90
  %92 = load i32, i32* %3, align 4
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %3, align 4
  br label %19

94:                                               ; preds = %76, %19
  %95 = load i32, i32* %6, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %6, align 4
  %97 = sext i32 %95 to i64
  %98 = getelementptr inbounds [120 x i8], [120 x i8]* @s1, i64 0, i64 %97
  store i8 93, i8* %98, align 1
  %99 = load i32, i32* %6, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %6, align 4
  %101 = sext i32 %99 to i64
  %102 = getelementptr inbounds [120 x i8], [120 x i8]* @s1, i64 0, i64 %101
  store i8 0, i8* %102, align 1
  ret i8* getelementptr inbounds ([120 x i8], [120 x i8]* @s1, i64 0, i64 0)
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sf_bm_print(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %5 = load %struct.set_family*, %struct.set_family** %2, align 8
  %6 = getelementptr inbounds %struct.set_family, %struct.set_family* %5, i32 0, i32 5
  %7 = load i32*, i32** %6, align 8
  store i32* %7, i32** %3, align 8
  store i32 0, i32* %4, align 4
  br label %8

8:                                                ; preds = %22, %1
  %9 = load i32, i32* %4, align 4
  %10 = load %struct.set_family*, %struct.set_family** %2, align 8
  %11 = getelementptr inbounds %struct.set_family, %struct.set_family* %10, i32 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %9, %12
  br i1 %13, label %14, label %31

14:                                               ; preds = %8
  %15 = load i32, i32* %4, align 4
  %16 = load i32*, i32** %3, align 8
  %17 = load %struct.set_family*, %struct.set_family** %2, align 8
  %18 = getelementptr inbounds %struct.set_family, %struct.set_family* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = call i8* @pbv1(i32* %16, i32 %19)
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.586, i64 0, i64 0), i32 %15, i8* %20)
  br label %22

22:                                               ; preds = %14
  %23 = load %struct.set_family*, %struct.set_family** %2, align 8
  %24 = getelementptr inbounds %struct.set_family, %struct.set_family* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = load i32*, i32** %3, align 8
  %27 = sext i32 %25 to i64
  %28 = getelementptr inbounds i32, i32* %26, i64 %27
  store i32* %28, i32** %3, align 8
  %29 = load i32, i32* %4, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %4, align 4
  br label %8

31:                                               ; preds = %8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @pbv1(i32* %0, i32 %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %6

6:                                                ; preds = %29, %2
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %7, %8
  br i1 %9, label %10, label %32

10:                                               ; preds = %6
  %11 = load i32*, i32** %3, align 8
  %12 = load i32, i32* %5, align 4
  %13 = ashr i32 %12, 5
  %14 = add nsw i32 %13, 1
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i32, i32* %11, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = load i32, i32* %5, align 4
  %19 = and i32 %18, 31
  %20 = shl i32 1, %19
  %21 = and i32 %17, %20
  %22 = icmp ne i32 %21, 0
  %23 = zext i1 %22 to i64
  %24 = select i1 %22, i32 49, i32 48
  %25 = trunc i32 %24 to i8
  %26 = load i32, i32* %5, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [120 x i8], [120 x i8]* @s1, i64 0, i64 %27
  store i8 %25, i8* %28, align 1
  br label %29

29:                                               ; preds = %10
  %30 = load i32, i32* %5, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %5, align 4
  br label %6

32:                                               ; preds = %6
  %33 = load i32, i32* %4, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [120 x i8], [120 x i8]* @s1, i64 0, i64 %34
  store i8 0, i8* %35, align 1
  ret i8* getelementptr inbounds ([120 x i8], [120 x i8]* @s1, i64 0, i64 0)
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sf_write(%struct._IO_FILE* %0, %struct.set_family* %1) #0 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %8 = load %struct.set_family*, %struct.set_family** %4, align 8
  %9 = getelementptr inbounds %struct.set_family, %struct.set_family* %8, i32 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = load %struct.set_family*, %struct.set_family** %4, align 8
  %12 = getelementptr inbounds %struct.set_family, %struct.set_family* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.587, i64 0, i64 0), i32 %10, i32 %13)
  %15 = load %struct.set_family*, %struct.set_family** %4, align 8
  %16 = getelementptr inbounds %struct.set_family, %struct.set_family* %15, i32 0, i32 5
  %17 = load i32*, i32** %16, align 8
  store i32* %17, i32** %5, align 8
  %18 = load i32*, i32** %5, align 8
  %19 = load %struct.set_family*, %struct.set_family** %4, align 8
  %20 = getelementptr inbounds %struct.set_family, %struct.set_family* %19, i32 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = load %struct.set_family*, %struct.set_family** %4, align 8
  %23 = getelementptr inbounds %struct.set_family, %struct.set_family* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = mul nsw i32 %21, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %18, i64 %26
  store i32* %27, i32** %6, align 8
  br label %28

28:                                               ; preds = %35, %2
  %29 = load i32*, i32** %5, align 8
  %30 = load i32*, i32** %6, align 8
  %31 = icmp ult i32* %29, %30
  br i1 %31, label %32, label %42

32:                                               ; preds = %28
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %34 = load i32*, i32** %5, align 8
  call void @set_write(%struct._IO_FILE* %33, i32* %34)
  br label %35

35:                                               ; preds = %32
  %36 = load %struct.set_family*, %struct.set_family** %4, align 8
  %37 = getelementptr inbounds %struct.set_family, %struct.set_family* %36, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = load i32*, i32** %5, align 8
  %40 = sext i32 %38 to i64
  %41 = getelementptr inbounds i32, i32* %39, i64 %40
  store i32* %41, i32** %5, align 8
  br label %28

42:                                               ; preds = %28
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %44 = call i32 @fflush(%struct._IO_FILE* %43)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @set_write(%struct._IO_FILE* %0, i32* %1) #0 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store i32* %1, i32** %4, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = getelementptr inbounds i32, i32* %7, i64 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1023
  store i32 %10, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %11

11:                                               ; preds = %35, %2
  %12 = load i32, i32* %6, align 4
  %13 = load i32, i32* %5, align 4
  %14 = icmp sle i32 %12, %13
  br i1 %14, label %15, label %38

15:                                               ; preds = %11
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %17 = load i32*, i32** %4, align 8
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6.588, i64 0, i64 0), i32 %21)
  %23 = load i32, i32* %6, align 4
  %24 = add nsw i32 %23, 1
  %25 = srem i32 %24, 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %34

27:                                               ; preds = %15
  %28 = load i32, i32* %6, align 4
  %29 = load i32, i32* %5, align 4
  %30 = icmp ne i32 %28, %29
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.589, i64 0, i64 0))
  br label %34

34:                                               ; preds = %31, %27, %15
  br label %35

35:                                               ; preds = %34
  %36 = load i32, i32* %6, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %6, align 4
  br label %11

38:                                               ; preds = %11
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %40 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.590, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_read(%struct._IO_FILE* %0) #0 {
  %2 = alloca %struct._IO_FILE*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.set_family*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.587, i64 0, i64 0), i32* %3, i32* %4)
  %10 = load i32, i32* %3, align 4
  %11 = load i32, i32* %4, align 4
  %12 = call %struct.set_family* @sf_new(i32 %10, i32 %11)
  store %struct.set_family* %12, %struct.set_family** %7, align 8
  %13 = load i32, i32* %3, align 4
  %14 = load %struct.set_family*, %struct.set_family** %7, align 8
  %15 = getelementptr inbounds %struct.set_family, %struct.set_family* %14, i32 0, i32 3
  store i32 %13, i32* %15, align 4
  %16 = load %struct.set_family*, %struct.set_family** %7, align 8
  %17 = getelementptr inbounds %struct.set_family, %struct.set_family* %16, i32 0, i32 5
  %18 = load i32*, i32** %17, align 8
  store i32* %18, i32** %5, align 8
  %19 = load i32*, i32** %5, align 8
  %20 = load %struct.set_family*, %struct.set_family** %7, align 8
  %21 = getelementptr inbounds %struct.set_family, %struct.set_family* %20, i32 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = load %struct.set_family*, %struct.set_family** %7, align 8
  %24 = getelementptr inbounds %struct.set_family, %struct.set_family* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = mul nsw i32 %22, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %19, i64 %27
  store i32* %28, i32** %6, align 8
  br label %29

29:                                               ; preds = %55, %1
  %30 = load i32*, i32** %5, align 8
  %31 = load i32*, i32** %6, align 8
  %32 = icmp ult i32* %30, %31
  br i1 %32, label %33, label %62

33:                                               ; preds = %29
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %35 = load i32*, i32** %5, align 8
  %36 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.591, i64 0, i64 0), i32* %35)
  store i32 1, i32* %4, align 4
  br label %37

37:                                               ; preds = %51, %33
  %38 = load i32, i32* %4, align 4
  %39 = load i32*, i32** %5, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 0
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, 1023
  %43 = icmp ule i32 %38, %42
  br i1 %43, label %44, label %54

44:                                               ; preds = %37
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %46 = load i32*, i32** %5, align 8
  %47 = load i32, i32* %4, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, i32* %46, i64 %48
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.591, i64 0, i64 0), i32* %49)
  br label %51

51:                                               ; preds = %44
  %52 = load i32, i32* %4, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %4, align 4
  br label %37

54:                                               ; preds = %37
  br label %55

55:                                               ; preds = %54
  %56 = load %struct.set_family*, %struct.set_family** %7, align 8
  %57 = getelementptr inbounds %struct.set_family, %struct.set_family* %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = load i32*, i32** %5, align 8
  %60 = sext i32 %58 to i64
  %61 = getelementptr inbounds i32, i32* %59, i64 %60
  store i32* %61, i32** %5, align 8
  br label %29

62:                                               ; preds = %29
  %63 = load %struct.set_family*, %struct.set_family** %7, align 8
  ret %struct.set_family* %63
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_bm_read(%struct._IO_FILE* %0) #0 {
  %2 = alloca %struct._IO_FILE*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca %struct.set_family*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %10 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.587, i64 0, i64 0), i32* %5, i32* %6)
  %11 = load i32, i32* %5, align 4
  %12 = load i32, i32* %6, align 4
  %13 = call %struct.set_family* @sf_new(i32 %11, i32 %12)
  store %struct.set_family* %13, %struct.set_family** %8, align 8
  store i32 0, i32* %3, align 4
  br label %14

14:                                               ; preds = %68, %1
  %15 = load i32, i32* %3, align 4
  %16 = load i32, i32* %5, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %71

18:                                               ; preds = %14
  %19 = load %struct.set_family*, %struct.set_family** %8, align 8
  %20 = getelementptr inbounds %struct.set_family, %struct.set_family* %19, i32 0, i32 5
  %21 = load i32*, i32** %20, align 8
  %22 = load %struct.set_family*, %struct.set_family** %8, align 8
  %23 = getelementptr inbounds %struct.set_family, %struct.set_family* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = load %struct.set_family*, %struct.set_family** %8, align 8
  %26 = getelementptr inbounds %struct.set_family, %struct.set_family* %25, i32 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  %29 = mul nsw i32 %24, %27
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i32, i32* %21, i64 %30
  store i32* %31, i32** %7, align 8
  %32 = load i32*, i32** %7, align 8
  %33 = load %struct.set_family*, %struct.set_family** %8, align 8
  %34 = getelementptr inbounds %struct.set_family, %struct.set_family* %33, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = call i32* @set_clear(i32* %32, i32 %35)
  store i32 0, i32* %4, align 4
  br label %37

37:                                               ; preds = %59, %18
  %38 = load i32, i32* %4, align 4
  %39 = load i32, i32* %6, align 4
  %40 = icmp slt i32 %38, %39
  br i1 %40, label %41, label %62

41:                                               ; preds = %37
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %43 = call i32 @getc(%struct._IO_FILE* %42)
  switch i32 %43, label %57 [
    i32 48, label %44
    i32 49, label %45
  ]

44:                                               ; preds = %41
  br label %58

45:                                               ; preds = %41
  %46 = load i32, i32* %4, align 4
  %47 = and i32 %46, 31
  %48 = shl i32 1, %47
  %49 = load i32*, i32** %7, align 8
  %50 = load i32, i32* %4, align 4
  %51 = ashr i32 %50, 5
  %52 = add nsw i32 %51, 1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, i32* %49, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = or i32 %55, %48
  store i32 %56, i32* %54, align 4
  br label %58

57:                                               ; preds = %41
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9.592, i64 0, i64 0))
  br label %58

58:                                               ; preds = %57, %45, %44
  br label %59

59:                                               ; preds = %58
  %60 = load i32, i32* %4, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %4, align 4
  br label %37

62:                                               ; preds = %37
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %64 = call i32 @getc(%struct._IO_FILE* %63)
  %65 = icmp ne i32 %64, 10
  br i1 %65, label %66, label %67

66:                                               ; preds = %62
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10.593, i64 0, i64 0))
  br label %67

67:                                               ; preds = %66, %62
  br label %68

68:                                               ; preds = %67
  %69 = load i32, i32* %3, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %3, align 4
  br label %14

71:                                               ; preds = %14
  %72 = load %struct.set_family*, %struct.set_family** %8, align 8
  ret %struct.set_family* %72
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @set_adjcnt(i32* %0, i32* %1, i32 %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32 %2, i32* %6, align 4
  %10 = load i32*, i32** %4, align 8
  %11 = getelementptr inbounds i32, i32* %10, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1023
  store i32 %13, i32* %7, align 4
  br label %14

14:                                               ; preds = %47, %3
  %15 = load i32, i32* %7, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %48

17:                                               ; preds = %14
  %18 = load i32*, i32** %4, align 8
  %19 = load i32, i32* %7, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, i32* %18, i64 %20
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %9, align 4
  %23 = load i32, i32* %7, align 4
  %24 = add nsw i32 %23, -1
  store i32 %24, i32* %7, align 4
  %25 = shl i32 %24, 5
  store i32 %25, i32* %8, align 4
  br label %26

26:                                               ; preds = %42, %17
  %27 = load i32, i32* %9, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %47

29:                                               ; preds = %26
  %30 = load i32, i32* %9, align 4
  %31 = and i32 %30, 1
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %41

33:                                               ; preds = %29
  %34 = load i32, i32* %6, align 4
  %35 = load i32*, i32** %5, align 8
  %36 = load i32, i32* %8, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %35, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add nsw i32 %39, %34
  store i32 %40, i32* %38, align 4
  br label %41

41:                                               ; preds = %33, %29
  br label %42

42:                                               ; preds = %41
  %43 = load i32, i32* %8, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %8, align 4
  %45 = load i32, i32* %9, align 4
  %46 = lshr i32 %45, 1
  store i32 %46, i32* %9, align 4
  br label %26

47:                                               ; preds = %26
  br label %14

48:                                               ; preds = %14
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @sf_count(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %9 = load %struct.set_family*, %struct.set_family** %2, align 8
  %10 = getelementptr inbounds %struct.set_family, %struct.set_family* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = mul i64 4, %12
  %14 = call noalias i8* @malloc(i64 %13) #7
  %15 = bitcast i8* %14 to i32*
  store i32* %15, i32** %7, align 8
  %16 = load %struct.set_family*, %struct.set_family** %2, align 8
  %17 = getelementptr inbounds %struct.set_family, %struct.set_family* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sub nsw i32 %18, 1
  store i32 %19, i32* %5, align 4
  br label %20

20:                                               ; preds = %28, %1
  %21 = load i32, i32* %5, align 4
  %22 = icmp sge i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %20
  %24 = load i32*, i32** %7, align 8
  %25 = load i32, i32* %5, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %24, i64 %26
  store i32 0, i32* %27, align 4
  br label %28

28:                                               ; preds = %23
  %29 = load i32, i32* %5, align 4
  %30 = add nsw i32 %29, -1
  store i32 %30, i32* %5, align 4
  br label %20

31:                                               ; preds = %20
  %32 = load %struct.set_family*, %struct.set_family** %2, align 8
  %33 = getelementptr inbounds %struct.set_family, %struct.set_family* %32, i32 0, i32 5
  %34 = load i32*, i32** %33, align 8
  store i32* %34, i32** %3, align 8
  %35 = load i32*, i32** %3, align 8
  %36 = load %struct.set_family*, %struct.set_family** %2, align 8
  %37 = getelementptr inbounds %struct.set_family, %struct.set_family* %36, i32 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = load %struct.set_family*, %struct.set_family** %2, align 8
  %40 = getelementptr inbounds %struct.set_family, %struct.set_family* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = mul nsw i32 %38, %41
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %35, i64 %43
  store i32* %44, i32** %4, align 8
  br label %45

45:                                               ; preds = %88, %31
  %46 = load i32*, i32** %3, align 8
  %47 = load i32*, i32** %4, align 8
  %48 = icmp ult i32* %46, %47
  br i1 %48, label %49, label %95

49:                                               ; preds = %45
  %50 = load i32*, i32** %3, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 0
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 1023
  store i32 %53, i32* %5, align 4
  br label %54

54:                                               ; preds = %86, %49
  %55 = load i32, i32* %5, align 4
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %57, label %87

57:                                               ; preds = %54
  %58 = load i32*, i32** %3, align 8
  %59 = load i32, i32* %5, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %58, i64 %60
  %62 = load i32, i32* %61, align 4
  store i32 %62, i32* %8, align 4
  %63 = load i32, i32* %5, align 4
  %64 = add nsw i32 %63, -1
  store i32 %64, i32* %5, align 4
  %65 = shl i32 %64, 5
  store i32 %65, i32* %6, align 4
  br label %66

66:                                               ; preds = %81, %57
  %67 = load i32, i32* %8, align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %86

69:                                               ; preds = %66
  %70 = load i32, i32* %8, align 4
  %71 = and i32 %70, 1
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %69
  %74 = load i32*, i32** %7, align 8
  %75 = load i32, i32* %6, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i32, i32* %74, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %77, align 4
  br label %80

80:                                               ; preds = %73, %69
  br label %81

81:                                               ; preds = %80
  %82 = load i32, i32* %6, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %6, align 4
  %84 = load i32, i32* %8, align 4
  %85 = lshr i32 %84, 1
  store i32 %85, i32* %8, align 4
  br label %66

86:                                               ; preds = %66
  br label %54

87:                                               ; preds = %54
  br label %88

88:                                               ; preds = %87
  %89 = load %struct.set_family*, %struct.set_family** %2, align 8
  %90 = getelementptr inbounds %struct.set_family, %struct.set_family* %89, i32 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = load i32*, i32** %3, align 8
  %93 = sext i32 %91 to i64
  %94 = getelementptr inbounds i32, i32* %92, i64 %93
  store i32* %94, i32** %3, align 8
  br label %45

95:                                               ; preds = %45
  %96 = load i32*, i32** %7, align 8
  ret i32* %96
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @sf_count_restricted(%struct.set_family* %0, i32* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32* %1, i32** %4, align 8
  %12 = load %struct.set_family*, %struct.set_family** %3, align 8
  %13 = getelementptr inbounds %struct.set_family, %struct.set_family* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = mul i64 4, %15
  %17 = call noalias i8* @malloc(i64 %16) #7
  %18 = bitcast i8* %17 to i32*
  store i32* %18, i32** %8, align 8
  %19 = load %struct.set_family*, %struct.set_family** %3, align 8
  %20 = getelementptr inbounds %struct.set_family, %struct.set_family* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sub nsw i32 %21, 1
  store i32 %22, i32* %6, align 4
  br label %23

23:                                               ; preds = %31, %2
  %24 = load i32, i32* %6, align 4
  %25 = icmp sge i32 %24, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %23
  %27 = load i32*, i32** %8, align 8
  %28 = load i32, i32* %6, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %27, i64 %29
  store i32 0, i32* %30, align 4
  br label %31

31:                                               ; preds = %26
  %32 = load i32, i32* %6, align 4
  %33 = add nsw i32 %32, -1
  store i32 %33, i32* %6, align 4
  br label %23

34:                                               ; preds = %23
  %35 = load %struct.set_family*, %struct.set_family** %3, align 8
  %36 = getelementptr inbounds %struct.set_family, %struct.set_family* %35, i32 0, i32 5
  %37 = load i32*, i32** %36, align 8
  store i32* %37, i32** %5, align 8
  %38 = load i32*, i32** %5, align 8
  %39 = load %struct.set_family*, %struct.set_family** %3, align 8
  %40 = getelementptr inbounds %struct.set_family, %struct.set_family* %39, i32 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = load %struct.set_family*, %struct.set_family** %3, align 8
  %43 = getelementptr inbounds %struct.set_family, %struct.set_family* %42, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = mul nsw i32 %41, %44
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i32, i32* %38, i64 %46
  store i32* %47, i32** %11, align 8
  br label %48

48:                                               ; preds = %102, %34
  %49 = load i32*, i32** %5, align 8
  %50 = load i32*, i32** %11, align 8
  %51 = icmp ult i32* %49, %50
  br i1 %51, label %52, label %109

52:                                               ; preds = %48
  %53 = load i32*, i32** %5, align 8
  %54 = call i32 @set_ord(i32* %53)
  %55 = sub nsw i32 %54, 1
  %56 = sdiv i32 1024, %55
  store i32 %56, i32* %10, align 4
  %57 = load i32*, i32** %5, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 0
  %59 = load i32, i32* %58, align 4
  %60 = and i32 %59, 1023
  store i32 %60, i32* %6, align 4
  br label %61

61:                                               ; preds = %100, %52
  %62 = load i32, i32* %6, align 4
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %101

64:                                               ; preds = %61
  %65 = load i32*, i32** %5, align 8
  %66 = load i32, i32* %6, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %65, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = load i32*, i32** %4, align 8
  %71 = load i32, i32* %6, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %70, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = and i32 %69, %74
  store i32 %75, i32* %9, align 4
  %76 = load i32, i32* %6, align 4
  %77 = add nsw i32 %76, -1
  store i32 %77, i32* %6, align 4
  %78 = shl i32 %77, 5
  store i32 %78, i32* %7, align 4
  br label %79

79:                                               ; preds = %95, %64
  %80 = load i32, i32* %9, align 4
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %100

82:                                               ; preds = %79
  %83 = load i32, i32* %9, align 4
  %84 = and i32 %83, 1
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %94

86:                                               ; preds = %82
  %87 = load i32, i32* %10, align 4
  %88 = load i32*, i32** %8, align 8
  %89 = load i32, i32* %7, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i32, i32* %88, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = add nsw i32 %92, %87
  store i32 %93, i32* %91, align 4
  br label %94

94:                                               ; preds = %86, %82
  br label %95

95:                                               ; preds = %94
  %96 = load i32, i32* %7, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %7, align 4
  %98 = load i32, i32* %9, align 4
  %99 = lshr i32 %98, 1
  store i32 %99, i32* %9, align 4
  br label %79

100:                                              ; preds = %79
  br label %61

101:                                              ; preds = %61
  br label %102

102:                                              ; preds = %101
  %103 = load %struct.set_family*, %struct.set_family** %3, align 8
  %104 = getelementptr inbounds %struct.set_family, %struct.set_family* %103, i32 0, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = load i32*, i32** %5, align 8
  %107 = sext i32 %105 to i64
  %108 = getelementptr inbounds i32, i32* %106, i64 %107
  store i32* %108, i32** %5, align 8
  br label %48

109:                                              ; preds = %48
  %110 = load i32*, i32** %8, align 8
  ret i32* %110
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_delc(%struct.set_family* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %struct.set_family*, %struct.set_family** %4, align 8
  %8 = load i32, i32* %5, align 4
  %9 = load i32, i32* %6, align 4
  %10 = load i32, i32* %5, align 4
  %11 = sub nsw i32 %9, %10
  %12 = add nsw i32 %11, 1
  %13 = call %struct.set_family* @sf_delcol(%struct.set_family* %7, i32 %8, i32 %12)
  ret %struct.set_family* %13
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_delcol(%struct.set_family* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.set_family*, align 8
  %12 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %13 = load %struct.set_family*, %struct.set_family** %4, align 8
  %14 = getelementptr inbounds %struct.set_family, %struct.set_family* %13, i32 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.set_family*, %struct.set_family** %4, align 8
  %17 = getelementptr inbounds %struct.set_family, %struct.set_family* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* %6, align 4
  %20 = sub nsw i32 %18, %19
  %21 = call %struct.set_family* @sf_new(i32 %15, i32 %20)
  store %struct.set_family* %21, %struct.set_family** %11, align 8
  %22 = load %struct.set_family*, %struct.set_family** %4, align 8
  %23 = getelementptr inbounds %struct.set_family, %struct.set_family* %22, i32 0, i32 5
  %24 = load i32*, i32** %23, align 8
  store i32* %24, i32** %7, align 8
  %25 = load i32*, i32** %7, align 8
  %26 = load %struct.set_family*, %struct.set_family** %4, align 8
  %27 = getelementptr inbounds %struct.set_family, %struct.set_family* %26, i32 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = load %struct.set_family*, %struct.set_family** %4, align 8
  %30 = getelementptr inbounds %struct.set_family, %struct.set_family* %29, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = mul nsw i32 %28, %31
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i32, i32* %25, i64 %33
  store i32* %34, i32** %8, align 8
  br label %35

35:                                               ; preds = %163, %3
  %36 = load i32*, i32** %7, align 8
  %37 = load i32*, i32** %8, align 8
  %38 = icmp ult i32* %36, %37
  br i1 %38, label %39, label %170

39:                                               ; preds = %35
  %40 = load %struct.set_family*, %struct.set_family** %11, align 8
  %41 = getelementptr inbounds %struct.set_family, %struct.set_family* %40, i32 0, i32 5
  %42 = load i32*, i32** %41, align 8
  %43 = load %struct.set_family*, %struct.set_family** %11, align 8
  %44 = getelementptr inbounds %struct.set_family, %struct.set_family* %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = load %struct.set_family*, %struct.set_family** %11, align 8
  %47 = getelementptr inbounds %struct.set_family, %struct.set_family* %46, i32 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %47, align 4
  %50 = mul nsw i32 %45, %48
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, i32* %42, i64 %51
  store i32* %52, i32** %9, align 8
  %53 = load %struct.set_family*, %struct.set_family** %11, align 8
  %54 = getelementptr inbounds %struct.set_family, %struct.set_family* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = icmp sle i32 %55, 32
  br i1 %56, label %57, label %58

57:                                               ; preds = %39
  br label %65

58:                                               ; preds = %39
  %59 = load %struct.set_family*, %struct.set_family** %11, align 8
  %60 = getelementptr inbounds %struct.set_family, %struct.set_family* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = sub nsw i32 %61, 1
  %63 = ashr i32 %62, 5
  %64 = add nsw i32 %63, 1
  br label %65

65:                                               ; preds = %58, %57
  %66 = phi i32 [ 1, %57 ], [ %64, %58 ]
  store i32 %66, i32* %12, align 4
  %67 = load i32, i32* %12, align 4
  %68 = load i32*, i32** %9, align 8
  store i32 %67, i32* %68, align 4
  br label %69

69:                                               ; preds = %74, %65
  %70 = load i32*, i32** %9, align 8
  %71 = load i32, i32* %12, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %70, i64 %72
  store i32 0, i32* %73, align 4
  br label %74

74:                                               ; preds = %69
  %75 = load i32, i32* %12, align 4
  %76 = add nsw i32 %75, -1
  store i32 %76, i32* %12, align 4
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %69, label %78

78:                                               ; preds = %74
  store i32 0, i32* %10, align 4
  br label %79

79:                                               ; preds = %109, %78
  %80 = load i32, i32* %10, align 4
  %81 = load i32, i32* %5, align 4
  %82 = icmp slt i32 %80, %81
  br i1 %82, label %83, label %112

83:                                               ; preds = %79
  %84 = load i32*, i32** %7, align 8
  %85 = load i32, i32* %10, align 4
  %86 = ashr i32 %85, 5
  %87 = add nsw i32 %86, 1
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i32, i32* %84, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = load i32, i32* %10, align 4
  %92 = and i32 %91, 31
  %93 = shl i32 1, %92
  %94 = and i32 %90, %93
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %96, label %108

96:                                               ; preds = %83
  %97 = load i32, i32* %10, align 4
  %98 = and i32 %97, 31
  %99 = shl i32 1, %98
  %100 = load i32*, i32** %9, align 8
  %101 = load i32, i32* %10, align 4
  %102 = ashr i32 %101, 5
  %103 = add nsw i32 %102, 1
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i32, i32* %100, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = or i32 %106, %99
  store i32 %107, i32* %105, align 4
  br label %108

108:                                              ; preds = %96, %83
  br label %109

109:                                              ; preds = %108
  %110 = load i32, i32* %10, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %10, align 4
  br label %79

112:                                              ; preds = %79
  %113 = load i32, i32* %6, align 4
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %115, label %119

115:                                              ; preds = %112
  %116 = load i32, i32* %5, align 4
  %117 = load i32, i32* %6, align 4
  %118 = add nsw i32 %116, %117
  br label %121

119:                                              ; preds = %112
  %120 = load i32, i32* %5, align 4
  br label %121

121:                                              ; preds = %119, %115
  %122 = phi i32 [ %118, %115 ], [ %120, %119 ]
  store i32 %122, i32* %10, align 4
  br label %123

123:                                              ; preds = %159, %121
  %124 = load i32, i32* %10, align 4
  %125 = load %struct.set_family*, %struct.set_family** %4, align 8
  %126 = getelementptr inbounds %struct.set_family, %struct.set_family* %125, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = icmp slt i32 %124, %127
  br i1 %128, label %129, label %162

129:                                              ; preds = %123
  %130 = load i32*, i32** %7, align 8
  %131 = load i32, i32* %10, align 4
  %132 = ashr i32 %131, 5
  %133 = add nsw i32 %132, 1
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i32, i32* %130, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = load i32, i32* %10, align 4
  %138 = and i32 %137, 31
  %139 = shl i32 1, %138
  %140 = and i32 %136, %139
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %142, label %158

142:                                              ; preds = %129
  %143 = load i32, i32* %10, align 4
  %144 = load i32, i32* %6, align 4
  %145 = sub nsw i32 %143, %144
  %146 = and i32 %145, 31
  %147 = shl i32 1, %146
  %148 = load i32*, i32** %9, align 8
  %149 = load i32, i32* %10, align 4
  %150 = load i32, i32* %6, align 4
  %151 = sub nsw i32 %149, %150
  %152 = ashr i32 %151, 5
  %153 = add nsw i32 %152, 1
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i32, i32* %148, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = or i32 %156, %147
  store i32 %157, i32* %155, align 4
  br label %158

158:                                              ; preds = %142, %129
  br label %159

159:                                              ; preds = %158
  %160 = load i32, i32* %10, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %10, align 4
  br label %123

162:                                              ; preds = %123
  br label %163

163:                                              ; preds = %162
  %164 = load %struct.set_family*, %struct.set_family** %4, align 8
  %165 = getelementptr inbounds %struct.set_family, %struct.set_family* %164, i32 0, i32 0
  %166 = load i32, i32* %165, align 8
  %167 = load i32*, i32** %7, align 8
  %168 = sext i32 %166 to i64
  %169 = getelementptr inbounds i32, i32* %167, i64 %168
  store i32* %169, i32** %7, align 8
  br label %35

170:                                              ; preds = %35
  %171 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void @sf_free(%struct.set_family* %171)
  %172 = load %struct.set_family*, %struct.set_family** %11, align 8
  ret %struct.set_family* %172
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_addcol(%struct.set_family* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %9 = load i32, i32* %6, align 4
  %10 = load %struct.set_family*, %struct.set_family** %5, align 8
  %11 = getelementptr inbounds %struct.set_family, %struct.set_family* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %9, %12
  br i1 %13, label %14, label %45

14:                                               ; preds = %3
  %15 = load %struct.set_family*, %struct.set_family** %5, align 8
  %16 = getelementptr inbounds %struct.set_family, %struct.set_family* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp sle i32 %17, 32
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  br label %27

20:                                               ; preds = %14
  %21 = load %struct.set_family*, %struct.set_family** %5, align 8
  %22 = getelementptr inbounds %struct.set_family, %struct.set_family* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sub nsw i32 %23, 1
  %25 = ashr i32 %24, 5
  %26 = add nsw i32 %25, 1
  br label %27

27:                                               ; preds = %20, %19
  %28 = phi i32 [ 1, %19 ], [ %26, %20 ]
  %29 = mul nsw i32 32, %28
  store i32 %29, i32* %8, align 4
  %30 = load %struct.set_family*, %struct.set_family** %5, align 8
  %31 = getelementptr inbounds %struct.set_family, %struct.set_family* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = load i32, i32* %7, align 4
  %34 = add nsw i32 %32, %33
  %35 = load i32, i32* %8, align 4
  %36 = icmp sle i32 %34, %35
  br i1 %36, label %37, label %44

37:                                               ; preds = %27
  %38 = load i32, i32* %7, align 4
  %39 = load %struct.set_family*, %struct.set_family** %5, align 8
  %40 = getelementptr inbounds %struct.set_family, %struct.set_family* %39, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = add nsw i32 %41, %38
  store i32 %42, i32* %40, align 4
  %43 = load %struct.set_family*, %struct.set_family** %5, align 8
  store %struct.set_family* %43, %struct.set_family** %4, align 8
  br label %51

44:                                               ; preds = %27
  br label %45

45:                                               ; preds = %44, %3
  %46 = load %struct.set_family*, %struct.set_family** %5, align 8
  %47 = load i32, i32* %6, align 4
  %48 = load i32, i32* %7, align 4
  %49 = sub nsw i32 0, %48
  %50 = call %struct.set_family* @sf_delcol(%struct.set_family* %46, i32 %47, i32 %49)
  store %struct.set_family* %50, %struct.set_family** %4, align 8
  br label %51

51:                                               ; preds = %45, %37
  %52 = load %struct.set_family*, %struct.set_family** %4, align 8
  ret %struct.set_family* %52
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_copy_col(%struct.set_family* %0, i32 %1, %struct.set_family* %2, i32 %3) #0 {
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %5, align 8
  store i32 %1, i32* %6, align 4
  store %struct.set_family* %2, %struct.set_family** %7, align 8
  store i32 %3, i32* %8, align 4
  %16 = load i32, i32* %8, align 4
  %17 = ashr i32 %16, 5
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %12, align 4
  %19 = load i32, i32* %8, align 4
  %20 = and i32 %19, 31
  %21 = shl i32 1, %20
  store i32 %21, i32* %15, align 4
  %22 = load i32, i32* %6, align 4
  %23 = ashr i32 %22, 5
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %13, align 4
  %25 = load i32, i32* %6, align 4
  %26 = and i32 %25, 31
  %27 = shl i32 1, %26
  store i32 %27, i32* %14, align 4
  %28 = load %struct.set_family*, %struct.set_family** %5, align 8
  %29 = getelementptr inbounds %struct.set_family, %struct.set_family* %28, i32 0, i32 5
  %30 = load i32*, i32** %29, align 8
  store i32* %30, i32** %11, align 8
  %31 = load %struct.set_family*, %struct.set_family** %7, align 8
  %32 = getelementptr inbounds %struct.set_family, %struct.set_family* %31, i32 0, i32 5
  %33 = load i32*, i32** %32, align 8
  store i32* %33, i32** %10, align 8
  %34 = load i32*, i32** %10, align 8
  %35 = load %struct.set_family*, %struct.set_family** %7, align 8
  %36 = getelementptr inbounds %struct.set_family, %struct.set_family* %35, i32 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = load %struct.set_family*, %struct.set_family** %7, align 8
  %39 = getelementptr inbounds %struct.set_family, %struct.set_family* %38, i32 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = mul nsw i32 %37, %40
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %34, i64 %42
  store i32* %43, i32** %9, align 8
  br label %44

44:                                               ; preds = %72, %4
  %45 = load i32*, i32** %10, align 8
  %46 = load i32*, i32** %9, align 8
  %47 = icmp ult i32* %45, %46
  br i1 %47, label %48, label %79

48:                                               ; preds = %44
  %49 = load i32*, i32** %10, align 8
  %50 = load i32, i32* %12, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, i32* %49, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = load i32, i32* %15, align 4
  %55 = and i32 %53, %54
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %65

57:                                               ; preds = %48
  %58 = load i32, i32* %14, align 4
  %59 = load i32*, i32** %11, align 8
  %60 = load i32, i32* %13, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i32, i32* %59, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = or i32 %63, %58
  store i32 %64, i32* %62, align 4
  br label %65

65:                                               ; preds = %57, %48
  %66 = load %struct.set_family*, %struct.set_family** %5, align 8
  %67 = getelementptr inbounds %struct.set_family, %struct.set_family* %66, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = load i32*, i32** %11, align 8
  %70 = sext i32 %68 to i64
  %71 = getelementptr inbounds i32, i32* %69, i64 %70
  store i32* %71, i32** %11, align 8
  br label %72

72:                                               ; preds = %65
  %73 = load %struct.set_family*, %struct.set_family** %7, align 8
  %74 = getelementptr inbounds %struct.set_family, %struct.set_family* %73, i32 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = load i32*, i32** %10, align 8
  %77 = sext i32 %75 to i64
  %78 = getelementptr inbounds i32, i32* %76, i64 %77
  store i32* %78, i32** %10, align 8
  br label %44

79:                                               ; preds = %44
  %80 = load %struct.set_family*, %struct.set_family** %5, align 8
  ret %struct.set_family* %80
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_compress(%struct.set_family* %0, i32* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32* %1, i32** %4, align 8
  %10 = load %struct.set_family*, %struct.set_family** %3, align 8
  %11 = getelementptr inbounds %struct.set_family, %struct.set_family* %10, i32 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = load i32*, i32** %4, align 8
  %14 = call i32 @set_ord(i32* %13)
  %15 = call %struct.set_family* @sf_new(i32 %12, i32 %14)
  store %struct.set_family* %15, %struct.set_family** %8, align 8
  store i32 0, i32* %6, align 4
  br label %16

16:                                               ; preds = %62, %2
  %17 = load i32, i32* %6, align 4
  %18 = load %struct.set_family*, %struct.set_family** %3, align 8
  %19 = getelementptr inbounds %struct.set_family, %struct.set_family* %18, i32 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %17, %20
  br i1 %21, label %22, label %65

22:                                               ; preds = %16
  %23 = load %struct.set_family*, %struct.set_family** %8, align 8
  %24 = getelementptr inbounds %struct.set_family, %struct.set_family* %23, i32 0, i32 5
  %25 = load i32*, i32** %24, align 8
  %26 = load %struct.set_family*, %struct.set_family** %8, align 8
  %27 = getelementptr inbounds %struct.set_family, %struct.set_family* %26, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = load %struct.set_family*, %struct.set_family** %8, align 8
  %30 = getelementptr inbounds %struct.set_family, %struct.set_family* %29, i32 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %30, align 4
  %33 = mul nsw i32 %28, %31
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %25, i64 %34
  store i32* %35, i32** %5, align 8
  %36 = load %struct.set_family*, %struct.set_family** %8, align 8
  %37 = getelementptr inbounds %struct.set_family, %struct.set_family* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp sle i32 %38, 32
  br i1 %39, label %40, label %41

40:                                               ; preds = %22
  br label %48

41:                                               ; preds = %22
  %42 = load %struct.set_family*, %struct.set_family** %8, align 8
  %43 = getelementptr inbounds %struct.set_family, %struct.set_family* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = sub nsw i32 %44, 1
  %46 = ashr i32 %45, 5
  %47 = add nsw i32 %46, 1
  br label %48

48:                                               ; preds = %41, %40
  %49 = phi i32 [ 1, %40 ], [ %47, %41 ]
  store i32 %49, i32* %9, align 4
  %50 = load i32, i32* %9, align 4
  %51 = load i32*, i32** %5, align 8
  store i32 %50, i32* %51, align 4
  br label %52

52:                                               ; preds = %57, %48
  %53 = load i32*, i32** %5, align 8
  %54 = load i32, i32* %9, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %53, i64 %55
  store i32 0, i32* %56, align 4
  br label %57

57:                                               ; preds = %52
  %58 = load i32, i32* %9, align 4
  %59 = add nsw i32 %58, -1
  store i32 %59, i32* %9, align 4
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %52, label %61

61:                                               ; preds = %57
  br label %62

62:                                               ; preds = %61
  %63 = load i32, i32* %6, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %6, align 4
  br label %16

65:                                               ; preds = %16
  store i32 0, i32* %7, align 4
  store i32 0, i32* %6, align 4
  br label %66

66:                                               ; preds = %93, %65
  %67 = load i32, i32* %6, align 4
  %68 = load %struct.set_family*, %struct.set_family** %3, align 8
  %69 = getelementptr inbounds %struct.set_family, %struct.set_family* %68, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %67, %70
  br i1 %71, label %72, label %96

72:                                               ; preds = %66
  %73 = load i32*, i32** %4, align 8
  %74 = load i32, i32* %6, align 4
  %75 = ashr i32 %74, 5
  %76 = add nsw i32 %75, 1
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i32, i32* %73, i64 %77
  %79 = load i32, i32* %78, align 4
  %80 = load i32, i32* %6, align 4
  %81 = and i32 %80, 31
  %82 = shl i32 1, %81
  %83 = and i32 %79, %82
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %92

85:                                               ; preds = %72
  %86 = load %struct.set_family*, %struct.set_family** %8, align 8
  %87 = load i32, i32* %7, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %7, align 4
  %89 = load %struct.set_family*, %struct.set_family** %3, align 8
  %90 = load i32, i32* %6, align 4
  %91 = call %struct.set_family* @sf_copy_col(%struct.set_family* %86, i32 %87, %struct.set_family* %89, i32 %90)
  br label %92

92:                                               ; preds = %85, %72
  br label %93

93:                                               ; preds = %92
  %94 = load i32, i32* %6, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %6, align 4
  br label %66

96:                                               ; preds = %66
  %97 = load %struct.set_family*, %struct.set_family** %3, align 8
  call void @sf_free(%struct.set_family* %97)
  %98 = load %struct.set_family*, %struct.set_family** %8, align 8
  ret %struct.set_family* %98
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_transpose(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %8 = load %struct.set_family*, %struct.set_family** %2, align 8
  %9 = getelementptr inbounds %struct.set_family, %struct.set_family* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = load %struct.set_family*, %struct.set_family** %2, align 8
  %12 = getelementptr inbounds %struct.set_family, %struct.set_family* %11, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = call %struct.set_family* @sf_new(i32 %10, i32 %13)
  store %struct.set_family* %14, %struct.set_family** %3, align 8
  %15 = load %struct.set_family*, %struct.set_family** %2, align 8
  %16 = getelementptr inbounds %struct.set_family, %struct.set_family* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = load %struct.set_family*, %struct.set_family** %3, align 8
  %19 = getelementptr inbounds %struct.set_family, %struct.set_family* %18, i32 0, i32 3
  store i32 %17, i32* %19, align 4
  %20 = load %struct.set_family*, %struct.set_family** %3, align 8
  %21 = getelementptr inbounds %struct.set_family, %struct.set_family* %20, i32 0, i32 5
  %22 = load i32*, i32** %21, align 8
  store i32* %22, i32** %4, align 8
  store i32 0, i32* %5, align 4
  br label %23

23:                                               ; preds = %56, %1
  %24 = load i32, i32* %5, align 4
  %25 = load %struct.set_family*, %struct.set_family** %3, align 8
  %26 = getelementptr inbounds %struct.set_family, %struct.set_family* %25, i32 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %24, %27
  br i1 %28, label %29, label %65

29:                                               ; preds = %23
  %30 = load %struct.set_family*, %struct.set_family** %3, align 8
  %31 = getelementptr inbounds %struct.set_family, %struct.set_family* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp sle i32 %32, 32
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  br label %42

35:                                               ; preds = %29
  %36 = load %struct.set_family*, %struct.set_family** %3, align 8
  %37 = getelementptr inbounds %struct.set_family, %struct.set_family* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = sub nsw i32 %38, 1
  %40 = ashr i32 %39, 5
  %41 = add nsw i32 %40, 1
  br label %42

42:                                               ; preds = %35, %34
  %43 = phi i32 [ 1, %34 ], [ %41, %35 ]
  store i32 %43, i32* %7, align 4
  %44 = load i32, i32* %7, align 4
  %45 = load i32*, i32** %4, align 8
  store i32 %44, i32* %45, align 4
  br label %46

46:                                               ; preds = %51, %42
  %47 = load i32*, i32** %4, align 8
  %48 = load i32, i32* %7, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, i32* %47, i64 %49
  store i32 0, i32* %50, align 4
  br label %51

51:                                               ; preds = %46
  %52 = load i32, i32* %7, align 4
  %53 = add nsw i32 %52, -1
  store i32 %53, i32* %7, align 4
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %46, label %55

55:                                               ; preds = %51
  br label %56

56:                                               ; preds = %55
  %57 = load %struct.set_family*, %struct.set_family** %3, align 8
  %58 = getelementptr inbounds %struct.set_family, %struct.set_family* %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = load i32*, i32** %4, align 8
  %61 = sext i32 %59 to i64
  %62 = getelementptr inbounds i32, i32* %60, i64 %61
  store i32* %62, i32** %4, align 8
  %63 = load i32, i32* %5, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %5, align 4
  br label %23

65:                                               ; preds = %23
  %66 = load %struct.set_family*, %struct.set_family** %2, align 8
  %67 = getelementptr inbounds %struct.set_family, %struct.set_family* %66, i32 0, i32 5
  %68 = load i32*, i32** %67, align 8
  store i32* %68, i32** %4, align 8
  store i32 0, i32* %5, align 4
  br label %69

69:                                               ; preds = %121, %65
  %70 = load i32, i32* %5, align 4
  %71 = load %struct.set_family*, %struct.set_family** %2, align 8
  %72 = getelementptr inbounds %struct.set_family, %struct.set_family* %71, i32 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = icmp slt i32 %70, %73
  br i1 %74, label %75, label %130

75:                                               ; preds = %69
  store i32 0, i32* %6, align 4
  br label %76

76:                                               ; preds = %117, %75
  %77 = load i32, i32* %6, align 4
  %78 = load %struct.set_family*, %struct.set_family** %2, align 8
  %79 = getelementptr inbounds %struct.set_family, %struct.set_family* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp slt i32 %77, %80
  br i1 %81, label %82, label %120

82:                                               ; preds = %76
  %83 = load i32*, i32** %4, align 8
  %84 = load i32, i32* %6, align 4
  %85 = ashr i32 %84, 5
  %86 = add nsw i32 %85, 1
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i32, i32* %83, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = load i32, i32* %6, align 4
  %91 = and i32 %90, 31
  %92 = shl i32 1, %91
  %93 = and i32 %89, %92
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %95, label %116

95:                                               ; preds = %82
  %96 = load i32, i32* %5, align 4
  %97 = and i32 %96, 31
  %98 = shl i32 1, %97
  %99 = load %struct.set_family*, %struct.set_family** %3, align 8
  %100 = getelementptr inbounds %struct.set_family, %struct.set_family* %99, i32 0, i32 5
  %101 = load i32*, i32** %100, align 8
  %102 = load %struct.set_family*, %struct.set_family** %3, align 8
  %103 = getelementptr inbounds %struct.set_family, %struct.set_family* %102, i32 0, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = load i32, i32* %6, align 4
  %106 = mul nsw i32 %104, %105
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i32, i32* %101, i64 %107
  %109 = load i32, i32* %5, align 4
  %110 = ashr i32 %109, 5
  %111 = add nsw i32 %110, 1
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i32, i32* %108, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = or i32 %114, %98
  store i32 %115, i32* %113, align 4
  br label %116

116:                                              ; preds = %95, %82
  br label %117

117:                                              ; preds = %116
  %118 = load i32, i32* %6, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %6, align 4
  br label %76

120:                                              ; preds = %76
  br label %121

121:                                              ; preds = %120
  %122 = load %struct.set_family*, %struct.set_family** %2, align 8
  %123 = getelementptr inbounds %struct.set_family, %struct.set_family* %122, i32 0, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = load i32*, i32** %4, align 8
  %126 = sext i32 %124 to i64
  %127 = getelementptr inbounds i32, i32* %125, i64 %126
  store i32* %127, i32** %4, align 8
  %128 = load i32, i32* %5, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %5, align 4
  br label %69

130:                                              ; preds = %69
  %131 = load %struct.set_family*, %struct.set_family** %2, align 8
  call void @sf_free(%struct.set_family* %131)
  %132 = load %struct.set_family*, %struct.set_family** %3, align 8
  ret %struct.set_family* %132
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sf_permute(%struct.set_family* %0, i32* %1, i32 %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32 %2, i32* %6, align 4
  %13 = load %struct.set_family*, %struct.set_family** %4, align 8
  %14 = getelementptr inbounds %struct.set_family, %struct.set_family* %13, i32 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %6, align 4
  %17 = call %struct.set_family* @sf_new(i32 %15, i32 %16)
  store %struct.set_family* %17, %struct.set_family** %7, align 8
  %18 = load %struct.set_family*, %struct.set_family** %4, align 8
  %19 = getelementptr inbounds %struct.set_family, %struct.set_family* %18, i32 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = load %struct.set_family*, %struct.set_family** %7, align 8
  %22 = getelementptr inbounds %struct.set_family, %struct.set_family* %21, i32 0, i32 3
  store i32 %20, i32* %22, align 4
  %23 = load %struct.set_family*, %struct.set_family** %7, align 8
  %24 = getelementptr inbounds %struct.set_family, %struct.set_family* %23, i32 0, i32 5
  %25 = load i32*, i32** %24, align 8
  store i32* %25, i32** %8, align 8
  %26 = load i32*, i32** %8, align 8
  %27 = load %struct.set_family*, %struct.set_family** %7, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = load %struct.set_family*, %struct.set_family** %7, align 8
  %31 = getelementptr inbounds %struct.set_family, %struct.set_family* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = mul nsw i32 %29, %32
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %26, i64 %34
  store i32* %35, i32** %9, align 8
  br label %36

36:                                               ; preds = %63, %3
  %37 = load i32*, i32** %8, align 8
  %38 = load i32*, i32** %9, align 8
  %39 = icmp ult i32* %37, %38
  br i1 %39, label %40, label %70

40:                                               ; preds = %36
  %41 = load i32, i32* %6, align 4
  %42 = icmp sle i32 %41, 32
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  br label %49

44:                                               ; preds = %40
  %45 = load i32, i32* %6, align 4
  %46 = sub nsw i32 %45, 1
  %47 = ashr i32 %46, 5
  %48 = add nsw i32 %47, 1
  br label %49

49:                                               ; preds = %44, %43
  %50 = phi i32 [ 1, %43 ], [ %48, %44 ]
  store i32 %50, i32* %12, align 4
  %51 = load i32, i32* %12, align 4
  %52 = load i32*, i32** %8, align 8
  store i32 %51, i32* %52, align 4
  br label %53

53:                                               ; preds = %58, %49
  %54 = load i32*, i32** %8, align 8
  %55 = load i32, i32* %12, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i32, i32* %54, i64 %56
  store i32 0, i32* %57, align 4
  br label %58

58:                                               ; preds = %53
  %59 = load i32, i32* %12, align 4
  %60 = add nsw i32 %59, -1
  store i32 %60, i32* %12, align 4
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %53, label %62

62:                                               ; preds = %58
  br label %63

63:                                               ; preds = %62
  %64 = load %struct.set_family*, %struct.set_family** %7, align 8
  %65 = getelementptr inbounds %struct.set_family, %struct.set_family* %64, i32 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = load i32*, i32** %8, align 8
  %68 = sext i32 %66 to i64
  %69 = getelementptr inbounds i32, i32* %67, i64 %68
  store i32* %69, i32** %8, align 8
  br label %36

70:                                               ; preds = %36
  %71 = load %struct.set_family*, %struct.set_family** %7, align 8
  %72 = getelementptr inbounds %struct.set_family, %struct.set_family* %71, i32 0, i32 5
  %73 = load i32*, i32** %72, align 8
  store i32* %73, i32** %10, align 8
  %74 = load %struct.set_family*, %struct.set_family** %4, align 8
  %75 = getelementptr inbounds %struct.set_family, %struct.set_family* %74, i32 0, i32 5
  %76 = load i32*, i32** %75, align 8
  store i32* %76, i32** %8, align 8
  %77 = load i32*, i32** %8, align 8
  %78 = load %struct.set_family*, %struct.set_family** %4, align 8
  %79 = getelementptr inbounds %struct.set_family, %struct.set_family* %78, i32 0, i32 3
  %80 = load i32, i32* %79, align 4
  %81 = load %struct.set_family*, %struct.set_family** %4, align 8
  %82 = getelementptr inbounds %struct.set_family, %struct.set_family* %81, i32 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = mul nsw i32 %80, %83
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i32, i32* %77, i64 %85
  store i32* %86, i32** %9, align 8
  br label %87

87:                                               ; preds = %140, %70
  %88 = load i32*, i32** %8, align 8
  %89 = load i32*, i32** %9, align 8
  %90 = icmp ult i32* %88, %89
  br i1 %90, label %91, label %147

91:                                               ; preds = %87
  store i32 0, i32* %11, align 4
  br label %92

92:                                               ; preds = %130, %91
  %93 = load i32, i32* %11, align 4
  %94 = load i32, i32* %6, align 4
  %95 = icmp slt i32 %93, %94
  br i1 %95, label %96, label %133

96:                                               ; preds = %92
  %97 = load i32*, i32** %8, align 8
  %98 = load i32*, i32** %5, align 8
  %99 = load i32, i32* %11, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i32, i32* %98, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = ashr i32 %102, 5
  %104 = add nsw i32 %103, 1
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i32, i32* %97, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = load i32*, i32** %5, align 8
  %109 = load i32, i32* %11, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i32, i32* %108, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = and i32 %112, 31
  %114 = shl i32 1, %113
  %115 = and i32 %107, %114
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %129

117:                                              ; preds = %96
  %118 = load i32, i32* %11, align 4
  %119 = and i32 %118, 31
  %120 = shl i32 1, %119
  %121 = load i32*, i32** %10, align 8
  %122 = load i32, i32* %11, align 4
  %123 = ashr i32 %122, 5
  %124 = add nsw i32 %123, 1
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i32, i32* %121, i64 %125
  %127 = load i32, i32* %126, align 4
  %128 = or i32 %127, %120
  store i32 %128, i32* %126, align 4
  br label %129

129:                                              ; preds = %117, %96
  br label %130

130:                                              ; preds = %129
  %131 = load i32, i32* %11, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %11, align 4
  br label %92

133:                                              ; preds = %92
  %134 = load %struct.set_family*, %struct.set_family** %7, align 8
  %135 = getelementptr inbounds %struct.set_family, %struct.set_family* %134, i32 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = load i32*, i32** %10, align 8
  %138 = sext i32 %136 to i64
  %139 = getelementptr inbounds i32, i32* %137, i64 %138
  store i32* %139, i32** %10, align 8
  br label %140

140:                                              ; preds = %133
  %141 = load %struct.set_family*, %struct.set_family** %4, align 8
  %142 = getelementptr inbounds %struct.set_family, %struct.set_family* %141, i32 0, i32 0
  %143 = load i32, i32* %142, align 8
  %144 = load i32*, i32** %8, align 8
  %145 = sext i32 %143 to i64
  %146 = getelementptr inbounds i32, i32* %144, i64 %145
  store i32* %146, i32** %8, align 8
  br label %87

147:                                              ; preds = %87
  %148 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void @sf_free(%struct.set_family* %148)
  %149 = load %struct.set_family*, %struct.set_family** %7, align 8
  ret %struct.set_family* %149
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @cv_sharp(%struct.set_family* %0, %struct.set_family* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  %8 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %9 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 0, i32 %8)
  store %struct.set_family* %9, %struct.set_family** %7, align 8
  %10 = load %struct.set_family*, %struct.set_family** %3, align 8
  %11 = getelementptr inbounds %struct.set_family, %struct.set_family* %10, i32 0, i32 5
  %12 = load i32*, i32** %11, align 8
  store i32* %12, i32** %6, align 8
  %13 = load i32*, i32** %6, align 8
  %14 = load %struct.set_family*, %struct.set_family** %3, align 8
  %15 = getelementptr inbounds %struct.set_family, %struct.set_family* %14, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = load %struct.set_family*, %struct.set_family** %3, align 8
  %18 = getelementptr inbounds %struct.set_family, %struct.set_family* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = mul nsw i32 %16, %19
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %13, i64 %21
  store i32* %22, i32** %5, align 8
  br label %23

23:                                               ; preds = %33, %2
  %24 = load i32*, i32** %6, align 8
  %25 = load i32*, i32** %5, align 8
  %26 = icmp ult i32* %24, %25
  br i1 %26, label %27, label %40

27:                                               ; preds = %23
  %28 = load %struct.set_family*, %struct.set_family** %7, align 8
  %29 = load i32*, i32** %6, align 8
  %30 = load %struct.set_family*, %struct.set_family** %4, align 8
  %31 = call %struct.set_family* @cb_sharp(i32* %29, %struct.set_family* %30)
  %32 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_union to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %28, %struct.set_family* %31)
  store %struct.set_family* %32, %struct.set_family** %7, align 8
  br label %33

33:                                               ; preds = %27
  %34 = load %struct.set_family*, %struct.set_family** %3, align 8
  %35 = getelementptr inbounds %struct.set_family, %struct.set_family* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = load i32*, i32** %6, align 8
  %38 = sext i32 %36 to i64
  %39 = getelementptr inbounds i32, i32* %37, i64 %38
  store i32* %39, i32** %6, align 8
  br label %23

40:                                               ; preds = %23
  %41 = load %struct.set_family*, %struct.set_family** %7, align 8
  ret %struct.set_family* %41
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @cb_sharp(i32* %0, %struct.set_family* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca %struct.set_family*, align 8
  store i32* %0, i32** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  %5 = load %struct.set_family*, %struct.set_family** %4, align 8
  %6 = getelementptr inbounds %struct.set_family, %struct.set_family* %5, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %11 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %10)
  %12 = load i32*, i32** %3, align 8
  %13 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %11, i32* %12)
  store %struct.set_family* %13, %struct.set_family** %4, align 8
  br label %23

14:                                               ; preds = %2
  %15 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %15, i64* @start_time, align 8
  %16 = load i32*, i32** %3, align 8
  %17 = load %struct.set_family*, %struct.set_family** %4, align 8
  %18 = load %struct.set_family*, %struct.set_family** %4, align 8
  %19 = getelementptr inbounds %struct.set_family, %struct.set_family* %18, i32 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %20, 1
  %22 = call %struct.set_family* @cb_recur_sharp(i32* %16, %struct.set_family* %17, i32 0, i32 %21, i32 0)
  store %struct.set_family* %22, %struct.set_family** %4, align 8
  br label %23

23:                                               ; preds = %14, %9
  %24 = load %struct.set_family*, %struct.set_family** %4, align 8
  ret %struct.set_family* %24
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @cb_recur_sharp(i32* %0, %struct.set_family* %1, i32 %2, i32 %3, i32 %4) #0 {
  %6 = alloca i32*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.set_family*, align 8
  %12 = alloca %struct.set_family*, align 8
  %13 = alloca %struct.set_family*, align 8
  %14 = alloca i32, align 4
  store i32* %0, i32** %6, align 8
  store %struct.set_family* %1, %struct.set_family** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %15 = load i32, i32* %8, align 4
  %16 = load i32, i32* %9, align 4
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %18, label %31

18:                                               ; preds = %5
  %19 = load i32*, i32** %6, align 8
  %20 = load %struct.set_family*, %struct.set_family** %7, align 8
  %21 = getelementptr inbounds %struct.set_family, %struct.set_family* %20, i32 0, i32 5
  %22 = load i32*, i32** %21, align 8
  %23 = load %struct.set_family*, %struct.set_family** %7, align 8
  %24 = getelementptr inbounds %struct.set_family, %struct.set_family* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = load i32, i32* %8, align 4
  %27 = mul nsw i32 %25, %26
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, i32* %22, i64 %28
  %30 = call %struct.set_family* @sharp(i32* %19, i32* %29)
  store %struct.set_family* %30, %struct.set_family** %11, align 8
  br label %81

31:                                               ; preds = %5
  %32 = load i32, i32* %8, align 4
  %33 = load i32, i32* %9, align 4
  %34 = add nsw i32 %32, %33
  %35 = sdiv i32 %34, 2
  store i32 %35, i32* %14, align 4
  %36 = load i32*, i32** %6, align 8
  %37 = load %struct.set_family*, %struct.set_family** %7, align 8
  %38 = load i32, i32* %8, align 4
  %39 = load i32, i32* %14, align 4
  %40 = load i32, i32* %10, align 4
  %41 = add nsw i32 %40, 1
  %42 = call %struct.set_family* @cb_recur_sharp(i32* %36, %struct.set_family* %37, i32 %38, i32 %39, i32 %41)
  store %struct.set_family* %42, %struct.set_family** %12, align 8
  %43 = load i32*, i32** %6, align 8
  %44 = load %struct.set_family*, %struct.set_family** %7, align 8
  %45 = load i32, i32* %14, align 4
  %46 = add nsw i32 %45, 1
  %47 = load i32, i32* %9, align 4
  %48 = load i32, i32* %10, align 4
  %49 = add nsw i32 %48, 1
  %50 = call %struct.set_family* @cb_recur_sharp(i32* %43, %struct.set_family* %44, i32 %46, i32 %47, i32 %49)
  store %struct.set_family* %50, %struct.set_family** %13, align 8
  %51 = load %struct.set_family*, %struct.set_family** %12, align 8
  %52 = load %struct.set_family*, %struct.set_family** %13, align 8
  %53 = call %struct.set_family* @cv_intersect(%struct.set_family* %51, %struct.set_family* %52)
  store %struct.set_family* %53, %struct.set_family** %11, align 8
  %54 = load i32, i32* @debug, align 4
  %55 = and i32 %54, 8192
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %78

57:                                               ; preds = %31
  %58 = load i32, i32* %10, align 4
  %59 = icmp slt i32 %58, 4
  br i1 %59, label %60, label %78

60:                                               ; preds = %57
  %61 = load i32, i32* %10, align 4
  %62 = load %struct.set_family*, %struct.set_family** %11, align 8
  %63 = getelementptr inbounds %struct.set_family, %struct.set_family* %62, i32 0, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = load %struct.set_family*, %struct.set_family** %12, align 8
  %66 = getelementptr inbounds %struct.set_family, %struct.set_family* %65, i32 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = load %struct.set_family*, %struct.set_family** %13, align 8
  %69 = getelementptr inbounds %struct.set_family, %struct.set_family* %68, i32 0, i32 3
  %70 = load i32, i32* %69, align 4
  %71 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %72 = load i64, i64* @start_time, align 8
  %73 = sub nsw i64 %71, %72
  %74 = call i8* @util_print_time(i64 %73)
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.612, i64 0, i64 0), i32 %61, i32 %64, i32 %67, i32 %70, i8* %74)
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %77 = call i32 @fflush(%struct._IO_FILE* %76)
  br label %78

78:                                               ; preds = %60, %57, %31
  %79 = load %struct.set_family*, %struct.set_family** %12, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %79)
  %80 = load %struct.set_family*, %struct.set_family** %13, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %80)
  br label %81

81:                                               ; preds = %78, %18
  %82 = load %struct.set_family*, %struct.set_family** %11, align 8
  ret %struct.set_family* %82
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @sharp(i32* %0, i32* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca %struct.set_family*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %10 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %11 = getelementptr inbounds i32*, i32** %10, i64 0
  %12 = load i32*, i32** %11, align 8
  store i32* %12, i32** %6, align 8
  %13 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %14 = getelementptr inbounds i32*, i32** %13, i64 1
  %15 = load i32*, i32** %14, align 8
  store i32* %15, i32** %7, align 8
  %16 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %17 = getelementptr inbounds i32*, i32** %16, i64 2
  %18 = load i32*, i32** %17, align 8
  store i32* %18, i32** %8, align 8
  %19 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %20 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %21 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %19, i32 %20)
  store %struct.set_family* %21, %struct.set_family** %9, align 8
  %22 = load i32*, i32** %3, align 8
  %23 = load i32*, i32** %4, align 8
  %24 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @cdist0 to i32 (i32*, i32*, ...)*)(i32* %22, i32* %23)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %76

26:                                               ; preds = %2
  %27 = load i32*, i32** %6, align 8
  %28 = load i32*, i32** %3, align 8
  %29 = load i32*, i32** %4, align 8
  %30 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %27, i32* %28, i32* %29)
  store i32 0, i32* %5, align 4
  br label %31

31:                                               ; preds = %72, %26
  %32 = load i32, i32* %5, align 4
  %33 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %34 = icmp slt i32 %32, %33
  br i1 %34, label %35, label %75

35:                                               ; preds = %31
  %36 = load i32*, i32** %7, align 8
  %37 = load i32*, i32** %6, align 8
  %38 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %39 = load i32, i32* %5, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32*, i32** %38, i64 %40
  %42 = load i32*, i32** %41, align 8
  %43 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_and to i32* (i32*, i32*, i32*, ...)*)(i32* %36, i32* %37, i32* %42)
  %44 = call i32 (i32*, ...) bitcast (i32 (i32*)* @setp_empty to i32 (i32*, ...)*)(i32* %43)
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %71, label %46

46:                                               ; preds = %35
  %47 = load i32*, i32** %8, align 8
  %48 = load i32*, i32** %3, align 8
  %49 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %50 = load i32, i32* %5, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32*, i32** %49, i64 %51
  %53 = load i32*, i32** %52, align 8
  %54 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %47, i32* %48, i32* %53)
  %55 = load %struct.set_family*, %struct.set_family** %9, align 8
  %56 = getelementptr inbounds %struct.set_family, %struct.set_family* %55, i32 0, i32 5
  %57 = load i32*, i32** %56, align 8
  %58 = load %struct.set_family*, %struct.set_family** %9, align 8
  %59 = getelementptr inbounds %struct.set_family, %struct.set_family* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = load %struct.set_family*, %struct.set_family** %9, align 8
  %62 = getelementptr inbounds %struct.set_family, %struct.set_family* %61, i32 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %62, align 4
  %65 = mul nsw i32 %60, %63
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i32, i32* %57, i64 %66
  %68 = load i32*, i32** %7, align 8
  %69 = load i32*, i32** %8, align 8
  %70 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %67, i32* %68, i32* %69)
  br label %71

71:                                               ; preds = %46, %35
  br label %72

72:                                               ; preds = %71
  %73 = load i32, i32* %5, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %5, align 4
  br label %31

75:                                               ; preds = %31
  br label %80

76:                                               ; preds = %2
  %77 = load %struct.set_family*, %struct.set_family** %9, align 8
  %78 = load i32*, i32** %3, align 8
  %79 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %77, i32* %78)
  store %struct.set_family* %79, %struct.set_family** %9, align 8
  br label %80

80:                                               ; preds = %76, %75
  %81 = load %struct.set_family*, %struct.set_family** %9, align 8
  ret %struct.set_family* %81
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @cv_intersect(%struct.set_family* %0, %struct.set_family* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %struct.set_family*, align 8
  %11 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  store %struct.set_family* null, %struct.set_family** %11, align 8
  %12 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %13 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 500, i32 %12)
  store %struct.set_family* %13, %struct.set_family** %10, align 8
  %14 = load %struct.set_family*, %struct.set_family** %10, align 8
  %15 = getelementptr inbounds %struct.set_family, %struct.set_family* %14, i32 0, i32 5
  %16 = load i32*, i32** %15, align 8
  store i32* %16, i32** %9, align 8
  %17 = load %struct.set_family*, %struct.set_family** %3, align 8
  %18 = getelementptr inbounds %struct.set_family, %struct.set_family* %17, i32 0, i32 5
  %19 = load i32*, i32** %18, align 8
  store i32* %19, i32** %5, align 8
  %20 = load i32*, i32** %5, align 8
  %21 = load %struct.set_family*, %struct.set_family** %3, align 8
  %22 = getelementptr inbounds %struct.set_family, %struct.set_family* %21, i32 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = load %struct.set_family*, %struct.set_family** %3, align 8
  %25 = getelementptr inbounds %struct.set_family, %struct.set_family* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = mul nsw i32 %23, %26
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, i32* %20, i64 %28
  store i32* %29, i32** %7, align 8
  br label %30

30:                                               ; preds = %104, %2
  %31 = load i32*, i32** %5, align 8
  %32 = load i32*, i32** %7, align 8
  %33 = icmp ult i32* %31, %32
  br i1 %33, label %34, label %111

34:                                               ; preds = %30
  %35 = load %struct.set_family*, %struct.set_family** %4, align 8
  %36 = getelementptr inbounds %struct.set_family, %struct.set_family* %35, i32 0, i32 5
  %37 = load i32*, i32** %36, align 8
  store i32* %37, i32** %6, align 8
  %38 = load i32*, i32** %6, align 8
  %39 = load %struct.set_family*, %struct.set_family** %4, align 8
  %40 = getelementptr inbounds %struct.set_family, %struct.set_family* %39, i32 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = load %struct.set_family*, %struct.set_family** %4, align 8
  %43 = getelementptr inbounds %struct.set_family, %struct.set_family* %42, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = mul nsw i32 %41, %44
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i32, i32* %38, i64 %46
  store i32* %47, i32** %8, align 8
  br label %48

48:                                               ; preds = %96, %34
  %49 = load i32*, i32** %6, align 8
  %50 = load i32*, i32** %8, align 8
  %51 = icmp ult i32* %49, %50
  br i1 %51, label %52, label %103

52:                                               ; preds = %48
  %53 = load i32*, i32** %5, align 8
  %54 = load i32*, i32** %6, align 8
  %55 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @cdist0 to i32 (i32*, i32*, ...)*)(i32* %53, i32* %54)
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %95

57:                                               ; preds = %52
  %58 = load i32*, i32** %9, align 8
  %59 = load i32*, i32** %5, align 8
  %60 = load i32*, i32** %6, align 8
  %61 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_and to i32* (i32*, i32*, i32*, ...)*)(i32* %58, i32* %59, i32* %60)
  %62 = load %struct.set_family*, %struct.set_family** %10, align 8
  %63 = getelementptr inbounds %struct.set_family, %struct.set_family* %62, i32 0, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %63, align 4
  %66 = load %struct.set_family*, %struct.set_family** %10, align 8
  %67 = getelementptr inbounds %struct.set_family, %struct.set_family* %66, i32 0, i32 2
  %68 = load i32, i32* %67, align 8
  %69 = icmp sge i32 %65, %68
  br i1 %69, label %70, label %87

70:                                               ; preds = %57
  %71 = load %struct.set_family*, %struct.set_family** %11, align 8
  %72 = icmp eq %struct.set_family* %71, null
  br i1 %72, label %73, label %76

73:                                               ; preds = %70
  %74 = load %struct.set_family*, %struct.set_family** %10, align 8
  %75 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %74)
  store %struct.set_family* %75, %struct.set_family** %11, align 8
  br label %81

76:                                               ; preds = %70
  %77 = load %struct.set_family*, %struct.set_family** %11, align 8
  %78 = load %struct.set_family*, %struct.set_family** %10, align 8
  %79 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %78)
  %80 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_union to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %77, %struct.set_family* %79)
  store %struct.set_family* %80, %struct.set_family** %11, align 8
  br label %81

81:                                               ; preds = %76, %73
  %82 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %83 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 500, i32 %82)
  store %struct.set_family* %83, %struct.set_family** %10, align 8
  %84 = load %struct.set_family*, %struct.set_family** %10, align 8
  %85 = getelementptr inbounds %struct.set_family, %struct.set_family* %84, i32 0, i32 5
  %86 = load i32*, i32** %85, align 8
  store i32* %86, i32** %9, align 8
  br label %94

87:                                               ; preds = %57
  %88 = load %struct.set_family*, %struct.set_family** %10, align 8
  %89 = getelementptr inbounds %struct.set_family, %struct.set_family* %88, i32 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = load i32*, i32** %9, align 8
  %92 = sext i32 %90 to i64
  %93 = getelementptr inbounds i32, i32* %91, i64 %92
  store i32* %93, i32** %9, align 8
  br label %94

94:                                               ; preds = %87, %81
  br label %95

95:                                               ; preds = %94, %52
  br label %96

96:                                               ; preds = %95
  %97 = load %struct.set_family*, %struct.set_family** %4, align 8
  %98 = getelementptr inbounds %struct.set_family, %struct.set_family* %97, i32 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = load i32*, i32** %6, align 8
  %101 = sext i32 %99 to i64
  %102 = getelementptr inbounds i32, i32* %100, i64 %101
  store i32* %102, i32** %6, align 8
  br label %48

103:                                              ; preds = %48
  br label %104

104:                                              ; preds = %103
  %105 = load %struct.set_family*, %struct.set_family** %3, align 8
  %106 = getelementptr inbounds %struct.set_family, %struct.set_family* %105, i32 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = load i32*, i32** %5, align 8
  %109 = sext i32 %107 to i64
  %110 = getelementptr inbounds i32, i32* %108, i64 %109
  store i32* %110, i32** %5, align 8
  br label %30

111:                                              ; preds = %30
  %112 = load %struct.set_family*, %struct.set_family** %11, align 8
  %113 = icmp eq %struct.set_family* %112, null
  br i1 %113, label %114, label %117

114:                                              ; preds = %111
  %115 = load %struct.set_family*, %struct.set_family** %10, align 8
  %116 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %115)
  store %struct.set_family* %116, %struct.set_family** %11, align 8
  br label %122

117:                                              ; preds = %111
  %118 = load %struct.set_family*, %struct.set_family** %11, align 8
  %119 = load %struct.set_family*, %struct.set_family** %10, align 8
  %120 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %119)
  %121 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_union to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %118, %struct.set_family* %120)
  store %struct.set_family* %121, %struct.set_family** %11, align 8
  br label %122

122:                                              ; preds = %117, %114
  %123 = load %struct.set_family*, %struct.set_family** %11, align 8
  ret %struct.set_family* %123
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @make_disjoint(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %7 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %8 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 0, i32 %7)
  store %struct.set_family* %8, %struct.set_family** %3, align 8
  %9 = load %struct.set_family*, %struct.set_family** %2, align 8
  %10 = getelementptr inbounds %struct.set_family, %struct.set_family* %9, i32 0, i32 5
  %11 = load i32*, i32** %10, align 8
  store i32* %11, i32** %6, align 8
  %12 = load i32*, i32** %6, align 8
  %13 = load %struct.set_family*, %struct.set_family** %2, align 8
  %14 = getelementptr inbounds %struct.set_family, %struct.set_family* %13, i32 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.set_family*, %struct.set_family** %2, align 8
  %17 = getelementptr inbounds %struct.set_family, %struct.set_family* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = mul nsw i32 %15, %18
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, i32* %12, i64 %20
  store i32* %21, i32** %5, align 8
  br label %22

22:                                               ; preds = %33, %1
  %23 = load i32*, i32** %6, align 8
  %24 = load i32*, i32** %5, align 8
  %25 = icmp ult i32* %23, %24
  br i1 %25, label %26, label %40

26:                                               ; preds = %22
  %27 = load i32*, i32** %6, align 8
  %28 = load %struct.set_family*, %struct.set_family** %3, align 8
  %29 = call %struct.set_family* @cb_dsharp(i32* %27, %struct.set_family* %28)
  store %struct.set_family* %29, %struct.set_family** %4, align 8
  %30 = load %struct.set_family*, %struct.set_family** %3, align 8
  %31 = load %struct.set_family*, %struct.set_family** %4, align 8
  %32 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_append to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %30, %struct.set_family* %31)
  store %struct.set_family* %32, %struct.set_family** %3, align 8
  br label %33

33:                                               ; preds = %26
  %34 = load %struct.set_family*, %struct.set_family** %2, align 8
  %35 = getelementptr inbounds %struct.set_family, %struct.set_family* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = load i32*, i32** %6, align 8
  %38 = sext i32 %36 to i64
  %39 = getelementptr inbounds i32, i32* %37, i64 %38
  store i32* %39, i32** %6, align 8
  br label %22

40:                                               ; preds = %22
  %41 = load %struct.set_family*, %struct.set_family** %3, align 8
  ret %struct.set_family* %41
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @cb_dsharp(i32* %0, %struct.set_family* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.set_family*, align 8
  %8 = alloca %struct.set_family*, align 8
  store i32* %0, i32** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  %9 = load %struct.set_family*, %struct.set_family** %4, align 8
  %10 = getelementptr inbounds %struct.set_family, %struct.set_family* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %15 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %14)
  %16 = load i32*, i32** %3, align 8
  %17 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %15, i32* %16)
  store %struct.set_family* %17, %struct.set_family** %7, align 8
  br label %70

18:                                               ; preds = %2
  %19 = load %struct.set_family*, %struct.set_family** %4, align 8
  %20 = getelementptr inbounds %struct.set_family, %struct.set_family* %19, i32 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %23 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %21, i32 %22)
  store %struct.set_family* %23, %struct.set_family** %7, align 8
  %24 = load %struct.set_family*, %struct.set_family** %7, align 8
  %25 = getelementptr inbounds %struct.set_family, %struct.set_family* %24, i32 0, i32 5
  %26 = load i32*, i32** %25, align 8
  %27 = load %struct.set_family*, %struct.set_family** %7, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = load %struct.set_family*, %struct.set_family** %7, align 8
  %31 = getelementptr inbounds %struct.set_family, %struct.set_family* %30, i32 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %31, align 4
  %34 = mul nsw i32 %29, %32
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %26, i64 %35
  %37 = load i32*, i32** %3, align 8
  %38 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %36, i32* %37)
  %39 = load %struct.set_family*, %struct.set_family** %4, align 8
  %40 = getelementptr inbounds %struct.set_family, %struct.set_family* %39, i32 0, i32 5
  %41 = load i32*, i32** %40, align 8
  store i32* %41, i32** %6, align 8
  %42 = load i32*, i32** %6, align 8
  %43 = load %struct.set_family*, %struct.set_family** %4, align 8
  %44 = getelementptr inbounds %struct.set_family, %struct.set_family* %43, i32 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = load %struct.set_family*, %struct.set_family** %4, align 8
  %47 = getelementptr inbounds %struct.set_family, %struct.set_family* %46, i32 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = mul nsw i32 %45, %48
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, i32* %42, i64 %50
  store i32* %51, i32** %5, align 8
  br label %52

52:                                               ; preds = %62, %18
  %53 = load i32*, i32** %6, align 8
  %54 = load i32*, i32** %5, align 8
  %55 = icmp ult i32* %53, %54
  br i1 %55, label %56, label %69

56:                                               ; preds = %52
  %57 = load %struct.set_family*, %struct.set_family** %7, align 8
  %58 = load i32*, i32** %6, align 8
  %59 = call %struct.set_family* @cb1_dsharp(%struct.set_family* %57, i32* %58)
  store %struct.set_family* %59, %struct.set_family** %8, align 8
  %60 = load %struct.set_family*, %struct.set_family** %7, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %60)
  %61 = load %struct.set_family*, %struct.set_family** %8, align 8
  store %struct.set_family* %61, %struct.set_family** %7, align 8
  br label %62

62:                                               ; preds = %56
  %63 = load %struct.set_family*, %struct.set_family** %4, align 8
  %64 = getelementptr inbounds %struct.set_family, %struct.set_family* %63, i32 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = load i32*, i32** %6, align 8
  %67 = sext i32 %65 to i64
  %68 = getelementptr inbounds i32, i32* %66, i64 %67
  store i32* %68, i32** %6, align 8
  br label %52

69:                                               ; preds = %52
  br label %70

70:                                               ; preds = %69, %13
  %71 = load %struct.set_family*, %struct.set_family** %7, align 8
  ret %struct.set_family* %71
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @cb1_dsharp(%struct.set_family* %0, i32* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32* %1, i32** %4, align 8
  %8 = load %struct.set_family*, %struct.set_family** %3, align 8
  %9 = getelementptr inbounds %struct.set_family, %struct.set_family* %8, i32 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %12 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %10, i32 %11)
  store %struct.set_family* %12, %struct.set_family** %7, align 8
  %13 = load %struct.set_family*, %struct.set_family** %3, align 8
  %14 = getelementptr inbounds %struct.set_family, %struct.set_family* %13, i32 0, i32 5
  %15 = load i32*, i32** %14, align 8
  store i32* %15, i32** %6, align 8
  %16 = load i32*, i32** %6, align 8
  %17 = load %struct.set_family*, %struct.set_family** %3, align 8
  %18 = getelementptr inbounds %struct.set_family, %struct.set_family* %17, i32 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = load %struct.set_family*, %struct.set_family** %3, align 8
  %21 = getelementptr inbounds %struct.set_family, %struct.set_family* %20, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = mul nsw i32 %19, %22
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %16, i64 %24
  store i32* %25, i32** %5, align 8
  br label %26

26:                                               ; preds = %36, %2
  %27 = load i32*, i32** %6, align 8
  %28 = load i32*, i32** %5, align 8
  %29 = icmp ult i32* %27, %28
  br i1 %29, label %30, label %43

30:                                               ; preds = %26
  %31 = load %struct.set_family*, %struct.set_family** %7, align 8
  %32 = load i32*, i32** %6, align 8
  %33 = load i32*, i32** %4, align 8
  %34 = call %struct.set_family* @dsharp(i32* %32, i32* %33)
  %35 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_union to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %31, %struct.set_family* %34)
  store %struct.set_family* %35, %struct.set_family** %7, align 8
  br label %36

36:                                               ; preds = %30
  %37 = load %struct.set_family*, %struct.set_family** %3, align 8
  %38 = getelementptr inbounds %struct.set_family, %struct.set_family* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = load i32*, i32** %6, align 8
  %41 = sext i32 %39 to i64
  %42 = getelementptr inbounds i32, i32* %40, i64 %41
  store i32* %42, i32** %6, align 8
  br label %26

43:                                               ; preds = %26
  %44 = load %struct.set_family*, %struct.set_family** %7, align 8
  ret %struct.set_family* %44
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @dsharp(i32* %0, i32* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.set_family*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %16 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 11), align 8
  %17 = getelementptr inbounds i32*, i32** %16, i64 0
  %18 = load i32*, i32** %17, align 8
  store i32* %18, i32** %9, align 8
  %19 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %20 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %21 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %19, i32 %20)
  store %struct.set_family* %21, %struct.set_family** %11, align 8
  %22 = load i32*, i32** %3, align 8
  %23 = load i32*, i32** %4, align 8
  %24 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @cdist0 to i32 (i32*, i32*, ...)*)(i32* %22, i32* %23)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %287

26:                                               ; preds = %2
  %27 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %28 = icmp sle i32 %27, 32
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  br label %36

30:                                               ; preds = %26
  %31 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %32 = sub nsw i32 %31, 1
  %33 = ashr i32 %32, 5
  %34 = add nsw i32 %33, 1
  %35 = add nsw i32 %34, 1
  br label %36

36:                                               ; preds = %30, %29
  %37 = phi i32 [ 2, %29 ], [ %35, %30 ]
  %38 = sext i32 %37 to i64
  %39 = mul i64 4, %38
  %40 = call noalias i8* @malloc(i64 %39) #7
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %43 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %41, i32 %42)
  %44 = load i32*, i32** %3, align 8
  %45 = load i32*, i32** %4, align 8
  %46 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %43, i32* %44, i32* %45)
  store i32* %46, i32** %6, align 8
  %47 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %48 = icmp sle i32 %47, 32
  br i1 %48, label %49, label %50

49:                                               ; preds = %36
  br label %56

50:                                               ; preds = %36
  %51 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %52 = sub nsw i32 %51, 1
  %53 = ashr i32 %52, 5
  %54 = add nsw i32 %53, 1
  %55 = add nsw i32 %54, 1
  br label %56

56:                                               ; preds = %50, %49
  %57 = phi i32 [ 2, %49 ], [ %55, %50 ]
  %58 = sext i32 %57 to i64
  %59 = mul i64 4, %58
  %60 = call noalias i8* @malloc(i64 %59) #7
  %61 = bitcast i8* %60 to i32*
  %62 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %63 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %61, i32 %62)
  %64 = load i32*, i32** %3, align 8
  %65 = load i32*, i32** %4, align 8
  %66 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_and to i32* (i32*, i32*, i32*, ...)*)(i32* %63, i32* %64, i32* %65)
  store i32* %66, i32** %7, align 8
  %67 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %68 = icmp sle i32 %67, 32
  br i1 %68, label %69, label %70

69:                                               ; preds = %56
  br label %76

70:                                               ; preds = %56
  %71 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %72 = sub nsw i32 %71, 1
  %73 = ashr i32 %72, 5
  %74 = add nsw i32 %73, 1
  %75 = add nsw i32 %74, 1
  br label %76

76:                                               ; preds = %70, %69
  %77 = phi i32 [ 2, %69 ], [ %75, %70 ]
  %78 = sext i32 %77 to i64
  %79 = mul i64 4, %78
  %80 = call noalias i8* @malloc(i64 %79) #7
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %83 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %81, i32 %82)
  store i32* %83, i32** %5, align 8
  store i32 0, i32* %10, align 4
  br label %84

84:                                               ; preds = %265, %76
  %85 = load i32, i32* %10, align 4
  %86 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %87 = icmp slt i32 %85, %86
  br i1 %87, label %88, label %268

88:                                               ; preds = %84
  %89 = load i32*, i32** %6, align 8
  %90 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %91 = load i32, i32* %10, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i32*, i32** %90, i64 %92
  %94 = load i32*, i32** %93, align 8
  %95 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_disjoint to i32 (i32*, i32*, ...)*)(i32* %89, i32* %94)
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %264, label %97

97:                                               ; preds = %88
  %98 = load %struct.set_family*, %struct.set_family** %11, align 8
  %99 = getelementptr inbounds %struct.set_family, %struct.set_family* %98, i32 0, i32 5
  %100 = load i32*, i32** %99, align 8
  %101 = load %struct.set_family*, %struct.set_family** %11, align 8
  %102 = getelementptr inbounds %struct.set_family, %struct.set_family* %101, i32 0, i32 0
  %103 = load i32, i32* %102, align 8
  %104 = load %struct.set_family*, %struct.set_family** %11, align 8
  %105 = getelementptr inbounds %struct.set_family, %struct.set_family* %104, i32 0, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %105, align 4
  %108 = mul nsw i32 %103, %106
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i32, i32* %100, i64 %109
  store i32* %110, i32** %8, align 8
  %111 = load i32*, i32** %8, align 8
  %112 = load i32*, i32** %6, align 8
  %113 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %114 = load i32, i32* %10, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i32*, i32** %113, i64 %115
  %117 = load i32*, i32** %116, align 8
  %118 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_and to i32* (i32*, i32*, i32*, ...)*)(i32* %111, i32* %112, i32* %117)
  %119 = load i32*, i32** %7, align 8
  %120 = getelementptr inbounds i32, i32* %119, i64 0
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %121, 1023
  store i32 %122, i32* %12, align 4
  %123 = load i32*, i32** %9, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 0
  %125 = load i32, i32* %124, align 4
  %126 = and i32 %125, -1024
  store i32 %126, i32* %124, align 4
  %127 = load i32, i32* %12, align 4
  %128 = load i32*, i32** %9, align 8
  %129 = getelementptr inbounds i32, i32* %128, i64 0
  %130 = load i32, i32* %129, align 4
  %131 = or i32 %130, %127
  store i32 %131, i32* %129, align 4
  br label %132

132:                                              ; preds = %148, %97
  %133 = load i32*, i32** %7, align 8
  %134 = load i32, i32* %12, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i32, i32* %133, i64 %135
  %137 = load i32, i32* %136, align 4
  %138 = load i32*, i32** %5, align 8
  %139 = load i32, i32* %12, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i32, i32* %138, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = and i32 %137, %142
  %144 = load i32*, i32** %9, align 8
  %145 = load i32, i32* %12, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i32, i32* %144, i64 %146
  store i32 %143, i32* %147, align 4
  br label %148

148:                                              ; preds = %132
  %149 = load i32, i32* %12, align 4
  %150 = add nsw i32 %149, -1
  store i32 %150, i32* %12, align 4
  %151 = icmp sgt i32 %150, 0
  br i1 %151, label %132, label %152

152:                                              ; preds = %148
  %153 = load i32*, i32** %8, align 8
  %154 = getelementptr inbounds i32, i32* %153, i64 0
  %155 = load i32, i32* %154, align 4
  %156 = and i32 %155, 1023
  store i32 %156, i32* %13, align 4
  %157 = load i32*, i32** %8, align 8
  %158 = getelementptr inbounds i32, i32* %157, i64 0
  %159 = load i32, i32* %158, align 4
  %160 = and i32 %159, -1024
  store i32 %160, i32* %158, align 4
  %161 = load i32, i32* %13, align 4
  %162 = load i32*, i32** %8, align 8
  %163 = getelementptr inbounds i32, i32* %162, i64 0
  %164 = load i32, i32* %163, align 4
  %165 = or i32 %164, %161
  store i32 %165, i32* %163, align 4
  br label %166

166:                                              ; preds = %182, %152
  %167 = load i32*, i32** %8, align 8
  %168 = load i32, i32* %13, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i32, i32* %167, i64 %169
  %171 = load i32, i32* %170, align 4
  %172 = load i32*, i32** %9, align 8
  %173 = load i32, i32* %13, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i32, i32* %172, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = or i32 %171, %176
  %178 = load i32*, i32** %8, align 8
  %179 = load i32, i32* %13, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i32, i32* %178, i64 %180
  store i32 %177, i32* %181, align 4
  br label %182

182:                                              ; preds = %166
  %183 = load i32, i32* %13, align 4
  %184 = add nsw i32 %183, -1
  store i32 %184, i32* %13, align 4
  %185 = icmp sgt i32 %184, 0
  br i1 %185, label %166, label %186

186:                                              ; preds = %182
  %187 = load i32*, i32** %5, align 8
  %188 = load i32*, i32** %5, align 8
  %189 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %190 = load i32, i32* %10, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i32*, i32** %189, i64 %191
  %193 = load i32*, i32** %192, align 8
  %194 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %187, i32* %188, i32* %193)
  %195 = load i32*, i32** %3, align 8
  %196 = getelementptr inbounds i32, i32* %195, i64 0
  %197 = load i32, i32* %196, align 4
  %198 = and i32 %197, 1023
  store i32 %198, i32* %14, align 4
  %199 = load i32*, i32** %9, align 8
  %200 = getelementptr inbounds i32, i32* %199, i64 0
  %201 = load i32, i32* %200, align 4
  %202 = and i32 %201, -1024
  store i32 %202, i32* %200, align 4
  %203 = load i32, i32* %14, align 4
  %204 = load i32*, i32** %9, align 8
  %205 = getelementptr inbounds i32, i32* %204, i64 0
  %206 = load i32, i32* %205, align 4
  %207 = or i32 %206, %203
  store i32 %207, i32* %205, align 4
  br label %208

208:                                              ; preds = %225, %186
  %209 = load i32*, i32** %3, align 8
  %210 = load i32, i32* %14, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i32, i32* %209, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = load i32*, i32** %5, align 8
  %215 = load i32, i32* %14, align 4
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds i32, i32* %214, i64 %216
  %218 = load i32, i32* %217, align 4
  %219 = xor i32 %218, -1
  %220 = and i32 %213, %219
  %221 = load i32*, i32** %9, align 8
  %222 = load i32, i32* %14, align 4
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds i32, i32* %221, i64 %223
  store i32 %220, i32* %224, align 4
  br label %225

225:                                              ; preds = %208
  %226 = load i32, i32* %14, align 4
  %227 = add nsw i32 %226, -1
  store i32 %227, i32* %14, align 4
  %228 = icmp sgt i32 %227, 0
  br i1 %228, label %208, label %229

229:                                              ; preds = %225
  %230 = load i32*, i32** %8, align 8
  %231 = getelementptr inbounds i32, i32* %230, i64 0
  %232 = load i32, i32* %231, align 4
  %233 = and i32 %232, 1023
  store i32 %233, i32* %15, align 4
  %234 = load i32*, i32** %8, align 8
  %235 = getelementptr inbounds i32, i32* %234, i64 0
  %236 = load i32, i32* %235, align 4
  %237 = and i32 %236, -1024
  store i32 %237, i32* %235, align 4
  %238 = load i32, i32* %15, align 4
  %239 = load i32*, i32** %8, align 8
  %240 = getelementptr inbounds i32, i32* %239, i64 0
  %241 = load i32, i32* %240, align 4
  %242 = or i32 %241, %238
  store i32 %242, i32* %240, align 4
  br label %243

243:                                              ; preds = %259, %229
  %244 = load i32*, i32** %8, align 8
  %245 = load i32, i32* %15, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i32, i32* %244, i64 %246
  %248 = load i32, i32* %247, align 4
  %249 = load i32*, i32** %9, align 8
  %250 = load i32, i32* %15, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds i32, i32* %249, i64 %251
  %253 = load i32, i32* %252, align 4
  %254 = or i32 %248, %253
  %255 = load i32*, i32** %8, align 8
  %256 = load i32, i32* %15, align 4
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds i32, i32* %255, i64 %257
  store i32 %254, i32* %258, align 4
  br label %259

259:                                              ; preds = %243
  %260 = load i32, i32* %15, align 4
  %261 = add nsw i32 %260, -1
  store i32 %261, i32* %15, align 4
  %262 = icmp sgt i32 %261, 0
  br i1 %262, label %243, label %263

263:                                              ; preds = %259
  br label %264

264:                                              ; preds = %263, %88
  br label %265

265:                                              ; preds = %264
  %266 = load i32, i32* %10, align 4
  %267 = add nsw i32 %266, 1
  store i32 %267, i32* %10, align 4
  br label %84

268:                                              ; preds = %84
  %269 = load i32*, i32** %6, align 8
  %270 = icmp ne i32* %269, null
  br i1 %270, label %271, label %274

271:                                              ; preds = %268
  %272 = load i32*, i32** %6, align 8
  %273 = bitcast i32* %272 to i8*
  call void @free(i8* %273) #7
  store i32* null, i32** %6, align 8
  br label %274

274:                                              ; preds = %271, %268
  %275 = load i32*, i32** %7, align 8
  %276 = icmp ne i32* %275, null
  br i1 %276, label %277, label %280

277:                                              ; preds = %274
  %278 = load i32*, i32** %7, align 8
  %279 = bitcast i32* %278 to i8*
  call void @free(i8* %279) #7
  store i32* null, i32** %7, align 8
  br label %280

280:                                              ; preds = %277, %274
  %281 = load i32*, i32** %5, align 8
  %282 = icmp ne i32* %281, null
  br i1 %282, label %283, label %286

283:                                              ; preds = %280
  %284 = load i32*, i32** %5, align 8
  %285 = bitcast i32* %284 to i8*
  call void @free(i8* %285) #7
  store i32* null, i32** %5, align 8
  br label %286

286:                                              ; preds = %283, %280
  br label %291

287:                                              ; preds = %2
  %288 = load %struct.set_family*, %struct.set_family** %11, align 8
  %289 = load i32*, i32** %3, align 8
  %290 = call %struct.set_family* (%struct.set_family*, i32*, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*)* @sf_addset to %struct.set_family* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %288, i32* %289)
  store %struct.set_family* %290, %struct.set_family** %11, align 8
  br label %291

291:                                              ; preds = %287, %286
  %292 = load %struct.set_family*, %struct.set_family** %11, align 8
  ret %struct.set_family* %292
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @cv_dsharp(%struct.set_family* %0, %struct.set_family* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.set_family*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  %8 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %9 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 0, i32 %8)
  store %struct.set_family* %9, %struct.set_family** %7, align 8
  %10 = load %struct.set_family*, %struct.set_family** %3, align 8
  %11 = getelementptr inbounds %struct.set_family, %struct.set_family* %10, i32 0, i32 5
  %12 = load i32*, i32** %11, align 8
  store i32* %12, i32** %6, align 8
  %13 = load i32*, i32** %6, align 8
  %14 = load %struct.set_family*, %struct.set_family** %3, align 8
  %15 = getelementptr inbounds %struct.set_family, %struct.set_family* %14, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = load %struct.set_family*, %struct.set_family** %3, align 8
  %18 = getelementptr inbounds %struct.set_family, %struct.set_family* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = mul nsw i32 %16, %19
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %13, i64 %21
  store i32* %22, i32** %5, align 8
  br label %23

23:                                               ; preds = %33, %2
  %24 = load i32*, i32** %6, align 8
  %25 = load i32*, i32** %5, align 8
  %26 = icmp ult i32* %24, %25
  br i1 %26, label %27, label %40

27:                                               ; preds = %23
  %28 = load %struct.set_family*, %struct.set_family** %7, align 8
  %29 = load i32*, i32** %6, align 8
  %30 = load %struct.set_family*, %struct.set_family** %4, align 8
  %31 = call %struct.set_family* @cb_dsharp(i32* %29, %struct.set_family* %30)
  %32 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_union to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %28, %struct.set_family* %31)
  store %struct.set_family* %32, %struct.set_family** %7, align 8
  br label %33

33:                                               ; preds = %27
  %34 = load %struct.set_family*, %struct.set_family** %3, align 8
  %35 = getelementptr inbounds %struct.set_family, %struct.set_family* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = load i32*, i32** %6, align 8
  %38 = sext i32 %36 to i64
  %39 = getelementptr inbounds i32, i32* %37, i64 %38
  store i32* %39, i32** %6, align 8
  br label %23

40:                                               ; preds = %23
  %41 = load %struct.set_family*, %struct.set_family** %7, align 8
  ret %struct.set_family* %41
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @do_sm_minimum_cover(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca %struct.sm_matrix_struct*, align 8
  %4 = alloca %struct.sm_row_struct*, align 8
  %5 = alloca %struct.sm_element_struct*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %13 = call %struct.sm_matrix_struct* (...) bitcast (%struct.sm_matrix_struct* ()* @sm_alloc to %struct.sm_matrix_struct* (...)*)()
  store %struct.sm_matrix_struct* %13, %struct.sm_matrix_struct** %3, align 8
  store i32 0, i32* %9, align 4
  %14 = load %struct.set_family*, %struct.set_family** %2, align 8
  %15 = getelementptr inbounds %struct.set_family, %struct.set_family* %14, i32 0, i32 5
  %16 = load i32*, i32** %15, align 8
  store i32* %16, i32** %12, align 8
  %17 = load i32*, i32** %12, align 8
  %18 = load %struct.set_family*, %struct.set_family** %2, align 8
  %19 = getelementptr inbounds %struct.set_family, %struct.set_family* %18, i32 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = load %struct.set_family*, %struct.set_family** %2, align 8
  %22 = getelementptr inbounds %struct.set_family, %struct.set_family* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = mul nsw i32 %20, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %17, i64 %25
  store i32* %26, i32** %11, align 8
  br label %27

27:                                               ; preds = %70, %1
  %28 = load i32*, i32** %12, align 8
  %29 = load i32*, i32** %11, align 8
  %30 = icmp ult i32* %28, %29
  br i1 %30, label %31, label %77

31:                                               ; preds = %27
  %32 = load i32*, i32** %12, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 1023
  store i32 %35, i32* %7, align 4
  br label %36

36:                                               ; preds = %66, %31
  %37 = load i32, i32* %7, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %67

39:                                               ; preds = %36
  %40 = load i32*, i32** %12, align 8
  %41 = load i32, i32* %7, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %40, i64 %42
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %10, align 4
  %45 = load i32, i32* %7, align 4
  %46 = add nsw i32 %45, -1
  store i32 %46, i32* %7, align 4
  %47 = shl i32 %46, 5
  store i32 %47, i32* %8, align 4
  br label %48

48:                                               ; preds = %61, %39
  %49 = load i32, i32* %10, align 4
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %66

51:                                               ; preds = %48
  %52 = load i32, i32* %10, align 4
  %53 = and i32 %52, 1
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %60

55:                                               ; preds = %51
  %56 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %57 = load i32, i32* %9, align 4
  %58 = load i32, i32* %8, align 4
  %59 = call %struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32, ...) bitcast (%struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32)* @sm_insert to %struct.sm_element_struct* (%struct.sm_matrix_struct*, i32, i32, ...)*)(%struct.sm_matrix_struct* %56, i32 %57, i32 %58)
  br label %60

60:                                               ; preds = %55, %51
  br label %61

61:                                               ; preds = %60
  %62 = load i32, i32* %8, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %8, align 4
  %64 = load i32, i32* %10, align 4
  %65 = lshr i32 %64, 1
  store i32 %65, i32* %10, align 4
  br label %48

66:                                               ; preds = %48
  br label %36

67:                                               ; preds = %36
  %68 = load i32, i32* %9, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %9, align 4
  br label %70

70:                                               ; preds = %67
  %71 = load %struct.set_family*, %struct.set_family** %2, align 8
  %72 = getelementptr inbounds %struct.set_family, %struct.set_family* %71, i32 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = load i32*, i32** %12, align 8
  %75 = sext i32 %73 to i64
  %76 = getelementptr inbounds i32, i32* %74, i64 %75
  store i32* %76, i32** %12, align 8
  br label %27

77:                                               ; preds = %27
  %78 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  %79 = call %struct.sm_row_struct* (%struct.sm_matrix_struct*, i32*, i32, i32, ...) bitcast (%struct.sm_row_struct* (%struct.sm_matrix_struct*, i32*, i32, i32)* @sm_minimum_cover to %struct.sm_row_struct* (%struct.sm_matrix_struct*, i32*, i32, i32, ...)*)(%struct.sm_matrix_struct* %78, i32* null, i32 1, i32 0)
  store %struct.sm_row_struct* %79, %struct.sm_row_struct** %4, align 8
  %80 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %3, align 8
  call void (%struct.sm_matrix_struct*, ...) bitcast (void (%struct.sm_matrix_struct*)* @sm_free to void (%struct.sm_matrix_struct*, ...)*)(%struct.sm_matrix_struct* %80)
  %81 = load %struct.set_family*, %struct.set_family** %2, align 8
  %82 = getelementptr inbounds %struct.set_family, %struct.set_family* %81, i32 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp sle i32 %83, 32
  br i1 %84, label %85, label %86

85:                                               ; preds = %77
  br label %94

86:                                               ; preds = %77
  %87 = load %struct.set_family*, %struct.set_family** %2, align 8
  %88 = getelementptr inbounds %struct.set_family, %struct.set_family* %87, i32 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = sub nsw i32 %89, 1
  %91 = ashr i32 %90, 5
  %92 = add nsw i32 %91, 1
  %93 = add nsw i32 %92, 1
  br label %94

94:                                               ; preds = %86, %85
  %95 = phi i32 [ 2, %85 ], [ %93, %86 ]
  %96 = sext i32 %95 to i64
  %97 = mul i64 4, %96
  %98 = call noalias i8* @malloc(i64 %97) #7
  %99 = bitcast i8* %98 to i32*
  %100 = load %struct.set_family*, %struct.set_family** %2, align 8
  %101 = getelementptr inbounds %struct.set_family, %struct.set_family* %100, i32 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %99, i32 %102)
  store i32* %103, i32** %6, align 8
  %104 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  %105 = getelementptr inbounds %struct.sm_row_struct, %struct.sm_row_struct* %104, i32 0, i32 3
  %106 = load %struct.sm_element_struct*, %struct.sm_element_struct** %105, align 8
  store %struct.sm_element_struct* %106, %struct.sm_element_struct** %5, align 8
  br label %107

107:                                              ; preds = %126, %94
  %108 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %109 = icmp ne %struct.sm_element_struct* %108, null
  br i1 %109, label %110, label %130

110:                                              ; preds = %107
  %111 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %112 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %111, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = and i32 %113, 31
  %115 = shl i32 1, %114
  %116 = load i32*, i32** %6, align 8
  %117 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %118 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %117, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = ashr i32 %119, 5
  %121 = add nsw i32 %120, 1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i32, i32* %116, i64 %122
  %124 = load i32, i32* %123, align 4
  %125 = or i32 %124, %115
  store i32 %125, i32* %123, align 4
  br label %126

126:                                              ; preds = %110
  %127 = load %struct.sm_element_struct*, %struct.sm_element_struct** %5, align 8
  %128 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %127, i32 0, i32 4
  %129 = load %struct.sm_element_struct*, %struct.sm_element_struct** %128, align 8
  store %struct.sm_element_struct* %129, %struct.sm_element_struct** %5, align 8
  br label %107

130:                                              ; preds = %107
  %131 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  call void (%struct.sm_row_struct*, ...) bitcast (void (%struct.sm_row_struct*)* @sm_row_free to void (%struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %131)
  %132 = load i32*, i32** %6, align 8
  ret i32* %132
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.solution_struct* @solution_alloc() #0 {
  %1 = alloca %struct.solution_struct*, align 8
  %2 = call noalias i8* @malloc(i64 16) #7
  %3 = bitcast i8* %2 to %struct.solution_struct*
  store %struct.solution_struct* %3, %struct.solution_struct** %1, align 8
  %4 = load %struct.solution_struct*, %struct.solution_struct** %1, align 8
  %5 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %4, i32 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = call %struct.sm_row_struct* (...) bitcast (%struct.sm_row_struct* ()* @sm_row_alloc to %struct.sm_row_struct* (...)*)()
  %7 = load %struct.solution_struct*, %struct.solution_struct** %1, align 8
  %8 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %7, i32 0, i32 0
  store %struct.sm_row_struct* %6, %struct.sm_row_struct** %8, align 8
  %9 = load %struct.solution_struct*, %struct.solution_struct** %1, align 8
  ret %struct.solution_struct* %9
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @solution_free(%struct.solution_struct* %0) #0 {
  %2 = alloca %struct.solution_struct*, align 8
  store %struct.solution_struct* %0, %struct.solution_struct** %2, align 8
  %3 = load %struct.solution_struct*, %struct.solution_struct** %2, align 8
  %4 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %3, i32 0, i32 0
  %5 = load %struct.sm_row_struct*, %struct.sm_row_struct** %4, align 8
  call void (%struct.sm_row_struct*, ...) bitcast (void (%struct.sm_row_struct*)* @sm_row_free to void (%struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %5)
  %6 = load %struct.solution_struct*, %struct.solution_struct** %2, align 8
  %7 = icmp ne %struct.solution_struct* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = load %struct.solution_struct*, %struct.solution_struct** %2, align 8
  %10 = bitcast %struct.solution_struct* %9 to i8*
  call void @free(i8* %10) #7
  store %struct.solution_struct* null, %struct.solution_struct** %2, align 8
  br label %11

11:                                               ; preds = %8, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.solution_struct* @solution_dup(%struct.solution_struct* %0) #0 {
  %2 = alloca %struct.solution_struct*, align 8
  %3 = alloca %struct.solution_struct*, align 8
  store %struct.solution_struct* %0, %struct.solution_struct** %2, align 8
  %4 = call noalias i8* @malloc(i64 16) #7
  %5 = bitcast i8* %4 to %struct.solution_struct*
  store %struct.solution_struct* %5, %struct.solution_struct** %3, align 8
  %6 = load %struct.solution_struct*, %struct.solution_struct** %2, align 8
  %7 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = load %struct.solution_struct*, %struct.solution_struct** %3, align 8
  %10 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %9, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  %11 = load %struct.solution_struct*, %struct.solution_struct** %2, align 8
  %12 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %11, i32 0, i32 0
  %13 = load %struct.sm_row_struct*, %struct.sm_row_struct** %12, align 8
  %14 = call %struct.sm_row_struct* (%struct.sm_row_struct*, ...) bitcast (%struct.sm_row_struct* (%struct.sm_row_struct*)* @sm_row_dup to %struct.sm_row_struct* (%struct.sm_row_struct*, ...)*)(%struct.sm_row_struct* %13)
  %15 = load %struct.solution_struct*, %struct.solution_struct** %3, align 8
  %16 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %15, i32 0, i32 0
  store %struct.sm_row_struct* %14, %struct.sm_row_struct** %16, align 8
  %17 = load %struct.solution_struct*, %struct.solution_struct** %3, align 8
  ret %struct.solution_struct* %17
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @solution_add(%struct.solution_struct* %0, i32* %1, i32 %2) #0 {
  %4 = alloca %struct.solution_struct*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  store %struct.solution_struct* %0, %struct.solution_struct** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct.solution_struct*, %struct.solution_struct** %4, align 8
  %8 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %7, i32 0, i32 0
  %9 = load %struct.sm_row_struct*, %struct.sm_row_struct** %8, align 8
  %10 = load i32, i32* %6, align 4
  %11 = call %struct.sm_element_struct* (%struct.sm_row_struct*, i32, ...) bitcast (%struct.sm_element_struct* (%struct.sm_row_struct*, i32)* @sm_row_insert to %struct.sm_element_struct* (%struct.sm_row_struct*, i32, ...)*)(%struct.sm_row_struct* %9, i32 %10)
  %12 = load i32*, i32** %5, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  br label %21

15:                                               ; preds = %3
  %16 = load i32*, i32** %5, align 8
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %16, i64 %18
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %15, %14
  %22 = phi i32 [ 1, %14 ], [ %20, %15 ]
  %23 = load %struct.solution_struct*, %struct.solution_struct** %4, align 8
  %24 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = add nsw i32 %25, %22
  store i32 %26, i32* %24, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @solution_accept(%struct.solution_struct* %0, %struct.sm_matrix_struct* %1, i32* %2, i32 %3) #0 {
  %5 = alloca %struct.solution_struct*, align 8
  %6 = alloca %struct.sm_matrix_struct*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.sm_element_struct*, align 8
  %10 = alloca %struct.sm_element_struct*, align 8
  %11 = alloca %struct.sm_col_struct*, align 8
  store %struct.solution_struct* %0, %struct.solution_struct** %5, align 8
  store %struct.sm_matrix_struct* %1, %struct.sm_matrix_struct** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32 %3, i32* %8, align 4
  %12 = load %struct.solution_struct*, %struct.solution_struct** %5, align 8
  %13 = load i32*, i32** %7, align 8
  %14 = load i32, i32* %8, align 4
  call void @solution_add(%struct.solution_struct* %12, i32* %13, i32 %14)
  %15 = load i32, i32* %8, align 4
  %16 = icmp sge i32 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %4
  %18 = load i32, i32* %8, align 4
  %19 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %20 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %19, i32 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %18, %21
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %25 = getelementptr inbounds %struct.sm_matrix_struct, %struct.sm_matrix_struct* %24, i32 0, i32 2
  %26 = load %struct.sm_col_struct**, %struct.sm_col_struct*** %25, align 8
  %27 = load i32, i32* %8, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.sm_col_struct*, %struct.sm_col_struct** %26, i64 %28
  %30 = load %struct.sm_col_struct*, %struct.sm_col_struct** %29, align 8
  br label %32

31:                                               ; preds = %17, %4
  br label %32

32:                                               ; preds = %31, %23
  %33 = phi %struct.sm_col_struct* [ %30, %23 ], [ null, %31 ]
  store %struct.sm_col_struct* %33, %struct.sm_col_struct** %11, align 8
  %34 = load %struct.sm_col_struct*, %struct.sm_col_struct** %11, align 8
  %35 = getelementptr inbounds %struct.sm_col_struct, %struct.sm_col_struct* %34, i32 0, i32 3
  %36 = load %struct.sm_element_struct*, %struct.sm_element_struct** %35, align 8
  store %struct.sm_element_struct* %36, %struct.sm_element_struct** %9, align 8
  br label %37

37:                                               ; preds = %48, %32
  %38 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %39 = icmp ne %struct.sm_element_struct* %38, null
  br i1 %39, label %40, label %50

40:                                               ; preds = %37
  %41 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %42 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %41, i32 0, i32 2
  %43 = load %struct.sm_element_struct*, %struct.sm_element_struct** %42, align 8
  store %struct.sm_element_struct* %43, %struct.sm_element_struct** %10, align 8
  %44 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %45 = load %struct.sm_element_struct*, %struct.sm_element_struct** %9, align 8
  %46 = getelementptr inbounds %struct.sm_element_struct, %struct.sm_element_struct* %45, i32 0, i32 0
  %47 = load i32, i32* %46, align 8
  call void (%struct.sm_matrix_struct*, i32, ...) bitcast (void (%struct.sm_matrix_struct*, i32)* @sm_delrow to void (%struct.sm_matrix_struct*, i32, ...)*)(%struct.sm_matrix_struct* %44, i32 %47)
  br label %48

48:                                               ; preds = %40
  %49 = load %struct.sm_element_struct*, %struct.sm_element_struct** %10, align 8
  store %struct.sm_element_struct* %49, %struct.sm_element_struct** %9, align 8
  br label %37

50:                                               ; preds = %37
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @solution_reject(%struct.solution_struct* %0, %struct.sm_matrix_struct* %1, i32* %2, i32 %3) #0 {
  %5 = alloca %struct.solution_struct*, align 8
  %6 = alloca %struct.sm_matrix_struct*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  store %struct.solution_struct* %0, %struct.solution_struct** %5, align 8
  store %struct.sm_matrix_struct* %1, %struct.sm_matrix_struct** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load %struct.sm_matrix_struct*, %struct.sm_matrix_struct** %6, align 8
  %10 = load i32, i32* %8, align 4
  call void (%struct.sm_matrix_struct*, i32, ...) bitcast (void (%struct.sm_matrix_struct*, i32)* @sm_delcol to void (%struct.sm_matrix_struct*, i32, ...)*)(%struct.sm_matrix_struct* %9, i32 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.solution_struct* @solution_choose_best(%struct.solution_struct* %0, %struct.solution_struct* %1) #0 {
  %3 = alloca %struct.solution_struct*, align 8
  %4 = alloca %struct.solution_struct*, align 8
  %5 = alloca %struct.solution_struct*, align 8
  store %struct.solution_struct* %0, %struct.solution_struct** %4, align 8
  store %struct.solution_struct* %1, %struct.solution_struct** %5, align 8
  %6 = load %struct.solution_struct*, %struct.solution_struct** %4, align 8
  %7 = icmp ne %struct.solution_struct* %6, null
  br i1 %7, label %8, label %27

8:                                                ; preds = %2
  %9 = load %struct.solution_struct*, %struct.solution_struct** %5, align 8
  %10 = icmp ne %struct.solution_struct* %9, null
  br i1 %10, label %11, label %25

11:                                               ; preds = %8
  %12 = load %struct.solution_struct*, %struct.solution_struct** %4, align 8
  %13 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = load %struct.solution_struct*, %struct.solution_struct** %5, align 8
  %16 = getelementptr inbounds %struct.solution_struct, %struct.solution_struct* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp sle i32 %14, %17
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %struct.solution_struct*, %struct.solution_struct** %5, align 8
  call void @solution_free(%struct.solution_struct* %20)
  %21 = load %struct.solution_struct*, %struct.solution_struct** %4, align 8
  store %struct.solution_struct* %21, %struct.solution_struct** %3, align 8
  br label %33

22:                                               ; preds = %11
  %23 = load %struct.solution_struct*, %struct.solution_struct** %4, align 8
  call void @solution_free(%struct.solution_struct* %23)
  %24 = load %struct.solution_struct*, %struct.solution_struct** %5, align 8
  store %struct.solution_struct* %24, %struct.solution_struct** %3, align 8
  br label %33

25:                                               ; preds = %8
  %26 = load %struct.solution_struct*, %struct.solution_struct** %4, align 8
  store %struct.solution_struct* %26, %struct.solution_struct** %3, align 8
  br label %33

27:                                               ; preds = %2
  %28 = load %struct.solution_struct*, %struct.solution_struct** %5, align 8
  %29 = icmp ne %struct.solution_struct* %28, null
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = load %struct.solution_struct*, %struct.solution_struct** %5, align 8
  store %struct.solution_struct* %31, %struct.solution_struct** %3, align 8
  br label %33

32:                                               ; preds = %27
  store %struct.solution_struct* null, %struct.solution_struct** %3, align 8
  br label %33

33:                                               ; preds = %32, %30, %25, %22, %19
  %34 = load %struct.solution_struct*, %struct.solution_struct** %3, align 8
  ret %struct.solution_struct* %34
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @make_sparse(%struct.set_family* %0, %struct.set_family* %1, %struct.set_family* %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca %struct.cost_struct, align 4
  %8 = alloca %struct.cost_struct, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store %struct.set_family* %1, %struct.set_family** %5, align 8
  store %struct.set_family* %2, %struct.set_family** %6, align 8
  %11 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, %struct.cost_struct*, ...) bitcast (void (%struct.set_family*, %struct.cost_struct*)* @cover_cost to void (%struct.set_family*, %struct.cost_struct*, ...)*)(%struct.set_family* %11, %struct.cost_struct* %8)
  br label %12

12:                                               ; preds = %39, %3
  %13 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %13, i64* %9, align 8
  %14 = load %struct.set_family*, %struct.set_family** %4, align 8
  %15 = load %struct.set_family*, %struct.set_family** %5, align 8
  %16 = call %struct.set_family* @mv_reduce(%struct.set_family* %14, %struct.set_family* %15)
  store %struct.set_family* %16, %struct.set_family** %4, align 8
  %17 = load i64, i64* %9, align 8
  %18 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %17, i32 12, %struct.set_family* %18, %struct.cost_struct* %7)
  %19 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %7, i32 0, i32 4
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %8, i32 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %12
  br label %42

25:                                               ; preds = %12
  call void (%struct.cost_struct*, %struct.cost_struct*, ...) bitcast (void (%struct.cost_struct*, %struct.cost_struct*)* @copy_cost to void (%struct.cost_struct*, %struct.cost_struct*, ...)*)(%struct.cost_struct* %7, %struct.cost_struct* %8)
  %26 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %26, i64* %10, align 8
  %27 = load %struct.set_family*, %struct.set_family** %4, align 8
  %28 = load %struct.set_family*, %struct.set_family** %6, align 8
  %29 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*, i32)* @expand to %struct.set_family* (%struct.set_family*, %struct.set_family*, i32, ...)*)(%struct.set_family* %27, %struct.set_family* %28, i32 1)
  store %struct.set_family* %29, %struct.set_family** %4, align 8
  %30 = load i64, i64* %10, align 8
  %31 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...) bitcast (void (i64, i32, %struct.set_family*, %struct.cost_struct*)* @totals to void (i64, i32, %struct.set_family*, %struct.cost_struct*, ...)*)(i64 %30, i32 13, %struct.set_family* %31, %struct.cost_struct* %7)
  %32 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %7, i32 0, i32 4
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %struct.cost_struct, %struct.cost_struct* %8, i32 0, i32 4
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %25
  br label %42

38:                                               ; preds = %25
  call void (%struct.cost_struct*, %struct.cost_struct*, ...) bitcast (void (%struct.cost_struct*, %struct.cost_struct*)* @copy_cost to void (%struct.cost_struct*, %struct.cost_struct*, ...)*)(%struct.cost_struct* %7, %struct.cost_struct* %8)
  br label %39

39:                                               ; preds = %38
  %40 = load i32, i32* @force_irredundant, align 4
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %12, label %42

42:                                               ; preds = %39, %37, %24
  %43 = load %struct.set_family*, %struct.set_family** %4, align 8
  ret %struct.set_family* %43
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @mv_reduce(%struct.set_family* %0, %struct.set_family* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.set_family*, align 8
  %12 = alloca %struct.set_family*, align 8
  %13 = alloca i32**, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store %struct.set_family* %1, %struct.set_family** %4, align 8
  store i32 0, i32* %6, align 4
  br label %14

14:                                               ; preds = %294, %2
  %15 = load i32, i32* %6, align 4
  %16 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %297

18:                                               ; preds = %14
  %19 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 16), align 8
  %20 = load i32, i32* %6, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %19, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %293

25:                                               ; preds = %18
  %26 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, i32* %26, i64 %28
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %5, align 4
  br label %31

31:                                               ; preds = %289, %25
  %32 = load i32, i32* %5, align 4
  %33 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %34 = load i32, i32* %6, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %33, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = icmp sle i32 %32, %37
  br i1 %38, label %39, label %292

39:                                               ; preds = %31
  %40 = load %struct.set_family*, %struct.set_family** %3, align 8
  %41 = getelementptr inbounds %struct.set_family, %struct.set_family* %40, i32 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = sext i32 %42 to i64
  %44 = mul i64 8, %43
  %45 = call noalias i8* @malloc(i64 %44) #7
  %46 = bitcast i8* %45 to i32**
  store i32** %46, i32*** %13, align 8
  %47 = load %struct.set_family*, %struct.set_family** %3, align 8
  %48 = getelementptr inbounds %struct.set_family, %struct.set_family* %47, i32 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %51 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %49, i32 %50)
  store %struct.set_family* %51, %struct.set_family** %11, align 8
  %52 = load %struct.set_family*, %struct.set_family** %3, align 8
  %53 = getelementptr inbounds %struct.set_family, %struct.set_family* %52, i32 0, i32 5
  %54 = load i32*, i32** %53, align 8
  store i32* %54, i32** %7, align 8
  %55 = load i32*, i32** %7, align 8
  %56 = load %struct.set_family*, %struct.set_family** %3, align 8
  %57 = getelementptr inbounds %struct.set_family, %struct.set_family* %56, i32 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = load %struct.set_family*, %struct.set_family** %3, align 8
  %60 = getelementptr inbounds %struct.set_family, %struct.set_family* %59, i32 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = mul nsw i32 %58, %61
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %55, i64 %63
  store i32* %64, i32** %9, align 8
  br label %65

65:                                               ; preds = %123, %39
  %66 = load i32*, i32** %7, align 8
  %67 = load i32*, i32** %9, align 8
  %68 = icmp ult i32* %66, %67
  br i1 %68, label %69, label %130

69:                                               ; preds = %65
  %70 = load i32*, i32** %7, align 8
  %71 = load i32, i32* %5, align 4
  %72 = ashr i32 %71, 5
  %73 = add nsw i32 %72, 1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, i32* %70, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = load i32, i32* %5, align 4
  %78 = and i32 %77, 31
  %79 = shl i32 1, %78
  %80 = and i32 %76, %79
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %122

82:                                               ; preds = %69
  %83 = load i32*, i32** %7, align 8
  %84 = load i32**, i32*** %13, align 8
  %85 = load %struct.set_family*, %struct.set_family** %11, align 8
  %86 = getelementptr inbounds %struct.set_family, %struct.set_family* %85, i32 0, i32 3
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i32*, i32** %84, i64 %88
  store i32* %83, i32** %89, align 8
  %90 = load %struct.set_family*, %struct.set_family** %11, align 8
  %91 = getelementptr inbounds %struct.set_family, %struct.set_family* %90, i32 0, i32 5
  %92 = load i32*, i32** %91, align 8
  %93 = load %struct.set_family*, %struct.set_family** %11, align 8
  %94 = getelementptr inbounds %struct.set_family, %struct.set_family* %93, i32 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = load %struct.set_family*, %struct.set_family** %11, align 8
  %97 = getelementptr inbounds %struct.set_family, %struct.set_family* %96, i32 0, i32 3
  %98 = load i32, i32* %97, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %97, align 4
  %100 = mul nsw i32 %95, %98
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, i32* %92, i64 %101
  store i32* %102, i32** %8, align 8
  %103 = load i32*, i32** %8, align 8
  %104 = load i32*, i32** %7, align 8
  %105 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %106 = load i32, i32* %6, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i32*, i32** %105, i64 %107
  %109 = load i32*, i32** %108, align 8
  %110 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %103, i32* %104, i32* %109)
  %111 = load i32, i32* %5, align 4
  %112 = and i32 %111, 31
  %113 = shl i32 1, %112
  %114 = load i32*, i32** %8, align 8
  %115 = load i32, i32* %5, align 4
  %116 = ashr i32 %115, 5
  %117 = add nsw i32 %116, 1
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i32, i32* %114, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = or i32 %120, %113
  store i32 %121, i32* %119, align 4
  br label %122

122:                                              ; preds = %82, %69
  br label %123

123:                                              ; preds = %122
  %124 = load %struct.set_family*, %struct.set_family** %3, align 8
  %125 = getelementptr inbounds %struct.set_family, %struct.set_family* %124, i32 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = load i32*, i32** %7, align 8
  %128 = sext i32 %126 to i64
  %129 = getelementptr inbounds i32, i32* %127, i64 %128
  store i32* %129, i32** %7, align 8
  br label %65

130:                                              ; preds = %65
  %131 = load %struct.set_family*, %struct.set_family** %4, align 8
  %132 = getelementptr inbounds %struct.set_family, %struct.set_family* %131, i32 0, i32 3
  %133 = load i32, i32* %132, align 4
  %134 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %135 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %133, i32 %134)
  store %struct.set_family* %135, %struct.set_family** %12, align 8
  %136 = load %struct.set_family*, %struct.set_family** %4, align 8
  %137 = getelementptr inbounds %struct.set_family, %struct.set_family* %136, i32 0, i32 5
  %138 = load i32*, i32** %137, align 8
  store i32* %138, i32** %7, align 8
  %139 = load i32*, i32** %7, align 8
  %140 = load %struct.set_family*, %struct.set_family** %4, align 8
  %141 = getelementptr inbounds %struct.set_family, %struct.set_family* %140, i32 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = load %struct.set_family*, %struct.set_family** %4, align 8
  %144 = getelementptr inbounds %struct.set_family, %struct.set_family* %143, i32 0, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = mul nsw i32 %142, %145
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i32, i32* %139, i64 %147
  store i32* %148, i32** %9, align 8
  br label %149

149:                                              ; preds = %200, %130
  %150 = load i32*, i32** %7, align 8
  %151 = load i32*, i32** %9, align 8
  %152 = icmp ult i32* %150, %151
  br i1 %152, label %153, label %207

153:                                              ; preds = %149
  %154 = load i32*, i32** %7, align 8
  %155 = load i32, i32* %5, align 4
  %156 = ashr i32 %155, 5
  %157 = add nsw i32 %156, 1
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i32, i32* %154, i64 %158
  %160 = load i32, i32* %159, align 4
  %161 = load i32, i32* %5, align 4
  %162 = and i32 %161, 31
  %163 = shl i32 1, %162
  %164 = and i32 %160, %163
  %165 = icmp ne i32 %164, 0
  br i1 %165, label %166, label %199

166:                                              ; preds = %153
  %167 = load %struct.set_family*, %struct.set_family** %12, align 8
  %168 = getelementptr inbounds %struct.set_family, %struct.set_family* %167, i32 0, i32 5
  %169 = load i32*, i32** %168, align 8
  %170 = load %struct.set_family*, %struct.set_family** %12, align 8
  %171 = getelementptr inbounds %struct.set_family, %struct.set_family* %170, i32 0, i32 0
  %172 = load i32, i32* %171, align 8
  %173 = load %struct.set_family*, %struct.set_family** %12, align 8
  %174 = getelementptr inbounds %struct.set_family, %struct.set_family* %173, i32 0, i32 3
  %175 = load i32, i32* %174, align 4
  %176 = add nsw i32 %175, 1
  store i32 %176, i32* %174, align 4
  %177 = mul nsw i32 %172, %175
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds i32, i32* %169, i64 %178
  store i32* %179, i32** %8, align 8
  %180 = load i32*, i32** %8, align 8
  %181 = load i32*, i32** %7, align 8
  %182 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %183 = load i32, i32* %6, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i32*, i32** %182, i64 %184
  %186 = load i32*, i32** %185, align 8
  %187 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_diff to i32* (i32*, i32*, i32*, ...)*)(i32* %180, i32* %181, i32* %186)
  %188 = load i32, i32* %5, align 4
  %189 = and i32 %188, 31
  %190 = shl i32 1, %189
  %191 = load i32*, i32** %8, align 8
  %192 = load i32, i32* %5, align 4
  %193 = ashr i32 %192, 5
  %194 = add nsw i32 %193, 1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i32, i32* %191, i64 %195
  %197 = load i32, i32* %196, align 4
  %198 = or i32 %197, %190
  store i32 %198, i32* %196, align 4
  br label %199

199:                                              ; preds = %166, %153
  br label %200

200:                                              ; preds = %199
  %201 = load %struct.set_family*, %struct.set_family** %4, align 8
  %202 = getelementptr inbounds %struct.set_family, %struct.set_family* %201, i32 0, i32 0
  %203 = load i32, i32* %202, align 8
  %204 = load i32*, i32** %7, align 8
  %205 = sext i32 %203 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  store i32* %206, i32** %7, align 8
  br label %149

207:                                              ; preds = %149
  %208 = load %struct.set_family*, %struct.set_family** %11, align 8
  %209 = load %struct.set_family*, %struct.set_family** %12, align 8
  call void (%struct.set_family*, %struct.set_family*, ...) bitcast (void (%struct.set_family*, %struct.set_family*)* @mark_irredundant to void (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %208, %struct.set_family* %209)
  store i32 0, i32* %10, align 4
  %210 = load %struct.set_family*, %struct.set_family** %11, align 8
  %211 = getelementptr inbounds %struct.set_family, %struct.set_family* %210, i32 0, i32 5
  %212 = load i32*, i32** %211, align 8
  store i32* %212, i32** %8, align 8
  %213 = load i32*, i32** %8, align 8
  %214 = load %struct.set_family*, %struct.set_family** %11, align 8
  %215 = getelementptr inbounds %struct.set_family, %struct.set_family* %214, i32 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = load %struct.set_family*, %struct.set_family** %11, align 8
  %218 = getelementptr inbounds %struct.set_family, %struct.set_family* %217, i32 0, i32 0
  %219 = load i32, i32* %218, align 8
  %220 = mul nsw i32 %216, %219
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds i32, i32* %213, i64 %221
  store i32* %222, i32** %9, align 8
  br label %223

223:                                              ; preds = %273, %207
  %224 = load i32*, i32** %8, align 8
  %225 = load i32*, i32** %9, align 8
  %226 = icmp ult i32* %224, %225
  br i1 %226, label %227, label %280

227:                                              ; preds = %223
  %228 = load i32*, i32** %8, align 8
  %229 = getelementptr inbounds i32, i32* %228, i64 0
  %230 = load i32, i32* %229, align 4
  %231 = and i32 %230, 8192
  %232 = icmp ne i32 %231, 0
  br i1 %232, label %270, label %233

233:                                              ; preds = %227
  %234 = load i32**, i32*** %13, align 8
  %235 = load i32, i32* %10, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i32*, i32** %234, i64 %236
  %238 = load i32*, i32** %237, align 8
  store i32* %238, i32** %7, align 8
  %239 = load i32, i32* %6, align 4
  %240 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %241 = sub nsw i32 %240, 1
  %242 = icmp eq i32 %239, %241
  br i1 %242, label %252, label %243

243:                                              ; preds = %233
  %244 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %245 = load i32, i32* %6, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i32*, i32** %244, i64 %246
  %248 = load i32*, i32** %247, align 8
  %249 = load i32*, i32** %7, align 8
  %250 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_implies to i32 (i32*, i32*, ...)*)(i32* %248, i32* %249)
  %251 = icmp ne i32 %250, 0
  br i1 %251, label %265, label %252

252:                                              ; preds = %243, %233
  %253 = load i32, i32* %5, align 4
  %254 = and i32 %253, 31
  %255 = shl i32 1, %254
  %256 = xor i32 %255, -1
  %257 = load i32*, i32** %7, align 8
  %258 = load i32, i32* %5, align 4
  %259 = ashr i32 %258, 5
  %260 = add nsw i32 %259, 1
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds i32, i32* %257, i64 %261
  %263 = load i32, i32* %262, align 4
  %264 = and i32 %263, %256
  store i32 %264, i32* %262, align 4
  br label %265

265:                                              ; preds = %252, %243
  %266 = load i32*, i32** %7, align 8
  %267 = getelementptr inbounds i32, i32* %266, i64 0
  %268 = load i32, i32* %267, align 4
  %269 = and i32 %268, -32769
  store i32 %269, i32* %267, align 4
  br label %270

270:                                              ; preds = %265, %227
  %271 = load i32, i32* %10, align 4
  %272 = add nsw i32 %271, 1
  store i32 %272, i32* %10, align 4
  br label %273

273:                                              ; preds = %270
  %274 = load %struct.set_family*, %struct.set_family** %11, align 8
  %275 = getelementptr inbounds %struct.set_family, %struct.set_family* %274, i32 0, i32 0
  %276 = load i32, i32* %275, align 8
  %277 = load i32*, i32** %8, align 8
  %278 = sext i32 %276 to i64
  %279 = getelementptr inbounds i32, i32* %277, i64 %278
  store i32* %279, i32** %8, align 8
  br label %223

280:                                              ; preds = %223
  %281 = load %struct.set_family*, %struct.set_family** %11, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %281)
  %282 = load %struct.set_family*, %struct.set_family** %12, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %282)
  %283 = load i32**, i32*** %13, align 8
  %284 = icmp ne i32** %283, null
  br i1 %284, label %285, label %288

285:                                              ; preds = %280
  %286 = load i32**, i32*** %13, align 8
  %287 = bitcast i32** %286 to i8*
  call void @free(i8* %287) #7
  store i32** null, i32*** %13, align 8
  br label %288

288:                                              ; preds = %285, %280
  br label %289

289:                                              ; preds = %288
  %290 = load i32, i32* %5, align 4
  %291 = add nsw i32 %290, 1
  store i32 %291, i32* %5, align 4
  br label %31

292:                                              ; preds = %31
  br label %293

293:                                              ; preds = %292, %18
  br label %294

294:                                              ; preds = %293
  %295 = load i32, i32* %6, align 4
  %296 = add nsw i32 %295, 1
  store i32 %296, i32* %6, align 4
  br label %14

297:                                              ; preds = %14
  %298 = load %struct.set_family*, %struct.set_family** %3, align 8
  %299 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_active to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %298)
  store i32 0, i32* %6, align 4
  br label %300

300:                                              ; preds = %364, %297
  %301 = load i32, i32* %6, align 4
  %302 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %303 = icmp slt i32 %301, %302
  br i1 %303, label %304, label %367

304:                                              ; preds = %300
  %305 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 16), align 8
  %306 = load i32, i32* %6, align 4
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds i32, i32* %305, i64 %307
  %309 = load i32, i32* %308, align 4
  %310 = icmp ne i32 %309, 0
  br i1 %310, label %311, label %363

311:                                              ; preds = %304
  %312 = load %struct.set_family*, %struct.set_family** %3, align 8
  %313 = getelementptr inbounds %struct.set_family, %struct.set_family* %312, i32 0, i32 5
  %314 = load i32*, i32** %313, align 8
  store i32* %314, i32** %7, align 8
  %315 = load i32*, i32** %7, align 8
  %316 = load %struct.set_family*, %struct.set_family** %3, align 8
  %317 = getelementptr inbounds %struct.set_family, %struct.set_family* %316, i32 0, i32 3
  %318 = load i32, i32* %317, align 4
  %319 = load %struct.set_family*, %struct.set_family** %3, align 8
  %320 = getelementptr inbounds %struct.set_family, %struct.set_family* %319, i32 0, i32 0
  %321 = load i32, i32* %320, align 8
  %322 = mul nsw i32 %318, %321
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds i32, i32* %315, i64 %323
  store i32* %324, i32** %9, align 8
  br label %325

325:                                              ; preds = %355, %311
  %326 = load i32*, i32** %7, align 8
  %327 = load i32*, i32** %9, align 8
  %328 = icmp ult i32* %326, %327
  br i1 %328, label %329, label %362

329:                                              ; preds = %325
  %330 = load i32*, i32** %7, align 8
  %331 = getelementptr inbounds i32, i32* %330, i64 0
  %332 = load i32, i32* %331, align 4
  %333 = and i32 %332, 8192
  %334 = icmp ne i32 %333, 0
  br i1 %334, label %335, label %354

335:                                              ; preds = %329
  %336 = load i32*, i32** %7, align 8
  %337 = load i32**, i32*** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 10), align 8
  %338 = load i32, i32* %6, align 4
  %339 = sext i32 %338 to i64
  %340 = getelementptr inbounds i32*, i32** %337, i64 %339
  %341 = load i32*, i32** %340, align 8
  %342 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_disjoint to i32 (i32*, i32*, ...)*)(i32* %336, i32* %341)
  %343 = icmp ne i32 %342, 0
  br i1 %343, label %344, label %353

344:                                              ; preds = %335
  %345 = load i32*, i32** %7, align 8
  %346 = getelementptr inbounds i32, i32* %345, i64 0
  %347 = load i32, i32* %346, align 4
  %348 = and i32 %347, -8193
  store i32 %348, i32* %346, align 4
  %349 = load %struct.set_family*, %struct.set_family** %3, align 8
  %350 = getelementptr inbounds %struct.set_family, %struct.set_family* %349, i32 0, i32 4
  %351 = load i32, i32* %350, align 8
  %352 = add nsw i32 %351, -1
  store i32 %352, i32* %350, align 8
  br label %353

353:                                              ; preds = %344, %335
  br label %354

354:                                              ; preds = %353, %329
  br label %355

355:                                              ; preds = %354
  %356 = load %struct.set_family*, %struct.set_family** %3, align 8
  %357 = getelementptr inbounds %struct.set_family, %struct.set_family* %356, i32 0, i32 0
  %358 = load i32, i32* %357, align 8
  %359 = load i32*, i32** %7, align 8
  %360 = sext i32 %358 to i64
  %361 = getelementptr inbounds i32, i32* %359, i64 %360
  store i32* %361, i32** %7, align 8
  br label %325

362:                                              ; preds = %325
  br label %363

363:                                              ; preds = %362, %304
  br label %364

364:                                              ; preds = %363
  %365 = load i32, i32* %6, align 4
  %366 = add nsw i32 %365, 1
  store i32 %366, i32* %6, align 4
  br label %300

367:                                              ; preds = %300
  %368 = load %struct.set_family*, %struct.set_family** %3, align 8
  %369 = getelementptr inbounds %struct.set_family, %struct.set_family* %368, i32 0, i32 3
  %370 = load i32, i32* %369, align 4
  %371 = load %struct.set_family*, %struct.set_family** %3, align 8
  %372 = getelementptr inbounds %struct.set_family, %struct.set_family* %371, i32 0, i32 4
  %373 = load i32, i32* %372, align 8
  %374 = icmp ne i32 %370, %373
  br i1 %374, label %375, label %378

375:                                              ; preds = %367
  %376 = load %struct.set_family*, %struct.set_family** %3, align 8
  %377 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_inactive to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %376)
  store %struct.set_family* %377, %struct.set_family** %3, align 8
  br label %378

378:                                              ; preds = %375, %367
  %379 = load %struct.set_family*, %struct.set_family** %3, align 8
  ret %struct.set_family* %379
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @map_cover_to_unate(i32** %0) #0 {
  %2 = alloca i32**, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca %struct.set_family*, align 8
  %10 = alloca i32**, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32** %0, i32*** %2, align 8
  %13 = load i32**, i32*** %2, align 8
  %14 = getelementptr inbounds i32*, i32** %13, i64 1
  %15 = load i32*, i32** %14, align 8
  %16 = bitcast i32* %15 to i32**
  %17 = load i32**, i32*** %2, align 8
  %18 = ptrtoint i32** %16 to i64
  %19 = ptrtoint i32** %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 8
  %22 = sub nsw i64 %21, 3
  %23 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 5), align 4
  %24 = call %struct.set_family* (i64, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i64, i32, ...)*)(i64 %22, i32 %23)
  store %struct.set_family* %24, %struct.set_family** %9, align 8
  %25 = load i32**, i32*** %2, align 8
  %26 = getelementptr inbounds i32*, i32** %25, i64 1
  %27 = load i32*, i32** %26, align 8
  %28 = bitcast i32* %27 to i32**
  %29 = load i32**, i32*** %2, align 8
  %30 = ptrtoint i32** %28 to i64
  %31 = ptrtoint i32** %29 to i64
  %32 = sub i64 %30, %31
  %33 = sdiv exact i64 %32, 8
  %34 = sub nsw i64 %33, 3
  %35 = trunc i64 %34 to i32
  %36 = load %struct.set_family*, %struct.set_family** %9, align 8
  %37 = getelementptr inbounds %struct.set_family, %struct.set_family* %36, i32 0, i32 3
  store i32 %35, i32* %37, align 4
  %38 = load %struct.set_family*, %struct.set_family** %9, align 8
  %39 = getelementptr inbounds %struct.set_family, %struct.set_family* %38, i32 0, i32 5
  %40 = load i32*, i32** %39, align 8
  store i32* %40, i32** %7, align 8
  store i32 0, i32* %12, align 4
  br label %41

41:                                               ; preds = %53, %1
  %42 = load i32, i32* %12, align 4
  %43 = load %struct.set_family*, %struct.set_family** %9, align 8
  %44 = getelementptr inbounds %struct.set_family, %struct.set_family* %43, i32 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %42, %45
  br i1 %46, label %47, label %62

47:                                               ; preds = %41
  %48 = load i32*, i32** %7, align 8
  %49 = load %struct.set_family*, %struct.set_family** %9, align 8
  %50 = getelementptr inbounds %struct.set_family, %struct.set_family* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %48, i32 %51)
  br label %53

53:                                               ; preds = %47
  %54 = load %struct.set_family*, %struct.set_family** %9, align 8
  %55 = getelementptr inbounds %struct.set_family, %struct.set_family* %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = load i32*, i32** %7, align 8
  %58 = sext i32 %56 to i64
  %59 = getelementptr inbounds i32, i32* %57, i64 %58
  store i32* %59, i32** %7, align 8
  %60 = load i32, i32* %12, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %12, align 4
  br label %41

62:                                               ; preds = %41
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  br label %63

63:                                               ; preds = %131, %62
  %64 = load i32, i32* %12, align 4
  %65 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %66 = icmp slt i32 %64, %65
  br i1 %66, label %67, label %134

67:                                               ; preds = %63
  %68 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 0), align 8
  %69 = load i32, i32* %12, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, i32* %68, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %130

74:                                               ; preds = %67
  %75 = load i32, i32* %11, align 4
  %76 = load i32, i32* getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 5), align 4
  %77 = icmp sle i32 %75, %76
  br i1 %77, label %78, label %79

78:                                               ; preds = %74
  br label %80

79:                                               ; preds = %74
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.637, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.638, i64 0, i64 0), i32 29, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__PRETTY_FUNCTION__.map_cover_to_unate, i64 0, i64 0)) #10
  unreachable

80:                                               ; preds = %78
  %81 = load i32, i32* %12, align 4
  %82 = ashr i32 %81, 5
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %3, align 4
  %84 = load i32, i32* %12, align 4
  %85 = and i32 %84, 31
  %86 = shl i32 1, %85
  store i32 %86, i32* %5, align 4
  %87 = load i32, i32* %11, align 4
  %88 = ashr i32 %87, 5
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %4, align 4
  %90 = load i32, i32* %11, align 4
  %91 = and i32 %90, 31
  %92 = shl i32 1, %91
  store i32 %92, i32* %6, align 4
  %93 = load %struct.set_family*, %struct.set_family** %9, align 8
  %94 = getelementptr inbounds %struct.set_family, %struct.set_family* %93, i32 0, i32 5
  %95 = load i32*, i32** %94, align 8
  store i32* %95, i32** %8, align 8
  %96 = load i32**, i32*** %2, align 8
  %97 = getelementptr inbounds i32*, i32** %96, i64 2
  store i32** %97, i32*** %10, align 8
  br label %98

98:                                               ; preds = %120, %80
  %99 = load i32**, i32*** %10, align 8
  %100 = getelementptr inbounds i32*, i32** %99, i32 1
  store i32** %100, i32*** %10, align 8
  %101 = load i32*, i32** %99, align 8
  store i32* %101, i32** %7, align 8
  %102 = icmp ne i32* %101, null
  br i1 %102, label %103, label %127

103:                                              ; preds = %98
  %104 = load i32*, i32** %7, align 8
  %105 = load i32, i32* %3, align 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i32, i32* %104, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = load i32, i32* %5, align 4
  %110 = and i32 %108, %109
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %120

112:                                              ; preds = %103
  %113 = load i32, i32* %6, align 4
  %114 = load i32*, i32** %8, align 8
  %115 = load i32, i32* %4, align 4
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds i32, i32* %114, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = or i32 %118, %113
  store i32 %119, i32* %117, align 4
  br label %120

120:                                              ; preds = %112, %103
  %121 = load %struct.set_family*, %struct.set_family** %9, align 8
  %122 = getelementptr inbounds %struct.set_family, %struct.set_family* %121, i32 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = load i32*, i32** %8, align 8
  %125 = sext i32 %123 to i64
  %126 = getelementptr inbounds i32, i32* %124, i64 %125
  store i32* %126, i32** %8, align 8
  br label %98

127:                                              ; preds = %98
  %128 = load i32, i32* %11, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %11, align 4
  br label %130

130:                                              ; preds = %127, %67
  br label %131

131:                                              ; preds = %130
  %132 = load i32, i32* %12, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %12, align 4
  br label %63

134:                                              ; preds = %63
  %135 = load %struct.set_family*, %struct.set_family** %9, align 8
  ret %struct.set_family* %135
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @map_unate_to_cover(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca %struct.set_family*, align 8
  %13 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %14 = load %struct.set_family*, %struct.set_family** %2, align 8
  %15 = getelementptr inbounds %struct.set_family, %struct.set_family* %14, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %18 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %16, i32 %17)
  store %struct.set_family* %18, %struct.set_family** %12, align 8
  %19 = load %struct.set_family*, %struct.set_family** %2, align 8
  %20 = getelementptr inbounds %struct.set_family, %struct.set_family* %19, i32 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = load %struct.set_family*, %struct.set_family** %12, align 8
  %23 = getelementptr inbounds %struct.set_family, %struct.set_family* %22, i32 0, i32 3
  store i32 %21, i32* %23, align 4
  %24 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %25 = sext i32 %24 to i64
  %26 = mul i64 4, %25
  %27 = call noalias i8* @malloc(i64 %26) #7
  %28 = bitcast i8* %27 to i32*
  store i32* %28, i32** %10, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %8, align 4
  br label %29

29:                                               ; preds = %48, %1
  %30 = load i32, i32* %8, align 4
  %31 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 1), align 4
  %32 = icmp slt i32 %30, %31
  br i1 %32, label %33, label %51

33:                                               ; preds = %29
  %34 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 3), align 8
  %35 = load i32, i32* %8, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %34, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %33
  %41 = load i32, i32* %8, align 4
  %42 = load i32*, i32** %10, align 8
  %43 = load i32, i32* %9, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %9, align 4
  %45 = sext i32 %43 to i64
  %46 = getelementptr inbounds i32, i32* %42, i64 %45
  store i32 %41, i32* %46, align 4
  br label %47

47:                                               ; preds = %40, %33
  br label %48

48:                                               ; preds = %47
  %49 = load i32, i32* %8, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %8, align 4
  br label %29

51:                                               ; preds = %29
  %52 = load %struct.set_family*, %struct.set_family** %12, align 8
  %53 = getelementptr inbounds %struct.set_family, %struct.set_family* %52, i32 0, i32 5
  %54 = load i32*, i32** %53, align 8
  store i32* %54, i32** %7, align 8
  %55 = load %struct.set_family*, %struct.set_family** %2, align 8
  %56 = getelementptr inbounds %struct.set_family, %struct.set_family* %55, i32 0, i32 5
  %57 = load i32*, i32** %56, align 8
  store i32* %57, i32** %6, align 8
  %58 = load i32*, i32** %6, align 8
  %59 = load %struct.set_family*, %struct.set_family** %2, align 8
  %60 = getelementptr inbounds %struct.set_family, %struct.set_family* %59, i32 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = load %struct.set_family*, %struct.set_family** %2, align 8
  %63 = getelementptr inbounds %struct.set_family, %struct.set_family* %62, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = mul nsw i32 %61, %64
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i32, i32* %58, i64 %66
  store i32* %67, i32** %11, align 8
  br label %68

68:                                               ; preds = %180, %51
  %69 = load i32*, i32** %6, align 8
  %70 = load i32*, i32** %11, align 8
  %71 = icmp ult i32* %69, %70
  br i1 %71, label %72, label %187

72:                                               ; preds = %68
  %73 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %74 = icmp sle i32 %73, 32
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  br label %81

76:                                               ; preds = %72
  %77 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %78 = sub nsw i32 %77, 1
  %79 = ashr i32 %78, 5
  %80 = add nsw i32 %79, 1
  br label %81

81:                                               ; preds = %76, %75
  %82 = phi i32 [ 1, %75 ], [ %80, %76 ]
  store i32 %82, i32* %13, align 4
  %83 = load i32, i32* %13, align 4
  %84 = load i32*, i32** %7, align 8
  store i32 %83, i32* %84, align 4
  %85 = load i32, i32* %13, align 4
  %86 = mul nsw i32 %85, 32
  %87 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %88 = sub nsw i32 %86, %87
  %89 = lshr i32 -1, %88
  %90 = load i32*, i32** %7, align 8
  %91 = load i32, i32* %13, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i32, i32* %90, i64 %92
  store i32 %89, i32* %93, align 4
  br label %94

94:                                               ; preds = %98, %81
  %95 = load i32, i32* %13, align 4
  %96 = add nsw i32 %95, -1
  store i32 %96, i32* %13, align 4
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %98, label %103

98:                                               ; preds = %94
  %99 = load i32*, i32** %7, align 8
  %100 = load i32, i32* %13, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, i32* %99, i64 %101
  store i32 -1, i32* %102, align 4
  br label %94

103:                                              ; preds = %94
  store i32 0, i32* %4, align 4
  br label %104

104:                                              ; preds = %170, %103
  %105 = load i32, i32* %4, align 4
  %106 = load i32, i32* %9, align 4
  %107 = icmp slt i32 %105, %106
  br i1 %107, label %108, label %173

108:                                              ; preds = %104
  %109 = load i32*, i32** %6, align 8
  %110 = load i32, i32* %4, align 4
  %111 = ashr i32 %110, 5
  %112 = add nsw i32 %111, 1
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, i32* %109, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = load i32, i32* %4, align 4
  %117 = and i32 %116, 31
  %118 = shl i32 1, %117
  %119 = and i32 %115, %118
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %121, label %169

121:                                              ; preds = %108
  %122 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 4), align 8
  %123 = load i32*, i32** %10, align 8
  %124 = load i32, i32* %4, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i32, i32* %123, i64 %125
  %127 = load i32, i32* %126, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i32, i32* %122, i64 %128
  %130 = load i32, i32* %129, align 4
  store i32 %130, i32* %5, align 4
  %131 = load i32*, i32** getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 3), align 8
  %132 = load i32*, i32** %10, align 8
  %133 = load i32, i32* %4, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i32, i32* %132, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i32, i32* %131, i64 %137
  %139 = load i32, i32* %138, align 4
  store i32 %139, i32* %3, align 4
  br label %140

140:                                              ; preds = %165, %121
  %141 = load i32, i32* %3, align 4
  %142 = load i32, i32* %5, align 4
  %143 = icmp sle i32 %141, %142
  br i1 %143, label %144, label %168

144:                                              ; preds = %140
  %145 = load i32*, i32** getelementptr inbounds (%struct.cdata_struct, %struct.cdata_struct* @cdata, i32 0, i32 0), align 8
  %146 = load i32, i32* %3, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i32, i32* %145, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %164

151:                                              ; preds = %144
  %152 = load i32, i32* %3, align 4
  %153 = and i32 %152, 31
  %154 = shl i32 1, %153
  %155 = xor i32 %154, -1
  %156 = load i32*, i32** %7, align 8
  %157 = load i32, i32* %3, align 4
  %158 = ashr i32 %157, 5
  %159 = add nsw i32 %158, 1
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i32, i32* %156, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = and i32 %162, %155
  store i32 %163, i32* %161, align 4
  br label %164

164:                                              ; preds = %151, %144
  br label %165

165:                                              ; preds = %164
  %166 = load i32, i32* %3, align 4
  %167 = add nsw i32 %166, 1
  store i32 %167, i32* %3, align 4
  br label %140

168:                                              ; preds = %140
  br label %169

169:                                              ; preds = %168, %108
  br label %170

170:                                              ; preds = %169
  %171 = load i32, i32* %4, align 4
  %172 = add nsw i32 %171, 1
  store i32 %172, i32* %4, align 4
  br label %104

173:                                              ; preds = %104
  %174 = load %struct.set_family*, %struct.set_family** %12, align 8
  %175 = getelementptr inbounds %struct.set_family, %struct.set_family* %174, i32 0, i32 0
  %176 = load i32, i32* %175, align 8
  %177 = load i32*, i32** %7, align 8
  %178 = sext i32 %176 to i64
  %179 = getelementptr inbounds i32, i32* %177, i64 %178
  store i32* %179, i32** %7, align 8
  br label %180

180:                                              ; preds = %173
  %181 = load %struct.set_family*, %struct.set_family** %2, align 8
  %182 = getelementptr inbounds %struct.set_family, %struct.set_family* %181, i32 0, i32 0
  %183 = load i32, i32* %182, align 8
  %184 = load i32*, i32** %6, align 8
  %185 = sext i32 %183 to i64
  %186 = getelementptr inbounds i32, i32* %184, i64 %185
  store i32* %186, i32** %6, align 8
  br label %68

187:                                              ; preds = %68
  %188 = load i32*, i32** %10, align 8
  %189 = icmp ne i32* %188, null
  br i1 %189, label %190, label %193

190:                                              ; preds = %187
  %191 = load i32*, i32** %10, align 8
  %192 = bitcast i32* %191 to i8*
  call void @free(i8* %192) #7
  store i32* null, i32** %10, align 8
  br label %193

193:                                              ; preds = %190, %187
  %194 = load %struct.set_family*, %struct.set_family** %12, align 8
  ret %struct.set_family* %194
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @unate_compl(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %5 = load %struct.set_family*, %struct.set_family** %2, align 8
  %6 = getelementptr inbounds %struct.set_family, %struct.set_family* %5, i32 0, i32 5
  %7 = load i32*, i32** %6, align 8
  store i32* %7, i32** %3, align 8
  %8 = load i32*, i32** %3, align 8
  %9 = load %struct.set_family*, %struct.set_family** %2, align 8
  %10 = getelementptr inbounds %struct.set_family, %struct.set_family* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = load %struct.set_family*, %struct.set_family** %2, align 8
  %13 = getelementptr inbounds %struct.set_family, %struct.set_family* %12, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = mul nsw i32 %11, %14
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i32, i32* %8, i64 %16
  store i32* %17, i32** %4, align 8
  br label %18

18:                                               ; preds = %34, %1
  %19 = load i32*, i32** %3, align 8
  %20 = load i32*, i32** %4, align 8
  %21 = icmp ult i32* %19, %20
  br i1 %21, label %22, label %41

22:                                               ; preds = %18
  %23 = load i32*, i32** %3, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 0
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 65535
  store i32 %26, i32* %24, align 4
  %27 = load i32*, i32** %3, align 8
  %28 = call i32 (i32*, ...) bitcast (i32 (i32*)* @set_ord to i32 (i32*, ...)*)(i32* %27)
  %29 = shl i32 %28, 16
  %30 = load i32*, i32** %3, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 0
  %32 = load i32, i32* %31, align 4
  %33 = or i32 %32, %29
  store i32 %33, i32* %31, align 4
  br label %34

34:                                               ; preds = %22
  %35 = load %struct.set_family*, %struct.set_family** %2, align 8
  %36 = getelementptr inbounds %struct.set_family, %struct.set_family* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = load i32*, i32** %3, align 8
  %39 = sext i32 %37 to i64
  %40 = getelementptr inbounds i32, i32* %38, i64 %39
  store i32* %40, i32** %3, align 8
  br label %18

41:                                               ; preds = %18
  %42 = load %struct.set_family*, %struct.set_family** %2, align 8
  %43 = call %struct.set_family* @unate_complement(%struct.set_family* %42)
  store %struct.set_family* %43, %struct.set_family** %2, align 8
  %44 = load %struct.set_family*, %struct.set_family** %2, align 8
  %45 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_rev_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %44)
  store %struct.set_family* %45, %struct.set_family** %2, align 8
  %46 = load %struct.set_family*, %struct.set_family** %2, align 8
  ret %struct.set_family* %46
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @unate_complement(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %2, align 8
  %11 = load %struct.set_family*, %struct.set_family** %2, align 8
  %12 = getelementptr inbounds %struct.set_family, %struct.set_family* %11, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %38

15:                                               ; preds = %1
  %16 = load %struct.set_family*, %struct.set_family** %2, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %16)
  %17 = load %struct.set_family*, %struct.set_family** %2, align 8
  %18 = getelementptr inbounds %struct.set_family, %struct.set_family* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %19)
  store %struct.set_family* %20, %struct.set_family** %3, align 8
  %21 = load %struct.set_family*, %struct.set_family** %3, align 8
  %22 = getelementptr inbounds %struct.set_family, %struct.set_family* %21, i32 0, i32 5
  %23 = load i32*, i32** %22, align 8
  %24 = load %struct.set_family*, %struct.set_family** %3, align 8
  %25 = getelementptr inbounds %struct.set_family, %struct.set_family* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = load %struct.set_family*, %struct.set_family** %3, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 4
  %31 = mul nsw i32 %26, %29
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i32, i32* %23, i64 %32
  %34 = load %struct.set_family*, %struct.set_family** %2, align 8
  %35 = getelementptr inbounds %struct.set_family, %struct.set_family* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %33, i32 %36)
  br label %336

38:                                               ; preds = %1
  %39 = load %struct.set_family*, %struct.set_family** %2, align 8
  %40 = getelementptr inbounds %struct.set_family, %struct.set_family* %39, i32 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %108

43:                                               ; preds = %38
  %44 = load %struct.set_family*, %struct.set_family** %2, align 8
  %45 = getelementptr inbounds %struct.set_family, %struct.set_family* %44, i32 0, i32 5
  %46 = load i32*, i32** %45, align 8
  store i32* %46, i32** %4, align 8
  %47 = load %struct.set_family*, %struct.set_family** %2, align 8
  %48 = getelementptr inbounds %struct.set_family, %struct.set_family* %47, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = load %struct.set_family*, %struct.set_family** %2, align 8
  %51 = getelementptr inbounds %struct.set_family, %struct.set_family* %50, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %49, i32 %52)
  store %struct.set_family* %53, %struct.set_family** %3, align 8
  store i32 0, i32* %7, align 4
  br label %54

54:                                               ; preds = %103, %43
  %55 = load i32, i32* %7, align 4
  %56 = load %struct.set_family*, %struct.set_family** %2, align 8
  %57 = getelementptr inbounds %struct.set_family, %struct.set_family* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp slt i32 %55, %58
  br i1 %59, label %60, label %106

60:                                               ; preds = %54
  %61 = load i32*, i32** %4, align 8
  %62 = load i32, i32* %7, align 4
  %63 = ashr i32 %62, 5
  %64 = add nsw i32 %63, 1
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i32, i32* %61, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = load i32, i32* %7, align 4
  %69 = and i32 %68, 31
  %70 = shl i32 1, %69
  %71 = and i32 %67, %70
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %102

73:                                               ; preds = %60
  %74 = load %struct.set_family*, %struct.set_family** %3, align 8
  %75 = getelementptr inbounds %struct.set_family, %struct.set_family* %74, i32 0, i32 5
  %76 = load i32*, i32** %75, align 8
  %77 = load %struct.set_family*, %struct.set_family** %3, align 8
  %78 = getelementptr inbounds %struct.set_family, %struct.set_family* %77, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = load %struct.set_family*, %struct.set_family** %3, align 8
  %81 = getelementptr inbounds %struct.set_family, %struct.set_family* %80, i32 0, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %81, align 4
  %84 = mul nsw i32 %79, %82
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i32, i32* %76, i64 %85
  %87 = load %struct.set_family*, %struct.set_family** %2, align 8
  %88 = getelementptr inbounds %struct.set_family, %struct.set_family* %87, i32 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %86, i32 %89)
  store i32* %90, i32** %5, align 8
  %91 = load i32, i32* %7, align 4
  %92 = and i32 %91, 31
  %93 = shl i32 1, %92
  %94 = load i32*, i32** %5, align 8
  %95 = load i32, i32* %7, align 4
  %96 = ashr i32 %95, 5
  %97 = add nsw i32 %96, 1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, i32* %94, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = or i32 %100, %93
  store i32 %101, i32* %99, align 4
  br label %102

102:                                              ; preds = %73, %60
  br label %103

103:                                              ; preds = %102
  %104 = load i32, i32* %7, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %7, align 4
  br label %54

106:                                              ; preds = %54
  %107 = load %struct.set_family*, %struct.set_family** %2, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %107)
  br label %335

108:                                              ; preds = %38
  %109 = load %struct.set_family*, %struct.set_family** %2, align 8
  %110 = getelementptr inbounds %struct.set_family, %struct.set_family* %109, i32 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = icmp sle i32 %111, 32
  br i1 %112, label %113, label %114

113:                                              ; preds = %108
  br label %122

114:                                              ; preds = %108
  %115 = load %struct.set_family*, %struct.set_family** %2, align 8
  %116 = getelementptr inbounds %struct.set_family, %struct.set_family* %115, i32 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = sub nsw i32 %117, 1
  %119 = ashr i32 %118, 5
  %120 = add nsw i32 %119, 1
  %121 = add nsw i32 %120, 1
  br label %122

122:                                              ; preds = %114, %113
  %123 = phi i32 [ 2, %113 ], [ %121, %114 ]
  %124 = sext i32 %123 to i64
  %125 = mul i64 4, %124
  %126 = call noalias i8* @malloc(i64 %125) #7
  %127 = bitcast i8* %126 to i32*
  %128 = load %struct.set_family*, %struct.set_family** %2, align 8
  %129 = getelementptr inbounds %struct.set_family, %struct.set_family* %128, i32 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %127, i32 %130)
  store i32* %131, i32** %6, align 8
  %132 = load %struct.set_family*, %struct.set_family** %2, align 8
  %133 = getelementptr inbounds %struct.set_family, %struct.set_family* %132, i32 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = add nsw i32 %134, 1
  store i32 %135, i32* %9, align 4
  %136 = load %struct.set_family*, %struct.set_family** %2, align 8
  %137 = getelementptr inbounds %struct.set_family, %struct.set_family* %136, i32 0, i32 5
  %138 = load i32*, i32** %137, align 8
  store i32* %138, i32** %4, align 8
  store i32 0, i32* %7, align 4
  br label %139

139:                                              ; preds = %174, %122
  %140 = load i32, i32* %7, align 4
  %141 = load %struct.set_family*, %struct.set_family** %2, align 8
  %142 = getelementptr inbounds %struct.set_family, %struct.set_family* %141, i32 0, i32 3
  %143 = load i32, i32* %142, align 4
  %144 = icmp slt i32 %140, %143
  br i1 %144, label %145, label %183

145:                                              ; preds = %139
  %146 = load i32*, i32** %4, align 8
  %147 = getelementptr inbounds i32, i32* %146, i64 0
  %148 = load i32, i32* %147, align 4
  %149 = lshr i32 %148, 16
  %150 = load i32, i32* %9, align 4
  %151 = icmp ult i32 %149, %150
  br i1 %151, label %152, label %160

152:                                              ; preds = %145
  %153 = load i32*, i32** %6, align 8
  %154 = load i32*, i32** %4, align 8
  %155 = call i32* (i32*, i32*, ...) bitcast (i32* (i32*, i32*)* @set_copy to i32* (i32*, i32*, ...)*)(i32* %153, i32* %154)
  %156 = load i32*, i32** %4, align 8
  %157 = getelementptr inbounds i32, i32* %156, i64 0
  %158 = load i32, i32* %157, align 4
  %159 = lshr i32 %158, 16
  store i32 %159, i32* %9, align 4
  br label %173

160:                                              ; preds = %145
  %161 = load i32*, i32** %4, align 8
  %162 = getelementptr inbounds i32, i32* %161, i64 0
  %163 = load i32, i32* %162, align 4
  %164 = lshr i32 %163, 16
  %165 = load i32, i32* %9, align 4
  %166 = icmp eq i32 %164, %165
  br i1 %166, label %167, label %172

167:                                              ; preds = %160
  %168 = load i32*, i32** %6, align 8
  %169 = load i32*, i32** %6, align 8
  %170 = load i32*, i32** %4, align 8
  %171 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %168, i32* %169, i32* %170)
  br label %172

172:                                              ; preds = %167, %160
  br label %173

173:                                              ; preds = %172, %152
  br label %174

174:                                              ; preds = %173
  %175 = load %struct.set_family*, %struct.set_family** %2, align 8
  %176 = getelementptr inbounds %struct.set_family, %struct.set_family* %175, i32 0, i32 0
  %177 = load i32, i32* %176, align 8
  %178 = load i32*, i32** %4, align 8
  %179 = sext i32 %177 to i64
  %180 = getelementptr inbounds i32, i32* %178, i64 %179
  store i32* %180, i32** %4, align 8
  %181 = load i32, i32* %7, align 4
  %182 = add nsw i32 %181, 1
  store i32 %182, i32* %7, align 4
  br label %139

183:                                              ; preds = %139
  %184 = load i32, i32* %9, align 4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %190

186:                                              ; preds = %183
  %187 = load %struct.set_family*, %struct.set_family** %2, align 8
  %188 = getelementptr inbounds %struct.set_family, %struct.set_family* %187, i32 0, i32 3
  store i32 0, i32* %188, align 4
  %189 = load %struct.set_family*, %struct.set_family** %2, align 8
  store %struct.set_family* %189, %struct.set_family** %3, align 8
  br label %328

190:                                              ; preds = %183
  %191 = load i32, i32* %9, align 4
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %193, label %223

193:                                              ; preds = %190
  %194 = load %struct.set_family*, %struct.set_family** %2, align 8
  %195 = load i32*, i32** %6, align 8
  %196 = call %struct.set_family* @abs_covered_many(%struct.set_family* %194, i32* %195)
  %197 = call %struct.set_family* @unate_complement(%struct.set_family* %196)
  store %struct.set_family* %197, %struct.set_family** %3, align 8
  %198 = load %struct.set_family*, %struct.set_family** %2, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %198)
  %199 = load %struct.set_family*, %struct.set_family** %3, align 8
  %200 = getelementptr inbounds %struct.set_family, %struct.set_family* %199, i32 0, i32 5
  %201 = load i32*, i32** %200, align 8
  store i32* %201, i32** %4, align 8
  store i32 0, i32* %7, align 4
  br label %202

202:                                              ; preds = %213, %193
  %203 = load i32, i32* %7, align 4
  %204 = load %struct.set_family*, %struct.set_family** %3, align 8
  %205 = getelementptr inbounds %struct.set_family, %struct.set_family* %204, i32 0, i32 3
  %206 = load i32, i32* %205, align 4
  %207 = icmp slt i32 %203, %206
  br i1 %207, label %208, label %222

208:                                              ; preds = %202
  %209 = load i32*, i32** %4, align 8
  %210 = load i32*, i32** %4, align 8
  %211 = load i32*, i32** %6, align 8
  %212 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_or to i32* (i32*, i32*, i32*, ...)*)(i32* %209, i32* %210, i32* %211)
  br label %213

213:                                              ; preds = %208
  %214 = load %struct.set_family*, %struct.set_family** %3, align 8
  %215 = getelementptr inbounds %struct.set_family, %struct.set_family* %214, i32 0, i32 0
  %216 = load i32, i32* %215, align 8
  %217 = load i32*, i32** %4, align 8
  %218 = sext i32 %216 to i64
  %219 = getelementptr inbounds i32, i32* %217, i64 %218
  store i32* %219, i32** %4, align 8
  %220 = load i32, i32* %7, align 4
  %221 = add nsw i32 %220, 1
  store i32 %221, i32* %7, align 4
  br label %202

222:                                              ; preds = %202
  br label %327

223:                                              ; preds = %190
  %224 = load %struct.set_family*, %struct.set_family** %2, align 8
  %225 = load i32*, i32** %6, align 8
  %226 = call i32 @abs_select_restricted(%struct.set_family* %224, i32* %225)
  store i32 %226, i32* %8, align 4
  %227 = load %struct.set_family*, %struct.set_family** %2, align 8
  %228 = load i32, i32* %8, align 4
  %229 = call %struct.set_family* @abs_covered(%struct.set_family* %227, i32 %228)
  %230 = call %struct.set_family* @unate_complement(%struct.set_family* %229)
  store %struct.set_family* %230, %struct.set_family** %3, align 8
  %231 = load %struct.set_family*, %struct.set_family** %3, align 8
  %232 = getelementptr inbounds %struct.set_family, %struct.set_family* %231, i32 0, i32 5
  %233 = load i32*, i32** %232, align 8
  store i32* %233, i32** %4, align 8
  store i32 0, i32* %7, align 4
  br label %234

234:                                              ; preds = %252, %223
  %235 = load i32, i32* %7, align 4
  %236 = load %struct.set_family*, %struct.set_family** %3, align 8
  %237 = getelementptr inbounds %struct.set_family, %struct.set_family* %236, i32 0, i32 3
  %238 = load i32, i32* %237, align 4
  %239 = icmp slt i32 %235, %238
  br i1 %239, label %240, label %261

240:                                              ; preds = %234
  %241 = load i32, i32* %8, align 4
  %242 = and i32 %241, 31
  %243 = shl i32 1, %242
  %244 = load i32*, i32** %4, align 8
  %245 = load i32, i32* %8, align 4
  %246 = ashr i32 %245, 5
  %247 = add nsw i32 %246, 1
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i32, i32* %244, i64 %248
  %250 = load i32, i32* %249, align 4
  %251 = or i32 %250, %243
  store i32 %251, i32* %249, align 4
  br label %252

252:                                              ; preds = %240
  %253 = load %struct.set_family*, %struct.set_family** %3, align 8
  %254 = getelementptr inbounds %struct.set_family, %struct.set_family* %253, i32 0, i32 0
  %255 = load i32, i32* %254, align 8
  %256 = load i32*, i32** %4, align 8
  %257 = sext i32 %255 to i64
  %258 = getelementptr inbounds i32, i32* %256, i64 %257
  store i32* %258, i32** %4, align 8
  %259 = load i32, i32* %7, align 4
  %260 = add nsw i32 %259, 1
  store i32 %260, i32* %7, align 4
  br label %234

261:                                              ; preds = %234
  %262 = load %struct.set_family*, %struct.set_family** %2, align 8
  %263 = getelementptr inbounds %struct.set_family, %struct.set_family* %262, i32 0, i32 5
  %264 = load i32*, i32** %263, align 8
  store i32* %264, i32** %4, align 8
  store i32 0, i32* %7, align 4
  br label %265

265:                                              ; preds = %313, %261
  %266 = load i32, i32* %7, align 4
  %267 = load %struct.set_family*, %struct.set_family** %2, align 8
  %268 = getelementptr inbounds %struct.set_family, %struct.set_family* %267, i32 0, i32 3
  %269 = load i32, i32* %268, align 4
  %270 = icmp slt i32 %266, %269
  br i1 %270, label %271, label %322

271:                                              ; preds = %265
  %272 = load i32*, i32** %4, align 8
  %273 = load i32, i32* %8, align 4
  %274 = ashr i32 %273, 5
  %275 = add nsw i32 %274, 1
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds i32, i32* %272, i64 %276
  %278 = load i32, i32* %277, align 4
  %279 = load i32, i32* %8, align 4
  %280 = and i32 %279, 31
  %281 = shl i32 1, %280
  %282 = and i32 %278, %281
  %283 = icmp ne i32 %282, 0
  br i1 %283, label %284, label %312

284:                                              ; preds = %271
  %285 = load i32, i32* %8, align 4
  %286 = and i32 %285, 31
  %287 = shl i32 1, %286
  %288 = xor i32 %287, -1
  %289 = load i32*, i32** %4, align 8
  %290 = load i32, i32* %8, align 4
  %291 = ashr i32 %290, 5
  %292 = add nsw i32 %291, 1
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds i32, i32* %289, i64 %293
  %295 = load i32, i32* %294, align 4
  %296 = and i32 %295, %288
  store i32 %296, i32* %294, align 4
  %297 = load i32*, i32** %4, align 8
  %298 = getelementptr inbounds i32, i32* %297, i64 0
  %299 = load i32, i32* %298, align 4
  %300 = lshr i32 %299, 16
  %301 = sub i32 %300, 1
  store i32 %301, i32* %10, align 4
  %302 = load i32*, i32** %4, align 8
  %303 = getelementptr inbounds i32, i32* %302, i64 0
  %304 = load i32, i32* %303, align 4
  %305 = and i32 %304, 65535
  store i32 %305, i32* %303, align 4
  %306 = load i32, i32* %10, align 4
  %307 = shl i32 %306, 16
  %308 = load i32*, i32** %4, align 8
  %309 = getelementptr inbounds i32, i32* %308, i64 0
  %310 = load i32, i32* %309, align 4
  %311 = or i32 %310, %307
  store i32 %311, i32* %309, align 4
  br label %312

312:                                              ; preds = %284, %271
  br label %313

313:                                              ; preds = %312
  %314 = load %struct.set_family*, %struct.set_family** %2, align 8
  %315 = getelementptr inbounds %struct.set_family, %struct.set_family* %314, i32 0, i32 0
  %316 = load i32, i32* %315, align 8
  %317 = load i32*, i32** %4, align 8
  %318 = sext i32 %316 to i64
  %319 = getelementptr inbounds i32, i32* %317, i64 %318
  store i32* %319, i32** %4, align 8
  %320 = load i32, i32* %7, align 4
  %321 = add nsw i32 %320, 1
  store i32 %321, i32* %7, align 4
  br label %265

322:                                              ; preds = %265
  %323 = load %struct.set_family*, %struct.set_family** %3, align 8
  %324 = load %struct.set_family*, %struct.set_family** %2, align 8
  %325 = call %struct.set_family* @unate_complement(%struct.set_family* %324)
  %326 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_append to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %323, %struct.set_family* %325)
  store %struct.set_family* %326, %struct.set_family** %3, align 8
  br label %327

327:                                              ; preds = %322, %222
  br label %328

328:                                              ; preds = %327, %186
  %329 = load i32*, i32** %6, align 8
  %330 = icmp ne i32* %329, null
  br i1 %330, label %331, label %334

331:                                              ; preds = %328
  %332 = load i32*, i32** %6, align 8
  %333 = bitcast i32* %332 to i8*
  call void @free(i8* %333) #7
  store i32* null, i32** %6, align 8
  br label %334

334:                                              ; preds = %331, %328
  br label %335

335:                                              ; preds = %334, %106
  br label %336

336:                                              ; preds = %335, %15
  %337 = load %struct.set_family*, %struct.set_family** %3, align 8
  ret %struct.set_family* %337
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.set_family* @abs_covered_many(%struct.set_family* %0, i32* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32* %1, i32** %4, align 8
  %10 = load %struct.set_family*, %struct.set_family** %3, align 8
  %11 = getelementptr inbounds %struct.set_family, %struct.set_family* %10, i32 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = load %struct.set_family*, %struct.set_family** %3, align 8
  %14 = getelementptr inbounds %struct.set_family, %struct.set_family* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %12, i32 %15)
  store %struct.set_family* %16, %struct.set_family** %8, align 8
  %17 = load %struct.set_family*, %struct.set_family** %8, align 8
  %18 = getelementptr inbounds %struct.set_family, %struct.set_family* %17, i32 0, i32 5
  %19 = load i32*, i32** %18, align 8
  store i32* %19, i32** %7, align 8
  %20 = load %struct.set_family*, %struct.set_family** %3, align 8
  %21 = getelementptr inbounds %struct.set_family, %struct.set_family* %20, i32 0, i32 5
  %22 = load i32*, i32** %21, align 8
  store i32* %22, i32** %6, align 8
  %23 = load i32*, i32** %6, align 8
  %24 = load %struct.set_family*, %struct.set_family** %3, align 8
  %25 = getelementptr inbounds %struct.set_family, %struct.set_family* %24, i32 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = load %struct.set_family*, %struct.set_family** %3, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = mul nsw i32 %26, %29
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %23, i64 %31
  store i32* %32, i32** %5, align 8
  br label %33

33:                                               ; preds = %73, %2
  %34 = load i32*, i32** %6, align 8
  %35 = load i32*, i32** %5, align 8
  %36 = icmp ult i32* %34, %35
  br i1 %36, label %37, label %80

37:                                               ; preds = %33
  %38 = load i32*, i32** %6, align 8
  %39 = load i32*, i32** %4, align 8
  %40 = call i32 (i32*, i32*, ...) bitcast (i32 (i32*, i32*)* @setp_disjoint to i32 (i32*, i32*, ...)*)(i32* %38, i32* %39)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %72

42:                                               ; preds = %37
  %43 = load i32*, i32** %6, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 0
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 1023
  store i32 %46, i32* %9, align 4
  br label %47

47:                                               ; preds = %57, %42
  %48 = load i32*, i32** %6, align 8
  %49 = load i32, i32* %9, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, i32* %48, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %7, align 8
  %54 = load i32, i32* %9, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %53, i64 %55
  store i32 %52, i32* %56, align 4
  br label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %9, align 4
  %59 = add nsw i32 %58, -1
  store i32 %59, i32* %9, align 4
  %60 = icmp sge i32 %59, 0
  br i1 %60, label %47, label %61

61:                                               ; preds = %57
  %62 = load %struct.set_family*, %struct.set_family** %8, align 8
  %63 = getelementptr inbounds %struct.set_family, %struct.set_family* %62, i32 0, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %63, align 4
  %66 = load %struct.set_family*, %struct.set_family** %8, align 8
  %67 = getelementptr inbounds %struct.set_family, %struct.set_family* %66, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = load i32*, i32** %7, align 8
  %70 = sext i32 %68 to i64
  %71 = getelementptr inbounds i32, i32* %69, i64 %70
  store i32* %71, i32** %7, align 8
  br label %72

72:                                               ; preds = %61, %37
  br label %73

73:                                               ; preds = %72
  %74 = load %struct.set_family*, %struct.set_family** %3, align 8
  %75 = getelementptr inbounds %struct.set_family, %struct.set_family* %74, i32 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = load i32*, i32** %6, align 8
  %78 = sext i32 %76 to i64
  %79 = getelementptr inbounds i32, i32* %77, i64 %78
  store i32* %79, i32** %6, align 8
  br label %33

80:                                               ; preds = %33
  %81 = load %struct.set_family*, %struct.set_family** %8, align 8
  ret %struct.set_family* %81
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @abs_select_restricted(%struct.set_family* %0, i32* %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32* %1, i32** %4, align 8
  %9 = load %struct.set_family*, %struct.set_family** %3, align 8
  %10 = load i32*, i32** %4, align 8
  %11 = call i32* (%struct.set_family*, i32*, ...) bitcast (i32* (%struct.set_family*, i32*)* @sf_count_restricted to i32* (%struct.set_family*, i32*, ...)*)(%struct.set_family* %9, i32* %10)
  store i32* %11, i32** %8, align 8
  store i32 -1, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %5, align 4
  br label %12

12:                                               ; preds = %34, %2
  %13 = load i32, i32* %5, align 4
  %14 = load %struct.set_family*, %struct.set_family** %3, align 8
  %15 = getelementptr inbounds %struct.set_family, %struct.set_family* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %13, %16
  br i1 %17, label %18, label %37

18:                                               ; preds = %12
  %19 = load i32*, i32** %8, align 8
  %20 = load i32, i32* %5, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %19, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %7, align 4
  %25 = icmp sgt i32 %23, %24
  br i1 %25, label %26, label %33

26:                                               ; preds = %18
  %27 = load i32, i32* %5, align 4
  store i32 %27, i32* %6, align 4
  %28 = load i32*, i32** %8, align 8
  %29 = load i32, i32* %5, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i32, i32* %28, i64 %30
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %7, align 4
  br label %33

33:                                               ; preds = %26, %18
  br label %34

34:                                               ; preds = %33
  %35 = load i32, i32* %5, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %5, align 4
  br label %12

37:                                               ; preds = %12
  %38 = load i32*, i32** %8, align 8
  %39 = icmp ne i32* %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = load i32*, i32** %8, align 8
  %42 = bitcast i32* %41 to i8*
  call void @free(i8* %42) #7
  store i32* null, i32** %8, align 8
  br label %43

43:                                               ; preds = %40, %37
  %44 = load i32, i32* %6, align 4
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void (i8*, ...) bitcast (void (i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4.643, i64 0, i64 0))
  br label %47

47:                                               ; preds = %46, %43
  %48 = load i32, i32* %6, align 4
  ret i32 %48
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.set_family* @abs_covered(%struct.set_family* %0, i32 %1) #0 {
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %struct.set_family*, align 8
  %9 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  store i32 %1, i32* %4, align 4
  %10 = load %struct.set_family*, %struct.set_family** %3, align 8
  %11 = getelementptr inbounds %struct.set_family, %struct.set_family* %10, i32 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = load %struct.set_family*, %struct.set_family** %3, align 8
  %14 = getelementptr inbounds %struct.set_family, %struct.set_family* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %12, i32 %15)
  store %struct.set_family* %16, %struct.set_family** %8, align 8
  %17 = load %struct.set_family*, %struct.set_family** %8, align 8
  %18 = getelementptr inbounds %struct.set_family, %struct.set_family* %17, i32 0, i32 5
  %19 = load i32*, i32** %18, align 8
  store i32* %19, i32** %7, align 8
  %20 = load %struct.set_family*, %struct.set_family** %3, align 8
  %21 = getelementptr inbounds %struct.set_family, %struct.set_family* %20, i32 0, i32 5
  %22 = load i32*, i32** %21, align 8
  store i32* %22, i32** %6, align 8
  %23 = load i32*, i32** %6, align 8
  %24 = load %struct.set_family*, %struct.set_family** %3, align 8
  %25 = getelementptr inbounds %struct.set_family, %struct.set_family* %24, i32 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = load %struct.set_family*, %struct.set_family** %3, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = mul nsw i32 %26, %29
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %23, i64 %31
  store i32* %32, i32** %5, align 8
  br label %33

33:                                               ; preds = %81, %2
  %34 = load i32*, i32** %6, align 8
  %35 = load i32*, i32** %5, align 8
  %36 = icmp ult i32* %34, %35
  br i1 %36, label %37, label %88

37:                                               ; preds = %33
  %38 = load i32*, i32** %6, align 8
  %39 = load i32, i32* %4, align 4
  %40 = ashr i32 %39, 5
  %41 = add nsw i32 %40, 1
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %38, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = load i32, i32* %4, align 4
  %46 = and i32 %45, 31
  %47 = shl i32 1, %46
  %48 = and i32 %44, %47
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %80, label %50

50:                                               ; preds = %37
  %51 = load i32*, i32** %6, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 0
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, 1023
  store i32 %54, i32* %9, align 4
  br label %55

55:                                               ; preds = %65, %50
  %56 = load i32*, i32** %6, align 8
  %57 = load i32, i32* %9, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %56, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = load i32*, i32** %7, align 8
  %62 = load i32, i32* %9, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %61, i64 %63
  store i32 %60, i32* %64, align 4
  br label %65

65:                                               ; preds = %55
  %66 = load i32, i32* %9, align 4
  %67 = add nsw i32 %66, -1
  store i32 %67, i32* %9, align 4
  %68 = icmp sge i32 %67, 0
  br i1 %68, label %55, label %69

69:                                               ; preds = %65
  %70 = load %struct.set_family*, %struct.set_family** %8, align 8
  %71 = getelementptr inbounds %struct.set_family, %struct.set_family* %70, i32 0, i32 3
  %72 = load i32, i32* %71, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %71, align 4
  %74 = load %struct.set_family*, %struct.set_family** %8, align 8
  %75 = getelementptr inbounds %struct.set_family, %struct.set_family* %74, i32 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = load i32*, i32** %7, align 8
  %78 = sext i32 %76 to i64
  %79 = getelementptr inbounds i32, i32* %77, i64 %78
  store i32* %79, i32** %7, align 8
  br label %80

80:                                               ; preds = %69, %37
  br label %81

81:                                               ; preds = %80
  %82 = load %struct.set_family*, %struct.set_family** %3, align 8
  %83 = getelementptr inbounds %struct.set_family, %struct.set_family* %82, i32 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = load i32*, i32** %6, align 8
  %86 = sext i32 %84 to i64
  %87 = getelementptr inbounds i32, i32* %85, i64 %86
  store i32* %87, i32** %6, align 8
  br label %33

88:                                               ; preds = %33
  %89 = load %struct.set_family*, %struct.set_family** %8, align 8
  ret %struct.set_family* %89
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @exact_minimum_cover(%struct.set_family* %0) #0 {
  %2 = alloca %struct.set_family*, align 8
  %3 = alloca %struct.set_family*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 8
  %12 = alloca %struct.set_family*, align 8
  %13 = alloca i64, align 8
  %14 = alloca [32 x %struct.anon.206], align 16
  %15 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %3, align 8
  %16 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  store i64 %16, i64* %13, align 8
  %17 = load %struct.set_family*, %struct.set_family** %3, align 8
  %18 = getelementptr inbounds %struct.set_family, %struct.set_family* %17, i32 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp sle i32 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %1
  %22 = load %struct.set_family*, %struct.set_family** %3, align 8
  %23 = getelementptr inbounds %struct.set_family, %struct.set_family* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %24)
  store %struct.set_family* %25, %struct.set_family** %2, align 8
  br label %422

26:                                               ; preds = %1
  %27 = load %struct.set_family*, %struct.set_family** %3, align 8
  %28 = getelementptr inbounds %struct.set_family, %struct.set_family* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %8, align 4
  store i32 0, i32* %9, align 4
  br label %30

30:                                               ; preds = %34, %26
  %31 = load i32, i32* %8, align 4
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %30
  br label %34

34:                                               ; preds = %33
  %35 = load i32, i32* %8, align 4
  %36 = ashr i32 %35, 1
  store i32 %36, i32* %8, align 4
  %37 = load i32, i32* %9, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %9, align 4
  br label %30

39:                                               ; preds = %30
  %40 = load %struct.set_family*, %struct.set_family** %3, align 8
  %41 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_save to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %40)
  %42 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @lex_sort to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %41)
  store %struct.set_family* %42, %struct.set_family** %3, align 8
  store i32 1, i32* %8, align 4
  %43 = load %struct.set_family*, %struct.set_family** %3, align 8
  %44 = getelementptr inbounds %struct.set_family, %struct.set_family* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 1, i32 %45)
  %47 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 0
  %48 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %47, i32 0, i32 0
  store %struct.set_family* %46, %struct.set_family** %48, align 16
  %49 = load i32, i32* %9, align 4
  %50 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 0
  %51 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %50, i32 0, i32 1
  store i32 %49, i32* %51, align 8
  %52 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 0
  %53 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %52, i32 0, i32 0
  %54 = load %struct.set_family*, %struct.set_family** %53, align 16
  %55 = getelementptr inbounds %struct.set_family, %struct.set_family* %54, i32 0, i32 5
  %56 = load i32*, i32** %55, align 8
  %57 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 0
  %58 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %57, i32 0, i32 0
  %59 = load %struct.set_family*, %struct.set_family** %58, align 16
  %60 = getelementptr inbounds %struct.set_family, %struct.set_family* %59, i32 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 0
  %63 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %62, i32 0, i32 0
  %64 = load %struct.set_family*, %struct.set_family** %63, align 16
  %65 = getelementptr inbounds %struct.set_family, %struct.set_family* %64, i32 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %65, align 4
  %68 = mul nsw i32 %61, %66
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %56, i64 %69
  %71 = load %struct.set_family*, %struct.set_family** %3, align 8
  %72 = getelementptr inbounds %struct.set_family, %struct.set_family* %71, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_fill to i32* (i32*, i32, ...)*)(i32* %70, i32 %73)
  %75 = load %struct.set_family*, %struct.set_family** %3, align 8
  %76 = getelementptr inbounds %struct.set_family, %struct.set_family* %75, i32 0, i32 5
  %77 = load i32*, i32** %76, align 8
  %78 = load %struct.set_family*, %struct.set_family** %3, align 8
  %79 = getelementptr inbounds %struct.set_family, %struct.set_family* %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = load %struct.set_family*, %struct.set_family** %3, align 8
  %82 = getelementptr inbounds %struct.set_family, %struct.set_family* %81, i32 0, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = sub nsw i32 %83, 1
  %85 = mul nsw i32 %80, %84
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i32, i32* %77, i64 %86
  store i32* %87, i32** %11, align 8
  %88 = load %struct.set_family*, %struct.set_family** %3, align 8
  %89 = getelementptr inbounds %struct.set_family, %struct.set_family* %88, i32 0, i32 5
  %90 = load i32*, i32** %89, align 8
  store i32* %90, i32** %4, align 8
  %91 = load i32*, i32** %4, align 8
  %92 = load %struct.set_family*, %struct.set_family** %3, align 8
  %93 = getelementptr inbounds %struct.set_family, %struct.set_family* %92, i32 0, i32 3
  %94 = load i32, i32* %93, align 4
  %95 = load %struct.set_family*, %struct.set_family** %3, align 8
  %96 = getelementptr inbounds %struct.set_family, %struct.set_family* %95, i32 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = mul nsw i32 %94, %97
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i32, i32* %91, i64 %99
  store i32* %100, i32** %5, align 8
  br label %101

101:                                              ; preds = %308, %39
  %102 = load i32*, i32** %4, align 8
  %103 = load i32*, i32** %5, align 8
  %104 = icmp ult i32* %102, %103
  br i1 %104, label %105, label %315

105:                                              ; preds = %101
  %106 = load i32*, i32** %4, align 8
  %107 = call i32 (i32*, ...) bitcast (i32 (i32*)* @set_ord to i32 (i32*, ...)*)(i32* %106)
  %108 = load %struct.set_family*, %struct.set_family** %3, align 8
  %109 = getelementptr inbounds %struct.set_family, %struct.set_family* %108, i32 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 %107, i32 %110)
  store %struct.set_family* %111, %struct.set_family** %12, align 8
  store i32 0, i32* %7, align 4
  br label %112

112:                                              ; preds = %162, %105
  %113 = load i32, i32* %7, align 4
  %114 = load %struct.set_family*, %struct.set_family** %3, align 8
  %115 = getelementptr inbounds %struct.set_family, %struct.set_family* %114, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = icmp slt i32 %113, %116
  br i1 %117, label %118, label %165

118:                                              ; preds = %112
  %119 = load i32*, i32** %4, align 8
  %120 = load i32, i32* %7, align 4
  %121 = ashr i32 %120, 5
  %122 = add nsw i32 %121, 1
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i32, i32* %119, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = load i32, i32* %7, align 4
  %127 = and i32 %126, 31
  %128 = shl i32 1, %127
  %129 = and i32 %125, %128
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %131, label %161

131:                                              ; preds = %118
  %132 = load %struct.set_family*, %struct.set_family** %12, align 8
  %133 = getelementptr inbounds %struct.set_family, %struct.set_family* %132, i32 0, i32 5
  %134 = load i32*, i32** %133, align 8
  %135 = load %struct.set_family*, %struct.set_family** %12, align 8
  %136 = getelementptr inbounds %struct.set_family, %struct.set_family* %135, i32 0, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = load %struct.set_family*, %struct.set_family** %12, align 8
  %139 = getelementptr inbounds %struct.set_family, %struct.set_family* %138, i32 0, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %139, align 4
  %142 = mul nsw i32 %137, %140
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds i32, i32* %134, i64 %143
  %145 = load %struct.set_family*, %struct.set_family** %3, align 8
  %146 = getelementptr inbounds %struct.set_family, %struct.set_family* %145, i32 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_fill to i32* (i32*, i32, ...)*)(i32* %144, i32 %147)
  store i32* %148, i32** %6, align 8
  %149 = load i32, i32* %7, align 4
  %150 = and i32 %149, 31
  %151 = shl i32 1, %150
  %152 = xor i32 %151, -1
  %153 = load i32*, i32** %6, align 8
  %154 = load i32, i32* %7, align 4
  %155 = ashr i32 %154, 5
  %156 = add nsw i32 %155, 1
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i32, i32* %153, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = and i32 %159, %152
  store i32 %160, i32* %158, align 4
  br label %161

161:                                              ; preds = %131, %118
  br label %162

162:                                              ; preds = %161
  %163 = load i32, i32* %7, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %7, align 4
  br label %112

165:                                              ; preds = %112
  %166 = load %struct.set_family*, %struct.set_family** %12, align 8
  %167 = load i32, i32* %8, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 %168
  %170 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %169, i32 0, i32 0
  store %struct.set_family* %166, %struct.set_family** %170, align 16
  %171 = load i32, i32* %9, align 4
  %172 = load i32, i32* %8, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %8, align 4
  %174 = sext i32 %172 to i64
  %175 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 %174
  %176 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %175, i32 0, i32 1
  store i32 %171, i32* %176, align 8
  br label %177

177:                                              ; preds = %280, %165
  %178 = load i32, i32* %8, align 4
  %179 = icmp sgt i32 %178, 1
  br i1 %179, label %180, label %200

180:                                              ; preds = %177
  %181 = load i32, i32* %8, align 4
  %182 = sub nsw i32 %181, 1
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 %183
  %185 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %184, i32 0, i32 1
  %186 = load i32, i32* %185, align 8
  %187 = load i32, i32* %8, align 4
  %188 = sub nsw i32 %187, 2
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 %189
  %191 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %190, i32 0, i32 1
  %192 = load i32, i32* %191, align 8
  %193 = icmp eq i32 %186, %192
  br i1 %193, label %198, label %194

194:                                              ; preds = %180
  %195 = load i32*, i32** %4, align 8
  %196 = load i32*, i32** %11, align 8
  %197 = icmp eq i32* %195, %196
  br label %198

198:                                              ; preds = %194, %180
  %199 = phi i1 [ true, %180 ], [ %197, %194 ]
  br label %200

200:                                              ; preds = %198, %177
  %201 = phi i1 [ false, %177 ], [ %199, %198 ]
  br i1 %201, label %202, label %307

202:                                              ; preds = %200
  %203 = load i32, i32* %8, align 4
  %204 = sub nsw i32 %203, 1
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 %205
  %207 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %206, i32 0, i32 0
  %208 = load %struct.set_family*, %struct.set_family** %207, align 16
  %209 = load i32, i32* %8, align 4
  %210 = sub nsw i32 %209, 2
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 %211
  %213 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %212, i32 0, i32 0
  %214 = load %struct.set_family*, %struct.set_family** %213, align 16
  %215 = call %struct.set_family* @unate_intersect(%struct.set_family* %208, %struct.set_family* %214, i32 0)
  store %struct.set_family* %215, %struct.set_family** %12, align 8
  %216 = load i32, i32* %8, align 4
  %217 = sub nsw i32 %216, 1
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 %218
  %220 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %219, i32 0, i32 1
  %221 = load i32, i32* %220, align 8
  %222 = load i32, i32* %8, align 4
  %223 = sub nsw i32 %222, 2
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 %224
  %226 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %225, i32 0, i32 1
  %227 = load i32, i32* %226, align 8
  %228 = icmp slt i32 %221, %227
  br i1 %228, label %229, label %236

229:                                              ; preds = %202
  %230 = load i32, i32* %8, align 4
  %231 = sub nsw i32 %230, 1
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 %232
  %234 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %233, i32 0, i32 1
  %235 = load i32, i32* %234, align 8
  br label %243

236:                                              ; preds = %202
  %237 = load i32, i32* %8, align 4
  %238 = sub nsw i32 %237, 2
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 %239
  %241 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %240, i32 0, i32 1
  %242 = load i32, i32* %241, align 8
  br label %243

243:                                              ; preds = %236, %229
  %244 = phi i32 [ %235, %229 ], [ %242, %236 ]
  %245 = sub nsw i32 %244, 1
  store i32 %245, i32* %10, align 4
  %246 = load i32, i32* @debug, align 4
  %247 = and i32 %246, 2048
  %248 = icmp ne i32 %247, 0
  br i1 %248, label %249, label %280

249:                                              ; preds = %243
  %250 = load i32, i32* %10, align 4
  %251 = icmp slt i32 %250, 10
  br i1 %251, label %252, label %280

252:                                              ; preds = %249
  %253 = load i32, i32* %10, align 4
  %254 = load %struct.set_family*, %struct.set_family** %12, align 8
  %255 = getelementptr inbounds %struct.set_family, %struct.set_family* %254, i32 0, i32 3
  %256 = load i32, i32* %255, align 4
  %257 = load i32, i32* %8, align 4
  %258 = sub nsw i32 %257, 1
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 %259
  %261 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %260, i32 0, i32 0
  %262 = load %struct.set_family*, %struct.set_family** %261, align 16
  %263 = getelementptr inbounds %struct.set_family, %struct.set_family* %262, i32 0, i32 3
  %264 = load i32, i32* %263, align 4
  %265 = load i32, i32* %8, align 4
  %266 = sub nsw i32 %265, 2
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 %267
  %269 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %268, i32 0, i32 0
  %270 = load %struct.set_family*, %struct.set_family** %269, align 16
  %271 = getelementptr inbounds %struct.set_family, %struct.set_family* %270, i32 0, i32 3
  %272 = load i32, i32* %271, align 4
  %273 = call i64 (...) bitcast (i64 ()* @util_cpu_time to i64 (...)*)()
  %274 = load i64, i64* %13, align 8
  %275 = sub nsw i64 %273, %274
  %276 = call i8* @util_print_time(i64 %275)
  %277 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.648, i64 0, i64 0), i32 %253, i32 %256, i32 %264, i32 %272, i8* %276)
  %278 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %279 = call i32 @fflush(%struct._IO_FILE* %278)
  br label %280

280:                                              ; preds = %252, %249, %243
  %281 = load i32, i32* %8, align 4
  %282 = sub nsw i32 %281, 2
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 %283
  %285 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %284, i32 0, i32 0
  %286 = load %struct.set_family*, %struct.set_family** %285, align 16
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %286)
  %287 = load i32, i32* %8, align 4
  %288 = sub nsw i32 %287, 1
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 %289
  %291 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %290, i32 0, i32 0
  %292 = load %struct.set_family*, %struct.set_family** %291, align 16
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %292)
  %293 = load %struct.set_family*, %struct.set_family** %12, align 8
  %294 = load i32, i32* %8, align 4
  %295 = sub nsw i32 %294, 2
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 %296
  %298 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %297, i32 0, i32 0
  store %struct.set_family* %293, %struct.set_family** %298, align 16
  %299 = load i32, i32* %10, align 4
  %300 = load i32, i32* %8, align 4
  %301 = sub nsw i32 %300, 2
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 %302
  %304 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %303, i32 0, i32 1
  store i32 %299, i32* %304, align 8
  %305 = load i32, i32* %8, align 4
  %306 = add nsw i32 %305, -1
  store i32 %306, i32* %8, align 4
  br label %177

307:                                              ; preds = %200
  br label %308

308:                                              ; preds = %307
  %309 = load %struct.set_family*, %struct.set_family** %3, align 8
  %310 = getelementptr inbounds %struct.set_family, %struct.set_family* %309, i32 0, i32 0
  %311 = load i32, i32* %310, align 8
  %312 = load i32*, i32** %4, align 8
  %313 = sext i32 %311 to i64
  %314 = getelementptr inbounds i32, i32* %312, i64 %313
  store i32* %314, i32** %4, align 8
  br label %101

315:                                              ; preds = %101
  %316 = getelementptr inbounds [32 x %struct.anon.206], [32 x %struct.anon.206]* %14, i64 0, i64 0
  %317 = getelementptr inbounds %struct.anon.206, %struct.anon.206* %316, i32 0, i32 0
  %318 = load %struct.set_family*, %struct.set_family** %317, align 16
  store %struct.set_family* %318, %struct.set_family** %12, align 8
  %319 = load %struct.set_family*, %struct.set_family** %3, align 8
  %320 = getelementptr inbounds %struct.set_family, %struct.set_family* %319, i32 0, i32 1
  %321 = load i32, i32* %320, align 4
  %322 = icmp sle i32 %321, 32
  br i1 %322, label %323, label %324

323:                                              ; preds = %315
  br label %332

324:                                              ; preds = %315
  %325 = load %struct.set_family*, %struct.set_family** %3, align 8
  %326 = getelementptr inbounds %struct.set_family, %struct.set_family* %325, i32 0, i32 1
  %327 = load i32, i32* %326, align 4
  %328 = sub nsw i32 %327, 1
  %329 = ashr i32 %328, 5
  %330 = add nsw i32 %329, 1
  %331 = add nsw i32 %330, 1
  br label %332

332:                                              ; preds = %324, %323
  %333 = phi i32 [ 2, %323 ], [ %331, %324 ]
  %334 = sext i32 %333 to i64
  %335 = mul i64 4, %334
  %336 = call noalias i8* @malloc(i64 %335) #7
  %337 = bitcast i8* %336 to i32*
  %338 = load %struct.set_family*, %struct.set_family** %3, align 8
  %339 = getelementptr inbounds %struct.set_family, %struct.set_family* %338, i32 0, i32 1
  %340 = load i32, i32* %339, align 4
  %341 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_clear to i32* (i32*, i32, ...)*)(i32* %337, i32 %340)
  %342 = load %struct.set_family*, %struct.set_family** %3, align 8
  %343 = getelementptr inbounds %struct.set_family, %struct.set_family* %342, i32 0, i32 1
  %344 = load i32, i32* %343, align 4
  %345 = call i32* (i32*, i32, ...) bitcast (i32* (i32*, i32)* @set_fill to i32* (i32*, i32, ...)*)(i32* %341, i32 %344)
  store i32* %345, i32** %6, align 8
  %346 = load %struct.set_family*, %struct.set_family** %12, align 8
  %347 = getelementptr inbounds %struct.set_family, %struct.set_family* %346, i32 0, i32 5
  %348 = load i32*, i32** %347, align 8
  store i32* %348, i32** %4, align 8
  %349 = load i32*, i32** %4, align 8
  %350 = load %struct.set_family*, %struct.set_family** %12, align 8
  %351 = getelementptr inbounds %struct.set_family, %struct.set_family* %350, i32 0, i32 3
  %352 = load i32, i32* %351, align 4
  %353 = load %struct.set_family*, %struct.set_family** %12, align 8
  %354 = getelementptr inbounds %struct.set_family, %struct.set_family* %353, i32 0, i32 0
  %355 = load i32, i32* %354, align 8
  %356 = mul nsw i32 %352, %355
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds i32, i32* %349, i64 %357
  store i32* %358, i32** %5, align 8
  br label %359

359:                                              ; preds = %399, %332
  %360 = load i32*, i32** %4, align 8
  %361 = load i32*, i32** %5, align 8
  %362 = icmp ult i32* %360, %361
  br i1 %362, label %363, label %406

363:                                              ; preds = %359
  %364 = load i32*, i32** %6, align 8
  %365 = getelementptr inbounds i32, i32* %364, i64 0
  %366 = load i32, i32* %365, align 4
  %367 = and i32 %366, 1023
  store i32 %367, i32* %15, align 4
  %368 = load i32*, i32** %4, align 8
  %369 = getelementptr inbounds i32, i32* %368, i64 0
  %370 = load i32, i32* %369, align 4
  %371 = and i32 %370, -1024
  store i32 %371, i32* %369, align 4
  %372 = load i32, i32* %15, align 4
  %373 = load i32*, i32** %4, align 8
  %374 = getelementptr inbounds i32, i32* %373, i64 0
  %375 = load i32, i32* %374, align 4
  %376 = or i32 %375, %372
  store i32 %376, i32* %374, align 4
  br label %377

377:                                              ; preds = %394, %363
  %378 = load i32*, i32** %6, align 8
  %379 = load i32, i32* %15, align 4
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds i32, i32* %378, i64 %380
  %382 = load i32, i32* %381, align 4
  %383 = load i32*, i32** %4, align 8
  %384 = load i32, i32* %15, align 4
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds i32, i32* %383, i64 %385
  %387 = load i32, i32* %386, align 4
  %388 = xor i32 %387, -1
  %389 = and i32 %382, %388
  %390 = load i32*, i32** %4, align 8
  %391 = load i32, i32* %15, align 4
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds i32, i32* %390, i64 %392
  store i32 %389, i32* %393, align 4
  br label %394

394:                                              ; preds = %377
  %395 = load i32, i32* %15, align 4
  %396 = add nsw i32 %395, -1
  store i32 %396, i32* %15, align 4
  %397 = icmp sgt i32 %396, 0
  br i1 %397, label %377, label %398

398:                                              ; preds = %394
  br label %399

399:                                              ; preds = %398
  %400 = load %struct.set_family*, %struct.set_family** %12, align 8
  %401 = getelementptr inbounds %struct.set_family, %struct.set_family* %400, i32 0, i32 0
  %402 = load i32, i32* %401, align 8
  %403 = load i32*, i32** %4, align 8
  %404 = sext i32 %402 to i64
  %405 = getelementptr inbounds i32, i32* %403, i64 %404
  store i32* %405, i32** %4, align 8
  br label %359

406:                                              ; preds = %359
  %407 = load i32*, i32** %6, align 8
  %408 = icmp ne i32* %407, null
  br i1 %408, label %409, label %412

409:                                              ; preds = %406
  %410 = load i32*, i32** %6, align 8
  %411 = bitcast i32* %410 to i8*
  call void @free(i8* %411) #7
  store i32* null, i32** %6, align 8
  br label %412

412:                                              ; preds = %409, %406
  %413 = load i32, i32* @debug, align 4
  %414 = and i32 %413, 4096
  %415 = icmp ne i32 %414, 0
  br i1 %415, label %416, label %419

416:                                              ; preds = %412
  %417 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.649, i64 0, i64 0))
  %418 = load %struct.set_family*, %struct.set_family** %12, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_print to void (%struct.set_family*, ...)*)(%struct.set_family* %418)
  br label %419

419:                                              ; preds = %416, %412
  %420 = load %struct.set_family*, %struct.set_family** %3, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %420)
  %421 = load %struct.set_family*, %struct.set_family** %12, align 8
  store %struct.set_family* %421, %struct.set_family** %2, align 8
  br label %422

422:                                              ; preds = %419, %21
  %423 = load %struct.set_family*, %struct.set_family** %2, align 8
  ret %struct.set_family* %423
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.set_family* @unate_intersect(%struct.set_family* %0, %struct.set_family* %1, i32 %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca %struct.set_family*, align 8
  %13 = alloca %struct.set_family*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store %struct.set_family* %1, %struct.set_family** %5, align 8
  store i32 %2, i32* %6, align 4
  %17 = load %struct.set_family*, %struct.set_family** %4, align 8
  %18 = getelementptr inbounds %struct.set_family, %struct.set_family* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 500, i32 %19)
  store %struct.set_family* %20, %struct.set_family** %12, align 8
  store %struct.set_family* null, %struct.set_family** %13, align 8
  store i32 0, i32* %15, align 4
  %21 = load %struct.set_family*, %struct.set_family** %12, align 8
  %22 = getelementptr inbounds %struct.set_family, %struct.set_family* %21, i32 0, i32 5
  %23 = load i32*, i32** %22, align 8
  store i32* %23, i32** %11, align 8
  %24 = load %struct.set_family*, %struct.set_family** %4, align 8
  %25 = getelementptr inbounds %struct.set_family, %struct.set_family* %24, i32 0, i32 5
  %26 = load i32*, i32** %25, align 8
  store i32* %26, i32** %7, align 8
  %27 = load i32*, i32** %7, align 8
  %28 = load %struct.set_family*, %struct.set_family** %4, align 8
  %29 = getelementptr inbounds %struct.set_family, %struct.set_family* %28, i32 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = load %struct.set_family*, %struct.set_family** %4, align 8
  %32 = getelementptr inbounds %struct.set_family, %struct.set_family* %31, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = mul nsw i32 %30, %33
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %27, i64 %35
  store i32* %36, i32** %9, align 8
  br label %37

37:                                               ; preds = %146, %3
  %38 = load i32*, i32** %7, align 8
  %39 = load i32*, i32** %9, align 8
  %40 = icmp ult i32* %38, %39
  br i1 %40, label %41, label %153

41:                                               ; preds = %37
  %42 = load %struct.set_family*, %struct.set_family** %5, align 8
  %43 = getelementptr inbounds %struct.set_family, %struct.set_family* %42, i32 0, i32 5
  %44 = load i32*, i32** %43, align 8
  store i32* %44, i32** %8, align 8
  %45 = load i32*, i32** %8, align 8
  %46 = load %struct.set_family*, %struct.set_family** %5, align 8
  %47 = getelementptr inbounds %struct.set_family, %struct.set_family* %46, i32 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = load %struct.set_family*, %struct.set_family** %5, align 8
  %50 = getelementptr inbounds %struct.set_family, %struct.set_family* %49, i32 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = mul nsw i32 %48, %51
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, i32* %45, i64 %53
  store i32* %54, i32** %10, align 8
  br label %55

55:                                               ; preds = %138, %41
  %56 = load i32*, i32** %8, align 8
  %57 = load i32*, i32** %10, align 8
  %58 = icmp ult i32* %56, %57
  br i1 %58, label %59, label %145

59:                                               ; preds = %55
  %60 = load i32*, i32** %11, align 8
  %61 = load i32*, i32** %7, align 8
  %62 = load i32*, i32** %8, align 8
  %63 = call i32 (i32*, i32*, i32*, ...) bitcast (i32 (i32*, i32*, i32*)* @set_andp to i32 (i32*, i32*, i32*, ...)*)(i32* %60, i32* %61, i32* %62)
  store i32 %63, i32* %14, align 4
  %64 = load i32, i32* %14, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %97

66:                                               ; preds = %59
  %67 = load i32, i32* %6, align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %97

69:                                               ; preds = %66
  %70 = load i32*, i32** %11, align 8
  %71 = call i32 (i32*, ...) bitcast (i32 (i32*)* @set_ord to i32 (i32*, ...)*)(i32* %70)
  store i32 %71, i32* %16, align 4
  %72 = load i32, i32* %15, align 4
  %73 = icmp sgt i32 %71, %72
  br i1 %73, label %74, label %90

74:                                               ; preds = %69
  %75 = load %struct.set_family*, %struct.set_family** %13, align 8
  %76 = icmp ne %struct.set_family* %75, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  %78 = load %struct.set_family*, %struct.set_family** %13, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %78)
  store %struct.set_family* null, %struct.set_family** %13, align 8
  br label %79

79:                                               ; preds = %77, %74
  %80 = load %struct.set_family*, %struct.set_family** %12, align 8
  %81 = getelementptr inbounds %struct.set_family, %struct.set_family* %80, i32 0, i32 5
  %82 = load i32*, i32** %81, align 8
  store i32* %82, i32** %11, align 8
  %83 = load %struct.set_family*, %struct.set_family** %12, align 8
  %84 = getelementptr inbounds %struct.set_family, %struct.set_family* %83, i32 0, i32 3
  store i32 0, i32* %84, align 4
  %85 = load i32*, i32** %11, align 8
  %86 = load i32*, i32** %7, align 8
  %87 = load i32*, i32** %8, align 8
  %88 = call i32* (i32*, i32*, i32*, ...) bitcast (i32* (i32*, i32*, i32*)* @set_and to i32* (i32*, i32*, i32*, ...)*)(i32* %85, i32* %86, i32* %87)
  %89 = load i32, i32* %16, align 4
  store i32 %89, i32* %15, align 4
  br label %96

90:                                               ; preds = %69
  %91 = load i32, i32* %16, align 4
  %92 = load i32, i32* %15, align 4
  %93 = icmp slt i32 %91, %92
  br i1 %93, label %94, label %95

94:                                               ; preds = %90
  store i32 0, i32* %14, align 4
  br label %95

95:                                               ; preds = %94, %90
  br label %96

96:                                               ; preds = %95, %79
  br label %97

97:                                               ; preds = %96, %66, %59
  %98 = load i32, i32* %14, align 4
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %137

100:                                              ; preds = %97
  %101 = load %struct.set_family*, %struct.set_family** %12, align 8
  %102 = getelementptr inbounds %struct.set_family, %struct.set_family* %101, i32 0, i32 3
  %103 = load i32, i32* %102, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %102, align 4
  %105 = load %struct.set_family*, %struct.set_family** %12, align 8
  %106 = getelementptr inbounds %struct.set_family, %struct.set_family* %105, i32 0, i32 2
  %107 = load i32, i32* %106, align 8
  %108 = icmp sge i32 %104, %107
  br i1 %108, label %109, label %129

109:                                              ; preds = %100
  %110 = load %struct.set_family*, %struct.set_family** %12, align 8
  %111 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %110)
  store %struct.set_family* %111, %struct.set_family** %12, align 8
  %112 = load %struct.set_family*, %struct.set_family** %13, align 8
  %113 = icmp eq %struct.set_family* %112, null
  br i1 %113, label %114, label %116

114:                                              ; preds = %109
  %115 = load %struct.set_family*, %struct.set_family** %12, align 8
  br label %120

116:                                              ; preds = %109
  %117 = load %struct.set_family*, %struct.set_family** %13, align 8
  %118 = load %struct.set_family*, %struct.set_family** %12, align 8
  %119 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_union to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %117, %struct.set_family* %118)
  br label %120

120:                                              ; preds = %116, %114
  %121 = phi %struct.set_family* [ %115, %114 ], [ %119, %116 ]
  store %struct.set_family* %121, %struct.set_family** %13, align 8
  %122 = load %struct.set_family*, %struct.set_family** %4, align 8
  %123 = getelementptr inbounds %struct.set_family, %struct.set_family* %122, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = call %struct.set_family* (i32, i32, ...) bitcast (%struct.set_family* (i32, i32)* @sf_new to %struct.set_family* (i32, i32, ...)*)(i32 500, i32 %124)
  store %struct.set_family* %125, %struct.set_family** %12, align 8
  %126 = load %struct.set_family*, %struct.set_family** %12, align 8
  %127 = getelementptr inbounds %struct.set_family, %struct.set_family* %126, i32 0, i32 5
  %128 = load i32*, i32** %127, align 8
  store i32* %128, i32** %11, align 8
  br label %136

129:                                              ; preds = %100
  %130 = load %struct.set_family*, %struct.set_family** %12, align 8
  %131 = getelementptr inbounds %struct.set_family, %struct.set_family* %130, i32 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = load i32*, i32** %11, align 8
  %134 = sext i32 %132 to i64
  %135 = getelementptr inbounds i32, i32* %133, i64 %134
  store i32* %135, i32** %11, align 8
  br label %136

136:                                              ; preds = %129, %120
  br label %137

137:                                              ; preds = %136, %97
  br label %138

138:                                              ; preds = %137
  %139 = load %struct.set_family*, %struct.set_family** %5, align 8
  %140 = getelementptr inbounds %struct.set_family, %struct.set_family* %139, i32 0, i32 0
  %141 = load i32, i32* %140, align 8
  %142 = load i32*, i32** %8, align 8
  %143 = sext i32 %141 to i64
  %144 = getelementptr inbounds i32, i32* %142, i64 %143
  store i32* %144, i32** %8, align 8
  br label %55

145:                                              ; preds = %55
  br label %146

146:                                              ; preds = %145
  %147 = load %struct.set_family*, %struct.set_family** %4, align 8
  %148 = getelementptr inbounds %struct.set_family, %struct.set_family* %147, i32 0, i32 0
  %149 = load i32, i32* %148, align 8
  %150 = load i32*, i32** %7, align 8
  %151 = sext i32 %149 to i64
  %152 = getelementptr inbounds i32, i32* %150, i64 %151
  store i32* %152, i32** %7, align 8
  br label %37

153:                                              ; preds = %37
  %154 = load %struct.set_family*, %struct.set_family** %12, align 8
  %155 = call %struct.set_family* (%struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*)* @sf_contain to %struct.set_family* (%struct.set_family*, ...)*)(%struct.set_family* %154)
  store %struct.set_family* %155, %struct.set_family** %12, align 8
  %156 = load %struct.set_family*, %struct.set_family** %13, align 8
  %157 = icmp eq %struct.set_family* %156, null
  br i1 %157, label %158, label %160

158:                                              ; preds = %153
  %159 = load %struct.set_family*, %struct.set_family** %12, align 8
  br label %164

160:                                              ; preds = %153
  %161 = load %struct.set_family*, %struct.set_family** %13, align 8
  %162 = load %struct.set_family*, %struct.set_family** %12, align 8
  %163 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @sf_union to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %161, %struct.set_family* %162)
  br label %164

164:                                              ; preds = %160, %158
  %165 = phi %struct.set_family* [ %159, %158 ], [ %163, %160 ]
  store %struct.set_family* %165, %struct.set_family** %13, align 8
  %166 = load %struct.set_family*, %struct.set_family** %13, align 8
  ret %struct.set_family* %166
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @util_cpu_time() #0 {
  %1 = alloca i64, align 8
  %2 = alloca %struct.rusage, align 8
  store i64 0, i64* %1, align 8
  %3 = call i32 @getrusage(i32 0, %struct.rusage* %2) #7
  %4 = getelementptr inbounds %struct.rusage, %struct.rusage* %2, i32 0, i32 0
  %5 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = mul nsw i64 %6, 1000
  %8 = getelementptr inbounds %struct.rusage, %struct.rusage* %2, i32 0, i32 0
  %9 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = sdiv i64 %10, 1000
  %12 = add nsw i64 %7, %11
  store i64 %12, i64* %1, align 8
  %13 = load i64, i64* %1, align 8
  ret i64 %13
}

; Function Attrs: nounwind
declare dso_local i32 @getrusage(i32, %struct.rusage*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @util_print_time(i64 %0) #0 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  ret i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.654, i64 0, i64 0)
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @util_strsav(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i64 @strlen(i8* %3) #9
  %5 = add i64 %4, 1
  %6 = mul i64 1, %5
  %7 = call noalias i8* @malloc(i64 %6) #7
  %8 = load i8*, i8** %2, align 8
  %9 = call i8* @strcpy(i8* %7, i8* %8) #7
  ret i8* %9
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @verify(%struct.set_family* %0, %struct.set_family* %1, %struct.set_family* %2) #0 {
  %4 = alloca %struct.set_family*, align 8
  %5 = alloca %struct.set_family*, align 8
  %6 = alloca %struct.set_family*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i32, align 4
  store %struct.set_family* %0, %struct.set_family** %4, align 8
  store %struct.set_family* %1, %struct.set_family** %5, align 8
  store %struct.set_family* %2, %struct.set_family** %6, align 8
  store i32 0, i32* %10, align 4
  %11 = load %struct.set_family*, %struct.set_family** %5, align 8
  %12 = load %struct.set_family*, %struct.set_family** %6, align 8
  %13 = call i32** (%struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*)* @cube2list to i32** (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %11, %struct.set_family* %12)
  store i32** %13, i32*** %9, align 8
  %14 = load %struct.set_family*, %struct.set_family** %4, align 8
  %15 = getelementptr inbounds %struct.set_family, %struct.set_family* %14, i32 0, i32 5
  %16 = load i32*, i32** %15, align 8
  store i32* %16, i32** %7, align 8
  %17 = load i32*, i32** %7, align 8
  %18 = load %struct.set_family*, %struct.set_family** %4, align 8
  %19 = getelementptr inbounds %struct.set_family, %struct.set_family* %18, i32 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = load %struct.set_family*, %struct.set_family** %4, align 8
  %22 = getelementptr inbounds %struct.set_family, %struct.set_family* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = mul nsw i32 %20, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %17, i64 %25
  store i32* %26, i32** %8, align 8
  br label %27

27:                                               ; preds = %47, %3
  %28 = load i32*, i32** %7, align 8
  %29 = load i32*, i32** %8, align 8
  %30 = icmp ult i32* %28, %29
  br i1 %30, label %31, label %54

31:                                               ; preds = %27
  %32 = load i32**, i32*** %9, align 8
  %33 = load i32*, i32** %7, align 8
  %34 = call i32 (i32**, i32*, ...) bitcast (i32 (i32**, i32*)* @cube_is_covered to i32 (i32**, i32*, ...)*)(i32** %32, i32* %33)
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %31
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.659, i64 0, i64 0))
  store i32 1, i32* %10, align 4
  %38 = load i32, i32* @verbose_debug, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = load i32*, i32** %7, align 8
  %42 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %41)
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.660, i64 0, i64 0), i8* %42)
  br label %45

44:                                               ; preds = %36
  br label %54

45:                                               ; preds = %40
  br label %46

46:                                               ; preds = %45, %31
  br label %47

47:                                               ; preds = %46
  %48 = load %struct.set_family*, %struct.set_family** %4, align 8
  %49 = getelementptr inbounds %struct.set_family, %struct.set_family* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = load i32*, i32** %7, align 8
  %52 = sext i32 %50 to i64
  %53 = getelementptr inbounds i32, i32* %51, i64 %52
  store i32* %53, i32** %7, align 8
  br label %27

54:                                               ; preds = %44, %27
  %55 = load i32**, i32*** %9, align 8
  %56 = getelementptr inbounds i32*, i32** %55, i64 0
  %57 = load i32*, i32** %56, align 8
  %58 = icmp ne i32* %57, null
  br i1 %58, label %59, label %66

59:                                               ; preds = %54
  %60 = load i32**, i32*** %9, align 8
  %61 = getelementptr inbounds i32*, i32** %60, i64 0
  %62 = load i32*, i32** %61, align 8
  %63 = bitcast i32* %62 to i8*
  call void @free(i8* %63) #7
  %64 = load i32**, i32*** %9, align 8
  %65 = getelementptr inbounds i32*, i32** %64, i64 0
  store i32* null, i32** %65, align 8
  br label %66

66:                                               ; preds = %59, %54
  %67 = load i32**, i32*** %9, align 8
  %68 = icmp ne i32** %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %66
  %70 = load i32**, i32*** %9, align 8
  %71 = bitcast i32** %70 to i8*
  call void @free(i8* %71) #7
  store i32** null, i32*** %9, align 8
  br label %72

72:                                               ; preds = %69, %66
  %73 = load %struct.set_family*, %struct.set_family** %4, align 8
  %74 = load %struct.set_family*, %struct.set_family** %6, align 8
  %75 = call i32** (%struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*)* @cube2list to i32** (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %73, %struct.set_family* %74)
  store i32** %75, i32*** %9, align 8
  %76 = load %struct.set_family*, %struct.set_family** %5, align 8
  %77 = getelementptr inbounds %struct.set_family, %struct.set_family* %76, i32 0, i32 5
  %78 = load i32*, i32** %77, align 8
  store i32* %78, i32** %7, align 8
  %79 = load i32*, i32** %7, align 8
  %80 = load %struct.set_family*, %struct.set_family** %5, align 8
  %81 = getelementptr inbounds %struct.set_family, %struct.set_family* %80, i32 0, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = load %struct.set_family*, %struct.set_family** %5, align 8
  %84 = getelementptr inbounds %struct.set_family, %struct.set_family* %83, i32 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = mul nsw i32 %82, %85
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i32, i32* %79, i64 %87
  store i32* %88, i32** %8, align 8
  br label %89

89:                                               ; preds = %109, %72
  %90 = load i32*, i32** %7, align 8
  %91 = load i32*, i32** %8, align 8
  %92 = icmp ult i32* %90, %91
  br i1 %92, label %93, label %116

93:                                               ; preds = %89
  %94 = load i32**, i32*** %9, align 8
  %95 = load i32*, i32** %7, align 8
  %96 = call i32 (i32**, i32*, ...) bitcast (i32 (i32**, i32*)* @cube_is_covered to i32 (i32**, i32*, ...)*)(i32** %94, i32* %95)
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %93
  %99 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.661, i64 0, i64 0))
  store i32 1, i32* %10, align 4
  %100 = load i32, i32* @verbose_debug, align 4
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %102, label %106

102:                                              ; preds = %98
  %103 = load i32*, i32** %7, align 8
  %104 = call i8* (i32*, ...) bitcast (i8* (i32*)* @pc1 to i8* (i32*, ...)*)(i32* %103)
  %105 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.660, i64 0, i64 0), i8* %104)
  br label %107

106:                                              ; preds = %98
  br label %116

107:                                              ; preds = %102
  br label %108

108:                                              ; preds = %107, %93
  br label %109

109:                                              ; preds = %108
  %110 = load %struct.set_family*, %struct.set_family** %5, align 8
  %111 = getelementptr inbounds %struct.set_family, %struct.set_family* %110, i32 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = load i32*, i32** %7, align 8
  %114 = sext i32 %112 to i64
  %115 = getelementptr inbounds i32, i32* %113, i64 %114
  store i32* %115, i32** %7, align 8
  br label %89

116:                                              ; preds = %106, %89
  %117 = load i32**, i32*** %9, align 8
  %118 = getelementptr inbounds i32*, i32** %117, i64 0
  %119 = load i32*, i32** %118, align 8
  %120 = icmp ne i32* %119, null
  br i1 %120, label %121, label %128

121:                                              ; preds = %116
  %122 = load i32**, i32*** %9, align 8
  %123 = getelementptr inbounds i32*, i32** %122, i64 0
  %124 = load i32*, i32** %123, align 8
  %125 = bitcast i32* %124 to i8*
  call void @free(i8* %125) #7
  %126 = load i32**, i32*** %9, align 8
  %127 = getelementptr inbounds i32*, i32** %126, i64 0
  store i32* null, i32** %127, align 8
  br label %128

128:                                              ; preds = %121, %116
  %129 = load i32**, i32*** %9, align 8
  %130 = icmp ne i32** %129, null
  br i1 %130, label %131, label %134

131:                                              ; preds = %128
  %132 = load i32**, i32*** %9, align 8
  %133 = bitcast i32** %132 to i8*
  call void @free(i8* %133) #7
  store i32** null, i32*** %9, align 8
  br label %134

134:                                              ; preds = %131, %128
  %135 = load i32, i32* %10, align 4
  ret i32 %135
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @PLA_verify(%struct.PLA_t* %0, %struct.PLA_t* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.PLA_t*, align 8
  %5 = alloca %struct.PLA_t*, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %4, align 8
  store %struct.PLA_t* %1, %struct.PLA_t** %5, align 8
  %6 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %7 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %6, i32 0, i32 7
  %8 = load i8**, i8*** %7, align 8
  %9 = icmp ne i8** %8, null
  br i1 %9, label %10, label %33

10:                                               ; preds = %2
  %11 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %12 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %11, i32 0, i32 7
  %13 = load i8**, i8*** %12, align 8
  %14 = getelementptr inbounds i8*, i8** %13, i64 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ne i8* %15, null
  br i1 %16, label %17, label %33

17:                                               ; preds = %10
  %18 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %19 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %18, i32 0, i32 7
  %20 = load i8**, i8*** %19, align 8
  %21 = icmp ne i8** %20, null
  br i1 %21, label %22, label %33

22:                                               ; preds = %17
  %23 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %24 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %23, i32 0, i32 7
  %25 = load i8**, i8*** %24, align 8
  %26 = getelementptr inbounds i8*, i8** %25, i64 0
  %27 = load i8*, i8** %26, align 8
  %28 = icmp ne i8* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %22
  %30 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %31 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %32 = call i32 @PLA_permute(%struct.PLA_t* %30, %struct.PLA_t* %31)
  br label %36

33:                                               ; preds = %22, %17, %10, %2
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3.664, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %62

36:                                               ; preds = %29
  %37 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %38 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %37, i32 0, i32 0
  %39 = load %struct.set_family*, %struct.set_family** %38, align 8
  %40 = getelementptr inbounds %struct.set_family, %struct.set_family* %39, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %43 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %42, i32 0, i32 0
  %44 = load %struct.set_family*, %struct.set_family** %43, align 8
  %45 = getelementptr inbounds %struct.set_family, %struct.set_family* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp ne i32 %41, %46
  br i1 %47, label %48, label %51

48:                                               ; preds = %36
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4.665, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %62

51:                                               ; preds = %36
  %52 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %53 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %52, i32 0, i32 0
  %54 = load %struct.set_family*, %struct.set_family** %53, align 8
  %55 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %56 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %55, i32 0, i32 0
  %57 = load %struct.set_family*, %struct.set_family** %56, align 8
  %58 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %59 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %58, i32 0, i32 1
  %60 = load %struct.set_family*, %struct.set_family** %59, align 8
  %61 = call i32 @verify(%struct.set_family* %54, %struct.set_family* %57, %struct.set_family* %60)
  store i32 %61, i32* %3, align 4
  br label %62

62:                                               ; preds = %51, %48, %33
  %63 = load i32, i32* %3, align 4
  ret i32 %63
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @PLA_permute(%struct.PLA_t* %0, %struct.PLA_t* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.PLA_t*, align 8
  %5 = alloca %struct.PLA_t*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8**, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %4, align 8
  store %struct.PLA_t* %1, %struct.PLA_t** %5, align 8
  store i32 0, i32* %9, align 4
  %12 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %13 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %12, i32 0, i32 0
  %14 = load %struct.set_family*, %struct.set_family** %13, align 8
  %15 = getelementptr inbounds %struct.set_family, %struct.set_family* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = mul i64 4, %17
  %19 = call noalias i8* @malloc(i64 %18) #7
  %20 = bitcast i8* %19 to i32*
  store i32* %20, i32** %8, align 8
  store i32 0, i32* %6, align 4
  br label %21

21:                                               ; preds = %68, %2
  %22 = load i32, i32* %6, align 4
  %23 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %24 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %23, i32 0, i32 0
  %25 = load %struct.set_family*, %struct.set_family** %24, align 8
  %26 = getelementptr inbounds %struct.set_family, %struct.set_family* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %22, %27
  br i1 %28, label %29, label %71

29:                                               ; preds = %21
  %30 = load %struct.PLA_t*, %struct.PLA_t** %5, align 8
  %31 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %30, i32 0, i32 7
  %32 = load i8**, i8*** %31, align 8
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8*, i8** %32, i64 %34
  %36 = load i8*, i8** %35, align 8
  store i8* %36, i8** %10, align 8
  store i32 0, i32* %7, align 4
  br label %37

37:                                               ; preds = %64, %29
  %38 = load i32, i32* %7, align 4
  %39 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %40 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %39, i32 0, i32 0
  %41 = load %struct.set_family*, %struct.set_family** %40, align 8
  %42 = getelementptr inbounds %struct.set_family, %struct.set_family* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %38, %43
  br i1 %44, label %45, label %67

45:                                               ; preds = %37
  %46 = load i8*, i8** %10, align 8
  %47 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %48 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %47, i32 0, i32 7
  %49 = load i8**, i8*** %48, align 8
  %50 = load i32, i32* %7, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8*, i8** %49, i64 %51
  %53 = load i8*, i8** %52, align 8
  %54 = call i32 @strcmp(i8* %46, i8* %53) #9
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %63

56:                                               ; preds = %45
  %57 = load i32, i32* %7, align 4
  %58 = load i32*, i32** %8, align 8
  %59 = load i32, i32* %9, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %9, align 4
  %61 = sext i32 %59 to i64
  %62 = getelementptr inbounds i32, i32* %58, i64 %61
  store i32 %57, i32* %62, align 4
  br label %67

63:                                               ; preds = %45
  br label %64

64:                                               ; preds = %63
  %65 = load i32, i32* %7, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %7, align 4
  br label %37

67:                                               ; preds = %56, %37
  br label %68

68:                                               ; preds = %67
  %69 = load i32, i32* %6, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %6, align 4
  br label %21

71:                                               ; preds = %21
  %72 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %73 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %72, i32 0, i32 0
  %74 = load %struct.set_family*, %struct.set_family** %73, align 8
  %75 = icmp ne %struct.set_family* %74, null
  br i1 %75, label %76, label %85

76:                                               ; preds = %71
  %77 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %78 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %77, i32 0, i32 0
  %79 = load %struct.set_family*, %struct.set_family** %78, align 8
  %80 = load i32*, i32** %8, align 8
  %81 = load i32, i32* %9, align 4
  %82 = call %struct.set_family* (%struct.set_family*, i32*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*, i32)* @sf_permute to %struct.set_family* (%struct.set_family*, i32*, i32, ...)*)(%struct.set_family* %79, i32* %80, i32 %81)
  %83 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %84 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %83, i32 0, i32 0
  store %struct.set_family* %82, %struct.set_family** %84, align 8
  br label %85

85:                                               ; preds = %76, %71
  %86 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %87 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %86, i32 0, i32 2
  %88 = load %struct.set_family*, %struct.set_family** %87, align 8
  %89 = icmp ne %struct.set_family* %88, null
  br i1 %89, label %90, label %99

90:                                               ; preds = %85
  %91 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %92 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %91, i32 0, i32 2
  %93 = load %struct.set_family*, %struct.set_family** %92, align 8
  %94 = load i32*, i32** %8, align 8
  %95 = load i32, i32* %9, align 4
  %96 = call %struct.set_family* (%struct.set_family*, i32*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*, i32)* @sf_permute to %struct.set_family* (%struct.set_family*, i32*, i32, ...)*)(%struct.set_family* %93, i32* %94, i32 %95)
  %97 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %98 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %97, i32 0, i32 2
  store %struct.set_family* %96, %struct.set_family** %98, align 8
  br label %99

99:                                               ; preds = %90, %85
  %100 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %101 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %100, i32 0, i32 1
  %102 = load %struct.set_family*, %struct.set_family** %101, align 8
  %103 = icmp ne %struct.set_family* %102, null
  br i1 %103, label %104, label %113

104:                                              ; preds = %99
  %105 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %106 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %105, i32 0, i32 1
  %107 = load %struct.set_family*, %struct.set_family** %106, align 8
  %108 = load i32*, i32** %8, align 8
  %109 = load i32, i32* %9, align 4
  %110 = call %struct.set_family* (%struct.set_family*, i32*, i32, ...) bitcast (%struct.set_family* (%struct.set_family*, i32*, i32)* @sf_permute to %struct.set_family* (%struct.set_family*, i32*, i32, ...)*)(%struct.set_family* %107, i32* %108, i32 %109)
  %111 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %112 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %111, i32 0, i32 1
  store %struct.set_family* %110, %struct.set_family** %112, align 8
  br label %113

113:                                              ; preds = %104, %99
  %114 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %115 = sext i32 %114 to i64
  %116 = mul i64 8, %115
  %117 = call noalias i8* @malloc(i64 %116) #7
  %118 = bitcast i8* %117 to i8**
  store i8** %118, i8*** %11, align 8
  store i32 0, i32* %6, align 4
  br label %119

119:                                              ; preds = %139, %113
  %120 = load i32, i32* %6, align 4
  %121 = load i32, i32* %9, align 4
  %122 = icmp slt i32 %120, %121
  br i1 %122, label %123, label %142

123:                                              ; preds = %119
  %124 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %125 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %124, i32 0, i32 7
  %126 = load i8**, i8*** %125, align 8
  %127 = load i32*, i32** %8, align 8
  %128 = load i32, i32* %6, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32, i32* %127, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8*, i8** %126, i64 %132
  %134 = load i8*, i8** %133, align 8
  %135 = load i8**, i8*** %11, align 8
  %136 = load i32, i32* %6, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i8*, i8** %135, i64 %137
  store i8* %134, i8** %138, align 8
  br label %139

139:                                              ; preds = %123
  %140 = load i32, i32* %6, align 4
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %6, align 4
  br label %119

142:                                              ; preds = %119
  %143 = load i32, i32* %9, align 4
  store i32 %143, i32* %6, align 4
  br label %144

144:                                              ; preds = %153, %142
  %145 = load i32, i32* %6, align 4
  %146 = load i32, i32* getelementptr inbounds (%struct.cube_struct, %struct.cube_struct* @cube, i32 0, i32 0), align 8
  %147 = icmp slt i32 %145, %146
  br i1 %147, label %148, label %156

148:                                              ; preds = %144
  %149 = load i8**, i8*** %11, align 8
  %150 = load i32, i32* %6, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i8*, i8** %149, i64 %151
  store i8* null, i8** %152, align 8
  br label %153

153:                                              ; preds = %148
  %154 = load i32, i32* %6, align 4
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %6, align 4
  br label %144

156:                                              ; preds = %144
  %157 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %158 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %157, i32 0, i32 7
  %159 = load i8**, i8*** %158, align 8
  %160 = icmp ne i8** %159, null
  br i1 %160, label %161, label %168

161:                                              ; preds = %156
  %162 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %163 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %162, i32 0, i32 7
  %164 = load i8**, i8*** %163, align 8
  %165 = bitcast i8** %164 to i8*
  call void @free(i8* %165) #7
  %166 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %167 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %166, i32 0, i32 7
  store i8** null, i8*** %167, align 8
  br label %168

168:                                              ; preds = %161, %156
  %169 = load i8**, i8*** %11, align 8
  %170 = load %struct.PLA_t*, %struct.PLA_t** %4, align 8
  %171 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %170, i32 0, i32 7
  store i8** %169, i8*** %171, align 8
  %172 = load i32*, i32** %8, align 8
  %173 = icmp ne i32* %172, null
  br i1 %173, label %174, label %177

174:                                              ; preds = %168
  %175 = load i32*, i32** %8, align 8
  %176 = bitcast i32* %175 to i8*
  call void @free(i8* %176) #7
  store i32* null, i32** %8, align 8
  br label %177

177:                                              ; preds = %174, %168
  %178 = load i32, i32* %3, align 4
  ret i32 %178
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @check_consistency(%struct.PLA_t* %0) #0 {
  %2 = alloca %struct.PLA_t*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.set_family*, align 8
  store %struct.PLA_t* %0, %struct.PLA_t** %2, align 8
  store i32 0, i32* %3, align 4
  %5 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %6 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %5, i32 0, i32 0
  %7 = load %struct.set_family*, %struct.set_family** %6, align 8
  %8 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %9 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %8, i32 0, i32 1
  %10 = load %struct.set_family*, %struct.set_family** %9, align 8
  %11 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @cv_intersect to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %7, %struct.set_family* %10)
  store %struct.set_family* %11, %struct.set_family** %4, align 8
  %12 = load %struct.set_family*, %struct.set_family** %4, align 8
  %13 = getelementptr inbounds %struct.set_family, %struct.set_family* %12, i32 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %1
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.668, i64 0, i64 0))
  br label %25

18:                                               ; preds = %1
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.6.669, i64 0, i64 0))
  %20 = load i32, i32* @verbose_debug, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @cprint to void (%struct.set_family*, ...)*)(%struct.set_family* %23)
  br label %24

24:                                               ; preds = %22, %18
  store i32 1, i32* %3, align 4
  br label %25

25:                                               ; preds = %24, %16
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %27 = call i32 @fflush(%struct._IO_FILE* %26)
  %28 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %28)
  %29 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %30 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %29, i32 0, i32 0
  %31 = load %struct.set_family*, %struct.set_family** %30, align 8
  %32 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %33 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %32, i32 0, i32 2
  %34 = load %struct.set_family*, %struct.set_family** %33, align 8
  %35 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @cv_intersect to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %31, %struct.set_family* %34)
  store %struct.set_family* %35, %struct.set_family** %4, align 8
  %36 = load %struct.set_family*, %struct.set_family** %4, align 8
  %37 = getelementptr inbounds %struct.set_family, %struct.set_family* %36, i32 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %25
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.670, i64 0, i64 0))
  br label %49

42:                                               ; preds = %25
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8.671, i64 0, i64 0))
  %44 = load i32, i32* @verbose_debug, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @cprint to void (%struct.set_family*, ...)*)(%struct.set_family* %47)
  br label %48

48:                                               ; preds = %46, %42
  store i32 1, i32* %3, align 4
  br label %49

49:                                               ; preds = %48, %40
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %51 = call i32 @fflush(%struct._IO_FILE* %50)
  %52 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %52)
  %53 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %54 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %53, i32 0, i32 1
  %55 = load %struct.set_family*, %struct.set_family** %54, align 8
  %56 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %57 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %56, i32 0, i32 2
  %58 = load %struct.set_family*, %struct.set_family** %57, align 8
  %59 = call %struct.set_family* (%struct.set_family*, %struct.set_family*, ...) bitcast (%struct.set_family* (%struct.set_family*, %struct.set_family*)* @cv_intersect to %struct.set_family* (%struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %55, %struct.set_family* %58)
  store %struct.set_family* %59, %struct.set_family** %4, align 8
  %60 = load %struct.set_family*, %struct.set_family** %4, align 8
  %61 = getelementptr inbounds %struct.set_family, %struct.set_family* %60, i32 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %49
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.672, i64 0, i64 0))
  br label %73

66:                                               ; preds = %49
  %67 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.10.673, i64 0, i64 0))
  %68 = load i32, i32* @verbose_debug, align 4
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @cprint to void (%struct.set_family*, ...)*)(%struct.set_family* %71)
  br label %72

72:                                               ; preds = %70, %66
  store i32 1, i32* %3, align 4
  br label %73

73:                                               ; preds = %72, %64
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %75 = call i32 @fflush(%struct._IO_FILE* %74)
  %76 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %76)
  %77 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %78 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %77, i32 0, i32 0
  %79 = load %struct.set_family*, %struct.set_family** %78, align 8
  %80 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %81 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %80, i32 0, i32 1
  %82 = load %struct.set_family*, %struct.set_family** %81, align 8
  %83 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %84 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %83, i32 0, i32 2
  %85 = load %struct.set_family*, %struct.set_family** %84, align 8
  %86 = call i32** (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @cube3list to i32** (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %79, %struct.set_family* %82, %struct.set_family* %85)
  %87 = call i32 (i32**, ...) bitcast (i32 (i32**)* @tautology to i32 (i32**, ...)*)(i32** %86)
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %73
  %90 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.11.674, i64 0, i64 0))
  br label %110

91:                                               ; preds = %73
  %92 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %93 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %92, i32 0, i32 0
  %94 = load %struct.set_family*, %struct.set_family** %93, align 8
  %95 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %96 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %95, i32 0, i32 1
  %97 = load %struct.set_family*, %struct.set_family** %96, align 8
  %98 = load %struct.PLA_t*, %struct.PLA_t** %2, align 8
  %99 = getelementptr inbounds %struct.PLA_t, %struct.PLA_t* %98, i32 0, i32 2
  %100 = load %struct.set_family*, %struct.set_family** %99, align 8
  %101 = call i32** (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...) bitcast (i32** (%struct.set_family*, %struct.set_family*, %struct.set_family*)* @cube3list to i32** (%struct.set_family*, %struct.set_family*, %struct.set_family*, ...)*)(%struct.set_family* %94, %struct.set_family* %97, %struct.set_family* %100)
  %102 = call %struct.set_family* (i32**, ...) bitcast (%struct.set_family* (i32**)* @complement to %struct.set_family* (i32**, ...)*)(i32** %101)
  store %struct.set_family* %102, %struct.set_family** %4, align 8
  %103 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12.675, i64 0, i64 0))
  %104 = load i32, i32* @verbose_debug, align 4
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %91
  %107 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @cprint to void (%struct.set_family*, ...)*)(%struct.set_family* %107)
  br label %108

108:                                              ; preds = %106, %91
  store i32 1, i32* %3, align 4
  %109 = load %struct.set_family*, %struct.set_family** %4, align 8
  call void (%struct.set_family*, ...) bitcast (void (%struct.set_family*)* @sf_free to void (%struct.set_family*, ...)*)(%struct.set_family* %109)
  br label %110

110:                                              ; preds = %108, %89
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %112 = call i32 @fflush(%struct._IO_FILE* %111)
  %113 = load i32, i32* %3, align 4
  ret i32 %113
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone }
attributes #9 = { nounwind readonly }
attributes #10 = { noreturn nounwind }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"Debian clang version 10.0.1-++20200708124224+ef32c611aa2-1~exp1~20200707224822.188 "}
!1 = !{i32 1, !"wchar_size", i32 4}
