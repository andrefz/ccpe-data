; ModuleID = 'llvm-link'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.level_limits = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.mbinfo = type { i32, i32, i32, i32, i32, i32, [2 x [2 x [2 x i32]]], [2 x [2 x i32]], [2 x i32], double, i32 }
%struct.motion_data = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.sVLCtable = type { i16, i8 }
%struct.VLCtable = type { i8, i8 }

@.str = private unnamed_addr constant [44 x i8] c"horizontal_size must be between 1 and 16383\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"horizontal_size must be less than 4096 (MPEG-1)\00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c"horizontal_size must not be a multiple of 4096\00", align 1
@.str.3 = private unnamed_addr constant [47 x i8] c"horizontal_size must be a even (4:2:0 / 4:2:2)\00", align 1
@.str.4 = private unnamed_addr constant [42 x i8] c"vertical_size must be between 1 and 16383\00", align 1
@.str.5 = private unnamed_addr constant [46 x i8] c"vertical size must be less than 4096 (MPEG-1)\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"vertical_size must not be a multiple of 4096\00", align 1
@.str.7 = private unnamed_addr constant [37 x i8] c"vertical_size must be a even (4:2:0)\00", align 1
@.str.8 = private unnamed_addr constant [46 x i8] c"vertical_size must be a even (field pictures)\00", align 1
@.str.9 = private unnamed_addr constant [61 x i8] c"vertical_size must be a multiple of 4 (4:2:0 field pictures)\00", align 1
@.str.10 = private unnamed_addr constant [51 x i8] c"pel_aspect_ratio must be between 1 and 14 (MPEG-1)\00", align 1
@.str.11 = private unnamed_addr constant [46 x i8] c"aspect_ratio_information must be 1, 2, 3 or 4\00", align 1
@.str.12 = private unnamed_addr constant [40 x i8] c"frame_rate code must be between 1 and 8\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"bit_rate must be positive\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"bit_rate must be less than 429 Gbit/s\00", align 1
@.str.15 = private unnamed_addr constant [47 x i8] c"bit_rate must be less than 104 Mbit/s (MPEG-1)\00", align 1
@.str.16 = private unnamed_addr constant [45 x i8] c"vbv_buffer_size must be in range 1..(2^18-1)\00", align 1
@.str.17 = private unnamed_addr constant [48 x i8] c"vbv_buffer_size must be less than 1024 (MPEG-1)\00", align 1
@.str.18 = private unnamed_addr constant [37 x i8] c"chroma_format must be in range 1...3\00", align 1
@.str.19 = private unnamed_addr constant [36 x i8] c"video_format must be in range 0...4\00", align 1
@.str.20 = private unnamed_addr constant [48 x i8] c"color_primaries must be in range 1...2 or 4...7\00", align 1
@.str.21 = private unnamed_addr constant [57 x i8] c"transfer_characteristics must be in range 1...2 or 4...7\00", align 1
@.str.22 = private unnamed_addr constant [52 x i8] c"matrix_coefficients must be in range 1...2 or 4...7\00", align 1
@.str.23 = private unnamed_addr constant [51 x i8] c"display_horizontal_size must be in range 0...16383\00", align 1
@.str.24 = private unnamed_addr constant [49 x i8] c"display_vertical_size must be in range 0...16383\00", align 1
@.str.25 = private unnamed_addr constant [42 x i8] c"intra_dc_precision must be in range 0...3\00", align 1
@.str.26 = private unnamed_addr constant [31 x i8] c"f_code must be between 1 and 9\00", align 1
@.str.27 = private unnamed_addr constant [30 x i8] c"f_code must be le less than 8\00", align 1
@.str.28 = private unnamed_addr constant [31 x i8] c"search window must be positive\00", align 1
@.str.29 = private unnamed_addr constant [33 x i8] c"profile must be between 0 and 15\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"level must be between 0 and 15\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.31 = private unnamed_addr constant [68 x i8] c"Warning: profile uses a reserved value, conformance checks skipped\0A\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"undefined Profile\00", align 1
@.str.33 = private unnamed_addr constant [56 x i8] c"This encoder currently generates no scalable bitstreams\00", align 1
@.str.34 = private unnamed_addr constant [16 x i8] c"undefined Level\00", align 1
@maxval_tab = internal global [4 x %struct.level_limits] [%struct.level_limits { i32 9, i32 5, i32 1920, i32 1152, i32 62668800, i32 80, i32 597 }, %struct.level_limits { i32 9, i32 5, i32 1440, i32 1152, i32 47001600, i32 60, i32 448 }, %struct.level_limits { i32 8, i32 5, i32 720, i32 576, i32 10368000, i32 15, i32 112 }, %struct.level_limits { i32 7, i32 4, i32 352, i32 288, i32 3041280, i32 4, i32 29 }], align 16
@profile_level_defined = internal global [5 x [4 x i8]] [[4 x i8] c"\01\01\01\00", [4 x i8] c"\00\01\00\00", [4 x i8] c"\00\00\01\01", [4 x i8] c"\01\01\01\01", [4 x i8] c"\00\00\01\00"], align 16
@.str.35 = private unnamed_addr constant [36 x i8] c"undefined profile@level combination\00", align 1
@.str.36 = private unnamed_addr constant [41 x i8] c"Simple Profile does not allow B pictures\00", align 1
@.str.37 = private unnamed_addr constant [49 x i8] c"chroma format must be 4:2:0 in specified Profile\00", align 1
@.str.38 = private unnamed_addr constant [53 x i8] c"chroma format must be 4:2:0 or 4:2:2 in High Profile\00", align 1
@.str.39 = private unnamed_addr constant [32 x i8] c"repeat_first_first must be zero\00", align 1
@.str.40 = private unnamed_addr constant [49 x i8] c"11 bit DC precision only allowed in High Profile\00", align 1
@.str.41 = private unnamed_addr constant [55 x i8] c"Picture rate greater than permitted in specified Level\00", align 1
@.str.42 = private unnamed_addr constant [68 x i8] c"forward horizontal f_code greater than permitted in specified Level\00", align 1
@.str.43 = private unnamed_addr constant [66 x i8] c"forward vertical f_code greater than permitted in specified Level\00", align 1
@.str.44 = private unnamed_addr constant [69 x i8] c"backward horizontal f_code greater than permitted in specified Level\00", align 1
@.str.45 = private unnamed_addr constant [67 x i8] c"backward vertical f_code greater than permitted in specified Level\00", align 1
@.str.46 = private unnamed_addr constant [61 x i8] c"Horizontal size is greater than permitted in specified Level\00", align 1
@.str.47 = private unnamed_addr constant [57 x i8] c"Sample rate is greater than permitted in specified Level\00", align 1
@.str.48 = private unnamed_addr constant [54 x i8] c"Bit rate is greater than permitted in specified Level\00", align 1
@.str.49 = private unnamed_addr constant [41 x i8] c"vbv_buffer_size exceeds High Level limit\00", align 1
@c = internal global [8 x [8 x double]] zeroinitializer, align 16
@iclp = internal global i16* null, align 8
@iclip = internal global [1024 x i16] zeroinitializer, align 16
@version = dso_local global [27 x i8] c"mpeg2encode V1.2, 96/07/19\00", align 16
@author = dso_local global [41 x i8] c"(C) 1996, MPEG Software Simulation Group\00", align 16
@zig_zag_scan = dso_local global [64 x i8] c"\00\01\08\10\09\02\03\0A\11\18 \19\12\0B\04\05\0C\13\1A!(0)\22\1B\14\0D\06\07\0E\15\1C#*1892+$\1D\16\0F\17\1E%,3:;4-&\1F'.5<=6/7>?", align 16
@alternate_scan = dso_local global [64 x i8] c"\00\08\10\18\01\09\02\0A\11\19 (0891)!\1A\12\03\0B\04\0C\13\1B\22*2:#+3;\14\1C\05\0D\06\0E\15\1D$,4<%-5=\16\1E\07\0F\17\1F&.6>'/7?", align 16
@default_intra_quantizer_matrix = dso_local global [64 x i8] c"\08\10\13\16\1A\1B\1D\22\10\10\16\18\1B\1D\22%\13\16\1A\1B\1D\22\22&\16\16\1A\1B\1D\22%(\16\1A\1B\1D #(0\1A\1B\1D #(0:\1A\1B\1D\22&.8E\1B\1D#&.8ES", align 16
@non_linear_mquant_table = dso_local global [32 x i8] c"\00\01\02\03\04\05\06\07\08\0A\0C\0E\10\12\14\16\18\1C $(,048@HPX`hp", align 16
@map_non_linear_mquant = dso_local global [113 x i8] c"\00\01\02\03\04\05\06\07\08\08\09\09\0A\0A\0B\0B\0C\0C\0D\0D\0E\0E\0F\0F\10\10\10\11\11\11\12\12\12\12\13\13\13\13\14\14\14\14\15\15\15\15\16\16\16\16\17\17\17\17\18\18\18\18\18\18\18\19\19\19\19\19\19\19\1A\1A\1A\1A\1A\1A\1A\1A\1B\1B\1B\1B\1B\1B\1B\1B\1C\1C\1C\1C\1C\1C\1C\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1E\1E\1E\1E\1E\1E\1E\1F\1F\1F\1F\1F", align 16
@outfile = common dso_local global %struct._IO_FILE* null, align 8
@errortext = common dso_local global [256 x i8] zeroinitializer, align 16
@statfile = common dso_local global %struct._IO_FILE* null, align 8
@newrefframe = common dso_local global [3 x i8*] zeroinitializer, align 16
@oldrefframe = common dso_local global [3 x i8*] zeroinitializer, align 16
@auxframe = common dso_local global [3 x i8*] zeroinitializer, align 16
@neworgframe = common dso_local global [3 x i8*] zeroinitializer, align 16
@oldorgframe = common dso_local global [3 x i8*] zeroinitializer, align 16
@auxorgframe = common dso_local global [3 x i8*] zeroinitializer, align 16
@predframe = common dso_local global [3 x i8*] zeroinitializer, align 16
@blocks = common dso_local global [64 x i16]* null, align 8
@intra_q = common dso_local global [64 x i8] zeroinitializer, align 16
@inter_q = common dso_local global [64 x i8] zeroinitializer, align 16
@chrom_intra_q = common dso_local global [64 x i8] zeroinitializer, align 16
@chrom_inter_q = common dso_local global [64 x i8] zeroinitializer, align 16
@dc_dct_pred = common dso_local global [3 x i32] zeroinitializer, align 4
@mbinfo = common dso_local global %struct.mbinfo* null, align 8
@motion_data = common dso_local global %struct.motion_data* null, align 8
@clp = common dso_local global i8* null, align 8
@id_string = common dso_local global [256 x i8] zeroinitializer, align 16
@tplorg = common dso_local global [256 x i8] zeroinitializer, align 16
@tplref = common dso_local global [256 x i8] zeroinitializer, align 16
@iqname = common dso_local global [256 x i8] zeroinitializer, align 16
@niqname = common dso_local global [256 x i8] zeroinitializer, align 16
@statname = common dso_local global [256 x i8] zeroinitializer, align 16
@inputtype = common dso_local global i32 0, align 4
@quiet = common dso_local global i32 0, align 4
@N = common dso_local global i32 0, align 4
@M = common dso_local global i32 0, align 4
@P = common dso_local global i32 0, align 4
@nframes = common dso_local global i32 0, align 4
@frame0 = common dso_local global i32 0, align 4
@tc0 = common dso_local global i32 0, align 4
@mpeg1 = common dso_local global i32 0, align 4
@fieldpic = common dso_local global i32 0, align 4
@horizontal_size = common dso_local global i32 0, align 4
@vertical_size = common dso_local global i32 0, align 4
@width = common dso_local global i32 0, align 4
@height = common dso_local global i32 0, align 4
@chrom_width = common dso_local global i32 0, align 4
@chrom_height = common dso_local global i32 0, align 4
@block_count = common dso_local global i32 0, align 4
@mb_width = common dso_local global i32 0, align 4
@mb_height = common dso_local global i32 0, align 4
@width2 = common dso_local global i32 0, align 4
@height2 = common dso_local global i32 0, align 4
@mb_height2 = common dso_local global i32 0, align 4
@chrom_width2 = common dso_local global i32 0, align 4
@aspectratio = common dso_local global i32 0, align 4
@frame_rate_code = common dso_local global i32 0, align 4
@frame_rate = common dso_local global double 0.000000e+00, align 8
@bit_rate = common dso_local global double 0.000000e+00, align 8
@vbv_buffer_size = common dso_local global i32 0, align 4
@constrparms = common dso_local global i32 0, align 4
@load_iquant = common dso_local global i32 0, align 4
@load_niquant = common dso_local global i32 0, align 4
@load_ciquant = common dso_local global i32 0, align 4
@load_cniquant = common dso_local global i32 0, align 4
@profile = common dso_local global i32 0, align 4
@level = common dso_local global i32 0, align 4
@prog_seq = common dso_local global i32 0, align 4
@chroma_format = common dso_local global i32 0, align 4
@low_delay = common dso_local global i32 0, align 4
@video_format = common dso_local global i32 0, align 4
@color_primaries = common dso_local global i32 0, align 4
@transfer_characteristics = common dso_local global i32 0, align 4
@matrix_coefficients = common dso_local global i32 0, align 4
@display_horizontal_size = common dso_local global i32 0, align 4
@display_vertical_size = common dso_local global i32 0, align 4
@temp_ref = common dso_local global i32 0, align 4
@pict_type = common dso_local global i32 0, align 4
@vbv_delay = common dso_local global i32 0, align 4
@forw_hor_f_code = common dso_local global i32 0, align 4
@forw_vert_f_code = common dso_local global i32 0, align 4
@back_hor_f_code = common dso_local global i32 0, align 4
@back_vert_f_code = common dso_local global i32 0, align 4
@dc_prec = common dso_local global i32 0, align 4
@pict_struct = common dso_local global i32 0, align 4
@topfirst = common dso_local global i32 0, align 4
@frame_pred_dct_tab = common dso_local global [3 x i32] zeroinitializer, align 4
@frame_pred_dct = common dso_local global i32 0, align 4
@conceal_tab = common dso_local global [3 x i32] zeroinitializer, align 4
@qscale_tab = common dso_local global [3 x i32] zeroinitializer, align 4
@q_scale_type = common dso_local global i32 0, align 4
@intravlc_tab = common dso_local global [3 x i32] zeroinitializer, align 4
@intravlc = common dso_local global i32 0, align 4
@altscan_tab = common dso_local global [3 x i32] zeroinitializer, align 4
@altscan = common dso_local global i32 0, align 4
@repeatfirst = common dso_local global i32 0, align 4
@prog_frame = common dso_local global i32 0, align 4
@.str.65 = private unnamed_addr constant [9 x i8] c"\0A%s, %s\0A\00", align 1
@.str.1.66 = private unnamed_addr constant [35 x i8] c"Usage: mpeg2encode in.par out.m2v\0A\00", align 1
@.str.2.67 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.3.68 = private unnamed_addr constant [31 x i8] c"Couldn't create output file %s\00", align 1
@init.block_count_tab = internal global [3 x i32] [i32 6, i32 8, i32 12], align 4
@.str.4.71 = private unnamed_addr constant [15 x i8] c"malloc failed\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.5.72 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.6.73 = private unnamed_addr constant [42 x i8] c"Couldn't create statistics output file %s\00", align 1
@.str.7.74 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.34.75 = private unnamed_addr constant [35 x i8] c"Couldn't open quant matrix file %s\00", align 1
@.str.10.76 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.35.77 = private unnamed_addr constant [30 x i8] c"invalid value in quant matrix\00", align 1
@.str.8.78 = private unnamed_addr constant [32 x i8] c"Couldn't open parameter file %s\00", align 1
@.str.9.79 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.11.80 = private unnamed_addr constant [12 x i8] c"%d:%d:%d:%d\00", align 1
@.str.12.81 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.str.13.82 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@.str.14.83 = private unnamed_addr constant [19 x i8] c"N must be positive\00", align 1
@.str.15.84 = private unnamed_addr constant [19 x i8] c"M must be positive\00", align 1
@.str.16.85 = private unnamed_addr constant [35 x i8] c"N must be an integer multiple of M\00", align 1
@.str.17.86 = private unnamed_addr constant [12 x i8] c"%d %d %d %d\00", align 1
@readparmfile.ratetab = internal global [8 x double] [double 0x4037F9DCB5112287, double 2.400000e+01, double 2.500000e+01, double 0x403DF853E2556B28, double 3.000000e+01, double 5.000000e+01, double 0x404DF853E2556B28, double 6.000000e+01], align 16
@.str.18.87 = private unnamed_addr constant [50 x i8] c"Warning: setting constrained_parameters_flag = 0\0A\00", align 1
@.str.19.88 = private unnamed_addr constant [43 x i8] c"Warning: setting progressive_sequence = 1\0A\00", align 1
@.str.20.89 = private unnamed_addr constant [44 x i8] c"Warning: setting chroma_format = 1 (4:2:0)\0A\00", align 1
@.str.21.90 = private unnamed_addr constant [41 x i8] c"Warning: setting intra_dc_precision = 0\0A\00", align 1
@.str.22.91 = private unnamed_addr constant [37 x i8] c"Warning: setting qscale_tab[%d] = 0\0A\00", align 1
@.str.23.92 = private unnamed_addr constant [39 x i8] c"Warning: setting intravlc_tab[%d] = 0\0A\00", align 1
@.str.24.93 = private unnamed_addr constant [38 x i8] c"Warning: setting altscan_tab[%d] = 0\0A\00", align 1
@.str.25.94 = private unnamed_addr constant [40 x i8] c"Warning: setting progressive_frame = 1\0A\00", align 1
@.str.26.95 = private unnamed_addr constant [37 x i8] c"Warning: setting field_pictures = 0\0A\00", align 1
@.str.27.96 = private unnamed_addr constant [41 x i8] c"Warning: setting repeat_first_field = 0\0A\00", align 1
@.str.28.97 = private unnamed_addr constant [47 x i8] c"Warning: setting frame_pred_frame_dct[%d] = 1\0A\00", align 1
@.str.29.98 = private unnamed_addr constant [38 x i8] c"Warning: setting top_field_first = 0\0A\00", align 1
@.str.30.99 = private unnamed_addr constant [57 x i8] c"Warning: reducing forward horizontal search width to %d\0A\00", align 1
@.str.31.100 = private unnamed_addr constant [55 x i8] c"Warning: reducing forward vertical search width to %d\0A\00", align 1
@.str.32.101 = private unnamed_addr constant [58 x i8] c"Warning: reducing backward horizontal search width to %d\0A\00", align 1
@.str.33.102 = private unnamed_addr constant [56 x i8] c"Warning: reducing backward vertical search width to %d\0A\00", align 1
@.str.103 = private unnamed_addr constant [21 x i8] c"invalid motion_type\0A\00", align 1
@outcnt = internal global i32 0, align 4
@bytecnt = internal global i32 0, align 4
@outbfr = internal global i8 0, align 1
@.str.106 = private unnamed_addr constant [23 x i8] c"invalid motion vector\0A\00", align 1
@.str.109 = private unnamed_addr constant [19 x i8] c"Encoding frame %d \00", align 1
@.str.1.110 = private unnamed_addr constant [35 x i8] c"\0AFrame %d (#%d in display order):\0A\00", align 1
@putseq.ipb = internal global [5 x i8] c" IPBD", align 1
@.str.2.111 = private unnamed_addr constant [18 x i8] c" picture_type=%c\0A\00", align 1
@.str.3.112 = private unnamed_addr constant [24 x i8] c" temporal_reference=%d\0A\00", align 1
@.str.4.113 = private unnamed_addr constant [26 x i8] c" frame_pred_frame_dct=%d\0A\00", align 1
@.str.5.114 = private unnamed_addr constant [18 x i8] c" q_scale_type=%d\0A\00", align 1
@.str.6.115 = private unnamed_addr constant [22 x i8] c" intra_vlc_format=%d\0A\00", align 1
@.str.7.116 = private unnamed_addr constant [20 x i8] c" alternate_scan=%d\0A\00", align 1
@.str.8.117 = private unnamed_addr constant [43 x i8] c" forward search window: %d...%d / %d...%d\0A\00", align 1
@.str.9.118 = private unnamed_addr constant [46 x i8] c" forward vector range: %d...%d.5 / %d...%d.5\0A\00", align 1
@.str.10.119 = private unnamed_addr constant [44 x i8] c" backward search window: %d...%d / %d...%d\0A\00", align 1
@.str.11.120 = private unnamed_addr constant [47 x i8] c" backward vector range: %d...%d.5 / %d...%d.5\0A\00", align 1
@.str.13.121 = private unnamed_addr constant [4 x i8] c"top\00", align 1
@.str.14.122 = private unnamed_addr constant [4 x i8] c"bot\00", align 1
@.str.12.123 = private unnamed_addr constant [20 x i8] c"\0Afirst field  (%s) \00", align 1
@.str.15.124 = private unnamed_addr constant [19 x i8] c"second field (%s) \00", align 1
@DClumtab = internal global [12 x %struct.sVLCtable] [%struct.sVLCtable { i16 4, i8 3 }, %struct.sVLCtable { i16 0, i8 2 }, %struct.sVLCtable { i16 1, i8 2 }, %struct.sVLCtable { i16 5, i8 3 }, %struct.sVLCtable { i16 6, i8 3 }, %struct.sVLCtable { i16 14, i8 4 }, %struct.sVLCtable { i16 30, i8 5 }, %struct.sVLCtable { i16 62, i8 6 }, %struct.sVLCtable { i16 126, i8 7 }, %struct.sVLCtable { i16 254, i8 8 }, %struct.sVLCtable { i16 510, i8 9 }, %struct.sVLCtable { i16 511, i8 9 }], align 16
@.str.1.127 = private unnamed_addr constant [28 x i8] c"DC value out of range (%d)\0A\00", align 1
@DCchromtab = internal global [12 x %struct.sVLCtable] [%struct.sVLCtable { i16 0, i8 2 }, %struct.sVLCtable { i16 1, i8 2 }, %struct.sVLCtable { i16 2, i8 2 }, %struct.sVLCtable { i16 6, i8 3 }, %struct.sVLCtable { i16 14, i8 4 }, %struct.sVLCtable { i16 30, i8 5 }, %struct.sVLCtable { i16 62, i8 6 }, %struct.sVLCtable { i16 126, i8 7 }, %struct.sVLCtable { i16 254, i8 8 }, %struct.sVLCtable { i16 510, i8 9 }, %struct.sVLCtable { i16 1022, i8 10 }, %struct.sVLCtable { i16 1023, i8 10 }], align 16
@.str.134 = private unnamed_addr constant [49 x i8] c"AC value out of range (run=%d, signed_level=%d)\0A\00", align 1
@dct_code_tab1a = internal global <{ [40 x %struct.VLCtable], <{ [18 x %struct.VLCtable], [22 x %struct.VLCtable] }> }> <{ [40 x %struct.VLCtable] [%struct.VLCtable { i8 2, i8 2 }, %struct.VLCtable { i8 6, i8 3 }, %struct.VLCtable { i8 7, i8 4 }, %struct.VLCtable { i8 28, i8 5 }, %struct.VLCtable { i8 29, i8 5 }, %struct.VLCtable { i8 5, i8 6 }, %struct.VLCtable { i8 4, i8 6 }, %struct.VLCtable { i8 123, i8 7 }, %struct.VLCtable { i8 124, i8 7 }, %struct.VLCtable { i8 35, i8 8 }, %struct.VLCtable { i8 34, i8 8 }, %struct.VLCtable { i8 -6, i8 8 }, %struct.VLCtable { i8 -5, i8 8 }, %struct.VLCtable { i8 -2, i8 8 }, %struct.VLCtable { i8 -1, i8 8 }, %struct.VLCtable { i8 31, i8 14 }, %struct.VLCtable { i8 30, i8 14 }, %struct.VLCtable { i8 29, i8 14 }, %struct.VLCtable { i8 28, i8 14 }, %struct.VLCtable { i8 27, i8 14 }, %struct.VLCtable { i8 26, i8 14 }, %struct.VLCtable { i8 25, i8 14 }, %struct.VLCtable { i8 24, i8 14 }, %struct.VLCtable { i8 23, i8 14 }, %struct.VLCtable { i8 22, i8 14 }, %struct.VLCtable { i8 21, i8 14 }, %struct.VLCtable { i8 20, i8 14 }, %struct.VLCtable { i8 19, i8 14 }, %struct.VLCtable { i8 18, i8 14 }, %struct.VLCtable { i8 17, i8 14 }, %struct.VLCtable { i8 16, i8 14 }, %struct.VLCtable { i8 24, i8 15 }, %struct.VLCtable { i8 23, i8 15 }, %struct.VLCtable { i8 22, i8 15 }, %struct.VLCtable { i8 21, i8 15 }, %struct.VLCtable { i8 20, i8 15 }, %struct.VLCtable { i8 19, i8 15 }, %struct.VLCtable { i8 18, i8 15 }, %struct.VLCtable { i8 17, i8 15 }, %struct.VLCtable { i8 16, i8 15 }], <{ [18 x %struct.VLCtable], [22 x %struct.VLCtable] }> <{ [18 x %struct.VLCtable] [%struct.VLCtable { i8 2, i8 3 }, %struct.VLCtable { i8 6, i8 5 }, %struct.VLCtable { i8 121, i8 7 }, %struct.VLCtable { i8 39, i8 8 }, %struct.VLCtable { i8 32, i8 8 }, %struct.VLCtable { i8 22, i8 13 }, %struct.VLCtable { i8 21, i8 13 }, %struct.VLCtable { i8 31, i8 15 }, %struct.VLCtable { i8 30, i8 15 }, %struct.VLCtable { i8 29, i8 15 }, %struct.VLCtable { i8 28, i8 15 }, %struct.VLCtable { i8 27, i8 15 }, %struct.VLCtable { i8 26, i8 15 }, %struct.VLCtable { i8 25, i8 15 }, %struct.VLCtable { i8 19, i8 16 }, %struct.VLCtable { i8 18, i8 16 }, %struct.VLCtable { i8 17, i8 16 }, %struct.VLCtable { i8 16, i8 16 }], [22 x %struct.VLCtable] zeroinitializer }> }>, align 16
@dct_code_tab1 = internal global <{ [40 x %struct.VLCtable], <{ [18 x %struct.VLCtable], [22 x %struct.VLCtable] }> }> <{ [40 x %struct.VLCtable] [%struct.VLCtable { i8 3, i8 2 }, %struct.VLCtable { i8 4, i8 4 }, %struct.VLCtable { i8 5, i8 5 }, %struct.VLCtable { i8 6, i8 7 }, %struct.VLCtable { i8 38, i8 8 }, %struct.VLCtable { i8 33, i8 8 }, %struct.VLCtable { i8 10, i8 10 }, %struct.VLCtable { i8 29, i8 12 }, %struct.VLCtable { i8 24, i8 12 }, %struct.VLCtable { i8 19, i8 12 }, %struct.VLCtable { i8 16, i8 12 }, %struct.VLCtable { i8 26, i8 13 }, %struct.VLCtable { i8 25, i8 13 }, %struct.VLCtable { i8 24, i8 13 }, %struct.VLCtable { i8 23, i8 13 }, %struct.VLCtable { i8 31, i8 14 }, %struct.VLCtable { i8 30, i8 14 }, %struct.VLCtable { i8 29, i8 14 }, %struct.VLCtable { i8 28, i8 14 }, %struct.VLCtable { i8 27, i8 14 }, %struct.VLCtable { i8 26, i8 14 }, %struct.VLCtable { i8 25, i8 14 }, %struct.VLCtable { i8 24, i8 14 }, %struct.VLCtable { i8 23, i8 14 }, %struct.VLCtable { i8 22, i8 14 }, %struct.VLCtable { i8 21, i8 14 }, %struct.VLCtable { i8 20, i8 14 }, %struct.VLCtable { i8 19, i8 14 }, %struct.VLCtable { i8 18, i8 14 }, %struct.VLCtable { i8 17, i8 14 }, %struct.VLCtable { i8 16, i8 14 }, %struct.VLCtable { i8 24, i8 15 }, %struct.VLCtable { i8 23, i8 15 }, %struct.VLCtable { i8 22, i8 15 }, %struct.VLCtable { i8 21, i8 15 }, %struct.VLCtable { i8 20, i8 15 }, %struct.VLCtable { i8 19, i8 15 }, %struct.VLCtable { i8 18, i8 15 }, %struct.VLCtable { i8 17, i8 15 }, %struct.VLCtable { i8 16, i8 15 }], <{ [18 x %struct.VLCtable], [22 x %struct.VLCtable] }> <{ [18 x %struct.VLCtable] [%struct.VLCtable { i8 3, i8 3 }, %struct.VLCtable { i8 6, i8 6 }, %struct.VLCtable { i8 37, i8 8 }, %struct.VLCtable { i8 12, i8 10 }, %struct.VLCtable { i8 27, i8 12 }, %struct.VLCtable { i8 22, i8 13 }, %struct.VLCtable { i8 21, i8 13 }, %struct.VLCtable { i8 31, i8 15 }, %struct.VLCtable { i8 30, i8 15 }, %struct.VLCtable { i8 29, i8 15 }, %struct.VLCtable { i8 28, i8 15 }, %struct.VLCtable { i8 27, i8 15 }, %struct.VLCtable { i8 26, i8 15 }, %struct.VLCtable { i8 25, i8 15 }, %struct.VLCtable { i8 19, i8 16 }, %struct.VLCtable { i8 18, i8 16 }, %struct.VLCtable { i8 17, i8 16 }, %struct.VLCtable { i8 16, i8 16 }], [22 x %struct.VLCtable] zeroinitializer }> }>, align 16
@dct_code_tab2a = internal global [30 x [5 x %struct.VLCtable]] [[5 x %struct.VLCtable] [%struct.VLCtable { i8 5, i8 5 }, %struct.VLCtable { i8 7, i8 7 }, %struct.VLCtable { i8 -4, i8 8 }, %struct.VLCtable { i8 12, i8 10 }, %struct.VLCtable { i8 20, i8 13 }], [5 x %struct.VLCtable] [%struct.VLCtable { i8 7, i8 5 }, %struct.VLCtable { i8 38, i8 8 }, %struct.VLCtable { i8 28, i8 12 }, %struct.VLCtable { i8 19, i8 13 }, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 6, i8 6 }, %struct.VLCtable { i8 -3, i8 8 }, %struct.VLCtable { i8 18, i8 12 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 7, i8 6 }, %struct.VLCtable { i8 4, i8 9 }, %struct.VLCtable { i8 18, i8 13 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 6, i8 7 }, %struct.VLCtable { i8 30, i8 12 }, %struct.VLCtable { i8 20, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 4, i8 7 }, %struct.VLCtable { i8 21, i8 12 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 5, i8 7 }, %struct.VLCtable { i8 17, i8 12 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 120, i8 7 }, %struct.VLCtable { i8 17, i8 13 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 122, i8 7 }, %struct.VLCtable { i8 16, i8 13 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 33, i8 8 }, %struct.VLCtable { i8 26, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 37, i8 8 }, %struct.VLCtable { i8 25, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 36, i8 8 }, %struct.VLCtable { i8 24, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 5, i8 9 }, %struct.VLCtable { i8 23, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 7, i8 9 }, %struct.VLCtable { i8 22, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 13, i8 10 }, %struct.VLCtable { i8 21, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 31, i8 12 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 26, i8 12 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 25, i8 12 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 23, i8 12 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 22, i8 12 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 31, i8 13 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 30, i8 13 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 29, i8 13 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 28, i8 13 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 27, i8 13 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 31, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 30, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 29, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 28, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 27, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer]], align 16
@dct_code_tab2 = internal global [30 x [5 x %struct.VLCtable]] [[5 x %struct.VLCtable] [%struct.VLCtable { i8 5, i8 4 }, %struct.VLCtable { i8 4, i8 7 }, %struct.VLCtable { i8 11, i8 10 }, %struct.VLCtable { i8 20, i8 12 }, %struct.VLCtable { i8 20, i8 13 }], [5 x %struct.VLCtable] [%struct.VLCtable { i8 7, i8 5 }, %struct.VLCtable { i8 36, i8 8 }, %struct.VLCtable { i8 28, i8 12 }, %struct.VLCtable { i8 19, i8 13 }, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 6, i8 5 }, %struct.VLCtable { i8 15, i8 10 }, %struct.VLCtable { i8 18, i8 12 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 7, i8 6 }, %struct.VLCtable { i8 9, i8 10 }, %struct.VLCtable { i8 18, i8 13 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 5, i8 6 }, %struct.VLCtable { i8 30, i8 12 }, %struct.VLCtable { i8 20, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 4, i8 6 }, %struct.VLCtable { i8 21, i8 12 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 7, i8 7 }, %struct.VLCtable { i8 17, i8 12 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 5, i8 7 }, %struct.VLCtable { i8 17, i8 13 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 39, i8 8 }, %struct.VLCtable { i8 16, i8 13 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 35, i8 8 }, %struct.VLCtable { i8 26, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 34, i8 8 }, %struct.VLCtable { i8 25, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 32, i8 8 }, %struct.VLCtable { i8 24, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 14, i8 10 }, %struct.VLCtable { i8 23, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 13, i8 10 }, %struct.VLCtable { i8 22, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 8, i8 10 }, %struct.VLCtable { i8 21, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 31, i8 12 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 26, i8 12 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 25, i8 12 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 23, i8 12 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 22, i8 12 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 31, i8 13 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 30, i8 13 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 29, i8 13 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 28, i8 13 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 27, i8 13 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 31, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 30, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 29, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 28, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [5 x %struct.VLCtable] [%struct.VLCtable { i8 27, i8 16 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer]], align 16
@addrinctab = internal global [33 x %struct.VLCtable] [%struct.VLCtable { i8 1, i8 1 }, %struct.VLCtable { i8 3, i8 3 }, %struct.VLCtable { i8 2, i8 3 }, %struct.VLCtable { i8 3, i8 4 }, %struct.VLCtable { i8 2, i8 4 }, %struct.VLCtable { i8 3, i8 5 }, %struct.VLCtable { i8 2, i8 5 }, %struct.VLCtable { i8 7, i8 7 }, %struct.VLCtable { i8 6, i8 7 }, %struct.VLCtable { i8 11, i8 8 }, %struct.VLCtable { i8 10, i8 8 }, %struct.VLCtable { i8 9, i8 8 }, %struct.VLCtable { i8 8, i8 8 }, %struct.VLCtable { i8 7, i8 8 }, %struct.VLCtable { i8 6, i8 8 }, %struct.VLCtable { i8 23, i8 10 }, %struct.VLCtable { i8 22, i8 10 }, %struct.VLCtable { i8 21, i8 10 }, %struct.VLCtable { i8 20, i8 10 }, %struct.VLCtable { i8 19, i8 10 }, %struct.VLCtable { i8 18, i8 10 }, %struct.VLCtable { i8 35, i8 11 }, %struct.VLCtable { i8 34, i8 11 }, %struct.VLCtable { i8 33, i8 11 }, %struct.VLCtable { i8 32, i8 11 }, %struct.VLCtable { i8 31, i8 11 }, %struct.VLCtable { i8 30, i8 11 }, %struct.VLCtable { i8 29, i8 11 }, %struct.VLCtable { i8 28, i8 11 }, %struct.VLCtable { i8 27, i8 11 }, %struct.VLCtable { i8 26, i8 11 }, %struct.VLCtable { i8 25, i8 11 }, %struct.VLCtable { i8 24, i8 11 }], align 16
@mbtypetab = internal global <{ <{ [18 x %struct.VLCtable], [14 x %struct.VLCtable] }>, [32 x %struct.VLCtable], [32 x %struct.VLCtable] }> <{ <{ [18 x %struct.VLCtable], [14 x %struct.VLCtable] }> <{ [18 x %struct.VLCtable] [%struct.VLCtable zeroinitializer, %struct.VLCtable { i8 1, i8 1 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable { i8 1, i8 2 }], [14 x %struct.VLCtable] zeroinitializer }>, [32 x %struct.VLCtable] [%struct.VLCtable zeroinitializer, %struct.VLCtable { i8 3, i8 5 }, %struct.VLCtable { i8 1, i8 2 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable { i8 1, i8 3 }, %struct.VLCtable zeroinitializer, %struct.VLCtable { i8 1, i8 1 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable { i8 1, i8 6 }, %struct.VLCtable { i8 1, i8 5 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable { i8 2, i8 5 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer], [32 x %struct.VLCtable] [%struct.VLCtable zeroinitializer, %struct.VLCtable { i8 3, i8 5 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable { i8 2, i8 3 }, %struct.VLCtable zeroinitializer, %struct.VLCtable { i8 3, i8 3 }, %struct.VLCtable zeroinitializer, %struct.VLCtable { i8 2, i8 4 }, %struct.VLCtable zeroinitializer, %struct.VLCtable { i8 3, i8 4 }, %struct.VLCtable zeroinitializer, %struct.VLCtable { i8 2, i8 2 }, %struct.VLCtable zeroinitializer, %struct.VLCtable { i8 3, i8 2 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable { i8 1, i8 6 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable { i8 2, i8 6 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable { i8 3, i8 6 }, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable zeroinitializer, %struct.VLCtable { i8 2, i8 5 }, %struct.VLCtable zeroinitializer] }>, align 16
@motionvectab = internal global [17 x %struct.VLCtable] [%struct.VLCtable { i8 1, i8 1 }, %struct.VLCtable { i8 1, i8 2 }, %struct.VLCtable { i8 1, i8 3 }, %struct.VLCtable { i8 1, i8 4 }, %struct.VLCtable { i8 3, i8 6 }, %struct.VLCtable { i8 5, i8 7 }, %struct.VLCtable { i8 4, i8 7 }, %struct.VLCtable { i8 3, i8 7 }, %struct.VLCtable { i8 11, i8 9 }, %struct.VLCtable { i8 10, i8 9 }, %struct.VLCtable { i8 9, i8 9 }, %struct.VLCtable { i8 17, i8 10 }, %struct.VLCtable { i8 16, i8 10 }, %struct.VLCtable { i8 15, i8 10 }, %struct.VLCtable { i8 14, i8 10 }, %struct.VLCtable { i8 13, i8 10 }, %struct.VLCtable { i8 12, i8 10 }], align 16
@cbptable = internal global [64 x %struct.VLCtable] [%struct.VLCtable { i8 1, i8 9 }, %struct.VLCtable { i8 11, i8 5 }, %struct.VLCtable { i8 9, i8 5 }, %struct.VLCtable { i8 13, i8 6 }, %struct.VLCtable { i8 13, i8 4 }, %struct.VLCtable { i8 23, i8 7 }, %struct.VLCtable { i8 19, i8 7 }, %struct.VLCtable { i8 31, i8 8 }, %struct.VLCtable { i8 12, i8 4 }, %struct.VLCtable { i8 22, i8 7 }, %struct.VLCtable { i8 18, i8 7 }, %struct.VLCtable { i8 30, i8 8 }, %struct.VLCtable { i8 19, i8 5 }, %struct.VLCtable { i8 27, i8 8 }, %struct.VLCtable { i8 23, i8 8 }, %struct.VLCtable { i8 19, i8 8 }, %struct.VLCtable { i8 11, i8 4 }, %struct.VLCtable { i8 21, i8 7 }, %struct.VLCtable { i8 17, i8 7 }, %struct.VLCtable { i8 29, i8 8 }, %struct.VLCtable { i8 17, i8 5 }, %struct.VLCtable { i8 25, i8 8 }, %struct.VLCtable { i8 21, i8 8 }, %struct.VLCtable { i8 17, i8 8 }, %struct.VLCtable { i8 15, i8 6 }, %struct.VLCtable { i8 15, i8 8 }, %struct.VLCtable { i8 13, i8 8 }, %struct.VLCtable { i8 3, i8 9 }, %struct.VLCtable { i8 15, i8 5 }, %struct.VLCtable { i8 11, i8 8 }, %struct.VLCtable { i8 7, i8 8 }, %struct.VLCtable { i8 7, i8 9 }, %struct.VLCtable { i8 10, i8 4 }, %struct.VLCtable { i8 20, i8 7 }, %struct.VLCtable { i8 16, i8 7 }, %struct.VLCtable { i8 28, i8 8 }, %struct.VLCtable { i8 14, i8 6 }, %struct.VLCtable { i8 14, i8 8 }, %struct.VLCtable { i8 12, i8 8 }, %struct.VLCtable { i8 2, i8 9 }, %struct.VLCtable { i8 16, i8 5 }, %struct.VLCtable { i8 24, i8 8 }, %struct.VLCtable { i8 20, i8 8 }, %struct.VLCtable { i8 16, i8 8 }, %struct.VLCtable { i8 14, i8 5 }, %struct.VLCtable { i8 10, i8 8 }, %struct.VLCtable { i8 6, i8 8 }, %struct.VLCtable { i8 6, i8 9 }, %struct.VLCtable { i8 18, i8 5 }, %struct.VLCtable { i8 26, i8 8 }, %struct.VLCtable { i8 22, i8 8 }, %struct.VLCtable { i8 18, i8 8 }, %struct.VLCtable { i8 13, i8 5 }, %struct.VLCtable { i8 9, i8 8 }, %struct.VLCtable { i8 5, i8 8 }, %struct.VLCtable { i8 5, i8 9 }, %struct.VLCtable { i8 12, i8 5 }, %struct.VLCtable { i8 8, i8 8 }, %struct.VLCtable { i8 4, i8 8 }, %struct.VLCtable { i8 4, i8 9 }, %struct.VLCtable { i8 7, i8 3 }, %struct.VLCtable { i8 10, i8 5 }, %struct.VLCtable { i8 8, i8 5 }, %struct.VLCtable { i8 12, i8 6 }], align 16
@r = common dso_local global i32 0, align 4
@avg_act = common dso_local global double 0.000000e+00, align 8
@Xi = common dso_local global i32 0, align 4
@Xp = common dso_local global i32 0, align 4
@Xb = common dso_local global i32 0, align 4
@d0i = common dso_local global i32 0, align 4
@d0p = common dso_local global i32 0, align 4
@d0b = common dso_local global i32 0, align 4
@R = internal global i32 0, align 4
@.str.171 = private unnamed_addr constant [40 x i8] c"\0Arate control: sequence initialization\0A\00", align 1
@.str.1.172 = private unnamed_addr constant [66 x i8] c" initial global complexity measures (I,P,B): Xi=%d, Xp=%d, Xb=%d\0A\00", align 1
@.str.2.173 = private unnamed_addr constant [27 x i8] c" reaction parameter: r=%d\0A\00", align 1
@.str.3.174 = private unnamed_addr constant [66 x i8] c" initial virtual buffer fullness (I,P,B): d0i=%d, d0p=%d, d0b=%d\0A\00", align 1
@.str.4.175 = private unnamed_addr constant [41 x i8] c" initial average activity: avg_act=%.1f\0A\00", align 1
@Np = internal global i32 0, align 4
@Nb = internal global i32 0, align 4
@.str.5.178 = private unnamed_addr constant [44 x i8] c"\0Arate control: new group of pictures (GOP)\0A\00", align 1
@.str.6.179 = private unnamed_addr constant [38 x i8] c" target number of bits for GOP: R=%d\0A\00", align 1
@.str.7.180 = private unnamed_addr constant [37 x i8] c" number of P pictures in GOP: Np=%d\0A\00", align 1
@.str.8.181 = private unnamed_addr constant [37 x i8] c" number of B pictures in GOP: Nb=%d\0A\00", align 1
@T = internal global i32 0, align 4
@d = internal global i32 0, align 4
@S = internal global i32 0, align 4
@Q = internal global i32 0, align 4
@actsum = internal global double 0.000000e+00, align 8
@.str.9.184 = private unnamed_addr constant [33 x i8] c"\0Arate control: start of picture\0A\00", align 1
@.str.10.185 = private unnamed_addr constant [30 x i8] c" target number of bits: T=%d\0A\00", align 1
@.str.11.188 = private unnamed_addr constant [31 x i8] c"\0Arate control: end of picture\0A\00", align 1
@.str.12.189 = private unnamed_addr constant [30 x i8] c" actual number of bits: S=%d\0A\00", align 1
@.str.13.190 = private unnamed_addr constant [40 x i8] c" average quantization parameter Q=%.1f\0A\00", align 1
@.str.14.191 = private unnamed_addr constant [40 x i8] c" remaining number of bits in GOP: R=%d\0A\00", align 1
@.str.15.192 = private unnamed_addr constant [58 x i8] c" global complexity measures (I,P,B): Xi=%d, Xp=%d, Xb=%d\0A\00", align 1
@.str.16.193 = private unnamed_addr constant [58 x i8] c" virtual buffer fullness (I,P,B): d0i=%d, d0p=%d, d0b=%d\0A\00", align 1
@.str.17.194 = private unnamed_addr constant [47 x i8] c" remaining number of P pictures in GOP: Np=%d\0A\00", align 1
@.str.18.195 = private unnamed_addr constant [47 x i8] c" remaining number of B pictures in GOP: Nb=%d\0A\00", align 1
@.str.19.196 = private unnamed_addr constant [33 x i8] c" average activity: avg_act=%.1f\0A\00", align 1
@prev_mquant = internal global i32 0, align 4
@bitcnt_EOP = internal global i32 0, align 4
@calc_vbv_delay.next_ip_delay = internal global double 0.000000e+00, align 8
@calc_vbv_delay.decoding_time = internal global double 0.000000e+00, align 8
@.str.20.205 = private unnamed_addr constant [55 x i8] c"vbv_delay underflow! (decoding_time=%.1f, t_EOP=%.1f\0A)\00", align 1
@.str.21.206 = private unnamed_addr constant [21 x i8] c"vbv_delay overflow!\0A\00", align 1
@.str.22.207 = private unnamed_addr constant [64 x i8] c"\0Avbv_delay=%d (bitcount=%d, decoding_time=%.2f, bitcnt_EOP=%d)\0A\00", align 1
@.str.23.208 = private unnamed_addr constant [25 x i8] c"vbv_delay underflow: %d\0A\00", align 1
@.str.24.209 = private unnamed_addr constant [24 x i8] c"vbv_delay overflow: %d\0A\00", align 1
@read_ppm.coef = internal global [7 x [3 x double]] [[3 x double] [double 2.125000e-01, double 7.154000e-01, double 7.210000e-02], [3 x double] [double 2.990000e-01, double 5.870000e-01, double 1.140000e-01], [3 x double] [double 2.990000e-01, double 5.870000e-01, double 1.140000e-01], [3 x double] [double 3.000000e-01, double 5.900000e-01, double 1.100000e-01], [3 x double] [double 2.990000e-01, double 5.870000e-01, double 1.140000e-01], [3 x double] [double 2.990000e-01, double 5.870000e-01, double 1.140000e-01], [3 x double] [double 2.120000e-01, double 7.010000e-01, double 0x3FB645A1CAC08312]], align 16
@read_ppm.u444 = internal global i8* null, align 8
@read_ppm.v444 = internal global i8* null, align 8
@.str.6.212 = private unnamed_addr constant [14 x i8] c"malloc failed\00", align 1
@read_ppm.u422 = internal global i8* null, align 8
@read_ppm.v422 = internal global i8* null, align 8
@.str.7.213 = private unnamed_addr constant [7 x i8] c"%s.ppm\00", align 1
@.str.1.214 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.2.215 = private unnamed_addr constant [18 x i8] c"Couldn't open %s\0A\00", align 1
@.str.5.216 = private unnamed_addr constant [7 x i8] c"%s.yuv\00", align 1
@.str.217 = private unnamed_addr constant [5 x i8] c"%s.Y\00", align 1
@.str.3.218 = private unnamed_addr constant [5 x i8] c"%s.U\00", align 1
@.str.4.219 = private unnamed_addr constant [5 x i8] c"%s.V\00", align 1
@.str.222 = private unnamed_addr constant [55 x i8] c"Y: variance=%4.4g, MSE=%3.3g (%3.3g dB), SNR=%3.3g dB\0A\00", align 1
@.str.1.223 = private unnamed_addr constant [55 x i8] c"U: variance=%4.4g, MSE=%3.3g (%3.3g dB), SNR=%3.3g dB\0A\00", align 1
@.str.2.224 = private unnamed_addr constant [55 x i8] c"V: variance=%4.4g, MSE=%3.3g (%3.3g dB), SNR=%3.3g dB\0A\00", align 1
@.str.3.227 = private unnamed_addr constant [22 x i8] c"\0Apicture statistics:\0A\00", align 1
@.str.4.228 = private unnamed_addr constant [46 x i8] c" # of intra coded macroblocks:  %4d (%.1f%%)\0A\00", align 1
@.str.5.229 = private unnamed_addr constant [46 x i8] c" # of coded blocks:             %4d (%.1f%%)\0A\00", align 1
@.str.6.230 = private unnamed_addr constant [46 x i8] c" # of not coded macroblocks:    %4d (%.1f%%)\0A\00", align 1
@.str.7.231 = private unnamed_addr constant [46 x i8] c" # of skipped macroblocks:      %4d (%.1f%%)\0A\00", align 1
@.str.8.232 = private unnamed_addr constant [46 x i8] c" # of forw. pred. macroblocks:  %4d (%.1f%%)\0A\00", align 1
@.str.9.233 = private unnamed_addr constant [46 x i8] c" # of backw. pred. macroblocks: %4d (%.1f%%)\0A\00", align 1
@.str.10.234 = private unnamed_addr constant [46 x i8] c" # of interpolated macroblocks: %4d (%.1f%%)\0A\00", align 1
@.str.11.235 = private unnamed_addr constant [23 x i8] c"\0Amacroblock_type map:\0A\00", align 1
@.str.12.236 = private unnamed_addr constant [14 x i8] c"\0Amquant map:\0A\00", align 1
@.str.13.237 = private unnamed_addr constant [4 x i8] c"%3d\00", align 1
@.str.14.238 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.247 = private unnamed_addr constant [5 x i8] c"%s.Y\00", align 1
@.str.1.248 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.2.249 = private unnamed_addr constant [20 x i8] c"Couldn't create %s\0A\00", align 1
@.str.3.250 = private unnamed_addr constant [5 x i8] c"%s.U\00", align 1
@.str.4.251 = private unnamed_addr constant [5 x i8] c"%s.V\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @range_checks() #0 {
  %1 = alloca i32, align 4
  %2 = load i32, i32* @horizontal_size, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %7, label %4

4:                                                ; preds = %0
  %5 = load i32, i32* @horizontal_size, align 4
  %6 = icmp sgt i32 %5, 16383
  br i1 %6, label %7, label %8

7:                                                ; preds = %4, %0
  call void @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0))
  br label %8

8:                                                ; preds = %7, %4
  %9 = load i32, i32* @mpeg1, align 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = load i32, i32* @horizontal_size, align 4
  %13 = icmp sgt i32 %12, 4095
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  call void @error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0))
  br label %15

15:                                               ; preds = %14, %11, %8
  %16 = load i32, i32* @horizontal_size, align 4
  %17 = and i32 %16, 4095
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %15
  call void @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0))
  br label %20

20:                                               ; preds = %19, %15
  %21 = load i32, i32* @chroma_format, align 4
  %22 = icmp ne i32 %21, 3
  br i1 %22, label %23, label %28

23:                                               ; preds = %20
  %24 = load i32, i32* @horizontal_size, align 4
  %25 = srem i32 %24, 2
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  call void @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3, i64 0, i64 0))
  br label %28

28:                                               ; preds = %27, %23, %20
  %29 = load i32, i32* @vertical_size, align 4
  %30 = icmp slt i32 %29, 1
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = load i32, i32* @vertical_size, align 4
  %33 = icmp sgt i32 %32, 16383
  br i1 %33, label %34, label %35

34:                                               ; preds = %31, %28
  call void @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0))
  br label %35

35:                                               ; preds = %34, %31
  %36 = load i32, i32* @mpeg1, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %35
  %39 = load i32, i32* @vertical_size, align 4
  %40 = icmp sgt i32 %39, 4095
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.5, i64 0, i64 0))
  br label %42

42:                                               ; preds = %41, %38, %35
  %43 = load i32, i32* @vertical_size, align 4
  %44 = and i32 %43, 4095
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  call void @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i64 0, i64 0))
  br label %47

47:                                               ; preds = %46, %42
  %48 = load i32, i32* @chroma_format, align 4
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %55

50:                                               ; preds = %47
  %51 = load i32, i32* @vertical_size, align 4
  %52 = srem i32 %51, 2
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %50
  call void @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0))
  br label %55

55:                                               ; preds = %54, %50, %47
  %56 = load i32, i32* @fieldpic, align 4
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %72

58:                                               ; preds = %55
  %59 = load i32, i32* @vertical_size, align 4
  %60 = srem i32 %59, 2
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %58
  call void @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.8, i64 0, i64 0))
  br label %63

63:                                               ; preds = %62, %58
  %64 = load i32, i32* @chroma_format, align 4
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %71

66:                                               ; preds = %63
  %67 = load i32, i32* @vertical_size, align 4
  %68 = srem i32 %67, 4
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  call void @error(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.9, i64 0, i64 0))
  br label %71

71:                                               ; preds = %70, %66, %63
  br label %72

72:                                               ; preds = %71, %55
  %73 = load i32, i32* @mpeg1, align 4
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %83

75:                                               ; preds = %72
  %76 = load i32, i32* @aspectratio, align 4
  %77 = icmp slt i32 %76, 1
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  %79 = load i32, i32* @aspectratio, align 4
  %80 = icmp sgt i32 %79, 14
  br i1 %80, label %81, label %82

81:                                               ; preds = %78, %75
  call void @error(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0))
  br label %82

82:                                               ; preds = %81, %78
  br label %91

83:                                               ; preds = %72
  %84 = load i32, i32* @aspectratio, align 4
  %85 = icmp slt i32 %84, 1
  br i1 %85, label %89, label %86

86:                                               ; preds = %83
  %87 = load i32, i32* @aspectratio, align 4
  %88 = icmp sgt i32 %87, 4
  br i1 %88, label %89, label %90

89:                                               ; preds = %86, %83
  call void @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.11, i64 0, i64 0))
  br label %90

90:                                               ; preds = %89, %86
  br label %91

91:                                               ; preds = %90, %82
  %92 = load i32, i32* @frame_rate_code, align 4
  %93 = icmp slt i32 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %91
  %95 = load i32, i32* @frame_rate_code, align 4
  %96 = icmp sgt i32 %95, 8
  br i1 %96, label %97, label %98

97:                                               ; preds = %94, %91
  call void @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.12, i64 0, i64 0))
  br label %98

98:                                               ; preds = %97, %94
  %99 = load double, double* @bit_rate, align 8
  %100 = fcmp ole double %99, 0.000000e+00
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @error(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0))
  br label %102

102:                                              ; preds = %101, %98
  %103 = load double, double* @bit_rate, align 8
  %104 = fcmp ogt double %103, 0x4258FFFFFF9C0000
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0))
  br label %106

106:                                              ; preds = %105, %102
  %107 = load i32, i32* @mpeg1, align 4
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %113

109:                                              ; preds = %106
  %110 = load double, double* @bit_rate, align 8
  %111 = fcmp ogt double %110, 0x4198FFF9C0000000
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.15, i64 0, i64 0))
  br label %113

113:                                              ; preds = %112, %109, %106
  %114 = load i32, i32* @vbv_buffer_size, align 4
  %115 = icmp slt i32 %114, 1
  br i1 %115, label %119, label %116

116:                                              ; preds = %113
  %117 = load i32, i32* @vbv_buffer_size, align 4
  %118 = icmp sgt i32 %117, 262143
  br i1 %118, label %119, label %120

119:                                              ; preds = %116, %113
  call void @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.16, i64 0, i64 0))
  br label %120

120:                                              ; preds = %119, %116
  %121 = load i32, i32* @mpeg1, align 4
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %123, label %127

123:                                              ; preds = %120
  %124 = load i32, i32* @vbv_buffer_size, align 4
  %125 = icmp sge i32 %124, 1024
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.17, i64 0, i64 0))
  br label %127

127:                                              ; preds = %126, %123, %120
  %128 = load i32, i32* @chroma_format, align 4
  %129 = icmp slt i32 %128, 1
  br i1 %129, label %133, label %130

130:                                              ; preds = %127
  %131 = load i32, i32* @chroma_format, align 4
  %132 = icmp sgt i32 %131, 3
  br i1 %132, label %133, label %134

133:                                              ; preds = %130, %127
  call void @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0))
  br label %134

134:                                              ; preds = %133, %130
  %135 = load i32, i32* @video_format, align 4
  %136 = icmp slt i32 %135, 0
  br i1 %136, label %140, label %137

137:                                              ; preds = %134
  %138 = load i32, i32* @video_format, align 4
  %139 = icmp sgt i32 %138, 4
  br i1 %139, label %140, label %141

140:                                              ; preds = %137, %134
  call void @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.19, i64 0, i64 0))
  br label %141

141:                                              ; preds = %140, %137
  %142 = load i32, i32* @color_primaries, align 4
  %143 = icmp slt i32 %142, 1
  br i1 %143, label %150, label %144

144:                                              ; preds = %141
  %145 = load i32, i32* @color_primaries, align 4
  %146 = icmp sgt i32 %145, 7
  br i1 %146, label %150, label %147

147:                                              ; preds = %144
  %148 = load i32, i32* @color_primaries, align 4
  %149 = icmp eq i32 %148, 3
  br i1 %149, label %150, label %151

150:                                              ; preds = %147, %144, %141
  call void @error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.20, i64 0, i64 0))
  br label %151

151:                                              ; preds = %150, %147
  %152 = load i32, i32* @transfer_characteristics, align 4
  %153 = icmp slt i32 %152, 1
  br i1 %153, label %160, label %154

154:                                              ; preds = %151
  %155 = load i32, i32* @transfer_characteristics, align 4
  %156 = icmp sgt i32 %155, 7
  br i1 %156, label %160, label %157

157:                                              ; preds = %154
  %158 = load i32, i32* @transfer_characteristics, align 4
  %159 = icmp eq i32 %158, 3
  br i1 %159, label %160, label %161

160:                                              ; preds = %157, %154, %151
  call void @error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.21, i64 0, i64 0))
  br label %161

161:                                              ; preds = %160, %157
  %162 = load i32, i32* @matrix_coefficients, align 4
  %163 = icmp slt i32 %162, 1
  br i1 %163, label %170, label %164

164:                                              ; preds = %161
  %165 = load i32, i32* @matrix_coefficients, align 4
  %166 = icmp sgt i32 %165, 7
  br i1 %166, label %170, label %167

167:                                              ; preds = %164
  %168 = load i32, i32* @matrix_coefficients, align 4
  %169 = icmp eq i32 %168, 3
  br i1 %169, label %170, label %171

170:                                              ; preds = %167, %164, %161
  call void @error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.22, i64 0, i64 0))
  br label %171

171:                                              ; preds = %170, %167
  %172 = load i32, i32* @display_horizontal_size, align 4
  %173 = icmp slt i32 %172, 0
  br i1 %173, label %177, label %174

174:                                              ; preds = %171
  %175 = load i32, i32* @display_horizontal_size, align 4
  %176 = icmp sgt i32 %175, 16383
  br i1 %176, label %177, label %178

177:                                              ; preds = %174, %171
  call void @error(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.23, i64 0, i64 0))
  br label %178

178:                                              ; preds = %177, %174
  %179 = load i32, i32* @display_vertical_size, align 4
  %180 = icmp slt i32 %179, 0
  br i1 %180, label %184, label %181

181:                                              ; preds = %178
  %182 = load i32, i32* @display_vertical_size, align 4
  %183 = icmp sgt i32 %182, 16383
  br i1 %183, label %184, label %185

184:                                              ; preds = %181, %178
  call void @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.24, i64 0, i64 0))
  br label %185

185:                                              ; preds = %184, %181
  %186 = load i32, i32* @dc_prec, align 4
  %187 = icmp slt i32 %186, 0
  br i1 %187, label %191, label %188

188:                                              ; preds = %185
  %189 = load i32, i32* @dc_prec, align 4
  %190 = icmp sgt i32 %189, 3
  br i1 %190, label %191, label %192

191:                                              ; preds = %188, %185
  call void @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.25, i64 0, i64 0))
  br label %192

192:                                              ; preds = %191, %188
  store i32 0, i32* %1, align 4
  br label %193

193:                                              ; preds = %354, %192
  %194 = load i32, i32* %1, align 4
  %195 = load i32, i32* @M, align 4
  %196 = icmp slt i32 %194, %195
  br i1 %196, label %197, label %357

197:                                              ; preds = %193
  %198 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %199 = load i32, i32* %1, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %198, i64 %200
  %202 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %201, i32 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = icmp slt i32 %203, 1
  br i1 %204, label %213, label %205

205:                                              ; preds = %197
  %206 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %207 = load i32, i32* %1, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %206, i64 %208
  %210 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %209, i32 0, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = icmp sgt i32 %211, 9
  br i1 %212, label %213, label %214

213:                                              ; preds = %205, %197
  call void @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26, i64 0, i64 0))
  br label %214

214:                                              ; preds = %213, %205
  %215 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %216 = load i32, i32* %1, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %215, i64 %217
  %219 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %218, i32 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = icmp slt i32 %220, 1
  br i1 %221, label %230, label %222

222:                                              ; preds = %214
  %223 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %224 = load i32, i32* %1, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %223, i64 %225
  %227 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %226, i32 0, i32 1
  %228 = load i32, i32* %227, align 4
  %229 = icmp sgt i32 %228, 9
  br i1 %229, label %230, label %231

230:                                              ; preds = %222, %214
  call void @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26, i64 0, i64 0))
  br label %231

231:                                              ; preds = %230, %222
  %232 = load i32, i32* @mpeg1, align 4
  %233 = icmp ne i32 %232, 0
  br i1 %233, label %234, label %243

234:                                              ; preds = %231
  %235 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %236 = load i32, i32* %1, align 4
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %235, i64 %237
  %239 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %238, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp sgt i32 %240, 7
  br i1 %241, label %242, label %243

242:                                              ; preds = %234
  call void @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27, i64 0, i64 0))
  br label %243

243:                                              ; preds = %242, %234, %231
  %244 = load i32, i32* @mpeg1, align 4
  %245 = icmp ne i32 %244, 0
  br i1 %245, label %246, label %255

246:                                              ; preds = %243
  %247 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %248 = load i32, i32* %1, align 4
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %247, i64 %249
  %251 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %250, i32 0, i32 1
  %252 = load i32, i32* %251, align 4
  %253 = icmp sgt i32 %252, 7
  br i1 %253, label %254, label %255

254:                                              ; preds = %246
  call void @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27, i64 0, i64 0))
  br label %255

255:                                              ; preds = %254, %246, %243
  %256 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %257 = load i32, i32* %1, align 4
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %256, i64 %258
  %260 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %259, i32 0, i32 2
  %261 = load i32, i32* %260, align 4
  %262 = icmp sle i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %255
  call void @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i64 0, i64 0))
  br label %264

264:                                              ; preds = %263, %255
  %265 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %266 = load i32, i32* %1, align 4
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %265, i64 %267
  %269 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %268, i32 0, i32 3
  %270 = load i32, i32* %269, align 4
  %271 = icmp sle i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %264
  call void @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i64 0, i64 0))
  br label %273

273:                                              ; preds = %272, %264
  %274 = load i32, i32* %1, align 4
  %275 = icmp ne i32 %274, 0
  br i1 %275, label %276, label %353

276:                                              ; preds = %273
  %277 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %278 = load i32, i32* %1, align 4
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %277, i64 %279
  %281 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %280, i32 0, i32 4
  %282 = load i32, i32* %281, align 4
  %283 = icmp slt i32 %282, 1
  br i1 %283, label %292, label %284

284:                                              ; preds = %276
  %285 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %286 = load i32, i32* %1, align 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %285, i64 %287
  %289 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %288, i32 0, i32 4
  %290 = load i32, i32* %289, align 4
  %291 = icmp sgt i32 %290, 9
  br i1 %291, label %292, label %293

292:                                              ; preds = %284, %276
  call void @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26, i64 0, i64 0))
  br label %293

293:                                              ; preds = %292, %284
  %294 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %295 = load i32, i32* %1, align 4
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %294, i64 %296
  %298 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %297, i32 0, i32 5
  %299 = load i32, i32* %298, align 4
  %300 = icmp slt i32 %299, 1
  br i1 %300, label %309, label %301

301:                                              ; preds = %293
  %302 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %303 = load i32, i32* %1, align 4
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %302, i64 %304
  %306 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %305, i32 0, i32 5
  %307 = load i32, i32* %306, align 4
  %308 = icmp sgt i32 %307, 9
  br i1 %308, label %309, label %310

309:                                              ; preds = %301, %293
  call void @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26, i64 0, i64 0))
  br label %310

310:                                              ; preds = %309, %301
  %311 = load i32, i32* @mpeg1, align 4
  %312 = icmp ne i32 %311, 0
  br i1 %312, label %313, label %322

313:                                              ; preds = %310
  %314 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %315 = load i32, i32* %1, align 4
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %314, i64 %316
  %318 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %317, i32 0, i32 4
  %319 = load i32, i32* %318, align 4
  %320 = icmp sgt i32 %319, 7
  br i1 %320, label %321, label %322

321:                                              ; preds = %313
  call void @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27, i64 0, i64 0))
  br label %322

322:                                              ; preds = %321, %313, %310
  %323 = load i32, i32* @mpeg1, align 4
  %324 = icmp ne i32 %323, 0
  br i1 %324, label %325, label %334

325:                                              ; preds = %322
  %326 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %327 = load i32, i32* %1, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %326, i64 %328
  %330 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %329, i32 0, i32 5
  %331 = load i32, i32* %330, align 4
  %332 = icmp sgt i32 %331, 7
  br i1 %332, label %333, label %334

333:                                              ; preds = %325
  call void @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27, i64 0, i64 0))
  br label %334

334:                                              ; preds = %333, %325, %322
  %335 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %336 = load i32, i32* %1, align 4
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %335, i64 %337
  %339 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %338, i32 0, i32 6
  %340 = load i32, i32* %339, align 4
  %341 = icmp sle i32 %340, 0
  br i1 %341, label %342, label %343

342:                                              ; preds = %334
  call void @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i64 0, i64 0))
  br label %343

343:                                              ; preds = %342, %334
  %344 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %345 = load i32, i32* %1, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %344, i64 %346
  %348 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %347, i32 0, i32 7
  %349 = load i32, i32* %348, align 4
  %350 = icmp sle i32 %349, 0
  br i1 %350, label %351, label %352

351:                                              ; preds = %343
  call void @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i64 0, i64 0))
  br label %352

352:                                              ; preds = %351, %343
  br label %353

353:                                              ; preds = %352, %273
  br label %354

354:                                              ; preds = %353
  %355 = load i32, i32* %1, align 4
  %356 = add nsw i32 %355, 1
  store i32 %356, i32* %1, align 4
  br label %193

357:                                              ; preds = %193
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @profile_and_level_checks() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.level_limits*, align 8
  %3 = load i32, i32* @profile, align 4
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %0
  %6 = load i32, i32* @profile, align 4
  %7 = icmp sgt i32 %6, 15
  br i1 %7, label %8, label %9

8:                                                ; preds = %5, %0
  call void @error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29, i64 0, i64 0))
  br label %9

9:                                                ; preds = %8, %5
  %10 = load i32, i32* @level, align 4
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = load i32, i32* @level, align 4
  %14 = icmp sgt i32 %13, 15
  br i1 %14, label %15, label %16

15:                                               ; preds = %12, %9
  call void @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i64 0, i64 0))
  br label %16

16:                                               ; preds = %15, %12
  %17 = load i32, i32* @profile, align 4
  %18 = icmp sge i32 %17, 8
  br i1 %18, label %19, label %26

19:                                               ; preds = %16
  %20 = load i32, i32* @quiet, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.31, i64 0, i64 0))
  br label %25

25:                                               ; preds = %22, %19
  br label %229

26:                                               ; preds = %16
  %27 = load i32, i32* @profile, align 4
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = load i32, i32* @profile, align 4
  %31 = icmp sgt i32 %30, 5
  br i1 %31, label %32, label %33

32:                                               ; preds = %29, %26
  call void @error(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0))
  br label %33

33:                                               ; preds = %32, %29
  %34 = load i32, i32* @profile, align 4
  %35 = icmp eq i32 %34, 3
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = load i32, i32* @profile, align 4
  %38 = icmp eq i32 %37, 2
  br i1 %38, label %39, label %40

39:                                               ; preds = %36, %33
  call void @error(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.33, i64 0, i64 0))
  br label %40

40:                                               ; preds = %39, %36
  %41 = load i32, i32* @level, align 4
  %42 = icmp slt i32 %41, 4
  br i1 %42, label %50, label %43

43:                                               ; preds = %40
  %44 = load i32, i32* @level, align 4
  %45 = icmp sgt i32 %44, 10
  br i1 %45, label %50, label %46

46:                                               ; preds = %43
  %47 = load i32, i32* @level, align 4
  %48 = and i32 %47, 1
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46, %43, %40
  call void @error(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34, i64 0, i64 0))
  br label %51

51:                                               ; preds = %50, %46
  %52 = load i32, i32* @level, align 4
  %53 = sub nsw i32 %52, 4
  %54 = ashr i32 %53, 1
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [4 x %struct.level_limits], [4 x %struct.level_limits]* @maxval_tab, i64 0, i64 %55
  store %struct.level_limits* %56, %struct.level_limits** %2, align 8
  %57 = load i32, i32* @profile, align 4
  %58 = sub nsw i32 %57, 1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* @profile_level_defined, i64 0, i64 %59
  %61 = load i32, i32* @level, align 4
  %62 = sub nsw i32 %61, 4
  %63 = ashr i32 %62, 1
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [4 x i8], [4 x i8]* %60, i64 0, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = icmp ne i8 %66, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %51
  call void @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35, i64 0, i64 0))
  br label %69

69:                                               ; preds = %68, %51
  %70 = load i32, i32* @profile, align 4
  %71 = icmp eq i32 %70, 5
  br i1 %71, label %72, label %76

72:                                               ; preds = %69
  %73 = load i32, i32* @M, align 4
  %74 = icmp ne i32 %73, 1
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.36, i64 0, i64 0))
  br label %76

76:                                               ; preds = %75, %72, %69
  %77 = load i32, i32* @profile, align 4
  %78 = icmp ne i32 %77, 1
  br i1 %78, label %79, label %83

79:                                               ; preds = %76
  %80 = load i32, i32* @chroma_format, align 4
  %81 = icmp ne i32 %80, 1
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i64 0, i64 0))
  br label %83

83:                                               ; preds = %82, %79, %76
  %84 = load i32, i32* @profile, align 4
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %90

86:                                               ; preds = %83
  %87 = load i32, i32* @chroma_format, align 4
  %88 = icmp eq i32 %87, 3
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @error(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.38, i64 0, i64 0))
  br label %90

90:                                               ; preds = %89, %86, %83
  %91 = load i32, i32* @profile, align 4
  %92 = icmp sge i32 %91, 4
  br i1 %92, label %93, label %111

93:                                               ; preds = %90
  %94 = load i32, i32* @frame_rate_code, align 4
  %95 = icmp sle i32 %94, 2
  br i1 %95, label %96, label %100

96:                                               ; preds = %93
  %97 = load i32, i32* @repeatfirst, align 4
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.39, i64 0, i64 0))
  br label %100

100:                                              ; preds = %99, %96, %93
  %101 = load i32, i32* @frame_rate_code, align 4
  %102 = icmp sle i32 %101, 6
  br i1 %102, label %103, label %110

103:                                              ; preds = %100
  %104 = load i32, i32* @prog_seq, align 4
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %106, label %110

106:                                              ; preds = %103
  %107 = load i32, i32* @repeatfirst, align 4
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.39, i64 0, i64 0))
  br label %110

110:                                              ; preds = %109, %106, %103, %100
  br label %111

111:                                              ; preds = %110, %90
  %112 = load i32, i32* @profile, align 4
  %113 = icmp ne i32 %112, 1
  br i1 %113, label %114, label %118

114:                                              ; preds = %111
  %115 = load i32, i32* @dc_prec, align 4
  %116 = icmp eq i32 %115, 3
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.40, i64 0, i64 0))
  br label %118

118:                                              ; preds = %117, %114, %111
  %119 = load i32, i32* @frame_rate_code, align 4
  %120 = icmp sgt i32 %119, 5
  br i1 %120, label %121, label %125

121:                                              ; preds = %118
  %122 = load i32, i32* @level, align 4
  %123 = icmp sge i32 %122, 8
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @error(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.41, i64 0, i64 0))
  br label %125

125:                                              ; preds = %124, %121, %118
  store i32 0, i32* %1, align 4
  br label %126

126:                                              ; preds = %183, %125
  %127 = load i32, i32* %1, align 4
  %128 = load i32, i32* @M, align 4
  %129 = icmp slt i32 %127, %128
  br i1 %129, label %130, label %186

130:                                              ; preds = %126
  %131 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %132 = load i32, i32* %1, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %131, i64 %133
  %135 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %134, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = load %struct.level_limits*, %struct.level_limits** %2, align 8
  %138 = getelementptr inbounds %struct.level_limits, %struct.level_limits* %137, i32 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = icmp sgt i32 %136, %139
  br i1 %140, label %141, label %142

141:                                              ; preds = %130
  call void @error(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.42, i64 0, i64 0))
  br label %142

142:                                              ; preds = %141, %130
  %143 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %144 = load i32, i32* %1, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %143, i64 %145
  %147 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %146, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = load %struct.level_limits*, %struct.level_limits** %2, align 8
  %150 = getelementptr inbounds %struct.level_limits, %struct.level_limits* %149, i32 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = icmp sgt i32 %148, %151
  br i1 %152, label %153, label %154

153:                                              ; preds = %142
  call void @error(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.43, i64 0, i64 0))
  br label %154

154:                                              ; preds = %153, %142
  %155 = load i32, i32* %1, align 4
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %182

157:                                              ; preds = %154
  %158 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %159 = load i32, i32* %1, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %158, i64 %160
  %162 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %161, i32 0, i32 4
  %163 = load i32, i32* %162, align 4
  %164 = load %struct.level_limits*, %struct.level_limits** %2, align 8
  %165 = getelementptr inbounds %struct.level_limits, %struct.level_limits* %164, i32 0, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = icmp sgt i32 %163, %166
  br i1 %167, label %168, label %169

168:                                              ; preds = %157
  call void @error(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.44, i64 0, i64 0))
  br label %169

169:                                              ; preds = %168, %157
  %170 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %171 = load i32, i32* %1, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %170, i64 %172
  %174 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %173, i32 0, i32 5
  %175 = load i32, i32* %174, align 4
  %176 = load %struct.level_limits*, %struct.level_limits** %2, align 8
  %177 = getelementptr inbounds %struct.level_limits, %struct.level_limits* %176, i32 0, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = icmp sgt i32 %175, %178
  br i1 %179, label %180, label %181

180:                                              ; preds = %169
  call void @error(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.45, i64 0, i64 0))
  br label %181

181:                                              ; preds = %180, %169
  br label %182

182:                                              ; preds = %181, %154
  br label %183

183:                                              ; preds = %182
  %184 = load i32, i32* %1, align 4
  %185 = add nsw i32 %184, 1
  store i32 %185, i32* %1, align 4
  br label %126

186:                                              ; preds = %126
  %187 = load i32, i32* @horizontal_size, align 4
  %188 = load %struct.level_limits*, %struct.level_limits** %2, align 8
  %189 = getelementptr inbounds %struct.level_limits, %struct.level_limits* %188, i32 0, i32 2
  %190 = load i32, i32* %189, align 4
  %191 = icmp sgt i32 %187, %190
  br i1 %191, label %192, label %193

192:                                              ; preds = %186
  call void @error(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.46, i64 0, i64 0))
  br label %193

193:                                              ; preds = %192, %186
  %194 = load i32, i32* @vertical_size, align 4
  %195 = load %struct.level_limits*, %struct.level_limits** %2, align 8
  %196 = getelementptr inbounds %struct.level_limits, %struct.level_limits* %195, i32 0, i32 3
  %197 = load i32, i32* %196, align 4
  %198 = icmp sgt i32 %194, %197
  br i1 %198, label %199, label %200

199:                                              ; preds = %193
  call void @error(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.46, i64 0, i64 0))
  br label %200

200:                                              ; preds = %199, %193
  %201 = load i32, i32* @horizontal_size, align 4
  %202 = load i32, i32* @vertical_size, align 4
  %203 = mul nsw i32 %201, %202
  %204 = sitofp i32 %203 to double
  %205 = load double, double* @frame_rate, align 8
  %206 = fmul double %204, %205
  %207 = load %struct.level_limits*, %struct.level_limits** %2, align 8
  %208 = getelementptr inbounds %struct.level_limits, %struct.level_limits* %207, i32 0, i32 4
  %209 = load i32, i32* %208, align 4
  %210 = sitofp i32 %209 to double
  %211 = fcmp ogt double %206, %210
  br i1 %211, label %212, label %213

212:                                              ; preds = %200
  call void @error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.47, i64 0, i64 0))
  br label %213

213:                                              ; preds = %212, %200
  %214 = load double, double* @bit_rate, align 8
  %215 = load %struct.level_limits*, %struct.level_limits** %2, align 8
  %216 = getelementptr inbounds %struct.level_limits, %struct.level_limits* %215, i32 0, i32 5
  %217 = load i32, i32* %216, align 4
  %218 = sitofp i32 %217 to double
  %219 = fmul double 1.000000e+06, %218
  %220 = fcmp ogt double %214, %219
  br i1 %220, label %221, label %222

221:                                              ; preds = %213
  call void @error(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.48, i64 0, i64 0))
  br label %222

222:                                              ; preds = %221, %213
  %223 = load i32, i32* @vbv_buffer_size, align 4
  %224 = load %struct.level_limits*, %struct.level_limits** %2, align 8
  %225 = getelementptr inbounds %struct.level_limits, %struct.level_limits* %224, i32 0, i32 6
  %226 = load i32, i32* %225, align 4
  %227 = icmp sgt i32 %223, %226
  br i1 %227, label %228, label %229

228:                                              ; preds = %222
  call void @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.49, i64 0, i64 0))
  br label %229

229:                                              ; preds = %228, %222, %25
  ret void
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_fdct() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca double, align 8
  store i32 0, i32* %1, align 4
  br label %4

4:                                                ; preds = %39, %0
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %5, 8
  br i1 %6, label %7, label %42

7:                                                ; preds = %4
  %8 = load i32, i32* %1, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = call double @sqrt(double 1.250000e-01) #6
  br label %13

12:                                               ; preds = %7
  br label %13

13:                                               ; preds = %12, %10
  %14 = phi double [ %11, %10 ], [ 5.000000e-01, %12 ]
  store double %14, double* %3, align 8
  store i32 0, i32* %2, align 4
  br label %15

15:                                               ; preds = %35, %13
  %16 = load i32, i32* %2, align 4
  %17 = icmp slt i32 %16, 8
  br i1 %17, label %18, label %38

18:                                               ; preds = %15
  %19 = load double, double* %3, align 8
  %20 = load i32, i32* %1, align 4
  %21 = sitofp i32 %20 to double
  %22 = fmul double 0x3FD921FB54442D18, %21
  %23 = load i32, i32* %2, align 4
  %24 = sitofp i32 %23 to double
  %25 = fadd double %24, 5.000000e-01
  %26 = fmul double %22, %25
  %27 = call double @cos(double %26) #6
  %28 = fmul double %19, %27
  %29 = load i32, i32* %1, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [8 x [8 x double]], [8 x [8 x double]]* @c, i64 0, i64 %30
  %32 = load i32, i32* %2, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [8 x double], [8 x double]* %31, i64 0, i64 %33
  store double %28, double* %34, align 8
  br label %35

35:                                               ; preds = %18
  %36 = load i32, i32* %2, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %2, align 4
  br label %15

38:                                               ; preds = %15
  br label %39

39:                                               ; preds = %38
  %40 = load i32, i32* %1, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %1, align 4
  br label %4

42:                                               ; preds = %4
  ret void
}

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #2

; Function Attrs: nounwind
declare dso_local double @cos(double) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @fdct(i16* %0) #0 {
  %2 = alloca i16*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  %7 = alloca [64 x double], align 16
  store i16* %0, i16** %2, align 8
  store i32 0, i32* %3, align 4
  br label %8

8:                                                ; preds = %55, %1
  %9 = load i32, i32* %3, align 4
  %10 = icmp slt i32 %9, 8
  br i1 %10, label %11, label %58

11:                                               ; preds = %8
  store i32 0, i32* %4, align 4
  br label %12

12:                                               ; preds = %51, %11
  %13 = load i32, i32* %4, align 4
  %14 = icmp slt i32 %13, 8
  br i1 %14, label %15, label %54

15:                                               ; preds = %12
  store double 0.000000e+00, double* %6, align 8
  store i32 0, i32* %5, align 4
  br label %16

16:                                               ; preds = %40, %15
  %17 = load i32, i32* %5, align 4
  %18 = icmp slt i32 %17, 8
  br i1 %18, label %19, label %43

19:                                               ; preds = %16
  %20 = load i32, i32* %4, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [8 x [8 x double]], [8 x [8 x double]]* @c, i64 0, i64 %21
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [8 x double], [8 x double]* %22, i64 0, i64 %24
  %26 = load double, double* %25, align 8
  %27 = load i16*, i16** %2, align 8
  %28 = load i32, i32* %3, align 4
  %29 = mul nsw i32 8, %28
  %30 = load i32, i32* %5, align 4
  %31 = add nsw i32 %29, %30
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %27, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = sext i16 %34 to i32
  %36 = sitofp i32 %35 to double
  %37 = fmul double %26, %36
  %38 = load double, double* %6, align 8
  %39 = fadd double %38, %37
  store double %39, double* %6, align 8
  br label %40

40:                                               ; preds = %19
  %41 = load i32, i32* %5, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %5, align 4
  br label %16

43:                                               ; preds = %16
  %44 = load double, double* %6, align 8
  %45 = load i32, i32* %3, align 4
  %46 = mul nsw i32 8, %45
  %47 = load i32, i32* %4, align 4
  %48 = add nsw i32 %46, %47
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [64 x double], [64 x double]* %7, i64 0, i64 %49
  store double %44, double* %50, align 8
  br label %51

51:                                               ; preds = %43
  %52 = load i32, i32* %4, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %4, align 4
  br label %12

54:                                               ; preds = %12
  br label %55

55:                                               ; preds = %54
  %56 = load i32, i32* %3, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %3, align 4
  br label %8

58:                                               ; preds = %8
  store i32 0, i32* %4, align 4
  br label %59

59:                                               ; preds = %108, %58
  %60 = load i32, i32* %4, align 4
  %61 = icmp slt i32 %60, 8
  br i1 %61, label %62, label %111

62:                                               ; preds = %59
  store i32 0, i32* %3, align 4
  br label %63

63:                                               ; preds = %104, %62
  %64 = load i32, i32* %3, align 4
  %65 = icmp slt i32 %64, 8
  br i1 %65, label %66, label %107

66:                                               ; preds = %63
  store double 0.000000e+00, double* %6, align 8
  store i32 0, i32* %5, align 4
  br label %67

67:                                               ; preds = %88, %66
  %68 = load i32, i32* %5, align 4
  %69 = icmp slt i32 %68, 8
  br i1 %69, label %70, label %91

70:                                               ; preds = %67
  %71 = load i32, i32* %3, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [8 x [8 x double]], [8 x [8 x double]]* @c, i64 0, i64 %72
  %74 = load i32, i32* %5, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [8 x double], [8 x double]* %73, i64 0, i64 %75
  %77 = load double, double* %76, align 8
  %78 = load i32, i32* %5, align 4
  %79 = mul nsw i32 8, %78
  %80 = load i32, i32* %4, align 4
  %81 = add nsw i32 %79, %80
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [64 x double], [64 x double]* %7, i64 0, i64 %82
  %84 = load double, double* %83, align 8
  %85 = fmul double %77, %84
  %86 = load double, double* %6, align 8
  %87 = fadd double %86, %85
  store double %87, double* %6, align 8
  br label %88

88:                                               ; preds = %70
  %89 = load i32, i32* %5, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %5, align 4
  br label %67

91:                                               ; preds = %67
  %92 = load double, double* %6, align 8
  %93 = fadd double %92, 4.999990e-01
  %94 = call double @llvm.floor.f64(double %93)
  %95 = fptosi double %94 to i32
  %96 = trunc i32 %95 to i16
  %97 = load i16*, i16** %2, align 8
  %98 = load i32, i32* %3, align 4
  %99 = mul nsw i32 8, %98
  %100 = load i32, i32* %4, align 4
  %101 = add nsw i32 %99, %100
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i16, i16* %97, i64 %102
  store i16 %96, i16* %103, align 2
  br label %104

104:                                              ; preds = %91
  %105 = load i32, i32* %3, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %3, align 4
  br label %63

107:                                              ; preds = %63
  br label %108

108:                                              ; preds = %107
  %109 = load i32, i32* %4, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %4, align 4
  br label %59

111:                                              ; preds = %59
  ret void
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @idct(i16* %0) #0 {
  %2 = alloca i16*, align 8
  %3 = alloca i32, align 4
  store i16* %0, i16** %2, align 8
  store i32 0, i32* %3, align 4
  br label %4

4:                                                ; preds = %13, %1
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 8
  br i1 %6, label %7, label %16

7:                                                ; preds = %4
  %8 = load i16*, i16** %2, align 8
  %9 = load i32, i32* %3, align 4
  %10 = mul nsw i32 8, %9
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i16, i16* %8, i64 %11
  call void @idctrow(i16* %12)
  br label %13

13:                                               ; preds = %7
  %14 = load i32, i32* %3, align 4
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %3, align 4
  br label %4

16:                                               ; preds = %4
  store i32 0, i32* %3, align 4
  br label %17

17:                                               ; preds = %25, %16
  %18 = load i32, i32* %3, align 4
  %19 = icmp slt i32 %18, 8
  br i1 %19, label %20, label %28

20:                                               ; preds = %17
  %21 = load i16*, i16** %2, align 8
  %22 = load i32, i32* %3, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i16, i16* %21, i64 %23
  call void @idctcol(i16* %24)
  br label %25

25:                                               ; preds = %20
  %26 = load i32, i32* %3, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %3, align 4
  br label %17

28:                                               ; preds = %17
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @idctrow(i16* %0) #0 {
  %2 = alloca i16*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i16* %0, i16** %2, align 8
  %12 = load i16*, i16** %2, align 8
  %13 = getelementptr inbounds i16, i16* %12, i64 4
  %14 = load i16, i16* %13, align 2
  %15 = sext i16 %14 to i32
  %16 = shl i32 %15, 11
  store i32 %16, i32* %4, align 4
  %17 = load i16*, i16** %2, align 8
  %18 = getelementptr inbounds i16, i16* %17, i64 6
  %19 = load i16, i16* %18, align 2
  %20 = sext i16 %19 to i32
  store i32 %20, i32* %5, align 4
  %21 = or i32 %16, %20
  %22 = load i16*, i16** %2, align 8
  %23 = getelementptr inbounds i16, i16* %22, i64 2
  %24 = load i16, i16* %23, align 2
  %25 = sext i16 %24 to i32
  store i32 %25, i32* %6, align 4
  %26 = or i32 %21, %25
  %27 = load i16*, i16** %2, align 8
  %28 = getelementptr inbounds i16, i16* %27, i64 1
  %29 = load i16, i16* %28, align 2
  %30 = sext i16 %29 to i32
  store i32 %30, i32* %7, align 4
  %31 = or i32 %26, %30
  %32 = load i16*, i16** %2, align 8
  %33 = getelementptr inbounds i16, i16* %32, i64 7
  %34 = load i16, i16* %33, align 2
  %35 = sext i16 %34 to i32
  store i32 %35, i32* %8, align 4
  %36 = or i32 %31, %35
  %37 = load i16*, i16** %2, align 8
  %38 = getelementptr inbounds i16, i16* %37, i64 5
  %39 = load i16, i16* %38, align 2
  %40 = sext i16 %39 to i32
  store i32 %40, i32* %9, align 4
  %41 = or i32 %36, %40
  %42 = load i16*, i16** %2, align 8
  %43 = getelementptr inbounds i16, i16* %42, i64 3
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i32
  store i32 %45, i32* %10, align 4
  %46 = or i32 %41, %45
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %71, label %48

48:                                               ; preds = %1
  %49 = load i16*, i16** %2, align 8
  %50 = getelementptr inbounds i16, i16* %49, i64 0
  %51 = load i16, i16* %50, align 2
  %52 = sext i16 %51 to i32
  %53 = shl i32 %52, 3
  %54 = trunc i32 %53 to i16
  %55 = load i16*, i16** %2, align 8
  %56 = getelementptr inbounds i16, i16* %55, i64 7
  store i16 %54, i16* %56, align 2
  %57 = load i16*, i16** %2, align 8
  %58 = getelementptr inbounds i16, i16* %57, i64 6
  store i16 %54, i16* %58, align 2
  %59 = load i16*, i16** %2, align 8
  %60 = getelementptr inbounds i16, i16* %59, i64 5
  store i16 %54, i16* %60, align 2
  %61 = load i16*, i16** %2, align 8
  %62 = getelementptr inbounds i16, i16* %61, i64 4
  store i16 %54, i16* %62, align 2
  %63 = load i16*, i16** %2, align 8
  %64 = getelementptr inbounds i16, i16* %63, i64 3
  store i16 %54, i16* %64, align 2
  %65 = load i16*, i16** %2, align 8
  %66 = getelementptr inbounds i16, i16* %65, i64 2
  store i16 %54, i16* %66, align 2
  %67 = load i16*, i16** %2, align 8
  %68 = getelementptr inbounds i16, i16* %67, i64 1
  store i16 %54, i16* %68, align 2
  %69 = load i16*, i16** %2, align 8
  %70 = getelementptr inbounds i16, i16* %69, i64 0
  store i16 %54, i16* %70, align 2
  br label %212

71:                                               ; preds = %1
  %72 = load i16*, i16** %2, align 8
  %73 = getelementptr inbounds i16, i16* %72, i64 0
  %74 = load i16, i16* %73, align 2
  %75 = sext i16 %74 to i32
  %76 = shl i32 %75, 11
  %77 = add nsw i32 %76, 128
  store i32 %77, i32* %3, align 4
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %8, align 4
  %80 = add nsw i32 %78, %79
  %81 = mul nsw i32 565, %80
  store i32 %81, i32* %11, align 4
  %82 = load i32, i32* %11, align 4
  %83 = load i32, i32* %7, align 4
  %84 = mul nsw i32 2276, %83
  %85 = add nsw i32 %82, %84
  store i32 %85, i32* %7, align 4
  %86 = load i32, i32* %11, align 4
  %87 = load i32, i32* %8, align 4
  %88 = mul nsw i32 3406, %87
  %89 = sub nsw i32 %86, %88
  store i32 %89, i32* %8, align 4
  %90 = load i32, i32* %9, align 4
  %91 = load i32, i32* %10, align 4
  %92 = add nsw i32 %90, %91
  %93 = mul nsw i32 2408, %92
  store i32 %93, i32* %11, align 4
  %94 = load i32, i32* %11, align 4
  %95 = load i32, i32* %9, align 4
  %96 = mul nsw i32 799, %95
  %97 = sub nsw i32 %94, %96
  store i32 %97, i32* %9, align 4
  %98 = load i32, i32* %11, align 4
  %99 = load i32, i32* %10, align 4
  %100 = mul nsw i32 4017, %99
  %101 = sub nsw i32 %98, %100
  store i32 %101, i32* %10, align 4
  %102 = load i32, i32* %3, align 4
  %103 = load i32, i32* %4, align 4
  %104 = add nsw i32 %102, %103
  store i32 %104, i32* %11, align 4
  %105 = load i32, i32* %4, align 4
  %106 = load i32, i32* %3, align 4
  %107 = sub nsw i32 %106, %105
  store i32 %107, i32* %3, align 4
  %108 = load i32, i32* %6, align 4
  %109 = load i32, i32* %5, align 4
  %110 = add nsw i32 %108, %109
  %111 = mul nsw i32 1108, %110
  store i32 %111, i32* %4, align 4
  %112 = load i32, i32* %4, align 4
  %113 = load i32, i32* %5, align 4
  %114 = mul nsw i32 3784, %113
  %115 = sub nsw i32 %112, %114
  store i32 %115, i32* %5, align 4
  %116 = load i32, i32* %4, align 4
  %117 = load i32, i32* %6, align 4
  %118 = mul nsw i32 1568, %117
  %119 = add nsw i32 %116, %118
  store i32 %119, i32* %6, align 4
  %120 = load i32, i32* %7, align 4
  %121 = load i32, i32* %9, align 4
  %122 = add nsw i32 %120, %121
  store i32 %122, i32* %4, align 4
  %123 = load i32, i32* %9, align 4
  %124 = load i32, i32* %7, align 4
  %125 = sub nsw i32 %124, %123
  store i32 %125, i32* %7, align 4
  %126 = load i32, i32* %8, align 4
  %127 = load i32, i32* %10, align 4
  %128 = add nsw i32 %126, %127
  store i32 %128, i32* %9, align 4
  %129 = load i32, i32* %10, align 4
  %130 = load i32, i32* %8, align 4
  %131 = sub nsw i32 %130, %129
  store i32 %131, i32* %8, align 4
  %132 = load i32, i32* %11, align 4
  %133 = load i32, i32* %6, align 4
  %134 = add nsw i32 %132, %133
  store i32 %134, i32* %10, align 4
  %135 = load i32, i32* %6, align 4
  %136 = load i32, i32* %11, align 4
  %137 = sub nsw i32 %136, %135
  store i32 %137, i32* %11, align 4
  %138 = load i32, i32* %3, align 4
  %139 = load i32, i32* %5, align 4
  %140 = add nsw i32 %138, %139
  store i32 %140, i32* %6, align 4
  %141 = load i32, i32* %5, align 4
  %142 = load i32, i32* %3, align 4
  %143 = sub nsw i32 %142, %141
  store i32 %143, i32* %3, align 4
  %144 = load i32, i32* %7, align 4
  %145 = load i32, i32* %8, align 4
  %146 = add nsw i32 %144, %145
  %147 = mul nsw i32 181, %146
  %148 = add nsw i32 %147, 128
  %149 = ashr i32 %148, 8
  store i32 %149, i32* %5, align 4
  %150 = load i32, i32* %7, align 4
  %151 = load i32, i32* %8, align 4
  %152 = sub nsw i32 %150, %151
  %153 = mul nsw i32 181, %152
  %154 = add nsw i32 %153, 128
  %155 = ashr i32 %154, 8
  store i32 %155, i32* %7, align 4
  %156 = load i32, i32* %10, align 4
  %157 = load i32, i32* %4, align 4
  %158 = add nsw i32 %156, %157
  %159 = ashr i32 %158, 8
  %160 = trunc i32 %159 to i16
  %161 = load i16*, i16** %2, align 8
  %162 = getelementptr inbounds i16, i16* %161, i64 0
  store i16 %160, i16* %162, align 2
  %163 = load i32, i32* %6, align 4
  %164 = load i32, i32* %5, align 4
  %165 = add nsw i32 %163, %164
  %166 = ashr i32 %165, 8
  %167 = trunc i32 %166 to i16
  %168 = load i16*, i16** %2, align 8
  %169 = getelementptr inbounds i16, i16* %168, i64 1
  store i16 %167, i16* %169, align 2
  %170 = load i32, i32* %3, align 4
  %171 = load i32, i32* %7, align 4
  %172 = add nsw i32 %170, %171
  %173 = ashr i32 %172, 8
  %174 = trunc i32 %173 to i16
  %175 = load i16*, i16** %2, align 8
  %176 = getelementptr inbounds i16, i16* %175, i64 2
  store i16 %174, i16* %176, align 2
  %177 = load i32, i32* %11, align 4
  %178 = load i32, i32* %9, align 4
  %179 = add nsw i32 %177, %178
  %180 = ashr i32 %179, 8
  %181 = trunc i32 %180 to i16
  %182 = load i16*, i16** %2, align 8
  %183 = getelementptr inbounds i16, i16* %182, i64 3
  store i16 %181, i16* %183, align 2
  %184 = load i32, i32* %11, align 4
  %185 = load i32, i32* %9, align 4
  %186 = sub nsw i32 %184, %185
  %187 = ashr i32 %186, 8
  %188 = trunc i32 %187 to i16
  %189 = load i16*, i16** %2, align 8
  %190 = getelementptr inbounds i16, i16* %189, i64 4
  store i16 %188, i16* %190, align 2
  %191 = load i32, i32* %3, align 4
  %192 = load i32, i32* %7, align 4
  %193 = sub nsw i32 %191, %192
  %194 = ashr i32 %193, 8
  %195 = trunc i32 %194 to i16
  %196 = load i16*, i16** %2, align 8
  %197 = getelementptr inbounds i16, i16* %196, i64 5
  store i16 %195, i16* %197, align 2
  %198 = load i32, i32* %6, align 4
  %199 = load i32, i32* %5, align 4
  %200 = sub nsw i32 %198, %199
  %201 = ashr i32 %200, 8
  %202 = trunc i32 %201 to i16
  %203 = load i16*, i16** %2, align 8
  %204 = getelementptr inbounds i16, i16* %203, i64 6
  store i16 %202, i16* %204, align 2
  %205 = load i32, i32* %10, align 4
  %206 = load i32, i32* %4, align 4
  %207 = sub nsw i32 %205, %206
  %208 = ashr i32 %207, 8
  %209 = trunc i32 %208 to i16
  %210 = load i16*, i16** %2, align 8
  %211 = getelementptr inbounds i16, i16* %210, i64 7
  store i16 %209, i16* %211, align 2
  br label %212

212:                                              ; preds = %71, %48
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @idctcol(i16* %0) #0 {
  %2 = alloca i16*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i16* %0, i16** %2, align 8
  %12 = load i16*, i16** %2, align 8
  %13 = getelementptr inbounds i16, i16* %12, i64 32
  %14 = load i16, i16* %13, align 2
  %15 = sext i16 %14 to i32
  %16 = shl i32 %15, 8
  store i32 %16, i32* %4, align 4
  %17 = load i16*, i16** %2, align 8
  %18 = getelementptr inbounds i16, i16* %17, i64 48
  %19 = load i16, i16* %18, align 2
  %20 = sext i16 %19 to i32
  store i32 %20, i32* %5, align 4
  %21 = or i32 %16, %20
  %22 = load i16*, i16** %2, align 8
  %23 = getelementptr inbounds i16, i16* %22, i64 16
  %24 = load i16, i16* %23, align 2
  %25 = sext i16 %24 to i32
  store i32 %25, i32* %6, align 4
  %26 = or i32 %21, %25
  %27 = load i16*, i16** %2, align 8
  %28 = getelementptr inbounds i16, i16* %27, i64 8
  %29 = load i16, i16* %28, align 2
  %30 = sext i16 %29 to i32
  store i32 %30, i32* %7, align 4
  %31 = or i32 %26, %30
  %32 = load i16*, i16** %2, align 8
  %33 = getelementptr inbounds i16, i16* %32, i64 56
  %34 = load i16, i16* %33, align 2
  %35 = sext i16 %34 to i32
  store i32 %35, i32* %8, align 4
  %36 = or i32 %31, %35
  %37 = load i16*, i16** %2, align 8
  %38 = getelementptr inbounds i16, i16* %37, i64 40
  %39 = load i16, i16* %38, align 2
  %40 = sext i16 %39 to i32
  store i32 %40, i32* %9, align 4
  %41 = or i32 %36, %40
  %42 = load i16*, i16** %2, align 8
  %43 = getelementptr inbounds i16, i16* %42, i64 24
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i32
  store i32 %45, i32* %10, align 4
  %46 = or i32 %41, %45
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %1
  %49 = load i16*, i16** @iclp, align 8
  %50 = load i16*, i16** %2, align 8
  %51 = getelementptr inbounds i16, i16* %50, i64 0
  %52 = load i16, i16* %51, align 2
  %53 = sext i16 %52 to i32
  %54 = add nsw i32 %53, 32
  %55 = ashr i32 %54, 6
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %49, i64 %56
  %58 = load i16, i16* %57, align 2
  %59 = load i16*, i16** %2, align 8
  %60 = getelementptr inbounds i16, i16* %59, i64 56
  store i16 %58, i16* %60, align 2
  %61 = load i16*, i16** %2, align 8
  %62 = getelementptr inbounds i16, i16* %61, i64 48
  store i16 %58, i16* %62, align 2
  %63 = load i16*, i16** %2, align 8
  %64 = getelementptr inbounds i16, i16* %63, i64 40
  store i16 %58, i16* %64, align 2
  %65 = load i16*, i16** %2, align 8
  %66 = getelementptr inbounds i16, i16* %65, i64 32
  store i16 %58, i16* %66, align 2
  %67 = load i16*, i16** %2, align 8
  %68 = getelementptr inbounds i16, i16* %67, i64 24
  store i16 %58, i16* %68, align 2
  %69 = load i16*, i16** %2, align 8
  %70 = getelementptr inbounds i16, i16* %69, i64 16
  store i16 %58, i16* %70, align 2
  %71 = load i16*, i16** %2, align 8
  %72 = getelementptr inbounds i16, i16* %71, i64 8
  store i16 %58, i16* %72, align 2
  %73 = load i16*, i16** %2, align 8
  %74 = getelementptr inbounds i16, i16* %73, i64 0
  store i16 %58, i16* %74, align 2
  br label %249

75:                                               ; preds = %1
  %76 = load i16*, i16** %2, align 8
  %77 = getelementptr inbounds i16, i16* %76, i64 0
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i32
  %80 = shl i32 %79, 8
  %81 = add nsw i32 %80, 8192
  store i32 %81, i32* %3, align 4
  %82 = load i32, i32* %7, align 4
  %83 = load i32, i32* %8, align 4
  %84 = add nsw i32 %82, %83
  %85 = mul nsw i32 565, %84
  %86 = add nsw i32 %85, 4
  store i32 %86, i32* %11, align 4
  %87 = load i32, i32* %11, align 4
  %88 = load i32, i32* %7, align 4
  %89 = mul nsw i32 2276, %88
  %90 = add nsw i32 %87, %89
  %91 = ashr i32 %90, 3
  store i32 %91, i32* %7, align 4
  %92 = load i32, i32* %11, align 4
  %93 = load i32, i32* %8, align 4
  %94 = mul nsw i32 3406, %93
  %95 = sub nsw i32 %92, %94
  %96 = ashr i32 %95, 3
  store i32 %96, i32* %8, align 4
  %97 = load i32, i32* %9, align 4
  %98 = load i32, i32* %10, align 4
  %99 = add nsw i32 %97, %98
  %100 = mul nsw i32 2408, %99
  %101 = add nsw i32 %100, 4
  store i32 %101, i32* %11, align 4
  %102 = load i32, i32* %11, align 4
  %103 = load i32, i32* %9, align 4
  %104 = mul nsw i32 799, %103
  %105 = sub nsw i32 %102, %104
  %106 = ashr i32 %105, 3
  store i32 %106, i32* %9, align 4
  %107 = load i32, i32* %11, align 4
  %108 = load i32, i32* %10, align 4
  %109 = mul nsw i32 4017, %108
  %110 = sub nsw i32 %107, %109
  %111 = ashr i32 %110, 3
  store i32 %111, i32* %10, align 4
  %112 = load i32, i32* %3, align 4
  %113 = load i32, i32* %4, align 4
  %114 = add nsw i32 %112, %113
  store i32 %114, i32* %11, align 4
  %115 = load i32, i32* %4, align 4
  %116 = load i32, i32* %3, align 4
  %117 = sub nsw i32 %116, %115
  store i32 %117, i32* %3, align 4
  %118 = load i32, i32* %6, align 4
  %119 = load i32, i32* %5, align 4
  %120 = add nsw i32 %118, %119
  %121 = mul nsw i32 1108, %120
  %122 = add nsw i32 %121, 4
  store i32 %122, i32* %4, align 4
  %123 = load i32, i32* %4, align 4
  %124 = load i32, i32* %5, align 4
  %125 = mul nsw i32 3784, %124
  %126 = sub nsw i32 %123, %125
  %127 = ashr i32 %126, 3
  store i32 %127, i32* %5, align 4
  %128 = load i32, i32* %4, align 4
  %129 = load i32, i32* %6, align 4
  %130 = mul nsw i32 1568, %129
  %131 = add nsw i32 %128, %130
  %132 = ashr i32 %131, 3
  store i32 %132, i32* %6, align 4
  %133 = load i32, i32* %7, align 4
  %134 = load i32, i32* %9, align 4
  %135 = add nsw i32 %133, %134
  store i32 %135, i32* %4, align 4
  %136 = load i32, i32* %9, align 4
  %137 = load i32, i32* %7, align 4
  %138 = sub nsw i32 %137, %136
  store i32 %138, i32* %7, align 4
  %139 = load i32, i32* %8, align 4
  %140 = load i32, i32* %10, align 4
  %141 = add nsw i32 %139, %140
  store i32 %141, i32* %9, align 4
  %142 = load i32, i32* %10, align 4
  %143 = load i32, i32* %8, align 4
  %144 = sub nsw i32 %143, %142
  store i32 %144, i32* %8, align 4
  %145 = load i32, i32* %11, align 4
  %146 = load i32, i32* %6, align 4
  %147 = add nsw i32 %145, %146
  store i32 %147, i32* %10, align 4
  %148 = load i32, i32* %6, align 4
  %149 = load i32, i32* %11, align 4
  %150 = sub nsw i32 %149, %148
  store i32 %150, i32* %11, align 4
  %151 = load i32, i32* %3, align 4
  %152 = load i32, i32* %5, align 4
  %153 = add nsw i32 %151, %152
  store i32 %153, i32* %6, align 4
  %154 = load i32, i32* %5, align 4
  %155 = load i32, i32* %3, align 4
  %156 = sub nsw i32 %155, %154
  store i32 %156, i32* %3, align 4
  %157 = load i32, i32* %7, align 4
  %158 = load i32, i32* %8, align 4
  %159 = add nsw i32 %157, %158
  %160 = mul nsw i32 181, %159
  %161 = add nsw i32 %160, 128
  %162 = ashr i32 %161, 8
  store i32 %162, i32* %5, align 4
  %163 = load i32, i32* %7, align 4
  %164 = load i32, i32* %8, align 4
  %165 = sub nsw i32 %163, %164
  %166 = mul nsw i32 181, %165
  %167 = add nsw i32 %166, 128
  %168 = ashr i32 %167, 8
  store i32 %168, i32* %7, align 4
  %169 = load i16*, i16** @iclp, align 8
  %170 = load i32, i32* %10, align 4
  %171 = load i32, i32* %4, align 4
  %172 = add nsw i32 %170, %171
  %173 = ashr i32 %172, 14
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i16, i16* %169, i64 %174
  %176 = load i16, i16* %175, align 2
  %177 = load i16*, i16** %2, align 8
  %178 = getelementptr inbounds i16, i16* %177, i64 0
  store i16 %176, i16* %178, align 2
  %179 = load i16*, i16** @iclp, align 8
  %180 = load i32, i32* %6, align 4
  %181 = load i32, i32* %5, align 4
  %182 = add nsw i32 %180, %181
  %183 = ashr i32 %182, 14
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i16, i16* %179, i64 %184
  %186 = load i16, i16* %185, align 2
  %187 = load i16*, i16** %2, align 8
  %188 = getelementptr inbounds i16, i16* %187, i64 8
  store i16 %186, i16* %188, align 2
  %189 = load i16*, i16** @iclp, align 8
  %190 = load i32, i32* %3, align 4
  %191 = load i32, i32* %7, align 4
  %192 = add nsw i32 %190, %191
  %193 = ashr i32 %192, 14
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds i16, i16* %189, i64 %194
  %196 = load i16, i16* %195, align 2
  %197 = load i16*, i16** %2, align 8
  %198 = getelementptr inbounds i16, i16* %197, i64 16
  store i16 %196, i16* %198, align 2
  %199 = load i16*, i16** @iclp, align 8
  %200 = load i32, i32* %11, align 4
  %201 = load i32, i32* %9, align 4
  %202 = add nsw i32 %200, %201
  %203 = ashr i32 %202, 14
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i16, i16* %199, i64 %204
  %206 = load i16, i16* %205, align 2
  %207 = load i16*, i16** %2, align 8
  %208 = getelementptr inbounds i16, i16* %207, i64 24
  store i16 %206, i16* %208, align 2
  %209 = load i16*, i16** @iclp, align 8
  %210 = load i32, i32* %11, align 4
  %211 = load i32, i32* %9, align 4
  %212 = sub nsw i32 %210, %211
  %213 = ashr i32 %212, 14
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i16, i16* %209, i64 %214
  %216 = load i16, i16* %215, align 2
  %217 = load i16*, i16** %2, align 8
  %218 = getelementptr inbounds i16, i16* %217, i64 32
  store i16 %216, i16* %218, align 2
  %219 = load i16*, i16** @iclp, align 8
  %220 = load i32, i32* %3, align 4
  %221 = load i32, i32* %7, align 4
  %222 = sub nsw i32 %220, %221
  %223 = ashr i32 %222, 14
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i16, i16* %219, i64 %224
  %226 = load i16, i16* %225, align 2
  %227 = load i16*, i16** %2, align 8
  %228 = getelementptr inbounds i16, i16* %227, i64 40
  store i16 %226, i16* %228, align 2
  %229 = load i16*, i16** @iclp, align 8
  %230 = load i32, i32* %6, align 4
  %231 = load i32, i32* %5, align 4
  %232 = sub nsw i32 %230, %231
  %233 = ashr i32 %232, 14
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds i16, i16* %229, i64 %234
  %236 = load i16, i16* %235, align 2
  %237 = load i16*, i16** %2, align 8
  %238 = getelementptr inbounds i16, i16* %237, i64 48
  store i16 %236, i16* %238, align 2
  %239 = load i16*, i16** @iclp, align 8
  %240 = load i32, i32* %10, align 4
  %241 = load i32, i32* %4, align 4
  %242 = sub nsw i32 %240, %241
  %243 = ashr i32 %242, 14
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds i16, i16* %239, i64 %244
  %246 = load i16, i16* %245, align 2
  %247 = load i16*, i16** %2, align 8
  %248 = getelementptr inbounds i16, i16* %247, i64 56
  store i16 %246, i16* %248, align 2
  br label %249

249:                                              ; preds = %75, %48
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_idct() #0 {
  %1 = alloca i32, align 4
  store i16* getelementptr inbounds ([1024 x i16], [1024 x i16]* @iclip, i64 0, i64 512), i16** @iclp, align 8
  store i32 -512, i32* %1, align 4
  br label %2

2:                                                ; preds = %24, %0
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 512
  br i1 %4, label %5, label %27

5:                                                ; preds = %2
  %6 = load i32, i32* %1, align 4
  %7 = icmp slt i32 %6, -256
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  br label %17

9:                                                ; preds = %5
  %10 = load i32, i32* %1, align 4
  %11 = icmp sgt i32 %10, 255
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  br label %15

13:                                               ; preds = %9
  %14 = load i32, i32* %1, align 4
  br label %15

15:                                               ; preds = %13, %12
  %16 = phi i32 [ 255, %12 ], [ %14, %13 ]
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ -256, %8 ], [ %16, %15 ]
  %19 = trunc i32 %18 to i16
  %20 = load i16*, i16** @iclp, align 8
  %21 = load i32, i32* %1, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i16, i16* %20, i64 %22
  store i16 %19, i16* %23, align 2
  br label %24

24:                                               ; preds = %17
  %25 = load i32, i32* %1, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %1, align 4
  br label %2

27:                                               ; preds = %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @motion_estimation(i8* %0, i8* %1, i8* %2, i8* %3, i8* %4, i8* %5, i32 %6, i32 %7, i32 %8, i32 %9, %struct.mbinfo* %10, i32 %11, i32 %12) #0 {
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %struct.mbinfo*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  store i8* %0, i8** %14, align 8
  store i8* %1, i8** %15, align 8
  store i8* %2, i8** %16, align 8
  store i8* %3, i8** %17, align 8
  store i8* %4, i8** %18, align 8
  store i8* %5, i8** %19, align 8
  store i32 %6, i32* %20, align 4
  store i32 %7, i32* %21, align 4
  store i32 %8, i32* %22, align 4
  store i32 %9, i32* %23, align 4
  store %struct.mbinfo* %10, %struct.mbinfo** %24, align 8
  store i32 %11, i32* %25, align 4
  store i32 %12, i32* %26, align 4
  store i32 0, i32* %28, align 4
  br label %29

29:                                               ; preds = %85, %13
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* @height2, align 4
  %32 = icmp slt i32 %30, %31
  br i1 %32, label %33, label %88

33:                                               ; preds = %29
  store i32 0, i32* %27, align 4
  br label %34

34:                                               ; preds = %73, %33
  %35 = load i32, i32* %27, align 4
  %36 = load i32, i32* @width, align 4
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %38, label %76

38:                                               ; preds = %34
  %39 = load i32, i32* @pict_struct, align 4
  %40 = icmp eq i32 %39, 3
  br i1 %40, label %41, label %54

41:                                               ; preds = %38
  %42 = load i8*, i8** %14, align 8
  %43 = load i8*, i8** %15, align 8
  %44 = load i8*, i8** %16, align 8
  %45 = load i8*, i8** %17, align 8
  %46 = load i8*, i8** %18, align 8
  %47 = load i32, i32* %27, align 4
  %48 = load i32, i32* %28, align 4
  %49 = load i32, i32* %20, align 4
  %50 = load i32, i32* %21, align 4
  %51 = load i32, i32* %22, align 4
  %52 = load i32, i32* %23, align 4
  %53 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  call void @frame_ME(i8* %42, i8* %43, i8* %44, i8* %45, i8* %46, i32 %47, i32 %48, i32 %49, i32 %50, i32 %51, i32 %52, %struct.mbinfo* %53)
  br label %70

54:                                               ; preds = %38
  %55 = load i8*, i8** %14, align 8
  %56 = load i8*, i8** %15, align 8
  %57 = load i8*, i8** %16, align 8
  %58 = load i8*, i8** %17, align 8
  %59 = load i8*, i8** %18, align 8
  %60 = load i8*, i8** %19, align 8
  %61 = load i32, i32* %27, align 4
  %62 = load i32, i32* %28, align 4
  %63 = load i32, i32* %20, align 4
  %64 = load i32, i32* %21, align 4
  %65 = load i32, i32* %22, align 4
  %66 = load i32, i32* %23, align 4
  %67 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %68 = load i32, i32* %25, align 4
  %69 = load i32, i32* %26, align 4
  call void @field_ME(i8* %55, i8* %56, i8* %57, i8* %58, i8* %59, i8* %60, i32 %61, i32 %62, i32 %63, i32 %64, i32 %65, i32 %66, %struct.mbinfo* %67, i32 %68, i32 %69)
  br label %70

70:                                               ; preds = %54, %41
  %71 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %72 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %71, i32 1
  store %struct.mbinfo* %72, %struct.mbinfo** %24, align 8
  br label %73

73:                                               ; preds = %70
  %74 = load i32, i32* %27, align 4
  %75 = add nsw i32 %74, 16
  store i32 %75, i32* %27, align 4
  br label %34

76:                                               ; preds = %34
  %77 = load i32, i32* @quiet, align 4
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %76
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %81 = call i32 @putc(i32 46, %struct._IO_FILE* %80)
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %83 = call i32 @fflush(%struct._IO_FILE* %82)
  br label %84

84:                                               ; preds = %79, %76
  br label %85

85:                                               ; preds = %84
  %86 = load i32, i32* %28, align 4
  %87 = add nsw i32 %86, 16
  store i32 %87, i32* %28, align 4
  br label %29

88:                                               ; preds = %29
  %89 = load i32, i32* @quiet, align 4
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %88
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %93 = call i32 @putc(i32 10, %struct._IO_FILE* %92)
  br label %94

94:                                               ; preds = %91, %88
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @frame_ME(i8* %0, i8* %1, i8* %2, i8* %3, i8* %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, %struct.mbinfo* %11) #0 {
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %struct.mbinfo*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  %61 = alloca i32, align 4
  %62 = alloca i32, align 4
  %63 = alloca i8*, align 8
  %64 = alloca [2 x [2 x i32]], align 16
  %65 = alloca [2 x [2 x i32]], align 16
  %66 = alloca i32, align 4
  %67 = alloca i32, align 4
  %68 = alloca i32, align 4
  %69 = alloca i32, align 4
  %70 = alloca i32, align 4
  %71 = alloca i32, align 4
  store i8* %0, i8** %13, align 8
  store i8* %1, i8** %14, align 8
  store i8* %2, i8** %15, align 8
  store i8* %3, i8** %16, align 8
  store i8* %4, i8** %17, align 8
  store i32 %5, i32* %18, align 4
  store i32 %6, i32* %19, align 4
  store i32 %7, i32* %20, align 4
  store i32 %8, i32* %21, align 4
  store i32 %9, i32* %22, align 4
  store i32 %10, i32* %23, align 4
  store %struct.mbinfo* %11, %struct.mbinfo** %24, align 8
  %72 = load i8*, i8** %17, align 8
  %73 = load i32, i32* %18, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %72, i64 %74
  %76 = load i32, i32* @width, align 4
  %77 = load i32, i32* %19, align 4
  %78 = mul nsw i32 %76, %77
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %75, i64 %79
  store i8* %80, i8** %63, align 8
  %81 = load i8*, i8** %63, align 8
  %82 = load i32, i32* @width, align 4
  %83 = call i32 @variance(i8* %81, i32 %82)
  store i32 %83, i32* %43, align 4
  %84 = load i32, i32* @pict_type, align 4
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %89

86:                                               ; preds = %12
  %87 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %88 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %87, i32 0, i32 0
  store i32 1, i32* %88, align 8
  br label %1259

89:                                               ; preds = %12
  %90 = load i32, i32* @pict_type, align 4
  %91 = icmp eq i32 %90, 2
  br i1 %91, label %92, label %417

92:                                               ; preds = %89
  %93 = load i32, i32* @frame_pred_dct, align 4
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %95, label %127

95:                                               ; preds = %92
  %96 = load i8*, i8** %13, align 8
  %97 = load i8*, i8** %15, align 8
  %98 = load i8*, i8** %63, align 8
  %99 = load i32, i32* @width, align 4
  %100 = load i32, i32* %18, align 4
  %101 = load i32, i32* %19, align 4
  %102 = load i32, i32* %20, align 4
  %103 = load i32, i32* %21, align 4
  %104 = load i32, i32* @width, align 4
  %105 = load i32, i32* @height, align 4
  %106 = call i32 @fullsearch(i8* %96, i8* %97, i8* %98, i32 %99, i32 %100, i32 %101, i32 %102, i32 %103, i32 16, i32 %104, i32 %105, i32* %25, i32* %26)
  store i32 %106, i32* %45, align 4
  %107 = load i8*, i8** %15, align 8
  %108 = load i32, i32* %25, align 4
  %109 = ashr i32 %108, 1
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i8, i8* %107, i64 %110
  %112 = load i32, i32* @width, align 4
  %113 = load i32, i32* %26, align 4
  %114 = ashr i32 %113, 1
  %115 = mul nsw i32 %112, %114
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i8, i8* %111, i64 %116
  %118 = load i8*, i8** %63, align 8
  %119 = load i32, i32* @width, align 4
  %120 = load i32, i32* %25, align 4
  %121 = and i32 %120, 1
  %122 = load i32, i32* %26, align 4
  %123 = and i32 %122, 1
  %124 = call i32 @dist2(i8* %117, i8* %118, i32 %119, i32 %121, i32 %123, i32 16)
  store i32 %124, i32* %49, align 4
  %125 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %126 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %125, i32 0, i32 1
  store i32 2, i32* %126, align 4
  br label %257

127:                                              ; preds = %92
  %128 = load i8*, i8** %13, align 8
  %129 = load i8*, i8** %15, align 8
  %130 = load i8*, i8** %63, align 8
  %131 = load i32, i32* %18, align 4
  %132 = load i32, i32* %19, align 4
  %133 = load i32, i32* %20, align 4
  %134 = load i32, i32* %21, align 4
  %135 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %64, i64 0, i64 0
  %136 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %65, i64 0, i64 0
  call void @frame_estimate(i8* %128, i8* %129, i8* %130, i32 %131, i32 %132, i32 %133, i32 %134, i32* %25, i32* %26, i32* %31, i32* %32, i32* %33, i32* %34, i32* %45, i32* %53, i32* %57, i32* %58, [2 x i32]* %135, [2 x i32]* %136)
  %137 = load i32, i32* @M, align 4
  %138 = icmp eq i32 %137, 1
  br i1 %138, label %139, label %147

139:                                              ; preds = %127
  %140 = load i8*, i8** %15, align 8
  %141 = load i8*, i8** %63, align 8
  %142 = load i32, i32* %18, align 4
  %143 = load i32, i32* %19, align 4
  %144 = ashr i32 %143, 1
  %145 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %64, i64 0, i64 0
  %146 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %65, i64 0, i64 0
  call void @dpframe_estimate(i8* %140, i8* %141, i32 %142, i32 %144, [2 x i32]* %145, [2 x i32]* %146, i32* %66, i32* %67, i32* %68, i32* %69, i32* %70, i32* %71)
  br label %147

147:                                              ; preds = %139, %127
  %148 = load i32, i32* @M, align 4
  %149 = icmp eq i32 %148, 1
  br i1 %149, label %150, label %163

150:                                              ; preds = %147
  %151 = load i32, i32* %70, align 4
  %152 = load i32, i32* %45, align 4
  %153 = icmp slt i32 %151, %152
  br i1 %153, label %154, label %163

154:                                              ; preds = %150
  %155 = load i32, i32* %70, align 4
  %156 = load i32, i32* %53, align 4
  %157 = icmp slt i32 %155, %156
  br i1 %157, label %158, label %163

158:                                              ; preds = %154
  %159 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %160 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %159, i32 0, i32 1
  store i32 3, i32* %160, align 4
  %161 = load i32, i32* %70, align 4
  store i32 %161, i32* %45, align 4
  %162 = load i32, i32* %71, align 4
  store i32 %162, i32* %49, align 4
  br label %256

163:                                              ; preds = %154, %150, %147
  %164 = load i32, i32* %45, align 4
  %165 = load i32, i32* %53, align 4
  %166 = icmp sle i32 %164, %165
  br i1 %166, label %167, label %188

167:                                              ; preds = %163
  %168 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %169 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %168, i32 0, i32 1
  store i32 2, i32* %169, align 4
  %170 = load i8*, i8** %15, align 8
  %171 = load i32, i32* %25, align 4
  %172 = ashr i32 %171, 1
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i8, i8* %170, i64 %173
  %175 = load i32, i32* @width, align 4
  %176 = load i32, i32* %26, align 4
  %177 = ashr i32 %176, 1
  %178 = mul nsw i32 %175, %177
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i8, i8* %174, i64 %179
  %181 = load i8*, i8** %63, align 8
  %182 = load i32, i32* @width, align 4
  %183 = load i32, i32* %25, align 4
  %184 = and i32 %183, 1
  %185 = load i32, i32* %26, align 4
  %186 = and i32 %185, 1
  %187 = call i32 @dist2(i8* %180, i8* %181, i32 %182, i32 %184, i32 %186, i32 16)
  store i32 %187, i32* %49, align 4
  br label %255

188:                                              ; preds = %163
  %189 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %190 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %189, i32 0, i32 1
  store i32 1, i32* %190, align 4
  %191 = load i32, i32* %53, align 4
  store i32 %191, i32* %45, align 4
  %192 = load i8*, i8** %15, align 8
  %193 = load i32, i32* %57, align 4
  %194 = icmp ne i32 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %188
  %196 = load i32, i32* @width, align 4
  br label %198

197:                                              ; preds = %188
  br label %198

198:                                              ; preds = %197, %195
  %199 = phi i32 [ %196, %195 ], [ 0, %197 ]
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i8, i8* %192, i64 %200
  %202 = load i32, i32* %31, align 4
  %203 = ashr i32 %202, 1
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i8, i8* %201, i64 %204
  %206 = load i32, i32* @width, align 4
  %207 = shl i32 %206, 1
  %208 = load i32, i32* %32, align 4
  %209 = ashr i32 %208, 1
  %210 = mul nsw i32 %207, %209
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i8, i8* %205, i64 %211
  %213 = load i8*, i8** %63, align 8
  %214 = load i32, i32* @width, align 4
  %215 = shl i32 %214, 1
  %216 = load i32, i32* %31, align 4
  %217 = and i32 %216, 1
  %218 = load i32, i32* %32, align 4
  %219 = and i32 %218, 1
  %220 = call i32 @dist2(i8* %212, i8* %213, i32 %215, i32 %217, i32 %219, i32 8)
  store i32 %220, i32* %49, align 4
  %221 = load i8*, i8** %15, align 8
  %222 = load i32, i32* %58, align 4
  %223 = icmp ne i32 %222, 0
  br i1 %223, label %224, label %226

224:                                              ; preds = %198
  %225 = load i32, i32* @width, align 4
  br label %227

226:                                              ; preds = %198
  br label %227

227:                                              ; preds = %226, %224
  %228 = phi i32 [ %225, %224 ], [ 0, %226 ]
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds i8, i8* %221, i64 %229
  %231 = load i32, i32* %33, align 4
  %232 = ashr i32 %231, 1
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds i8, i8* %230, i64 %233
  %235 = load i32, i32* @width, align 4
  %236 = shl i32 %235, 1
  %237 = load i32, i32* %34, align 4
  %238 = ashr i32 %237, 1
  %239 = mul nsw i32 %236, %238
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i8, i8* %234, i64 %240
  %242 = load i8*, i8** %63, align 8
  %243 = load i32, i32* @width, align 4
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds i8, i8* %242, i64 %244
  %246 = load i32, i32* @width, align 4
  %247 = shl i32 %246, 1
  %248 = load i32, i32* %33, align 4
  %249 = and i32 %248, 1
  %250 = load i32, i32* %34, align 4
  %251 = and i32 %250, 1
  %252 = call i32 @dist2(i8* %241, i8* %245, i32 %247, i32 %249, i32 %251, i32 8)
  %253 = load i32, i32* %49, align 4
  %254 = add nsw i32 %253, %252
  store i32 %254, i32* %49, align 4
  br label %255

255:                                              ; preds = %227, %167
  br label %256

256:                                              ; preds = %255, %158
  br label %257

257:                                              ; preds = %256, %95
  %258 = load i32, i32* %49, align 4
  %259 = load i32, i32* %43, align 4
  %260 = icmp sgt i32 %258, %259
  br i1 %260, label %261, label %267

261:                                              ; preds = %257
  %262 = load i32, i32* %49, align 4
  %263 = icmp sge i32 %262, 2304
  br i1 %263, label %264, label %267

264:                                              ; preds = %261
  %265 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %266 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %265, i32 0, i32 0
  store i32 1, i32* %266, align 8
  br label %416

267:                                              ; preds = %261, %257
  %268 = load i8*, i8** %15, align 8
  %269 = load i32, i32* %18, align 4
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds i8, i8* %268, i64 %270
  %272 = load i32, i32* @width, align 4
  %273 = load i32, i32* %19, align 4
  %274 = mul nsw i32 %272, %273
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds i8, i8* %271, i64 %275
  %277 = load i8*, i8** %63, align 8
  %278 = load i32, i32* @width, align 4
  %279 = call i32 @dist2(i8* %276, i8* %277, i32 %278, i32 0, i32 0, i32 16)
  store i32 %279, i32* %44, align 4
  %280 = load i32, i32* %44, align 4
  %281 = mul nsw i32 4, %280
  %282 = load i32, i32* %49, align 4
  %283 = mul nsw i32 5, %282
  %284 = icmp sgt i32 %281, %283
  br i1 %284, label %285, label %399

285:                                              ; preds = %267
  %286 = load i32, i32* %44, align 4
  %287 = icmp sge i32 %286, 2304
  br i1 %287, label %288, label %399

288:                                              ; preds = %285
  %289 = load i32, i32* %49, align 4
  store i32 %289, i32* %43, align 4
  %290 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %291 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %290, i32 0, i32 0
  store i32 8, i32* %291, align 8
  %292 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %293 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %292, i32 0, i32 1
  %294 = load i32, i32* %293, align 4
  %295 = icmp eq i32 %294, 2
  br i1 %295, label %296, label %315

296:                                              ; preds = %288
  %297 = load i32, i32* %25, align 4
  %298 = load i32, i32* %18, align 4
  %299 = shl i32 %298, 1
  %300 = sub nsw i32 %297, %299
  %301 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %302 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %301, i32 0, i32 6
  %303 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %302, i64 0, i64 0
  %304 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %303, i64 0, i64 0
  %305 = getelementptr inbounds [2 x i32], [2 x i32]* %304, i64 0, i64 0
  store i32 %300, i32* %305, align 8
  %306 = load i32, i32* %26, align 4
  %307 = load i32, i32* %19, align 4
  %308 = shl i32 %307, 1
  %309 = sub nsw i32 %306, %308
  %310 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %311 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %310, i32 0, i32 6
  %312 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %311, i64 0, i64 0
  %313 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %312, i64 0, i64 0
  %314 = getelementptr inbounds [2 x i32], [2 x i32]* %313, i64 0, i64 1
  store i32 %309, i32* %314, align 4
  br label %398

315:                                              ; preds = %288
  %316 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %317 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %316, i32 0, i32 1
  %318 = load i32, i32* %317, align 4
  %319 = icmp eq i32 %318, 3
  br i1 %319, label %320, label %348

320:                                              ; preds = %315
  %321 = load i32, i32* %66, align 4
  %322 = load i32, i32* %18, align 4
  %323 = shl i32 %322, 1
  %324 = sub nsw i32 %321, %323
  %325 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %326 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %325, i32 0, i32 6
  %327 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %326, i64 0, i64 0
  %328 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %327, i64 0, i64 0
  %329 = getelementptr inbounds [2 x i32], [2 x i32]* %328, i64 0, i64 0
  store i32 %324, i32* %329, align 8
  %330 = load i32, i32* %67, align 4
  %331 = shl i32 %330, 1
  %332 = load i32, i32* %19, align 4
  %333 = shl i32 %332, 1
  %334 = sub nsw i32 %331, %333
  %335 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %336 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %335, i32 0, i32 6
  %337 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %336, i64 0, i64 0
  %338 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %337, i64 0, i64 0
  %339 = getelementptr inbounds [2 x i32], [2 x i32]* %338, i64 0, i64 1
  store i32 %334, i32* %339, align 4
  %340 = load i32, i32* %68, align 4
  %341 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %342 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %341, i32 0, i32 8
  %343 = getelementptr inbounds [2 x i32], [2 x i32]* %342, i64 0, i64 0
  store i32 %340, i32* %343, align 8
  %344 = load i32, i32* %69, align 4
  %345 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %346 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %345, i32 0, i32 8
  %347 = getelementptr inbounds [2 x i32], [2 x i32]* %346, i64 0, i64 1
  store i32 %344, i32* %347, align 4
  br label %397

348:                                              ; preds = %315
  %349 = load i32, i32* %31, align 4
  %350 = load i32, i32* %18, align 4
  %351 = shl i32 %350, 1
  %352 = sub nsw i32 %349, %351
  %353 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %354 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %353, i32 0, i32 6
  %355 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %354, i64 0, i64 0
  %356 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %355, i64 0, i64 0
  %357 = getelementptr inbounds [2 x i32], [2 x i32]* %356, i64 0, i64 0
  store i32 %352, i32* %357, align 8
  %358 = load i32, i32* %32, align 4
  %359 = shl i32 %358, 1
  %360 = load i32, i32* %19, align 4
  %361 = shl i32 %360, 1
  %362 = sub nsw i32 %359, %361
  %363 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %364 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %363, i32 0, i32 6
  %365 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %364, i64 0, i64 0
  %366 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %365, i64 0, i64 0
  %367 = getelementptr inbounds [2 x i32], [2 x i32]* %366, i64 0, i64 1
  store i32 %362, i32* %367, align 4
  %368 = load i32, i32* %33, align 4
  %369 = load i32, i32* %18, align 4
  %370 = shl i32 %369, 1
  %371 = sub nsw i32 %368, %370
  %372 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %373 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %372, i32 0, i32 6
  %374 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %373, i64 0, i64 1
  %375 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %374, i64 0, i64 0
  %376 = getelementptr inbounds [2 x i32], [2 x i32]* %375, i64 0, i64 0
  store i32 %371, i32* %376, align 8
  %377 = load i32, i32* %34, align 4
  %378 = shl i32 %377, 1
  %379 = load i32, i32* %19, align 4
  %380 = shl i32 %379, 1
  %381 = sub nsw i32 %378, %380
  %382 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %383 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %382, i32 0, i32 6
  %384 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %383, i64 0, i64 1
  %385 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %384, i64 0, i64 0
  %386 = getelementptr inbounds [2 x i32], [2 x i32]* %385, i64 0, i64 1
  store i32 %381, i32* %386, align 4
  %387 = load i32, i32* %57, align 4
  %388 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %389 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %388, i32 0, i32 7
  %390 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %389, i64 0, i64 0
  %391 = getelementptr inbounds [2 x i32], [2 x i32]* %390, i64 0, i64 0
  store i32 %387, i32* %391, align 8
  %392 = load i32, i32* %58, align 4
  %393 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %394 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %393, i32 0, i32 7
  %395 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %394, i64 0, i64 1
  %396 = getelementptr inbounds [2 x i32], [2 x i32]* %395, i64 0, i64 0
  store i32 %392, i32* %396, align 8
  br label %397

397:                                              ; preds = %348, %320
  br label %398

398:                                              ; preds = %397, %296
  br label %415

399:                                              ; preds = %285, %267
  %400 = load i32, i32* %44, align 4
  store i32 %400, i32* %43, align 4
  %401 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %402 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %401, i32 0, i32 0
  store i32 0, i32* %402, align 8
  %403 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %404 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %403, i32 0, i32 1
  store i32 2, i32* %404, align 4
  %405 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %406 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %405, i32 0, i32 6
  %407 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %406, i64 0, i64 0
  %408 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %407, i64 0, i64 0
  %409 = getelementptr inbounds [2 x i32], [2 x i32]* %408, i64 0, i64 0
  store i32 0, i32* %409, align 8
  %410 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %411 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %410, i32 0, i32 6
  %412 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %411, i64 0, i64 0
  %413 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %412, i64 0, i64 0
  %414 = getelementptr inbounds [2 x i32], [2 x i32]* %413, i64 0, i64 1
  store i32 0, i32* %414, align 4
  br label %415

415:                                              ; preds = %399, %398
  br label %416

416:                                              ; preds = %415, %264
  br label %1258

417:                                              ; preds = %89
  %418 = load i32, i32* @frame_pred_dct, align 4
  %419 = icmp ne i32 %418, 0
  br i1 %419, label %420, label %539

420:                                              ; preds = %417
  %421 = load i8*, i8** %13, align 8
  %422 = load i8*, i8** %15, align 8
  %423 = load i8*, i8** %63, align 8
  %424 = load i32, i32* @width, align 4
  %425 = load i32, i32* %18, align 4
  %426 = load i32, i32* %19, align 4
  %427 = load i32, i32* %20, align 4
  %428 = load i32, i32* %21, align 4
  %429 = load i32, i32* @width, align 4
  %430 = load i32, i32* @height, align 4
  %431 = call i32 @fullsearch(i8* %421, i8* %422, i8* %423, i32 %424, i32 %425, i32 %426, i32 %427, i32 %428, i32 16, i32 %429, i32 %430, i32* %27, i32* %28)
  store i32 %431, i32* %46, align 4
  %432 = load i8*, i8** %15, align 8
  %433 = load i32, i32* %27, align 4
  %434 = ashr i32 %433, 1
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds i8, i8* %432, i64 %435
  %437 = load i32, i32* @width, align 4
  %438 = load i32, i32* %28, align 4
  %439 = ashr i32 %438, 1
  %440 = mul nsw i32 %437, %439
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds i8, i8* %436, i64 %441
  %443 = load i8*, i8** %63, align 8
  %444 = load i32, i32* @width, align 4
  %445 = load i32, i32* %27, align 4
  %446 = and i32 %445, 1
  %447 = load i32, i32* %28, align 4
  %448 = and i32 %447, 1
  %449 = call i32 @dist2(i8* %442, i8* %443, i32 %444, i32 %446, i32 %448, i32 16)
  store i32 %449, i32* %50, align 4
  %450 = load i8*, i8** %14, align 8
  %451 = load i8*, i8** %16, align 8
  %452 = load i8*, i8** %63, align 8
  %453 = load i32, i32* @width, align 4
  %454 = load i32, i32* %18, align 4
  %455 = load i32, i32* %19, align 4
  %456 = load i32, i32* %22, align 4
  %457 = load i32, i32* %23, align 4
  %458 = load i32, i32* @width, align 4
  %459 = load i32, i32* @height, align 4
  %460 = call i32 @fullsearch(i8* %450, i8* %451, i8* %452, i32 %453, i32 %454, i32 %455, i32 %456, i32 %457, i32 16, i32 %458, i32 %459, i32* %29, i32* %30)
  store i32 %460, i32* %47, align 4
  %461 = load i8*, i8** %16, align 8
  %462 = load i32, i32* %29, align 4
  %463 = ashr i32 %462, 1
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds i8, i8* %461, i64 %464
  %466 = load i32, i32* @width, align 4
  %467 = load i32, i32* %30, align 4
  %468 = ashr i32 %467, 1
  %469 = mul nsw i32 %466, %468
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds i8, i8* %465, i64 %470
  %472 = load i8*, i8** %63, align 8
  %473 = load i32, i32* @width, align 4
  %474 = load i32, i32* %29, align 4
  %475 = and i32 %474, 1
  %476 = load i32, i32* %30, align 4
  %477 = and i32 %476, 1
  %478 = call i32 @dist2(i8* %471, i8* %472, i32 %473, i32 %475, i32 %477, i32 16)
  store i32 %478, i32* %51, align 4
  %479 = load i8*, i8** %15, align 8
  %480 = load i32, i32* %27, align 4
  %481 = ashr i32 %480, 1
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds i8, i8* %479, i64 %482
  %484 = load i32, i32* @width, align 4
  %485 = load i32, i32* %28, align 4
  %486 = ashr i32 %485, 1
  %487 = mul nsw i32 %484, %486
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds i8, i8* %483, i64 %488
  %490 = load i8*, i8** %16, align 8
  %491 = load i32, i32* %29, align 4
  %492 = ashr i32 %491, 1
  %493 = sext i32 %492 to i64
  %494 = getelementptr inbounds i8, i8* %490, i64 %493
  %495 = load i32, i32* @width, align 4
  %496 = load i32, i32* %30, align 4
  %497 = ashr i32 %496, 1
  %498 = mul nsw i32 %495, %497
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds i8, i8* %494, i64 %499
  %501 = load i8*, i8** %63, align 8
  %502 = load i32, i32* @width, align 4
  %503 = load i32, i32* %27, align 4
  %504 = and i32 %503, 1
  %505 = load i32, i32* %28, align 4
  %506 = and i32 %505, 1
  %507 = load i32, i32* %29, align 4
  %508 = and i32 %507, 1
  %509 = load i32, i32* %30, align 4
  %510 = and i32 %509, 1
  %511 = call i32 @bdist2(i8* %489, i8* %500, i8* %501, i32 %502, i32 %504, i32 %506, i32 %508, i32 %510, i32 16)
  store i32 %511, i32* %52, align 4
  %512 = load i32, i32* %50, align 4
  %513 = load i32, i32* %51, align 4
  %514 = icmp sle i32 %512, %513
  br i1 %514, label %515, label %523

515:                                              ; preds = %420
  %516 = load i32, i32* %50, align 4
  %517 = load i32, i32* %52, align 4
  %518 = icmp sle i32 %516, %517
  br i1 %518, label %519, label %523

519:                                              ; preds = %515
  %520 = load i32, i32* %50, align 4
  store i32 %520, i32* %49, align 4
  %521 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %522 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %521, i32 0, i32 0
  store i32 8, i32* %522, align 8
  br label %536

523:                                              ; preds = %515, %420
  %524 = load i32, i32* %51, align 4
  %525 = load i32, i32* %52, align 4
  %526 = icmp sle i32 %524, %525
  br i1 %526, label %527, label %531

527:                                              ; preds = %523
  %528 = load i32, i32* %51, align 4
  store i32 %528, i32* %49, align 4
  %529 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %530 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %529, i32 0, i32 0
  store i32 4, i32* %530, align 8
  br label %535

531:                                              ; preds = %523
  %532 = load i32, i32* %52, align 4
  store i32 %532, i32* %49, align 4
  %533 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %534 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %533, i32 0, i32 0
  store i32 12, i32* %534, align 8
  br label %535

535:                                              ; preds = %531, %527
  br label %536

536:                                              ; preds = %535, %519
  %537 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %538 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %537, i32 0, i32 1
  store i32 2, i32* %538, align 4
  br label %1106

539:                                              ; preds = %417
  %540 = load i8*, i8** %13, align 8
  %541 = load i8*, i8** %15, align 8
  %542 = load i8*, i8** %63, align 8
  %543 = load i32, i32* %18, align 4
  %544 = load i32, i32* %19, align 4
  %545 = load i32, i32* %20, align 4
  %546 = load i32, i32* %21, align 4
  %547 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %64, i64 0, i64 0
  %548 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %65, i64 0, i64 0
  call void @frame_estimate(i8* %540, i8* %541, i8* %542, i32 %543, i32 %544, i32 %545, i32 %546, i32* %27, i32* %28, i32* %35, i32* %36, i32* %37, i32* %38, i32* %46, i32* %54, i32* %59, i32* %60, [2 x i32]* %547, [2 x i32]* %548)
  %549 = load i8*, i8** %14, align 8
  %550 = load i8*, i8** %16, align 8
  %551 = load i8*, i8** %63, align 8
  %552 = load i32, i32* %18, align 4
  %553 = load i32, i32* %19, align 4
  %554 = load i32, i32* %22, align 4
  %555 = load i32, i32* %23, align 4
  %556 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %64, i64 0, i64 0
  %557 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %65, i64 0, i64 0
  call void @frame_estimate(i8* %549, i8* %550, i8* %551, i32 %552, i32 %553, i32 %554, i32 %555, i32* %29, i32* %30, i32* %39, i32* %40, i32* %41, i32* %42, i32* %47, i32* %55, i32* %61, i32* %62, [2 x i32]* %556, [2 x i32]* %557)
  %558 = load i8*, i8** %15, align 8
  %559 = load i32, i32* %27, align 4
  %560 = ashr i32 %559, 1
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds i8, i8* %558, i64 %561
  %563 = load i32, i32* @width, align 4
  %564 = load i32, i32* %28, align 4
  %565 = ashr i32 %564, 1
  %566 = mul nsw i32 %563, %565
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds i8, i8* %562, i64 %567
  %569 = load i8*, i8** %16, align 8
  %570 = load i32, i32* %29, align 4
  %571 = ashr i32 %570, 1
  %572 = sext i32 %571 to i64
  %573 = getelementptr inbounds i8, i8* %569, i64 %572
  %574 = load i32, i32* @width, align 4
  %575 = load i32, i32* %30, align 4
  %576 = ashr i32 %575, 1
  %577 = mul nsw i32 %574, %576
  %578 = sext i32 %577 to i64
  %579 = getelementptr inbounds i8, i8* %573, i64 %578
  %580 = load i8*, i8** %63, align 8
  %581 = load i32, i32* @width, align 4
  %582 = load i32, i32* %27, align 4
  %583 = and i32 %582, 1
  %584 = load i32, i32* %28, align 4
  %585 = and i32 %584, 1
  %586 = load i32, i32* %29, align 4
  %587 = and i32 %586, 1
  %588 = load i32, i32* %30, align 4
  %589 = and i32 %588, 1
  %590 = call i32 @bdist1(i8* %568, i8* %579, i8* %580, i32 %581, i32 %583, i32 %585, i32 %587, i32 %589, i32 16)
  store i32 %590, i32* %48, align 4
  %591 = load i8*, i8** %15, align 8
  %592 = load i32, i32* %35, align 4
  %593 = ashr i32 %592, 1
  %594 = sext i32 %593 to i64
  %595 = getelementptr inbounds i8, i8* %591, i64 %594
  %596 = load i32, i32* %59, align 4
  %597 = icmp ne i32 %596, 0
  br i1 %597, label %598, label %600

598:                                              ; preds = %539
  %599 = load i32, i32* @width, align 4
  br label %601

600:                                              ; preds = %539
  br label %601

601:                                              ; preds = %600, %598
  %602 = phi i32 [ %599, %598 ], [ 0, %600 ]
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds i8, i8* %595, i64 %603
  %605 = load i32, i32* @width, align 4
  %606 = shl i32 %605, 1
  %607 = load i32, i32* %36, align 4
  %608 = ashr i32 %607, 1
  %609 = mul nsw i32 %606, %608
  %610 = sext i32 %609 to i64
  %611 = getelementptr inbounds i8, i8* %604, i64 %610
  %612 = load i8*, i8** %16, align 8
  %613 = load i32, i32* %39, align 4
  %614 = ashr i32 %613, 1
  %615 = sext i32 %614 to i64
  %616 = getelementptr inbounds i8, i8* %612, i64 %615
  %617 = load i32, i32* %61, align 4
  %618 = icmp ne i32 %617, 0
  br i1 %618, label %619, label %621

619:                                              ; preds = %601
  %620 = load i32, i32* @width, align 4
  br label %622

621:                                              ; preds = %601
  br label %622

622:                                              ; preds = %621, %619
  %623 = phi i32 [ %620, %619 ], [ 0, %621 ]
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds i8, i8* %616, i64 %624
  %626 = load i32, i32* @width, align 4
  %627 = shl i32 %626, 1
  %628 = load i32, i32* %40, align 4
  %629 = ashr i32 %628, 1
  %630 = mul nsw i32 %627, %629
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds i8, i8* %625, i64 %631
  %633 = load i8*, i8** %63, align 8
  %634 = load i32, i32* @width, align 4
  %635 = shl i32 %634, 1
  %636 = load i32, i32* %35, align 4
  %637 = and i32 %636, 1
  %638 = load i32, i32* %36, align 4
  %639 = and i32 %638, 1
  %640 = load i32, i32* %39, align 4
  %641 = and i32 %640, 1
  %642 = load i32, i32* %40, align 4
  %643 = and i32 %642, 1
  %644 = call i32 @bdist1(i8* %611, i8* %632, i8* %633, i32 %635, i32 %637, i32 %639, i32 %641, i32 %643, i32 8)
  store i32 %644, i32* %56, align 4
  %645 = load i8*, i8** %15, align 8
  %646 = load i32, i32* %37, align 4
  %647 = ashr i32 %646, 1
  %648 = sext i32 %647 to i64
  %649 = getelementptr inbounds i8, i8* %645, i64 %648
  %650 = load i32, i32* %60, align 4
  %651 = icmp ne i32 %650, 0
  br i1 %651, label %652, label %654

652:                                              ; preds = %622
  %653 = load i32, i32* @width, align 4
  br label %655

654:                                              ; preds = %622
  br label %655

655:                                              ; preds = %654, %652
  %656 = phi i32 [ %653, %652 ], [ 0, %654 ]
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds i8, i8* %649, i64 %657
  %659 = load i32, i32* @width, align 4
  %660 = shl i32 %659, 1
  %661 = load i32, i32* %38, align 4
  %662 = ashr i32 %661, 1
  %663 = mul nsw i32 %660, %662
  %664 = sext i32 %663 to i64
  %665 = getelementptr inbounds i8, i8* %658, i64 %664
  %666 = load i8*, i8** %16, align 8
  %667 = load i32, i32* %41, align 4
  %668 = ashr i32 %667, 1
  %669 = sext i32 %668 to i64
  %670 = getelementptr inbounds i8, i8* %666, i64 %669
  %671 = load i32, i32* %62, align 4
  %672 = icmp ne i32 %671, 0
  br i1 %672, label %673, label %675

673:                                              ; preds = %655
  %674 = load i32, i32* @width, align 4
  br label %676

675:                                              ; preds = %655
  br label %676

676:                                              ; preds = %675, %673
  %677 = phi i32 [ %674, %673 ], [ 0, %675 ]
  %678 = sext i32 %677 to i64
  %679 = getelementptr inbounds i8, i8* %670, i64 %678
  %680 = load i32, i32* @width, align 4
  %681 = shl i32 %680, 1
  %682 = load i32, i32* %42, align 4
  %683 = ashr i32 %682, 1
  %684 = mul nsw i32 %681, %683
  %685 = sext i32 %684 to i64
  %686 = getelementptr inbounds i8, i8* %679, i64 %685
  %687 = load i8*, i8** %63, align 8
  %688 = load i32, i32* @width, align 4
  %689 = sext i32 %688 to i64
  %690 = getelementptr inbounds i8, i8* %687, i64 %689
  %691 = load i32, i32* @width, align 4
  %692 = shl i32 %691, 1
  %693 = load i32, i32* %37, align 4
  %694 = and i32 %693, 1
  %695 = load i32, i32* %38, align 4
  %696 = and i32 %695, 1
  %697 = load i32, i32* %41, align 4
  %698 = and i32 %697, 1
  %699 = load i32, i32* %42, align 4
  %700 = and i32 %699, 1
  %701 = call i32 @bdist1(i8* %665, i8* %686, i8* %690, i32 %692, i32 %694, i32 %696, i32 %698, i32 %700, i32 8)
  %702 = load i32, i32* %56, align 4
  %703 = add nsw i32 %702, %701
  store i32 %703, i32* %56, align 4
  %704 = load i32, i32* %48, align 4
  %705 = load i32, i32* %56, align 4
  %706 = icmp slt i32 %704, %705
  br i1 %706, label %707, label %761

707:                                              ; preds = %676
  %708 = load i32, i32* %48, align 4
  %709 = load i32, i32* %46, align 4
  %710 = icmp slt i32 %708, %709
  br i1 %710, label %711, label %761

711:                                              ; preds = %707
  %712 = load i32, i32* %48, align 4
  %713 = load i32, i32* %54, align 4
  %714 = icmp slt i32 %712, %713
  br i1 %714, label %715, label %761

715:                                              ; preds = %711
  %716 = load i32, i32* %48, align 4
  %717 = load i32, i32* %47, align 4
  %718 = icmp slt i32 %716, %717
  br i1 %718, label %719, label %761

719:                                              ; preds = %715
  %720 = load i32, i32* %48, align 4
  %721 = load i32, i32* %55, align 4
  %722 = icmp slt i32 %720, %721
  br i1 %722, label %723, label %761

723:                                              ; preds = %719
  %724 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %725 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %724, i32 0, i32 0
  store i32 12, i32* %725, align 8
  %726 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %727 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %726, i32 0, i32 1
  store i32 2, i32* %727, align 4
  %728 = load i8*, i8** %15, align 8
  %729 = load i32, i32* %27, align 4
  %730 = ashr i32 %729, 1
  %731 = sext i32 %730 to i64
  %732 = getelementptr inbounds i8, i8* %728, i64 %731
  %733 = load i32, i32* @width, align 4
  %734 = load i32, i32* %28, align 4
  %735 = ashr i32 %734, 1
  %736 = mul nsw i32 %733, %735
  %737 = sext i32 %736 to i64
  %738 = getelementptr inbounds i8, i8* %732, i64 %737
  %739 = load i8*, i8** %16, align 8
  %740 = load i32, i32* %29, align 4
  %741 = ashr i32 %740, 1
  %742 = sext i32 %741 to i64
  %743 = getelementptr inbounds i8, i8* %739, i64 %742
  %744 = load i32, i32* @width, align 4
  %745 = load i32, i32* %30, align 4
  %746 = ashr i32 %745, 1
  %747 = mul nsw i32 %744, %746
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds i8, i8* %743, i64 %748
  %750 = load i8*, i8** %63, align 8
  %751 = load i32, i32* @width, align 4
  %752 = load i32, i32* %27, align 4
  %753 = and i32 %752, 1
  %754 = load i32, i32* %28, align 4
  %755 = and i32 %754, 1
  %756 = load i32, i32* %29, align 4
  %757 = and i32 %756, 1
  %758 = load i32, i32* %30, align 4
  %759 = and i32 %758, 1
  %760 = call i32 @bdist2(i8* %738, i8* %749, i8* %750, i32 %751, i32 %753, i32 %755, i32 %757, i32 %759, i32 16)
  store i32 %760, i32* %49, align 4
  br label %1105

761:                                              ; preds = %719, %715, %711, %707, %676
  %762 = load i32, i32* %56, align 4
  %763 = load i32, i32* %46, align 4
  %764 = icmp slt i32 %762, %763
  br i1 %764, label %765, label %895

765:                                              ; preds = %761
  %766 = load i32, i32* %56, align 4
  %767 = load i32, i32* %54, align 4
  %768 = icmp slt i32 %766, %767
  br i1 %768, label %769, label %895

769:                                              ; preds = %765
  %770 = load i32, i32* %56, align 4
  %771 = load i32, i32* %47, align 4
  %772 = icmp slt i32 %770, %771
  br i1 %772, label %773, label %895

773:                                              ; preds = %769
  %774 = load i32, i32* %56, align 4
  %775 = load i32, i32* %55, align 4
  %776 = icmp slt i32 %774, %775
  br i1 %776, label %777, label %895

777:                                              ; preds = %773
  %778 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %779 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %778, i32 0, i32 0
  store i32 12, i32* %779, align 8
  %780 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %781 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %780, i32 0, i32 1
  store i32 1, i32* %781, align 4
  %782 = load i8*, i8** %15, align 8
  %783 = load i32, i32* %35, align 4
  %784 = ashr i32 %783, 1
  %785 = sext i32 %784 to i64
  %786 = getelementptr inbounds i8, i8* %782, i64 %785
  %787 = load i32, i32* %59, align 4
  %788 = icmp ne i32 %787, 0
  br i1 %788, label %789, label %791

789:                                              ; preds = %777
  %790 = load i32, i32* @width, align 4
  br label %792

791:                                              ; preds = %777
  br label %792

792:                                              ; preds = %791, %789
  %793 = phi i32 [ %790, %789 ], [ 0, %791 ]
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds i8, i8* %786, i64 %794
  %796 = load i32, i32* @width, align 4
  %797 = shl i32 %796, 1
  %798 = load i32, i32* %36, align 4
  %799 = ashr i32 %798, 1
  %800 = mul nsw i32 %797, %799
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds i8, i8* %795, i64 %801
  %803 = load i8*, i8** %16, align 8
  %804 = load i32, i32* %39, align 4
  %805 = ashr i32 %804, 1
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds i8, i8* %803, i64 %806
  %808 = load i32, i32* %61, align 4
  %809 = icmp ne i32 %808, 0
  br i1 %809, label %810, label %812

810:                                              ; preds = %792
  %811 = load i32, i32* @width, align 4
  br label %813

812:                                              ; preds = %792
  br label %813

813:                                              ; preds = %812, %810
  %814 = phi i32 [ %811, %810 ], [ 0, %812 ]
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds i8, i8* %807, i64 %815
  %817 = load i32, i32* @width, align 4
  %818 = shl i32 %817, 1
  %819 = load i32, i32* %40, align 4
  %820 = ashr i32 %819, 1
  %821 = mul nsw i32 %818, %820
  %822 = sext i32 %821 to i64
  %823 = getelementptr inbounds i8, i8* %816, i64 %822
  %824 = load i8*, i8** %63, align 8
  %825 = load i32, i32* @width, align 4
  %826 = shl i32 %825, 1
  %827 = load i32, i32* %35, align 4
  %828 = and i32 %827, 1
  %829 = load i32, i32* %36, align 4
  %830 = and i32 %829, 1
  %831 = load i32, i32* %39, align 4
  %832 = and i32 %831, 1
  %833 = load i32, i32* %40, align 4
  %834 = and i32 %833, 1
  %835 = call i32 @bdist2(i8* %802, i8* %823, i8* %824, i32 %826, i32 %828, i32 %830, i32 %832, i32 %834, i32 8)
  store i32 %835, i32* %49, align 4
  %836 = load i8*, i8** %15, align 8
  %837 = load i32, i32* %37, align 4
  %838 = ashr i32 %837, 1
  %839 = sext i32 %838 to i64
  %840 = getelementptr inbounds i8, i8* %836, i64 %839
  %841 = load i32, i32* %60, align 4
  %842 = icmp ne i32 %841, 0
  br i1 %842, label %843, label %845

843:                                              ; preds = %813
  %844 = load i32, i32* @width, align 4
  br label %846

845:                                              ; preds = %813
  br label %846

846:                                              ; preds = %845, %843
  %847 = phi i32 [ %844, %843 ], [ 0, %845 ]
  %848 = sext i32 %847 to i64
  %849 = getelementptr inbounds i8, i8* %840, i64 %848
  %850 = load i32, i32* @width, align 4
  %851 = shl i32 %850, 1
  %852 = load i32, i32* %38, align 4
  %853 = ashr i32 %852, 1
  %854 = mul nsw i32 %851, %853
  %855 = sext i32 %854 to i64
  %856 = getelementptr inbounds i8, i8* %849, i64 %855
  %857 = load i8*, i8** %16, align 8
  %858 = load i32, i32* %41, align 4
  %859 = ashr i32 %858, 1
  %860 = sext i32 %859 to i64
  %861 = getelementptr inbounds i8, i8* %857, i64 %860
  %862 = load i32, i32* %62, align 4
  %863 = icmp ne i32 %862, 0
  br i1 %863, label %864, label %866

864:                                              ; preds = %846
  %865 = load i32, i32* @width, align 4
  br label %867

866:                                              ; preds = %846
  br label %867

867:                                              ; preds = %866, %864
  %868 = phi i32 [ %865, %864 ], [ 0, %866 ]
  %869 = sext i32 %868 to i64
  %870 = getelementptr inbounds i8, i8* %861, i64 %869
  %871 = load i32, i32* @width, align 4
  %872 = shl i32 %871, 1
  %873 = load i32, i32* %42, align 4
  %874 = ashr i32 %873, 1
  %875 = mul nsw i32 %872, %874
  %876 = sext i32 %875 to i64
  %877 = getelementptr inbounds i8, i8* %870, i64 %876
  %878 = load i8*, i8** %63, align 8
  %879 = load i32, i32* @width, align 4
  %880 = sext i32 %879 to i64
  %881 = getelementptr inbounds i8, i8* %878, i64 %880
  %882 = load i32, i32* @width, align 4
  %883 = shl i32 %882, 1
  %884 = load i32, i32* %37, align 4
  %885 = and i32 %884, 1
  %886 = load i32, i32* %38, align 4
  %887 = and i32 %886, 1
  %888 = load i32, i32* %41, align 4
  %889 = and i32 %888, 1
  %890 = load i32, i32* %42, align 4
  %891 = and i32 %890, 1
  %892 = call i32 @bdist2(i8* %856, i8* %877, i8* %881, i32 %883, i32 %885, i32 %887, i32 %889, i32 %891, i32 8)
  %893 = load i32, i32* %49, align 4
  %894 = add nsw i32 %893, %892
  store i32 %894, i32* %49, align 4
  br label %1104

895:                                              ; preds = %773, %769, %765, %761
  %896 = load i32, i32* %46, align 4
  %897 = load i32, i32* %54, align 4
  %898 = icmp slt i32 %896, %897
  br i1 %898, label %899, label %930

899:                                              ; preds = %895
  %900 = load i32, i32* %46, align 4
  %901 = load i32, i32* %47, align 4
  %902 = icmp slt i32 %900, %901
  br i1 %902, label %903, label %930

903:                                              ; preds = %899
  %904 = load i32, i32* %46, align 4
  %905 = load i32, i32* %55, align 4
  %906 = icmp slt i32 %904, %905
  br i1 %906, label %907, label %930

907:                                              ; preds = %903
  %908 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %909 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %908, i32 0, i32 0
  store i32 8, i32* %909, align 8
  %910 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %911 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %910, i32 0, i32 1
  store i32 2, i32* %911, align 4
  %912 = load i8*, i8** %15, align 8
  %913 = load i32, i32* %27, align 4
  %914 = ashr i32 %913, 1
  %915 = sext i32 %914 to i64
  %916 = getelementptr inbounds i8, i8* %912, i64 %915
  %917 = load i32, i32* @width, align 4
  %918 = load i32, i32* %28, align 4
  %919 = ashr i32 %918, 1
  %920 = mul nsw i32 %917, %919
  %921 = sext i32 %920 to i64
  %922 = getelementptr inbounds i8, i8* %916, i64 %921
  %923 = load i8*, i8** %63, align 8
  %924 = load i32, i32* @width, align 4
  %925 = load i32, i32* %27, align 4
  %926 = and i32 %925, 1
  %927 = load i32, i32* %28, align 4
  %928 = and i32 %927, 1
  %929 = call i32 @dist2(i8* %922, i8* %923, i32 %924, i32 %926, i32 %928, i32 16)
  store i32 %929, i32* %49, align 4
  br label %1103

930:                                              ; preds = %903, %899, %895
  %931 = load i32, i32* %54, align 4
  %932 = load i32, i32* %47, align 4
  %933 = icmp slt i32 %931, %932
  br i1 %933, label %934, label %1006

934:                                              ; preds = %930
  %935 = load i32, i32* %54, align 4
  %936 = load i32, i32* %55, align 4
  %937 = icmp slt i32 %935, %936
  br i1 %937, label %938, label %1006

938:                                              ; preds = %934
  %939 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %940 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %939, i32 0, i32 0
  store i32 8, i32* %940, align 8
  %941 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %942 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %941, i32 0, i32 1
  store i32 1, i32* %942, align 4
  %943 = load i8*, i8** %15, align 8
  %944 = load i32, i32* %59, align 4
  %945 = icmp ne i32 %944, 0
  br i1 %945, label %946, label %948

946:                                              ; preds = %938
  %947 = load i32, i32* @width, align 4
  br label %949

948:                                              ; preds = %938
  br label %949

949:                                              ; preds = %948, %946
  %950 = phi i32 [ %947, %946 ], [ 0, %948 ]
  %951 = sext i32 %950 to i64
  %952 = getelementptr inbounds i8, i8* %943, i64 %951
  %953 = load i32, i32* %35, align 4
  %954 = ashr i32 %953, 1
  %955 = sext i32 %954 to i64
  %956 = getelementptr inbounds i8, i8* %952, i64 %955
  %957 = load i32, i32* @width, align 4
  %958 = shl i32 %957, 1
  %959 = load i32, i32* %36, align 4
  %960 = ashr i32 %959, 1
  %961 = mul nsw i32 %958, %960
  %962 = sext i32 %961 to i64
  %963 = getelementptr inbounds i8, i8* %956, i64 %962
  %964 = load i8*, i8** %63, align 8
  %965 = load i32, i32* @width, align 4
  %966 = shl i32 %965, 1
  %967 = load i32, i32* %35, align 4
  %968 = and i32 %967, 1
  %969 = load i32, i32* %36, align 4
  %970 = and i32 %969, 1
  %971 = call i32 @dist2(i8* %963, i8* %964, i32 %966, i32 %968, i32 %970, i32 8)
  store i32 %971, i32* %49, align 4
  %972 = load i8*, i8** %15, align 8
  %973 = load i32, i32* %60, align 4
  %974 = icmp ne i32 %973, 0
  br i1 %974, label %975, label %977

975:                                              ; preds = %949
  %976 = load i32, i32* @width, align 4
  br label %978

977:                                              ; preds = %949
  br label %978

978:                                              ; preds = %977, %975
  %979 = phi i32 [ %976, %975 ], [ 0, %977 ]
  %980 = sext i32 %979 to i64
  %981 = getelementptr inbounds i8, i8* %972, i64 %980
  %982 = load i32, i32* %37, align 4
  %983 = ashr i32 %982, 1
  %984 = sext i32 %983 to i64
  %985 = getelementptr inbounds i8, i8* %981, i64 %984
  %986 = load i32, i32* @width, align 4
  %987 = shl i32 %986, 1
  %988 = load i32, i32* %38, align 4
  %989 = ashr i32 %988, 1
  %990 = mul nsw i32 %987, %989
  %991 = sext i32 %990 to i64
  %992 = getelementptr inbounds i8, i8* %985, i64 %991
  %993 = load i8*, i8** %63, align 8
  %994 = load i32, i32* @width, align 4
  %995 = sext i32 %994 to i64
  %996 = getelementptr inbounds i8, i8* %993, i64 %995
  %997 = load i32, i32* @width, align 4
  %998 = shl i32 %997, 1
  %999 = load i32, i32* %37, align 4
  %1000 = and i32 %999, 1
  %1001 = load i32, i32* %38, align 4
  %1002 = and i32 %1001, 1
  %1003 = call i32 @dist2(i8* %992, i8* %996, i32 %998, i32 %1000, i32 %1002, i32 8)
  %1004 = load i32, i32* %49, align 4
  %1005 = add nsw i32 %1004, %1003
  store i32 %1005, i32* %49, align 4
  br label %1102

1006:                                             ; preds = %934, %930
  %1007 = load i32, i32* %47, align 4
  %1008 = load i32, i32* %55, align 4
  %1009 = icmp slt i32 %1007, %1008
  br i1 %1009, label %1010, label %1033

1010:                                             ; preds = %1006
  %1011 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1012 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1011, i32 0, i32 0
  store i32 4, i32* %1012, align 8
  %1013 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1014 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1013, i32 0, i32 1
  store i32 2, i32* %1014, align 4
  %1015 = load i8*, i8** %16, align 8
  %1016 = load i32, i32* %29, align 4
  %1017 = ashr i32 %1016, 1
  %1018 = sext i32 %1017 to i64
  %1019 = getelementptr inbounds i8, i8* %1015, i64 %1018
  %1020 = load i32, i32* @width, align 4
  %1021 = load i32, i32* %30, align 4
  %1022 = ashr i32 %1021, 1
  %1023 = mul nsw i32 %1020, %1022
  %1024 = sext i32 %1023 to i64
  %1025 = getelementptr inbounds i8, i8* %1019, i64 %1024
  %1026 = load i8*, i8** %63, align 8
  %1027 = load i32, i32* @width, align 4
  %1028 = load i32, i32* %29, align 4
  %1029 = and i32 %1028, 1
  %1030 = load i32, i32* %30, align 4
  %1031 = and i32 %1030, 1
  %1032 = call i32 @dist2(i8* %1025, i8* %1026, i32 %1027, i32 %1029, i32 %1031, i32 16)
  store i32 %1032, i32* %49, align 4
  br label %1101

1033:                                             ; preds = %1006
  %1034 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1035 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1034, i32 0, i32 0
  store i32 4, i32* %1035, align 8
  %1036 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1037 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1036, i32 0, i32 1
  store i32 1, i32* %1037, align 4
  %1038 = load i8*, i8** %16, align 8
  %1039 = load i32, i32* %61, align 4
  %1040 = icmp ne i32 %1039, 0
  br i1 %1040, label %1041, label %1043

1041:                                             ; preds = %1033
  %1042 = load i32, i32* @width, align 4
  br label %1044

1043:                                             ; preds = %1033
  br label %1044

1044:                                             ; preds = %1043, %1041
  %1045 = phi i32 [ %1042, %1041 ], [ 0, %1043 ]
  %1046 = sext i32 %1045 to i64
  %1047 = getelementptr inbounds i8, i8* %1038, i64 %1046
  %1048 = load i32, i32* %39, align 4
  %1049 = ashr i32 %1048, 1
  %1050 = sext i32 %1049 to i64
  %1051 = getelementptr inbounds i8, i8* %1047, i64 %1050
  %1052 = load i32, i32* @width, align 4
  %1053 = shl i32 %1052, 1
  %1054 = load i32, i32* %40, align 4
  %1055 = ashr i32 %1054, 1
  %1056 = mul nsw i32 %1053, %1055
  %1057 = sext i32 %1056 to i64
  %1058 = getelementptr inbounds i8, i8* %1051, i64 %1057
  %1059 = load i8*, i8** %63, align 8
  %1060 = load i32, i32* @width, align 4
  %1061 = shl i32 %1060, 1
  %1062 = load i32, i32* %39, align 4
  %1063 = and i32 %1062, 1
  %1064 = load i32, i32* %40, align 4
  %1065 = and i32 %1064, 1
  %1066 = call i32 @dist2(i8* %1058, i8* %1059, i32 %1061, i32 %1063, i32 %1065, i32 8)
  store i32 %1066, i32* %49, align 4
  %1067 = load i8*, i8** %16, align 8
  %1068 = load i32, i32* %62, align 4
  %1069 = icmp ne i32 %1068, 0
  br i1 %1069, label %1070, label %1072

1070:                                             ; preds = %1044
  %1071 = load i32, i32* @width, align 4
  br label %1073

1072:                                             ; preds = %1044
  br label %1073

1073:                                             ; preds = %1072, %1070
  %1074 = phi i32 [ %1071, %1070 ], [ 0, %1072 ]
  %1075 = sext i32 %1074 to i64
  %1076 = getelementptr inbounds i8, i8* %1067, i64 %1075
  %1077 = load i32, i32* %41, align 4
  %1078 = ashr i32 %1077, 1
  %1079 = sext i32 %1078 to i64
  %1080 = getelementptr inbounds i8, i8* %1076, i64 %1079
  %1081 = load i32, i32* @width, align 4
  %1082 = shl i32 %1081, 1
  %1083 = load i32, i32* %42, align 4
  %1084 = ashr i32 %1083, 1
  %1085 = mul nsw i32 %1082, %1084
  %1086 = sext i32 %1085 to i64
  %1087 = getelementptr inbounds i8, i8* %1080, i64 %1086
  %1088 = load i8*, i8** %63, align 8
  %1089 = load i32, i32* @width, align 4
  %1090 = sext i32 %1089 to i64
  %1091 = getelementptr inbounds i8, i8* %1088, i64 %1090
  %1092 = load i32, i32* @width, align 4
  %1093 = shl i32 %1092, 1
  %1094 = load i32, i32* %41, align 4
  %1095 = and i32 %1094, 1
  %1096 = load i32, i32* %42, align 4
  %1097 = and i32 %1096, 1
  %1098 = call i32 @dist2(i8* %1087, i8* %1091, i32 %1093, i32 %1095, i32 %1097, i32 8)
  %1099 = load i32, i32* %49, align 4
  %1100 = add nsw i32 %1099, %1098
  store i32 %1100, i32* %49, align 4
  br label %1101

1101:                                             ; preds = %1073, %1010
  br label %1102

1102:                                             ; preds = %1101, %978
  br label %1103

1103:                                             ; preds = %1102, %907
  br label %1104

1104:                                             ; preds = %1103, %867
  br label %1105

1105:                                             ; preds = %1104, %723
  br label %1106

1106:                                             ; preds = %1105, %536
  %1107 = load i32, i32* %49, align 4
  %1108 = load i32, i32* %43, align 4
  %1109 = icmp sgt i32 %1107, %1108
  br i1 %1109, label %1110, label %1116

1110:                                             ; preds = %1106
  %1111 = load i32, i32* %49, align 4
  %1112 = icmp sge i32 %1111, 2304
  br i1 %1112, label %1113, label %1116

1113:                                             ; preds = %1110
  %1114 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1115 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1114, i32 0, i32 0
  store i32 1, i32* %1115, align 8
  br label %1257

1116:                                             ; preds = %1110, %1106
  %1117 = load i32, i32* %49, align 4
  store i32 %1117, i32* %43, align 4
  %1118 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1119 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1118, i32 0, i32 1
  %1120 = load i32, i32* %1119, align 4
  %1121 = icmp eq i32 %1120, 2
  br i1 %1121, label %1122, label %1159

1122:                                             ; preds = %1116
  %1123 = load i32, i32* %27, align 4
  %1124 = load i32, i32* %18, align 4
  %1125 = shl i32 %1124, 1
  %1126 = sub nsw i32 %1123, %1125
  %1127 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1128 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1127, i32 0, i32 6
  %1129 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1128, i64 0, i64 0
  %1130 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1129, i64 0, i64 0
  %1131 = getelementptr inbounds [2 x i32], [2 x i32]* %1130, i64 0, i64 0
  store i32 %1126, i32* %1131, align 8
  %1132 = load i32, i32* %28, align 4
  %1133 = load i32, i32* %19, align 4
  %1134 = shl i32 %1133, 1
  %1135 = sub nsw i32 %1132, %1134
  %1136 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1137 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1136, i32 0, i32 6
  %1138 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1137, i64 0, i64 0
  %1139 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1138, i64 0, i64 0
  %1140 = getelementptr inbounds [2 x i32], [2 x i32]* %1139, i64 0, i64 1
  store i32 %1135, i32* %1140, align 4
  %1141 = load i32, i32* %29, align 4
  %1142 = load i32, i32* %18, align 4
  %1143 = shl i32 %1142, 1
  %1144 = sub nsw i32 %1141, %1143
  %1145 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1146 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1145, i32 0, i32 6
  %1147 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1146, i64 0, i64 0
  %1148 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1147, i64 0, i64 1
  %1149 = getelementptr inbounds [2 x i32], [2 x i32]* %1148, i64 0, i64 0
  store i32 %1144, i32* %1149, align 8
  %1150 = load i32, i32* %30, align 4
  %1151 = load i32, i32* %19, align 4
  %1152 = shl i32 %1151, 1
  %1153 = sub nsw i32 %1150, %1152
  %1154 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1155 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1154, i32 0, i32 6
  %1156 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1155, i64 0, i64 0
  %1157 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1156, i64 0, i64 1
  %1158 = getelementptr inbounds [2 x i32], [2 x i32]* %1157, i64 0, i64 1
  store i32 %1153, i32* %1158, align 4
  br label %1256

1159:                                             ; preds = %1116
  %1160 = load i32, i32* %35, align 4
  %1161 = load i32, i32* %18, align 4
  %1162 = shl i32 %1161, 1
  %1163 = sub nsw i32 %1160, %1162
  %1164 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1165 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1164, i32 0, i32 6
  %1166 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1165, i64 0, i64 0
  %1167 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1166, i64 0, i64 0
  %1168 = getelementptr inbounds [2 x i32], [2 x i32]* %1167, i64 0, i64 0
  store i32 %1163, i32* %1168, align 8
  %1169 = load i32, i32* %36, align 4
  %1170 = shl i32 %1169, 1
  %1171 = load i32, i32* %19, align 4
  %1172 = shl i32 %1171, 1
  %1173 = sub nsw i32 %1170, %1172
  %1174 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1175 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1174, i32 0, i32 6
  %1176 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1175, i64 0, i64 0
  %1177 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1176, i64 0, i64 0
  %1178 = getelementptr inbounds [2 x i32], [2 x i32]* %1177, i64 0, i64 1
  store i32 %1173, i32* %1178, align 4
  %1179 = load i32, i32* %37, align 4
  %1180 = load i32, i32* %18, align 4
  %1181 = shl i32 %1180, 1
  %1182 = sub nsw i32 %1179, %1181
  %1183 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1184 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1183, i32 0, i32 6
  %1185 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1184, i64 0, i64 1
  %1186 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1185, i64 0, i64 0
  %1187 = getelementptr inbounds [2 x i32], [2 x i32]* %1186, i64 0, i64 0
  store i32 %1182, i32* %1187, align 8
  %1188 = load i32, i32* %38, align 4
  %1189 = shl i32 %1188, 1
  %1190 = load i32, i32* %19, align 4
  %1191 = shl i32 %1190, 1
  %1192 = sub nsw i32 %1189, %1191
  %1193 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1194 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1193, i32 0, i32 6
  %1195 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1194, i64 0, i64 1
  %1196 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1195, i64 0, i64 0
  %1197 = getelementptr inbounds [2 x i32], [2 x i32]* %1196, i64 0, i64 1
  store i32 %1192, i32* %1197, align 4
  %1198 = load i32, i32* %59, align 4
  %1199 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1200 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1199, i32 0, i32 7
  %1201 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1200, i64 0, i64 0
  %1202 = getelementptr inbounds [2 x i32], [2 x i32]* %1201, i64 0, i64 0
  store i32 %1198, i32* %1202, align 8
  %1203 = load i32, i32* %60, align 4
  %1204 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1205 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1204, i32 0, i32 7
  %1206 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1205, i64 0, i64 1
  %1207 = getelementptr inbounds [2 x i32], [2 x i32]* %1206, i64 0, i64 0
  store i32 %1203, i32* %1207, align 8
  %1208 = load i32, i32* %39, align 4
  %1209 = load i32, i32* %18, align 4
  %1210 = shl i32 %1209, 1
  %1211 = sub nsw i32 %1208, %1210
  %1212 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1213 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1212, i32 0, i32 6
  %1214 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1213, i64 0, i64 0
  %1215 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1214, i64 0, i64 1
  %1216 = getelementptr inbounds [2 x i32], [2 x i32]* %1215, i64 0, i64 0
  store i32 %1211, i32* %1216, align 8
  %1217 = load i32, i32* %40, align 4
  %1218 = shl i32 %1217, 1
  %1219 = load i32, i32* %19, align 4
  %1220 = shl i32 %1219, 1
  %1221 = sub nsw i32 %1218, %1220
  %1222 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1223 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1222, i32 0, i32 6
  %1224 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1223, i64 0, i64 0
  %1225 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1224, i64 0, i64 1
  %1226 = getelementptr inbounds [2 x i32], [2 x i32]* %1225, i64 0, i64 1
  store i32 %1221, i32* %1226, align 4
  %1227 = load i32, i32* %41, align 4
  %1228 = load i32, i32* %18, align 4
  %1229 = shl i32 %1228, 1
  %1230 = sub nsw i32 %1227, %1229
  %1231 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1232 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1231, i32 0, i32 6
  %1233 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1232, i64 0, i64 1
  %1234 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1233, i64 0, i64 1
  %1235 = getelementptr inbounds [2 x i32], [2 x i32]* %1234, i64 0, i64 0
  store i32 %1230, i32* %1235, align 8
  %1236 = load i32, i32* %42, align 4
  %1237 = shl i32 %1236, 1
  %1238 = load i32, i32* %19, align 4
  %1239 = shl i32 %1238, 1
  %1240 = sub nsw i32 %1237, %1239
  %1241 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1242 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1241, i32 0, i32 6
  %1243 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1242, i64 0, i64 1
  %1244 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1243, i64 0, i64 1
  %1245 = getelementptr inbounds [2 x i32], [2 x i32]* %1244, i64 0, i64 1
  store i32 %1240, i32* %1245, align 4
  %1246 = load i32, i32* %61, align 4
  %1247 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1248 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1247, i32 0, i32 7
  %1249 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1248, i64 0, i64 0
  %1250 = getelementptr inbounds [2 x i32], [2 x i32]* %1249, i64 0, i64 1
  store i32 %1246, i32* %1250, align 4
  %1251 = load i32, i32* %62, align 4
  %1252 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1253 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1252, i32 0, i32 7
  %1254 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1253, i64 0, i64 1
  %1255 = getelementptr inbounds [2 x i32], [2 x i32]* %1254, i64 0, i64 1
  store i32 %1251, i32* %1255, align 4
  br label %1256

1256:                                             ; preds = %1159, %1122
  br label %1257

1257:                                             ; preds = %1256, %1113
  br label %1258

1258:                                             ; preds = %1257, %416
  br label %1259

1259:                                             ; preds = %1258, %86
  %1260 = load i32, i32* %43, align 4
  %1261 = load %struct.mbinfo*, %struct.mbinfo** %24, align 8
  %1262 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1261, i32 0, i32 10
  store i32 %1260, i32* %1262, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @field_ME(i8* %0, i8* %1, i8* %2, i8* %3, i8* %4, i8* %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, i32 %11, %struct.mbinfo* %12, i32 %13, i32 %14) #0 {
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca %struct.mbinfo*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i8*, align 8
  %33 = alloca i8*, align 8
  %34 = alloca i8*, align 8
  %35 = alloca i8*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  %61 = alloca i32, align 4
  %62 = alloca i32, align 4
  %63 = alloca i32, align 4
  %64 = alloca i32, align 4
  %65 = alloca i32, align 4
  %66 = alloca i32, align 4
  %67 = alloca i32, align 4
  %68 = alloca i32, align 4
  %69 = alloca i32, align 4
  %70 = alloca i32, align 4
  %71 = alloca i32, align 4
  %72 = alloca i32, align 4
  %73 = alloca i32, align 4
  %74 = alloca i32, align 4
  %75 = alloca i32, align 4
  %76 = alloca i32, align 4
  %77 = alloca i32, align 4
  %78 = alloca i32, align 4
  %79 = alloca i32, align 4
  %80 = alloca i32, align 4
  %81 = alloca i32, align 4
  %82 = alloca i32, align 4
  store i8* %0, i8** %16, align 8
  store i8* %1, i8** %17, align 8
  store i8* %2, i8** %18, align 8
  store i8* %3, i8** %19, align 8
  store i8* %4, i8** %20, align 8
  store i8* %5, i8** %21, align 8
  store i32 %6, i32* %22, align 4
  store i32 %7, i32* %23, align 4
  store i32 %8, i32* %24, align 4
  store i32 %9, i32* %25, align 4
  store i32 %10, i32* %26, align 4
  store i32 %11, i32* %27, align 4
  store %struct.mbinfo* %12, %struct.mbinfo** %28, align 8
  store i32 %13, i32* %29, align 4
  store i32 %14, i32* %30, align 4
  %83 = load i32, i32* @width, align 4
  %84 = shl i32 %83, 1
  store i32 %84, i32* %31, align 4
  %85 = load i8*, i8** %20, align 8
  %86 = load i32, i32* %22, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %85, i64 %87
  %89 = load i32, i32* %31, align 4
  %90 = load i32, i32* %23, align 4
  %91 = mul nsw i32 %89, %90
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %88, i64 %92
  store i8* %93, i8** %32, align 8
  %94 = load i32, i32* @pict_struct, align 4
  %95 = icmp eq i32 %94, 2
  br i1 %95, label %96, label %101

96:                                               ; preds = %15
  %97 = load i32, i32* @width, align 4
  %98 = load i8*, i8** %32, align 8
  %99 = sext i32 %97 to i64
  %100 = getelementptr inbounds i8, i8* %98, i64 %99
  store i8* %100, i8** %32, align 8
  br label %101

101:                                              ; preds = %96, %15
  %102 = load i8*, i8** %32, align 8
  %103 = load i32, i32* %31, align 4
  %104 = call i32 @variance(i8* %102, i32 %103)
  store i32 %104, i32* %37, align 4
  %105 = load i32, i32* @pict_type, align 4
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %110

107:                                              ; preds = %101
  %108 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %109 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %108, i32 0, i32 0
  store i32 1, i32* %109, align 8
  br label %1238

110:                                              ; preds = %101
  %111 = load i32, i32* @pict_type, align 4
  %112 = icmp eq i32 %111, 2
  br i1 %112, label %113, label %461

113:                                              ; preds = %110
  %114 = load i8*, i8** %16, align 8
  store i8* %114, i8** %33, align 8
  %115 = load i8*, i8** %18, align 8
  store i8* %115, i8** %34, align 8
  %116 = load i8*, i8** %16, align 8
  %117 = load i32, i32* @width, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* %116, i64 %118
  store i8* %119, i8** %35, align 8
  %120 = load i8*, i8** %18, align 8
  %121 = load i32, i32* @width, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %120, i64 %122
  store i8* %123, i8** %36, align 8
  %124 = load i32, i32* %29, align 4
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %126, label %142

126:                                              ; preds = %113
  %127 = load i32, i32* @pict_struct, align 4
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %138

129:                                              ; preds = %126
  %130 = load i8*, i8** %20, align 8
  %131 = load i32, i32* @width, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %130, i64 %132
  store i8* %133, i8** %35, align 8
  %134 = load i8*, i8** %21, align 8
  %135 = load i32, i32* @width, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* %134, i64 %136
  store i8* %137, i8** %36, align 8
  br label %141

138:                                              ; preds = %126
  %139 = load i8*, i8** %20, align 8
  store i8* %139, i8** %33, align 8
  %140 = load i8*, i8** %21, align 8
  store i8* %140, i8** %34, align 8
  br label %141

141:                                              ; preds = %138, %129
  br label %142

142:                                              ; preds = %141, %113
  %143 = load i8*, i8** %33, align 8
  %144 = load i8*, i8** %34, align 8
  %145 = load i8*, i8** %35, align 8
  %146 = load i8*, i8** %36, align 8
  %147 = load i8*, i8** %32, align 8
  %148 = load i32, i32* %22, align 4
  %149 = load i32, i32* %23, align 4
  %150 = load i32, i32* %24, align 4
  %151 = load i32, i32* %25, align 4
  %152 = load i32, i32* %30, align 4
  call void @field_estimate(i8* %143, i8* %144, i8* %145, i8* %146, i8* %147, i32 %148, i32 %149, i32 %150, i32 %151, i32 %152, i32* %43, i32* %44, i32* %45, i32* %46, i32* %47, i32* %48, i32* %49, i32* %50, i32* %51, i32* %52, i32* %53, i32* %76, i32* %77, i32* %78)
  %153 = load i32, i32* @M, align 4
  %154 = icmp eq i32 %153, 1
  br i1 %154, label %155, label %166

155:                                              ; preds = %142
  %156 = load i32, i32* %30, align 4
  %157 = icmp ne i32 %156, 0
  br i1 %157, label %166, label %158

158:                                              ; preds = %155
  %159 = load i8*, i8** %34, align 8
  %160 = load i8*, i8** %36, align 8
  %161 = load i8*, i8** %32, align 8
  %162 = load i32, i32* %22, align 4
  %163 = load i32, i32* %23, align 4
  %164 = load i32, i32* %76, align 4
  %165 = load i32, i32* %77, align 4
  call void @dpfield_estimate(i8* %159, i8* %160, i8* %161, i32 %162, i32 %163, i32 %164, i32 %165, i32* %79, i32* %80, i32* %82, i32* %81)
  br label %166

166:                                              ; preds = %158, %155, %142
  %167 = load i32, i32* @M, align 4
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %169, label %185

169:                                              ; preds = %166
  %170 = load i32, i32* %30, align 4
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %185, label %172

172:                                              ; preds = %169
  %173 = load i32, i32* %82, align 4
  %174 = load i32, i32* %50, align 4
  %175 = icmp slt i32 %173, %174
  br i1 %175, label %176, label %185

176:                                              ; preds = %172
  %177 = load i32, i32* %82, align 4
  %178 = load i32, i32* %49, align 4
  %179 = icmp slt i32 %177, %178
  br i1 %179, label %180, label %185

180:                                              ; preds = %176
  %181 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %182 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %181, i32 0, i32 1
  store i32 3, i32* %182, align 4
  %183 = load i32, i32* %82, align 4
  store i32 %183, i32* %40, align 4
  %184 = load i32, i32* %81, align 4
  store i32 %184, i32* %38, align 4
  br label %277

185:                                              ; preds = %176, %172, %169, %166
  %186 = load i32, i32* %50, align 4
  %187 = load i32, i32* %49, align 4
  %188 = icmp slt i32 %186, %187
  br i1 %188, label %189, label %248

189:                                              ; preds = %185
  %190 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %191 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %190, i32 0, i32 1
  store i32 2, i32* %191, align 4
  %192 = load i32, i32* %52, align 4
  %193 = icmp ne i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %189
  %195 = load i8*, i8** %36, align 8
  br label %198

196:                                              ; preds = %189
  %197 = load i8*, i8** %34, align 8
  br label %198

198:                                              ; preds = %196, %194
  %199 = phi i8* [ %195, %194 ], [ %197, %196 ]
  %200 = load i32, i32* %45, align 4
  %201 = ashr i32 %200, 1
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds i8, i8* %199, i64 %202
  %204 = load i32, i32* %31, align 4
  %205 = load i32, i32* %46, align 4
  %206 = ashr i32 %205, 1
  %207 = mul nsw i32 %204, %206
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds i8, i8* %203, i64 %208
  %210 = load i8*, i8** %32, align 8
  %211 = load i32, i32* %31, align 4
  %212 = load i32, i32* %45, align 4
  %213 = and i32 %212, 1
  %214 = load i32, i32* %46, align 4
  %215 = and i32 %214, 1
  %216 = call i32 @dist2(i8* %209, i8* %210, i32 %211, i32 %213, i32 %215, i32 8)
  store i32 %216, i32* %38, align 4
  %217 = load i32, i32* %53, align 4
  %218 = icmp ne i32 %217, 0
  br i1 %218, label %219, label %221

219:                                              ; preds = %198
  %220 = load i8*, i8** %36, align 8
  br label %223

221:                                              ; preds = %198
  %222 = load i8*, i8** %34, align 8
  br label %223

223:                                              ; preds = %221, %219
  %224 = phi i8* [ %220, %219 ], [ %222, %221 ]
  %225 = load i32, i32* %47, align 4
  %226 = ashr i32 %225, 1
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds i8, i8* %224, i64 %227
  %229 = load i32, i32* %31, align 4
  %230 = load i32, i32* %48, align 4
  %231 = ashr i32 %230, 1
  %232 = mul nsw i32 %229, %231
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds i8, i8* %228, i64 %233
  %235 = load i8*, i8** %32, align 8
  %236 = load i32, i32* %31, align 4
  %237 = mul nsw i32 8, %236
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds i8, i8* %235, i64 %238
  %240 = load i32, i32* %31, align 4
  %241 = load i32, i32* %47, align 4
  %242 = and i32 %241, 1
  %243 = load i32, i32* %48, align 4
  %244 = and i32 %243, 1
  %245 = call i32 @dist2(i8* %234, i8* %239, i32 %240, i32 %242, i32 %244, i32 8)
  %246 = load i32, i32* %38, align 4
  %247 = add nsw i32 %246, %245
  store i32 %247, i32* %38, align 4
  br label %276

248:                                              ; preds = %185
  %249 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %250 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %249, i32 0, i32 1
  store i32 1, i32* %250, align 4
  %251 = load i32, i32* %51, align 4
  %252 = icmp ne i32 %251, 0
  br i1 %252, label %253, label %255

253:                                              ; preds = %248
  %254 = load i8*, i8** %36, align 8
  br label %257

255:                                              ; preds = %248
  %256 = load i8*, i8** %34, align 8
  br label %257

257:                                              ; preds = %255, %253
  %258 = phi i8* [ %254, %253 ], [ %256, %255 ]
  %259 = load i32, i32* %43, align 4
  %260 = ashr i32 %259, 1
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds i8, i8* %258, i64 %261
  %263 = load i32, i32* %31, align 4
  %264 = load i32, i32* %44, align 4
  %265 = ashr i32 %264, 1
  %266 = mul nsw i32 %263, %265
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds i8, i8* %262, i64 %267
  %269 = load i8*, i8** %32, align 8
  %270 = load i32, i32* %31, align 4
  %271 = load i32, i32* %43, align 4
  %272 = and i32 %271, 1
  %273 = load i32, i32* %44, align 4
  %274 = and i32 %273, 1
  %275 = call i32 @dist2(i8* %268, i8* %269, i32 %270, i32 %272, i32 %274, i32 16)
  store i32 %275, i32* %38, align 4
  br label %276

276:                                              ; preds = %257, %223
  br label %277

277:                                              ; preds = %276, %180
  %278 = load i32, i32* %38, align 4
  %279 = load i32, i32* %37, align 4
  %280 = icmp sgt i32 %278, %279
  br i1 %280, label %281, label %287

281:                                              ; preds = %277
  %282 = load i32, i32* %38, align 4
  %283 = icmp sge i32 %282, 2304
  br i1 %283, label %284, label %287

284:                                              ; preds = %281
  %285 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %286 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %285, i32 0, i32 0
  store i32 1, i32* %286, align 8
  br label %460

287:                                              ; preds = %281, %277
  %288 = load i32, i32* %30, align 4
  %289 = icmp ne i32 %288, 0
  br i1 %289, label %310, label %290

290:                                              ; preds = %287
  %291 = load i32, i32* @pict_struct, align 4
  %292 = icmp eq i32 %291, 2
  br i1 %292, label %293, label %295

293:                                              ; preds = %290
  %294 = load i8*, i8** %36, align 8
  br label %297

295:                                              ; preds = %290
  %296 = load i8*, i8** %34, align 8
  br label %297

297:                                              ; preds = %295, %293
  %298 = phi i8* [ %294, %293 ], [ %296, %295 ]
  %299 = load i32, i32* %22, align 4
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds i8, i8* %298, i64 %300
  %302 = load i32, i32* %31, align 4
  %303 = load i32, i32* %23, align 4
  %304 = mul nsw i32 %302, %303
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds i8, i8* %301, i64 %305
  %307 = load i8*, i8** %32, align 8
  %308 = load i32, i32* %31, align 4
  %309 = call i32 @dist2(i8* %306, i8* %307, i32 %308, i32 0, i32 0, i32 16)
  store i32 %309, i32* %39, align 4
  br label %310

310:                                              ; preds = %297, %287
  %311 = load i32, i32* %30, align 4
  %312 = icmp ne i32 %311, 0
  br i1 %312, label %322, label %313

313:                                              ; preds = %310
  %314 = load i32, i32* %39, align 4
  %315 = mul nsw i32 4, %314
  %316 = load i32, i32* %38, align 4
  %317 = mul nsw i32 5, %316
  %318 = icmp sgt i32 %315, %317
  br i1 %318, label %319, label %436

319:                                              ; preds = %313
  %320 = load i32, i32* %39, align 4
  %321 = icmp sge i32 %320, 2304
  br i1 %321, label %322, label %436

322:                                              ; preds = %319, %310
  %323 = load i32, i32* %38, align 4
  store i32 %323, i32* %37, align 4
  %324 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %325 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %324, i32 0, i32 0
  store i32 8, i32* %325, align 8
  %326 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %327 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %326, i32 0, i32 1
  %328 = load i32, i32* %327, align 4
  %329 = icmp eq i32 %328, 1
  br i1 %329, label %330, label %354

330:                                              ; preds = %322
  %331 = load i32, i32* %43, align 4
  %332 = load i32, i32* %22, align 4
  %333 = shl i32 %332, 1
  %334 = sub nsw i32 %331, %333
  %335 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %336 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %335, i32 0, i32 6
  %337 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %336, i64 0, i64 0
  %338 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %337, i64 0, i64 0
  %339 = getelementptr inbounds [2 x i32], [2 x i32]* %338, i64 0, i64 0
  store i32 %334, i32* %339, align 8
  %340 = load i32, i32* %44, align 4
  %341 = load i32, i32* %23, align 4
  %342 = shl i32 %341, 1
  %343 = sub nsw i32 %340, %342
  %344 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %345 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %344, i32 0, i32 6
  %346 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %345, i64 0, i64 0
  %347 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %346, i64 0, i64 0
  %348 = getelementptr inbounds [2 x i32], [2 x i32]* %347, i64 0, i64 1
  store i32 %343, i32* %348, align 4
  %349 = load i32, i32* %51, align 4
  %350 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %351 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %350, i32 0, i32 7
  %352 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %351, i64 0, i64 0
  %353 = getelementptr inbounds [2 x i32], [2 x i32]* %352, i64 0, i64 0
  store i32 %349, i32* %353, align 8
  br label %435

354:                                              ; preds = %322
  %355 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %356 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %355, i32 0, i32 1
  %357 = load i32, i32* %356, align 4
  %358 = icmp eq i32 %357, 3
  br i1 %358, label %359, label %386

359:                                              ; preds = %354
  %360 = load i32, i32* %76, align 4
  %361 = load i32, i32* %22, align 4
  %362 = shl i32 %361, 1
  %363 = sub nsw i32 %360, %362
  %364 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %365 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %364, i32 0, i32 6
  %366 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %365, i64 0, i64 0
  %367 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %366, i64 0, i64 0
  %368 = getelementptr inbounds [2 x i32], [2 x i32]* %367, i64 0, i64 0
  store i32 %363, i32* %368, align 8
  %369 = load i32, i32* %77, align 4
  %370 = load i32, i32* %23, align 4
  %371 = shl i32 %370, 1
  %372 = sub nsw i32 %369, %371
  %373 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %374 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %373, i32 0, i32 6
  %375 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %374, i64 0, i64 0
  %376 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %375, i64 0, i64 0
  %377 = getelementptr inbounds [2 x i32], [2 x i32]* %376, i64 0, i64 1
  store i32 %372, i32* %377, align 4
  %378 = load i32, i32* %79, align 4
  %379 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %380 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %379, i32 0, i32 8
  %381 = getelementptr inbounds [2 x i32], [2 x i32]* %380, i64 0, i64 0
  store i32 %378, i32* %381, align 8
  %382 = load i32, i32* %80, align 4
  %383 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %384 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %383, i32 0, i32 8
  %385 = getelementptr inbounds [2 x i32], [2 x i32]* %384, i64 0, i64 1
  store i32 %382, i32* %385, align 4
  br label %434

386:                                              ; preds = %354
  %387 = load i32, i32* %45, align 4
  %388 = load i32, i32* %22, align 4
  %389 = shl i32 %388, 1
  %390 = sub nsw i32 %387, %389
  %391 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %392 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %391, i32 0, i32 6
  %393 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %392, i64 0, i64 0
  %394 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %393, i64 0, i64 0
  %395 = getelementptr inbounds [2 x i32], [2 x i32]* %394, i64 0, i64 0
  store i32 %390, i32* %395, align 8
  %396 = load i32, i32* %46, align 4
  %397 = load i32, i32* %23, align 4
  %398 = shl i32 %397, 1
  %399 = sub nsw i32 %396, %398
  %400 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %401 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %400, i32 0, i32 6
  %402 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %401, i64 0, i64 0
  %403 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %402, i64 0, i64 0
  %404 = getelementptr inbounds [2 x i32], [2 x i32]* %403, i64 0, i64 1
  store i32 %399, i32* %404, align 4
  %405 = load i32, i32* %47, align 4
  %406 = load i32, i32* %22, align 4
  %407 = shl i32 %406, 1
  %408 = sub nsw i32 %405, %407
  %409 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %410 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %409, i32 0, i32 6
  %411 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %410, i64 0, i64 1
  %412 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %411, i64 0, i64 0
  %413 = getelementptr inbounds [2 x i32], [2 x i32]* %412, i64 0, i64 0
  store i32 %408, i32* %413, align 8
  %414 = load i32, i32* %48, align 4
  %415 = load i32, i32* %23, align 4
  %416 = add nsw i32 %415, 8
  %417 = shl i32 %416, 1
  %418 = sub nsw i32 %414, %417
  %419 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %420 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %419, i32 0, i32 6
  %421 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %420, i64 0, i64 1
  %422 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %421, i64 0, i64 0
  %423 = getelementptr inbounds [2 x i32], [2 x i32]* %422, i64 0, i64 1
  store i32 %418, i32* %423, align 4
  %424 = load i32, i32* %52, align 4
  %425 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %426 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %425, i32 0, i32 7
  %427 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %426, i64 0, i64 0
  %428 = getelementptr inbounds [2 x i32], [2 x i32]* %427, i64 0, i64 0
  store i32 %424, i32* %428, align 8
  %429 = load i32, i32* %53, align 4
  %430 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %431 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %430, i32 0, i32 7
  %432 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %431, i64 0, i64 1
  %433 = getelementptr inbounds [2 x i32], [2 x i32]* %432, i64 0, i64 0
  store i32 %429, i32* %433, align 8
  br label %434

434:                                              ; preds = %386, %359
  br label %435

435:                                              ; preds = %434, %330
  br label %459

436:                                              ; preds = %319, %313
  %437 = load i32, i32* %39, align 4
  store i32 %437, i32* %37, align 4
  %438 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %439 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %438, i32 0, i32 0
  store i32 0, i32* %439, align 8
  %440 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %441 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %440, i32 0, i32 1
  store i32 1, i32* %441, align 4
  %442 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %443 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %442, i32 0, i32 6
  %444 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %443, i64 0, i64 0
  %445 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %444, i64 0, i64 0
  %446 = getelementptr inbounds [2 x i32], [2 x i32]* %445, i64 0, i64 0
  store i32 0, i32* %446, align 8
  %447 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %448 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %447, i32 0, i32 6
  %449 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %448, i64 0, i64 0
  %450 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %449, i64 0, i64 0
  %451 = getelementptr inbounds [2 x i32], [2 x i32]* %450, i64 0, i64 1
  store i32 0, i32* %451, align 4
  %452 = load i32, i32* @pict_struct, align 4
  %453 = icmp eq i32 %452, 2
  %454 = zext i1 %453 to i32
  %455 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %456 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %455, i32 0, i32 7
  %457 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %456, i64 0, i64 0
  %458 = getelementptr inbounds [2 x i32], [2 x i32]* %457, i64 0, i64 0
  store i32 %454, i32* %458, align 8
  br label %459

459:                                              ; preds = %436, %435
  br label %460

460:                                              ; preds = %459, %284
  br label %1237

461:                                              ; preds = %110
  %462 = load i8*, i8** %16, align 8
  %463 = load i8*, i8** %18, align 8
  %464 = load i8*, i8** %16, align 8
  %465 = load i32, i32* @width, align 4
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds i8, i8* %464, i64 %466
  %468 = load i8*, i8** %18, align 8
  %469 = load i32, i32* @width, align 4
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds i8, i8* %468, i64 %470
  %472 = load i8*, i8** %32, align 8
  %473 = load i32, i32* %22, align 4
  %474 = load i32, i32* %23, align 4
  %475 = load i32, i32* %24, align 4
  %476 = load i32, i32* %25, align 4
  call void @field_estimate(i8* %462, i8* %463, i8* %467, i8* %471, i8* %472, i32 %473, i32 %474, i32 %475, i32 %476, i32 0, i32* %54, i32* %55, i32* %56, i32* %57, i32* %58, i32* %59, i32* %60, i32* %61, i32* %62, i32* %63, i32* %64, i32* %76, i32* %77, i32* %78)
  %477 = load i8*, i8** %17, align 8
  %478 = load i8*, i8** %19, align 8
  %479 = load i8*, i8** %17, align 8
  %480 = load i32, i32* @width, align 4
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds i8, i8* %479, i64 %481
  %483 = load i8*, i8** %19, align 8
  %484 = load i32, i32* @width, align 4
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds i8, i8* %483, i64 %485
  %487 = load i8*, i8** %32, align 8
  %488 = load i32, i32* %22, align 4
  %489 = load i32, i32* %23, align 4
  %490 = load i32, i32* %26, align 4
  %491 = load i32, i32* %27, align 4
  call void @field_estimate(i8* %477, i8* %478, i8* %482, i8* %486, i8* %487, i32 %488, i32 %489, i32 %490, i32 %491, i32 0, i32* %65, i32* %66, i32* %67, i32* %68, i32* %69, i32* %70, i32* %71, i32* %72, i32* %73, i32* %74, i32* %75, i32* %76, i32* %77, i32* %78)
  %492 = load i8*, i8** %18, align 8
  %493 = load i32, i32* %62, align 4
  %494 = icmp ne i32 %493, 0
  br i1 %494, label %495, label %497

495:                                              ; preds = %461
  %496 = load i32, i32* @width, align 4
  br label %498

497:                                              ; preds = %461
  br label %498

498:                                              ; preds = %497, %495
  %499 = phi i32 [ %496, %495 ], [ 0, %497 ]
  %500 = sext i32 %499 to i64
  %501 = getelementptr inbounds i8, i8* %492, i64 %500
  %502 = load i32, i32* %54, align 4
  %503 = ashr i32 %502, 1
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds i8, i8* %501, i64 %504
  %506 = load i32, i32* %31, align 4
  %507 = load i32, i32* %55, align 4
  %508 = ashr i32 %507, 1
  %509 = mul nsw i32 %506, %508
  %510 = sext i32 %509 to i64
  %511 = getelementptr inbounds i8, i8* %505, i64 %510
  %512 = load i8*, i8** %19, align 8
  %513 = load i32, i32* %73, align 4
  %514 = icmp ne i32 %513, 0
  br i1 %514, label %515, label %517

515:                                              ; preds = %498
  %516 = load i32, i32* @width, align 4
  br label %518

517:                                              ; preds = %498
  br label %518

518:                                              ; preds = %517, %515
  %519 = phi i32 [ %516, %515 ], [ 0, %517 ]
  %520 = sext i32 %519 to i64
  %521 = getelementptr inbounds i8, i8* %512, i64 %520
  %522 = load i32, i32* %65, align 4
  %523 = ashr i32 %522, 1
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds i8, i8* %521, i64 %524
  %526 = load i32, i32* %31, align 4
  %527 = load i32, i32* %66, align 4
  %528 = ashr i32 %527, 1
  %529 = mul nsw i32 %526, %528
  %530 = sext i32 %529 to i64
  %531 = getelementptr inbounds i8, i8* %525, i64 %530
  %532 = load i8*, i8** %32, align 8
  %533 = load i32, i32* %31, align 4
  %534 = load i32, i32* %54, align 4
  %535 = and i32 %534, 1
  %536 = load i32, i32* %55, align 4
  %537 = and i32 %536, 1
  %538 = load i32, i32* %65, align 4
  %539 = and i32 %538, 1
  %540 = load i32, i32* %66, align 4
  %541 = and i32 %540, 1
  %542 = call i32 @bdist1(i8* %511, i8* %531, i8* %532, i32 %533, i32 %535, i32 %537, i32 %539, i32 %541, i32 16)
  store i32 %542, i32* %41, align 4
  %543 = load i8*, i8** %18, align 8
  %544 = load i32, i32* %63, align 4
  %545 = icmp ne i32 %544, 0
  br i1 %545, label %546, label %548

546:                                              ; preds = %518
  %547 = load i32, i32* @width, align 4
  br label %549

548:                                              ; preds = %518
  br label %549

549:                                              ; preds = %548, %546
  %550 = phi i32 [ %547, %546 ], [ 0, %548 ]
  %551 = sext i32 %550 to i64
  %552 = getelementptr inbounds i8, i8* %543, i64 %551
  %553 = load i32, i32* %56, align 4
  %554 = ashr i32 %553, 1
  %555 = sext i32 %554 to i64
  %556 = getelementptr inbounds i8, i8* %552, i64 %555
  %557 = load i32, i32* %31, align 4
  %558 = load i32, i32* %57, align 4
  %559 = ashr i32 %558, 1
  %560 = mul nsw i32 %557, %559
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds i8, i8* %556, i64 %561
  %563 = load i8*, i8** %19, align 8
  %564 = load i32, i32* %74, align 4
  %565 = icmp ne i32 %564, 0
  br i1 %565, label %566, label %568

566:                                              ; preds = %549
  %567 = load i32, i32* @width, align 4
  br label %569

568:                                              ; preds = %549
  br label %569

569:                                              ; preds = %568, %566
  %570 = phi i32 [ %567, %566 ], [ 0, %568 ]
  %571 = sext i32 %570 to i64
  %572 = getelementptr inbounds i8, i8* %563, i64 %571
  %573 = load i32, i32* %67, align 4
  %574 = ashr i32 %573, 1
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds i8, i8* %572, i64 %575
  %577 = load i32, i32* %31, align 4
  %578 = load i32, i32* %68, align 4
  %579 = ashr i32 %578, 1
  %580 = mul nsw i32 %577, %579
  %581 = sext i32 %580 to i64
  %582 = getelementptr inbounds i8, i8* %576, i64 %581
  %583 = load i8*, i8** %32, align 8
  %584 = load i32, i32* %31, align 4
  %585 = load i32, i32* %56, align 4
  %586 = and i32 %585, 1
  %587 = load i32, i32* %57, align 4
  %588 = and i32 %587, 1
  %589 = load i32, i32* %67, align 4
  %590 = and i32 %589, 1
  %591 = load i32, i32* %68, align 4
  %592 = and i32 %591, 1
  %593 = call i32 @bdist1(i8* %562, i8* %582, i8* %583, i32 %584, i32 %586, i32 %588, i32 %590, i32 %592, i32 8)
  store i32 %593, i32* %42, align 4
  %594 = load i8*, i8** %18, align 8
  %595 = load i32, i32* %64, align 4
  %596 = icmp ne i32 %595, 0
  br i1 %596, label %597, label %599

597:                                              ; preds = %569
  %598 = load i32, i32* @width, align 4
  br label %600

599:                                              ; preds = %569
  br label %600

600:                                              ; preds = %599, %597
  %601 = phi i32 [ %598, %597 ], [ 0, %599 ]
  %602 = sext i32 %601 to i64
  %603 = getelementptr inbounds i8, i8* %594, i64 %602
  %604 = load i32, i32* %58, align 4
  %605 = ashr i32 %604, 1
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds i8, i8* %603, i64 %606
  %608 = load i32, i32* %31, align 4
  %609 = load i32, i32* %59, align 4
  %610 = ashr i32 %609, 1
  %611 = mul nsw i32 %608, %610
  %612 = sext i32 %611 to i64
  %613 = getelementptr inbounds i8, i8* %607, i64 %612
  %614 = load i8*, i8** %19, align 8
  %615 = load i32, i32* %75, align 4
  %616 = icmp ne i32 %615, 0
  br i1 %616, label %617, label %619

617:                                              ; preds = %600
  %618 = load i32, i32* @width, align 4
  br label %620

619:                                              ; preds = %600
  br label %620

620:                                              ; preds = %619, %617
  %621 = phi i32 [ %618, %617 ], [ 0, %619 ]
  %622 = sext i32 %621 to i64
  %623 = getelementptr inbounds i8, i8* %614, i64 %622
  %624 = load i32, i32* %69, align 4
  %625 = ashr i32 %624, 1
  %626 = sext i32 %625 to i64
  %627 = getelementptr inbounds i8, i8* %623, i64 %626
  %628 = load i32, i32* %31, align 4
  %629 = load i32, i32* %70, align 4
  %630 = ashr i32 %629, 1
  %631 = mul nsw i32 %628, %630
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds i8, i8* %627, i64 %632
  %634 = load i8*, i8** %32, align 8
  %635 = load i32, i32* %31, align 4
  %636 = mul nsw i32 8, %635
  %637 = sext i32 %636 to i64
  %638 = getelementptr inbounds i8, i8* %634, i64 %637
  %639 = load i32, i32* %31, align 4
  %640 = load i32, i32* %58, align 4
  %641 = and i32 %640, 1
  %642 = load i32, i32* %59, align 4
  %643 = and i32 %642, 1
  %644 = load i32, i32* %69, align 4
  %645 = and i32 %644, 1
  %646 = load i32, i32* %70, align 4
  %647 = and i32 %646, 1
  %648 = call i32 @bdist1(i8* %613, i8* %633, i8* %638, i32 %639, i32 %641, i32 %643, i32 %645, i32 %647, i32 8)
  %649 = load i32, i32* %42, align 4
  %650 = add nsw i32 %649, %648
  store i32 %650, i32* %42, align 4
  %651 = load i32, i32* %41, align 4
  %652 = load i32, i32* %42, align 4
  %653 = icmp slt i32 %651, %652
  br i1 %653, label %654, label %726

654:                                              ; preds = %620
  %655 = load i32, i32* %41, align 4
  %656 = load i32, i32* %60, align 4
  %657 = icmp slt i32 %655, %656
  br i1 %657, label %658, label %726

658:                                              ; preds = %654
  %659 = load i32, i32* %41, align 4
  %660 = load i32, i32* %61, align 4
  %661 = icmp slt i32 %659, %660
  br i1 %661, label %662, label %726

662:                                              ; preds = %658
  %663 = load i32, i32* %41, align 4
  %664 = load i32, i32* %71, align 4
  %665 = icmp slt i32 %663, %664
  br i1 %665, label %666, label %726

666:                                              ; preds = %662
  %667 = load i32, i32* %41, align 4
  %668 = load i32, i32* %72, align 4
  %669 = icmp slt i32 %667, %668
  br i1 %669, label %670, label %726

670:                                              ; preds = %666
  %671 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %672 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %671, i32 0, i32 0
  store i32 12, i32* %672, align 8
  %673 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %674 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %673, i32 0, i32 1
  store i32 1, i32* %674, align 4
  %675 = load i8*, i8** %18, align 8
  %676 = load i32, i32* %62, align 4
  %677 = icmp ne i32 %676, 0
  br i1 %677, label %678, label %680

678:                                              ; preds = %670
  %679 = load i32, i32* @width, align 4
  br label %681

680:                                              ; preds = %670
  br label %681

681:                                              ; preds = %680, %678
  %682 = phi i32 [ %679, %678 ], [ 0, %680 ]
  %683 = sext i32 %682 to i64
  %684 = getelementptr inbounds i8, i8* %675, i64 %683
  %685 = load i32, i32* %54, align 4
  %686 = ashr i32 %685, 1
  %687 = sext i32 %686 to i64
  %688 = getelementptr inbounds i8, i8* %684, i64 %687
  %689 = load i32, i32* %31, align 4
  %690 = load i32, i32* %55, align 4
  %691 = ashr i32 %690, 1
  %692 = mul nsw i32 %689, %691
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds i8, i8* %688, i64 %693
  %695 = load i8*, i8** %19, align 8
  %696 = load i32, i32* %73, align 4
  %697 = icmp ne i32 %696, 0
  br i1 %697, label %698, label %700

698:                                              ; preds = %681
  %699 = load i32, i32* @width, align 4
  br label %701

700:                                              ; preds = %681
  br label %701

701:                                              ; preds = %700, %698
  %702 = phi i32 [ %699, %698 ], [ 0, %700 ]
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds i8, i8* %695, i64 %703
  %705 = load i32, i32* %65, align 4
  %706 = ashr i32 %705, 1
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds i8, i8* %704, i64 %707
  %709 = load i32, i32* %31, align 4
  %710 = load i32, i32* %66, align 4
  %711 = ashr i32 %710, 1
  %712 = mul nsw i32 %709, %711
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds i8, i8* %708, i64 %713
  %715 = load i8*, i8** %32, align 8
  %716 = load i32, i32* %31, align 4
  %717 = load i32, i32* %54, align 4
  %718 = and i32 %717, 1
  %719 = load i32, i32* %55, align 4
  %720 = and i32 %719, 1
  %721 = load i32, i32* %65, align 4
  %722 = and i32 %721, 1
  %723 = load i32, i32* %66, align 4
  %724 = and i32 %723, 1
  %725 = call i32 @bdist2(i8* %694, i8* %714, i8* %715, i32 %716, i32 %718, i32 %720, i32 %722, i32 %724, i32 16)
  store i32 %725, i32* %38, align 4
  br label %1077

726:                                              ; preds = %666, %662, %658, %654, %620
  %727 = load i32, i32* %42, align 4
  %728 = load i32, i32* %60, align 4
  %729 = icmp slt i32 %727, %728
  br i1 %729, label %730, label %855

730:                                              ; preds = %726
  %731 = load i32, i32* %42, align 4
  %732 = load i32, i32* %61, align 4
  %733 = icmp slt i32 %731, %732
  br i1 %733, label %734, label %855

734:                                              ; preds = %730
  %735 = load i32, i32* %42, align 4
  %736 = load i32, i32* %71, align 4
  %737 = icmp slt i32 %735, %736
  br i1 %737, label %738, label %855

738:                                              ; preds = %734
  %739 = load i32, i32* %42, align 4
  %740 = load i32, i32* %72, align 4
  %741 = icmp slt i32 %739, %740
  br i1 %741, label %742, label %855

742:                                              ; preds = %738
  %743 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %744 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %743, i32 0, i32 0
  store i32 12, i32* %744, align 8
  %745 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %746 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %745, i32 0, i32 1
  store i32 2, i32* %746, align 4
  %747 = load i8*, i8** %18, align 8
  %748 = load i32, i32* %63, align 4
  %749 = icmp ne i32 %748, 0
  br i1 %749, label %750, label %752

750:                                              ; preds = %742
  %751 = load i32, i32* @width, align 4
  br label %753

752:                                              ; preds = %742
  br label %753

753:                                              ; preds = %752, %750
  %754 = phi i32 [ %751, %750 ], [ 0, %752 ]
  %755 = sext i32 %754 to i64
  %756 = getelementptr inbounds i8, i8* %747, i64 %755
  %757 = load i32, i32* %56, align 4
  %758 = ashr i32 %757, 1
  %759 = sext i32 %758 to i64
  %760 = getelementptr inbounds i8, i8* %756, i64 %759
  %761 = load i32, i32* %31, align 4
  %762 = load i32, i32* %57, align 4
  %763 = ashr i32 %762, 1
  %764 = mul nsw i32 %761, %763
  %765 = sext i32 %764 to i64
  %766 = getelementptr inbounds i8, i8* %760, i64 %765
  %767 = load i8*, i8** %19, align 8
  %768 = load i32, i32* %74, align 4
  %769 = icmp ne i32 %768, 0
  br i1 %769, label %770, label %772

770:                                              ; preds = %753
  %771 = load i32, i32* @width, align 4
  br label %773

772:                                              ; preds = %753
  br label %773

773:                                              ; preds = %772, %770
  %774 = phi i32 [ %771, %770 ], [ 0, %772 ]
  %775 = sext i32 %774 to i64
  %776 = getelementptr inbounds i8, i8* %767, i64 %775
  %777 = load i32, i32* %67, align 4
  %778 = ashr i32 %777, 1
  %779 = sext i32 %778 to i64
  %780 = getelementptr inbounds i8, i8* %776, i64 %779
  %781 = load i32, i32* %31, align 4
  %782 = load i32, i32* %68, align 4
  %783 = ashr i32 %782, 1
  %784 = mul nsw i32 %781, %783
  %785 = sext i32 %784 to i64
  %786 = getelementptr inbounds i8, i8* %780, i64 %785
  %787 = load i8*, i8** %32, align 8
  %788 = load i32, i32* %31, align 4
  %789 = load i32, i32* %56, align 4
  %790 = and i32 %789, 1
  %791 = load i32, i32* %57, align 4
  %792 = and i32 %791, 1
  %793 = load i32, i32* %67, align 4
  %794 = and i32 %793, 1
  %795 = load i32, i32* %68, align 4
  %796 = and i32 %795, 1
  %797 = call i32 @bdist2(i8* %766, i8* %786, i8* %787, i32 %788, i32 %790, i32 %792, i32 %794, i32 %796, i32 8)
  store i32 %797, i32* %38, align 4
  %798 = load i8*, i8** %18, align 8
  %799 = load i32, i32* %64, align 4
  %800 = icmp ne i32 %799, 0
  br i1 %800, label %801, label %803

801:                                              ; preds = %773
  %802 = load i32, i32* @width, align 4
  br label %804

803:                                              ; preds = %773
  br label %804

804:                                              ; preds = %803, %801
  %805 = phi i32 [ %802, %801 ], [ 0, %803 ]
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds i8, i8* %798, i64 %806
  %808 = load i32, i32* %58, align 4
  %809 = ashr i32 %808, 1
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds i8, i8* %807, i64 %810
  %812 = load i32, i32* %31, align 4
  %813 = load i32, i32* %59, align 4
  %814 = ashr i32 %813, 1
  %815 = mul nsw i32 %812, %814
  %816 = sext i32 %815 to i64
  %817 = getelementptr inbounds i8, i8* %811, i64 %816
  %818 = load i8*, i8** %19, align 8
  %819 = load i32, i32* %75, align 4
  %820 = icmp ne i32 %819, 0
  br i1 %820, label %821, label %823

821:                                              ; preds = %804
  %822 = load i32, i32* @width, align 4
  br label %824

823:                                              ; preds = %804
  br label %824

824:                                              ; preds = %823, %821
  %825 = phi i32 [ %822, %821 ], [ 0, %823 ]
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds i8, i8* %818, i64 %826
  %828 = load i32, i32* %69, align 4
  %829 = ashr i32 %828, 1
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds i8, i8* %827, i64 %830
  %832 = load i32, i32* %31, align 4
  %833 = load i32, i32* %70, align 4
  %834 = ashr i32 %833, 1
  %835 = mul nsw i32 %832, %834
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds i8, i8* %831, i64 %836
  %838 = load i8*, i8** %32, align 8
  %839 = load i32, i32* %31, align 4
  %840 = mul nsw i32 8, %839
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds i8, i8* %838, i64 %841
  %843 = load i32, i32* %31, align 4
  %844 = load i32, i32* %58, align 4
  %845 = and i32 %844, 1
  %846 = load i32, i32* %59, align 4
  %847 = and i32 %846, 1
  %848 = load i32, i32* %69, align 4
  %849 = and i32 %848, 1
  %850 = load i32, i32* %70, align 4
  %851 = and i32 %850, 1
  %852 = call i32 @bdist2(i8* %817, i8* %837, i8* %842, i32 %843, i32 %845, i32 %847, i32 %849, i32 %851, i32 8)
  %853 = load i32, i32* %38, align 4
  %854 = add nsw i32 %853, %852
  store i32 %854, i32* %38, align 4
  br label %1076

855:                                              ; preds = %738, %734, %730, %726
  %856 = load i32, i32* %60, align 4
  %857 = load i32, i32* %61, align 4
  %858 = icmp slt i32 %856, %857
  br i1 %858, label %859, label %899

859:                                              ; preds = %855
  %860 = load i32, i32* %60, align 4
  %861 = load i32, i32* %71, align 4
  %862 = icmp slt i32 %860, %861
  br i1 %862, label %863, label %899

863:                                              ; preds = %859
  %864 = load i32, i32* %60, align 4
  %865 = load i32, i32* %72, align 4
  %866 = icmp slt i32 %864, %865
  br i1 %866, label %867, label %899

867:                                              ; preds = %863
  %868 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %869 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %868, i32 0, i32 0
  store i32 8, i32* %869, align 8
  %870 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %871 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %870, i32 0, i32 1
  store i32 1, i32* %871, align 4
  %872 = load i8*, i8** %18, align 8
  %873 = load i32, i32* %62, align 4
  %874 = icmp ne i32 %873, 0
  br i1 %874, label %875, label %877

875:                                              ; preds = %867
  %876 = load i32, i32* @width, align 4
  br label %878

877:                                              ; preds = %867
  br label %878

878:                                              ; preds = %877, %875
  %879 = phi i32 [ %876, %875 ], [ 0, %877 ]
  %880 = sext i32 %879 to i64
  %881 = getelementptr inbounds i8, i8* %872, i64 %880
  %882 = load i32, i32* %54, align 4
  %883 = ashr i32 %882, 1
  %884 = sext i32 %883 to i64
  %885 = getelementptr inbounds i8, i8* %881, i64 %884
  %886 = load i32, i32* %31, align 4
  %887 = load i32, i32* %55, align 4
  %888 = ashr i32 %887, 1
  %889 = mul nsw i32 %886, %888
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds i8, i8* %885, i64 %890
  %892 = load i8*, i8** %32, align 8
  %893 = load i32, i32* %31, align 4
  %894 = load i32, i32* %54, align 4
  %895 = and i32 %894, 1
  %896 = load i32, i32* %55, align 4
  %897 = and i32 %896, 1
  %898 = call i32 @dist2(i8* %891, i8* %892, i32 %893, i32 %895, i32 %897, i32 16)
  store i32 %898, i32* %38, align 4
  br label %1075

899:                                              ; preds = %863, %859, %855
  %900 = load i32, i32* %61, align 4
  %901 = load i32, i32* %71, align 4
  %902 = icmp slt i32 %900, %901
  br i1 %902, label %903, label %972

903:                                              ; preds = %899
  %904 = load i32, i32* %61, align 4
  %905 = load i32, i32* %72, align 4
  %906 = icmp slt i32 %904, %905
  br i1 %906, label %907, label %972

907:                                              ; preds = %903
  %908 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %909 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %908, i32 0, i32 0
  store i32 8, i32* %909, align 8
  %910 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %911 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %910, i32 0, i32 1
  store i32 2, i32* %911, align 4
  %912 = load i8*, i8** %18, align 8
  %913 = load i32, i32* %63, align 4
  %914 = icmp ne i32 %913, 0
  br i1 %914, label %915, label %917

915:                                              ; preds = %907
  %916 = load i32, i32* @width, align 4
  br label %918

917:                                              ; preds = %907
  br label %918

918:                                              ; preds = %917, %915
  %919 = phi i32 [ %916, %915 ], [ 0, %917 ]
  %920 = sext i32 %919 to i64
  %921 = getelementptr inbounds i8, i8* %912, i64 %920
  %922 = load i32, i32* %56, align 4
  %923 = ashr i32 %922, 1
  %924 = sext i32 %923 to i64
  %925 = getelementptr inbounds i8, i8* %921, i64 %924
  %926 = load i32, i32* %31, align 4
  %927 = load i32, i32* %57, align 4
  %928 = ashr i32 %927, 1
  %929 = mul nsw i32 %926, %928
  %930 = sext i32 %929 to i64
  %931 = getelementptr inbounds i8, i8* %925, i64 %930
  %932 = load i8*, i8** %32, align 8
  %933 = load i32, i32* %31, align 4
  %934 = load i32, i32* %56, align 4
  %935 = and i32 %934, 1
  %936 = load i32, i32* %57, align 4
  %937 = and i32 %936, 1
  %938 = call i32 @dist2(i8* %931, i8* %932, i32 %933, i32 %935, i32 %937, i32 8)
  store i32 %938, i32* %38, align 4
  %939 = load i8*, i8** %18, align 8
  %940 = load i32, i32* %64, align 4
  %941 = icmp ne i32 %940, 0
  br i1 %941, label %942, label %944

942:                                              ; preds = %918
  %943 = load i32, i32* @width, align 4
  br label %945

944:                                              ; preds = %918
  br label %945

945:                                              ; preds = %944, %942
  %946 = phi i32 [ %943, %942 ], [ 0, %944 ]
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds i8, i8* %939, i64 %947
  %949 = load i32, i32* %58, align 4
  %950 = ashr i32 %949, 1
  %951 = sext i32 %950 to i64
  %952 = getelementptr inbounds i8, i8* %948, i64 %951
  %953 = load i32, i32* %31, align 4
  %954 = load i32, i32* %59, align 4
  %955 = ashr i32 %954, 1
  %956 = mul nsw i32 %953, %955
  %957 = sext i32 %956 to i64
  %958 = getelementptr inbounds i8, i8* %952, i64 %957
  %959 = load i8*, i8** %32, align 8
  %960 = load i32, i32* %31, align 4
  %961 = mul nsw i32 8, %960
  %962 = sext i32 %961 to i64
  %963 = getelementptr inbounds i8, i8* %959, i64 %962
  %964 = load i32, i32* %31, align 4
  %965 = load i32, i32* %58, align 4
  %966 = and i32 %965, 1
  %967 = load i32, i32* %59, align 4
  %968 = and i32 %967, 1
  %969 = call i32 @dist2(i8* %958, i8* %963, i32 %964, i32 %966, i32 %968, i32 8)
  %970 = load i32, i32* %38, align 4
  %971 = add nsw i32 %970, %969
  store i32 %971, i32* %38, align 4
  br label %1074

972:                                              ; preds = %903, %899
  %973 = load i32, i32* %71, align 4
  %974 = load i32, i32* %72, align 4
  %975 = icmp slt i32 %973, %974
  br i1 %975, label %976, label %1008

976:                                              ; preds = %972
  %977 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %978 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %977, i32 0, i32 0
  store i32 4, i32* %978, align 8
  %979 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %980 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %979, i32 0, i32 1
  store i32 1, i32* %980, align 4
  %981 = load i8*, i8** %19, align 8
  %982 = load i32, i32* %73, align 4
  %983 = icmp ne i32 %982, 0
  br i1 %983, label %984, label %986

984:                                              ; preds = %976
  %985 = load i32, i32* @width, align 4
  br label %987

986:                                              ; preds = %976
  br label %987

987:                                              ; preds = %986, %984
  %988 = phi i32 [ %985, %984 ], [ 0, %986 ]
  %989 = sext i32 %988 to i64
  %990 = getelementptr inbounds i8, i8* %981, i64 %989
  %991 = load i32, i32* %65, align 4
  %992 = ashr i32 %991, 1
  %993 = sext i32 %992 to i64
  %994 = getelementptr inbounds i8, i8* %990, i64 %993
  %995 = load i32, i32* %31, align 4
  %996 = load i32, i32* %66, align 4
  %997 = ashr i32 %996, 1
  %998 = mul nsw i32 %995, %997
  %999 = sext i32 %998 to i64
  %1000 = getelementptr inbounds i8, i8* %994, i64 %999
  %1001 = load i8*, i8** %32, align 8
  %1002 = load i32, i32* %31, align 4
  %1003 = load i32, i32* %65, align 4
  %1004 = and i32 %1003, 1
  %1005 = load i32, i32* %66, align 4
  %1006 = and i32 %1005, 1
  %1007 = call i32 @dist2(i8* %1000, i8* %1001, i32 %1002, i32 %1004, i32 %1006, i32 16)
  store i32 %1007, i32* %38, align 4
  br label %1073

1008:                                             ; preds = %972
  %1009 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1010 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1009, i32 0, i32 0
  store i32 4, i32* %1010, align 8
  %1011 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1012 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1011, i32 0, i32 1
  store i32 2, i32* %1012, align 4
  %1013 = load i8*, i8** %19, align 8
  %1014 = load i32, i32* %74, align 4
  %1015 = icmp ne i32 %1014, 0
  br i1 %1015, label %1016, label %1018

1016:                                             ; preds = %1008
  %1017 = load i32, i32* @width, align 4
  br label %1019

1018:                                             ; preds = %1008
  br label %1019

1019:                                             ; preds = %1018, %1016
  %1020 = phi i32 [ %1017, %1016 ], [ 0, %1018 ]
  %1021 = sext i32 %1020 to i64
  %1022 = getelementptr inbounds i8, i8* %1013, i64 %1021
  %1023 = load i32, i32* %67, align 4
  %1024 = ashr i32 %1023, 1
  %1025 = sext i32 %1024 to i64
  %1026 = getelementptr inbounds i8, i8* %1022, i64 %1025
  %1027 = load i32, i32* %31, align 4
  %1028 = load i32, i32* %68, align 4
  %1029 = ashr i32 %1028, 1
  %1030 = mul nsw i32 %1027, %1029
  %1031 = sext i32 %1030 to i64
  %1032 = getelementptr inbounds i8, i8* %1026, i64 %1031
  %1033 = load i8*, i8** %32, align 8
  %1034 = load i32, i32* %31, align 4
  %1035 = load i32, i32* %67, align 4
  %1036 = and i32 %1035, 1
  %1037 = load i32, i32* %68, align 4
  %1038 = and i32 %1037, 1
  %1039 = call i32 @dist2(i8* %1032, i8* %1033, i32 %1034, i32 %1036, i32 %1038, i32 8)
  store i32 %1039, i32* %38, align 4
  %1040 = load i8*, i8** %19, align 8
  %1041 = load i32, i32* %75, align 4
  %1042 = icmp ne i32 %1041, 0
  br i1 %1042, label %1043, label %1045

1043:                                             ; preds = %1019
  %1044 = load i32, i32* @width, align 4
  br label %1046

1045:                                             ; preds = %1019
  br label %1046

1046:                                             ; preds = %1045, %1043
  %1047 = phi i32 [ %1044, %1043 ], [ 0, %1045 ]
  %1048 = sext i32 %1047 to i64
  %1049 = getelementptr inbounds i8, i8* %1040, i64 %1048
  %1050 = load i32, i32* %69, align 4
  %1051 = ashr i32 %1050, 1
  %1052 = sext i32 %1051 to i64
  %1053 = getelementptr inbounds i8, i8* %1049, i64 %1052
  %1054 = load i32, i32* %31, align 4
  %1055 = load i32, i32* %70, align 4
  %1056 = ashr i32 %1055, 1
  %1057 = mul nsw i32 %1054, %1056
  %1058 = sext i32 %1057 to i64
  %1059 = getelementptr inbounds i8, i8* %1053, i64 %1058
  %1060 = load i8*, i8** %32, align 8
  %1061 = load i32, i32* %31, align 4
  %1062 = mul nsw i32 8, %1061
  %1063 = sext i32 %1062 to i64
  %1064 = getelementptr inbounds i8, i8* %1060, i64 %1063
  %1065 = load i32, i32* %31, align 4
  %1066 = load i32, i32* %69, align 4
  %1067 = and i32 %1066, 1
  %1068 = load i32, i32* %70, align 4
  %1069 = and i32 %1068, 1
  %1070 = call i32 @dist2(i8* %1059, i8* %1064, i32 %1065, i32 %1067, i32 %1069, i32 8)
  %1071 = load i32, i32* %38, align 4
  %1072 = add nsw i32 %1071, %1070
  store i32 %1072, i32* %38, align 4
  br label %1073

1073:                                             ; preds = %1046, %987
  br label %1074

1074:                                             ; preds = %1073, %945
  br label %1075

1075:                                             ; preds = %1074, %878
  br label %1076

1076:                                             ; preds = %1075, %824
  br label %1077

1077:                                             ; preds = %1076, %701
  %1078 = load i32, i32* %38, align 4
  %1079 = load i32, i32* %37, align 4
  %1080 = icmp sgt i32 %1078, %1079
  br i1 %1080, label %1081, label %1087

1081:                                             ; preds = %1077
  %1082 = load i32, i32* %38, align 4
  %1083 = icmp sge i32 %1082, 2304
  br i1 %1083, label %1084, label %1087

1084:                                             ; preds = %1081
  %1085 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1086 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1085, i32 0, i32 0
  store i32 1, i32* %1086, align 8
  br label %1236

1087:                                             ; preds = %1081, %1077
  %1088 = load i32, i32* %38, align 4
  store i32 %1088, i32* %37, align 4
  %1089 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1090 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1089, i32 0, i32 1
  %1091 = load i32, i32* %1090, align 4
  %1092 = icmp eq i32 %1091, 1
  br i1 %1092, label %1093, label %1140

1093:                                             ; preds = %1087
  %1094 = load i32, i32* %54, align 4
  %1095 = load i32, i32* %22, align 4
  %1096 = shl i32 %1095, 1
  %1097 = sub nsw i32 %1094, %1096
  %1098 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1099 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1098, i32 0, i32 6
  %1100 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1099, i64 0, i64 0
  %1101 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1100, i64 0, i64 0
  %1102 = getelementptr inbounds [2 x i32], [2 x i32]* %1101, i64 0, i64 0
  store i32 %1097, i32* %1102, align 8
  %1103 = load i32, i32* %55, align 4
  %1104 = load i32, i32* %23, align 4
  %1105 = shl i32 %1104, 1
  %1106 = sub nsw i32 %1103, %1105
  %1107 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1108 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1107, i32 0, i32 6
  %1109 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1108, i64 0, i64 0
  %1110 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1109, i64 0, i64 0
  %1111 = getelementptr inbounds [2 x i32], [2 x i32]* %1110, i64 0, i64 1
  store i32 %1106, i32* %1111, align 4
  %1112 = load i32, i32* %62, align 4
  %1113 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1114 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1113, i32 0, i32 7
  %1115 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1114, i64 0, i64 0
  %1116 = getelementptr inbounds [2 x i32], [2 x i32]* %1115, i64 0, i64 0
  store i32 %1112, i32* %1116, align 8
  %1117 = load i32, i32* %65, align 4
  %1118 = load i32, i32* %22, align 4
  %1119 = shl i32 %1118, 1
  %1120 = sub nsw i32 %1117, %1119
  %1121 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1122 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1121, i32 0, i32 6
  %1123 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1122, i64 0, i64 0
  %1124 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1123, i64 0, i64 1
  %1125 = getelementptr inbounds [2 x i32], [2 x i32]* %1124, i64 0, i64 0
  store i32 %1120, i32* %1125, align 8
  %1126 = load i32, i32* %66, align 4
  %1127 = load i32, i32* %23, align 4
  %1128 = shl i32 %1127, 1
  %1129 = sub nsw i32 %1126, %1128
  %1130 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1131 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1130, i32 0, i32 6
  %1132 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1131, i64 0, i64 0
  %1133 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1132, i64 0, i64 1
  %1134 = getelementptr inbounds [2 x i32], [2 x i32]* %1133, i64 0, i64 1
  store i32 %1129, i32* %1134, align 4
  %1135 = load i32, i32* %73, align 4
  %1136 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1137 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1136, i32 0, i32 7
  %1138 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1137, i64 0, i64 0
  %1139 = getelementptr inbounds [2 x i32], [2 x i32]* %1138, i64 0, i64 1
  store i32 %1135, i32* %1139, align 4
  br label %1235

1140:                                             ; preds = %1087
  %1141 = load i32, i32* %56, align 4
  %1142 = load i32, i32* %22, align 4
  %1143 = shl i32 %1142, 1
  %1144 = sub nsw i32 %1141, %1143
  %1145 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1146 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1145, i32 0, i32 6
  %1147 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1146, i64 0, i64 0
  %1148 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1147, i64 0, i64 0
  %1149 = getelementptr inbounds [2 x i32], [2 x i32]* %1148, i64 0, i64 0
  store i32 %1144, i32* %1149, align 8
  %1150 = load i32, i32* %57, align 4
  %1151 = load i32, i32* %23, align 4
  %1152 = shl i32 %1151, 1
  %1153 = sub nsw i32 %1150, %1152
  %1154 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1155 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1154, i32 0, i32 6
  %1156 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1155, i64 0, i64 0
  %1157 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1156, i64 0, i64 0
  %1158 = getelementptr inbounds [2 x i32], [2 x i32]* %1157, i64 0, i64 1
  store i32 %1153, i32* %1158, align 4
  %1159 = load i32, i32* %63, align 4
  %1160 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1161 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1160, i32 0, i32 7
  %1162 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1161, i64 0, i64 0
  %1163 = getelementptr inbounds [2 x i32], [2 x i32]* %1162, i64 0, i64 0
  store i32 %1159, i32* %1163, align 8
  %1164 = load i32, i32* %58, align 4
  %1165 = load i32, i32* %22, align 4
  %1166 = shl i32 %1165, 1
  %1167 = sub nsw i32 %1164, %1166
  %1168 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1169 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1168, i32 0, i32 6
  %1170 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1169, i64 0, i64 1
  %1171 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1170, i64 0, i64 0
  %1172 = getelementptr inbounds [2 x i32], [2 x i32]* %1171, i64 0, i64 0
  store i32 %1167, i32* %1172, align 8
  %1173 = load i32, i32* %59, align 4
  %1174 = load i32, i32* %23, align 4
  %1175 = add nsw i32 %1174, 8
  %1176 = shl i32 %1175, 1
  %1177 = sub nsw i32 %1173, %1176
  %1178 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1179 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1178, i32 0, i32 6
  %1180 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1179, i64 0, i64 1
  %1181 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1180, i64 0, i64 0
  %1182 = getelementptr inbounds [2 x i32], [2 x i32]* %1181, i64 0, i64 1
  store i32 %1177, i32* %1182, align 4
  %1183 = load i32, i32* %64, align 4
  %1184 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1185 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1184, i32 0, i32 7
  %1186 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1185, i64 0, i64 1
  %1187 = getelementptr inbounds [2 x i32], [2 x i32]* %1186, i64 0, i64 0
  store i32 %1183, i32* %1187, align 8
  %1188 = load i32, i32* %67, align 4
  %1189 = load i32, i32* %22, align 4
  %1190 = shl i32 %1189, 1
  %1191 = sub nsw i32 %1188, %1190
  %1192 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1193 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1192, i32 0, i32 6
  %1194 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1193, i64 0, i64 0
  %1195 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1194, i64 0, i64 1
  %1196 = getelementptr inbounds [2 x i32], [2 x i32]* %1195, i64 0, i64 0
  store i32 %1191, i32* %1196, align 8
  %1197 = load i32, i32* %68, align 4
  %1198 = load i32, i32* %23, align 4
  %1199 = shl i32 %1198, 1
  %1200 = sub nsw i32 %1197, %1199
  %1201 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1202 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1201, i32 0, i32 6
  %1203 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1202, i64 0, i64 0
  %1204 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1203, i64 0, i64 1
  %1205 = getelementptr inbounds [2 x i32], [2 x i32]* %1204, i64 0, i64 1
  store i32 %1200, i32* %1205, align 4
  %1206 = load i32, i32* %74, align 4
  %1207 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1208 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1207, i32 0, i32 7
  %1209 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1208, i64 0, i64 0
  %1210 = getelementptr inbounds [2 x i32], [2 x i32]* %1209, i64 0, i64 1
  store i32 %1206, i32* %1210, align 4
  %1211 = load i32, i32* %69, align 4
  %1212 = load i32, i32* %22, align 4
  %1213 = shl i32 %1212, 1
  %1214 = sub nsw i32 %1211, %1213
  %1215 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1216 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1215, i32 0, i32 6
  %1217 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1216, i64 0, i64 1
  %1218 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1217, i64 0, i64 1
  %1219 = getelementptr inbounds [2 x i32], [2 x i32]* %1218, i64 0, i64 0
  store i32 %1214, i32* %1219, align 8
  %1220 = load i32, i32* %70, align 4
  %1221 = load i32, i32* %23, align 4
  %1222 = add nsw i32 %1221, 8
  %1223 = shl i32 %1222, 1
  %1224 = sub nsw i32 %1220, %1223
  %1225 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1226 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1225, i32 0, i32 6
  %1227 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %1226, i64 0, i64 1
  %1228 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1227, i64 0, i64 1
  %1229 = getelementptr inbounds [2 x i32], [2 x i32]* %1228, i64 0, i64 1
  store i32 %1224, i32* %1229, align 4
  %1230 = load i32, i32* %75, align 4
  %1231 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1232 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1231, i32 0, i32 7
  %1233 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %1232, i64 0, i64 1
  %1234 = getelementptr inbounds [2 x i32], [2 x i32]* %1233, i64 0, i64 1
  store i32 %1230, i32* %1234, align 4
  br label %1235

1235:                                             ; preds = %1140, %1093
  br label %1236

1236:                                             ; preds = %1235, %1084
  br label %1237

1237:                                             ; preds = %1236, %460
  br label %1238

1238:                                             ; preds = %1237, %107
  %1239 = load i32, i32* %37, align 4
  %1240 = load %struct.mbinfo*, %struct.mbinfo** %28, align 8
  %1241 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %1240, i32 0, i32 10
  store i32 %1239, i32* %1241, align 8
  ret void
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) #1

declare dso_local i32 @fflush(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @variance(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %39, %2
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 16
  br i1 %12, label %13, label %42

13:                                               ; preds = %10
  store i32 0, i32* %5, align 4
  br label %14

14:                                               ; preds = %30, %13
  %15 = load i32, i32* %5, align 4
  %16 = icmp slt i32 %15, 16
  br i1 %16, label %17, label %33

17:                                               ; preds = %14
  %18 = load i8*, i8** %3, align 8
  %19 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %19, i8** %3, align 8
  %20 = load i8, i8* %18, align 1
  %21 = zext i8 %20 to i32
  store i32 %21, i32* %7, align 4
  %22 = load i32, i32* %7, align 4
  %23 = load i32, i32* %8, align 4
  %24 = add i32 %23, %22
  store i32 %24, i32* %8, align 4
  %25 = load i32, i32* %7, align 4
  %26 = load i32, i32* %7, align 4
  %27 = mul i32 %25, %26
  %28 = load i32, i32* %9, align 4
  %29 = add i32 %28, %27
  store i32 %29, i32* %9, align 4
  br label %30

30:                                               ; preds = %17
  %31 = load i32, i32* %5, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %5, align 4
  br label %14

33:                                               ; preds = %14
  %34 = load i32, i32* %4, align 4
  %35 = sub nsw i32 %34, 16
  %36 = load i8*, i8** %3, align 8
  %37 = sext i32 %35 to i64
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  store i8* %38, i8** %3, align 8
  br label %39

39:                                               ; preds = %33
  %40 = load i32, i32* %6, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %6, align 4
  br label %10

42:                                               ; preds = %10
  %43 = load i32, i32* %9, align 4
  %44 = load i32, i32* %8, align 4
  %45 = load i32, i32* %8, align 4
  %46 = mul i32 %44, %45
  %47 = udiv i32 %46, 256
  %48 = sub i32 %43, %47
  ret i32 %48
}

; Function Attrs: noinline nounwind uwtable
define internal void @field_estimate(i8* %0, i8* %1, i8* %2, i8* %3, i8* %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32* %10, i32* %11, i32* %12, i32* %13, i32* %14, i32* %15, i32* %16, i32* %17, i32* %18, i32* %19, i32* %20, i32* %21, i32* %22, i32* %23) #0 {
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32*, align 8
  %36 = alloca i32*, align 8
  %37 = alloca i32*, align 8
  %38 = alloca i32*, align 8
  %39 = alloca i32*, align 8
  %40 = alloca i32*, align 8
  %41 = alloca i32*, align 8
  %42 = alloca i32*, align 8
  %43 = alloca i32*, align 8
  %44 = alloca i32*, align 8
  %45 = alloca i32*, align 8
  %46 = alloca i32*, align 8
  %47 = alloca i32*, align 8
  %48 = alloca i32*, align 8
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  store i8* %0, i8** %25, align 8
  store i8* %1, i8** %26, align 8
  store i8* %2, i8** %27, align 8
  store i8* %3, i8** %28, align 8
  store i8* %4, i8** %29, align 8
  store i32 %5, i32* %30, align 4
  store i32 %6, i32* %31, align 4
  store i32 %7, i32* %32, align 4
  store i32 %8, i32* %33, align 4
  store i32 %9, i32* %34, align 4
  store i32* %10, i32** %35, align 8
  store i32* %11, i32** %36, align 8
  store i32* %12, i32** %37, align 8
  store i32* %13, i32** %38, align 8
  store i32* %14, i32** %39, align 8
  store i32* %15, i32** %40, align 8
  store i32* %16, i32** %41, align 8
  store i32* %17, i32** %42, align 8
  store i32* %18, i32** %43, align 8
  store i32* %19, i32** %44, align 8
  store i32* %20, i32** %45, align 8
  store i32* %21, i32** %46, align 8
  store i32* %22, i32** %47, align 8
  store i32* %23, i32** %48, align 8
  %57 = load i32, i32* %34, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %24
  %60 = load i32, i32* @pict_struct, align 4
  %61 = icmp eq i32 %60, 1
  br label %62

62:                                               ; preds = %59, %24
  %63 = phi i1 [ false, %24 ], [ %61, %59 ]
  %64 = zext i1 %63 to i32
  store i32 %64, i32* %55, align 4
  %65 = load i32, i32* %34, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = load i32, i32* @pict_struct, align 4
  %69 = icmp eq i32 %68, 2
  br label %70

70:                                               ; preds = %67, %62
  %71 = phi i1 [ false, %62 ], [ %69, %67 ]
  %72 = zext i1 %71 to i32
  store i32 %72, i32* %56, align 4
  %73 = load i32, i32* %55, align 4
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %70
  store i32 65536, i32* %49, align 4
  br label %91

76:                                               ; preds = %70
  %77 = load i8*, i8** %25, align 8
  %78 = load i8*, i8** %26, align 8
  %79 = load i8*, i8** %29, align 8
  %80 = load i32, i32* @width, align 4
  %81 = shl i32 %80, 1
  %82 = load i32, i32* %30, align 4
  %83 = load i32, i32* %31, align 4
  %84 = load i32, i32* %32, align 4
  %85 = load i32, i32* %33, align 4
  %86 = ashr i32 %85, 1
  %87 = load i32, i32* @width, align 4
  %88 = load i32, i32* @height, align 4
  %89 = ashr i32 %88, 1
  %90 = call i32 @fullsearch(i8* %77, i8* %78, i8* %79, i32 %81, i32 %82, i32 %83, i32 %84, i32 %86, i32 16, i32 %87, i32 %89, i32* %51, i32* %52)
  store i32 %90, i32* %49, align 4
  br label %91

91:                                               ; preds = %76, %75
  %92 = load i32, i32* %56, align 4
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  store i32 65536, i32* %50, align 4
  br label %110

95:                                               ; preds = %91
  %96 = load i8*, i8** %27, align 8
  %97 = load i8*, i8** %28, align 8
  %98 = load i8*, i8** %29, align 8
  %99 = load i32, i32* @width, align 4
  %100 = shl i32 %99, 1
  %101 = load i32, i32* %30, align 4
  %102 = load i32, i32* %31, align 4
  %103 = load i32, i32* %32, align 4
  %104 = load i32, i32* %33, align 4
  %105 = ashr i32 %104, 1
  %106 = load i32, i32* @width, align 4
  %107 = load i32, i32* @height, align 4
  %108 = ashr i32 %107, 1
  %109 = call i32 @fullsearch(i8* %96, i8* %97, i8* %98, i32 %100, i32 %101, i32 %102, i32 %103, i32 %105, i32 16, i32 %106, i32 %108, i32* %53, i32* %54)
  store i32 %109, i32* %50, align 4
  br label %110

110:                                              ; preds = %95, %94
  %111 = load i32, i32* @pict_struct, align 4
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %120

113:                                              ; preds = %110
  %114 = load i32, i32* %51, align 4
  %115 = load i32*, i32** %46, align 8
  store i32 %114, i32* %115, align 4
  %116 = load i32, i32* %52, align 4
  %117 = load i32*, i32** %47, align 8
  store i32 %116, i32* %117, align 4
  %118 = load i32, i32* %49, align 4
  %119 = load i32*, i32** %48, align 8
  store i32 %118, i32* %119, align 4
  br label %127

120:                                              ; preds = %110
  %121 = load i32, i32* %53, align 4
  %122 = load i32*, i32** %46, align 8
  store i32 %121, i32* %122, align 4
  %123 = load i32, i32* %54, align 4
  %124 = load i32*, i32** %47, align 8
  store i32 %123, i32* %124, align 4
  %125 = load i32, i32* %50, align 4
  %126 = load i32*, i32** %48, align 8
  store i32 %125, i32* %126, align 4
  br label %127

127:                                              ; preds = %120, %113
  %128 = load i32, i32* %49, align 4
  %129 = load i32, i32* %50, align 4
  %130 = icmp sle i32 %128, %129
  br i1 %130, label %131, label %139

131:                                              ; preds = %127
  %132 = load i32, i32* %49, align 4
  %133 = load i32*, i32** %41, align 8
  store i32 %132, i32* %133, align 4
  %134 = load i32, i32* %51, align 4
  %135 = load i32*, i32** %35, align 8
  store i32 %134, i32* %135, align 4
  %136 = load i32, i32* %52, align 4
  %137 = load i32*, i32** %36, align 8
  store i32 %136, i32* %137, align 4
  %138 = load i32*, i32** %43, align 8
  store i32 0, i32* %138, align 4
  br label %147

139:                                              ; preds = %127
  %140 = load i32, i32* %50, align 4
  %141 = load i32*, i32** %41, align 8
  store i32 %140, i32* %141, align 4
  %142 = load i32, i32* %53, align 4
  %143 = load i32*, i32** %35, align 8
  store i32 %142, i32* %143, align 4
  %144 = load i32, i32* %54, align 4
  %145 = load i32*, i32** %36, align 8
  store i32 %144, i32* %145, align 4
  %146 = load i32*, i32** %43, align 8
  store i32 1, i32* %146, align 4
  br label %147

147:                                              ; preds = %139, %131
  %148 = load i32, i32* %55, align 4
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  store i32 65536, i32* %49, align 4
  br label %166

151:                                              ; preds = %147
  %152 = load i8*, i8** %25, align 8
  %153 = load i8*, i8** %26, align 8
  %154 = load i8*, i8** %29, align 8
  %155 = load i32, i32* @width, align 4
  %156 = shl i32 %155, 1
  %157 = load i32, i32* %30, align 4
  %158 = load i32, i32* %31, align 4
  %159 = load i32, i32* %32, align 4
  %160 = load i32, i32* %33, align 4
  %161 = ashr i32 %160, 1
  %162 = load i32, i32* @width, align 4
  %163 = load i32, i32* @height, align 4
  %164 = ashr i32 %163, 1
  %165 = call i32 @fullsearch(i8* %152, i8* %153, i8* %154, i32 %156, i32 %157, i32 %158, i32 %159, i32 %161, i32 8, i32 %162, i32 %164, i32* %51, i32* %52)
  store i32 %165, i32* %49, align 4
  br label %166

166:                                              ; preds = %151, %150
  %167 = load i32, i32* %56, align 4
  %168 = icmp ne i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  store i32 65536, i32* %50, align 4
  br label %185

170:                                              ; preds = %166
  %171 = load i8*, i8** %27, align 8
  %172 = load i8*, i8** %28, align 8
  %173 = load i8*, i8** %29, align 8
  %174 = load i32, i32* @width, align 4
  %175 = shl i32 %174, 1
  %176 = load i32, i32* %30, align 4
  %177 = load i32, i32* %31, align 4
  %178 = load i32, i32* %32, align 4
  %179 = load i32, i32* %33, align 4
  %180 = ashr i32 %179, 1
  %181 = load i32, i32* @width, align 4
  %182 = load i32, i32* @height, align 4
  %183 = ashr i32 %182, 1
  %184 = call i32 @fullsearch(i8* %171, i8* %172, i8* %173, i32 %175, i32 %176, i32 %177, i32 %178, i32 %180, i32 8, i32 %181, i32 %183, i32* %53, i32* %54)
  store i32 %184, i32* %50, align 4
  br label %185

185:                                              ; preds = %170, %169
  %186 = load i32, i32* %49, align 4
  %187 = load i32, i32* %50, align 4
  %188 = icmp sle i32 %186, %187
  br i1 %188, label %189, label %197

189:                                              ; preds = %185
  %190 = load i32, i32* %49, align 4
  %191 = load i32*, i32** %42, align 8
  store i32 %190, i32* %191, align 4
  %192 = load i32, i32* %51, align 4
  %193 = load i32*, i32** %37, align 8
  store i32 %192, i32* %193, align 4
  %194 = load i32, i32* %52, align 4
  %195 = load i32*, i32** %38, align 8
  store i32 %194, i32* %195, align 4
  %196 = load i32*, i32** %44, align 8
  store i32 0, i32* %196, align 4
  br label %205

197:                                              ; preds = %185
  %198 = load i32, i32* %50, align 4
  %199 = load i32*, i32** %42, align 8
  store i32 %198, i32* %199, align 4
  %200 = load i32, i32* %53, align 4
  %201 = load i32*, i32** %37, align 8
  store i32 %200, i32* %201, align 4
  %202 = load i32, i32* %54, align 4
  %203 = load i32*, i32** %38, align 8
  store i32 %202, i32* %203, align 4
  %204 = load i32*, i32** %44, align 8
  store i32 1, i32* %204, align 4
  br label %205

205:                                              ; preds = %197, %189
  %206 = load i32, i32* %55, align 4
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  store i32 65536, i32* %49, align 4
  br label %229

209:                                              ; preds = %205
  %210 = load i8*, i8** %25, align 8
  %211 = load i8*, i8** %26, align 8
  %212 = load i8*, i8** %29, align 8
  %213 = load i32, i32* @width, align 4
  %214 = shl i32 %213, 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds i8, i8* %212, i64 %215
  %217 = load i32, i32* @width, align 4
  %218 = shl i32 %217, 1
  %219 = load i32, i32* %30, align 4
  %220 = load i32, i32* %31, align 4
  %221 = add nsw i32 %220, 8
  %222 = load i32, i32* %32, align 4
  %223 = load i32, i32* %33, align 4
  %224 = ashr i32 %223, 1
  %225 = load i32, i32* @width, align 4
  %226 = load i32, i32* @height, align 4
  %227 = ashr i32 %226, 1
  %228 = call i32 @fullsearch(i8* %210, i8* %211, i8* %216, i32 %218, i32 %219, i32 %221, i32 %222, i32 %224, i32 8, i32 %225, i32 %227, i32* %51, i32* %52)
  store i32 %228, i32* %49, align 4
  br label %229

229:                                              ; preds = %209, %208
  %230 = load i32, i32* %56, align 4
  %231 = icmp ne i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  store i32 65536, i32* %50, align 4
  br label %253

233:                                              ; preds = %229
  %234 = load i8*, i8** %27, align 8
  %235 = load i8*, i8** %28, align 8
  %236 = load i8*, i8** %29, align 8
  %237 = load i32, i32* @width, align 4
  %238 = shl i32 %237, 4
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds i8, i8* %236, i64 %239
  %241 = load i32, i32* @width, align 4
  %242 = shl i32 %241, 1
  %243 = load i32, i32* %30, align 4
  %244 = load i32, i32* %31, align 4
  %245 = add nsw i32 %244, 8
  %246 = load i32, i32* %32, align 4
  %247 = load i32, i32* %33, align 4
  %248 = ashr i32 %247, 1
  %249 = load i32, i32* @width, align 4
  %250 = load i32, i32* @height, align 4
  %251 = ashr i32 %250, 1
  %252 = call i32 @fullsearch(i8* %234, i8* %235, i8* %240, i32 %242, i32 %243, i32 %245, i32 %246, i32 %248, i32 8, i32 %249, i32 %251, i32* %53, i32* %54)
  store i32 %252, i32* %50, align 4
  br label %253

253:                                              ; preds = %233, %232
  %254 = load i32, i32* %49, align 4
  %255 = load i32, i32* %50, align 4
  %256 = icmp sle i32 %254, %255
  br i1 %256, label %257, label %267

257:                                              ; preds = %253
  %258 = load i32, i32* %49, align 4
  %259 = load i32*, i32** %42, align 8
  %260 = load i32, i32* %259, align 4
  %261 = add nsw i32 %260, %258
  store i32 %261, i32* %259, align 4
  %262 = load i32, i32* %51, align 4
  %263 = load i32*, i32** %39, align 8
  store i32 %262, i32* %263, align 4
  %264 = load i32, i32* %52, align 4
  %265 = load i32*, i32** %40, align 8
  store i32 %264, i32* %265, align 4
  %266 = load i32*, i32** %45, align 8
  store i32 0, i32* %266, align 4
  br label %277

267:                                              ; preds = %253
  %268 = load i32, i32* %50, align 4
  %269 = load i32*, i32** %42, align 8
  %270 = load i32, i32* %269, align 4
  %271 = add nsw i32 %270, %268
  store i32 %271, i32* %269, align 4
  %272 = load i32, i32* %53, align 4
  %273 = load i32*, i32** %39, align 8
  store i32 %272, i32* %273, align 4
  %274 = load i32, i32* %54, align 4
  %275 = load i32*, i32** %40, align 8
  store i32 %274, i32* %275, align 4
  %276 = load i32*, i32** %45, align 8
  store i32 1, i32* %276, align 4
  br label %277

277:                                              ; preds = %267, %257
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @dpfield_estimate(i8* %0, i8* %1, i8* %2, i32 %3, i32 %4, i32 %5, i32 %6, i32* %7, i32* %8, i32* %9, i32* %10) #0 {
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32*, align 8
  %20 = alloca i32*, align 8
  %21 = alloca i32*, align 8
  %22 = alloca i32*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  store i8* %0, i8** %12, align 8
  store i8* %1, i8** %13, align 8
  store i8* %2, i8** %14, align 8
  store i32 %3, i32* %15, align 4
  store i32 %4, i32* %16, align 4
  store i32 %5, i32* %17, align 4
  store i32 %6, i32* %18, align 4
  store i32* %7, i32** %19, align 8
  store i32* %8, i32** %20, align 8
  store i32* %9, i32** %21, align 8
  store i32* %10, i32** %22, align 8
  %41 = load i32, i32* @pict_struct, align 4
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %46

43:                                               ; preds = %11
  %44 = load i8*, i8** %12, align 8
  store i8* %44, i8** %23, align 8
  %45 = load i8*, i8** %13, align 8
  store i8* %45, i8** %24, align 8
  br label %49

46:                                               ; preds = %11
  %47 = load i8*, i8** %13, align 8
  store i8* %47, i8** %23, align 8
  %48 = load i8*, i8** %12, align 8
  store i8* %48, i8** %24, align 8
  br label %49

49:                                               ; preds = %46, %43
  %50 = load i32, i32* %17, align 4
  %51 = load i32, i32* %15, align 4
  %52 = shl i32 %51, 1
  %53 = sub nsw i32 %50, %52
  store i32 %53, i32* %31, align 4
  %54 = load i32, i32* %18, align 4
  %55 = load i32, i32* %16, align 4
  %56 = shl i32 %55, 1
  %57 = sub nsw i32 %54, %56
  store i32 %57, i32* %32, align 4
  %58 = load i32, i32* %31, align 4
  %59 = load i32, i32* %31, align 4
  %60 = icmp sgt i32 %59, 0
  %61 = zext i1 %60 to i32
  %62 = add nsw i32 %58, %61
  %63 = ashr i32 %62, 1
  store i32 %63, i32* %33, align 4
  %64 = load i32, i32* %32, align 4
  %65 = load i32, i32* %32, align 4
  %66 = icmp sgt i32 %65, 0
  %67 = zext i1 %66 to i32
  %68 = add nsw i32 %64, %67
  %69 = ashr i32 %68, 1
  store i32 %69, i32* %34, align 4
  %70 = load i32, i32* @pict_struct, align 4
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %75

72:                                               ; preds = %49
  %73 = load i32, i32* %34, align 4
  %74 = add nsw i32 %73, -1
  store i32 %74, i32* %34, align 4
  br label %78

75:                                               ; preds = %49
  %76 = load i32, i32* %34, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %34, align 4
  br label %78

78:                                               ; preds = %75, %72
  %79 = load i32, i32* %33, align 4
  %80 = load i32, i32* %15, align 4
  %81 = shl i32 %80, 1
  %82 = add nsw i32 %79, %81
  store i32 %82, i32* %25, align 4
  %83 = load i32, i32* %34, align 4
  %84 = load i32, i32* %16, align 4
  %85 = shl i32 %84, 1
  %86 = add nsw i32 %83, %85
  store i32 %86, i32* %26, align 4
  store i32 1073741824, i32* %39, align 4
  store i32 -1, i32* %30, align 4
  br label %87

87:                                               ; preds = %167, %78
  %88 = load i32, i32* %30, align 4
  %89 = icmp sle i32 %88, 1
  br i1 %89, label %90, label %170

90:                                               ; preds = %87
  store i32 -1, i32* %29, align 4
  br label %91

91:                                               ; preds = %163, %90
  %92 = load i32, i32* %29, align 4
  %93 = icmp sle i32 %92, 1
  br i1 %93, label %94, label %166

94:                                               ; preds = %91
  %95 = load i32, i32* %25, align 4
  %96 = load i32, i32* %29, align 4
  %97 = add nsw i32 %95, %96
  store i32 %97, i32* %27, align 4
  %98 = load i32, i32* %26, align 4
  %99 = load i32, i32* %30, align 4
  %100 = add nsw i32 %98, %99
  store i32 %100, i32* %28, align 4
  %101 = load i32, i32* %27, align 4
  %102 = icmp sge i32 %101, 0
  br i1 %102, label %103, label %162

103:                                              ; preds = %94
  %104 = load i32, i32* %27, align 4
  %105 = load i32, i32* @width, align 4
  %106 = sub nsw i32 %105, 16
  %107 = shl i32 %106, 1
  %108 = icmp sle i32 %104, %107
  br i1 %108, label %109, label %162

109:                                              ; preds = %103
  %110 = load i32, i32* %28, align 4
  %111 = icmp sge i32 %110, 0
  br i1 %111, label %112, label %162

112:                                              ; preds = %109
  %113 = load i32, i32* %28, align 4
  %114 = load i32, i32* @height2, align 4
  %115 = sub nsw i32 %114, 16
  %116 = shl i32 %115, 1
  %117 = icmp sle i32 %113, %116
  br i1 %117, label %118, label %162

118:                                              ; preds = %112
  %119 = load i8*, i8** %23, align 8
  %120 = load i32, i32* %17, align 4
  %121 = ashr i32 %120, 1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %119, i64 %122
  %124 = load i32, i32* @width2, align 4
  %125 = load i32, i32* %18, align 4
  %126 = ashr i32 %125, 1
  %127 = mul nsw i32 %124, %126
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8, i8* %123, i64 %128
  %130 = load i8*, i8** %24, align 8
  %131 = load i32, i32* %27, align 4
  %132 = ashr i32 %131, 1
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8, i8* %130, i64 %133
  %135 = load i32, i32* @width2, align 4
  %136 = load i32, i32* %28, align 4
  %137 = ashr i32 %136, 1
  %138 = mul nsw i32 %135, %137
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i8, i8* %134, i64 %139
  %141 = load i8*, i8** %14, align 8
  %142 = load i32, i32* @width2, align 4
  %143 = load i32, i32* %17, align 4
  %144 = and i32 %143, 1
  %145 = load i32, i32* %18, align 4
  %146 = and i32 %145, 1
  %147 = load i32, i32* %27, align 4
  %148 = and i32 %147, 1
  %149 = load i32, i32* %28, align 4
  %150 = and i32 %149, 1
  %151 = call i32 @bdist2(i8* %129, i8* %140, i8* %141, i32 %142, i32 %144, i32 %146, i32 %148, i32 %150, i32 16)
  store i32 %151, i32* %40, align 4
  %152 = load i32, i32* %40, align 4
  %153 = load i32, i32* %39, align 4
  %154 = icmp slt i32 %152, %153
  br i1 %154, label %155, label %161

155:                                              ; preds = %118
  %156 = load i32, i32* %27, align 4
  store i32 %156, i32* %35, align 4
  %157 = load i32, i32* %28, align 4
  store i32 %157, i32* %36, align 4
  %158 = load i32, i32* %29, align 4
  store i32 %158, i32* %37, align 4
  %159 = load i32, i32* %30, align 4
  store i32 %159, i32* %38, align 4
  %160 = load i32, i32* %40, align 4
  store i32 %160, i32* %39, align 4
  br label %161

161:                                              ; preds = %155, %118
  br label %162

162:                                              ; preds = %161, %112, %109, %103, %94
  br label %163

163:                                              ; preds = %162
  %164 = load i32, i32* %29, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %29, align 4
  br label %91

166:                                              ; preds = %91
  br label %167

167:                                              ; preds = %166
  %168 = load i32, i32* %30, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %30, align 4
  br label %87

170:                                              ; preds = %87
  %171 = load i8*, i8** %23, align 8
  %172 = load i32, i32* %17, align 4
  %173 = ashr i32 %172, 1
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i8, i8* %171, i64 %174
  %176 = load i32, i32* @width2, align 4
  %177 = load i32, i32* %18, align 4
  %178 = ashr i32 %177, 1
  %179 = mul nsw i32 %176, %178
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8, i8* %175, i64 %180
  %182 = load i8*, i8** %24, align 8
  %183 = load i32, i32* %35, align 4
  %184 = ashr i32 %183, 1
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds i8, i8* %182, i64 %185
  %187 = load i32, i32* @width2, align 4
  %188 = load i32, i32* %36, align 4
  %189 = ashr i32 %188, 1
  %190 = mul nsw i32 %187, %189
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i8, i8* %186, i64 %191
  %193 = load i8*, i8** %14, align 8
  %194 = load i32, i32* @width2, align 4
  %195 = load i32, i32* %17, align 4
  %196 = and i32 %195, 1
  %197 = load i32, i32* %18, align 4
  %198 = and i32 %197, 1
  %199 = load i32, i32* %35, align 4
  %200 = and i32 %199, 1
  %201 = load i32, i32* %36, align 4
  %202 = and i32 %201, 1
  %203 = call i32 @bdist1(i8* %181, i8* %192, i8* %193, i32 %194, i32 %196, i32 %198, i32 %200, i32 %202, i32 16)
  %204 = load i32*, i32** %21, align 8
  store i32 %203, i32* %204, align 4
  %205 = load i32, i32* %37, align 4
  %206 = load i32*, i32** %19, align 8
  store i32 %205, i32* %206, align 4
  %207 = load i32, i32* %38, align 4
  %208 = load i32*, i32** %20, align 8
  store i32 %207, i32* %208, align 4
  %209 = load i32, i32* %39, align 4
  %210 = load i32*, i32** %22, align 8
  store i32 %209, i32* %210, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dist2(i8* %0, i8* %1, i32 %2, i32 %3, i32 %4, i32 %5) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i8* %1, i8** %8, align 8
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  store i32 0, i32* %18, align 4
  %20 = load i8*, i8** %7, align 8
  store i8* %20, i8** %13, align 8
  %21 = load i8*, i8** %8, align 8
  store i8* %21, i8** %15, align 8
  %22 = load i32, i32* %10, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %71, label %24

24:                                               ; preds = %6
  %25 = load i32, i32* %11, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %71, label %27

27:                                               ; preds = %24
  store i32 0, i32* %17, align 4
  br label %28

28:                                               ; preds = %67, %27
  %29 = load i32, i32* %17, align 4
  %30 = load i32, i32* %12, align 4
  %31 = icmp slt i32 %29, %30
  br i1 %31, label %32, label %70

32:                                               ; preds = %28
  store i32 0, i32* %16, align 4
  br label %33

33:                                               ; preds = %55, %32
  %34 = load i32, i32* %16, align 4
  %35 = icmp slt i32 %34, 16
  br i1 %35, label %36, label %58

36:                                               ; preds = %33
  %37 = load i8*, i8** %13, align 8
  %38 = load i32, i32* %16, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %37, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = load i8*, i8** %15, align 8
  %44 = load i32, i32* %16, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = sub nsw i32 %42, %48
  store i32 %49, i32* %19, align 4
  %50 = load i32, i32* %19, align 4
  %51 = load i32, i32* %19, align 4
  %52 = mul nsw i32 %50, %51
  %53 = load i32, i32* %18, align 4
  %54 = add nsw i32 %53, %52
  store i32 %54, i32* %18, align 4
  br label %55

55:                                               ; preds = %36
  %56 = load i32, i32* %16, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %16, align 4
  br label %33

58:                                               ; preds = %33
  %59 = load i32, i32* %9, align 4
  %60 = load i8*, i8** %13, align 8
  %61 = sext i32 %59 to i64
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  store i8* %62, i8** %13, align 8
  %63 = load i32, i32* %9, align 4
  %64 = load i8*, i8** %15, align 8
  %65 = sext i32 %63 to i64
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  store i8* %66, i8** %15, align 8
  br label %67

67:                                               ; preds = %58
  %68 = load i32, i32* %17, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %17, align 4
  br label %28

70:                                               ; preds = %28
  br label %271

71:                                               ; preds = %24, %6
  %72 = load i32, i32* %10, align 4
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %131

74:                                               ; preds = %71
  %75 = load i32, i32* %11, align 4
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %131, label %77

77:                                               ; preds = %74
  store i32 0, i32* %17, align 4
  br label %78

78:                                               ; preds = %127, %77
  %79 = load i32, i32* %17, align 4
  %80 = load i32, i32* %12, align 4
  %81 = icmp slt i32 %79, %80
  br i1 %81, label %82, label %130

82:                                               ; preds = %78
  store i32 0, i32* %16, align 4
  br label %83

83:                                               ; preds = %115, %82
  %84 = load i32, i32* %16, align 4
  %85 = icmp slt i32 %84, 16
  br i1 %85, label %86, label %118

86:                                               ; preds = %83
  %87 = load i8*, i8** %13, align 8
  %88 = load i32, i32* %16, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %87, i64 %89
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = load i8*, i8** %13, align 8
  %94 = load i32, i32* %16, align 4
  %95 = add nsw i32 %94, 1
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %93, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = add nsw i32 %92, %99
  %101 = add nsw i32 %100, 1
  %102 = lshr i32 %101, 1
  %103 = load i8*, i8** %15, align 8
  %104 = load i32, i32* %16, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, i8* %103, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = sub i32 %102, %108
  store i32 %109, i32* %19, align 4
  %110 = load i32, i32* %19, align 4
  %111 = load i32, i32* %19, align 4
  %112 = mul nsw i32 %110, %111
  %113 = load i32, i32* %18, align 4
  %114 = add nsw i32 %113, %112
  store i32 %114, i32* %18, align 4
  br label %115

115:                                              ; preds = %86
  %116 = load i32, i32* %16, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %16, align 4
  br label %83

118:                                              ; preds = %83
  %119 = load i32, i32* %9, align 4
  %120 = load i8*, i8** %13, align 8
  %121 = sext i32 %119 to i64
  %122 = getelementptr inbounds i8, i8* %120, i64 %121
  store i8* %122, i8** %13, align 8
  %123 = load i32, i32* %9, align 4
  %124 = load i8*, i8** %15, align 8
  %125 = sext i32 %123 to i64
  %126 = getelementptr inbounds i8, i8* %124, i64 %125
  store i8* %126, i8** %15, align 8
  br label %127

127:                                              ; preds = %118
  %128 = load i32, i32* %17, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %17, align 4
  br label %78

130:                                              ; preds = %78
  br label %270

131:                                              ; preds = %74, %71
  %132 = load i32, i32* %10, align 4
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %195, label %134

134:                                              ; preds = %131
  %135 = load i32, i32* %11, align 4
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %137, label %195

137:                                              ; preds = %134
  %138 = load i8*, i8** %13, align 8
  %139 = load i32, i32* %9, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8, i8* %138, i64 %140
  store i8* %141, i8** %14, align 8
  store i32 0, i32* %17, align 4
  br label %142

142:                                              ; preds = %191, %137
  %143 = load i32, i32* %17, align 4
  %144 = load i32, i32* %12, align 4
  %145 = icmp slt i32 %143, %144
  br i1 %145, label %146, label %194

146:                                              ; preds = %142
  store i32 0, i32* %16, align 4
  br label %147

147:                                              ; preds = %178, %146
  %148 = load i32, i32* %16, align 4
  %149 = icmp slt i32 %148, 16
  br i1 %149, label %150, label %181

150:                                              ; preds = %147
  %151 = load i8*, i8** %13, align 8
  %152 = load i32, i32* %16, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* %151, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  %157 = load i8*, i8** %14, align 8
  %158 = load i32, i32* %16, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i8, i8* %157, i64 %159
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  %163 = add nsw i32 %156, %162
  %164 = add nsw i32 %163, 1
  %165 = lshr i32 %164, 1
  %166 = load i8*, i8** %15, align 8
  %167 = load i32, i32* %16, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i8, i8* %166, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = sub i32 %165, %171
  store i32 %172, i32* %19, align 4
  %173 = load i32, i32* %19, align 4
  %174 = load i32, i32* %19, align 4
  %175 = mul nsw i32 %173, %174
  %176 = load i32, i32* %18, align 4
  %177 = add nsw i32 %176, %175
  store i32 %177, i32* %18, align 4
  br label %178

178:                                              ; preds = %150
  %179 = load i32, i32* %16, align 4
  %180 = add nsw i32 %179, 1
  store i32 %180, i32* %16, align 4
  br label %147

181:                                              ; preds = %147
  %182 = load i8*, i8** %14, align 8
  store i8* %182, i8** %13, align 8
  %183 = load i32, i32* %9, align 4
  %184 = load i8*, i8** %14, align 8
  %185 = sext i32 %183 to i64
  %186 = getelementptr inbounds i8, i8* %184, i64 %185
  store i8* %186, i8** %14, align 8
  %187 = load i32, i32* %9, align 4
  %188 = load i8*, i8** %15, align 8
  %189 = sext i32 %187 to i64
  %190 = getelementptr inbounds i8, i8* %188, i64 %189
  store i8* %190, i8** %15, align 8
  br label %191

191:                                              ; preds = %181
  %192 = load i32, i32* %17, align 4
  %193 = add nsw i32 %192, 1
  store i32 %193, i32* %17, align 4
  br label %142

194:                                              ; preds = %142
  br label %269

195:                                              ; preds = %134, %131
  %196 = load i8*, i8** %13, align 8
  %197 = load i32, i32* %9, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i8, i8* %196, i64 %198
  store i8* %199, i8** %14, align 8
  store i32 0, i32* %17, align 4
  br label %200

200:                                              ; preds = %265, %195
  %201 = load i32, i32* %17, align 4
  %202 = load i32, i32* %12, align 4
  %203 = icmp slt i32 %201, %202
  br i1 %203, label %204, label %268

204:                                              ; preds = %200
  store i32 0, i32* %16, align 4
  br label %205

205:                                              ; preds = %252, %204
  %206 = load i32, i32* %16, align 4
  %207 = icmp slt i32 %206, 16
  br i1 %207, label %208, label %255

208:                                              ; preds = %205
  %209 = load i8*, i8** %13, align 8
  %210 = load i32, i32* %16, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i8, i8* %209, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = load i8*, i8** %13, align 8
  %216 = load i32, i32* %16, align 4
  %217 = add nsw i32 %216, 1
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds i8, i8* %215, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = add nsw i32 %214, %221
  %223 = load i8*, i8** %14, align 8
  %224 = load i32, i32* %16, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds i8, i8* %223, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = add nsw i32 %222, %228
  %230 = load i8*, i8** %14, align 8
  %231 = load i32, i32* %16, align 4
  %232 = add nsw i32 %231, 1
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds i8, i8* %230, i64 %233
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i32
  %237 = add nsw i32 %229, %236
  %238 = add nsw i32 %237, 2
  %239 = lshr i32 %238, 2
  %240 = load i8*, i8** %15, align 8
  %241 = load i32, i32* %16, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds i8, i8* %240, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = zext i8 %244 to i32
  %246 = sub i32 %239, %245
  store i32 %246, i32* %19, align 4
  %247 = load i32, i32* %19, align 4
  %248 = load i32, i32* %19, align 4
  %249 = mul nsw i32 %247, %248
  %250 = load i32, i32* %18, align 4
  %251 = add nsw i32 %250, %249
  store i32 %251, i32* %18, align 4
  br label %252

252:                                              ; preds = %208
  %253 = load i32, i32* %16, align 4
  %254 = add nsw i32 %253, 1
  store i32 %254, i32* %16, align 4
  br label %205

255:                                              ; preds = %205
  %256 = load i8*, i8** %14, align 8
  store i8* %256, i8** %13, align 8
  %257 = load i32, i32* %9, align 4
  %258 = load i8*, i8** %14, align 8
  %259 = sext i32 %257 to i64
  %260 = getelementptr inbounds i8, i8* %258, i64 %259
  store i8* %260, i8** %14, align 8
  %261 = load i32, i32* %9, align 4
  %262 = load i8*, i8** %15, align 8
  %263 = sext i32 %261 to i64
  %264 = getelementptr inbounds i8, i8* %262, i64 %263
  store i8* %264, i8** %15, align 8
  br label %265

265:                                              ; preds = %255
  %266 = load i32, i32* %17, align 4
  %267 = add nsw i32 %266, 1
  store i32 %267, i32* %17, align 4
  br label %200

268:                                              ; preds = %200
  br label %269

269:                                              ; preds = %268, %194
  br label %270

270:                                              ; preds = %269, %130
  br label %271

271:                                              ; preds = %270, %70
  %272 = load i32, i32* %18, align 4
  ret i32 %272
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @bdist1(i8* %0, i8* %1, i8* %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8) #0 {
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  store i8* %0, i8** %10, align 8
  store i8* %1, i8** %11, align 8
  store i8* %2, i8** %12, align 8
  store i32 %3, i32* %13, align 4
  store i32 %4, i32* %14, align 4
  store i32 %5, i32* %15, align 4
  store i32 %6, i32* %16, align 4
  store i32 %7, i32* %17, align 4
  store i32 %8, i32* %18, align 4
  %29 = load i8*, i8** %10, align 8
  %30 = load i32, i32* %14, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %29, i64 %31
  store i8* %32, i8** %19, align 8
  %33 = load i8*, i8** %10, align 8
  %34 = load i32, i32* %13, align 4
  %35 = load i32, i32* %15, align 4
  %36 = mul nsw i32 %34, %35
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %33, i64 %37
  store i8* %38, i8** %20, align 8
  %39 = load i8*, i8** %20, align 8
  %40 = load i32, i32* %14, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %39, i64 %41
  store i8* %42, i8** %21, align 8
  %43 = load i8*, i8** %11, align 8
  %44 = load i32, i32* %16, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  store i8* %46, i8** %22, align 8
  %47 = load i8*, i8** %11, align 8
  %48 = load i32, i32* %13, align 4
  %49 = load i32, i32* %17, align 4
  %50 = mul nsw i32 %48, %49
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %47, i64 %51
  store i8* %52, i8** %23, align 8
  %53 = load i8*, i8** %23, align 8
  %54 = load i32, i32* %16, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %53, i64 %55
  store i8* %56, i8** %24, align 8
  store i32 0, i32* %27, align 4
  store i32 0, i32* %26, align 4
  br label %57

57:                                               ; preds = %176, %9
  %58 = load i32, i32* %26, align 4
  %59 = load i32, i32* %18, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %179

61:                                               ; preds = %57
  store i32 0, i32* %25, align 4
  br label %62

62:                                               ; preds = %127, %61
  %63 = load i32, i32* %25, align 4
  %64 = icmp slt i32 %63, 16
  br i1 %64, label %65, label %130

65:                                               ; preds = %62
  %66 = load i8*, i8** %10, align 8
  %67 = getelementptr inbounds i8, i8* %66, i32 1
  store i8* %67, i8** %10, align 8
  %68 = load i8, i8* %66, align 1
  %69 = zext i8 %68 to i32
  %70 = load i8*, i8** %19, align 8
  %71 = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %71, i8** %19, align 8
  %72 = load i8, i8* %70, align 1
  %73 = zext i8 %72 to i32
  %74 = add nsw i32 %69, %73
  %75 = load i8*, i8** %20, align 8
  %76 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %76, i8** %20, align 8
  %77 = load i8, i8* %75, align 1
  %78 = zext i8 %77 to i32
  %79 = add nsw i32 %74, %78
  %80 = load i8*, i8** %21, align 8
  %81 = getelementptr inbounds i8, i8* %80, i32 1
  store i8* %81, i8** %21, align 8
  %82 = load i8, i8* %80, align 1
  %83 = zext i8 %82 to i32
  %84 = add nsw i32 %79, %83
  %85 = add nsw i32 %84, 2
  %86 = lshr i32 %85, 2
  %87 = load i8*, i8** %11, align 8
  %88 = getelementptr inbounds i8, i8* %87, i32 1
  store i8* %88, i8** %11, align 8
  %89 = load i8, i8* %87, align 1
  %90 = zext i8 %89 to i32
  %91 = load i8*, i8** %22, align 8
  %92 = getelementptr inbounds i8, i8* %91, i32 1
  store i8* %92, i8** %22, align 8
  %93 = load i8, i8* %91, align 1
  %94 = zext i8 %93 to i32
  %95 = add nsw i32 %90, %94
  %96 = load i8*, i8** %23, align 8
  %97 = getelementptr inbounds i8, i8* %96, i32 1
  store i8* %97, i8** %23, align 8
  %98 = load i8, i8* %96, align 1
  %99 = zext i8 %98 to i32
  %100 = add nsw i32 %95, %99
  %101 = load i8*, i8** %24, align 8
  %102 = getelementptr inbounds i8, i8* %101, i32 1
  store i8* %102, i8** %24, align 8
  %103 = load i8, i8* %101, align 1
  %104 = zext i8 %103 to i32
  %105 = add nsw i32 %100, %104
  %106 = add nsw i32 %105, 2
  %107 = lshr i32 %106, 2
  %108 = add i32 %86, %107
  %109 = add i32 %108, 1
  %110 = lshr i32 %109, 1
  %111 = load i8*, i8** %12, align 8
  %112 = getelementptr inbounds i8, i8* %111, i32 1
  store i8* %112, i8** %12, align 8
  %113 = load i8, i8* %111, align 1
  %114 = zext i8 %113 to i32
  %115 = sub i32 %110, %114
  store i32 %115, i32* %28, align 4
  %116 = load i32, i32* %28, align 4
  %117 = icmp sge i32 %116, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %65
  %119 = load i32, i32* %28, align 4
  %120 = load i32, i32* %27, align 4
  %121 = add nsw i32 %120, %119
  store i32 %121, i32* %27, align 4
  br label %126

122:                                              ; preds = %65
  %123 = load i32, i32* %28, align 4
  %124 = load i32, i32* %27, align 4
  %125 = sub nsw i32 %124, %123
  store i32 %125, i32* %27, align 4
  br label %126

126:                                              ; preds = %122, %118
  br label %127

127:                                              ; preds = %126
  %128 = load i32, i32* %25, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %25, align 4
  br label %62

130:                                              ; preds = %62
  %131 = load i32, i32* %13, align 4
  %132 = sub nsw i32 %131, 16
  %133 = load i8*, i8** %12, align 8
  %134 = sext i32 %132 to i64
  %135 = getelementptr inbounds i8, i8* %133, i64 %134
  store i8* %135, i8** %12, align 8
  %136 = load i32, i32* %13, align 4
  %137 = sub nsw i32 %136, 16
  %138 = load i8*, i8** %10, align 8
  %139 = sext i32 %137 to i64
  %140 = getelementptr inbounds i8, i8* %138, i64 %139
  store i8* %140, i8** %10, align 8
  %141 = load i32, i32* %13, align 4
  %142 = sub nsw i32 %141, 16
  %143 = load i8*, i8** %19, align 8
  %144 = sext i32 %142 to i64
  %145 = getelementptr inbounds i8, i8* %143, i64 %144
  store i8* %145, i8** %19, align 8
  %146 = load i32, i32* %13, align 4
  %147 = sub nsw i32 %146, 16
  %148 = load i8*, i8** %20, align 8
  %149 = sext i32 %147 to i64
  %150 = getelementptr inbounds i8, i8* %148, i64 %149
  store i8* %150, i8** %20, align 8
  %151 = load i32, i32* %13, align 4
  %152 = sub nsw i32 %151, 16
  %153 = load i8*, i8** %21, align 8
  %154 = sext i32 %152 to i64
  %155 = getelementptr inbounds i8, i8* %153, i64 %154
  store i8* %155, i8** %21, align 8
  %156 = load i32, i32* %13, align 4
  %157 = sub nsw i32 %156, 16
  %158 = load i8*, i8** %11, align 8
  %159 = sext i32 %157 to i64
  %160 = getelementptr inbounds i8, i8* %158, i64 %159
  store i8* %160, i8** %11, align 8
  %161 = load i32, i32* %13, align 4
  %162 = sub nsw i32 %161, 16
  %163 = load i8*, i8** %22, align 8
  %164 = sext i32 %162 to i64
  %165 = getelementptr inbounds i8, i8* %163, i64 %164
  store i8* %165, i8** %22, align 8
  %166 = load i32, i32* %13, align 4
  %167 = sub nsw i32 %166, 16
  %168 = load i8*, i8** %23, align 8
  %169 = sext i32 %167 to i64
  %170 = getelementptr inbounds i8, i8* %168, i64 %169
  store i8* %170, i8** %23, align 8
  %171 = load i32, i32* %13, align 4
  %172 = sub nsw i32 %171, 16
  %173 = load i8*, i8** %24, align 8
  %174 = sext i32 %172 to i64
  %175 = getelementptr inbounds i8, i8* %173, i64 %174
  store i8* %175, i8** %24, align 8
  br label %176

176:                                              ; preds = %130
  %177 = load i32, i32* %26, align 4
  %178 = add nsw i32 %177, 1
  store i32 %178, i32* %26, align 4
  br label %57

179:                                              ; preds = %57
  %180 = load i32, i32* %27, align 4
  ret i32 %180
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @bdist2(i8* %0, i8* %1, i8* %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8) #0 {
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  store i8* %0, i8** %10, align 8
  store i8* %1, i8** %11, align 8
  store i8* %2, i8** %12, align 8
  store i32 %3, i32* %13, align 4
  store i32 %4, i32* %14, align 4
  store i32 %5, i32* %15, align 4
  store i32 %6, i32* %16, align 4
  store i32 %7, i32* %17, align 4
  store i32 %8, i32* %18, align 4
  %29 = load i8*, i8** %10, align 8
  %30 = load i32, i32* %14, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %29, i64 %31
  store i8* %32, i8** %19, align 8
  %33 = load i8*, i8** %10, align 8
  %34 = load i32, i32* %13, align 4
  %35 = load i32, i32* %15, align 4
  %36 = mul nsw i32 %34, %35
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %33, i64 %37
  store i8* %38, i8** %20, align 8
  %39 = load i8*, i8** %20, align 8
  %40 = load i32, i32* %14, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %39, i64 %41
  store i8* %42, i8** %21, align 8
  %43 = load i8*, i8** %11, align 8
  %44 = load i32, i32* %16, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  store i8* %46, i8** %22, align 8
  %47 = load i8*, i8** %11, align 8
  %48 = load i32, i32* %13, align 4
  %49 = load i32, i32* %17, align 4
  %50 = mul nsw i32 %48, %49
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %47, i64 %51
  store i8* %52, i8** %23, align 8
  %53 = load i8*, i8** %23, align 8
  %54 = load i32, i32* %16, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %53, i64 %55
  store i8* %56, i8** %24, align 8
  store i32 0, i32* %27, align 4
  store i32 0, i32* %26, align 4
  br label %57

57:                                               ; preds = %170, %9
  %58 = load i32, i32* %26, align 4
  %59 = load i32, i32* %18, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %173

61:                                               ; preds = %57
  store i32 0, i32* %25, align 4
  br label %62

62:                                               ; preds = %121, %61
  %63 = load i32, i32* %25, align 4
  %64 = icmp slt i32 %63, 16
  br i1 %64, label %65, label %124

65:                                               ; preds = %62
  %66 = load i8*, i8** %10, align 8
  %67 = getelementptr inbounds i8, i8* %66, i32 1
  store i8* %67, i8** %10, align 8
  %68 = load i8, i8* %66, align 1
  %69 = zext i8 %68 to i32
  %70 = load i8*, i8** %19, align 8
  %71 = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %71, i8** %19, align 8
  %72 = load i8, i8* %70, align 1
  %73 = zext i8 %72 to i32
  %74 = add nsw i32 %69, %73
  %75 = load i8*, i8** %20, align 8
  %76 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %76, i8** %20, align 8
  %77 = load i8, i8* %75, align 1
  %78 = zext i8 %77 to i32
  %79 = add nsw i32 %74, %78
  %80 = load i8*, i8** %21, align 8
  %81 = getelementptr inbounds i8, i8* %80, i32 1
  store i8* %81, i8** %21, align 8
  %82 = load i8, i8* %80, align 1
  %83 = zext i8 %82 to i32
  %84 = add nsw i32 %79, %83
  %85 = add nsw i32 %84, 2
  %86 = lshr i32 %85, 2
  %87 = load i8*, i8** %11, align 8
  %88 = getelementptr inbounds i8, i8* %87, i32 1
  store i8* %88, i8** %11, align 8
  %89 = load i8, i8* %87, align 1
  %90 = zext i8 %89 to i32
  %91 = load i8*, i8** %22, align 8
  %92 = getelementptr inbounds i8, i8* %91, i32 1
  store i8* %92, i8** %22, align 8
  %93 = load i8, i8* %91, align 1
  %94 = zext i8 %93 to i32
  %95 = add nsw i32 %90, %94
  %96 = load i8*, i8** %23, align 8
  %97 = getelementptr inbounds i8, i8* %96, i32 1
  store i8* %97, i8** %23, align 8
  %98 = load i8, i8* %96, align 1
  %99 = zext i8 %98 to i32
  %100 = add nsw i32 %95, %99
  %101 = load i8*, i8** %24, align 8
  %102 = getelementptr inbounds i8, i8* %101, i32 1
  store i8* %102, i8** %24, align 8
  %103 = load i8, i8* %101, align 1
  %104 = zext i8 %103 to i32
  %105 = add nsw i32 %100, %104
  %106 = add nsw i32 %105, 2
  %107 = lshr i32 %106, 2
  %108 = add i32 %86, %107
  %109 = add i32 %108, 1
  %110 = lshr i32 %109, 1
  %111 = load i8*, i8** %12, align 8
  %112 = getelementptr inbounds i8, i8* %111, i32 1
  store i8* %112, i8** %12, align 8
  %113 = load i8, i8* %111, align 1
  %114 = zext i8 %113 to i32
  %115 = sub i32 %110, %114
  store i32 %115, i32* %28, align 4
  %116 = load i32, i32* %28, align 4
  %117 = load i32, i32* %28, align 4
  %118 = mul nsw i32 %116, %117
  %119 = load i32, i32* %27, align 4
  %120 = add nsw i32 %119, %118
  store i32 %120, i32* %27, align 4
  br label %121

121:                                              ; preds = %65
  %122 = load i32, i32* %25, align 4
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* %25, align 4
  br label %62

124:                                              ; preds = %62
  %125 = load i32, i32* %13, align 4
  %126 = sub nsw i32 %125, 16
  %127 = load i8*, i8** %12, align 8
  %128 = sext i32 %126 to i64
  %129 = getelementptr inbounds i8, i8* %127, i64 %128
  store i8* %129, i8** %12, align 8
  %130 = load i32, i32* %13, align 4
  %131 = sub nsw i32 %130, 16
  %132 = load i8*, i8** %10, align 8
  %133 = sext i32 %131 to i64
  %134 = getelementptr inbounds i8, i8* %132, i64 %133
  store i8* %134, i8** %10, align 8
  %135 = load i32, i32* %13, align 4
  %136 = sub nsw i32 %135, 16
  %137 = load i8*, i8** %19, align 8
  %138 = sext i32 %136 to i64
  %139 = getelementptr inbounds i8, i8* %137, i64 %138
  store i8* %139, i8** %19, align 8
  %140 = load i32, i32* %13, align 4
  %141 = sub nsw i32 %140, 16
  %142 = load i8*, i8** %20, align 8
  %143 = sext i32 %141 to i64
  %144 = getelementptr inbounds i8, i8* %142, i64 %143
  store i8* %144, i8** %20, align 8
  %145 = load i32, i32* %13, align 4
  %146 = sub nsw i32 %145, 16
  %147 = load i8*, i8** %21, align 8
  %148 = sext i32 %146 to i64
  %149 = getelementptr inbounds i8, i8* %147, i64 %148
  store i8* %149, i8** %21, align 8
  %150 = load i32, i32* %13, align 4
  %151 = sub nsw i32 %150, 16
  %152 = load i8*, i8** %11, align 8
  %153 = sext i32 %151 to i64
  %154 = getelementptr inbounds i8, i8* %152, i64 %153
  store i8* %154, i8** %11, align 8
  %155 = load i32, i32* %13, align 4
  %156 = sub nsw i32 %155, 16
  %157 = load i8*, i8** %22, align 8
  %158 = sext i32 %156 to i64
  %159 = getelementptr inbounds i8, i8* %157, i64 %158
  store i8* %159, i8** %22, align 8
  %160 = load i32, i32* %13, align 4
  %161 = sub nsw i32 %160, 16
  %162 = load i8*, i8** %23, align 8
  %163 = sext i32 %161 to i64
  %164 = getelementptr inbounds i8, i8* %162, i64 %163
  store i8* %164, i8** %23, align 8
  %165 = load i32, i32* %13, align 4
  %166 = sub nsw i32 %165, 16
  %167 = load i8*, i8** %24, align 8
  %168 = sext i32 %166 to i64
  %169 = getelementptr inbounds i8, i8* %167, i64 %168
  store i8* %169, i8** %24, align 8
  br label %170

170:                                              ; preds = %124
  %171 = load i32, i32* %26, align 4
  %172 = add nsw i32 %171, 1
  store i32 %172, i32* %26, align 4
  br label %57

173:                                              ; preds = %57
  %174 = load i32, i32* %27, align 4
  ret i32 %174
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fullsearch(i8* %0, i8* %1, i8* %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, i32* %11, i32* %12) #0 {
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32*, align 8
  %26 = alloca i32*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  store i8* %0, i8** %14, align 8
  store i8* %1, i8** %15, align 8
  store i8* %2, i8** %16, align 8
  store i32 %3, i32* %17, align 4
  store i32 %4, i32* %18, align 4
  store i32 %5, i32* %19, align 4
  store i32 %6, i32* %20, align 4
  store i32 %7, i32* %21, align 4
  store i32 %8, i32* %22, align 4
  store i32 %9, i32* %23, align 4
  store i32 %10, i32* %24, align 4
  store i32* %11, i32** %25, align 8
  store i32* %12, i32** %26, align 8
  %40 = load i32, i32* %18, align 4
  %41 = load i32, i32* %20, align 4
  %42 = sub nsw i32 %40, %41
  store i32 %42, i32* %31, align 4
  %43 = load i32, i32* %18, align 4
  %44 = load i32, i32* %20, align 4
  %45 = add nsw i32 %43, %44
  store i32 %45, i32* %32, align 4
  %46 = load i32, i32* %31, align 4
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %13
  store i32 0, i32* %31, align 4
  br label %49

49:                                               ; preds = %48, %13
  %50 = load i32, i32* %32, align 4
  %51 = load i32, i32* %23, align 4
  %52 = sub nsw i32 %51, 16
  %53 = icmp sgt i32 %50, %52
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = load i32, i32* %23, align 4
  %56 = sub nsw i32 %55, 16
  store i32 %56, i32* %32, align 4
  br label %57

57:                                               ; preds = %54, %49
  %58 = load i32, i32* %19, align 4
  %59 = load i32, i32* %21, align 4
  %60 = sub nsw i32 %58, %59
  store i32 %60, i32* %33, align 4
  %61 = load i32, i32* %19, align 4
  %62 = load i32, i32* %21, align 4
  %63 = add nsw i32 %61, %62
  store i32 %63, i32* %34, align 4
  %64 = load i32, i32* %33, align 4
  %65 = icmp slt i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %57
  store i32 0, i32* %33, align 4
  br label %67

67:                                               ; preds = %66, %57
  %68 = load i32, i32* %34, align 4
  %69 = load i32, i32* %24, align 4
  %70 = load i32, i32* %22, align 4
  %71 = sub nsw i32 %69, %70
  %72 = icmp sgt i32 %68, %71
  br i1 %72, label %73, label %77

73:                                               ; preds = %67
  %74 = load i32, i32* %24, align 4
  %75 = load i32, i32* %22, align 4
  %76 = sub nsw i32 %74, %75
  store i32 %76, i32* %34, align 4
  br label %77

77:                                               ; preds = %73, %67
  %78 = load i32, i32* %18, align 4
  store i32 %78, i32* %29, align 4
  %79 = load i32, i32* %19, align 4
  store i32 %79, i32* %30, align 4
  %80 = load i8*, i8** %14, align 8
  %81 = load i32, i32* %29, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %80, i64 %82
  %84 = load i32, i32* %17, align 4
  %85 = load i32, i32* %30, align 4
  %86 = mul nsw i32 %84, %85
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %83, i64 %87
  %89 = load i8*, i8** %16, align 8
  %90 = load i32, i32* %17, align 4
  %91 = load i32, i32* %22, align 4
  %92 = call i32 @dist1(i8* %88, i8* %89, i32 %90, i32 0, i32 0, i32 %91, i32 65536)
  store i32 %92, i32* %36, align 4
  %93 = load i32, i32* %20, align 4
  %94 = load i32, i32* %21, align 4
  %95 = icmp sgt i32 %93, %94
  br i1 %95, label %96, label %98

96:                                               ; preds = %77
  %97 = load i32, i32* %20, align 4
  br label %100

98:                                               ; preds = %77
  %99 = load i32, i32* %21, align 4
  br label %100

100:                                              ; preds = %98, %96
  %101 = phi i32 [ %97, %96 ], [ %99, %98 ]
  store i32 %101, i32* %39, align 4
  store i32 1, i32* %38, align 4
  br label %102

102:                                              ; preds = %191, %100
  %103 = load i32, i32* %38, align 4
  %104 = load i32, i32* %39, align 4
  %105 = icmp sle i32 %103, %104
  br i1 %105, label %106, label %194

106:                                              ; preds = %102
  %107 = load i32, i32* %18, align 4
  %108 = load i32, i32* %38, align 4
  %109 = sub nsw i32 %107, %108
  store i32 %109, i32* %27, align 4
  %110 = load i32, i32* %19, align 4
  %111 = load i32, i32* %38, align 4
  %112 = sub nsw i32 %110, %111
  store i32 %112, i32* %28, align 4
  store i32 0, i32* %37, align 4
  br label %113

113:                                              ; preds = %187, %106
  %114 = load i32, i32* %37, align 4
  %115 = load i32, i32* %38, align 4
  %116 = mul nsw i32 8, %115
  %117 = icmp slt i32 %114, %116
  br i1 %117, label %118, label %190

118:                                              ; preds = %113
  %119 = load i32, i32* %27, align 4
  %120 = load i32, i32* %31, align 4
  %121 = icmp sge i32 %119, %120
  br i1 %121, label %122, label %157

122:                                              ; preds = %118
  %123 = load i32, i32* %27, align 4
  %124 = load i32, i32* %32, align 4
  %125 = icmp sle i32 %123, %124
  br i1 %125, label %126, label %157

126:                                              ; preds = %122
  %127 = load i32, i32* %28, align 4
  %128 = load i32, i32* %33, align 4
  %129 = icmp sge i32 %127, %128
  br i1 %129, label %130, label %157

130:                                              ; preds = %126
  %131 = load i32, i32* %28, align 4
  %132 = load i32, i32* %34, align 4
  %133 = icmp sle i32 %131, %132
  br i1 %133, label %134, label %157

134:                                              ; preds = %130
  %135 = load i8*, i8** %14, align 8
  %136 = load i32, i32* %27, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i8, i8* %135, i64 %137
  %139 = load i32, i32* %17, align 4
  %140 = load i32, i32* %28, align 4
  %141 = mul nsw i32 %139, %140
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %138, i64 %142
  %144 = load i8*, i8** %16, align 8
  %145 = load i32, i32* %17, align 4
  %146 = load i32, i32* %22, align 4
  %147 = load i32, i32* %36, align 4
  %148 = call i32 @dist1(i8* %143, i8* %144, i32 %145, i32 0, i32 0, i32 %146, i32 %147)
  store i32 %148, i32* %35, align 4
  %149 = load i32, i32* %35, align 4
  %150 = load i32, i32* %36, align 4
  %151 = icmp slt i32 %149, %150
  br i1 %151, label %152, label %156

152:                                              ; preds = %134
  %153 = load i32, i32* %35, align 4
  store i32 %153, i32* %36, align 4
  %154 = load i32, i32* %27, align 4
  store i32 %154, i32* %29, align 4
  %155 = load i32, i32* %28, align 4
  store i32 %155, i32* %30, align 4
  br label %156

156:                                              ; preds = %152, %134
  br label %157

157:                                              ; preds = %156, %130, %126, %122, %118
  %158 = load i32, i32* %37, align 4
  %159 = load i32, i32* %38, align 4
  %160 = mul nsw i32 2, %159
  %161 = icmp slt i32 %158, %160
  br i1 %161, label %162, label %165

162:                                              ; preds = %157
  %163 = load i32, i32* %27, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %27, align 4
  br label %186

165:                                              ; preds = %157
  %166 = load i32, i32* %37, align 4
  %167 = load i32, i32* %38, align 4
  %168 = mul nsw i32 4, %167
  %169 = icmp slt i32 %166, %168
  br i1 %169, label %170, label %173

170:                                              ; preds = %165
  %171 = load i32, i32* %28, align 4
  %172 = add nsw i32 %171, 1
  store i32 %172, i32* %28, align 4
  br label %185

173:                                              ; preds = %165
  %174 = load i32, i32* %37, align 4
  %175 = load i32, i32* %38, align 4
  %176 = mul nsw i32 6, %175
  %177 = icmp slt i32 %174, %176
  br i1 %177, label %178, label %181

178:                                              ; preds = %173
  %179 = load i32, i32* %27, align 4
  %180 = add nsw i32 %179, -1
  store i32 %180, i32* %27, align 4
  br label %184

181:                                              ; preds = %173
  %182 = load i32, i32* %28, align 4
  %183 = add nsw i32 %182, -1
  store i32 %183, i32* %28, align 4
  br label %184

184:                                              ; preds = %181, %178
  br label %185

185:                                              ; preds = %184, %170
  br label %186

186:                                              ; preds = %185, %162
  br label %187

187:                                              ; preds = %186
  %188 = load i32, i32* %37, align 4
  %189 = add nsw i32 %188, 1
  store i32 %189, i32* %37, align 4
  br label %113

190:                                              ; preds = %113
  br label %191

191:                                              ; preds = %190
  %192 = load i32, i32* %38, align 4
  %193 = add nsw i32 %192, 1
  store i32 %193, i32* %38, align 4
  br label %102

194:                                              ; preds = %102
  store i32 65536, i32* %36, align 4
  %195 = load i32, i32* %29, align 4
  %196 = shl i32 %195, 1
  store i32 %196, i32* %29, align 4
  %197 = load i32, i32* %30, align 4
  %198 = shl i32 %197, 1
  store i32 %198, i32* %30, align 4
  %199 = load i32, i32* %29, align 4
  %200 = load i32, i32* %29, align 4
  %201 = icmp sgt i32 %200, 0
  %202 = zext i1 %201 to i32
  %203 = sub nsw i32 %199, %202
  store i32 %203, i32* %31, align 4
  %204 = load i32, i32* %29, align 4
  %205 = load i32, i32* %29, align 4
  %206 = load i32, i32* %23, align 4
  %207 = sub nsw i32 %206, 16
  %208 = shl i32 %207, 1
  %209 = icmp slt i32 %205, %208
  %210 = zext i1 %209 to i32
  %211 = add nsw i32 %204, %210
  store i32 %211, i32* %32, align 4
  %212 = load i32, i32* %30, align 4
  %213 = load i32, i32* %30, align 4
  %214 = icmp sgt i32 %213, 0
  %215 = zext i1 %214 to i32
  %216 = sub nsw i32 %212, %215
  store i32 %216, i32* %33, align 4
  %217 = load i32, i32* %30, align 4
  %218 = load i32, i32* %30, align 4
  %219 = load i32, i32* %24, align 4
  %220 = load i32, i32* %22, align 4
  %221 = sub nsw i32 %219, %220
  %222 = shl i32 %221, 1
  %223 = icmp slt i32 %218, %222
  %224 = zext i1 %223 to i32
  %225 = add nsw i32 %217, %224
  store i32 %225, i32* %34, align 4
  %226 = load i32, i32* %33, align 4
  store i32 %226, i32* %28, align 4
  br label %227

227:                                              ; preds = %270, %194
  %228 = load i32, i32* %28, align 4
  %229 = load i32, i32* %34, align 4
  %230 = icmp sle i32 %228, %229
  br i1 %230, label %231, label %273

231:                                              ; preds = %227
  %232 = load i32, i32* %31, align 4
  store i32 %232, i32* %27, align 4
  br label %233

233:                                              ; preds = %266, %231
  %234 = load i32, i32* %27, align 4
  %235 = load i32, i32* %32, align 4
  %236 = icmp sle i32 %234, %235
  br i1 %236, label %237, label %269

237:                                              ; preds = %233
  %238 = load i8*, i8** %15, align 8
  %239 = load i32, i32* %27, align 4
  %240 = ashr i32 %239, 1
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i8, i8* %238, i64 %241
  %243 = load i32, i32* %17, align 4
  %244 = load i32, i32* %28, align 4
  %245 = ashr i32 %244, 1
  %246 = mul nsw i32 %243, %245
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds i8, i8* %242, i64 %247
  %249 = load i8*, i8** %16, align 8
  %250 = load i32, i32* %17, align 4
  %251 = load i32, i32* %27, align 4
  %252 = and i32 %251, 1
  %253 = load i32, i32* %28, align 4
  %254 = and i32 %253, 1
  %255 = load i32, i32* %22, align 4
  %256 = load i32, i32* %36, align 4
  %257 = call i32 @dist1(i8* %248, i8* %249, i32 %250, i32 %252, i32 %254, i32 %255, i32 %256)
  store i32 %257, i32* %35, align 4
  %258 = load i32, i32* %35, align 4
  %259 = load i32, i32* %36, align 4
  %260 = icmp slt i32 %258, %259
  br i1 %260, label %261, label %265

261:                                              ; preds = %237
  %262 = load i32, i32* %35, align 4
  store i32 %262, i32* %36, align 4
  %263 = load i32, i32* %27, align 4
  store i32 %263, i32* %29, align 4
  %264 = load i32, i32* %28, align 4
  store i32 %264, i32* %30, align 4
  br label %265

265:                                              ; preds = %261, %237
  br label %266

266:                                              ; preds = %265
  %267 = load i32, i32* %27, align 4
  %268 = add nsw i32 %267, 1
  store i32 %268, i32* %27, align 4
  br label %233

269:                                              ; preds = %233
  br label %270

270:                                              ; preds = %269
  %271 = load i32, i32* %28, align 4
  %272 = add nsw i32 %271, 1
  store i32 %272, i32* %28, align 4
  br label %227

273:                                              ; preds = %227
  %274 = load i32, i32* %29, align 4
  %275 = load i32*, i32** %25, align 8
  store i32 %274, i32* %275, align 4
  %276 = load i32, i32* %30, align 4
  %277 = load i32*, i32** %26, align 8
  store i32 %276, i32* %277, align 4
  %278 = load i32, i32* %36, align 4
  ret i32 %278
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dist1(i8* %0, i8* %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6) #0 {
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store i8* %0, i8** %8, align 8
  store i8* %1, i8** %9, align 8
  store i32 %2, i32* %10, align 4
  store i32 %3, i32* %11, align 4
  store i32 %4, i32* %12, align 4
  store i32 %5, i32* %13, align 4
  store i32 %6, i32* %14, align 4
  store i32 0, i32* %20, align 4
  %22 = load i8*, i8** %8, align 8
  store i8* %22, i8** %15, align 8
  %23 = load i8*, i8** %9, align 8
  store i8* %23, i8** %17, align 8
  %24 = load i32, i32* %11, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %324, label %26

26:                                               ; preds = %7
  %27 = load i32, i32* %12, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %324, label %29

29:                                               ; preds = %26
  store i32 0, i32* %19, align 4
  br label %30

30:                                               ; preds = %320, %29
  %31 = load i32, i32* %19, align 4
  %32 = load i32, i32* %13, align 4
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %34, label %323

34:                                               ; preds = %30
  %35 = load i8*, i8** %15, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 0
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = load i8*, i8** %17, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 0
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = sub nsw i32 %38, %42
  store i32 %43, i32* %21, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %34
  %46 = load i32, i32* %21, align 4
  %47 = sub nsw i32 0, %46
  store i32 %47, i32* %21, align 4
  br label %48

48:                                               ; preds = %45, %34
  %49 = load i32, i32* %21, align 4
  %50 = load i32, i32* %20, align 4
  %51 = add nsw i32 %50, %49
  store i32 %51, i32* %20, align 4
  %52 = load i8*, i8** %15, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 1
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = load i8*, i8** %17, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 1
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = sub nsw i32 %55, %59
  store i32 %60, i32* %21, align 4
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %48
  %63 = load i32, i32* %21, align 4
  %64 = sub nsw i32 0, %63
  store i32 %64, i32* %21, align 4
  br label %65

65:                                               ; preds = %62, %48
  %66 = load i32, i32* %21, align 4
  %67 = load i32, i32* %20, align 4
  %68 = add nsw i32 %67, %66
  store i32 %68, i32* %20, align 4
  %69 = load i8*, i8** %15, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 2
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = load i8*, i8** %17, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 2
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = sub nsw i32 %72, %76
  store i32 %77, i32* %21, align 4
  %78 = icmp slt i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %65
  %80 = load i32, i32* %21, align 4
  %81 = sub nsw i32 0, %80
  store i32 %81, i32* %21, align 4
  br label %82

82:                                               ; preds = %79, %65
  %83 = load i32, i32* %21, align 4
  %84 = load i32, i32* %20, align 4
  %85 = add nsw i32 %84, %83
  store i32 %85, i32* %20, align 4
  %86 = load i8*, i8** %15, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 3
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = load i8*, i8** %17, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 3
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = sub nsw i32 %89, %93
  store i32 %94, i32* %21, align 4
  %95 = icmp slt i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %82
  %97 = load i32, i32* %21, align 4
  %98 = sub nsw i32 0, %97
  store i32 %98, i32* %21, align 4
  br label %99

99:                                               ; preds = %96, %82
  %100 = load i32, i32* %21, align 4
  %101 = load i32, i32* %20, align 4
  %102 = add nsw i32 %101, %100
  store i32 %102, i32* %20, align 4
  %103 = load i8*, i8** %15, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 4
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = load i8*, i8** %17, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 4
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = sub nsw i32 %106, %110
  store i32 %111, i32* %21, align 4
  %112 = icmp slt i32 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %99
  %114 = load i32, i32* %21, align 4
  %115 = sub nsw i32 0, %114
  store i32 %115, i32* %21, align 4
  br label %116

116:                                              ; preds = %113, %99
  %117 = load i32, i32* %21, align 4
  %118 = load i32, i32* %20, align 4
  %119 = add nsw i32 %118, %117
  store i32 %119, i32* %20, align 4
  %120 = load i8*, i8** %15, align 8
  %121 = getelementptr inbounds i8, i8* %120, i64 5
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = load i8*, i8** %17, align 8
  %125 = getelementptr inbounds i8, i8* %124, i64 5
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = sub nsw i32 %123, %127
  store i32 %128, i32* %21, align 4
  %129 = icmp slt i32 %128, 0
  br i1 %129, label %130, label %133

130:                                              ; preds = %116
  %131 = load i32, i32* %21, align 4
  %132 = sub nsw i32 0, %131
  store i32 %132, i32* %21, align 4
  br label %133

133:                                              ; preds = %130, %116
  %134 = load i32, i32* %21, align 4
  %135 = load i32, i32* %20, align 4
  %136 = add nsw i32 %135, %134
  store i32 %136, i32* %20, align 4
  %137 = load i8*, i8** %15, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 6
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = load i8*, i8** %17, align 8
  %142 = getelementptr inbounds i8, i8* %141, i64 6
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = sub nsw i32 %140, %144
  store i32 %145, i32* %21, align 4
  %146 = icmp slt i32 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %133
  %148 = load i32, i32* %21, align 4
  %149 = sub nsw i32 0, %148
  store i32 %149, i32* %21, align 4
  br label %150

150:                                              ; preds = %147, %133
  %151 = load i32, i32* %21, align 4
  %152 = load i32, i32* %20, align 4
  %153 = add nsw i32 %152, %151
  store i32 %153, i32* %20, align 4
  %154 = load i8*, i8** %15, align 8
  %155 = getelementptr inbounds i8, i8* %154, i64 7
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = load i8*, i8** %17, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 7
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = sub nsw i32 %157, %161
  store i32 %162, i32* %21, align 4
  %163 = icmp slt i32 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %150
  %165 = load i32, i32* %21, align 4
  %166 = sub nsw i32 0, %165
  store i32 %166, i32* %21, align 4
  br label %167

167:                                              ; preds = %164, %150
  %168 = load i32, i32* %21, align 4
  %169 = load i32, i32* %20, align 4
  %170 = add nsw i32 %169, %168
  store i32 %170, i32* %20, align 4
  %171 = load i8*, i8** %15, align 8
  %172 = getelementptr inbounds i8, i8* %171, i64 8
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i32
  %175 = load i8*, i8** %17, align 8
  %176 = getelementptr inbounds i8, i8* %175, i64 8
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i32
  %179 = sub nsw i32 %174, %178
  store i32 %179, i32* %21, align 4
  %180 = icmp slt i32 %179, 0
  br i1 %180, label %181, label %184

181:                                              ; preds = %167
  %182 = load i32, i32* %21, align 4
  %183 = sub nsw i32 0, %182
  store i32 %183, i32* %21, align 4
  br label %184

184:                                              ; preds = %181, %167
  %185 = load i32, i32* %21, align 4
  %186 = load i32, i32* %20, align 4
  %187 = add nsw i32 %186, %185
  store i32 %187, i32* %20, align 4
  %188 = load i8*, i8** %15, align 8
  %189 = getelementptr inbounds i8, i8* %188, i64 9
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = load i8*, i8** %17, align 8
  %193 = getelementptr inbounds i8, i8* %192, i64 9
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = sub nsw i32 %191, %195
  store i32 %196, i32* %21, align 4
  %197 = icmp slt i32 %196, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %184
  %199 = load i32, i32* %21, align 4
  %200 = sub nsw i32 0, %199
  store i32 %200, i32* %21, align 4
  br label %201

201:                                              ; preds = %198, %184
  %202 = load i32, i32* %21, align 4
  %203 = load i32, i32* %20, align 4
  %204 = add nsw i32 %203, %202
  store i32 %204, i32* %20, align 4
  %205 = load i8*, i8** %15, align 8
  %206 = getelementptr inbounds i8, i8* %205, i64 10
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i32
  %209 = load i8*, i8** %17, align 8
  %210 = getelementptr inbounds i8, i8* %209, i64 10
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i32
  %213 = sub nsw i32 %208, %212
  store i32 %213, i32* %21, align 4
  %214 = icmp slt i32 %213, 0
  br i1 %214, label %215, label %218

215:                                              ; preds = %201
  %216 = load i32, i32* %21, align 4
  %217 = sub nsw i32 0, %216
  store i32 %217, i32* %21, align 4
  br label %218

218:                                              ; preds = %215, %201
  %219 = load i32, i32* %21, align 4
  %220 = load i32, i32* %20, align 4
  %221 = add nsw i32 %220, %219
  store i32 %221, i32* %20, align 4
  %222 = load i8*, i8** %15, align 8
  %223 = getelementptr inbounds i8, i8* %222, i64 11
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = load i8*, i8** %17, align 8
  %227 = getelementptr inbounds i8, i8* %226, i64 11
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i32
  %230 = sub nsw i32 %225, %229
  store i32 %230, i32* %21, align 4
  %231 = icmp slt i32 %230, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %218
  %233 = load i32, i32* %21, align 4
  %234 = sub nsw i32 0, %233
  store i32 %234, i32* %21, align 4
  br label %235

235:                                              ; preds = %232, %218
  %236 = load i32, i32* %21, align 4
  %237 = load i32, i32* %20, align 4
  %238 = add nsw i32 %237, %236
  store i32 %238, i32* %20, align 4
  %239 = load i8*, i8** %15, align 8
  %240 = getelementptr inbounds i8, i8* %239, i64 12
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = load i8*, i8** %17, align 8
  %244 = getelementptr inbounds i8, i8* %243, i64 12
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i32
  %247 = sub nsw i32 %242, %246
  store i32 %247, i32* %21, align 4
  %248 = icmp slt i32 %247, 0
  br i1 %248, label %249, label %252

249:                                              ; preds = %235
  %250 = load i32, i32* %21, align 4
  %251 = sub nsw i32 0, %250
  store i32 %251, i32* %21, align 4
  br label %252

252:                                              ; preds = %249, %235
  %253 = load i32, i32* %21, align 4
  %254 = load i32, i32* %20, align 4
  %255 = add nsw i32 %254, %253
  store i32 %255, i32* %20, align 4
  %256 = load i8*, i8** %15, align 8
  %257 = getelementptr inbounds i8, i8* %256, i64 13
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i32
  %260 = load i8*, i8** %17, align 8
  %261 = getelementptr inbounds i8, i8* %260, i64 13
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i32
  %264 = sub nsw i32 %259, %263
  store i32 %264, i32* %21, align 4
  %265 = icmp slt i32 %264, 0
  br i1 %265, label %266, label %269

266:                                              ; preds = %252
  %267 = load i32, i32* %21, align 4
  %268 = sub nsw i32 0, %267
  store i32 %268, i32* %21, align 4
  br label %269

269:                                              ; preds = %266, %252
  %270 = load i32, i32* %21, align 4
  %271 = load i32, i32* %20, align 4
  %272 = add nsw i32 %271, %270
  store i32 %272, i32* %20, align 4
  %273 = load i8*, i8** %15, align 8
  %274 = getelementptr inbounds i8, i8* %273, i64 14
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i32
  %277 = load i8*, i8** %17, align 8
  %278 = getelementptr inbounds i8, i8* %277, i64 14
  %279 = load i8, i8* %278, align 1
  %280 = zext i8 %279 to i32
  %281 = sub nsw i32 %276, %280
  store i32 %281, i32* %21, align 4
  %282 = icmp slt i32 %281, 0
  br i1 %282, label %283, label %286

283:                                              ; preds = %269
  %284 = load i32, i32* %21, align 4
  %285 = sub nsw i32 0, %284
  store i32 %285, i32* %21, align 4
  br label %286

286:                                              ; preds = %283, %269
  %287 = load i32, i32* %21, align 4
  %288 = load i32, i32* %20, align 4
  %289 = add nsw i32 %288, %287
  store i32 %289, i32* %20, align 4
  %290 = load i8*, i8** %15, align 8
  %291 = getelementptr inbounds i8, i8* %290, i64 15
  %292 = load i8, i8* %291, align 1
  %293 = zext i8 %292 to i32
  %294 = load i8*, i8** %17, align 8
  %295 = getelementptr inbounds i8, i8* %294, i64 15
  %296 = load i8, i8* %295, align 1
  %297 = zext i8 %296 to i32
  %298 = sub nsw i32 %293, %297
  store i32 %298, i32* %21, align 4
  %299 = icmp slt i32 %298, 0
  br i1 %299, label %300, label %303

300:                                              ; preds = %286
  %301 = load i32, i32* %21, align 4
  %302 = sub nsw i32 0, %301
  store i32 %302, i32* %21, align 4
  br label %303

303:                                              ; preds = %300, %286
  %304 = load i32, i32* %21, align 4
  %305 = load i32, i32* %20, align 4
  %306 = add nsw i32 %305, %304
  store i32 %306, i32* %20, align 4
  %307 = load i32, i32* %20, align 4
  %308 = load i32, i32* %14, align 4
  %309 = icmp sge i32 %307, %308
  br i1 %309, label %310, label %311

310:                                              ; preds = %303
  br label %323

311:                                              ; preds = %303
  %312 = load i32, i32* %10, align 4
  %313 = load i8*, i8** %15, align 8
  %314 = sext i32 %312 to i64
  %315 = getelementptr inbounds i8, i8* %313, i64 %314
  store i8* %315, i8** %15, align 8
  %316 = load i32, i32* %10, align 4
  %317 = load i8*, i8** %17, align 8
  %318 = sext i32 %316 to i64
  %319 = getelementptr inbounds i8, i8* %317, i64 %318
  store i8* %319, i8** %17, align 8
  br label %320

320:                                              ; preds = %311
  %321 = load i32, i32* %19, align 4
  %322 = add nsw i32 %321, 1
  store i32 %322, i32* %19, align 4
  br label %30

323:                                              ; preds = %310, %30
  br label %542

324:                                              ; preds = %26, %7
  %325 = load i32, i32* %11, align 4
  %326 = icmp ne i32 %325, 0
  br i1 %326, label %327, label %390

327:                                              ; preds = %324
  %328 = load i32, i32* %12, align 4
  %329 = icmp ne i32 %328, 0
  br i1 %329, label %390, label %330

330:                                              ; preds = %327
  store i32 0, i32* %19, align 4
  br label %331

331:                                              ; preds = %386, %330
  %332 = load i32, i32* %19, align 4
  %333 = load i32, i32* %13, align 4
  %334 = icmp slt i32 %332, %333
  br i1 %334, label %335, label %389

335:                                              ; preds = %331
  store i32 0, i32* %18, align 4
  br label %336

336:                                              ; preds = %374, %335
  %337 = load i32, i32* %18, align 4
  %338 = icmp slt i32 %337, 16
  br i1 %338, label %339, label %377

339:                                              ; preds = %336
  %340 = load i8*, i8** %15, align 8
  %341 = load i32, i32* %18, align 4
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds i8, i8* %340, i64 %342
  %344 = load i8, i8* %343, align 1
  %345 = zext i8 %344 to i32
  %346 = load i8*, i8** %15, align 8
  %347 = load i32, i32* %18, align 4
  %348 = add nsw i32 %347, 1
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds i8, i8* %346, i64 %349
  %351 = load i8, i8* %350, align 1
  %352 = zext i8 %351 to i32
  %353 = add nsw i32 %345, %352
  %354 = add nsw i32 %353, 1
  %355 = lshr i32 %354, 1
  %356 = load i8*, i8** %17, align 8
  %357 = load i32, i32* %18, align 4
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds i8, i8* %356, i64 %358
  %360 = load i8, i8* %359, align 1
  %361 = zext i8 %360 to i32
  %362 = sub i32 %355, %361
  store i32 %362, i32* %21, align 4
  %363 = load i32, i32* %21, align 4
  %364 = icmp sge i32 %363, 0
  br i1 %364, label %365, label %369

365:                                              ; preds = %339
  %366 = load i32, i32* %21, align 4
  %367 = load i32, i32* %20, align 4
  %368 = add nsw i32 %367, %366
  store i32 %368, i32* %20, align 4
  br label %373

369:                                              ; preds = %339
  %370 = load i32, i32* %21, align 4
  %371 = load i32, i32* %20, align 4
  %372 = sub nsw i32 %371, %370
  store i32 %372, i32* %20, align 4
  br label %373

373:                                              ; preds = %369, %365
  br label %374

374:                                              ; preds = %373
  %375 = load i32, i32* %18, align 4
  %376 = add nsw i32 %375, 1
  store i32 %376, i32* %18, align 4
  br label %336

377:                                              ; preds = %336
  %378 = load i32, i32* %10, align 4
  %379 = load i8*, i8** %15, align 8
  %380 = sext i32 %378 to i64
  %381 = getelementptr inbounds i8, i8* %379, i64 %380
  store i8* %381, i8** %15, align 8
  %382 = load i32, i32* %10, align 4
  %383 = load i8*, i8** %17, align 8
  %384 = sext i32 %382 to i64
  %385 = getelementptr inbounds i8, i8* %383, i64 %384
  store i8* %385, i8** %17, align 8
  br label %386

386:                                              ; preds = %377
  %387 = load i32, i32* %19, align 4
  %388 = add nsw i32 %387, 1
  store i32 %388, i32* %19, align 4
  br label %331

389:                                              ; preds = %331
  br label %541

390:                                              ; preds = %327, %324
  %391 = load i32, i32* %11, align 4
  %392 = icmp ne i32 %391, 0
  br i1 %392, label %460, label %393

393:                                              ; preds = %390
  %394 = load i32, i32* %12, align 4
  %395 = icmp ne i32 %394, 0
  br i1 %395, label %396, label %460

396:                                              ; preds = %393
  %397 = load i8*, i8** %15, align 8
  %398 = load i32, i32* %10, align 4
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds i8, i8* %397, i64 %399
  store i8* %400, i8** %16, align 8
  store i32 0, i32* %19, align 4
  br label %401

401:                                              ; preds = %456, %396
  %402 = load i32, i32* %19, align 4
  %403 = load i32, i32* %13, align 4
  %404 = icmp slt i32 %402, %403
  br i1 %404, label %405, label %459

405:                                              ; preds = %401
  store i32 0, i32* %18, align 4
  br label %406

406:                                              ; preds = %443, %405
  %407 = load i32, i32* %18, align 4
  %408 = icmp slt i32 %407, 16
  br i1 %408, label %409, label %446

409:                                              ; preds = %406
  %410 = load i8*, i8** %15, align 8
  %411 = load i32, i32* %18, align 4
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds i8, i8* %410, i64 %412
  %414 = load i8, i8* %413, align 1
  %415 = zext i8 %414 to i32
  %416 = load i8*, i8** %16, align 8
  %417 = load i32, i32* %18, align 4
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds i8, i8* %416, i64 %418
  %420 = load i8, i8* %419, align 1
  %421 = zext i8 %420 to i32
  %422 = add nsw i32 %415, %421
  %423 = add nsw i32 %422, 1
  %424 = lshr i32 %423, 1
  %425 = load i8*, i8** %17, align 8
  %426 = load i32, i32* %18, align 4
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds i8, i8* %425, i64 %427
  %429 = load i8, i8* %428, align 1
  %430 = zext i8 %429 to i32
  %431 = sub i32 %424, %430
  store i32 %431, i32* %21, align 4
  %432 = load i32, i32* %21, align 4
  %433 = icmp sge i32 %432, 0
  br i1 %433, label %434, label %438

434:                                              ; preds = %409
  %435 = load i32, i32* %21, align 4
  %436 = load i32, i32* %20, align 4
  %437 = add nsw i32 %436, %435
  store i32 %437, i32* %20, align 4
  br label %442

438:                                              ; preds = %409
  %439 = load i32, i32* %21, align 4
  %440 = load i32, i32* %20, align 4
  %441 = sub nsw i32 %440, %439
  store i32 %441, i32* %20, align 4
  br label %442

442:                                              ; preds = %438, %434
  br label %443

443:                                              ; preds = %442
  %444 = load i32, i32* %18, align 4
  %445 = add nsw i32 %444, 1
  store i32 %445, i32* %18, align 4
  br label %406

446:                                              ; preds = %406
  %447 = load i8*, i8** %16, align 8
  store i8* %447, i8** %15, align 8
  %448 = load i32, i32* %10, align 4
  %449 = load i8*, i8** %16, align 8
  %450 = sext i32 %448 to i64
  %451 = getelementptr inbounds i8, i8* %449, i64 %450
  store i8* %451, i8** %16, align 8
  %452 = load i32, i32* %10, align 4
  %453 = load i8*, i8** %17, align 8
  %454 = sext i32 %452 to i64
  %455 = getelementptr inbounds i8, i8* %453, i64 %454
  store i8* %455, i8** %17, align 8
  br label %456

456:                                              ; preds = %446
  %457 = load i32, i32* %19, align 4
  %458 = add nsw i32 %457, 1
  store i32 %458, i32* %19, align 4
  br label %401

459:                                              ; preds = %401
  br label %540

460:                                              ; preds = %393, %390
  %461 = load i8*, i8** %15, align 8
  %462 = load i32, i32* %10, align 4
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds i8, i8* %461, i64 %463
  store i8* %464, i8** %16, align 8
  store i32 0, i32* %19, align 4
  br label %465

465:                                              ; preds = %536, %460
  %466 = load i32, i32* %19, align 4
  %467 = load i32, i32* %13, align 4
  %468 = icmp slt i32 %466, %467
  br i1 %468, label %469, label %539

469:                                              ; preds = %465
  store i32 0, i32* %18, align 4
  br label %470

470:                                              ; preds = %523, %469
  %471 = load i32, i32* %18, align 4
  %472 = icmp slt i32 %471, 16
  br i1 %472, label %473, label %526

473:                                              ; preds = %470
  %474 = load i8*, i8** %15, align 8
  %475 = load i32, i32* %18, align 4
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds i8, i8* %474, i64 %476
  %478 = load i8, i8* %477, align 1
  %479 = zext i8 %478 to i32
  %480 = load i8*, i8** %15, align 8
  %481 = load i32, i32* %18, align 4
  %482 = add nsw i32 %481, 1
  %483 = sext i32 %482 to i64
  %484 = getelementptr inbounds i8, i8* %480, i64 %483
  %485 = load i8, i8* %484, align 1
  %486 = zext i8 %485 to i32
  %487 = add nsw i32 %479, %486
  %488 = load i8*, i8** %16, align 8
  %489 = load i32, i32* %18, align 4
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds i8, i8* %488, i64 %490
  %492 = load i8, i8* %491, align 1
  %493 = zext i8 %492 to i32
  %494 = add nsw i32 %487, %493
  %495 = load i8*, i8** %16, align 8
  %496 = load i32, i32* %18, align 4
  %497 = add nsw i32 %496, 1
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds i8, i8* %495, i64 %498
  %500 = load i8, i8* %499, align 1
  %501 = zext i8 %500 to i32
  %502 = add nsw i32 %494, %501
  %503 = add nsw i32 %502, 2
  %504 = lshr i32 %503, 2
  %505 = load i8*, i8** %17, align 8
  %506 = load i32, i32* %18, align 4
  %507 = sext i32 %506 to i64
  %508 = getelementptr inbounds i8, i8* %505, i64 %507
  %509 = load i8, i8* %508, align 1
  %510 = zext i8 %509 to i32
  %511 = sub i32 %504, %510
  store i32 %511, i32* %21, align 4
  %512 = load i32, i32* %21, align 4
  %513 = icmp sge i32 %512, 0
  br i1 %513, label %514, label %518

514:                                              ; preds = %473
  %515 = load i32, i32* %21, align 4
  %516 = load i32, i32* %20, align 4
  %517 = add nsw i32 %516, %515
  store i32 %517, i32* %20, align 4
  br label %522

518:                                              ; preds = %473
  %519 = load i32, i32* %21, align 4
  %520 = load i32, i32* %20, align 4
  %521 = sub nsw i32 %520, %519
  store i32 %521, i32* %20, align 4
  br label %522

522:                                              ; preds = %518, %514
  br label %523

523:                                              ; preds = %522
  %524 = load i32, i32* %18, align 4
  %525 = add nsw i32 %524, 1
  store i32 %525, i32* %18, align 4
  br label %470

526:                                              ; preds = %470
  %527 = load i8*, i8** %16, align 8
  store i8* %527, i8** %15, align 8
  %528 = load i32, i32* %10, align 4
  %529 = load i8*, i8** %16, align 8
  %530 = sext i32 %528 to i64
  %531 = getelementptr inbounds i8, i8* %529, i64 %530
  store i8* %531, i8** %16, align 8
  %532 = load i32, i32* %10, align 4
  %533 = load i8*, i8** %17, align 8
  %534 = sext i32 %532 to i64
  %535 = getelementptr inbounds i8, i8* %533, i64 %534
  store i8* %535, i8** %17, align 8
  br label %536

536:                                              ; preds = %526
  %537 = load i32, i32* %19, align 4
  %538 = add nsw i32 %537, 1
  store i32 %538, i32* %19, align 4
  br label %465

539:                                              ; preds = %465
  br label %540

540:                                              ; preds = %539, %459
  br label %541

541:                                              ; preds = %540, %389
  br label %542

542:                                              ; preds = %541, %323
  %543 = load i32, i32* %20, align 4
  ret i32 %543
}

; Function Attrs: noinline nounwind uwtable
define internal void @frame_estimate(i8* %0, i8* %1, i8* %2, i32 %3, i32 %4, i32 %5, i32 %6, i32* %7, i32* %8, i32* %9, i32* %10, i32* %11, i32* %12, i32* %13, i32* %14, i32* %15, i32* %16, [2 x i32]* %17, [2 x i32]* %18) #0 {
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32*, align 8
  %28 = alloca i32*, align 8
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  %33 = alloca i32*, align 8
  %34 = alloca i32*, align 8
  %35 = alloca i32*, align 8
  %36 = alloca i32*, align 8
  %37 = alloca [2 x i32]*, align 8
  %38 = alloca [2 x i32]*, align 8
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  store i8* %0, i8** %20, align 8
  store i8* %1, i8** %21, align 8
  store i8* %2, i8** %22, align 8
  store i32 %3, i32* %23, align 4
  store i32 %4, i32* %24, align 4
  store i32 %5, i32* %25, align 4
  store i32 %6, i32* %26, align 4
  store i32* %7, i32** %27, align 8
  store i32* %8, i32** %28, align 8
  store i32* %9, i32** %29, align 8
  store i32* %10, i32** %30, align 8
  store i32* %11, i32** %31, align 8
  store i32* %12, i32** %32, align 8
  store i32* %13, i32** %33, align 8
  store i32* %14, i32** %34, align 8
  store i32* %15, i32** %35, align 8
  store i32* %16, i32** %36, align 8
  store [2 x i32]* %17, [2 x i32]** %37, align 8
  store [2 x i32]* %18, [2 x i32]** %38, align 8
  %47 = load i8*, i8** %20, align 8
  %48 = load i8*, i8** %21, align 8
  %49 = load i8*, i8** %22, align 8
  %50 = load i32, i32* @width, align 4
  %51 = load i32, i32* %23, align 4
  %52 = load i32, i32* %24, align 4
  %53 = load i32, i32* %25, align 4
  %54 = load i32, i32* %26, align 4
  %55 = load i32, i32* @width, align 4
  %56 = load i32, i32* @height, align 4
  %57 = load i32*, i32** %27, align 8
  %58 = load i32*, i32** %28, align 8
  %59 = call i32 @fullsearch(i8* %47, i8* %48, i8* %49, i32 %50, i32 %51, i32 %52, i32 %53, i32 %54, i32 16, i32 %55, i32 %56, i32* %57, i32* %58)
  %60 = load i32*, i32** %33, align 8
  store i32 %59, i32* %60, align 4
  %61 = load i8*, i8** %20, align 8
  %62 = load i8*, i8** %21, align 8
  %63 = load i8*, i8** %22, align 8
  %64 = load i32, i32* @width, align 4
  %65 = shl i32 %64, 1
  %66 = load i32, i32* %23, align 4
  %67 = load i32, i32* %24, align 4
  %68 = ashr i32 %67, 1
  %69 = load i32, i32* %25, align 4
  %70 = load i32, i32* %26, align 4
  %71 = ashr i32 %70, 1
  %72 = load i32, i32* @width, align 4
  %73 = load i32, i32* @height, align 4
  %74 = ashr i32 %73, 1
  %75 = call i32 @fullsearch(i8* %61, i8* %62, i8* %63, i32 %65, i32 %66, i32 %68, i32 %69, i32 %71, i32 8, i32 %72, i32 %74, i32* %43, i32* %45)
  store i32 %75, i32* %39, align 4
  %76 = load i8*, i8** %20, align 8
  %77 = load i32, i32* @width, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = load i8*, i8** %21, align 8
  %81 = load i32, i32* @width, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %80, i64 %82
  %84 = load i8*, i8** %22, align 8
  %85 = load i32, i32* @width, align 4
  %86 = shl i32 %85, 1
  %87 = load i32, i32* %23, align 4
  %88 = load i32, i32* %24, align 4
  %89 = ashr i32 %88, 1
  %90 = load i32, i32* %25, align 4
  %91 = load i32, i32* %26, align 4
  %92 = ashr i32 %91, 1
  %93 = load i32, i32* @width, align 4
  %94 = load i32, i32* @height, align 4
  %95 = ashr i32 %94, 1
  %96 = call i32 @fullsearch(i8* %79, i8* %83, i8* %84, i32 %86, i32 %87, i32 %89, i32 %90, i32 %92, i32 8, i32 %93, i32 %95, i32* %44, i32* %46)
  store i32 %96, i32* %40, align 4
  %97 = load i32, i32* %43, align 4
  %98 = load [2 x i32]*, [2 x i32]** %37, align 8
  %99 = getelementptr inbounds [2 x i32], [2 x i32]* %98, i64 0
  %100 = getelementptr inbounds [2 x i32], [2 x i32]* %99, i64 0, i64 0
  store i32 %97, i32* %100, align 4
  %101 = load i32, i32* %45, align 4
  %102 = load [2 x i32]*, [2 x i32]** %38, align 8
  %103 = getelementptr inbounds [2 x i32], [2 x i32]* %102, i64 0
  %104 = getelementptr inbounds [2 x i32], [2 x i32]* %103, i64 0, i64 0
  store i32 %101, i32* %104, align 4
  %105 = load i32, i32* %44, align 4
  %106 = load [2 x i32]*, [2 x i32]** %37, align 8
  %107 = getelementptr inbounds [2 x i32], [2 x i32]* %106, i64 1
  %108 = getelementptr inbounds [2 x i32], [2 x i32]* %107, i64 0, i64 0
  store i32 %105, i32* %108, align 4
  %109 = load i32, i32* %46, align 4
  %110 = load [2 x i32]*, [2 x i32]** %38, align 8
  %111 = getelementptr inbounds [2 x i32], [2 x i32]* %110, i64 1
  %112 = getelementptr inbounds [2 x i32], [2 x i32]* %111, i64 0, i64 0
  store i32 %109, i32* %112, align 4
  %113 = load i32, i32* %39, align 4
  %114 = load i32, i32* %40, align 4
  %115 = icmp sle i32 %113, %114
  br i1 %115, label %116, label %123

116:                                              ; preds = %19
  %117 = load i32, i32* %39, align 4
  store i32 %117, i32* %41, align 4
  %118 = load i32, i32* %43, align 4
  %119 = load i32*, i32** %29, align 8
  store i32 %118, i32* %119, align 4
  %120 = load i32, i32* %45, align 4
  %121 = load i32*, i32** %30, align 8
  store i32 %120, i32* %121, align 4
  %122 = load i32*, i32** %35, align 8
  store i32 0, i32* %122, align 4
  br label %130

123:                                              ; preds = %19
  %124 = load i32, i32* %40, align 4
  store i32 %124, i32* %41, align 4
  %125 = load i32, i32* %44, align 4
  %126 = load i32*, i32** %29, align 8
  store i32 %125, i32* %126, align 4
  %127 = load i32, i32* %46, align 4
  %128 = load i32*, i32** %30, align 8
  store i32 %127, i32* %128, align 4
  %129 = load i32*, i32** %35, align 8
  store i32 1, i32* %129, align 4
  br label %130

130:                                              ; preds = %123, %116
  %131 = load i8*, i8** %20, align 8
  %132 = load i8*, i8** %21, align 8
  %133 = load i8*, i8** %22, align 8
  %134 = load i32, i32* @width, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i8, i8* %133, i64 %135
  %137 = load i32, i32* @width, align 4
  %138 = shl i32 %137, 1
  %139 = load i32, i32* %23, align 4
  %140 = load i32, i32* %24, align 4
  %141 = ashr i32 %140, 1
  %142 = load i32, i32* %25, align 4
  %143 = load i32, i32* %26, align 4
  %144 = ashr i32 %143, 1
  %145 = load i32, i32* @width, align 4
  %146 = load i32, i32* @height, align 4
  %147 = ashr i32 %146, 1
  %148 = call i32 @fullsearch(i8* %131, i8* %132, i8* %136, i32 %138, i32 %139, i32 %141, i32 %142, i32 %144, i32 8, i32 %145, i32 %147, i32* %43, i32* %45)
  store i32 %148, i32* %39, align 4
  %149 = load i8*, i8** %20, align 8
  %150 = load i32, i32* @width, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i8, i8* %149, i64 %151
  %153 = load i8*, i8** %21, align 8
  %154 = load i32, i32* @width, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i8, i8* %153, i64 %155
  %157 = load i8*, i8** %22, align 8
  %158 = load i32, i32* @width, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i8, i8* %157, i64 %159
  %161 = load i32, i32* @width, align 4
  %162 = shl i32 %161, 1
  %163 = load i32, i32* %23, align 4
  %164 = load i32, i32* %24, align 4
  %165 = ashr i32 %164, 1
  %166 = load i32, i32* %25, align 4
  %167 = load i32, i32* %26, align 4
  %168 = ashr i32 %167, 1
  %169 = load i32, i32* @width, align 4
  %170 = load i32, i32* @height, align 4
  %171 = ashr i32 %170, 1
  %172 = call i32 @fullsearch(i8* %152, i8* %156, i8* %160, i32 %162, i32 %163, i32 %165, i32 %166, i32 %168, i32 8, i32 %169, i32 %171, i32* %44, i32* %46)
  store i32 %172, i32* %40, align 4
  %173 = load i32, i32* %43, align 4
  %174 = load [2 x i32]*, [2 x i32]** %37, align 8
  %175 = getelementptr inbounds [2 x i32], [2 x i32]* %174, i64 0
  %176 = getelementptr inbounds [2 x i32], [2 x i32]* %175, i64 0, i64 1
  store i32 %173, i32* %176, align 4
  %177 = load i32, i32* %45, align 4
  %178 = load [2 x i32]*, [2 x i32]** %38, align 8
  %179 = getelementptr inbounds [2 x i32], [2 x i32]* %178, i64 0
  %180 = getelementptr inbounds [2 x i32], [2 x i32]* %179, i64 0, i64 1
  store i32 %177, i32* %180, align 4
  %181 = load i32, i32* %44, align 4
  %182 = load [2 x i32]*, [2 x i32]** %37, align 8
  %183 = getelementptr inbounds [2 x i32], [2 x i32]* %182, i64 1
  %184 = getelementptr inbounds [2 x i32], [2 x i32]* %183, i64 0, i64 1
  store i32 %181, i32* %184, align 4
  %185 = load i32, i32* %46, align 4
  %186 = load [2 x i32]*, [2 x i32]** %38, align 8
  %187 = getelementptr inbounds [2 x i32], [2 x i32]* %186, i64 1
  %188 = getelementptr inbounds [2 x i32], [2 x i32]* %187, i64 0, i64 1
  store i32 %185, i32* %188, align 4
  %189 = load i32, i32* %40, align 4
  %190 = load i32, i32* %39, align 4
  %191 = icmp sle i32 %189, %190
  br i1 %191, label %192, label %199

192:                                              ; preds = %130
  %193 = load i32, i32* %40, align 4
  store i32 %193, i32* %42, align 4
  %194 = load i32, i32* %44, align 4
  %195 = load i32*, i32** %31, align 8
  store i32 %194, i32* %195, align 4
  %196 = load i32, i32* %46, align 4
  %197 = load i32*, i32** %32, align 8
  store i32 %196, i32* %197, align 4
  %198 = load i32*, i32** %36, align 8
  store i32 1, i32* %198, align 4
  br label %206

199:                                              ; preds = %130
  %200 = load i32, i32* %39, align 4
  store i32 %200, i32* %42, align 4
  %201 = load i32, i32* %43, align 4
  %202 = load i32*, i32** %31, align 8
  store i32 %201, i32* %202, align 4
  %203 = load i32, i32* %45, align 4
  %204 = load i32*, i32** %32, align 8
  store i32 %203, i32* %204, align 4
  %205 = load i32*, i32** %36, align 8
  store i32 0, i32* %205, align 4
  br label %206

206:                                              ; preds = %199, %192
  %207 = load i32, i32* %41, align 4
  %208 = load i32, i32* %42, align 4
  %209 = add nsw i32 %207, %208
  %210 = load i32*, i32** %34, align 8
  store i32 %209, i32* %210, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @dpframe_estimate(i8* %0, i8* %1, i32 %2, i32 %3, [2 x i32]* %4, [2 x i32]* %5, i32* %6, i32* %7, i32* %8, i32* %9, i32* %10, i32* %11) #0 {
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca [2 x i32]*, align 8
  %18 = alloca [2 x i32]*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca i32*, align 8
  %21 = alloca i32*, align 8
  %22 = alloca i32*, align 8
  %23 = alloca i32*, align 8
  %24 = alloca i32*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  store i8* %0, i8** %13, align 8
  store i8* %1, i8** %14, align 8
  store i32 %2, i32* %15, align 4
  store i32 %3, i32* %16, align 4
  store [2 x i32]* %4, [2 x i32]** %17, align 8
  store [2 x i32]* %5, [2 x i32]** %18, align 8
  store i32* %6, i32** %19, align 8
  store i32* %7, i32** %20, align 8
  store i32* %8, i32** %21, align 8
  store i32* %9, i32** %22, align 8
  store i32* %10, i32** %23, align 8
  store i32* %11, i32** %24, align 8
  store i32 1073741824, i32* %47, align 4
  store i32 0, i32* %25, align 4
  br label %49

49:                                               ; preds = %398, %12
  %50 = load i32, i32* %25, align 4
  %51 = icmp slt i32 %50, 2
  br i1 %51, label %52, label %401

52:                                               ; preds = %49
  store i32 0, i32* %26, align 4
  br label %53

53:                                               ; preds = %394, %52
  %54 = load i32, i32* %26, align 4
  %55 = icmp slt i32 %54, 2
  br i1 %55, label %56, label %397

56:                                               ; preds = %53
  %57 = load [2 x i32]*, [2 x i32]** %17, align 8
  %58 = load i32, i32* %25, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [2 x i32], [2 x i32]* %57, i64 %59
  %61 = load i32, i32* %26, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [2 x i32], [2 x i32]* %60, i64 0, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = load i32, i32* %15, align 4
  %66 = shl i32 %65, 1
  %67 = sub nsw i32 %64, %66
  store i32 %67, i32* %29, align 4
  %68 = load [2 x i32]*, [2 x i32]** %18, align 8
  %69 = load i32, i32* %25, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [2 x i32], [2 x i32]* %68, i64 %70
  %72 = load i32, i32* %26, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [2 x i32], [2 x i32]* %71, i64 0, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = load i32, i32* %16, align 4
  %77 = shl i32 %76, 1
  %78 = sub nsw i32 %75, %77
  store i32 %78, i32* %30, align 4
  %79 = load i32, i32* %25, align 4
  %80 = load i32, i32* %26, align 4
  %81 = icmp ne i32 %79, %80
  br i1 %81, label %82, label %130

82:                                               ; preds = %56
  %83 = load i32, i32* %26, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %82
  %86 = load i32, i32* %30, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %30, align 4
  br label %91

88:                                               ; preds = %82
  %89 = load i32, i32* %30, align 4
  %90 = add nsw i32 %89, -1
  store i32 %90, i32* %30, align 4
  br label %91

91:                                               ; preds = %88, %85
  %92 = load i32, i32* %29, align 4
  %93 = shl i32 %92, 1
  store i32 %93, i32* %29, align 4
  %94 = load i32, i32* %30, align 4
  %95 = shl i32 %94, 1
  store i32 %95, i32* %30, align 4
  %96 = load i32, i32* @topfirst, align 4
  %97 = load i32, i32* %26, align 4
  %98 = icmp eq i32 %96, %97
  br i1 %98, label %99, label %128

99:                                               ; preds = %91
  %100 = load i32, i32* %29, align 4
  %101 = icmp sge i32 %100, 0
  br i1 %101, label %102, label %106

102:                                              ; preds = %99
  %103 = load i32, i32* %29, align 4
  %104 = add nsw i32 %103, 1
  %105 = sdiv i32 %104, 3
  br label %112

106:                                              ; preds = %99
  %107 = load i32, i32* %29, align 4
  %108 = sub nsw i32 0, %107
  %109 = add nsw i32 %108, 1
  %110 = sdiv i32 %109, 3
  %111 = sub nsw i32 0, %110
  br label %112

112:                                              ; preds = %106, %102
  %113 = phi i32 [ %105, %102 ], [ %111, %106 ]
  store i32 %113, i32* %29, align 4
  %114 = load i32, i32* %30, align 4
  %115 = icmp sge i32 %114, 0
  br i1 %115, label %116, label %120

116:                                              ; preds = %112
  %117 = load i32, i32* %30, align 4
  %118 = add nsw i32 %117, 1
  %119 = sdiv i32 %118, 3
  br label %126

120:                                              ; preds = %112
  %121 = load i32, i32* %30, align 4
  %122 = sub nsw i32 0, %121
  %123 = add nsw i32 %122, 1
  %124 = sdiv i32 %123, 3
  %125 = sub nsw i32 0, %124
  br label %126

126:                                              ; preds = %120, %116
  %127 = phi i32 [ %119, %116 ], [ %125, %120 ]
  store i32 %127, i32* %30, align 4
  br label %129

128:                                              ; preds = %91
  br label %394

129:                                              ; preds = %126
  br label %130

130:                                              ; preds = %129, %56
  %131 = load i32, i32* @topfirst, align 4
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %133, label %162

133:                                              ; preds = %130
  %134 = load i32, i32* %29, align 4
  %135 = load i32, i32* %29, align 4
  %136 = icmp sgt i32 %135, 0
  %137 = zext i1 %136 to i32
  %138 = add nsw i32 %134, %137
  %139 = ashr i32 %138, 1
  store i32 %139, i32* %35, align 4
  %140 = load i32, i32* %30, align 4
  %141 = load i32, i32* %30, align 4
  %142 = icmp sgt i32 %141, 0
  %143 = zext i1 %142 to i32
  %144 = add nsw i32 %140, %143
  %145 = ashr i32 %144, 1
  %146 = sub nsw i32 %145, 1
  store i32 %146, i32* %36, align 4
  %147 = load i32, i32* %29, align 4
  %148 = mul nsw i32 3, %147
  %149 = load i32, i32* %29, align 4
  %150 = icmp sgt i32 %149, 0
  %151 = zext i1 %150 to i32
  %152 = add nsw i32 %148, %151
  %153 = ashr i32 %152, 1
  store i32 %153, i32* %37, align 4
  %154 = load i32, i32* %30, align 4
  %155 = mul nsw i32 3, %154
  %156 = load i32, i32* %30, align 4
  %157 = icmp sgt i32 %156, 0
  %158 = zext i1 %157 to i32
  %159 = add nsw i32 %155, %158
  %160 = ashr i32 %159, 1
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %38, align 4
  br label %191

162:                                              ; preds = %130
  %163 = load i32, i32* %29, align 4
  %164 = mul nsw i32 3, %163
  %165 = load i32, i32* %29, align 4
  %166 = icmp sgt i32 %165, 0
  %167 = zext i1 %166 to i32
  %168 = add nsw i32 %164, %167
  %169 = ashr i32 %168, 1
  store i32 %169, i32* %35, align 4
  %170 = load i32, i32* %30, align 4
  %171 = mul nsw i32 3, %170
  %172 = load i32, i32* %30, align 4
  %173 = icmp sgt i32 %172, 0
  %174 = zext i1 %173 to i32
  %175 = add nsw i32 %171, %174
  %176 = ashr i32 %175, 1
  %177 = sub nsw i32 %176, 1
  store i32 %177, i32* %36, align 4
  %178 = load i32, i32* %29, align 4
  %179 = load i32, i32* %29, align 4
  %180 = icmp sgt i32 %179, 0
  %181 = zext i1 %180 to i32
  %182 = add nsw i32 %178, %181
  %183 = ashr i32 %182, 1
  store i32 %183, i32* %37, align 4
  %184 = load i32, i32* %30, align 4
  %185 = load i32, i32* %30, align 4
  %186 = icmp sgt i32 %185, 0
  %187 = zext i1 %186 to i32
  %188 = add nsw i32 %184, %187
  %189 = ashr i32 %188, 1
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %38, align 4
  br label %191

191:                                              ; preds = %162, %133
  %192 = load i32, i32* %15, align 4
  %193 = shl i32 %192, 1
  %194 = load i32, i32* %29, align 4
  %195 = add nsw i32 %194, %193
  store i32 %195, i32* %29, align 4
  %196 = load i32, i32* %16, align 4
  %197 = shl i32 %196, 1
  %198 = load i32, i32* %30, align 4
  %199 = add nsw i32 %198, %197
  store i32 %199, i32* %30, align 4
  %200 = load i32, i32* %15, align 4
  %201 = shl i32 %200, 1
  %202 = load i32, i32* %35, align 4
  %203 = add nsw i32 %202, %201
  store i32 %203, i32* %35, align 4
  %204 = load i32, i32* %16, align 4
  %205 = shl i32 %204, 1
  %206 = load i32, i32* %36, align 4
  %207 = add nsw i32 %206, %205
  store i32 %207, i32* %36, align 4
  %208 = load i32, i32* %15, align 4
  %209 = shl i32 %208, 1
  %210 = load i32, i32* %37, align 4
  %211 = add nsw i32 %210, %209
  store i32 %211, i32* %37, align 4
  %212 = load i32, i32* %16, align 4
  %213 = shl i32 %212, 1
  %214 = load i32, i32* %38, align 4
  %215 = add nsw i32 %214, %213
  store i32 %215, i32* %38, align 4
  %216 = load i32, i32* %29, align 4
  %217 = icmp sge i32 %216, 0
  br i1 %217, label %218, label %393

218:                                              ; preds = %191
  %219 = load i32, i32* %29, align 4
  %220 = load i32, i32* @width, align 4
  %221 = sub nsw i32 %220, 16
  %222 = shl i32 %221, 1
  %223 = icmp sle i32 %219, %222
  br i1 %223, label %224, label %393

224:                                              ; preds = %218
  %225 = load i32, i32* %30, align 4
  %226 = icmp sge i32 %225, 0
  br i1 %226, label %227, label %393

227:                                              ; preds = %224
  %228 = load i32, i32* %30, align 4
  %229 = load i32, i32* @height, align 4
  %230 = sub nsw i32 %229, 16
  %231 = icmp sle i32 %228, %230
  br i1 %231, label %232, label %393

232:                                              ; preds = %227
  store i32 -1, i32* %28, align 4
  br label %233

233:                                              ; preds = %389, %232
  %234 = load i32, i32* %28, align 4
  %235 = icmp sle i32 %234, 1
  br i1 %235, label %236, label %392

236:                                              ; preds = %233
  store i32 -1, i32* %27, align 4
  br label %237

237:                                              ; preds = %385, %236
  %238 = load i32, i32* %27, align 4
  %239 = icmp sle i32 %238, 1
  br i1 %239, label %240, label %388

240:                                              ; preds = %237
  %241 = load i32, i32* %35, align 4
  %242 = load i32, i32* %27, align 4
  %243 = add nsw i32 %241, %242
  store i32 %243, i32* %31, align 4
  %244 = load i32, i32* %36, align 4
  %245 = load i32, i32* %28, align 4
  %246 = add nsw i32 %244, %245
  store i32 %246, i32* %32, align 4
  %247 = load i32, i32* %37, align 4
  %248 = load i32, i32* %27, align 4
  %249 = add nsw i32 %247, %248
  store i32 %249, i32* %33, align 4
  %250 = load i32, i32* %38, align 4
  %251 = load i32, i32* %28, align 4
  %252 = add nsw i32 %250, %251
  store i32 %252, i32* %34, align 4
  %253 = load i32, i32* %31, align 4
  %254 = icmp sge i32 %253, 0
  br i1 %254, label %255, label %384

255:                                              ; preds = %240
  %256 = load i32, i32* %31, align 4
  %257 = load i32, i32* @width, align 4
  %258 = sub nsw i32 %257, 16
  %259 = shl i32 %258, 1
  %260 = icmp sle i32 %256, %259
  br i1 %260, label %261, label %384

261:                                              ; preds = %255
  %262 = load i32, i32* %32, align 4
  %263 = icmp sge i32 %262, 0
  br i1 %263, label %264, label %384

264:                                              ; preds = %261
  %265 = load i32, i32* %32, align 4
  %266 = load i32, i32* @height, align 4
  %267 = sub nsw i32 %266, 16
  %268 = icmp sle i32 %265, %267
  br i1 %268, label %269, label %384

269:                                              ; preds = %264
  %270 = load i32, i32* %33, align 4
  %271 = icmp sge i32 %270, 0
  br i1 %271, label %272, label %384

272:                                              ; preds = %269
  %273 = load i32, i32* %33, align 4
  %274 = load i32, i32* @width, align 4
  %275 = sub nsw i32 %274, 16
  %276 = shl i32 %275, 1
  %277 = icmp sle i32 %273, %276
  br i1 %277, label %278, label %384

278:                                              ; preds = %272
  %279 = load i32, i32* %34, align 4
  %280 = icmp sge i32 %279, 0
  br i1 %280, label %281, label %384

281:                                              ; preds = %278
  %282 = load i32, i32* %34, align 4
  %283 = load i32, i32* @height, align 4
  %284 = sub nsw i32 %283, 16
  %285 = icmp sle i32 %282, %284
  br i1 %285, label %286, label %384

286:                                              ; preds = %281
  %287 = load i8*, i8** %13, align 8
  %288 = load i32, i32* %29, align 4
  %289 = ashr i32 %288, 1
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds i8, i8* %287, i64 %290
  %292 = load i32, i32* @width, align 4
  %293 = shl i32 %292, 1
  %294 = load i32, i32* %30, align 4
  %295 = ashr i32 %294, 1
  %296 = mul nsw i32 %293, %295
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds i8, i8* %291, i64 %297
  %299 = load i8*, i8** %13, align 8
  %300 = load i32, i32* @width, align 4
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds i8, i8* %299, i64 %301
  %303 = load i32, i32* %31, align 4
  %304 = ashr i32 %303, 1
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds i8, i8* %302, i64 %305
  %307 = load i32, i32* @width, align 4
  %308 = shl i32 %307, 1
  %309 = load i32, i32* %32, align 4
  %310 = ashr i32 %309, 1
  %311 = mul nsw i32 %308, %310
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds i8, i8* %306, i64 %312
  %314 = load i8*, i8** %14, align 8
  %315 = load i32, i32* @width, align 4
  %316 = shl i32 %315, 1
  %317 = load i32, i32* %29, align 4
  %318 = and i32 %317, 1
  %319 = load i32, i32* %30, align 4
  %320 = and i32 %319, 1
  %321 = load i32, i32* %31, align 4
  %322 = and i32 %321, 1
  %323 = load i32, i32* %32, align 4
  %324 = and i32 %323, 1
  %325 = call i32 @bdist2(i8* %298, i8* %313, i8* %314, i32 %316, i32 %318, i32 %320, i32 %322, i32 %324, i32 8)
  store i32 %325, i32* %48, align 4
  %326 = load i8*, i8** %13, align 8
  %327 = load i32, i32* @width, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds i8, i8* %326, i64 %328
  %330 = load i32, i32* %29, align 4
  %331 = ashr i32 %330, 1
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds i8, i8* %329, i64 %332
  %334 = load i32, i32* @width, align 4
  %335 = shl i32 %334, 1
  %336 = load i32, i32* %30, align 4
  %337 = ashr i32 %336, 1
  %338 = mul nsw i32 %335, %337
  %339 = sext i32 %338 to i64
  %340 = getelementptr inbounds i8, i8* %333, i64 %339
  %341 = load i8*, i8** %13, align 8
  %342 = load i32, i32* %33, align 4
  %343 = ashr i32 %342, 1
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds i8, i8* %341, i64 %344
  %346 = load i32, i32* @width, align 4
  %347 = shl i32 %346, 1
  %348 = load i32, i32* %34, align 4
  %349 = ashr i32 %348, 1
  %350 = mul nsw i32 %347, %349
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds i8, i8* %345, i64 %351
  %353 = load i8*, i8** %14, align 8
  %354 = load i32, i32* @width, align 4
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds i8, i8* %353, i64 %355
  %357 = load i32, i32* @width, align 4
  %358 = shl i32 %357, 1
  %359 = load i32, i32* %29, align 4
  %360 = and i32 %359, 1
  %361 = load i32, i32* %30, align 4
  %362 = and i32 %361, 1
  %363 = load i32, i32* %33, align 4
  %364 = and i32 %363, 1
  %365 = load i32, i32* %34, align 4
  %366 = and i32 %365, 1
  %367 = call i32 @bdist2(i8* %340, i8* %352, i8* %356, i32 %358, i32 %360, i32 %362, i32 %364, i32 %366, i32 8)
  %368 = load i32, i32* %48, align 4
  %369 = add nsw i32 %368, %367
  store i32 %369, i32* %48, align 4
  %370 = load i32, i32* %48, align 4
  %371 = load i32, i32* %47, align 4
  %372 = icmp slt i32 %370, %371
  br i1 %372, label %373, label %383

373:                                              ; preds = %286
  %374 = load i32, i32* %29, align 4
  store i32 %374, i32* %39, align 4
  %375 = load i32, i32* %30, align 4
  store i32 %375, i32* %40, align 4
  %376 = load i32, i32* %31, align 4
  store i32 %376, i32* %41, align 4
  %377 = load i32, i32* %32, align 4
  store i32 %377, i32* %42, align 4
  %378 = load i32, i32* %33, align 4
  store i32 %378, i32* %43, align 4
  %379 = load i32, i32* %34, align 4
  store i32 %379, i32* %44, align 4
  %380 = load i32, i32* %27, align 4
  store i32 %380, i32* %45, align 4
  %381 = load i32, i32* %28, align 4
  store i32 %381, i32* %46, align 4
  %382 = load i32, i32* %48, align 4
  store i32 %382, i32* %47, align 4
  br label %383

383:                                              ; preds = %373, %286
  br label %384

384:                                              ; preds = %383, %281, %278, %272, %269, %264, %261, %255, %240
  br label %385

385:                                              ; preds = %384
  %386 = load i32, i32* %27, align 4
  %387 = add nsw i32 %386, 1
  store i32 %387, i32* %27, align 4
  br label %237

388:                                              ; preds = %237
  br label %389

389:                                              ; preds = %388
  %390 = load i32, i32* %28, align 4
  %391 = add nsw i32 %390, 1
  store i32 %391, i32* %28, align 4
  br label %233

392:                                              ; preds = %233
  br label %393

393:                                              ; preds = %392, %227, %224, %218, %191
  br label %394

394:                                              ; preds = %393, %128
  %395 = load i32, i32* %26, align 4
  %396 = add nsw i32 %395, 1
  store i32 %396, i32* %26, align 4
  br label %53

397:                                              ; preds = %53
  br label %398

398:                                              ; preds = %397
  %399 = load i32, i32* %25, align 4
  %400 = add nsw i32 %399, 1
  store i32 %400, i32* %25, align 4
  br label %49

401:                                              ; preds = %49
  %402 = load i8*, i8** %13, align 8
  %403 = load i32, i32* %39, align 4
  %404 = ashr i32 %403, 1
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds i8, i8* %402, i64 %405
  %407 = load i32, i32* @width, align 4
  %408 = shl i32 %407, 1
  %409 = load i32, i32* %40, align 4
  %410 = ashr i32 %409, 1
  %411 = mul nsw i32 %408, %410
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds i8, i8* %406, i64 %412
  %414 = load i8*, i8** %13, align 8
  %415 = load i32, i32* @width, align 4
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds i8, i8* %414, i64 %416
  %418 = load i32, i32* %41, align 4
  %419 = ashr i32 %418, 1
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds i8, i8* %417, i64 %420
  %422 = load i32, i32* @width, align 4
  %423 = shl i32 %422, 1
  %424 = load i32, i32* %42, align 4
  %425 = ashr i32 %424, 1
  %426 = mul nsw i32 %423, %425
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds i8, i8* %421, i64 %427
  %429 = load i8*, i8** %14, align 8
  %430 = load i32, i32* @width, align 4
  %431 = shl i32 %430, 1
  %432 = load i32, i32* %39, align 4
  %433 = and i32 %432, 1
  %434 = load i32, i32* %40, align 4
  %435 = and i32 %434, 1
  %436 = load i32, i32* %41, align 4
  %437 = and i32 %436, 1
  %438 = load i32, i32* %42, align 4
  %439 = and i32 %438, 1
  %440 = call i32 @bdist1(i8* %413, i8* %428, i8* %429, i32 %431, i32 %433, i32 %435, i32 %437, i32 %439, i32 8)
  store i32 %440, i32* %48, align 4
  %441 = load i8*, i8** %13, align 8
  %442 = load i32, i32* @width, align 4
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds i8, i8* %441, i64 %443
  %445 = load i32, i32* %39, align 4
  %446 = ashr i32 %445, 1
  %447 = sext i32 %446 to i64
  %448 = getelementptr inbounds i8, i8* %444, i64 %447
  %449 = load i32, i32* @width, align 4
  %450 = shl i32 %449, 1
  %451 = load i32, i32* %40, align 4
  %452 = ashr i32 %451, 1
  %453 = mul nsw i32 %450, %452
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds i8, i8* %448, i64 %454
  %456 = load i8*, i8** %13, align 8
  %457 = load i32, i32* %43, align 4
  %458 = ashr i32 %457, 1
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds i8, i8* %456, i64 %459
  %461 = load i32, i32* @width, align 4
  %462 = shl i32 %461, 1
  %463 = load i32, i32* %44, align 4
  %464 = ashr i32 %463, 1
  %465 = mul nsw i32 %462, %464
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds i8, i8* %460, i64 %466
  %468 = load i8*, i8** %14, align 8
  %469 = load i32, i32* @width, align 4
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds i8, i8* %468, i64 %470
  %472 = load i32, i32* @width, align 4
  %473 = shl i32 %472, 1
  %474 = load i32, i32* %39, align 4
  %475 = and i32 %474, 1
  %476 = load i32, i32* %40, align 4
  %477 = and i32 %476, 1
  %478 = load i32, i32* %43, align 4
  %479 = and i32 %478, 1
  %480 = load i32, i32* %44, align 4
  %481 = and i32 %480, 1
  %482 = call i32 @bdist1(i8* %455, i8* %467, i8* %471, i32 %473, i32 %475, i32 %477, i32 %479, i32 %481, i32 8)
  %483 = load i32, i32* %48, align 4
  %484 = add nsw i32 %483, %482
  store i32 %484, i32* %48, align 4
  %485 = load i32, i32* %48, align 4
  %486 = load i32*, i32** %23, align 8
  store i32 %485, i32* %486, align 4
  %487 = load i32, i32* %39, align 4
  %488 = load i32*, i32** %19, align 8
  store i32 %487, i32* %488, align 4
  %489 = load i32, i32* %40, align 4
  %490 = load i32*, i32** %20, align 8
  store i32 %489, i32* %490, align 4
  %491 = load i32, i32* %45, align 4
  %492 = load i32*, i32** %21, align 8
  store i32 %491, i32* %492, align 4
  %493 = load i32, i32* %46, align 4
  %494 = load i32*, i32** %22, align 8
  store i32 %493, i32* %494, align 4
  %495 = load i32, i32* %47, align 4
  %496 = load i32*, i32** %24, align 8
  store i32 %495, i32* %496, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %6 = load i32, i32* %4, align 4
  %7 = icmp ne i32 %6, 3
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @version, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @author, i64 0, i64 0))
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1.66, i64 0, i64 0))
  call void @exit(i32 0) #7
  unreachable

11:                                               ; preds = %2
  %12 = load i8**, i8*** %5, align 8
  %13 = getelementptr inbounds i8*, i8** %12, i64 1
  %14 = load i8*, i8** %13, align 8
  call void @readparmfile(i8* %14)
  call void @readquantmat()
  %15 = load i8**, i8*** %5, align 8
  %16 = getelementptr inbounds i8*, i8** %15, i64 2
  %17 = load i8*, i8** %16, align 8
  %18 = call %struct._IO_FILE* @fopen(i8* %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.67, i64 0, i64 0))
  store %struct._IO_FILE* %18, %struct._IO_FILE** @outfile, align 8
  %19 = icmp ne %struct._IO_FILE* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %11
  %21 = load i8**, i8*** %5, align 8
  %22 = getelementptr inbounds i8*, i8** %21, i64 2
  %23 = load i8*, i8** %22, align 8
  %24 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.68, i64 0, i64 0), i8* %23) #6
  call void @error(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0))
  br label %25

25:                                               ; preds = %20, %11
  call void @init()
  call void @putseq()
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @outfile, align 8
  %27 = call i32 @fclose(%struct._IO_FILE* %26)
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %29 = call i32 @fclose(%struct._IO_FILE* %28)
  ret i32 0
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

; Function Attrs: noinline nounwind uwtable
define internal void @readparmfile(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct._IO_FILE*, align 8
  %9 = alloca [256 x i8], align 16
  store i8* %0, i8** %2, align 8
  %10 = load i8*, i8** %2, align 8
  %11 = call %struct._IO_FILE* @fopen(i8* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.74, i64 0, i64 0))
  store %struct._IO_FILE* %11, %struct._IO_FILE** %8, align 8
  %12 = icmp ne %struct._IO_FILE* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %1
  %14 = load i8*, i8** %2, align 8
  %15 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8.78, i64 0, i64 0), i8* %14) #6
  call void @error(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0))
  br label %16

16:                                               ; preds = %13, %1
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %18 = call i8* @fgets(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @id_string, i64 0, i64 0), i32 254, %struct._IO_FILE* %17)
  %19 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %21 = call i8* @fgets(i8* %19, i32 254, %struct._IO_FILE* %20)
  %22 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %23 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.79, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @tplorg, i64 0, i64 0)) #6
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %26 = call i8* @fgets(i8* %24, i32 254, %struct._IO_FILE* %25)
  %27 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %28 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.79, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @tplref, i64 0, i64 0)) #6
  %29 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %31 = call i8* @fgets(i8* %29, i32 254, %struct._IO_FILE* %30)
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %33 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.79, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @iqname, i64 0, i64 0)) #6
  %34 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %36 = call i8* @fgets(i8* %34, i32 254, %struct._IO_FILE* %35)
  %37 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %38 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.79, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @niqname, i64 0, i64 0)) #6
  %39 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %41 = call i8* @fgets(i8* %39, i32 254, %struct._IO_FILE* %40)
  %42 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %43 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.79, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @statname, i64 0, i64 0)) #6
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %46 = call i8* @fgets(i8* %44, i32 254, %struct._IO_FILE* %45)
  %47 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %48 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %47, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @inputtype) #6
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %51 = call i8* @fgets(i8* %49, i32 254, %struct._IO_FILE* %50)
  %52 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %53 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %52, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @nframes) #6
  %54 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %56 = call i8* @fgets(i8* %54, i32 254, %struct._IO_FILE* %55)
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %58 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %57, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @frame0) #6
  %59 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %61 = call i8* @fgets(i8* %59, i32 254, %struct._IO_FILE* %60)
  %62 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %63 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %62, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.80, i64 0, i64 0), i32* %4, i32* %5, i32* %6, i32* %7) #6
  %64 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %66 = call i8* @fgets(i8* %64, i32 254, %struct._IO_FILE* %65)
  %67 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %68 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %67, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @N) #6
  %69 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %71 = call i8* @fgets(i8* %69, i32 254, %struct._IO_FILE* %70)
  %72 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %73 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %72, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @M) #6
  %74 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %76 = call i8* @fgets(i8* %74, i32 254, %struct._IO_FILE* %75)
  %77 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %77, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @mpeg1) #6
  %79 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %81 = call i8* @fgets(i8* %79, i32 254, %struct._IO_FILE* %80)
  %82 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %83 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %82, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @fieldpic) #6
  %84 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %86 = call i8* @fgets(i8* %84, i32 254, %struct._IO_FILE* %85)
  %87 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %88 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %87, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @horizontal_size) #6
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %91 = call i8* @fgets(i8* %89, i32 254, %struct._IO_FILE* %90)
  %92 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %93 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %92, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @vertical_size) #6
  %94 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %96 = call i8* @fgets(i8* %94, i32 254, %struct._IO_FILE* %95)
  %97 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %98 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @aspectratio) #6
  %99 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %101 = call i8* @fgets(i8* %99, i32 254, %struct._IO_FILE* %100)
  %102 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %103 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %102, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @frame_rate_code) #6
  %104 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %106 = call i8* @fgets(i8* %104, i32 254, %struct._IO_FILE* %105)
  %107 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %108 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %107, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.81, i64 0, i64 0), double* @bit_rate) #6
  %109 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %111 = call i8* @fgets(i8* %109, i32 254, %struct._IO_FILE* %110)
  %112 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %113 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %112, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @vbv_buffer_size) #6
  %114 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %116 = call i8* @fgets(i8* %114, i32 254, %struct._IO_FILE* %115)
  %117 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %118 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %117, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @low_delay) #6
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %120 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %121 = call i8* @fgets(i8* %119, i32 254, %struct._IO_FILE* %120)
  %122 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %123 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %122, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @constrparms) #6
  %124 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %126 = call i8* @fgets(i8* %124, i32 254, %struct._IO_FILE* %125)
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %128 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %127, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @profile) #6
  %129 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %130 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %131 = call i8* @fgets(i8* %129, i32 254, %struct._IO_FILE* %130)
  %132 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %133 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %132, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @level) #6
  %134 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %136 = call i8* @fgets(i8* %134, i32 254, %struct._IO_FILE* %135)
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %138 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %137, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @prog_seq) #6
  %139 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %140 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %141 = call i8* @fgets(i8* %139, i32 254, %struct._IO_FILE* %140)
  %142 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %143 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %142, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @chroma_format) #6
  %144 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %146 = call i8* @fgets(i8* %144, i32 254, %struct._IO_FILE* %145)
  %147 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %148 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %147, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @video_format) #6
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %150 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %151 = call i8* @fgets(i8* %149, i32 254, %struct._IO_FILE* %150)
  %152 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %153 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @color_primaries) #6
  %154 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %155 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %156 = call i8* @fgets(i8* %154, i32 254, %struct._IO_FILE* %155)
  %157 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %158 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %157, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @transfer_characteristics) #6
  %159 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %160 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %161 = call i8* @fgets(i8* %159, i32 254, %struct._IO_FILE* %160)
  %162 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %163 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %162, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @matrix_coefficients) #6
  %164 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %166 = call i8* @fgets(i8* %164, i32 254, %struct._IO_FILE* %165)
  %167 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %168 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %167, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @display_horizontal_size) #6
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %170 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %171 = call i8* @fgets(i8* %169, i32 254, %struct._IO_FILE* %170)
  %172 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %173 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %172, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @display_vertical_size) #6
  %174 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %175 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %176 = call i8* @fgets(i8* %174, i32 254, %struct._IO_FILE* %175)
  %177 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %178 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %177, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @dc_prec) #6
  %179 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %180 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %181 = call i8* @fgets(i8* %179, i32 254, %struct._IO_FILE* %180)
  %182 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %183 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %182, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @topfirst) #6
  %184 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %186 = call i8* @fgets(i8* %184, i32 254, %struct._IO_FILE* %185)
  %187 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %188 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %187, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13.82, i64 0, i64 0), i32* getelementptr inbounds ([3 x i32], [3 x i32]* @frame_pred_dct_tab, i64 0, i64 0), i32* getelementptr inbounds ([3 x i32], [3 x i32]* @frame_pred_dct_tab, i64 0, i64 1), i32* getelementptr inbounds ([3 x i32], [3 x i32]* @frame_pred_dct_tab, i64 0, i64 2)) #6
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %190 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %191 = call i8* @fgets(i8* %189, i32 254, %struct._IO_FILE* %190)
  %192 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %193 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %192, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13.82, i64 0, i64 0), i32* getelementptr inbounds ([3 x i32], [3 x i32]* @conceal_tab, i64 0, i64 0), i32* getelementptr inbounds ([3 x i32], [3 x i32]* @conceal_tab, i64 0, i64 1), i32* getelementptr inbounds ([3 x i32], [3 x i32]* @conceal_tab, i64 0, i64 2)) #6
  %194 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %195 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %196 = call i8* @fgets(i8* %194, i32 254, %struct._IO_FILE* %195)
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %198 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %197, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13.82, i64 0, i64 0), i32* getelementptr inbounds ([3 x i32], [3 x i32]* @qscale_tab, i64 0, i64 0), i32* getelementptr inbounds ([3 x i32], [3 x i32]* @qscale_tab, i64 0, i64 1), i32* getelementptr inbounds ([3 x i32], [3 x i32]* @qscale_tab, i64 0, i64 2)) #6
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %200 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %201 = call i8* @fgets(i8* %199, i32 254, %struct._IO_FILE* %200)
  %202 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %203 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %202, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13.82, i64 0, i64 0), i32* getelementptr inbounds ([3 x i32], [3 x i32]* @intravlc_tab, i64 0, i64 0), i32* getelementptr inbounds ([3 x i32], [3 x i32]* @intravlc_tab, i64 0, i64 1), i32* getelementptr inbounds ([3 x i32], [3 x i32]* @intravlc_tab, i64 0, i64 2)) #6
  %204 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %205 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %206 = call i8* @fgets(i8* %204, i32 254, %struct._IO_FILE* %205)
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %208 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %207, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13.82, i64 0, i64 0), i32* getelementptr inbounds ([3 x i32], [3 x i32]* @altscan_tab, i64 0, i64 0), i32* getelementptr inbounds ([3 x i32], [3 x i32]* @altscan_tab, i64 0, i64 1), i32* getelementptr inbounds ([3 x i32], [3 x i32]* @altscan_tab, i64 0, i64 2)) #6
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %210 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %211 = call i8* @fgets(i8* %209, i32 254, %struct._IO_FILE* %210)
  %212 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %213 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %212, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @repeatfirst) #6
  %214 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %215 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %216 = call i8* @fgets(i8* %214, i32 254, %struct._IO_FILE* %215)
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %218 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %217, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @prog_frame) #6
  %219 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %220 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %221 = call i8* @fgets(i8* %219, i32 254, %struct._IO_FILE* %220)
  %222 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %223 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %222, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @P) #6
  %224 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %225 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %226 = call i8* @fgets(i8* %224, i32 254, %struct._IO_FILE* %225)
  %227 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %228 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %227, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @r) #6
  %229 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %230 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %231 = call i8* @fgets(i8* %229, i32 254, %struct._IO_FILE* %230)
  %232 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %233 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %232, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.81, i64 0, i64 0), double* @avg_act) #6
  %234 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %235 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %236 = call i8* @fgets(i8* %234, i32 254, %struct._IO_FILE* %235)
  %237 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %238 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %237, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @Xi) #6
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %240 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %241 = call i8* @fgets(i8* %239, i32 254, %struct._IO_FILE* %240)
  %242 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %243 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %242, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @Xp) #6
  %244 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %245 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %246 = call i8* @fgets(i8* %244, i32 254, %struct._IO_FILE* %245)
  %247 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %248 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %247, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @Xb) #6
  %249 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %250 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %251 = call i8* @fgets(i8* %249, i32 254, %struct._IO_FILE* %250)
  %252 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %253 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %252, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @d0i) #6
  %254 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %255 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %256 = call i8* @fgets(i8* %254, i32 254, %struct._IO_FILE* %255)
  %257 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %258 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %257, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @d0p) #6
  %259 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %260 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %261 = call i8* @fgets(i8* %259, i32 254, %struct._IO_FILE* %260)
  %262 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %263 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %262, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* @d0b) #6
  %264 = load i32, i32* @N, align 4
  %265 = icmp slt i32 %264, 1
  br i1 %265, label %266, label %267

266:                                              ; preds = %16
  call void @error(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14.83, i64 0, i64 0))
  br label %267

267:                                              ; preds = %266, %16
  %268 = load i32, i32* @M, align 4
  %269 = icmp slt i32 %268, 1
  br i1 %269, label %270, label %271

270:                                              ; preds = %267
  call void @error(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15.84, i64 0, i64 0))
  br label %271

271:                                              ; preds = %270, %267
  %272 = load i32, i32* @N, align 4
  %273 = load i32, i32* @M, align 4
  %274 = srem i32 %272, %273
  %275 = icmp ne i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %271
  call void @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16.85, i64 0, i64 0))
  br label %277

277:                                              ; preds = %276, %271
  %278 = load i32, i32* @M, align 4
  %279 = sext i32 %278 to i64
  %280 = mul i64 %279, 32
  %281 = call noalias i8* @malloc(i64 %280) #6
  %282 = bitcast i8* %281 to %struct.motion_data*
  store %struct.motion_data* %282, %struct.motion_data** @motion_data, align 8
  %283 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %284 = icmp ne %struct.motion_data* %283, null
  br i1 %284, label %286, label %285

285:                                              ; preds = %277
  call void @error(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.71, i64 0, i64 0))
  br label %286

286:                                              ; preds = %285, %277
  store i32 0, i32* %3, align 4
  br label %287

287:                                              ; preds = %346, %286
  %288 = load i32, i32* %3, align 4
  %289 = load i32, i32* @M, align 4
  %290 = icmp slt i32 %288, %289
  br i1 %290, label %291, label %349

291:                                              ; preds = %287
  %292 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %293 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %294 = call i8* @fgets(i8* %292, i32 254, %struct._IO_FILE* %293)
  %295 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %296 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %297 = load i32, i32* %3, align 4
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %296, i64 %298
  %300 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %299, i32 0, i32 0
  %301 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %302 = load i32, i32* %3, align 4
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %301, i64 %303
  %305 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %304, i32 0, i32 1
  %306 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %307 = load i32, i32* %3, align 4
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %306, i64 %308
  %310 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %309, i32 0, i32 2
  %311 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %312 = load i32, i32* %3, align 4
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %311, i64 %313
  %315 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %314, i32 0, i32 3
  %316 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %295, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17.86, i64 0, i64 0), i32* %300, i32* %305, i32* %310, i32* %315) #6
  %317 = load i32, i32* %3, align 4
  %318 = icmp ne i32 %317, 0
  br i1 %318, label %319, label %345

319:                                              ; preds = %291
  %320 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %321 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %322 = call i8* @fgets(i8* %320, i32 254, %struct._IO_FILE* %321)
  %323 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %324 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %325 = load i32, i32* %3, align 4
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %324, i64 %326
  %328 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %327, i32 0, i32 4
  %329 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %330 = load i32, i32* %3, align 4
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %329, i64 %331
  %333 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %332, i32 0, i32 5
  %334 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %335 = load i32, i32* %3, align 4
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %334, i64 %336
  %338 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %337, i32 0, i32 6
  %339 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %340 = load i32, i32* %3, align 4
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %339, i64 %341
  %343 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %342, i32 0, i32 7
  %344 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %323, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17.86, i64 0, i64 0), i32* %328, i32* %333, i32* %338, i32* %343) #6
  br label %345

345:                                              ; preds = %319, %291
  br label %346

346:                                              ; preds = %345
  %347 = load i32, i32* %3, align 4
  %348 = add nsw i32 %347, 1
  store i32 %348, i32* %3, align 4
  br label %287

349:                                              ; preds = %287
  %350 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %351 = call i32 @fclose(%struct._IO_FILE* %350)
  %352 = load i32, i32* @mpeg1, align 4
  %353 = icmp ne i32 %352, 0
  %354 = xor i1 %353, true
  %355 = xor i1 %354, true
  %356 = zext i1 %355 to i32
  store i32 %356, i32* @mpeg1, align 4
  %357 = load i32, i32* @fieldpic, align 4
  %358 = icmp ne i32 %357, 0
  %359 = xor i1 %358, true
  %360 = xor i1 %359, true
  %361 = zext i1 %360 to i32
  store i32 %361, i32* @fieldpic, align 4
  %362 = load i32, i32* @low_delay, align 4
  %363 = icmp ne i32 %362, 0
  %364 = xor i1 %363, true
  %365 = xor i1 %364, true
  %366 = zext i1 %365 to i32
  store i32 %366, i32* @low_delay, align 4
  %367 = load i32, i32* @constrparms, align 4
  %368 = icmp ne i32 %367, 0
  %369 = xor i1 %368, true
  %370 = xor i1 %369, true
  %371 = zext i1 %370 to i32
  store i32 %371, i32* @constrparms, align 4
  %372 = load i32, i32* @prog_seq, align 4
  %373 = icmp ne i32 %372, 0
  %374 = xor i1 %373, true
  %375 = xor i1 %374, true
  %376 = zext i1 %375 to i32
  store i32 %376, i32* @prog_seq, align 4
  %377 = load i32, i32* @topfirst, align 4
  %378 = icmp ne i32 %377, 0
  %379 = xor i1 %378, true
  %380 = xor i1 %379, true
  %381 = zext i1 %380 to i32
  store i32 %381, i32* @topfirst, align 4
  store i32 0, i32* %3, align 4
  br label %382

382:                                              ; preds = %441, %349
  %383 = load i32, i32* %3, align 4
  %384 = icmp slt i32 %383, 3
  br i1 %384, label %385, label %444

385:                                              ; preds = %382
  %386 = load i32, i32* %3, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds [3 x i32], [3 x i32]* @frame_pred_dct_tab, i64 0, i64 %387
  %389 = load i32, i32* %388, align 4
  %390 = icmp ne i32 %389, 0
  %391 = xor i1 %390, true
  %392 = xor i1 %391, true
  %393 = zext i1 %392 to i32
  %394 = load i32, i32* %3, align 4
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds [3 x i32], [3 x i32]* @frame_pred_dct_tab, i64 0, i64 %395
  store i32 %393, i32* %396, align 4
  %397 = load i32, i32* %3, align 4
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds [3 x i32], [3 x i32]* @conceal_tab, i64 0, i64 %398
  %400 = load i32, i32* %399, align 4
  %401 = icmp ne i32 %400, 0
  %402 = xor i1 %401, true
  %403 = xor i1 %402, true
  %404 = zext i1 %403 to i32
  %405 = load i32, i32* %3, align 4
  %406 = sext i32 %405 to i64
  %407 = getelementptr inbounds [3 x i32], [3 x i32]* @conceal_tab, i64 0, i64 %406
  store i32 %404, i32* %407, align 4
  %408 = load i32, i32* %3, align 4
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds [3 x i32], [3 x i32]* @qscale_tab, i64 0, i64 %409
  %411 = load i32, i32* %410, align 4
  %412 = icmp ne i32 %411, 0
  %413 = xor i1 %412, true
  %414 = xor i1 %413, true
  %415 = zext i1 %414 to i32
  %416 = load i32, i32* %3, align 4
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds [3 x i32], [3 x i32]* @qscale_tab, i64 0, i64 %417
  store i32 %415, i32* %418, align 4
  %419 = load i32, i32* %3, align 4
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds [3 x i32], [3 x i32]* @intravlc_tab, i64 0, i64 %420
  %422 = load i32, i32* %421, align 4
  %423 = icmp ne i32 %422, 0
  %424 = xor i1 %423, true
  %425 = xor i1 %424, true
  %426 = zext i1 %425 to i32
  %427 = load i32, i32* %3, align 4
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds [3 x i32], [3 x i32]* @intravlc_tab, i64 0, i64 %428
  store i32 %426, i32* %429, align 4
  %430 = load i32, i32* %3, align 4
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds [3 x i32], [3 x i32]* @altscan_tab, i64 0, i64 %431
  %433 = load i32, i32* %432, align 4
  %434 = icmp ne i32 %433, 0
  %435 = xor i1 %434, true
  %436 = xor i1 %435, true
  %437 = zext i1 %436 to i32
  %438 = load i32, i32* %3, align 4
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds [3 x i32], [3 x i32]* @altscan_tab, i64 0, i64 %439
  store i32 %437, i32* %440, align 4
  br label %441

441:                                              ; preds = %385
  %442 = load i32, i32* %3, align 4
  %443 = add nsw i32 %442, 1
  store i32 %443, i32* %3, align 4
  br label %382

444:                                              ; preds = %382
  %445 = load i32, i32* @repeatfirst, align 4
  %446 = icmp ne i32 %445, 0
  %447 = xor i1 %446, true
  %448 = xor i1 %447, true
  %449 = zext i1 %448 to i32
  store i32 %449, i32* @repeatfirst, align 4
  %450 = load i32, i32* @prog_frame, align 4
  %451 = icmp ne i32 %450, 0
  %452 = xor i1 %451, true
  %453 = xor i1 %452, true
  %454 = zext i1 %453 to i32
  store i32 %454, i32* @prog_frame, align 4
  call void @range_checks()
  %455 = load i32, i32* @frame_rate_code, align 4
  %456 = sub nsw i32 %455, 1
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds [8 x double], [8 x double]* @readparmfile.ratetab, i64 0, i64 %457
  %459 = load double, double* %458, align 8
  store double %459, double* @frame_rate, align 8
  %460 = load i32, i32* %4, align 4
  store i32 %460, i32* @tc0, align 4
  %461 = load i32, i32* @tc0, align 4
  %462 = mul nsw i32 60, %461
  %463 = load i32, i32* %5, align 4
  %464 = add nsw i32 %462, %463
  store i32 %464, i32* @tc0, align 4
  %465 = load i32, i32* @tc0, align 4
  %466 = mul nsw i32 60, %465
  %467 = load i32, i32* %6, align 4
  %468 = add nsw i32 %466, %467
  store i32 %468, i32* @tc0, align 4
  %469 = load double, double* @frame_rate, align 8
  %470 = fadd double %469, 5.000000e-01
  %471 = fptosi double %470 to i32
  %472 = load i32, i32* @tc0, align 4
  %473 = mul nsw i32 %471, %472
  %474 = load i32, i32* %7, align 4
  %475 = add nsw i32 %473, %474
  store i32 %475, i32* @tc0, align 4
  %476 = load i32, i32* @mpeg1, align 4
  %477 = icmp ne i32 %476, 0
  br i1 %477, label %479, label %478

478:                                              ; preds = %444
  call void (...) bitcast (void ()* @profile_and_level_checks to void (...)*)()
  br label %598

479:                                              ; preds = %444
  %480 = load i32, i32* @constrparms, align 4
  %481 = icmp ne i32 %480, 0
  br i1 %481, label %482, label %520

482:                                              ; preds = %479
  %483 = load i32, i32* @horizontal_size, align 4
  %484 = icmp sgt i32 %483, 768
  br i1 %484, label %512, label %485

485:                                              ; preds = %482
  %486 = load i32, i32* @vertical_size, align 4
  %487 = icmp sgt i32 %486, 576
  br i1 %487, label %512, label %488

488:                                              ; preds = %485
  %489 = load i32, i32* @horizontal_size, align 4
  %490 = add nsw i32 %489, 15
  %491 = sdiv i32 %490, 16
  %492 = load i32, i32* @vertical_size, align 4
  %493 = add nsw i32 %492, 15
  %494 = sdiv i32 %493, 16
  %495 = mul nsw i32 %491, %494
  %496 = icmp sgt i32 %495, 396
  br i1 %496, label %512, label %497

497:                                              ; preds = %488
  %498 = load i32, i32* @horizontal_size, align 4
  %499 = add nsw i32 %498, 15
  %500 = sdiv i32 %499, 16
  %501 = load i32, i32* @vertical_size, align 4
  %502 = add nsw i32 %501, 15
  %503 = sdiv i32 %502, 16
  %504 = mul nsw i32 %500, %503
  %505 = sitofp i32 %504 to double
  %506 = load double, double* @frame_rate, align 8
  %507 = fmul double %505, %506
  %508 = fcmp ogt double %507, 9.900000e+03
  br i1 %508, label %512, label %509

509:                                              ; preds = %497
  %510 = load double, double* @frame_rate, align 8
  %511 = fcmp ogt double %510, 3.000000e+01
  br i1 %511, label %512, label %519

512:                                              ; preds = %509, %497, %488, %485, %482
  %513 = load i32, i32* @quiet, align 4
  %514 = icmp ne i32 %513, 0
  br i1 %514, label %518, label %515

515:                                              ; preds = %512
  %516 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %517 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %516, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.18.87, i64 0, i64 0))
  br label %518

518:                                              ; preds = %515, %512
  store i32 0, i32* @constrparms, align 4
  br label %519

519:                                              ; preds = %518, %509
  br label %520

520:                                              ; preds = %519, %479
  %521 = load i32, i32* @constrparms, align 4
  %522 = icmp ne i32 %521, 0
  br i1 %522, label %523, label %597

523:                                              ; preds = %520
  store i32 0, i32* %3, align 4
  br label %524

524:                                              ; preds = %593, %523
  %525 = load i32, i32* %3, align 4
  %526 = load i32, i32* @M, align 4
  %527 = icmp slt i32 %525, %526
  br i1 %527, label %528, label %596

528:                                              ; preds = %524
  %529 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %530 = load i32, i32* %3, align 4
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %529, i64 %531
  %533 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %532, i32 0, i32 0
  %534 = load i32, i32* %533, align 4
  %535 = icmp sgt i32 %534, 4
  br i1 %535, label %536, label %543

536:                                              ; preds = %528
  %537 = load i32, i32* @quiet, align 4
  %538 = icmp ne i32 %537, 0
  br i1 %538, label %542, label %539

539:                                              ; preds = %536
  %540 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %541 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %540, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.18.87, i64 0, i64 0))
  br label %542

542:                                              ; preds = %539, %536
  store i32 0, i32* @constrparms, align 4
  br label %596

543:                                              ; preds = %528
  %544 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %545 = load i32, i32* %3, align 4
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %544, i64 %546
  %548 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %547, i32 0, i32 1
  %549 = load i32, i32* %548, align 4
  %550 = icmp sgt i32 %549, 4
  br i1 %550, label %551, label %558

551:                                              ; preds = %543
  %552 = load i32, i32* @quiet, align 4
  %553 = icmp ne i32 %552, 0
  br i1 %553, label %557, label %554

554:                                              ; preds = %551
  %555 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %556 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %555, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.18.87, i64 0, i64 0))
  br label %557

557:                                              ; preds = %554, %551
  store i32 0, i32* @constrparms, align 4
  br label %596

558:                                              ; preds = %543
  %559 = load i32, i32* %3, align 4
  %560 = icmp ne i32 %559, 0
  br i1 %560, label %561, label %592

561:                                              ; preds = %558
  %562 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %563 = load i32, i32* %3, align 4
  %564 = sext i32 %563 to i64
  %565 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %562, i64 %564
  %566 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %565, i32 0, i32 4
  %567 = load i32, i32* %566, align 4
  %568 = icmp sgt i32 %567, 4
  br i1 %568, label %569, label %576

569:                                              ; preds = %561
  %570 = load i32, i32* @quiet, align 4
  %571 = icmp ne i32 %570, 0
  br i1 %571, label %575, label %572

572:                                              ; preds = %569
  %573 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %574 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %573, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.18.87, i64 0, i64 0))
  br label %575

575:                                              ; preds = %572, %569
  store i32 0, i32* @constrparms, align 4
  br label %596

576:                                              ; preds = %561
  %577 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %578 = load i32, i32* %3, align 4
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %577, i64 %579
  %581 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %580, i32 0, i32 5
  %582 = load i32, i32* %581, align 4
  %583 = icmp sgt i32 %582, 4
  br i1 %583, label %584, label %591

584:                                              ; preds = %576
  %585 = load i32, i32* @quiet, align 4
  %586 = icmp ne i32 %585, 0
  br i1 %586, label %590, label %587

587:                                              ; preds = %584
  %588 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %589 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %588, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.18.87, i64 0, i64 0))
  br label %590

590:                                              ; preds = %587, %584
  store i32 0, i32* @constrparms, align 4
  br label %596

591:                                              ; preds = %576
  br label %592

592:                                              ; preds = %591, %558
  br label %593

593:                                              ; preds = %592
  %594 = load i32, i32* %3, align 4
  %595 = add nsw i32 %594, 1
  store i32 %595, i32* %3, align 4
  br label %524

596:                                              ; preds = %590, %575, %557, %542, %524
  br label %597

597:                                              ; preds = %596, %520
  br label %598

598:                                              ; preds = %597, %478
  %599 = load i32, i32* @mpeg1, align 4
  %600 = icmp ne i32 %599, 0
  br i1 %600, label %601, label %707

601:                                              ; preds = %598
  %602 = load i32, i32* @prog_seq, align 4
  %603 = icmp ne i32 %602, 0
  br i1 %603, label %611, label %604

604:                                              ; preds = %601
  %605 = load i32, i32* @quiet, align 4
  %606 = icmp ne i32 %605, 0
  br i1 %606, label %610, label %607

607:                                              ; preds = %604
  %608 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %609 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %608, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.19.88, i64 0, i64 0))
  br label %610

610:                                              ; preds = %607, %604
  store i32 1, i32* @prog_seq, align 4
  br label %611

611:                                              ; preds = %610, %601
  %612 = load i32, i32* @chroma_format, align 4
  %613 = icmp ne i32 %612, 1
  br i1 %613, label %614, label %621

614:                                              ; preds = %611
  %615 = load i32, i32* @quiet, align 4
  %616 = icmp ne i32 %615, 0
  br i1 %616, label %620, label %617

617:                                              ; preds = %614
  %618 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %619 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %618, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20.89, i64 0, i64 0))
  br label %620

620:                                              ; preds = %617, %614
  store i32 1, i32* @chroma_format, align 4
  br label %621

621:                                              ; preds = %620, %611
  %622 = load i32, i32* @dc_prec, align 4
  %623 = icmp ne i32 %622, 0
  br i1 %623, label %624, label %631

624:                                              ; preds = %621
  %625 = load i32, i32* @quiet, align 4
  %626 = icmp ne i32 %625, 0
  br i1 %626, label %630, label %627

627:                                              ; preds = %624
  %628 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %629 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %628, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.21.90, i64 0, i64 0))
  br label %630

630:                                              ; preds = %627, %624
  store i32 0, i32* @dc_prec, align 4
  br label %631

631:                                              ; preds = %630, %621
  store i32 0, i32* %3, align 4
  br label %632

632:                                              ; preds = %653, %631
  %633 = load i32, i32* %3, align 4
  %634 = icmp slt i32 %633, 3
  br i1 %634, label %635, label %656

635:                                              ; preds = %632
  %636 = load i32, i32* %3, align 4
  %637 = sext i32 %636 to i64
  %638 = getelementptr inbounds [3 x i32], [3 x i32]* @qscale_tab, i64 0, i64 %637
  %639 = load i32, i32* %638, align 4
  %640 = icmp ne i32 %639, 0
  br i1 %640, label %641, label %652

641:                                              ; preds = %635
  %642 = load i32, i32* @quiet, align 4
  %643 = icmp ne i32 %642, 0
  br i1 %643, label %648, label %644

644:                                              ; preds = %641
  %645 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %646 = load i32, i32* %3, align 4
  %647 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %645, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.22.91, i64 0, i64 0), i32 %646)
  br label %648

648:                                              ; preds = %644, %641
  %649 = load i32, i32* %3, align 4
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds [3 x i32], [3 x i32]* @qscale_tab, i64 0, i64 %650
  store i32 0, i32* %651, align 4
  br label %652

652:                                              ; preds = %648, %635
  br label %653

653:                                              ; preds = %652
  %654 = load i32, i32* %3, align 4
  %655 = add nsw i32 %654, 1
  store i32 %655, i32* %3, align 4
  br label %632

656:                                              ; preds = %632
  store i32 0, i32* %3, align 4
  br label %657

657:                                              ; preds = %678, %656
  %658 = load i32, i32* %3, align 4
  %659 = icmp slt i32 %658, 3
  br i1 %659, label %660, label %681

660:                                              ; preds = %657
  %661 = load i32, i32* %3, align 4
  %662 = sext i32 %661 to i64
  %663 = getelementptr inbounds [3 x i32], [3 x i32]* @intravlc_tab, i64 0, i64 %662
  %664 = load i32, i32* %663, align 4
  %665 = icmp ne i32 %664, 0
  br i1 %665, label %666, label %677

666:                                              ; preds = %660
  %667 = load i32, i32* @quiet, align 4
  %668 = icmp ne i32 %667, 0
  br i1 %668, label %673, label %669

669:                                              ; preds = %666
  %670 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %671 = load i32, i32* %3, align 4
  %672 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %670, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23.92, i64 0, i64 0), i32 %671)
  br label %673

673:                                              ; preds = %669, %666
  %674 = load i32, i32* %3, align 4
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds [3 x i32], [3 x i32]* @intravlc_tab, i64 0, i64 %675
  store i32 0, i32* %676, align 4
  br label %677

677:                                              ; preds = %673, %660
  br label %678

678:                                              ; preds = %677
  %679 = load i32, i32* %3, align 4
  %680 = add nsw i32 %679, 1
  store i32 %680, i32* %3, align 4
  br label %657

681:                                              ; preds = %657
  store i32 0, i32* %3, align 4
  br label %682

682:                                              ; preds = %703, %681
  %683 = load i32, i32* %3, align 4
  %684 = icmp slt i32 %683, 3
  br i1 %684, label %685, label %706

685:                                              ; preds = %682
  %686 = load i32, i32* %3, align 4
  %687 = sext i32 %686 to i64
  %688 = getelementptr inbounds [3 x i32], [3 x i32]* @altscan_tab, i64 0, i64 %687
  %689 = load i32, i32* %688, align 4
  %690 = icmp ne i32 %689, 0
  br i1 %690, label %691, label %702

691:                                              ; preds = %685
  %692 = load i32, i32* @quiet, align 4
  %693 = icmp ne i32 %692, 0
  br i1 %693, label %698, label %694

694:                                              ; preds = %691
  %695 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %696 = load i32, i32* %3, align 4
  %697 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %695, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.24.93, i64 0, i64 0), i32 %696)
  br label %698

698:                                              ; preds = %694, %691
  %699 = load i32, i32* %3, align 4
  %700 = sext i32 %699 to i64
  %701 = getelementptr inbounds [3 x i32], [3 x i32]* @altscan_tab, i64 0, i64 %700
  store i32 0, i32* %701, align 4
  br label %702

702:                                              ; preds = %698, %685
  br label %703

703:                                              ; preds = %702
  %704 = load i32, i32* %3, align 4
  %705 = add nsw i32 %704, 1
  store i32 %705, i32* %3, align 4
  br label %682

706:                                              ; preds = %682
  br label %707

707:                                              ; preds = %706, %598
  %708 = load i32, i32* @mpeg1, align 4
  %709 = icmp ne i32 %708, 0
  br i1 %709, label %720, label %710

710:                                              ; preds = %707
  %711 = load i32, i32* @constrparms, align 4
  %712 = icmp ne i32 %711, 0
  br i1 %712, label %713, label %720

713:                                              ; preds = %710
  %714 = load i32, i32* @quiet, align 4
  %715 = icmp ne i32 %714, 0
  br i1 %715, label %719, label %716

716:                                              ; preds = %713
  %717 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %718 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %717, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.18.87, i64 0, i64 0))
  br label %719

719:                                              ; preds = %716, %713
  store i32 0, i32* @constrparms, align 4
  br label %720

720:                                              ; preds = %719, %710, %707
  %721 = load i32, i32* @prog_seq, align 4
  %722 = icmp ne i32 %721, 0
  br i1 %722, label %723, label %733

723:                                              ; preds = %720
  %724 = load i32, i32* @prog_frame, align 4
  %725 = icmp ne i32 %724, 0
  br i1 %725, label %733, label %726

726:                                              ; preds = %723
  %727 = load i32, i32* @quiet, align 4
  %728 = icmp ne i32 %727, 0
  br i1 %728, label %732, label %729

729:                                              ; preds = %726
  %730 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %731 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %730, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.94, i64 0, i64 0))
  br label %732

732:                                              ; preds = %729, %726
  store i32 1, i32* @prog_frame, align 4
  br label %733

733:                                              ; preds = %732, %723, %720
  %734 = load i32, i32* @prog_frame, align 4
  %735 = icmp ne i32 %734, 0
  br i1 %735, label %736, label %746

736:                                              ; preds = %733
  %737 = load i32, i32* @fieldpic, align 4
  %738 = icmp ne i32 %737, 0
  br i1 %738, label %739, label %746

739:                                              ; preds = %736
  %740 = load i32, i32* @quiet, align 4
  %741 = icmp ne i32 %740, 0
  br i1 %741, label %745, label %742

742:                                              ; preds = %739
  %743 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %744 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %743, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.26.95, i64 0, i64 0))
  br label %745

745:                                              ; preds = %742, %739
  store i32 0, i32* @fieldpic, align 4
  br label %746

746:                                              ; preds = %745, %736, %733
  %747 = load i32, i32* @prog_frame, align 4
  %748 = icmp ne i32 %747, 0
  br i1 %748, label %759, label %749

749:                                              ; preds = %746
  %750 = load i32, i32* @repeatfirst, align 4
  %751 = icmp ne i32 %750, 0
  br i1 %751, label %752, label %759

752:                                              ; preds = %749
  %753 = load i32, i32* @quiet, align 4
  %754 = icmp ne i32 %753, 0
  br i1 %754, label %758, label %755

755:                                              ; preds = %752
  %756 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %757 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %756, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.27.96, i64 0, i64 0))
  br label %758

758:                                              ; preds = %755, %752
  store i32 0, i32* @repeatfirst, align 4
  br label %759

759:                                              ; preds = %758, %749, %746
  %760 = load i32, i32* @prog_frame, align 4
  %761 = icmp ne i32 %760, 0
  br i1 %761, label %762, label %788

762:                                              ; preds = %759
  store i32 0, i32* %3, align 4
  br label %763

763:                                              ; preds = %784, %762
  %764 = load i32, i32* %3, align 4
  %765 = icmp slt i32 %764, 3
  br i1 %765, label %766, label %787

766:                                              ; preds = %763
  %767 = load i32, i32* %3, align 4
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds [3 x i32], [3 x i32]* @frame_pred_dct_tab, i64 0, i64 %768
  %770 = load i32, i32* %769, align 4
  %771 = icmp ne i32 %770, 0
  br i1 %771, label %783, label %772

772:                                              ; preds = %766
  %773 = load i32, i32* @quiet, align 4
  %774 = icmp ne i32 %773, 0
  br i1 %774, label %779, label %775

775:                                              ; preds = %772
  %776 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %777 = load i32, i32* %3, align 4
  %778 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %776, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.28.97, i64 0, i64 0), i32 %777)
  br label %779

779:                                              ; preds = %775, %772
  %780 = load i32, i32* %3, align 4
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds [3 x i32], [3 x i32]* @frame_pred_dct_tab, i64 0, i64 %781
  store i32 1, i32* %782, align 4
  br label %783

783:                                              ; preds = %779, %766
  br label %784

784:                                              ; preds = %783
  %785 = load i32, i32* %3, align 4
  %786 = add nsw i32 %785, 1
  store i32 %786, i32* %3, align 4
  br label %763

787:                                              ; preds = %763
  br label %788

788:                                              ; preds = %787, %759
  %789 = load i32, i32* @prog_seq, align 4
  %790 = icmp ne i32 %789, 0
  br i1 %790, label %791, label %804

791:                                              ; preds = %788
  %792 = load i32, i32* @repeatfirst, align 4
  %793 = icmp ne i32 %792, 0
  br i1 %793, label %804, label %794

794:                                              ; preds = %791
  %795 = load i32, i32* @topfirst, align 4
  %796 = icmp ne i32 %795, 0
  br i1 %796, label %797, label %804

797:                                              ; preds = %794
  %798 = load i32, i32* @quiet, align 4
  %799 = icmp ne i32 %798, 0
  br i1 %799, label %803, label %800

800:                                              ; preds = %797
  %801 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %802 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %801, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.98, i64 0, i64 0))
  br label %803

803:                                              ; preds = %800, %797
  store i32 0, i32* @topfirst, align 4
  br label %804

804:                                              ; preds = %803, %794, %791, %788
  store i32 0, i32* %3, align 4
  br label %805

805:                                              ; preds = %990, %804
  %806 = load i32, i32* %3, align 4
  %807 = load i32, i32* @M, align 4
  %808 = icmp slt i32 %806, %807
  br i1 %808, label %809, label %993

809:                                              ; preds = %805
  %810 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %811 = load i32, i32* %3, align 4
  %812 = sext i32 %811 to i64
  %813 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %810, i64 %812
  %814 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %813, i32 0, i32 2
  %815 = load i32, i32* %814, align 4
  %816 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %817 = load i32, i32* %3, align 4
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %816, i64 %818
  %820 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %819, i32 0, i32 0
  %821 = load i32, i32* %820, align 4
  %822 = shl i32 4, %821
  %823 = sub nsw i32 %822, 1
  %824 = icmp sgt i32 %815, %823
  br i1 %824, label %825, label %853

825:                                              ; preds = %809
  %826 = load i32, i32* @quiet, align 4
  %827 = icmp ne i32 %826, 0
  br i1 %827, label %839, label %828

828:                                              ; preds = %825
  %829 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %830 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %831 = load i32, i32* %3, align 4
  %832 = sext i32 %831 to i64
  %833 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %830, i64 %832
  %834 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %833, i32 0, i32 0
  %835 = load i32, i32* %834, align 4
  %836 = shl i32 4, %835
  %837 = sub nsw i32 %836, 1
  %838 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %829, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.30.99, i64 0, i64 0), i32 %837)
  br label %839

839:                                              ; preds = %828, %825
  %840 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %841 = load i32, i32* %3, align 4
  %842 = sext i32 %841 to i64
  %843 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %840, i64 %842
  %844 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %843, i32 0, i32 0
  %845 = load i32, i32* %844, align 4
  %846 = shl i32 4, %845
  %847 = sub nsw i32 %846, 1
  %848 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %849 = load i32, i32* %3, align 4
  %850 = sext i32 %849 to i64
  %851 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %848, i64 %850
  %852 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %851, i32 0, i32 2
  store i32 %847, i32* %852, align 4
  br label %853

853:                                              ; preds = %839, %809
  %854 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %855 = load i32, i32* %3, align 4
  %856 = sext i32 %855 to i64
  %857 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %854, i64 %856
  %858 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %857, i32 0, i32 3
  %859 = load i32, i32* %858, align 4
  %860 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %861 = load i32, i32* %3, align 4
  %862 = sext i32 %861 to i64
  %863 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %860, i64 %862
  %864 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %863, i32 0, i32 1
  %865 = load i32, i32* %864, align 4
  %866 = shl i32 4, %865
  %867 = sub nsw i32 %866, 1
  %868 = icmp sgt i32 %859, %867
  br i1 %868, label %869, label %897

869:                                              ; preds = %853
  %870 = load i32, i32* @quiet, align 4
  %871 = icmp ne i32 %870, 0
  br i1 %871, label %883, label %872

872:                                              ; preds = %869
  %873 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %874 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %875 = load i32, i32* %3, align 4
  %876 = sext i32 %875 to i64
  %877 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %874, i64 %876
  %878 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %877, i32 0, i32 1
  %879 = load i32, i32* %878, align 4
  %880 = shl i32 4, %879
  %881 = sub nsw i32 %880, 1
  %882 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %873, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.31.100, i64 0, i64 0), i32 %881)
  br label %883

883:                                              ; preds = %872, %869
  %884 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %885 = load i32, i32* %3, align 4
  %886 = sext i32 %885 to i64
  %887 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %884, i64 %886
  %888 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %887, i32 0, i32 1
  %889 = load i32, i32* %888, align 4
  %890 = shl i32 4, %889
  %891 = sub nsw i32 %890, 1
  %892 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %893 = load i32, i32* %3, align 4
  %894 = sext i32 %893 to i64
  %895 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %892, i64 %894
  %896 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %895, i32 0, i32 3
  store i32 %891, i32* %896, align 4
  br label %897

897:                                              ; preds = %883, %853
  %898 = load i32, i32* %3, align 4
  %899 = icmp ne i32 %898, 0
  br i1 %899, label %900, label %989

900:                                              ; preds = %897
  %901 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %902 = load i32, i32* %3, align 4
  %903 = sext i32 %902 to i64
  %904 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %901, i64 %903
  %905 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %904, i32 0, i32 6
  %906 = load i32, i32* %905, align 4
  %907 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %908 = load i32, i32* %3, align 4
  %909 = sext i32 %908 to i64
  %910 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %907, i64 %909
  %911 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %910, i32 0, i32 4
  %912 = load i32, i32* %911, align 4
  %913 = shl i32 4, %912
  %914 = sub nsw i32 %913, 1
  %915 = icmp sgt i32 %906, %914
  br i1 %915, label %916, label %944

916:                                              ; preds = %900
  %917 = load i32, i32* @quiet, align 4
  %918 = icmp ne i32 %917, 0
  br i1 %918, label %930, label %919

919:                                              ; preds = %916
  %920 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %921 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %922 = load i32, i32* %3, align 4
  %923 = sext i32 %922 to i64
  %924 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %921, i64 %923
  %925 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %924, i32 0, i32 4
  %926 = load i32, i32* %925, align 4
  %927 = shl i32 4, %926
  %928 = sub nsw i32 %927, 1
  %929 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %920, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.32.101, i64 0, i64 0), i32 %928)
  br label %930

930:                                              ; preds = %919, %916
  %931 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %932 = load i32, i32* %3, align 4
  %933 = sext i32 %932 to i64
  %934 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %931, i64 %933
  %935 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %934, i32 0, i32 4
  %936 = load i32, i32* %935, align 4
  %937 = shl i32 4, %936
  %938 = sub nsw i32 %937, 1
  %939 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %940 = load i32, i32* %3, align 4
  %941 = sext i32 %940 to i64
  %942 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %939, i64 %941
  %943 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %942, i32 0, i32 6
  store i32 %938, i32* %943, align 4
  br label %944

944:                                              ; preds = %930, %900
  %945 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %946 = load i32, i32* %3, align 4
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %945, i64 %947
  %949 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %948, i32 0, i32 7
  %950 = load i32, i32* %949, align 4
  %951 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %952 = load i32, i32* %3, align 4
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %951, i64 %953
  %955 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %954, i32 0, i32 5
  %956 = load i32, i32* %955, align 4
  %957 = shl i32 4, %956
  %958 = sub nsw i32 %957, 1
  %959 = icmp sgt i32 %950, %958
  br i1 %959, label %960, label %988

960:                                              ; preds = %944
  %961 = load i32, i32* @quiet, align 4
  %962 = icmp ne i32 %961, 0
  br i1 %962, label %974, label %963

963:                                              ; preds = %960
  %964 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %965 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %966 = load i32, i32* %3, align 4
  %967 = sext i32 %966 to i64
  %968 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %965, i64 %967
  %969 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %968, i32 0, i32 5
  %970 = load i32, i32* %969, align 4
  %971 = shl i32 4, %970
  %972 = sub nsw i32 %971, 1
  %973 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %964, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.33.102, i64 0, i64 0), i32 %972)
  br label %974

974:                                              ; preds = %963, %960
  %975 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %976 = load i32, i32* %3, align 4
  %977 = sext i32 %976 to i64
  %978 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %975, i64 %977
  %979 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %978, i32 0, i32 5
  %980 = load i32, i32* %979, align 4
  %981 = shl i32 4, %980
  %982 = sub nsw i32 %981, 1
  %983 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %984 = load i32, i32* %3, align 4
  %985 = sext i32 %984 to i64
  %986 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %983, i64 %985
  %987 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %986, i32 0, i32 7
  store i32 %982, i32* %987, align 4
  br label %988

988:                                              ; preds = %974, %944
  br label %989

989:                                              ; preds = %988, %897
  br label %990

990:                                              ; preds = %989
  %991 = load i32, i32* %3, align 4
  %992 = add nsw i32 %991, 1
  store i32 %992, i32* %3, align 4
  br label %805

993:                                              ; preds = %805
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @readquantmat() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @iqname, i64 0, i64 0), align 16
  %5 = sext i8 %4 to i32
  %6 = icmp eq i32 %5, 45
  br i1 %6, label %7, label %23

7:                                                ; preds = %0
  store i32 0, i32* @load_iquant, align 4
  store i32 0, i32* %1, align 4
  br label %8

8:                                                ; preds = %19, %7
  %9 = load i32, i32* %1, align 4
  %10 = icmp slt i32 %9, 64
  br i1 %10, label %11, label %22

11:                                               ; preds = %8
  %12 = load i32, i32* %1, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [64 x i8], [64 x i8]* @default_intra_quantizer_matrix, i64 0, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = load i32, i32* %1, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [64 x i8], [64 x i8]* @intra_q, i64 0, i64 %17
  store i8 %15, i8* %18, align 1
  br label %19

19:                                               ; preds = %11
  %20 = load i32, i32* %1, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %1, align 4
  br label %8

22:                                               ; preds = %8
  br label %53

23:                                               ; preds = %0
  store i32 1, i32* @load_iquant, align 4
  %24 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @iqname, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.74, i64 0, i64 0))
  store %struct._IO_FILE* %24, %struct._IO_FILE** %3, align 8
  %25 = icmp ne %struct._IO_FILE* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %23
  %27 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.34.75, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @iqname, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0))
  br label %28

28:                                               ; preds = %26, %23
  store i32 0, i32* %1, align 4
  br label %29

29:                                               ; preds = %47, %28
  %30 = load i32, i32* %1, align 4
  %31 = icmp slt i32 %30, 64
  br i1 %31, label %32, label %50

32:                                               ; preds = %29
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %34 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* %2)
  %35 = load i32, i32* %2, align 4
  %36 = icmp slt i32 %35, 1
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = load i32, i32* %2, align 4
  %39 = icmp sgt i32 %38, 255
  br i1 %39, label %40, label %41

40:                                               ; preds = %37, %32
  call void @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35.77, i64 0, i64 0))
  br label %41

41:                                               ; preds = %40, %37
  %42 = load i32, i32* %2, align 4
  %43 = trunc i32 %42 to i8
  %44 = load i32, i32* %1, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [64 x i8], [64 x i8]* @intra_q, i64 0, i64 %45
  store i8 %43, i8* %46, align 1
  br label %47

47:                                               ; preds = %41
  %48 = load i32, i32* %1, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %1, align 4
  br label %29

50:                                               ; preds = %29
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %52 = call i32 @fclose(%struct._IO_FILE* %51)
  br label %53

53:                                               ; preds = %50, %22
  %54 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @niqname, i64 0, i64 0), align 16
  %55 = sext i8 %54 to i32
  %56 = icmp eq i32 %55, 45
  br i1 %56, label %57, label %69

57:                                               ; preds = %53
  store i32 0, i32* @load_niquant, align 4
  store i32 0, i32* %1, align 4
  br label %58

58:                                               ; preds = %65, %57
  %59 = load i32, i32* %1, align 4
  %60 = icmp slt i32 %59, 64
  br i1 %60, label %61, label %68

61:                                               ; preds = %58
  %62 = load i32, i32* %1, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [64 x i8], [64 x i8]* @inter_q, i64 0, i64 %63
  store i8 16, i8* %64, align 1
  br label %65

65:                                               ; preds = %61
  %66 = load i32, i32* %1, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %1, align 4
  br label %58

68:                                               ; preds = %58
  br label %99

69:                                               ; preds = %53
  store i32 1, i32* @load_niquant, align 4
  %70 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @niqname, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.74, i64 0, i64 0))
  store %struct._IO_FILE* %70, %struct._IO_FILE** %3, align 8
  %71 = icmp ne %struct._IO_FILE* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %69
  %73 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.34.75, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @niqname, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0))
  br label %74

74:                                               ; preds = %72, %69
  store i32 0, i32* %1, align 4
  br label %75

75:                                               ; preds = %93, %74
  %76 = load i32, i32* %1, align 4
  %77 = icmp slt i32 %76, 64
  br i1 %77, label %78, label %96

78:                                               ; preds = %75
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %80 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.76, i64 0, i64 0), i32* %2)
  %81 = load i32, i32* %2, align 4
  %82 = icmp slt i32 %81, 1
  br i1 %82, label %86, label %83

83:                                               ; preds = %78
  %84 = load i32, i32* %2, align 4
  %85 = icmp sgt i32 %84, 255
  br i1 %85, label %86, label %87

86:                                               ; preds = %83, %78
  call void @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35.77, i64 0, i64 0))
  br label %87

87:                                               ; preds = %86, %83
  %88 = load i32, i32* %2, align 4
  %89 = trunc i32 %88 to i8
  %90 = load i32, i32* %1, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [64 x i8], [64 x i8]* @inter_q, i64 0, i64 %91
  store i8 %89, i8* %92, align 1
  br label %93

93:                                               ; preds = %87
  %94 = load i32, i32* %1, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %1, align 4
  br label %75

96:                                               ; preds = %75
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %98 = call i32 @fclose(%struct._IO_FILE* %97)
  br label %99

99:                                               ; preds = %96, %68
  ret void
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #1

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @error(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* %4)
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = call i32 @putc(i32 10, %struct._IO_FILE* %6)
  call void @exit(i32 1) #7
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @init() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @initbits()
  call void @init_fdct()
  call void @init_idct()
  %3 = load i32, i32* @horizontal_size, align 4
  %4 = add nsw i32 %3, 15
  %5 = sdiv i32 %4, 16
  store i32 %5, i32* @mb_width, align 4
  %6 = load i32, i32* @prog_seq, align 4
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %0
  %9 = load i32, i32* @vertical_size, align 4
  %10 = add nsw i32 %9, 15
  %11 = sdiv i32 %10, 16
  br label %17

12:                                               ; preds = %0
  %13 = load i32, i32* @vertical_size, align 4
  %14 = add nsw i32 %13, 31
  %15 = sdiv i32 %14, 32
  %16 = mul nsw i32 2, %15
  br label %17

17:                                               ; preds = %12, %8
  %18 = phi i32 [ %11, %8 ], [ %16, %12 ]
  store i32 %18, i32* @mb_height, align 4
  %19 = load i32, i32* @fieldpic, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = load i32, i32* @mb_height, align 4
  %23 = ashr i32 %22, 1
  br label %26

24:                                               ; preds = %17
  %25 = load i32, i32* @mb_height, align 4
  br label %26

26:                                               ; preds = %24, %21
  %27 = phi i32 [ %23, %21 ], [ %25, %24 ]
  store i32 %27, i32* @mb_height2, align 4
  %28 = load i32, i32* @mb_width, align 4
  %29 = mul nsw i32 16, %28
  store i32 %29, i32* @width, align 4
  %30 = load i32, i32* @mb_height, align 4
  %31 = mul nsw i32 16, %30
  store i32 %31, i32* @height, align 4
  %32 = load i32, i32* @chroma_format, align 4
  %33 = icmp eq i32 %32, 3
  br i1 %33, label %34, label %36

34:                                               ; preds = %26
  %35 = load i32, i32* @width, align 4
  br label %39

36:                                               ; preds = %26
  %37 = load i32, i32* @width, align 4
  %38 = ashr i32 %37, 1
  br label %39

39:                                               ; preds = %36, %34
  %40 = phi i32 [ %35, %34 ], [ %38, %36 ]
  store i32 %40, i32* @chrom_width, align 4
  %41 = load i32, i32* @chroma_format, align 4
  %42 = icmp ne i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  %44 = load i32, i32* @height, align 4
  br label %48

45:                                               ; preds = %39
  %46 = load i32, i32* @height, align 4
  %47 = ashr i32 %46, 1
  br label %48

48:                                               ; preds = %45, %43
  %49 = phi i32 [ %44, %43 ], [ %47, %45 ]
  store i32 %49, i32* @chrom_height, align 4
  %50 = load i32, i32* @fieldpic, align 4
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %48
  %53 = load i32, i32* @height, align 4
  %54 = ashr i32 %53, 1
  br label %57

55:                                               ; preds = %48
  %56 = load i32, i32* @height, align 4
  br label %57

57:                                               ; preds = %55, %52
  %58 = phi i32 [ %54, %52 ], [ %56, %55 ]
  store i32 %58, i32* @height2, align 4
  %59 = load i32, i32* @fieldpic, align 4
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %57
  %62 = load i32, i32* @width, align 4
  %63 = shl i32 %62, 1
  br label %66

64:                                               ; preds = %57
  %65 = load i32, i32* @width, align 4
  br label %66

66:                                               ; preds = %64, %61
  %67 = phi i32 [ %63, %61 ], [ %65, %64 ]
  store i32 %67, i32* @width2, align 4
  %68 = load i32, i32* @fieldpic, align 4
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %66
  %71 = load i32, i32* @chrom_width, align 4
  %72 = shl i32 %71, 1
  br label %75

73:                                               ; preds = %66
  %74 = load i32, i32* @chrom_width, align 4
  br label %75

75:                                               ; preds = %73, %70
  %76 = phi i32 [ %72, %70 ], [ %74, %73 ]
  store i32 %76, i32* @chrom_width2, align 4
  %77 = load i32, i32* @chroma_format, align 4
  %78 = sub nsw i32 %77, 1
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [3 x i32], [3 x i32]* @init.block_count_tab, i64 0, i64 %79
  %81 = load i32, i32* %80, align 4
  store i32 %81, i32* @block_count, align 4
  %82 = call noalias i8* @malloc(i64 1024) #6
  store i8* %82, i8** @clp, align 8
  %83 = icmp ne i8* %82, null
  br i1 %83, label %85, label %84

84:                                               ; preds = %75
  call void @error(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.71, i64 0, i64 0))
  br label %85

85:                                               ; preds = %84, %75
  %86 = load i8*, i8** @clp, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 384
  store i8* %87, i8** @clp, align 8
  store i32 -384, i32* %1, align 4
  br label %88

88:                                               ; preds = %110, %85
  %89 = load i32, i32* %1, align 4
  %90 = icmp slt i32 %89, 640
  br i1 %90, label %91, label %113

91:                                               ; preds = %88
  %92 = load i32, i32* %1, align 4
  %93 = icmp slt i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  br label %103

95:                                               ; preds = %91
  %96 = load i32, i32* %1, align 4
  %97 = icmp sgt i32 %96, 255
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  br label %101

99:                                               ; preds = %95
  %100 = load i32, i32* %1, align 4
  br label %101

101:                                              ; preds = %99, %98
  %102 = phi i32 [ 255, %98 ], [ %100, %99 ]
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ 0, %94 ], [ %102, %101 ]
  %105 = trunc i32 %104 to i8
  %106 = load i8*, i8** @clp, align 8
  %107 = load i32, i32* %1, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  store i8 %105, i8* %109, align 1
  br label %110

110:                                              ; preds = %103
  %111 = load i32, i32* %1, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %1, align 4
  br label %88

113:                                              ; preds = %88
  store i32 0, i32* %1, align 4
  br label %114

114:                                              ; preds = %193, %113
  %115 = load i32, i32* %1, align 4
  %116 = icmp slt i32 %115, 3
  br i1 %116, label %117, label %196

117:                                              ; preds = %114
  %118 = load i32, i32* %1, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %124

120:                                              ; preds = %117
  %121 = load i32, i32* @width, align 4
  %122 = load i32, i32* @height, align 4
  %123 = mul nsw i32 %121, %122
  br label %128

124:                                              ; preds = %117
  %125 = load i32, i32* @chrom_width, align 4
  %126 = load i32, i32* @chrom_height, align 4
  %127 = mul nsw i32 %125, %126
  br label %128

128:                                              ; preds = %124, %120
  %129 = phi i32 [ %123, %120 ], [ %127, %124 ]
  store i32 %129, i32* %2, align 4
  %130 = load i32, i32* %2, align 4
  %131 = sext i32 %130 to i64
  %132 = call noalias i8* @malloc(i64 %131) #6
  %133 = load i32, i32* %1, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [3 x i8*], [3 x i8*]* @newrefframe, i64 0, i64 %134
  store i8* %132, i8** %135, align 8
  %136 = icmp ne i8* %132, null
  br i1 %136, label %138, label %137

137:                                              ; preds = %128
  call void @error(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.71, i64 0, i64 0))
  br label %138

138:                                              ; preds = %137, %128
  %139 = load i32, i32* %2, align 4
  %140 = sext i32 %139 to i64
  %141 = call noalias i8* @malloc(i64 %140) #6
  %142 = load i32, i32* %1, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [3 x i8*], [3 x i8*]* @oldrefframe, i64 0, i64 %143
  store i8* %141, i8** %144, align 8
  %145 = icmp ne i8* %141, null
  br i1 %145, label %147, label %146

146:                                              ; preds = %138
  call void @error(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.71, i64 0, i64 0))
  br label %147

147:                                              ; preds = %146, %138
  %148 = load i32, i32* %2, align 4
  %149 = sext i32 %148 to i64
  %150 = call noalias i8* @malloc(i64 %149) #6
  %151 = load i32, i32* %1, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [3 x i8*], [3 x i8*]* @auxframe, i64 0, i64 %152
  store i8* %150, i8** %153, align 8
  %154 = icmp ne i8* %150, null
  br i1 %154, label %156, label %155

155:                                              ; preds = %147
  call void @error(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.71, i64 0, i64 0))
  br label %156

156:                                              ; preds = %155, %147
  %157 = load i32, i32* %2, align 4
  %158 = sext i32 %157 to i64
  %159 = call noalias i8* @malloc(i64 %158) #6
  %160 = load i32, i32* %1, align 4
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds [3 x i8*], [3 x i8*]* @neworgframe, i64 0, i64 %161
  store i8* %159, i8** %162, align 8
  %163 = icmp ne i8* %159, null
  br i1 %163, label %165, label %164

164:                                              ; preds = %156
  call void @error(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.71, i64 0, i64 0))
  br label %165

165:                                              ; preds = %164, %156
  %166 = load i32, i32* %2, align 4
  %167 = sext i32 %166 to i64
  %168 = call noalias i8* @malloc(i64 %167) #6
  %169 = load i32, i32* %1, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds [3 x i8*], [3 x i8*]* @oldorgframe, i64 0, i64 %170
  store i8* %168, i8** %171, align 8
  %172 = icmp ne i8* %168, null
  br i1 %172, label %174, label %173

173:                                              ; preds = %165
  call void @error(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.71, i64 0, i64 0))
  br label %174

174:                                              ; preds = %173, %165
  %175 = load i32, i32* %2, align 4
  %176 = sext i32 %175 to i64
  %177 = call noalias i8* @malloc(i64 %176) #6
  %178 = load i32, i32* %1, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds [3 x i8*], [3 x i8*]* @auxorgframe, i64 0, i64 %179
  store i8* %177, i8** %180, align 8
  %181 = icmp ne i8* %177, null
  br i1 %181, label %183, label %182

182:                                              ; preds = %174
  call void @error(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.71, i64 0, i64 0))
  br label %183

183:                                              ; preds = %182, %174
  %184 = load i32, i32* %2, align 4
  %185 = sext i32 %184 to i64
  %186 = call noalias i8* @malloc(i64 %185) #6
  %187 = load i32, i32* %1, align 4
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds [3 x i8*], [3 x i8*]* @predframe, i64 0, i64 %188
  store i8* %186, i8** %189, align 8
  %190 = icmp ne i8* %186, null
  br i1 %190, label %192, label %191

191:                                              ; preds = %183
  call void @error(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.71, i64 0, i64 0))
  br label %192

192:                                              ; preds = %191, %183
  br label %193

193:                                              ; preds = %192
  %194 = load i32, i32* %1, align 4
  %195 = add nsw i32 %194, 1
  store i32 %195, i32* %1, align 4
  br label %114

196:                                              ; preds = %114
  %197 = load i32, i32* @mb_width, align 4
  %198 = load i32, i32* @mb_height2, align 4
  %199 = mul nsw i32 %197, %198
  %200 = sext i32 %199 to i64
  %201 = mul i64 %200, 96
  %202 = call noalias i8* @malloc(i64 %201) #6
  %203 = bitcast i8* %202 to %struct.mbinfo*
  store %struct.mbinfo* %203, %struct.mbinfo** @mbinfo, align 8
  %204 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %205 = icmp ne %struct.mbinfo* %204, null
  br i1 %205, label %207, label %206

206:                                              ; preds = %196
  call void @error(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.71, i64 0, i64 0))
  br label %207

207:                                              ; preds = %206, %196
  %208 = load i32, i32* @mb_width, align 4
  %209 = load i32, i32* @mb_height2, align 4
  %210 = mul nsw i32 %208, %209
  %211 = load i32, i32* @block_count, align 4
  %212 = mul nsw i32 %210, %211
  %213 = sext i32 %212 to i64
  %214 = mul i64 %213, 128
  %215 = call noalias i8* @malloc(i64 %214) #6
  %216 = bitcast i8* %215 to [64 x i16]*
  store [64 x i16]* %216, [64 x i16]** @blocks, align 8
  %217 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %218 = icmp ne [64 x i16]* %217, null
  br i1 %218, label %220, label %219

219:                                              ; preds = %207
  call void @error(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.71, i64 0, i64 0))
  br label %220

220:                                              ; preds = %219, %207
  %221 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @statname, i64 0, i64 0), align 16
  %222 = sext i8 %221 to i32
  %223 = icmp eq i32 %222, 45
  br i1 %223, label %224, label %226

224:                                              ; preds = %220
  %225 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %225, %struct._IO_FILE** @statfile, align 8
  br label %232

226:                                              ; preds = %220
  %227 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @statname, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.72, i64 0, i64 0))
  store %struct._IO_FILE* %227, %struct._IO_FILE** @statfile, align 8
  %228 = icmp ne %struct._IO_FILE* %227, null
  br i1 %228, label %231, label %229

229:                                              ; preds = %226
  %230 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6.73, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @statname, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0))
  br label %231

231:                                              ; preds = %229, %226
  br label %232

232:                                              ; preds = %231, %224
  ret void
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #1

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

declare dso_local i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) #1

declare dso_local i8* @fgets(i8*, i32, %struct._IO_FILE*) #1

; Function Attrs: nounwind
declare dso_local i32 @__isoc99_sscanf(i8*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @predict(i8** %0, i8** %1, i8** %2, i32 %3, %struct.mbinfo* %4) #0 {
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.mbinfo*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i8** %0, i8*** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i8** %2, i8*** %8, align 8
  store i32 %3, i32* %9, align 4
  store %struct.mbinfo* %4, %struct.mbinfo** %10, align 8
  store i32 0, i32* %13, align 4
  store i32 0, i32* %12, align 4
  br label %14

14:                                               ; preds = %69, %5
  %15 = load i32, i32* %12, align 4
  %16 = load i32, i32* @height2, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %72

18:                                               ; preds = %14
  store i32 0, i32* %11, align 4
  br label %19

19:                                               ; preds = %65, %18
  %20 = load i32, i32* %11, align 4
  %21 = load i32, i32* @width, align 4
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %23, label %68

23:                                               ; preds = %19
  %24 = load i8**, i8*** %6, align 8
  %25 = load i8**, i8*** %7, align 8
  %26 = load i8**, i8*** %8, align 8
  %27 = load i32, i32* @width, align 4
  %28 = load i32, i32* %11, align 4
  %29 = load i32, i32* %12, align 4
  %30 = load i32, i32* @pict_type, align 4
  %31 = load i32, i32* @pict_struct, align 4
  %32 = load %struct.mbinfo*, %struct.mbinfo** %10, align 8
  %33 = load i32, i32* %13, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %32, i64 %34
  %36 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = load %struct.mbinfo*, %struct.mbinfo** %10, align 8
  %39 = load i32, i32* %13, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %38, i64 %40
  %42 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = load i32, i32* %9, align 4
  %45 = load %struct.mbinfo*, %struct.mbinfo** %10, align 8
  %46 = load i32, i32* %13, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %45, i64 %47
  %49 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %48, i32 0, i32 6
  %50 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %49, i64 0, i64 0
  %51 = load %struct.mbinfo*, %struct.mbinfo** %10, align 8
  %52 = load i32, i32* %13, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %51, i64 %53
  %55 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %54, i32 0, i32 7
  %56 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %55, i64 0, i64 0
  %57 = load %struct.mbinfo*, %struct.mbinfo** %10, align 8
  %58 = load i32, i32* %13, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %57, i64 %59
  %61 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %60, i32 0, i32 8
  %62 = getelementptr inbounds [2 x i32], [2 x i32]* %61, i64 0, i64 0
  call void @predict_mb(i8** %24, i8** %25, i8** %26, i32 %27, i32 %28, i32 %29, i32 %30, i32 %31, i32 %37, i32 %43, i32 %44, [2 x [2 x i32]]* %50, [2 x i32]* %56, i32* %62)
  %63 = load i32, i32* %13, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %13, align 4
  br label %65

65:                                               ; preds = %23
  %66 = load i32, i32* %11, align 4
  %67 = add nsw i32 %66, 16
  store i32 %67, i32* %11, align 4
  br label %19

68:                                               ; preds = %19
  br label %69

69:                                               ; preds = %68
  %70 = load i32, i32* %12, align 4
  %71 = add nsw i32 %70, 16
  store i32 %71, i32* %12, align 4
  br label %14

72:                                               ; preds = %14
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @predict_mb(i8** %0, i8** %1, i8** %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, [2 x [2 x i32]]* %11, [2 x i32]* %12, i32* %13) #0 {
  %15 = alloca i8**, align 8
  %16 = alloca i8**, align 8
  %17 = alloca i8**, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca [2 x [2 x i32]]*, align 8
  %27 = alloca [2 x i32]*, align 8
  %28 = alloca i32*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i8**, align 8
  %32 = alloca [2 x [2 x i32]], align 16
  store i8** %0, i8*** %15, align 8
  store i8** %1, i8*** %16, align 8
  store i8** %2, i8*** %17, align 8
  store i32 %3, i32* %18, align 4
  store i32 %4, i32* %19, align 4
  store i32 %5, i32* %20, align 4
  store i32 %6, i32* %21, align 4
  store i32 %7, i32* %22, align 4
  store i32 %8, i32* %23, align 4
  store i32 %9, i32* %24, align 4
  store i32 %10, i32* %25, align 4
  store [2 x [2 x i32]]* %11, [2 x [2 x i32]]** %26, align 8
  store [2 x i32]* %12, [2 x i32]** %27, align 8
  store i32* %13, i32** %28, align 8
  %33 = load i32, i32* %23, align 4
  %34 = and i32 %33, 1
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %14
  %37 = load i8**, i8*** %17, align 8
  %38 = load i32, i32* %19, align 4
  %39 = load i32, i32* %20, align 4
  call void @clearblock(i8** %37, i32 %38, i32 %39)
  br label %555

40:                                               ; preds = %14
  store i32 0, i32* %29, align 4
  %41 = load i32, i32* %23, align 4
  %42 = and i32 %41, 8
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = load i32, i32* %21, align 4
  %46 = icmp eq i32 %45, 2
  br i1 %46, label %47, label %392

47:                                               ; preds = %44, %40
  %48 = load i32, i32* %22, align 4
  %49 = icmp eq i32 %48, 3
  br i1 %49, label %50, label %210

50:                                               ; preds = %47
  %51 = load i32, i32* %24, align 4
  %52 = icmp eq i32 %51, 2
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = load i32, i32* %23, align 4
  %55 = and i32 %54, 8
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %73, label %57

57:                                               ; preds = %53, %50
  %58 = load i8**, i8*** %15, align 8
  %59 = load i8**, i8*** %17, align 8
  %60 = load i32, i32* %18, align 4
  %61 = load i32, i32* %19, align 4
  %62 = load i32, i32* %20, align 4
  %63 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %64 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %63, i64 0
  %65 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %64, i64 0, i64 0
  %66 = getelementptr inbounds [2 x i32], [2 x i32]* %65, i64 0, i64 0
  %67 = load i32, i32* %66, align 4
  %68 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %69 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %68, i64 0
  %70 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %69, i64 0, i64 0
  %71 = getelementptr inbounds [2 x i32], [2 x i32]* %70, i64 0, i64 1
  %72 = load i32, i32* %71, align 4
  call void @pred(i8** %58, i32 0, i8** %59, i32 0, i32 %60, i32 16, i32 16, i32 %61, i32 %62, i32 %67, i32 %72, i32 0)
  br label %209

73:                                               ; preds = %53
  %74 = load i32, i32* %24, align 4
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %121

76:                                               ; preds = %73
  %77 = load i8**, i8*** %15, align 8
  %78 = load [2 x i32]*, [2 x i32]** %27, align 8
  %79 = getelementptr inbounds [2 x i32], [2 x i32]* %78, i64 0
  %80 = getelementptr inbounds [2 x i32], [2 x i32]* %79, i64 0, i64 0
  %81 = load i32, i32* %80, align 4
  %82 = load i8**, i8*** %17, align 8
  %83 = load i32, i32* %18, align 4
  %84 = shl i32 %83, 1
  %85 = load i32, i32* %19, align 4
  %86 = load i32, i32* %20, align 4
  %87 = ashr i32 %86, 1
  %88 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %89 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %88, i64 0
  %90 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %89, i64 0, i64 0
  %91 = getelementptr inbounds [2 x i32], [2 x i32]* %90, i64 0, i64 0
  %92 = load i32, i32* %91, align 4
  %93 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %94 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %93, i64 0
  %95 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %94, i64 0, i64 0
  %96 = getelementptr inbounds [2 x i32], [2 x i32]* %95, i64 0, i64 1
  %97 = load i32, i32* %96, align 4
  %98 = ashr i32 %97, 1
  call void @pred(i8** %77, i32 %81, i8** %82, i32 0, i32 %84, i32 16, i32 8, i32 %85, i32 %87, i32 %92, i32 %98, i32 0)
  %99 = load i8**, i8*** %15, align 8
  %100 = load [2 x i32]*, [2 x i32]** %27, align 8
  %101 = getelementptr inbounds [2 x i32], [2 x i32]* %100, i64 1
  %102 = getelementptr inbounds [2 x i32], [2 x i32]* %101, i64 0, i64 0
  %103 = load i32, i32* %102, align 4
  %104 = load i8**, i8*** %17, align 8
  %105 = load i32, i32* %18, align 4
  %106 = shl i32 %105, 1
  %107 = load i32, i32* %19, align 4
  %108 = load i32, i32* %20, align 4
  %109 = ashr i32 %108, 1
  %110 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %111 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %110, i64 1
  %112 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %111, i64 0, i64 0
  %113 = getelementptr inbounds [2 x i32], [2 x i32]* %112, i64 0, i64 0
  %114 = load i32, i32* %113, align 4
  %115 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %116 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %115, i64 1
  %117 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %116, i64 0, i64 0
  %118 = getelementptr inbounds [2 x i32], [2 x i32]* %117, i64 0, i64 1
  %119 = load i32, i32* %118, align 4
  %120 = ashr i32 %119, 1
  call void @pred(i8** %99, i32 %103, i8** %104, i32 1, i32 %106, i32 16, i32 8, i32 %107, i32 %109, i32 %114, i32 %120, i32 0)
  br label %208

121:                                              ; preds = %73
  %122 = load i32, i32* %24, align 4
  %123 = icmp eq i32 %122, 3
  br i1 %123, label %124, label %200

124:                                              ; preds = %121
  %125 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %32, i64 0, i64 0
  %126 = load i32*, i32** %28, align 8
  %127 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %128 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %127, i64 0
  %129 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %128, i64 0, i64 0
  %130 = getelementptr inbounds [2 x i32], [2 x i32]* %129, i64 0, i64 0
  %131 = load i32, i32* %130, align 4
  %132 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %133 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %132, i64 0
  %134 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %133, i64 0, i64 0
  %135 = getelementptr inbounds [2 x i32], [2 x i32]* %134, i64 0, i64 1
  %136 = load i32, i32* %135, align 4
  %137 = ashr i32 %136, 1
  call void @calc_DMV([2 x i32]* %125, i32* %126, i32 %131, i32 %137)
  %138 = load i8**, i8*** %15, align 8
  %139 = load i8**, i8*** %17, align 8
  %140 = load i32, i32* %18, align 4
  %141 = shl i32 %140, 1
  %142 = load i32, i32* %19, align 4
  %143 = load i32, i32* %20, align 4
  %144 = ashr i32 %143, 1
  %145 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %146 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %145, i64 0
  %147 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %146, i64 0, i64 0
  %148 = getelementptr inbounds [2 x i32], [2 x i32]* %147, i64 0, i64 0
  %149 = load i32, i32* %148, align 4
  %150 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %151 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %150, i64 0
  %152 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %151, i64 0, i64 0
  %153 = getelementptr inbounds [2 x i32], [2 x i32]* %152, i64 0, i64 1
  %154 = load i32, i32* %153, align 4
  %155 = ashr i32 %154, 1
  call void @pred(i8** %138, i32 0, i8** %139, i32 0, i32 %141, i32 16, i32 8, i32 %142, i32 %144, i32 %149, i32 %155, i32 0)
  %156 = load i8**, i8*** %15, align 8
  %157 = load i8**, i8*** %17, align 8
  %158 = load i32, i32* %18, align 4
  %159 = shl i32 %158, 1
  %160 = load i32, i32* %19, align 4
  %161 = load i32, i32* %20, align 4
  %162 = ashr i32 %161, 1
  %163 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %164 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %163, i64 0
  %165 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %164, i64 0, i64 0
  %166 = getelementptr inbounds [2 x i32], [2 x i32]* %165, i64 0, i64 0
  %167 = load i32, i32* %166, align 4
  %168 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %169 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %168, i64 0
  %170 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %169, i64 0, i64 0
  %171 = getelementptr inbounds [2 x i32], [2 x i32]* %170, i64 0, i64 1
  %172 = load i32, i32* %171, align 4
  %173 = ashr i32 %172, 1
  call void @pred(i8** %156, i32 1, i8** %157, i32 1, i32 %159, i32 16, i32 8, i32 %160, i32 %162, i32 %167, i32 %173, i32 0)
  %174 = load i8**, i8*** %15, align 8
  %175 = load i8**, i8*** %17, align 8
  %176 = load i32, i32* %18, align 4
  %177 = shl i32 %176, 1
  %178 = load i32, i32* %19, align 4
  %179 = load i32, i32* %20, align 4
  %180 = ashr i32 %179, 1
  %181 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %32, i64 0, i64 0
  %182 = getelementptr inbounds [2 x i32], [2 x i32]* %181, i64 0, i64 0
  %183 = load i32, i32* %182, align 16
  %184 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %32, i64 0, i64 0
  %185 = getelementptr inbounds [2 x i32], [2 x i32]* %184, i64 0, i64 1
  %186 = load i32, i32* %185, align 4
  call void @pred(i8** %174, i32 1, i8** %175, i32 0, i32 %177, i32 16, i32 8, i32 %178, i32 %180, i32 %183, i32 %186, i32 1)
  %187 = load i8**, i8*** %15, align 8
  %188 = load i8**, i8*** %17, align 8
  %189 = load i32, i32* %18, align 4
  %190 = shl i32 %189, 1
  %191 = load i32, i32* %19, align 4
  %192 = load i32, i32* %20, align 4
  %193 = ashr i32 %192, 1
  %194 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %32, i64 0, i64 1
  %195 = getelementptr inbounds [2 x i32], [2 x i32]* %194, i64 0, i64 0
  %196 = load i32, i32* %195, align 8
  %197 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %32, i64 0, i64 1
  %198 = getelementptr inbounds [2 x i32], [2 x i32]* %197, i64 0, i64 1
  %199 = load i32, i32* %198, align 4
  call void @pred(i8** %187, i32 0, i8** %188, i32 1, i32 %190, i32 16, i32 8, i32 %191, i32 %193, i32 %196, i32 %199, i32 1)
  br label %207

200:                                              ; preds = %121
  %201 = load i32, i32* @quiet, align 4
  %202 = icmp ne i32 %201, 0
  br i1 %202, label %206, label %203

203:                                              ; preds = %200
  %204 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %205 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %204, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.103, i64 0, i64 0))
  br label %206

206:                                              ; preds = %203, %200
  br label %207

207:                                              ; preds = %206, %124
  br label %208

208:                                              ; preds = %207, %76
  br label %209

209:                                              ; preds = %208, %57
  br label %391

210:                                              ; preds = %47
  %211 = load i32, i32* %22, align 4
  %212 = icmp eq i32 %211, 2
  %213 = zext i1 %212 to i32
  store i32 %213, i32* %30, align 4
  %214 = load i32, i32* %21, align 4
  %215 = icmp eq i32 %214, 2
  br i1 %215, label %216, label %228

216:                                              ; preds = %210
  %217 = load i32, i32* %25, align 4
  %218 = icmp ne i32 %217, 0
  br i1 %218, label %219, label %228

219:                                              ; preds = %216
  %220 = load i32, i32* %30, align 4
  %221 = load [2 x i32]*, [2 x i32]** %27, align 8
  %222 = getelementptr inbounds [2 x i32], [2 x i32]* %221, i64 0
  %223 = getelementptr inbounds [2 x i32], [2 x i32]* %222, i64 0, i64 0
  %224 = load i32, i32* %223, align 4
  %225 = icmp ne i32 %220, %224
  br i1 %225, label %226, label %228

226:                                              ; preds = %219
  %227 = load i8**, i8*** %16, align 8
  store i8** %227, i8*** %31, align 8
  br label %230

228:                                              ; preds = %219, %216, %210
  %229 = load i8**, i8*** %15, align 8
  store i8** %229, i8*** %31, align 8
  br label %230

230:                                              ; preds = %228, %226
  %231 = load i32, i32* %24, align 4
  %232 = icmp eq i32 %231, 1
  br i1 %232, label %237, label %233

233:                                              ; preds = %230
  %234 = load i32, i32* %23, align 4
  %235 = and i32 %234, 8
  %236 = icmp ne i32 %235, 0
  br i1 %236, label %259, label %237

237:                                              ; preds = %233, %230
  %238 = load i8**, i8*** %31, align 8
  %239 = load [2 x i32]*, [2 x i32]** %27, align 8
  %240 = getelementptr inbounds [2 x i32], [2 x i32]* %239, i64 0
  %241 = getelementptr inbounds [2 x i32], [2 x i32]* %240, i64 0, i64 0
  %242 = load i32, i32* %241, align 4
  %243 = load i8**, i8*** %17, align 8
  %244 = load i32, i32* %30, align 4
  %245 = load i32, i32* %18, align 4
  %246 = shl i32 %245, 1
  %247 = load i32, i32* %19, align 4
  %248 = load i32, i32* %20, align 4
  %249 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %250 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %249, i64 0
  %251 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %250, i64 0, i64 0
  %252 = getelementptr inbounds [2 x i32], [2 x i32]* %251, i64 0, i64 0
  %253 = load i32, i32* %252, align 4
  %254 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %255 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %254, i64 0
  %256 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %255, i64 0, i64 0
  %257 = getelementptr inbounds [2 x i32], [2 x i32]* %256, i64 0, i64 1
  %258 = load i32, i32* %257, align 4
  call void @pred(i8** %238, i32 %242, i8** %243, i32 %244, i32 %246, i32 16, i32 16, i32 %247, i32 %248, i32 %253, i32 %258, i32 0)
  br label %390

259:                                              ; preds = %233
  %260 = load i32, i32* %24, align 4
  %261 = icmp eq i32 %260, 2
  br i1 %261, label %262, label %323

262:                                              ; preds = %259
  %263 = load i8**, i8*** %31, align 8
  %264 = load [2 x i32]*, [2 x i32]** %27, align 8
  %265 = getelementptr inbounds [2 x i32], [2 x i32]* %264, i64 0
  %266 = getelementptr inbounds [2 x i32], [2 x i32]* %265, i64 0, i64 0
  %267 = load i32, i32* %266, align 4
  %268 = load i8**, i8*** %17, align 8
  %269 = load i32, i32* %30, align 4
  %270 = load i32, i32* %18, align 4
  %271 = shl i32 %270, 1
  %272 = load i32, i32* %19, align 4
  %273 = load i32, i32* %20, align 4
  %274 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %275 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %274, i64 0
  %276 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %275, i64 0, i64 0
  %277 = getelementptr inbounds [2 x i32], [2 x i32]* %276, i64 0, i64 0
  %278 = load i32, i32* %277, align 4
  %279 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %280 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %279, i64 0
  %281 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %280, i64 0, i64 0
  %282 = getelementptr inbounds [2 x i32], [2 x i32]* %281, i64 0, i64 1
  %283 = load i32, i32* %282, align 4
  call void @pred(i8** %263, i32 %267, i8** %268, i32 %269, i32 %271, i32 16, i32 8, i32 %272, i32 %273, i32 %278, i32 %283, i32 0)
  %284 = load i32, i32* %21, align 4
  %285 = icmp eq i32 %284, 2
  br i1 %285, label %286, label %298

286:                                              ; preds = %262
  %287 = load i32, i32* %25, align 4
  %288 = icmp ne i32 %287, 0
  br i1 %288, label %289, label %298

289:                                              ; preds = %286
  %290 = load i32, i32* %30, align 4
  %291 = load [2 x i32]*, [2 x i32]** %27, align 8
  %292 = getelementptr inbounds [2 x i32], [2 x i32]* %291, i64 1
  %293 = getelementptr inbounds [2 x i32], [2 x i32]* %292, i64 0, i64 0
  %294 = load i32, i32* %293, align 4
  %295 = icmp ne i32 %290, %294
  br i1 %295, label %296, label %298

296:                                              ; preds = %289
  %297 = load i8**, i8*** %16, align 8
  store i8** %297, i8*** %31, align 8
  br label %300

298:                                              ; preds = %289, %286, %262
  %299 = load i8**, i8*** %15, align 8
  store i8** %299, i8*** %31, align 8
  br label %300

300:                                              ; preds = %298, %296
  %301 = load i8**, i8*** %31, align 8
  %302 = load [2 x i32]*, [2 x i32]** %27, align 8
  %303 = getelementptr inbounds [2 x i32], [2 x i32]* %302, i64 1
  %304 = getelementptr inbounds [2 x i32], [2 x i32]* %303, i64 0, i64 0
  %305 = load i32, i32* %304, align 4
  %306 = load i8**, i8*** %17, align 8
  %307 = load i32, i32* %30, align 4
  %308 = load i32, i32* %18, align 4
  %309 = shl i32 %308, 1
  %310 = load i32, i32* %19, align 4
  %311 = load i32, i32* %20, align 4
  %312 = add nsw i32 %311, 8
  %313 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %314 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %313, i64 1
  %315 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %314, i64 0, i64 0
  %316 = getelementptr inbounds [2 x i32], [2 x i32]* %315, i64 0, i64 0
  %317 = load i32, i32* %316, align 4
  %318 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %319 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %318, i64 1
  %320 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %319, i64 0, i64 0
  %321 = getelementptr inbounds [2 x i32], [2 x i32]* %320, i64 0, i64 1
  %322 = load i32, i32* %321, align 4
  call void @pred(i8** %301, i32 %305, i8** %306, i32 %307, i32 %309, i32 16, i32 8, i32 %310, i32 %312, i32 %317, i32 %322, i32 0)
  br label %389

323:                                              ; preds = %259
  %324 = load i32, i32* %24, align 4
  %325 = icmp eq i32 %324, 3
  br i1 %325, label %326, label %381

326:                                              ; preds = %323
  %327 = load i32, i32* %25, align 4
  %328 = icmp ne i32 %327, 0
  br i1 %328, label %329, label %331

329:                                              ; preds = %326
  %330 = load i8**, i8*** %16, align 8
  store i8** %330, i8*** %31, align 8
  br label %333

331:                                              ; preds = %326
  %332 = load i8**, i8*** %15, align 8
  store i8** %332, i8*** %31, align 8
  br label %333

333:                                              ; preds = %331, %329
  %334 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %32, i64 0, i64 0
  %335 = load i32*, i32** %28, align 8
  %336 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %337 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %336, i64 0
  %338 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %337, i64 0, i64 0
  %339 = getelementptr inbounds [2 x i32], [2 x i32]* %338, i64 0, i64 0
  %340 = load i32, i32* %339, align 4
  %341 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %342 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %341, i64 0
  %343 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %342, i64 0, i64 0
  %344 = getelementptr inbounds [2 x i32], [2 x i32]* %343, i64 0, i64 1
  %345 = load i32, i32* %344, align 4
  call void @calc_DMV([2 x i32]* %334, i32* %335, i32 %340, i32 %345)
  %346 = load i8**, i8*** %15, align 8
  %347 = load i32, i32* %30, align 4
  %348 = load i8**, i8*** %17, align 8
  %349 = load i32, i32* %30, align 4
  %350 = load i32, i32* %18, align 4
  %351 = shl i32 %350, 1
  %352 = load i32, i32* %19, align 4
  %353 = load i32, i32* %20, align 4
  %354 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %355 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %354, i64 0
  %356 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %355, i64 0, i64 0
  %357 = getelementptr inbounds [2 x i32], [2 x i32]* %356, i64 0, i64 0
  %358 = load i32, i32* %357, align 4
  %359 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %360 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %359, i64 0
  %361 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %360, i64 0, i64 0
  %362 = getelementptr inbounds [2 x i32], [2 x i32]* %361, i64 0, i64 1
  %363 = load i32, i32* %362, align 4
  call void @pred(i8** %346, i32 %347, i8** %348, i32 %349, i32 %351, i32 16, i32 16, i32 %352, i32 %353, i32 %358, i32 %363, i32 0)
  %364 = load i8**, i8*** %31, align 8
  %365 = load i32, i32* %30, align 4
  %366 = icmp ne i32 %365, 0
  %367 = xor i1 %366, true
  %368 = zext i1 %367 to i32
  %369 = load i8**, i8*** %17, align 8
  %370 = load i32, i32* %30, align 4
  %371 = load i32, i32* %18, align 4
  %372 = shl i32 %371, 1
  %373 = load i32, i32* %19, align 4
  %374 = load i32, i32* %20, align 4
  %375 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %32, i64 0, i64 0
  %376 = getelementptr inbounds [2 x i32], [2 x i32]* %375, i64 0, i64 0
  %377 = load i32, i32* %376, align 16
  %378 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %32, i64 0, i64 0
  %379 = getelementptr inbounds [2 x i32], [2 x i32]* %378, i64 0, i64 1
  %380 = load i32, i32* %379, align 4
  call void @pred(i8** %364, i32 %368, i8** %369, i32 %370, i32 %372, i32 16, i32 16, i32 %373, i32 %374, i32 %377, i32 %380, i32 1)
  br label %388

381:                                              ; preds = %323
  %382 = load i32, i32* @quiet, align 4
  %383 = icmp ne i32 %382, 0
  br i1 %383, label %387, label %384

384:                                              ; preds = %381
  %385 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %386 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %385, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.103, i64 0, i64 0))
  br label %387

387:                                              ; preds = %384, %381
  br label %388

388:                                              ; preds = %387, %333
  br label %389

389:                                              ; preds = %388, %300
  br label %390

390:                                              ; preds = %389, %237
  br label %391

391:                                              ; preds = %390, %209
  store i32 1, i32* %29, align 4
  br label %392

392:                                              ; preds = %391, %44
  %393 = load i32, i32* %23, align 4
  %394 = and i32 %393, 4
  %395 = icmp ne i32 %394, 0
  br i1 %395, label %396, label %555

396:                                              ; preds = %392
  %397 = load i32, i32* %22, align 4
  %398 = icmp eq i32 %397, 3
  br i1 %398, label %399, label %467

399:                                              ; preds = %396
  %400 = load i32, i32* %24, align 4
  %401 = icmp eq i32 %400, 2
  br i1 %401, label %402, label %419

402:                                              ; preds = %399
  %403 = load i8**, i8*** %16, align 8
  %404 = load i8**, i8*** %17, align 8
  %405 = load i32, i32* %18, align 4
  %406 = load i32, i32* %19, align 4
  %407 = load i32, i32* %20, align 4
  %408 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %409 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %408, i64 0
  %410 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %409, i64 0, i64 1
  %411 = getelementptr inbounds [2 x i32], [2 x i32]* %410, i64 0, i64 0
  %412 = load i32, i32* %411, align 4
  %413 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %414 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %413, i64 0
  %415 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %414, i64 0, i64 1
  %416 = getelementptr inbounds [2 x i32], [2 x i32]* %415, i64 0, i64 1
  %417 = load i32, i32* %416, align 4
  %418 = load i32, i32* %29, align 4
  call void @pred(i8** %403, i32 0, i8** %404, i32 0, i32 %405, i32 16, i32 16, i32 %406, i32 %407, i32 %412, i32 %417, i32 %418)
  br label %466

419:                                              ; preds = %399
  %420 = load i8**, i8*** %16, align 8
  %421 = load [2 x i32]*, [2 x i32]** %27, align 8
  %422 = getelementptr inbounds [2 x i32], [2 x i32]* %421, i64 0
  %423 = getelementptr inbounds [2 x i32], [2 x i32]* %422, i64 0, i64 1
  %424 = load i32, i32* %423, align 4
  %425 = load i8**, i8*** %17, align 8
  %426 = load i32, i32* %18, align 4
  %427 = shl i32 %426, 1
  %428 = load i32, i32* %19, align 4
  %429 = load i32, i32* %20, align 4
  %430 = ashr i32 %429, 1
  %431 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %432 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %431, i64 0
  %433 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %432, i64 0, i64 1
  %434 = getelementptr inbounds [2 x i32], [2 x i32]* %433, i64 0, i64 0
  %435 = load i32, i32* %434, align 4
  %436 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %437 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %436, i64 0
  %438 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %437, i64 0, i64 1
  %439 = getelementptr inbounds [2 x i32], [2 x i32]* %438, i64 0, i64 1
  %440 = load i32, i32* %439, align 4
  %441 = ashr i32 %440, 1
  %442 = load i32, i32* %29, align 4
  call void @pred(i8** %420, i32 %424, i8** %425, i32 0, i32 %427, i32 16, i32 8, i32 %428, i32 %430, i32 %435, i32 %441, i32 %442)
  %443 = load i8**, i8*** %16, align 8
  %444 = load [2 x i32]*, [2 x i32]** %27, align 8
  %445 = getelementptr inbounds [2 x i32], [2 x i32]* %444, i64 1
  %446 = getelementptr inbounds [2 x i32], [2 x i32]* %445, i64 0, i64 1
  %447 = load i32, i32* %446, align 4
  %448 = load i8**, i8*** %17, align 8
  %449 = load i32, i32* %18, align 4
  %450 = shl i32 %449, 1
  %451 = load i32, i32* %19, align 4
  %452 = load i32, i32* %20, align 4
  %453 = ashr i32 %452, 1
  %454 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %455 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %454, i64 1
  %456 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %455, i64 0, i64 1
  %457 = getelementptr inbounds [2 x i32], [2 x i32]* %456, i64 0, i64 0
  %458 = load i32, i32* %457, align 4
  %459 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %460 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %459, i64 1
  %461 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %460, i64 0, i64 1
  %462 = getelementptr inbounds [2 x i32], [2 x i32]* %461, i64 0, i64 1
  %463 = load i32, i32* %462, align 4
  %464 = ashr i32 %463, 1
  %465 = load i32, i32* %29, align 4
  call void @pred(i8** %443, i32 %447, i8** %448, i32 1, i32 %450, i32 16, i32 8, i32 %451, i32 %453, i32 %458, i32 %464, i32 %465)
  br label %466

466:                                              ; preds = %419, %402
  br label %554

467:                                              ; preds = %396
  %468 = load i32, i32* %22, align 4
  %469 = icmp eq i32 %468, 2
  %470 = zext i1 %469 to i32
  store i32 %470, i32* %30, align 4
  %471 = load i32, i32* %24, align 4
  %472 = icmp eq i32 %471, 1
  br i1 %472, label %473, label %496

473:                                              ; preds = %467
  %474 = load i8**, i8*** %16, align 8
  %475 = load [2 x i32]*, [2 x i32]** %27, align 8
  %476 = getelementptr inbounds [2 x i32], [2 x i32]* %475, i64 0
  %477 = getelementptr inbounds [2 x i32], [2 x i32]* %476, i64 0, i64 1
  %478 = load i32, i32* %477, align 4
  %479 = load i8**, i8*** %17, align 8
  %480 = load i32, i32* %30, align 4
  %481 = load i32, i32* %18, align 4
  %482 = shl i32 %481, 1
  %483 = load i32, i32* %19, align 4
  %484 = load i32, i32* %20, align 4
  %485 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %486 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %485, i64 0
  %487 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %486, i64 0, i64 1
  %488 = getelementptr inbounds [2 x i32], [2 x i32]* %487, i64 0, i64 0
  %489 = load i32, i32* %488, align 4
  %490 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %491 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %490, i64 0
  %492 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %491, i64 0, i64 1
  %493 = getelementptr inbounds [2 x i32], [2 x i32]* %492, i64 0, i64 1
  %494 = load i32, i32* %493, align 4
  %495 = load i32, i32* %29, align 4
  call void @pred(i8** %474, i32 %478, i8** %479, i32 %480, i32 %482, i32 16, i32 16, i32 %483, i32 %484, i32 %489, i32 %494, i32 %495)
  br label %553

496:                                              ; preds = %467
  %497 = load i32, i32* %24, align 4
  %498 = icmp eq i32 %497, 2
  br i1 %498, label %499, label %545

499:                                              ; preds = %496
  %500 = load i8**, i8*** %16, align 8
  %501 = load [2 x i32]*, [2 x i32]** %27, align 8
  %502 = getelementptr inbounds [2 x i32], [2 x i32]* %501, i64 0
  %503 = getelementptr inbounds [2 x i32], [2 x i32]* %502, i64 0, i64 1
  %504 = load i32, i32* %503, align 4
  %505 = load i8**, i8*** %17, align 8
  %506 = load i32, i32* %30, align 4
  %507 = load i32, i32* %18, align 4
  %508 = shl i32 %507, 1
  %509 = load i32, i32* %19, align 4
  %510 = load i32, i32* %20, align 4
  %511 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %512 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %511, i64 0
  %513 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %512, i64 0, i64 1
  %514 = getelementptr inbounds [2 x i32], [2 x i32]* %513, i64 0, i64 0
  %515 = load i32, i32* %514, align 4
  %516 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %517 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %516, i64 0
  %518 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %517, i64 0, i64 1
  %519 = getelementptr inbounds [2 x i32], [2 x i32]* %518, i64 0, i64 1
  %520 = load i32, i32* %519, align 4
  %521 = load i32, i32* %29, align 4
  call void @pred(i8** %500, i32 %504, i8** %505, i32 %506, i32 %508, i32 16, i32 8, i32 %509, i32 %510, i32 %515, i32 %520, i32 %521)
  %522 = load i8**, i8*** %16, align 8
  %523 = load [2 x i32]*, [2 x i32]** %27, align 8
  %524 = getelementptr inbounds [2 x i32], [2 x i32]* %523, i64 1
  %525 = getelementptr inbounds [2 x i32], [2 x i32]* %524, i64 0, i64 1
  %526 = load i32, i32* %525, align 4
  %527 = load i8**, i8*** %17, align 8
  %528 = load i32, i32* %30, align 4
  %529 = load i32, i32* %18, align 4
  %530 = shl i32 %529, 1
  %531 = load i32, i32* %19, align 4
  %532 = load i32, i32* %20, align 4
  %533 = add nsw i32 %532, 8
  %534 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %535 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %534, i64 1
  %536 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %535, i64 0, i64 1
  %537 = getelementptr inbounds [2 x i32], [2 x i32]* %536, i64 0, i64 0
  %538 = load i32, i32* %537, align 4
  %539 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %26, align 8
  %540 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %539, i64 1
  %541 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %540, i64 0, i64 1
  %542 = getelementptr inbounds [2 x i32], [2 x i32]* %541, i64 0, i64 1
  %543 = load i32, i32* %542, align 4
  %544 = load i32, i32* %29, align 4
  call void @pred(i8** %522, i32 %526, i8** %527, i32 %528, i32 %530, i32 16, i32 8, i32 %531, i32 %533, i32 %538, i32 %543, i32 %544)
  br label %552

545:                                              ; preds = %496
  %546 = load i32, i32* @quiet, align 4
  %547 = icmp ne i32 %546, 0
  br i1 %547, label %551, label %548

548:                                              ; preds = %545
  %549 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %550 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %549, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.103, i64 0, i64 0))
  br label %551

551:                                              ; preds = %548, %545
  br label %552

552:                                              ; preds = %551, %499
  br label %553

553:                                              ; preds = %552, %473
  br label %554

554:                                              ; preds = %553, %466
  br label %555

555:                                              ; preds = %554, %392, %36
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @clearblock(i8** %0, i32 %1, i32 %2) #0 {
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %12 = load i8**, i8*** %4, align 8
  %13 = getelementptr inbounds i8*, i8** %12, i64 0
  %14 = load i8*, i8** %13, align 8
  %15 = load i32, i32* @pict_struct, align 4
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %17, label %19

17:                                               ; preds = %3
  %18 = load i32, i32* @width, align 4
  br label %20

19:                                               ; preds = %3
  br label %20

20:                                               ; preds = %19, %17
  %21 = phi i32 [ %18, %17 ], [ 0, %19 ]
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %14, i64 %22
  %24 = load i32, i32* %5, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %23, i64 %25
  %27 = load i32, i32* @width2, align 4
  %28 = load i32, i32* %6, align 4
  %29 = mul nsw i32 %27, %28
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %26, i64 %30
  store i8* %31, i8** %11, align 8
  store i32 0, i32* %8, align 4
  br label %32

32:                                               ; preds = %52, %20
  %33 = load i32, i32* %8, align 4
  %34 = icmp slt i32 %33, 16
  br i1 %34, label %35, label %55

35:                                               ; preds = %32
  store i32 0, i32* %7, align 4
  br label %36

36:                                               ; preds = %44, %35
  %37 = load i32, i32* %7, align 4
  %38 = icmp slt i32 %37, 16
  br i1 %38, label %39, label %47

39:                                               ; preds = %36
  %40 = load i8*, i8** %11, align 8
  %41 = load i32, i32* %7, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  store i8 -128, i8* %43, align 1
  br label %44

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %7, align 4
  br label %36

47:                                               ; preds = %36
  %48 = load i32, i32* @width2, align 4
  %49 = load i8*, i8** %11, align 8
  %50 = sext i32 %48 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8* %51, i8** %11, align 8
  br label %52

52:                                               ; preds = %47
  %53 = load i32, i32* %8, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %8, align 4
  br label %32

55:                                               ; preds = %32
  store i32 16, i32* %10, align 4
  store i32 16, i32* %9, align 4
  %56 = load i32, i32* @chroma_format, align 4
  %57 = icmp ne i32 %56, 3
  br i1 %57, label %58, label %63

58:                                               ; preds = %55
  %59 = load i32, i32* %5, align 4
  %60 = ashr i32 %59, 1
  store i32 %60, i32* %5, align 4
  %61 = load i32, i32* %9, align 4
  %62 = ashr i32 %61, 1
  store i32 %62, i32* %9, align 4
  br label %63

63:                                               ; preds = %58, %55
  %64 = load i32, i32* @chroma_format, align 4
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %71

66:                                               ; preds = %63
  %67 = load i32, i32* %6, align 4
  %68 = ashr i32 %67, 1
  store i32 %68, i32* %6, align 4
  %69 = load i32, i32* %10, align 4
  %70 = ashr i32 %69, 1
  store i32 %70, i32* %10, align 4
  br label %71

71:                                               ; preds = %66, %63
  %72 = load i8**, i8*** %4, align 8
  %73 = getelementptr inbounds i8*, i8** %72, i64 1
  %74 = load i8*, i8** %73, align 8
  %75 = load i32, i32* @pict_struct, align 4
  %76 = icmp eq i32 %75, 2
  br i1 %76, label %77, label %79

77:                                               ; preds = %71
  %78 = load i32, i32* @chrom_width, align 4
  br label %80

79:                                               ; preds = %71
  br label %80

80:                                               ; preds = %79, %77
  %81 = phi i32 [ %78, %77 ], [ 0, %79 ]
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %74, i64 %82
  %84 = load i32, i32* %5, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %83, i64 %85
  %87 = load i32, i32* @chrom_width2, align 4
  %88 = load i32, i32* %6, align 4
  %89 = mul nsw i32 %87, %88
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8, i8* %86, i64 %90
  store i8* %91, i8** %11, align 8
  store i32 0, i32* %8, align 4
  br label %92

92:                                               ; preds = %114, %80
  %93 = load i32, i32* %8, align 4
  %94 = load i32, i32* %10, align 4
  %95 = icmp slt i32 %93, %94
  br i1 %95, label %96, label %117

96:                                               ; preds = %92
  store i32 0, i32* %7, align 4
  br label %97

97:                                               ; preds = %106, %96
  %98 = load i32, i32* %7, align 4
  %99 = load i32, i32* %9, align 4
  %100 = icmp slt i32 %98, %99
  br i1 %100, label %101, label %109

101:                                              ; preds = %97
  %102 = load i8*, i8** %11, align 8
  %103 = load i32, i32* %7, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i8, i8* %102, i64 %104
  store i8 -128, i8* %105, align 1
  br label %106

106:                                              ; preds = %101
  %107 = load i32, i32* %7, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, i32* %7, align 4
  br label %97

109:                                              ; preds = %97
  %110 = load i32, i32* @chrom_width2, align 4
  %111 = load i8*, i8** %11, align 8
  %112 = sext i32 %110 to i64
  %113 = getelementptr inbounds i8, i8* %111, i64 %112
  store i8* %113, i8** %11, align 8
  br label %114

114:                                              ; preds = %109
  %115 = load i32, i32* %8, align 4
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %8, align 4
  br label %92

117:                                              ; preds = %92
  %118 = load i8**, i8*** %4, align 8
  %119 = getelementptr inbounds i8*, i8** %118, i64 2
  %120 = load i8*, i8** %119, align 8
  %121 = load i32, i32* @pict_struct, align 4
  %122 = icmp eq i32 %121, 2
  br i1 %122, label %123, label %125

123:                                              ; preds = %117
  %124 = load i32, i32* @chrom_width, align 4
  br label %126

125:                                              ; preds = %117
  br label %126

126:                                              ; preds = %125, %123
  %127 = phi i32 [ %124, %123 ], [ 0, %125 ]
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8, i8* %120, i64 %128
  %130 = load i32, i32* %5, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i8, i8* %129, i64 %131
  %133 = load i32, i32* @chrom_width2, align 4
  %134 = load i32, i32* %6, align 4
  %135 = mul nsw i32 %133, %134
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* %132, i64 %136
  store i8* %137, i8** %11, align 8
  store i32 0, i32* %8, align 4
  br label %138

138:                                              ; preds = %160, %126
  %139 = load i32, i32* %8, align 4
  %140 = load i32, i32* %10, align 4
  %141 = icmp slt i32 %139, %140
  br i1 %141, label %142, label %163

142:                                              ; preds = %138
  store i32 0, i32* %7, align 4
  br label %143

143:                                              ; preds = %152, %142
  %144 = load i32, i32* %7, align 4
  %145 = load i32, i32* %9, align 4
  %146 = icmp slt i32 %144, %145
  br i1 %146, label %147, label %155

147:                                              ; preds = %143
  %148 = load i8*, i8** %11, align 8
  %149 = load i32, i32* %7, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i8, i8* %148, i64 %150
  store i8 -128, i8* %151, align 1
  br label %152

152:                                              ; preds = %147
  %153 = load i32, i32* %7, align 4
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %7, align 4
  br label %143

155:                                              ; preds = %143
  %156 = load i32, i32* @chrom_width2, align 4
  %157 = load i8*, i8** %11, align 8
  %158 = sext i32 %156 to i64
  %159 = getelementptr inbounds i8, i8* %157, i64 %158
  store i8* %159, i8** %11, align 8
  br label %160

160:                                              ; preds = %155
  %161 = load i32, i32* %8, align 4
  %162 = add nsw i32 %161, 1
  store i32 %162, i32* %8, align 4
  br label %138

163:                                              ; preds = %138
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @pred(i8** %0, i32 %1, i8** %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, i32 %11) #0 {
  %13 = alloca i8**, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8**, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  store i8** %0, i8*** %13, align 8
  store i32 %1, i32* %14, align 4
  store i8** %2, i8*** %15, align 8
  store i32 %3, i32* %16, align 4
  store i32 %4, i32* %17, align 4
  store i32 %5, i32* %18, align 4
  store i32 %6, i32* %19, align 4
  store i32 %7, i32* %20, align 4
  store i32 %8, i32* %21, align 4
  store i32 %9, i32* %22, align 4
  store i32 %10, i32* %23, align 4
  store i32 %11, i32* %24, align 4
  store i32 0, i32* %25, align 4
  br label %26

26:                                               ; preds = %94, %12
  %27 = load i32, i32* %25, align 4
  %28 = icmp slt i32 %27, 3
  br i1 %28, label %29, label %97

29:                                               ; preds = %26
  %30 = load i32, i32* %25, align 4
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %55

32:                                               ; preds = %29
  %33 = load i32, i32* @chroma_format, align 4
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %42

35:                                               ; preds = %32
  %36 = load i32, i32* %19, align 4
  %37 = ashr i32 %36, 1
  store i32 %37, i32* %19, align 4
  %38 = load i32, i32* %21, align 4
  %39 = ashr i32 %38, 1
  store i32 %39, i32* %21, align 4
  %40 = load i32, i32* %23, align 4
  %41 = sdiv i32 %40, 2
  store i32 %41, i32* %23, align 4
  br label %42

42:                                               ; preds = %35, %32
  %43 = load i32, i32* @chroma_format, align 4
  %44 = icmp ne i32 %43, 3
  br i1 %44, label %45, label %54

45:                                               ; preds = %42
  %46 = load i32, i32* %18, align 4
  %47 = ashr i32 %46, 1
  store i32 %47, i32* %18, align 4
  %48 = load i32, i32* %20, align 4
  %49 = ashr i32 %48, 1
  store i32 %49, i32* %20, align 4
  %50 = load i32, i32* %22, align 4
  %51 = sdiv i32 %50, 2
  store i32 %51, i32* %22, align 4
  %52 = load i32, i32* %17, align 4
  %53 = ashr i32 %52, 1
  store i32 %53, i32* %17, align 4
  br label %54

54:                                               ; preds = %45, %42
  br label %55

55:                                               ; preds = %54, %29
  %56 = load i8**, i8*** %13, align 8
  %57 = load i32, i32* %25, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8*, i8** %56, i64 %58
  %60 = load i8*, i8** %59, align 8
  %61 = load i32, i32* %14, align 4
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %55
  %64 = load i32, i32* %17, align 4
  %65 = ashr i32 %64, 1
  br label %67

66:                                               ; preds = %55
  br label %67

67:                                               ; preds = %66, %63
  %68 = phi i32 [ %65, %63 ], [ 0, %66 ]
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %60, i64 %69
  %71 = load i8**, i8*** %15, align 8
  %72 = load i32, i32* %25, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8*, i8** %71, i64 %73
  %75 = load i8*, i8** %74, align 8
  %76 = load i32, i32* %16, align 4
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %67
  %79 = load i32, i32* %17, align 4
  %80 = ashr i32 %79, 1
  br label %82

81:                                               ; preds = %67
  br label %82

82:                                               ; preds = %81, %78
  %83 = phi i32 [ %80, %78 ], [ 0, %81 ]
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %75, i64 %84
  %86 = load i32, i32* %17, align 4
  %87 = load i32, i32* %18, align 4
  %88 = load i32, i32* %19, align 4
  %89 = load i32, i32* %20, align 4
  %90 = load i32, i32* %21, align 4
  %91 = load i32, i32* %22, align 4
  %92 = load i32, i32* %23, align 4
  %93 = load i32, i32* %24, align 4
  call void @pred_comp(i8* %70, i8* %85, i32 %86, i32 %87, i32 %88, i32 %89, i32 %90, i32 %91, i32 %92, i32 %93)
  br label %94

94:                                               ; preds = %82
  %95 = load i32, i32* %25, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %25, align 4
  br label %26

97:                                               ; preds = %26
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_DMV([2 x i32]* %0, i32* %1, i32 %2, i32 %3) #0 {
  %5 = alloca [2 x i32]*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store [2 x i32]* %0, [2 x i32]** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load i32, i32* @pict_struct, align 4
  %10 = icmp eq i32 %9, 3
  br i1 %10, label %11, label %129

11:                                               ; preds = %4
  %12 = load i32, i32* @topfirst, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %71

14:                                               ; preds = %11
  %15 = load i32, i32* %7, align 4
  %16 = load i32, i32* %7, align 4
  %17 = icmp sgt i32 %16, 0
  %18 = zext i1 %17 to i32
  %19 = add nsw i32 %15, %18
  %20 = ashr i32 %19, 1
  %21 = load i32*, i32** %6, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = add nsw i32 %20, %23
  %25 = load [2 x i32]*, [2 x i32]** %5, align 8
  %26 = getelementptr inbounds [2 x i32], [2 x i32]* %25, i64 0
  %27 = getelementptr inbounds [2 x i32], [2 x i32]* %26, i64 0, i64 0
  store i32 %24, i32* %27, align 4
  %28 = load i32, i32* %8, align 4
  %29 = load i32, i32* %8, align 4
  %30 = icmp sgt i32 %29, 0
  %31 = zext i1 %30 to i32
  %32 = add nsw i32 %28, %31
  %33 = ashr i32 %32, 1
  %34 = load i32*, i32** %6, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 1
  %36 = load i32, i32* %35, align 4
  %37 = add nsw i32 %33, %36
  %38 = sub nsw i32 %37, 1
  %39 = load [2 x i32]*, [2 x i32]** %5, align 8
  %40 = getelementptr inbounds [2 x i32], [2 x i32]* %39, i64 0
  %41 = getelementptr inbounds [2 x i32], [2 x i32]* %40, i64 0, i64 1
  store i32 %38, i32* %41, align 4
  %42 = load i32, i32* %7, align 4
  %43 = mul nsw i32 3, %42
  %44 = load i32, i32* %7, align 4
  %45 = icmp sgt i32 %44, 0
  %46 = zext i1 %45 to i32
  %47 = add nsw i32 %43, %46
  %48 = ashr i32 %47, 1
  %49 = load i32*, i32** %6, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 0
  %51 = load i32, i32* %50, align 4
  %52 = add nsw i32 %48, %51
  %53 = load [2 x i32]*, [2 x i32]** %5, align 8
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* %53, i64 1
  %55 = getelementptr inbounds [2 x i32], [2 x i32]* %54, i64 0, i64 0
  store i32 %52, i32* %55, align 4
  %56 = load i32, i32* %8, align 4
  %57 = mul nsw i32 3, %56
  %58 = load i32, i32* %8, align 4
  %59 = icmp sgt i32 %58, 0
  %60 = zext i1 %59 to i32
  %61 = add nsw i32 %57, %60
  %62 = ashr i32 %61, 1
  %63 = load i32*, i32** %6, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 1
  %65 = load i32, i32* %64, align 4
  %66 = add nsw i32 %62, %65
  %67 = add nsw i32 %66, 1
  %68 = load [2 x i32]*, [2 x i32]** %5, align 8
  %69 = getelementptr inbounds [2 x i32], [2 x i32]* %68, i64 1
  %70 = getelementptr inbounds [2 x i32], [2 x i32]* %69, i64 0, i64 1
  store i32 %67, i32* %70, align 4
  br label %128

71:                                               ; preds = %11
  %72 = load i32, i32* %7, align 4
  %73 = mul nsw i32 3, %72
  %74 = load i32, i32* %7, align 4
  %75 = icmp sgt i32 %74, 0
  %76 = zext i1 %75 to i32
  %77 = add nsw i32 %73, %76
  %78 = ashr i32 %77, 1
  %79 = load i32*, i32** %6, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 0
  %81 = load i32, i32* %80, align 4
  %82 = add nsw i32 %78, %81
  %83 = load [2 x i32]*, [2 x i32]** %5, align 8
  %84 = getelementptr inbounds [2 x i32], [2 x i32]* %83, i64 0
  %85 = getelementptr inbounds [2 x i32], [2 x i32]* %84, i64 0, i64 0
  store i32 %82, i32* %85, align 4
  %86 = load i32, i32* %8, align 4
  %87 = mul nsw i32 3, %86
  %88 = load i32, i32* %8, align 4
  %89 = icmp sgt i32 %88, 0
  %90 = zext i1 %89 to i32
  %91 = add nsw i32 %87, %90
  %92 = ashr i32 %91, 1
  %93 = load i32*, i32** %6, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 1
  %95 = load i32, i32* %94, align 4
  %96 = add nsw i32 %92, %95
  %97 = sub nsw i32 %96, 1
  %98 = load [2 x i32]*, [2 x i32]** %5, align 8
  %99 = getelementptr inbounds [2 x i32], [2 x i32]* %98, i64 0
  %100 = getelementptr inbounds [2 x i32], [2 x i32]* %99, i64 0, i64 1
  store i32 %97, i32* %100, align 4
  %101 = load i32, i32* %7, align 4
  %102 = load i32, i32* %7, align 4
  %103 = icmp sgt i32 %102, 0
  %104 = zext i1 %103 to i32
  %105 = add nsw i32 %101, %104
  %106 = ashr i32 %105, 1
  %107 = load i32*, i32** %6, align 8
  %108 = getelementptr inbounds i32, i32* %107, i64 0
  %109 = load i32, i32* %108, align 4
  %110 = add nsw i32 %106, %109
  %111 = load [2 x i32]*, [2 x i32]** %5, align 8
  %112 = getelementptr inbounds [2 x i32], [2 x i32]* %111, i64 1
  %113 = getelementptr inbounds [2 x i32], [2 x i32]* %112, i64 0, i64 0
  store i32 %110, i32* %113, align 4
  %114 = load i32, i32* %8, align 4
  %115 = load i32, i32* %8, align 4
  %116 = icmp sgt i32 %115, 0
  %117 = zext i1 %116 to i32
  %118 = add nsw i32 %114, %117
  %119 = ashr i32 %118, 1
  %120 = load i32*, i32** %6, align 8
  %121 = getelementptr inbounds i32, i32* %120, i64 1
  %122 = load i32, i32* %121, align 4
  %123 = add nsw i32 %119, %122
  %124 = add nsw i32 %123, 1
  %125 = load [2 x i32]*, [2 x i32]** %5, align 8
  %126 = getelementptr inbounds [2 x i32], [2 x i32]* %125, i64 1
  %127 = getelementptr inbounds [2 x i32], [2 x i32]* %126, i64 0, i64 1
  store i32 %124, i32* %127, align 4
  br label %128

128:                                              ; preds = %71, %14
  br label %171

129:                                              ; preds = %4
  %130 = load i32, i32* %7, align 4
  %131 = load i32, i32* %7, align 4
  %132 = icmp sgt i32 %131, 0
  %133 = zext i1 %132 to i32
  %134 = add nsw i32 %130, %133
  %135 = ashr i32 %134, 1
  %136 = load i32*, i32** %6, align 8
  %137 = getelementptr inbounds i32, i32* %136, i64 0
  %138 = load i32, i32* %137, align 4
  %139 = add nsw i32 %135, %138
  %140 = load [2 x i32]*, [2 x i32]** %5, align 8
  %141 = getelementptr inbounds [2 x i32], [2 x i32]* %140, i64 0
  %142 = getelementptr inbounds [2 x i32], [2 x i32]* %141, i64 0, i64 0
  store i32 %139, i32* %142, align 4
  %143 = load i32, i32* %8, align 4
  %144 = load i32, i32* %8, align 4
  %145 = icmp sgt i32 %144, 0
  %146 = zext i1 %145 to i32
  %147 = add nsw i32 %143, %146
  %148 = ashr i32 %147, 1
  %149 = load i32*, i32** %6, align 8
  %150 = getelementptr inbounds i32, i32* %149, i64 1
  %151 = load i32, i32* %150, align 4
  %152 = add nsw i32 %148, %151
  %153 = load [2 x i32]*, [2 x i32]** %5, align 8
  %154 = getelementptr inbounds [2 x i32], [2 x i32]* %153, i64 0
  %155 = getelementptr inbounds [2 x i32], [2 x i32]* %154, i64 0, i64 1
  store i32 %152, i32* %155, align 4
  %156 = load i32, i32* @pict_struct, align 4
  %157 = icmp eq i32 %156, 1
  br i1 %157, label %158, label %164

158:                                              ; preds = %129
  %159 = load [2 x i32]*, [2 x i32]** %5, align 8
  %160 = getelementptr inbounds [2 x i32], [2 x i32]* %159, i64 0
  %161 = getelementptr inbounds [2 x i32], [2 x i32]* %160, i64 0, i64 1
  %162 = load i32, i32* %161, align 4
  %163 = add nsw i32 %162, -1
  store i32 %163, i32* %161, align 4
  br label %170

164:                                              ; preds = %129
  %165 = load [2 x i32]*, [2 x i32]** %5, align 8
  %166 = getelementptr inbounds [2 x i32], [2 x i32]* %165, i64 0
  %167 = getelementptr inbounds [2 x i32], [2 x i32]* %166, i64 0, i64 1
  %168 = load i32, i32* %167, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %167, align 4
  br label %170

170:                                              ; preds = %164, %158
  br label %171

171:                                              ; preds = %170, %128
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @pred_comp(i8* %0, i8* %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9) #0 {
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i8*, align 8
  %28 = alloca i8*, align 8
  store i8* %0, i8** %11, align 8
  store i8* %1, i8** %12, align 8
  store i32 %2, i32* %13, align 4
  store i32 %3, i32* %14, align 4
  store i32 %4, i32* %15, align 4
  store i32 %5, i32* %16, align 4
  store i32 %6, i32* %17, align 4
  store i32 %7, i32* %18, align 4
  store i32 %8, i32* %19, align 4
  store i32 %9, i32* %20, align 4
  %29 = load i32, i32* %18, align 4
  %30 = ashr i32 %29, 1
  store i32 %30, i32* %21, align 4
  %31 = load i32, i32* %18, align 4
  %32 = and i32 %31, 1
  store i32 %32, i32* %22, align 4
  %33 = load i32, i32* %19, align 4
  %34 = ashr i32 %33, 1
  store i32 %34, i32* %23, align 4
  %35 = load i32, i32* %19, align 4
  %36 = and i32 %35, 1
  store i32 %36, i32* %24, align 4
  %37 = load i8*, i8** %11, align 8
  %38 = load i32, i32* %13, align 4
  %39 = load i32, i32* %17, align 4
  %40 = load i32, i32* %23, align 4
  %41 = add nsw i32 %39, %40
  %42 = mul nsw i32 %38, %41
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %37, i64 %43
  %45 = load i32, i32* %16, align 4
  %46 = load i32, i32* %21, align 4
  %47 = add nsw i32 %45, %46
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %44, i64 %48
  store i8* %49, i8** %27, align 8
  %50 = load i8*, i8** %12, align 8
  %51 = load i32, i32* %13, align 4
  %52 = load i32, i32* %17, align 4
  %53 = mul nsw i32 %51, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %50, i64 %54
  %56 = load i32, i32* %16, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %55, i64 %57
  store i8* %58, i8** %28, align 8
  %59 = load i32, i32* %22, align 4
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %151, label %61

61:                                               ; preds = %10
  %62 = load i32, i32* %24, align 4
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %151, label %64

64:                                               ; preds = %61
  %65 = load i32, i32* %20, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %114

67:                                               ; preds = %64
  store i32 0, i32* %26, align 4
  br label %68

68:                                               ; preds = %110, %67
  %69 = load i32, i32* %26, align 4
  %70 = load i32, i32* %15, align 4
  %71 = icmp slt i32 %69, %70
  br i1 %71, label %72, label %113

72:                                               ; preds = %68
  store i32 0, i32* %25, align 4
  br label %73

73:                                               ; preds = %98, %72
  %74 = load i32, i32* %25, align 4
  %75 = load i32, i32* %14, align 4
  %76 = icmp slt i32 %74, %75
  br i1 %76, label %77, label %101

77:                                               ; preds = %73
  %78 = load i8*, i8** %28, align 8
  %79 = load i32, i32* %25, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i8, i8* %78, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = load i8*, i8** %27, align 8
  %85 = load i32, i32* %25, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %84, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = add nsw i32 %83, %89
  %91 = add nsw i32 %90, 1
  %92 = lshr i32 %91, 1
  %93 = trunc i32 %92 to i8
  %94 = load i8*, i8** %28, align 8
  %95 = load i32, i32* %25, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %94, i64 %96
  store i8 %93, i8* %97, align 1
  br label %98

98:                                               ; preds = %77
  %99 = load i32, i32* %25, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %25, align 4
  br label %73

101:                                              ; preds = %73
  %102 = load i32, i32* %13, align 4
  %103 = load i8*, i8** %27, align 8
  %104 = sext i32 %102 to i64
  %105 = getelementptr inbounds i8, i8* %103, i64 %104
  store i8* %105, i8** %27, align 8
  %106 = load i32, i32* %13, align 4
  %107 = load i8*, i8** %28, align 8
  %108 = sext i32 %106 to i64
  %109 = getelementptr inbounds i8, i8* %107, i64 %108
  store i8* %109, i8** %28, align 8
  br label %110

110:                                              ; preds = %101
  %111 = load i32, i32* %26, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %26, align 4
  br label %68

113:                                              ; preds = %68
  br label %150

114:                                              ; preds = %64
  store i32 0, i32* %26, align 4
  br label %115

115:                                              ; preds = %146, %114
  %116 = load i32, i32* %26, align 4
  %117 = load i32, i32* %15, align 4
  %118 = icmp slt i32 %116, %117
  br i1 %118, label %119, label %149

119:                                              ; preds = %115
  store i32 0, i32* %25, align 4
  br label %120

120:                                              ; preds = %134, %119
  %121 = load i32, i32* %25, align 4
  %122 = load i32, i32* %14, align 4
  %123 = icmp slt i32 %121, %122
  br i1 %123, label %124, label %137

124:                                              ; preds = %120
  %125 = load i8*, i8** %27, align 8
  %126 = load i32, i32* %25, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i8, i8* %125, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = load i8*, i8** %28, align 8
  %131 = load i32, i32* %25, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %130, i64 %132
  store i8 %129, i8* %133, align 1
  br label %134

134:                                              ; preds = %124
  %135 = load i32, i32* %25, align 4
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %25, align 4
  br label %120

137:                                              ; preds = %120
  %138 = load i32, i32* %13, align 4
  %139 = load i8*, i8** %27, align 8
  %140 = sext i32 %138 to i64
  %141 = getelementptr inbounds i8, i8* %139, i64 %140
  store i8* %141, i8** %27, align 8
  %142 = load i32, i32* %13, align 4
  %143 = load i8*, i8** %28, align 8
  %144 = sext i32 %142 to i64
  %145 = getelementptr inbounds i8, i8* %143, i64 %144
  store i8* %145, i8** %28, align 8
  br label %146

146:                                              ; preds = %137
  %147 = load i32, i32* %26, align 4
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %26, align 4
  br label %115

149:                                              ; preds = %115
  br label %150

150:                                              ; preds = %149, %113
  br label %532

151:                                              ; preds = %61, %10
  %152 = load i32, i32* %22, align 4
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %268, label %154

154:                                              ; preds = %151
  %155 = load i32, i32* %24, align 4
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %268

157:                                              ; preds = %154
  %158 = load i32, i32* %20, align 4
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %160, label %218

160:                                              ; preds = %157
  store i32 0, i32* %26, align 4
  br label %161

161:                                              ; preds = %214, %160
  %162 = load i32, i32* %26, align 4
  %163 = load i32, i32* %15, align 4
  %164 = icmp slt i32 %162, %163
  br i1 %164, label %165, label %217

165:                                              ; preds = %161
  store i32 0, i32* %25, align 4
  br label %166

166:                                              ; preds = %202, %165
  %167 = load i32, i32* %25, align 4
  %168 = load i32, i32* %14, align 4
  %169 = icmp slt i32 %167, %168
  br i1 %169, label %170, label %205

170:                                              ; preds = %166
  %171 = load i8*, i8** %28, align 8
  %172 = load i32, i32* %25, align 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i8, i8* %171, i64 %173
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = load i8*, i8** %27, align 8
  %178 = load i32, i32* %25, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i8, i8* %177, i64 %179
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i32
  %183 = load i8*, i8** %27, align 8
  %184 = load i32, i32* %25, align 4
  %185 = load i32, i32* %13, align 4
  %186 = add nsw i32 %184, %185
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds i8, i8* %183, i64 %187
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = add nsw i32 %182, %190
  %192 = add nsw i32 %191, 1
  %193 = lshr i32 %192, 1
  %194 = add i32 %176, %193
  %195 = add i32 %194, 1
  %196 = lshr i32 %195, 1
  %197 = trunc i32 %196 to i8
  %198 = load i8*, i8** %28, align 8
  %199 = load i32, i32* %25, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i8, i8* %198, i64 %200
  store i8 %197, i8* %201, align 1
  br label %202

202:                                              ; preds = %170
  %203 = load i32, i32* %25, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %25, align 4
  br label %166

205:                                              ; preds = %166
  %206 = load i32, i32* %13, align 4
  %207 = load i8*, i8** %27, align 8
  %208 = sext i32 %206 to i64
  %209 = getelementptr inbounds i8, i8* %207, i64 %208
  store i8* %209, i8** %27, align 8
  %210 = load i32, i32* %13, align 4
  %211 = load i8*, i8** %28, align 8
  %212 = sext i32 %210 to i64
  %213 = getelementptr inbounds i8, i8* %211, i64 %212
  store i8* %213, i8** %28, align 8
  br label %214

214:                                              ; preds = %205
  %215 = load i32, i32* %26, align 4
  %216 = add nsw i32 %215, 1
  store i32 %216, i32* %26, align 4
  br label %161

217:                                              ; preds = %161
  br label %267

218:                                              ; preds = %157
  store i32 0, i32* %26, align 4
  br label %219

219:                                              ; preds = %263, %218
  %220 = load i32, i32* %26, align 4
  %221 = load i32, i32* %15, align 4
  %222 = icmp slt i32 %220, %221
  br i1 %222, label %223, label %266

223:                                              ; preds = %219
  store i32 0, i32* %25, align 4
  br label %224

224:                                              ; preds = %251, %223
  %225 = load i32, i32* %25, align 4
  %226 = load i32, i32* %14, align 4
  %227 = icmp slt i32 %225, %226
  br i1 %227, label %228, label %254

228:                                              ; preds = %224
  %229 = load i8*, i8** %27, align 8
  %230 = load i32, i32* %25, align 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i8, i8* %229, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i32
  %235 = load i8*, i8** %27, align 8
  %236 = load i32, i32* %25, align 4
  %237 = load i32, i32* %13, align 4
  %238 = add nsw i32 %236, %237
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds i8, i8* %235, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = add nsw i32 %234, %242
  %244 = add nsw i32 %243, 1
  %245 = lshr i32 %244, 1
  %246 = trunc i32 %245 to i8
  %247 = load i8*, i8** %28, align 8
  %248 = load i32, i32* %25, align 4
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds i8, i8* %247, i64 %249
  store i8 %246, i8* %250, align 1
  br label %251

251:                                              ; preds = %228
  %252 = load i32, i32* %25, align 4
  %253 = add nsw i32 %252, 1
  store i32 %253, i32* %25, align 4
  br label %224

254:                                              ; preds = %224
  %255 = load i32, i32* %13, align 4
  %256 = load i8*, i8** %27, align 8
  %257 = sext i32 %255 to i64
  %258 = getelementptr inbounds i8, i8* %256, i64 %257
  store i8* %258, i8** %27, align 8
  %259 = load i32, i32* %13, align 4
  %260 = load i8*, i8** %28, align 8
  %261 = sext i32 %259 to i64
  %262 = getelementptr inbounds i8, i8* %260, i64 %261
  store i8* %262, i8** %28, align 8
  br label %263

263:                                              ; preds = %254
  %264 = load i32, i32* %26, align 4
  %265 = add nsw i32 %264, 1
  store i32 %265, i32* %26, align 4
  br label %219

266:                                              ; preds = %219
  br label %267

267:                                              ; preds = %266, %217
  br label %531

268:                                              ; preds = %154, %151
  %269 = load i32, i32* %22, align 4
  %270 = icmp ne i32 %269, 0
  br i1 %270, label %271, label %383

271:                                              ; preds = %268
  %272 = load i32, i32* %24, align 4
  %273 = icmp ne i32 %272, 0
  br i1 %273, label %383, label %274

274:                                              ; preds = %271
  %275 = load i32, i32* %20, align 4
  %276 = icmp ne i32 %275, 0
  br i1 %276, label %277, label %334

277:                                              ; preds = %274
  store i32 0, i32* %26, align 4
  br label %278

278:                                              ; preds = %330, %277
  %279 = load i32, i32* %26, align 4
  %280 = load i32, i32* %15, align 4
  %281 = icmp slt i32 %279, %280
  br i1 %281, label %282, label %333

282:                                              ; preds = %278
  store i32 0, i32* %25, align 4
  br label %283

283:                                              ; preds = %318, %282
  %284 = load i32, i32* %25, align 4
  %285 = load i32, i32* %14, align 4
  %286 = icmp slt i32 %284, %285
  br i1 %286, label %287, label %321

287:                                              ; preds = %283
  %288 = load i8*, i8** %28, align 8
  %289 = load i32, i32* %25, align 4
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds i8, i8* %288, i64 %290
  %292 = load i8, i8* %291, align 1
  %293 = zext i8 %292 to i32
  %294 = load i8*, i8** %27, align 8
  %295 = load i32, i32* %25, align 4
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds i8, i8* %294, i64 %296
  %298 = load i8, i8* %297, align 1
  %299 = zext i8 %298 to i32
  %300 = load i8*, i8** %27, align 8
  %301 = load i32, i32* %25, align 4
  %302 = add nsw i32 %301, 1
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds i8, i8* %300, i64 %303
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i32
  %307 = add nsw i32 %299, %306
  %308 = add nsw i32 %307, 1
  %309 = lshr i32 %308, 1
  %310 = add i32 %293, %309
  %311 = add i32 %310, 1
  %312 = lshr i32 %311, 1
  %313 = trunc i32 %312 to i8
  %314 = load i8*, i8** %28, align 8
  %315 = load i32, i32* %25, align 4
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds i8, i8* %314, i64 %316
  store i8 %313, i8* %317, align 1
  br label %318

318:                                              ; preds = %287
  %319 = load i32, i32* %25, align 4
  %320 = add nsw i32 %319, 1
  store i32 %320, i32* %25, align 4
  br label %283

321:                                              ; preds = %283
  %322 = load i32, i32* %13, align 4
  %323 = load i8*, i8** %27, align 8
  %324 = sext i32 %322 to i64
  %325 = getelementptr inbounds i8, i8* %323, i64 %324
  store i8* %325, i8** %27, align 8
  %326 = load i32, i32* %13, align 4
  %327 = load i8*, i8** %28, align 8
  %328 = sext i32 %326 to i64
  %329 = getelementptr inbounds i8, i8* %327, i64 %328
  store i8* %329, i8** %28, align 8
  br label %330

330:                                              ; preds = %321
  %331 = load i32, i32* %26, align 4
  %332 = add nsw i32 %331, 1
  store i32 %332, i32* %26, align 4
  br label %278

333:                                              ; preds = %278
  br label %382

334:                                              ; preds = %274
  store i32 0, i32* %26, align 4
  br label %335

335:                                              ; preds = %378, %334
  %336 = load i32, i32* %26, align 4
  %337 = load i32, i32* %15, align 4
  %338 = icmp slt i32 %336, %337
  br i1 %338, label %339, label %381

339:                                              ; preds = %335
  store i32 0, i32* %25, align 4
  br label %340

340:                                              ; preds = %366, %339
  %341 = load i32, i32* %25, align 4
  %342 = load i32, i32* %14, align 4
  %343 = icmp slt i32 %341, %342
  br i1 %343, label %344, label %369

344:                                              ; preds = %340
  %345 = load i8*, i8** %27, align 8
  %346 = load i32, i32* %25, align 4
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds i8, i8* %345, i64 %347
  %349 = load i8, i8* %348, align 1
  %350 = zext i8 %349 to i32
  %351 = load i8*, i8** %27, align 8
  %352 = load i32, i32* %25, align 4
  %353 = add nsw i32 %352, 1
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds i8, i8* %351, i64 %354
  %356 = load i8, i8* %355, align 1
  %357 = zext i8 %356 to i32
  %358 = add nsw i32 %350, %357
  %359 = add nsw i32 %358, 1
  %360 = lshr i32 %359, 1
  %361 = trunc i32 %360 to i8
  %362 = load i8*, i8** %28, align 8
  %363 = load i32, i32* %25, align 4
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds i8, i8* %362, i64 %364
  store i8 %361, i8* %365, align 1
  br label %366

366:                                              ; preds = %344
  %367 = load i32, i32* %25, align 4
  %368 = add nsw i32 %367, 1
  store i32 %368, i32* %25, align 4
  br label %340

369:                                              ; preds = %340
  %370 = load i32, i32* %13, align 4
  %371 = load i8*, i8** %27, align 8
  %372 = sext i32 %370 to i64
  %373 = getelementptr inbounds i8, i8* %371, i64 %372
  store i8* %373, i8** %27, align 8
  %374 = load i32, i32* %13, align 4
  %375 = load i8*, i8** %28, align 8
  %376 = sext i32 %374 to i64
  %377 = getelementptr inbounds i8, i8* %375, i64 %376
  store i8* %377, i8** %28, align 8
  br label %378

378:                                              ; preds = %369
  %379 = load i32, i32* %26, align 4
  %380 = add nsw i32 %379, 1
  store i32 %380, i32* %26, align 4
  br label %335

381:                                              ; preds = %335
  br label %382

382:                                              ; preds = %381, %333
  br label %530

383:                                              ; preds = %271, %268
  %384 = load i32, i32* %20, align 4
  %385 = icmp ne i32 %384, 0
  br i1 %385, label %386, label %462

386:                                              ; preds = %383
  store i32 0, i32* %26, align 4
  br label %387

387:                                              ; preds = %458, %386
  %388 = load i32, i32* %26, align 4
  %389 = load i32, i32* %15, align 4
  %390 = icmp slt i32 %388, %389
  br i1 %390, label %391, label %461

391:                                              ; preds = %387
  store i32 0, i32* %25, align 4
  br label %392

392:                                              ; preds = %446, %391
  %393 = load i32, i32* %25, align 4
  %394 = load i32, i32* %14, align 4
  %395 = icmp slt i32 %393, %394
  br i1 %395, label %396, label %449

396:                                              ; preds = %392
  %397 = load i8*, i8** %28, align 8
  %398 = load i32, i32* %25, align 4
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds i8, i8* %397, i64 %399
  %401 = load i8, i8* %400, align 1
  %402 = zext i8 %401 to i32
  %403 = load i8*, i8** %27, align 8
  %404 = load i32, i32* %25, align 4
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds i8, i8* %403, i64 %405
  %407 = load i8, i8* %406, align 1
  %408 = zext i8 %407 to i32
  %409 = load i8*, i8** %27, align 8
  %410 = load i32, i32* %25, align 4
  %411 = add nsw i32 %410, 1
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds i8, i8* %409, i64 %412
  %414 = load i8, i8* %413, align 1
  %415 = zext i8 %414 to i32
  %416 = add nsw i32 %408, %415
  %417 = load i8*, i8** %27, align 8
  %418 = load i32, i32* %25, align 4
  %419 = load i32, i32* %13, align 4
  %420 = add nsw i32 %418, %419
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds i8, i8* %417, i64 %421
  %423 = load i8, i8* %422, align 1
  %424 = zext i8 %423 to i32
  %425 = add nsw i32 %416, %424
  %426 = load i8*, i8** %27, align 8
  %427 = load i32, i32* %25, align 4
  %428 = load i32, i32* %13, align 4
  %429 = add nsw i32 %427, %428
  %430 = add nsw i32 %429, 1
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds i8, i8* %426, i64 %431
  %433 = load i8, i8* %432, align 1
  %434 = zext i8 %433 to i32
  %435 = add nsw i32 %425, %434
  %436 = add nsw i32 %435, 2
  %437 = lshr i32 %436, 2
  %438 = add i32 %402, %437
  %439 = add i32 %438, 1
  %440 = lshr i32 %439, 1
  %441 = trunc i32 %440 to i8
  %442 = load i8*, i8** %28, align 8
  %443 = load i32, i32* %25, align 4
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds i8, i8* %442, i64 %444
  store i8 %441, i8* %445, align 1
  br label %446

446:                                              ; preds = %396
  %447 = load i32, i32* %25, align 4
  %448 = add nsw i32 %447, 1
  store i32 %448, i32* %25, align 4
  br label %392

449:                                              ; preds = %392
  %450 = load i32, i32* %13, align 4
  %451 = load i8*, i8** %27, align 8
  %452 = sext i32 %450 to i64
  %453 = getelementptr inbounds i8, i8* %451, i64 %452
  store i8* %453, i8** %27, align 8
  %454 = load i32, i32* %13, align 4
  %455 = load i8*, i8** %28, align 8
  %456 = sext i32 %454 to i64
  %457 = getelementptr inbounds i8, i8* %455, i64 %456
  store i8* %457, i8** %28, align 8
  br label %458

458:                                              ; preds = %449
  %459 = load i32, i32* %26, align 4
  %460 = add nsw i32 %459, 1
  store i32 %460, i32* %26, align 4
  br label %387

461:                                              ; preds = %387
  br label %529

462:                                              ; preds = %383
  store i32 0, i32* %26, align 4
  br label %463

463:                                              ; preds = %525, %462
  %464 = load i32, i32* %26, align 4
  %465 = load i32, i32* %15, align 4
  %466 = icmp slt i32 %464, %465
  br i1 %466, label %467, label %528

467:                                              ; preds = %463
  store i32 0, i32* %25, align 4
  br label %468

468:                                              ; preds = %513, %467
  %469 = load i32, i32* %25, align 4
  %470 = load i32, i32* %14, align 4
  %471 = icmp slt i32 %469, %470
  br i1 %471, label %472, label %516

472:                                              ; preds = %468
  %473 = load i8*, i8** %27, align 8
  %474 = load i32, i32* %25, align 4
  %475 = sext i32 %474 to i64
  %476 = getelementptr inbounds i8, i8* %473, i64 %475
  %477 = load i8, i8* %476, align 1
  %478 = zext i8 %477 to i32
  %479 = load i8*, i8** %27, align 8
  %480 = load i32, i32* %25, align 4
  %481 = add nsw i32 %480, 1
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds i8, i8* %479, i64 %482
  %484 = load i8, i8* %483, align 1
  %485 = zext i8 %484 to i32
  %486 = add nsw i32 %478, %485
  %487 = load i8*, i8** %27, align 8
  %488 = load i32, i32* %25, align 4
  %489 = load i32, i32* %13, align 4
  %490 = add nsw i32 %488, %489
  %491 = sext i32 %490 to i64
  %492 = getelementptr inbounds i8, i8* %487, i64 %491
  %493 = load i8, i8* %492, align 1
  %494 = zext i8 %493 to i32
  %495 = add nsw i32 %486, %494
  %496 = load i8*, i8** %27, align 8
  %497 = load i32, i32* %25, align 4
  %498 = load i32, i32* %13, align 4
  %499 = add nsw i32 %497, %498
  %500 = add nsw i32 %499, 1
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds i8, i8* %496, i64 %501
  %503 = load i8, i8* %502, align 1
  %504 = zext i8 %503 to i32
  %505 = add nsw i32 %495, %504
  %506 = add nsw i32 %505, 2
  %507 = lshr i32 %506, 2
  %508 = trunc i32 %507 to i8
  %509 = load i8*, i8** %28, align 8
  %510 = load i32, i32* %25, align 4
  %511 = sext i32 %510 to i64
  %512 = getelementptr inbounds i8, i8* %509, i64 %511
  store i8 %508, i8* %512, align 1
  br label %513

513:                                              ; preds = %472
  %514 = load i32, i32* %25, align 4
  %515 = add nsw i32 %514, 1
  store i32 %515, i32* %25, align 4
  br label %468

516:                                              ; preds = %468
  %517 = load i32, i32* %13, align 4
  %518 = load i8*, i8** %27, align 8
  %519 = sext i32 %517 to i64
  %520 = getelementptr inbounds i8, i8* %518, i64 %519
  store i8* %520, i8** %27, align 8
  %521 = load i32, i32* %13, align 4
  %522 = load i8*, i8** %28, align 8
  %523 = sext i32 %521 to i64
  %524 = getelementptr inbounds i8, i8* %522, i64 %523
  store i8* %524, i8** %28, align 8
  br label %525

525:                                              ; preds = %516
  %526 = load i32, i32* %26, align 4
  %527 = add nsw i32 %526, 1
  store i32 %527, i32* %26, align 4
  br label %463

528:                                              ; preds = %463
  br label %529

529:                                              ; preds = %528, %461
  br label %530

530:                                              ; preds = %529, %382
  br label %531

531:                                              ; preds = %530, %267
  br label %532

532:                                              ; preds = %531, %150
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @initbits() #0 {
  store i32 8, i32* @outcnt, align 4
  store i32 0, i32* @bytecnt, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putbits(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %7 = load i32, i32* %4, align 4
  %8 = sub nsw i32 %7, 1
  %9 = shl i32 1, %8
  store i32 %9, i32* %6, align 4
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %43, %2
  %11 = load i32, i32* %5, align 4
  %12 = load i32, i32* %4, align 4
  %13 = icmp slt i32 %11, %12
  br i1 %13, label %14, label %46

14:                                               ; preds = %10
  %15 = load i8, i8* @outbfr, align 1
  %16 = zext i8 %15 to i32
  %17 = shl i32 %16, 1
  %18 = trunc i32 %17 to i8
  store i8 %18, i8* @outbfr, align 1
  %19 = load i32, i32* %3, align 4
  %20 = load i32, i32* %6, align 4
  %21 = and i32 %19, %20
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = load i8, i8* @outbfr, align 1
  %25 = zext i8 %24 to i32
  %26 = or i32 %25, 1
  %27 = trunc i32 %26 to i8
  store i8 %27, i8* @outbfr, align 1
  br label %28

28:                                               ; preds = %23, %14
  %29 = load i32, i32* %6, align 4
  %30 = lshr i32 %29, 1
  store i32 %30, i32* %6, align 4
  %31 = load i32, i32* @outcnt, align 4
  %32 = add nsw i32 %31, -1
  store i32 %32, i32* @outcnt, align 4
  %33 = load i32, i32* @outcnt, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %42

35:                                               ; preds = %28
  %36 = load i8, i8* @outbfr, align 1
  %37 = zext i8 %36 to i32
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @outfile, align 8
  %39 = call i32 @putc(i32 %37, %struct._IO_FILE* %38)
  store i32 8, i32* @outcnt, align 4
  %40 = load i32, i32* @bytecnt, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* @bytecnt, align 4
  br label %42

42:                                               ; preds = %35, %28
  br label %43

43:                                               ; preds = %42
  %44 = load i32, i32* %5, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %5, align 4
  br label %10

46:                                               ; preds = %10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @alignbits() #0 {
  %1 = load i32, i32* @outcnt, align 4
  %2 = icmp ne i32 %1, 8
  br i1 %2, label %3, label %5

3:                                                ; preds = %0
  %4 = load i32, i32* @outcnt, align 4
  call void @putbits(i32 0, i32 %4)
  br label %5

5:                                                ; preds = %3, %0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @bitcount() #0 {
  %1 = load i32, i32* @bytecnt, align 4
  %2 = mul nsw i32 8, %1
  %3 = load i32, i32* @outcnt, align 4
  %4 = sub nsw i32 8, %3
  %5 = add nsw i32 %2, %4
  ret i32 %5
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putseqhdr() #0 {
  %1 = alloca i32, align 4
  call void @alignbits()
  call void @putbits(i32 435, i32 32)
  %2 = load i32, i32* @horizontal_size, align 4
  call void @putbits(i32 %2, i32 12)
  %3 = load i32, i32* @vertical_size, align 4
  call void @putbits(i32 %3, i32 12)
  %4 = load i32, i32* @aspectratio, align 4
  call void @putbits(i32 %4, i32 4)
  %5 = load i32, i32* @frame_rate_code, align 4
  call void @putbits(i32 %5, i32 4)
  %6 = load double, double* @bit_rate, align 8
  %7 = fdiv double %6, 4.000000e+02
  %8 = call double @llvm.ceil.f64(double %7)
  %9 = fptosi double %8 to i32
  call void @putbits(i32 %9, i32 18)
  call void @putbits(i32 1, i32 1)
  %10 = load i32, i32* @vbv_buffer_size, align 4
  call void @putbits(i32 %10, i32 10)
  %11 = load i32, i32* @constrparms, align 4
  call void @putbits(i32 %11, i32 1)
  %12 = load i32, i32* @load_iquant, align 4
  call void @putbits(i32 %12, i32 1)
  %13 = load i32, i32* @load_iquant, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %32

15:                                               ; preds = %0
  store i32 0, i32* %1, align 4
  br label %16

16:                                               ; preds = %28, %15
  %17 = load i32, i32* %1, align 4
  %18 = icmp slt i32 %17, 64
  br i1 %18, label %19, label %31

19:                                               ; preds = %16
  %20 = load i32, i32* %1, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [64 x i8], [64 x i8]* @zig_zag_scan, i64 0, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i64
  %25 = getelementptr inbounds [64 x i8], [64 x i8]* @intra_q, i64 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  call void @putbits(i32 %27, i32 8)
  br label %28

28:                                               ; preds = %19
  %29 = load i32, i32* %1, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %1, align 4
  br label %16

31:                                               ; preds = %16
  br label %32

32:                                               ; preds = %31, %0
  %33 = load i32, i32* @load_niquant, align 4
  call void @putbits(i32 %33, i32 1)
  %34 = load i32, i32* @load_niquant, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %53

36:                                               ; preds = %32
  store i32 0, i32* %1, align 4
  br label %37

37:                                               ; preds = %49, %36
  %38 = load i32, i32* %1, align 4
  %39 = icmp slt i32 %38, 64
  br i1 %39, label %40, label %52

40:                                               ; preds = %37
  %41 = load i32, i32* %1, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [64 x i8], [64 x i8]* @zig_zag_scan, i64 0, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i64
  %46 = getelementptr inbounds [64 x i8], [64 x i8]* @inter_q, i64 0, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  call void @putbits(i32 %48, i32 8)
  br label %49

49:                                               ; preds = %40
  %50 = load i32, i32* %1, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %1, align 4
  br label %37

52:                                               ; preds = %37
  br label %53

53:                                               ; preds = %52, %32
  ret void
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @putseqext() #0 {
  call void @alignbits()
  call void @putbits(i32 437, i32 32)
  call void @putbits(i32 1, i32 4)
  %1 = load i32, i32* @profile, align 4
  %2 = shl i32 %1, 4
  %3 = load i32, i32* @level, align 4
  %4 = or i32 %2, %3
  call void @putbits(i32 %4, i32 8)
  %5 = load i32, i32* @prog_seq, align 4
  call void @putbits(i32 %5, i32 1)
  %6 = load i32, i32* @chroma_format, align 4
  call void @putbits(i32 %6, i32 2)
  %7 = load i32, i32* @horizontal_size, align 4
  %8 = ashr i32 %7, 12
  call void @putbits(i32 %8, i32 2)
  %9 = load i32, i32* @vertical_size, align 4
  %10 = ashr i32 %9, 12
  call void @putbits(i32 %10, i32 2)
  %11 = load double, double* @bit_rate, align 8
  %12 = fdiv double %11, 4.000000e+02
  %13 = call double @llvm.ceil.f64(double %12)
  %14 = fptosi double %13 to i32
  %15 = ashr i32 %14, 18
  call void @putbits(i32 %15, i32 12)
  call void @putbits(i32 1, i32 1)
  %16 = load i32, i32* @vbv_buffer_size, align 4
  %17 = ashr i32 %16, 10
  call void @putbits(i32 %17, i32 8)
  call void @putbits(i32 0, i32 1)
  call void @putbits(i32 0, i32 2)
  call void @putbits(i32 0, i32 5)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putseqdispext() #0 {
  call void @alignbits()
  call void @putbits(i32 437, i32 32)
  call void @putbits(i32 2, i32 4)
  %1 = load i32, i32* @video_format, align 4
  call void @putbits(i32 %1, i32 3)
  call void @putbits(i32 1, i32 1)
  %2 = load i32, i32* @color_primaries, align 4
  call void @putbits(i32 %2, i32 8)
  %3 = load i32, i32* @transfer_characteristics, align 4
  call void @putbits(i32 %3, i32 8)
  %4 = load i32, i32* @matrix_coefficients, align 4
  call void @putbits(i32 %4, i32 8)
  %5 = load i32, i32* @display_horizontal_size, align 4
  call void @putbits(i32 %5, i32 14)
  call void @putbits(i32 1, i32 1)
  %6 = load i32, i32* @display_vertical_size, align 4
  call void @putbits(i32 %6, i32 14)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putuserdata(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @alignbits()
  call void @putbits(i32 434, i32 32)
  br label %3

3:                                                ; preds = %7, %1
  %4 = load i8*, i8** %2, align 8
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = load i8*, i8** %2, align 8
  %9 = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %9, i8** %2, align 8
  %10 = load i8, i8* %8, align 1
  %11 = sext i8 %10 to i32
  call void @putbits(i32 %11, i32 8)
  br label %3

12:                                               ; preds = %3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putgophdr(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  call void @alignbits()
  call void @putbits(i32 440, i32 32)
  %6 = load i32, i32* @tc0, align 4
  %7 = load i32, i32* %3, align 4
  %8 = add nsw i32 %6, %7
  %9 = call i32 @frametotc(i32 %8)
  store i32 %9, i32* %5, align 4
  %10 = load i32, i32* %5, align 4
  call void @putbits(i32 %10, i32 25)
  %11 = load i32, i32* %4, align 4
  call void @putbits(i32 %11, i32 1)
  call void @putbits(i32 0, i32 1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @frametotc(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %9 = load double, double* @frame_rate, align 8
  %10 = fadd double %9, 5.000000e-01
  %11 = fptosi double %10 to i32
  store i32 %11, i32* %3, align 4
  %12 = load i32, i32* %2, align 4
  %13 = load i32, i32* %3, align 4
  %14 = srem i32 %12, %13
  store i32 %14, i32* %4, align 4
  %15 = load i32, i32* %2, align 4
  %16 = load i32, i32* %4, align 4
  %17 = sub nsw i32 %15, %16
  %18 = load i32, i32* %3, align 4
  %19 = sdiv i32 %17, %18
  store i32 %19, i32* %2, align 4
  %20 = load i32, i32* %2, align 4
  %21 = srem i32 %20, 60
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* %2, align 4
  %23 = load i32, i32* %5, align 4
  %24 = sub nsw i32 %22, %23
  %25 = sdiv i32 %24, 60
  store i32 %25, i32* %2, align 4
  %26 = load i32, i32* %2, align 4
  %27 = srem i32 %26, 60
  store i32 %27, i32* %6, align 4
  %28 = load i32, i32* %2, align 4
  %29 = load i32, i32* %6, align 4
  %30 = sub nsw i32 %28, %29
  %31 = sdiv i32 %30, 60
  store i32 %31, i32* %2, align 4
  %32 = load i32, i32* %2, align 4
  %33 = srem i32 %32, 24
  store i32 %33, i32* %7, align 4
  %34 = load i32, i32* %7, align 4
  %35 = shl i32 %34, 19
  %36 = load i32, i32* %6, align 4
  %37 = shl i32 %36, 13
  %38 = or i32 %35, %37
  %39 = or i32 %38, 4096
  %40 = load i32, i32* %5, align 4
  %41 = shl i32 %40, 6
  %42 = or i32 %39, %41
  %43 = load i32, i32* %4, align 4
  %44 = or i32 %42, %43
  store i32 %44, i32* %8, align 4
  %45 = load i32, i32* %8, align 4
  ret i32 %45
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putpicthdr() #0 {
  call void @alignbits()
  call void @putbits(i32 256, i32 32)
  call void @calc_vbv_delay()
  %1 = load i32, i32* @temp_ref, align 4
  call void @putbits(i32 %1, i32 10)
  %2 = load i32, i32* @pict_type, align 4
  call void @putbits(i32 %2, i32 3)
  %3 = load i32, i32* @vbv_delay, align 4
  call void @putbits(i32 %3, i32 16)
  %4 = load i32, i32* @pict_type, align 4
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %9, label %6

6:                                                ; preds = %0
  %7 = load i32, i32* @pict_type, align 4
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %9, label %16

9:                                                ; preds = %6, %0
  call void @putbits(i32 0, i32 1)
  %10 = load i32, i32* @mpeg1, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = load i32, i32* @forw_hor_f_code, align 4
  call void @putbits(i32 %13, i32 3)
  br label %15

14:                                               ; preds = %9
  call void @putbits(i32 7, i32 3)
  br label %15

15:                                               ; preds = %14, %12
  br label %16

16:                                               ; preds = %15, %6
  %17 = load i32, i32* @pict_type, align 4
  %18 = icmp eq i32 %17, 3
  br i1 %18, label %19, label %26

19:                                               ; preds = %16
  call void @putbits(i32 0, i32 1)
  %20 = load i32, i32* @mpeg1, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %19
  %23 = load i32, i32* @back_hor_f_code, align 4
  call void @putbits(i32 %23, i32 3)
  br label %25

24:                                               ; preds = %19
  call void @putbits(i32 7, i32 3)
  br label %25

25:                                               ; preds = %24, %22
  br label %26

26:                                               ; preds = %25, %16
  call void @putbits(i32 0, i32 1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putpictcodext() #0 {
  call void @alignbits()
  call void @putbits(i32 437, i32 32)
  call void @putbits(i32 8, i32 4)
  %1 = load i32, i32* @forw_hor_f_code, align 4
  call void @putbits(i32 %1, i32 4)
  %2 = load i32, i32* @forw_vert_f_code, align 4
  call void @putbits(i32 %2, i32 4)
  %3 = load i32, i32* @back_hor_f_code, align 4
  call void @putbits(i32 %3, i32 4)
  %4 = load i32, i32* @back_vert_f_code, align 4
  call void @putbits(i32 %4, i32 4)
  %5 = load i32, i32* @dc_prec, align 4
  call void @putbits(i32 %5, i32 2)
  %6 = load i32, i32* @pict_struct, align 4
  call void @putbits(i32 %6, i32 2)
  %7 = load i32, i32* @pict_struct, align 4
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %9, label %11

9:                                                ; preds = %0
  %10 = load i32, i32* @topfirst, align 4
  br label %12

11:                                               ; preds = %0
  br label %12

12:                                               ; preds = %11, %9
  %13 = phi i32 [ %10, %9 ], [ 0, %11 ]
  call void @putbits(i32 %13, i32 1)
  %14 = load i32, i32* @frame_pred_dct, align 4
  call void @putbits(i32 %14, i32 1)
  call void @putbits(i32 0, i32 1)
  %15 = load i32, i32* @q_scale_type, align 4
  call void @putbits(i32 %15, i32 1)
  %16 = load i32, i32* @intravlc, align 4
  call void @putbits(i32 %16, i32 1)
  %17 = load i32, i32* @altscan, align 4
  call void @putbits(i32 %17, i32 1)
  %18 = load i32, i32* @repeatfirst, align 4
  call void @putbits(i32 %18, i32 1)
  %19 = load i32, i32* @prog_frame, align 4
  call void @putbits(i32 %19, i32 1)
  %20 = load i32, i32* @prog_frame, align 4
  call void @putbits(i32 %20, i32 1)
  call void @putbits(i32 0, i32 1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putseqend() #0 {
  call void @alignbits()
  call void @putbits(i32 439, i32 32)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putintrablk(i16* %0, i32 %1) #0 {
  %3 = alloca i16*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i16* %0, i16** %3, align 8
  store i32 %1, i32* %4, align 4
  %9 = load i16*, i16** %3, align 8
  %10 = getelementptr inbounds i16, i16* %9, i64 0
  %11 = load i16, i16* %10, align 2
  %12 = sext i16 %11 to i32
  %13 = load i32, i32* %4, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [3 x i32], [3 x i32]* @dc_dct_pred, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = sub nsw i32 %12, %16
  store i32 %17, i32* %6, align 4
  %18 = load i16*, i16** %3, align 8
  %19 = getelementptr inbounds i16, i16* %18, i64 0
  %20 = load i16, i16* %19, align 2
  %21 = sext i16 %20 to i32
  %22 = load i32, i32* %4, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [3 x i32], [3 x i32]* @dc_dct_pred, i64 0, i64 %23
  store i32 %21, i32* %24, align 4
  %25 = load i32, i32* %4, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %2
  %28 = load i32, i32* %6, align 4
  call void @putDClum(i32 %28)
  br label %31

29:                                               ; preds = %2
  %30 = load i32, i32* %6, align 4
  call void @putDCchrom(i32 %30)
  br label %31

31:                                               ; preds = %29, %27
  store i32 0, i32* %7, align 4
  store i32 1, i32* %5, align 4
  br label %32

32:                                               ; preds = %59, %31
  %33 = load i32, i32* %5, align 4
  %34 = icmp slt i32 %33, 64
  br i1 %34, label %35, label %62

35:                                               ; preds = %32
  %36 = load i16*, i16** %3, align 8
  %37 = load i32, i32* @altscan, align 4
  %38 = icmp ne i32 %37, 0
  %39 = zext i1 %38 to i64
  %40 = select i1 %38, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @alternate_scan, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @zig_zag_scan, i64 0, i64 0)
  %41 = load i32, i32* %5, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i64
  %46 = getelementptr inbounds i16, i16* %36, i64 %45
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i32
  store i32 %48, i32* %8, align 4
  %49 = load i32, i32* %8, align 4
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %35
  %52 = load i32, i32* %7, align 4
  %53 = load i32, i32* %8, align 4
  %54 = load i32, i32* @intravlc, align 4
  call void @putAC(i32 %52, i32 %53, i32 %54)
  store i32 0, i32* %7, align 4
  br label %58

55:                                               ; preds = %35
  %56 = load i32, i32* %7, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %7, align 4
  br label %58

58:                                               ; preds = %55, %51
  br label %59

59:                                               ; preds = %58
  %60 = load i32, i32* %5, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %5, align 4
  br label %32

62:                                               ; preds = %32
  %63 = load i32, i32* @intravlc, align 4
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @putbits(i32 6, i32 4)
  br label %67

66:                                               ; preds = %62
  call void @putbits(i32 2, i32 2)
  br label %67

67:                                               ; preds = %66, %65
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putnonintrablk(i16* %0) #0 {
  %2 = alloca i16*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i16* %0, i16** %2, align 8
  store i32 0, i32* %4, align 4
  store i32 1, i32* %6, align 4
  store i32 0, i32* %3, align 4
  br label %7

7:                                                ; preds = %40, %1
  %8 = load i32, i32* %3, align 4
  %9 = icmp slt i32 %8, 64
  br i1 %9, label %10, label %43

10:                                               ; preds = %7
  %11 = load i16*, i16** %2, align 8
  %12 = load i32, i32* @altscan, align 4
  %13 = icmp ne i32 %12, 0
  %14 = zext i1 %13 to i64
  %15 = select i1 %13, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @alternate_scan, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @zig_zag_scan, i64 0, i64 0)
  %16 = load i32, i32* %3, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %15, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = getelementptr inbounds i16, i16* %11, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i32
  store i32 %23, i32* %5, align 4
  %24 = load i32, i32* %5, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %36

26:                                               ; preds = %10
  %27 = load i32, i32* %6, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %26
  %30 = load i32, i32* %4, align 4
  %31 = load i32, i32* %5, align 4
  call void @putACfirst(i32 %30, i32 %31)
  store i32 0, i32* %6, align 4
  br label %35

32:                                               ; preds = %26
  %33 = load i32, i32* %4, align 4
  %34 = load i32, i32* %5, align 4
  call void @putAC(i32 %33, i32 %34, i32 0)
  br label %35

35:                                               ; preds = %32, %29
  store i32 0, i32* %4, align 4
  br label %39

36:                                               ; preds = %10
  %37 = load i32, i32* %4, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %4, align 4
  br label %39

39:                                               ; preds = %36, %35
  br label %40

40:                                               ; preds = %39
  %41 = load i32, i32* %3, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %3, align 4
  br label %7

43:                                               ; preds = %7
  call void @putbits(i32 2, i32 2)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putmv(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %13 = load i32, i32* %4, align 4
  %14 = sub nsw i32 %13, 1
  store i32 %14, i32* %5, align 4
  %15 = load i32, i32* %5, align 4
  %16 = shl i32 1, %15
  store i32 %16, i32* %6, align 4
  %17 = load i32, i32* %6, align 4
  %18 = mul nsw i32 -16, %17
  store i32 %18, i32* %7, align 4
  %19 = load i32, i32* %6, align 4
  %20 = mul nsw i32 16, %19
  %21 = sub nsw i32 %20, 1
  store i32 %21, i32* %8, align 4
  %22 = load i32, i32* %6, align 4
  %23 = mul nsw i32 32, %22
  store i32 %23, i32* %9, align 4
  %24 = load i32, i32* %3, align 4
  %25 = load i32, i32* %8, align 4
  %26 = icmp sgt i32 %24, %25
  br i1 %26, label %27, label %31

27:                                               ; preds = %2
  %28 = load i32, i32* %9, align 4
  %29 = load i32, i32* %3, align 4
  %30 = sub nsw i32 %29, %28
  store i32 %30, i32* %3, align 4
  br label %40

31:                                               ; preds = %2
  %32 = load i32, i32* %3, align 4
  %33 = load i32, i32* %7, align 4
  %34 = icmp slt i32 %32, %33
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = load i32, i32* %9, align 4
  %37 = load i32, i32* %3, align 4
  %38 = add nsw i32 %37, %36
  store i32 %38, i32* %3, align 4
  br label %39

39:                                               ; preds = %35, %31
  br label %40

40:                                               ; preds = %39, %27
  %41 = load i32, i32* %3, align 4
  %42 = load i32, i32* %7, align 4
  %43 = icmp slt i32 %41, %42
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = load i32, i32* %3, align 4
  %46 = load i32, i32* %8, align 4
  %47 = icmp sgt i32 %45, %46
  br i1 %47, label %48, label %55

48:                                               ; preds = %44, %40
  %49 = load i32, i32* @quiet, align 4
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.106, i64 0, i64 0))
  br label %54

54:                                               ; preds = %51, %48
  br label %55

55:                                               ; preds = %54, %44
  %56 = load i32, i32* %3, align 4
  %57 = icmp slt i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %55
  %59 = load i32, i32* %3, align 4
  %60 = sub nsw i32 0, %59
  br label %63

61:                                               ; preds = %55
  %62 = load i32, i32* %3, align 4
  br label %63

63:                                               ; preds = %61, %58
  %64 = phi i32 [ %60, %58 ], [ %62, %61 ]
  %65 = load i32, i32* %6, align 4
  %66 = add nsw i32 %64, %65
  %67 = sub nsw i32 %66, 1
  store i32 %67, i32* %10, align 4
  %68 = load i32, i32* %10, align 4
  %69 = load i32, i32* %5, align 4
  %70 = ashr i32 %68, %69
  store i32 %70, i32* %11, align 4
  %71 = load i32, i32* %3, align 4
  %72 = icmp slt i32 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %63
  %74 = load i32, i32* %11, align 4
  %75 = sub nsw i32 0, %74
  store i32 %75, i32* %11, align 4
  br label %76

76:                                               ; preds = %73, %63
  %77 = load i32, i32* %10, align 4
  %78 = load i32, i32* %6, align 4
  %79 = sub nsw i32 %78, 1
  %80 = and i32 %77, %79
  store i32 %80, i32* %12, align 4
  %81 = load i32, i32* %11, align 4
  call void @putmotioncode(i32 %81)
  %82 = load i32, i32* %5, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %90

84:                                               ; preds = %76
  %85 = load i32, i32* %11, align 4
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %84
  %88 = load i32, i32* %12, align 4
  %89 = load i32, i32* %5, align 4
  call void @putbits(i32 %88, i32 %89)
  br label %90

90:                                               ; preds = %87, %84, %76
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putpict(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [2 x [2 x [2 x i32]]], align 16
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %13 = load i8*, i8** %2, align 8
  call void @rc_init_pict(i8* %13)
  call void @putpicthdr()
  %14 = load i32, i32* @mpeg1, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %1
  call void @putpictcodext()
  br label %17

17:                                               ; preds = %16, %1
  %18 = call i32 @rc_start_mb()
  store i32 %18, i32* %10, align 4
  store i32 0, i32* %5, align 4
  store i32 0, i32* %4, align 4
  br label %19

19:                                               ; preds = %827, %17
  %20 = load i32, i32* %4, align 4
  %21 = load i32, i32* @mb_height2, align 4
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %23, label %830

23:                                               ; preds = %19
  store i32 0, i32* %3, align 4
  br label %24

24:                                               ; preds = %823, %23
  %25 = load i32, i32* %3, align 4
  %26 = load i32, i32* @mb_width, align 4
  %27 = icmp slt i32 %25, %26
  br i1 %27, label %28, label %826

28:                                               ; preds = %24
  %29 = load i32, i32* %3, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %101

31:                                               ; preds = %28
  call void @alignbits()
  %32 = load i32, i32* @mpeg1, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = load i32, i32* @vertical_size, align 4
  %36 = icmp sle i32 %35, 2800
  br i1 %36, label %37, label %42

37:                                               ; preds = %34, %31
  %38 = load i32, i32* %4, align 4
  %39 = sext i32 %38 to i64
  %40 = add nsw i64 257, %39
  %41 = trunc i64 %40 to i32
  call void @putbits(i32 %41, i32 32)
  br label %50

42:                                               ; preds = %34
  %43 = load i32, i32* %4, align 4
  %44 = and i32 %43, 127
  %45 = sext i32 %44 to i64
  %46 = add nsw i64 257, %45
  %47 = trunc i64 %46 to i32
  call void @putbits(i32 %47, i32 32)
  %48 = load i32, i32* %4, align 4
  %49 = ashr i32 %48, 7
  call void @putbits(i32 %49, i32 3)
  br label %50

50:                                               ; preds = %42, %37
  %51 = load i32, i32* @q_scale_type, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %50
  %54 = load i32, i32* %10, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [113 x i8], [113 x i8]* @map_non_linear_mquant, i64 0, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  br label %62

59:                                               ; preds = %50
  %60 = load i32, i32* %10, align 4
  %61 = ashr i32 %60, 1
  br label %62

62:                                               ; preds = %59, %53
  %63 = phi i32 [ %58, %53 ], [ %61, %59 ]
  call void @putbits(i32 %63, i32 5)
  call void @putbits(i32 0, i32 1)
  store i32 0, i32* %7, align 4
  br label %64

64:                                               ; preds = %71, %62
  %65 = load i32, i32* %7, align 4
  %66 = icmp slt i32 %65, 3
  br i1 %66, label %67, label %74

67:                                               ; preds = %64
  %68 = load i32, i32* %7, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [3 x i32], [3 x i32]* @dc_dct_pred, i64 0, i64 %69
  store i32 0, i32* %70, align 4
  br label %71

71:                                               ; preds = %67
  %72 = load i32, i32* %7, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %7, align 4
  br label %64

74:                                               ; preds = %64
  %75 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 1
  %76 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %75, i64 0, i64 0
  %77 = getelementptr inbounds [2 x i32], [2 x i32]* %76, i64 0, i64 1
  store i32 0, i32* %77, align 4
  %78 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 1
  %79 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %78, i64 0, i64 0
  %80 = getelementptr inbounds [2 x i32], [2 x i32]* %79, i64 0, i64 0
  store i32 0, i32* %80, align 16
  %81 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %82 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %81, i64 0, i64 0
  %83 = getelementptr inbounds [2 x i32], [2 x i32]* %82, i64 0, i64 1
  store i32 0, i32* %83, align 4
  %84 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %85 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %84, i64 0, i64 0
  %86 = getelementptr inbounds [2 x i32], [2 x i32]* %85, i64 0, i64 0
  store i32 0, i32* %86, align 16
  %87 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 1
  %88 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %87, i64 0, i64 1
  %89 = getelementptr inbounds [2 x i32], [2 x i32]* %88, i64 0, i64 1
  store i32 0, i32* %89, align 4
  %90 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 1
  %91 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %90, i64 0, i64 1
  %92 = getelementptr inbounds [2 x i32], [2 x i32]* %91, i64 0, i64 0
  store i32 0, i32* %92, align 8
  %93 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %94 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %93, i64 0, i64 1
  %95 = getelementptr inbounds [2 x i32], [2 x i32]* %94, i64 0, i64 1
  store i32 0, i32* %95, align 4
  %96 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %97 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %96, i64 0, i64 1
  %98 = getelementptr inbounds [2 x i32], [2 x i32]* %97, i64 0, i64 0
  store i32 0, i32* %98, align 8
  %99 = load i32, i32* %3, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %12, align 4
  br label %101

101:                                              ; preds = %74, %28
  %102 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %103 = load i32, i32* %5, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %102, i64 %104
  %106 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %105, i32 0, i32 0
  %107 = load i32, i32* %106, align 8
  store i32 %107, i32* %8, align 4
  %108 = load i32, i32* %5, align 4
  %109 = call i32 @rc_calc_mquant(i32 %108)
  %110 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %111 = load i32, i32* %5, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %110, i64 %112
  %114 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %113, i32 0, i32 3
  store i32 %109, i32* %114, align 4
  %115 = load i32, i32* %8, align 4
  %116 = and i32 %115, 1
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %162

118:                                              ; preds = %101
  store i32 0, i32* %6, align 4
  br label %119

119:                                              ; preds = %150, %118
  %120 = load i32, i32* %6, align 4
  %121 = load i32, i32* @block_count, align 4
  %122 = icmp slt i32 %120, %121
  br i1 %122, label %123, label %153

123:                                              ; preds = %119
  %124 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %125 = load i32, i32* %5, align 4
  %126 = load i32, i32* @block_count, align 4
  %127 = mul nsw i32 %125, %126
  %128 = load i32, i32* %6, align 4
  %129 = add nsw i32 %127, %128
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [64 x i16], [64 x i16]* %124, i64 %130
  %132 = getelementptr inbounds [64 x i16], [64 x i16]* %131, i64 0, i64 0
  %133 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %134 = load i32, i32* %5, align 4
  %135 = load i32, i32* @block_count, align 4
  %136 = mul nsw i32 %134, %135
  %137 = load i32, i32* %6, align 4
  %138 = add nsw i32 %136, %137
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [64 x i16], [64 x i16]* %133, i64 %139
  %141 = getelementptr inbounds [64 x i16], [64 x i16]* %140, i64 0, i64 0
  %142 = load i32, i32* @dc_prec, align 4
  %143 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %144 = load i32, i32* %5, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %143, i64 %145
  %147 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %146, i32 0, i32 3
  %148 = load i32, i32* %147, align 4
  %149 = call i32 @quant_intra(i16* %132, i16* %141, i32 %142, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @intra_q, i64 0, i64 0), i32 %148)
  br label %150

150:                                              ; preds = %123
  %151 = load i32, i32* %6, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %6, align 4
  br label %119

153:                                              ; preds = %119
  %154 = load i32, i32* @block_count, align 4
  %155 = shl i32 1, %154
  %156 = sub nsw i32 %155, 1
  store i32 %156, i32* %11, align 4
  %157 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %158 = load i32, i32* %5, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %157, i64 %159
  %161 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %160, i32 0, i32 4
  store i32 %156, i32* %161, align 8
  br label %212

162:                                              ; preds = %101
  store i32 0, i32* %11, align 4
  store i32 0, i32* %6, align 4
  br label %163

163:                                              ; preds = %196, %162
  %164 = load i32, i32* %6, align 4
  %165 = load i32, i32* @block_count, align 4
  %166 = icmp slt i32 %164, %165
  br i1 %166, label %167, label %199

167:                                              ; preds = %163
  %168 = load i32, i32* %11, align 4
  %169 = shl i32 %168, 1
  %170 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %171 = load i32, i32* %5, align 4
  %172 = load i32, i32* @block_count, align 4
  %173 = mul nsw i32 %171, %172
  %174 = load i32, i32* %6, align 4
  %175 = add nsw i32 %173, %174
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [64 x i16], [64 x i16]* %170, i64 %176
  %178 = getelementptr inbounds [64 x i16], [64 x i16]* %177, i64 0, i64 0
  %179 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %180 = load i32, i32* %5, align 4
  %181 = load i32, i32* @block_count, align 4
  %182 = mul nsw i32 %180, %181
  %183 = load i32, i32* %6, align 4
  %184 = add nsw i32 %182, %183
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [64 x i16], [64 x i16]* %179, i64 %185
  %187 = getelementptr inbounds [64 x i16], [64 x i16]* %186, i64 0, i64 0
  %188 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %189 = load i32, i32* %5, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %188, i64 %190
  %192 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %191, i32 0, i32 3
  %193 = load i32, i32* %192, align 4
  %194 = call i32 @quant_non_intra(i16* %178, i16* %187, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @inter_q, i64 0, i64 0), i32 %193)
  %195 = or i32 %169, %194
  store i32 %195, i32* %11, align 4
  br label %196

196:                                              ; preds = %167
  %197 = load i32, i32* %6, align 4
  %198 = add nsw i32 %197, 1
  store i32 %198, i32* %6, align 4
  br label %163

199:                                              ; preds = %163
  %200 = load i32, i32* %11, align 4
  %201 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %202 = load i32, i32* %5, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %201, i64 %203
  %205 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %204, i32 0, i32 4
  store i32 %200, i32* %205, align 8
  %206 = load i32, i32* %11, align 4
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %208, label %211

208:                                              ; preds = %199
  %209 = load i32, i32* %8, align 4
  %210 = or i32 %209, 2
  store i32 %210, i32* %8, align 4
  br label %211

211:                                              ; preds = %208, %199
  br label %212

212:                                              ; preds = %211, %153
  %213 = load i32, i32* %11, align 4
  %214 = icmp ne i32 %213, 0
  br i1 %214, label %215, label %227

215:                                              ; preds = %212
  %216 = load i32, i32* %10, align 4
  %217 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %218 = load i32, i32* %5, align 4
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %217, i64 %219
  %221 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %220, i32 0, i32 3
  %222 = load i32, i32* %221, align 4
  %223 = icmp ne i32 %216, %222
  br i1 %223, label %224, label %227

224:                                              ; preds = %215
  %225 = load i32, i32* %8, align 4
  %226 = or i32 %225, 16
  store i32 %226, i32* %8, align 4
  br label %227

227:                                              ; preds = %224, %215, %212
  %228 = load i32, i32* %3, align 4
  %229 = icmp ne i32 %228, 0
  br i1 %229, label %230, label %543

230:                                              ; preds = %227
  %231 = load i32, i32* %3, align 4
  %232 = load i32, i32* @mb_width, align 4
  %233 = sub nsw i32 %232, 1
  %234 = icmp ne i32 %231, %233
  br i1 %234, label %235, label %543

235:                                              ; preds = %230
  %236 = load i32, i32* %11, align 4
  %237 = icmp ne i32 %236, 0
  br i1 %237, label %543, label %238

238:                                              ; preds = %235
  %239 = load i32, i32* @pict_type, align 4
  %240 = icmp eq i32 %239, 2
  br i1 %240, label %241, label %296

241:                                              ; preds = %238
  %242 = load i32, i32* %8, align 4
  %243 = and i32 %242, 8
  %244 = icmp ne i32 %243, 0
  br i1 %244, label %296, label %245

245:                                              ; preds = %241
  store i32 0, i32* %7, align 4
  br label %246

246:                                              ; preds = %253, %245
  %247 = load i32, i32* %7, align 4
  %248 = icmp slt i32 %247, 3
  br i1 %248, label %249, label %256

249:                                              ; preds = %246
  %250 = load i32, i32* %7, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [3 x i32], [3 x i32]* @dc_dct_pred, i64 0, i64 %251
  store i32 0, i32* %252, align 4
  br label %253

253:                                              ; preds = %249
  %254 = load i32, i32* %7, align 4
  %255 = add nsw i32 %254, 1
  store i32 %255, i32* %7, align 4
  br label %246

256:                                              ; preds = %246
  %257 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 1
  %258 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %257, i64 0, i64 0
  %259 = getelementptr inbounds [2 x i32], [2 x i32]* %258, i64 0, i64 1
  store i32 0, i32* %259, align 4
  %260 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 1
  %261 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %260, i64 0, i64 0
  %262 = getelementptr inbounds [2 x i32], [2 x i32]* %261, i64 0, i64 0
  store i32 0, i32* %262, align 16
  %263 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %264 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %263, i64 0, i64 0
  %265 = getelementptr inbounds [2 x i32], [2 x i32]* %264, i64 0, i64 1
  store i32 0, i32* %265, align 4
  %266 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %267 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %266, i64 0, i64 0
  %268 = getelementptr inbounds [2 x i32], [2 x i32]* %267, i64 0, i64 0
  store i32 0, i32* %268, align 16
  %269 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 1
  %270 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %269, i64 0, i64 1
  %271 = getelementptr inbounds [2 x i32], [2 x i32]* %270, i64 0, i64 1
  store i32 0, i32* %271, align 4
  %272 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 1
  %273 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %272, i64 0, i64 1
  %274 = getelementptr inbounds [2 x i32], [2 x i32]* %273, i64 0, i64 0
  store i32 0, i32* %274, align 8
  %275 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %276 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %275, i64 0, i64 1
  %277 = getelementptr inbounds [2 x i32], [2 x i32]* %276, i64 0, i64 1
  store i32 0, i32* %277, align 4
  %278 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %279 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %278, i64 0, i64 1
  %280 = getelementptr inbounds [2 x i32], [2 x i32]* %279, i64 0, i64 0
  store i32 0, i32* %280, align 8
  %281 = load i32, i32* %8, align 4
  %282 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %283 = load i32, i32* %5, align 4
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %282, i64 %284
  %286 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %285, i32 0, i32 0
  store i32 %281, i32* %286, align 8
  %287 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %288 = load i32, i32* %5, align 4
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %287, i64 %289
  %291 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %290, i32 0, i32 5
  store i32 1, i32* %291, align 4
  %292 = load i32, i32* %12, align 4
  %293 = add nsw i32 %292, 1
  store i32 %293, i32* %12, align 4
  %294 = load i32, i32* %5, align 4
  %295 = add nsw i32 %294, 1
  store i32 %295, i32* %5, align 4
  br label %823

296:                                              ; preds = %241, %238
  %297 = load i32, i32* @pict_type, align 4
  %298 = icmp eq i32 %297, 3
  br i1 %298, label %299, label %406

299:                                              ; preds = %296
  %300 = load i32, i32* @pict_struct, align 4
  %301 = icmp eq i32 %300, 3
  br i1 %301, label %302, label %406

302:                                              ; preds = %299
  %303 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %304 = load i32, i32* %5, align 4
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %303, i64 %305
  %307 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %306, i32 0, i32 1
  %308 = load i32, i32* %307, align 4
  %309 = icmp eq i32 %308, 2
  br i1 %309, label %310, label %406

310:                                              ; preds = %302
  %311 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %312 = load i32, i32* %5, align 4
  %313 = sub nsw i32 %312, 1
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %311, i64 %314
  %316 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %315, i32 0, i32 0
  %317 = load i32, i32* %316, align 8
  %318 = load i32, i32* %8, align 4
  %319 = xor i32 %317, %318
  %320 = and i32 %319, 12
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %406

322:                                              ; preds = %310
  %323 = load i32, i32* %8, align 4
  %324 = and i32 %323, 8
  %325 = icmp ne i32 %324, 0
  br i1 %325, label %326, label %356

326:                                              ; preds = %322
  %327 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %328 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %327, i64 0, i64 0
  %329 = getelementptr inbounds [2 x i32], [2 x i32]* %328, i64 0, i64 0
  %330 = load i32, i32* %329, align 16
  %331 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %332 = load i32, i32* %5, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %331, i64 %333
  %335 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %334, i32 0, i32 6
  %336 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %335, i64 0, i64 0
  %337 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %336, i64 0, i64 0
  %338 = getelementptr inbounds [2 x i32], [2 x i32]* %337, i64 0, i64 0
  %339 = load i32, i32* %338, align 8
  %340 = icmp eq i32 %330, %339
  br i1 %340, label %341, label %406

341:                                              ; preds = %326
  %342 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %343 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %342, i64 0, i64 0
  %344 = getelementptr inbounds [2 x i32], [2 x i32]* %343, i64 0, i64 1
  %345 = load i32, i32* %344, align 4
  %346 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %347 = load i32, i32* %5, align 4
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %346, i64 %348
  %350 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %349, i32 0, i32 6
  %351 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %350, i64 0, i64 0
  %352 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %351, i64 0, i64 0
  %353 = getelementptr inbounds [2 x i32], [2 x i32]* %352, i64 0, i64 1
  %354 = load i32, i32* %353, align 4
  %355 = icmp eq i32 %345, %354
  br i1 %355, label %356, label %406

356:                                              ; preds = %341, %322
  %357 = load i32, i32* %8, align 4
  %358 = and i32 %357, 4
  %359 = icmp ne i32 %358, 0
  br i1 %359, label %360, label %390

360:                                              ; preds = %356
  %361 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %362 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %361, i64 0, i64 1
  %363 = getelementptr inbounds [2 x i32], [2 x i32]* %362, i64 0, i64 0
  %364 = load i32, i32* %363, align 8
  %365 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %366 = load i32, i32* %5, align 4
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %365, i64 %367
  %369 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %368, i32 0, i32 6
  %370 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %369, i64 0, i64 0
  %371 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %370, i64 0, i64 1
  %372 = getelementptr inbounds [2 x i32], [2 x i32]* %371, i64 0, i64 0
  %373 = load i32, i32* %372, align 8
  %374 = icmp eq i32 %364, %373
  br i1 %374, label %375, label %406

375:                                              ; preds = %360
  %376 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %377 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %376, i64 0, i64 1
  %378 = getelementptr inbounds [2 x i32], [2 x i32]* %377, i64 0, i64 1
  %379 = load i32, i32* %378, align 4
  %380 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %381 = load i32, i32* %5, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %380, i64 %382
  %384 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %383, i32 0, i32 6
  %385 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %384, i64 0, i64 0
  %386 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %385, i64 0, i64 1
  %387 = getelementptr inbounds [2 x i32], [2 x i32]* %386, i64 0, i64 1
  %388 = load i32, i32* %387, align 4
  %389 = icmp eq i32 %379, %388
  br i1 %389, label %390, label %406

390:                                              ; preds = %375, %356
  %391 = load i32, i32* %8, align 4
  %392 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %393 = load i32, i32* %5, align 4
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %392, i64 %394
  %396 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %395, i32 0, i32 0
  store i32 %391, i32* %396, align 8
  %397 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %398 = load i32, i32* %5, align 4
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %397, i64 %399
  %401 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %400, i32 0, i32 5
  store i32 1, i32* %401, align 4
  %402 = load i32, i32* %12, align 4
  %403 = add nsw i32 %402, 1
  store i32 %403, i32* %12, align 4
  %404 = load i32, i32* %5, align 4
  %405 = add nsw i32 %404, 1
  store i32 %405, i32* %5, align 4
  br label %823

406:                                              ; preds = %375, %360, %341, %326, %310, %302, %299, %296
  %407 = load i32, i32* @pict_type, align 4
  %408 = icmp eq i32 %407, 3
  br i1 %408, label %409, label %542

409:                                              ; preds = %406
  %410 = load i32, i32* @pict_struct, align 4
  %411 = icmp ne i32 %410, 3
  br i1 %411, label %412, label %542

412:                                              ; preds = %409
  %413 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %414 = load i32, i32* %5, align 4
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %413, i64 %415
  %417 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %416, i32 0, i32 1
  %418 = load i32, i32* %417, align 4
  %419 = icmp eq i32 %418, 1
  br i1 %419, label %420, label %542

420:                                              ; preds = %412
  %421 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %422 = load i32, i32* %5, align 4
  %423 = sub nsw i32 %422, 1
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %421, i64 %424
  %426 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %425, i32 0, i32 0
  %427 = load i32, i32* %426, align 8
  %428 = load i32, i32* %8, align 4
  %429 = xor i32 %427, %428
  %430 = and i32 %429, 12
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %542

432:                                              ; preds = %420
  %433 = load i32, i32* %8, align 4
  %434 = and i32 %433, 8
  %435 = icmp ne i32 %434, 0
  br i1 %435, label %436, label %479

436:                                              ; preds = %432
  %437 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %438 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %437, i64 0, i64 0
  %439 = getelementptr inbounds [2 x i32], [2 x i32]* %438, i64 0, i64 0
  %440 = load i32, i32* %439, align 16
  %441 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %442 = load i32, i32* %5, align 4
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %441, i64 %443
  %445 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %444, i32 0, i32 6
  %446 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %445, i64 0, i64 0
  %447 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %446, i64 0, i64 0
  %448 = getelementptr inbounds [2 x i32], [2 x i32]* %447, i64 0, i64 0
  %449 = load i32, i32* %448, align 8
  %450 = icmp eq i32 %440, %449
  br i1 %450, label %451, label %542

451:                                              ; preds = %436
  %452 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %453 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %452, i64 0, i64 0
  %454 = getelementptr inbounds [2 x i32], [2 x i32]* %453, i64 0, i64 1
  %455 = load i32, i32* %454, align 4
  %456 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %457 = load i32, i32* %5, align 4
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %456, i64 %458
  %460 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %459, i32 0, i32 6
  %461 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %460, i64 0, i64 0
  %462 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %461, i64 0, i64 0
  %463 = getelementptr inbounds [2 x i32], [2 x i32]* %462, i64 0, i64 1
  %464 = load i32, i32* %463, align 4
  %465 = icmp eq i32 %455, %464
  br i1 %465, label %466, label %542

466:                                              ; preds = %451
  %467 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %468 = load i32, i32* %5, align 4
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %467, i64 %469
  %471 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %470, i32 0, i32 7
  %472 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %471, i64 0, i64 0
  %473 = getelementptr inbounds [2 x i32], [2 x i32]* %472, i64 0, i64 0
  %474 = load i32, i32* %473, align 8
  %475 = load i32, i32* @pict_struct, align 4
  %476 = icmp eq i32 %475, 2
  %477 = zext i1 %476 to i32
  %478 = icmp eq i32 %474, %477
  br i1 %478, label %479, label %542

479:                                              ; preds = %466, %432
  %480 = load i32, i32* %8, align 4
  %481 = and i32 %480, 4
  %482 = icmp ne i32 %481, 0
  br i1 %482, label %483, label %526

483:                                              ; preds = %479
  %484 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %485 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %484, i64 0, i64 1
  %486 = getelementptr inbounds [2 x i32], [2 x i32]* %485, i64 0, i64 0
  %487 = load i32, i32* %486, align 8
  %488 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %489 = load i32, i32* %5, align 4
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %488, i64 %490
  %492 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %491, i32 0, i32 6
  %493 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %492, i64 0, i64 0
  %494 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %493, i64 0, i64 1
  %495 = getelementptr inbounds [2 x i32], [2 x i32]* %494, i64 0, i64 0
  %496 = load i32, i32* %495, align 8
  %497 = icmp eq i32 %487, %496
  br i1 %497, label %498, label %542

498:                                              ; preds = %483
  %499 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %500 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %499, i64 0, i64 1
  %501 = getelementptr inbounds [2 x i32], [2 x i32]* %500, i64 0, i64 1
  %502 = load i32, i32* %501, align 4
  %503 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %504 = load i32, i32* %5, align 4
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %503, i64 %505
  %507 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %506, i32 0, i32 6
  %508 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %507, i64 0, i64 0
  %509 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %508, i64 0, i64 1
  %510 = getelementptr inbounds [2 x i32], [2 x i32]* %509, i64 0, i64 1
  %511 = load i32, i32* %510, align 4
  %512 = icmp eq i32 %502, %511
  br i1 %512, label %513, label %542

513:                                              ; preds = %498
  %514 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %515 = load i32, i32* %5, align 4
  %516 = sext i32 %515 to i64
  %517 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %514, i64 %516
  %518 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %517, i32 0, i32 7
  %519 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %518, i64 0, i64 0
  %520 = getelementptr inbounds [2 x i32], [2 x i32]* %519, i64 0, i64 1
  %521 = load i32, i32* %520, align 4
  %522 = load i32, i32* @pict_struct, align 4
  %523 = icmp eq i32 %522, 2
  %524 = zext i1 %523 to i32
  %525 = icmp eq i32 %521, %524
  br i1 %525, label %526, label %542

526:                                              ; preds = %513, %479
  %527 = load i32, i32* %8, align 4
  %528 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %529 = load i32, i32* %5, align 4
  %530 = sext i32 %529 to i64
  %531 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %528, i64 %530
  %532 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %531, i32 0, i32 0
  store i32 %527, i32* %532, align 8
  %533 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %534 = load i32, i32* %5, align 4
  %535 = sext i32 %534 to i64
  %536 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %533, i64 %535
  %537 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %536, i32 0, i32 5
  store i32 1, i32* %537, align 4
  %538 = load i32, i32* %12, align 4
  %539 = add nsw i32 %538, 1
  store i32 %539, i32* %12, align 4
  %540 = load i32, i32* %5, align 4
  %541 = add nsw i32 %540, 1
  store i32 %541, i32* %5, align 4
  br label %823

542:                                              ; preds = %513, %498, %483, %466, %451, %436, %420, %412, %409, %406
  br label %543

543:                                              ; preds = %542, %235, %230, %227
  %544 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %545 = load i32, i32* %5, align 4
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %544, i64 %546
  %548 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %547, i32 0, i32 5
  store i32 0, i32* %548, align 4
  %549 = load i32, i32* @pict_type, align 4
  %550 = icmp eq i32 %549, 2
  br i1 %550, label %551, label %561

551:                                              ; preds = %543
  %552 = load i32, i32* %11, align 4
  %553 = icmp ne i32 %552, 0
  br i1 %553, label %561, label %554

554:                                              ; preds = %551
  %555 = load i32, i32* %8, align 4
  %556 = and i32 %555, 8
  %557 = icmp ne i32 %556, 0
  br i1 %557, label %561, label %558

558:                                              ; preds = %554
  %559 = load i32, i32* %8, align 4
  %560 = or i32 %559, 8
  store i32 %560, i32* %8, align 4
  br label %561

561:                                              ; preds = %558, %554, %551, %543
  %562 = load i32, i32* %12, align 4
  call void @putaddrinc(i32 %562)
  store i32 1, i32* %12, align 4
  %563 = load i32, i32* @pict_type, align 4
  %564 = load i32, i32* %8, align 4
  call void @putmbtype(i32 %563, i32 %564)
  %565 = load i32, i32* %8, align 4
  %566 = and i32 %565, 12
  %567 = icmp ne i32 %566, 0
  br i1 %567, label %568, label %578

568:                                              ; preds = %561
  %569 = load i32, i32* @frame_pred_dct, align 4
  %570 = icmp ne i32 %569, 0
  br i1 %570, label %578, label %571

571:                                              ; preds = %568
  %572 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %573 = load i32, i32* %5, align 4
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %572, i64 %574
  %576 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %575, i32 0, i32 1
  %577 = load i32, i32* %576, align 4
  call void @putbits(i32 %577, i32 2)
  br label %578

578:                                              ; preds = %571, %568, %561
  %579 = load i32, i32* @pict_struct, align 4
  %580 = icmp eq i32 %579, 3
  br i1 %580, label %581, label %594

581:                                              ; preds = %578
  %582 = load i32, i32* %11, align 4
  %583 = icmp ne i32 %582, 0
  br i1 %583, label %584, label %594

584:                                              ; preds = %581
  %585 = load i32, i32* @frame_pred_dct, align 4
  %586 = icmp ne i32 %585, 0
  br i1 %586, label %594, label %587

587:                                              ; preds = %584
  %588 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %589 = load i32, i32* %5, align 4
  %590 = sext i32 %589 to i64
  %591 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %588, i64 %590
  %592 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %591, i32 0, i32 2
  %593 = load i32, i32* %592, align 8
  call void @putbits(i32 %593, i32 1)
  br label %594

594:                                              ; preds = %587, %584, %581, %578
  %595 = load i32, i32* %8, align 4
  %596 = and i32 %595, 16
  %597 = icmp ne i32 %596, 0
  br i1 %597, label %598, label %628

598:                                              ; preds = %594
  %599 = load i32, i32* @q_scale_type, align 4
  %600 = icmp ne i32 %599, 0
  br i1 %600, label %601, label %612

601:                                              ; preds = %598
  %602 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %603 = load i32, i32* %5, align 4
  %604 = sext i32 %603 to i64
  %605 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %602, i64 %604
  %606 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %605, i32 0, i32 3
  %607 = load i32, i32* %606, align 4
  %608 = sext i32 %607 to i64
  %609 = getelementptr inbounds [113 x i8], [113 x i8]* @map_non_linear_mquant, i64 0, i64 %608
  %610 = load i8, i8* %609, align 1
  %611 = zext i8 %610 to i32
  br label %620

612:                                              ; preds = %598
  %613 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %614 = load i32, i32* %5, align 4
  %615 = sext i32 %614 to i64
  %616 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %613, i64 %615
  %617 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %616, i32 0, i32 3
  %618 = load i32, i32* %617, align 4
  %619 = ashr i32 %618, 1
  br label %620

620:                                              ; preds = %612, %601
  %621 = phi i32 [ %611, %601 ], [ %619, %612 ]
  call void @putbits(i32 %621, i32 5)
  %622 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %623 = load i32, i32* %5, align 4
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %622, i64 %624
  %626 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %625, i32 0, i32 3
  %627 = load i32, i32* %626, align 4
  store i32 %627, i32* %10, align 4
  br label %628

628:                                              ; preds = %620, %594
  %629 = load i32, i32* %8, align 4
  %630 = and i32 %629, 8
  %631 = icmp ne i32 %630, 0
  br i1 %631, label %632, label %660

632:                                              ; preds = %628
  %633 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %634 = load i32, i32* %5, align 4
  %635 = sext i32 %634 to i64
  %636 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %633, i64 %635
  %637 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %636, i32 0, i32 6
  %638 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %637, i64 0, i64 0
  %639 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %640 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %641 = load i32, i32* %5, align 4
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %640, i64 %642
  %644 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %643, i32 0, i32 7
  %645 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %644, i64 0, i64 0
  %646 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %647 = load i32, i32* %5, align 4
  %648 = sext i32 %647 to i64
  %649 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %646, i64 %648
  %650 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %649, i32 0, i32 8
  %651 = getelementptr inbounds [2 x i32], [2 x i32]* %650, i64 0, i64 0
  %652 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %653 = load i32, i32* %5, align 4
  %654 = sext i32 %653 to i64
  %655 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %652, i64 %654
  %656 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %655, i32 0, i32 1
  %657 = load i32, i32* %656, align 4
  %658 = load i32, i32* @forw_hor_f_code, align 4
  %659 = load i32, i32* @forw_vert_f_code, align 4
  call void @putmvs([2 x [2 x i32]]* %638, [2 x [2 x i32]]* %639, [2 x i32]* %645, i32* %651, i32 0, i32 %657, i32 %658, i32 %659)
  br label %660

660:                                              ; preds = %632, %628
  %661 = load i32, i32* %8, align 4
  %662 = and i32 %661, 4
  %663 = icmp ne i32 %662, 0
  br i1 %663, label %664, label %692

664:                                              ; preds = %660
  %665 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %666 = load i32, i32* %5, align 4
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %665, i64 %667
  %669 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %668, i32 0, i32 6
  %670 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %669, i64 0, i64 0
  %671 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %672 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %673 = load i32, i32* %5, align 4
  %674 = sext i32 %673 to i64
  %675 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %672, i64 %674
  %676 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %675, i32 0, i32 7
  %677 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %676, i64 0, i64 0
  %678 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %679 = load i32, i32* %5, align 4
  %680 = sext i32 %679 to i64
  %681 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %678, i64 %680
  %682 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %681, i32 0, i32 8
  %683 = getelementptr inbounds [2 x i32], [2 x i32]* %682, i64 0, i64 0
  %684 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %685 = load i32, i32* %5, align 4
  %686 = sext i32 %685 to i64
  %687 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %684, i64 %686
  %688 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %687, i32 0, i32 1
  %689 = load i32, i32* %688, align 4
  %690 = load i32, i32* @back_hor_f_code, align 4
  %691 = load i32, i32* @back_vert_f_code, align 4
  call void @putmvs([2 x [2 x i32]]* %670, [2 x [2 x i32]]* %671, [2 x i32]* %677, i32* %683, i32 1, i32 %689, i32 %690, i32 %691)
  br label %692

692:                                              ; preds = %664, %660
  %693 = load i32, i32* %8, align 4
  %694 = and i32 %693, 2
  %695 = icmp ne i32 %694, 0
  br i1 %695, label %696, label %709

696:                                              ; preds = %692
  %697 = load i32, i32* %11, align 4
  %698 = load i32, i32* @block_count, align 4
  %699 = sub nsw i32 %698, 6
  %700 = ashr i32 %697, %699
  %701 = and i32 %700, 63
  call void @putcbp(i32 %701)
  %702 = load i32, i32* @chroma_format, align 4
  %703 = icmp ne i32 %702, 1
  br i1 %703, label %704, label %708

704:                                              ; preds = %696
  %705 = load i32, i32* %11, align 4
  %706 = load i32, i32* @block_count, align 4
  %707 = sub nsw i32 %706, 6
  call void @putbits(i32 %705, i32 %707)
  br label %708

708:                                              ; preds = %704, %696
  br label %709

709:                                              ; preds = %708, %692
  store i32 0, i32* %6, align 4
  br label %710

710:                                              ; preds = %759, %709
  %711 = load i32, i32* %6, align 4
  %712 = load i32, i32* @block_count, align 4
  %713 = icmp slt i32 %711, %712
  br i1 %713, label %714, label %762

714:                                              ; preds = %710
  %715 = load i32, i32* %11, align 4
  %716 = load i32, i32* @block_count, align 4
  %717 = sub nsw i32 %716, 1
  %718 = load i32, i32* %6, align 4
  %719 = sub nsw i32 %717, %718
  %720 = shl i32 1, %719
  %721 = and i32 %715, %720
  %722 = icmp ne i32 %721, 0
  br i1 %722, label %723, label %758

723:                                              ; preds = %714
  %724 = load i32, i32* %8, align 4
  %725 = and i32 %724, 1
  %726 = icmp ne i32 %725, 0
  br i1 %726, label %727, label %747

727:                                              ; preds = %723
  %728 = load i32, i32* %6, align 4
  %729 = icmp slt i32 %728, 4
  br i1 %729, label %730, label %731

730:                                              ; preds = %727
  br label %735

731:                                              ; preds = %727
  %732 = load i32, i32* %6, align 4
  %733 = and i32 %732, 1
  %734 = add nsw i32 %733, 1
  br label %735

735:                                              ; preds = %731, %730
  %736 = phi i32 [ 0, %730 ], [ %734, %731 ]
  store i32 %736, i32* %7, align 4
  %737 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %738 = load i32, i32* %5, align 4
  %739 = load i32, i32* @block_count, align 4
  %740 = mul nsw i32 %738, %739
  %741 = load i32, i32* %6, align 4
  %742 = add nsw i32 %740, %741
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds [64 x i16], [64 x i16]* %737, i64 %743
  %745 = getelementptr inbounds [64 x i16], [64 x i16]* %744, i64 0, i64 0
  %746 = load i32, i32* %7, align 4
  call void @putintrablk(i16* %745, i32 %746)
  br label %757

747:                                              ; preds = %723
  %748 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %749 = load i32, i32* %5, align 4
  %750 = load i32, i32* @block_count, align 4
  %751 = mul nsw i32 %749, %750
  %752 = load i32, i32* %6, align 4
  %753 = add nsw i32 %751, %752
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds [64 x i16], [64 x i16]* %748, i64 %754
  %756 = getelementptr inbounds [64 x i16], [64 x i16]* %755, i64 0, i64 0
  call void @putnonintrablk(i16* %756)
  br label %757

757:                                              ; preds = %747, %735
  br label %758

758:                                              ; preds = %757, %714
  br label %759

759:                                              ; preds = %758
  %760 = load i32, i32* %6, align 4
  %761 = add nsw i32 %760, 1
  store i32 %761, i32* %6, align 4
  br label %710

762:                                              ; preds = %710
  %763 = load i32, i32* %8, align 4
  %764 = and i32 %763, 1
  %765 = icmp ne i32 %764, 0
  br i1 %765, label %778, label %766

766:                                              ; preds = %762
  store i32 0, i32* %7, align 4
  br label %767

767:                                              ; preds = %774, %766
  %768 = load i32, i32* %7, align 4
  %769 = icmp slt i32 %768, 3
  br i1 %769, label %770, label %777

770:                                              ; preds = %767
  %771 = load i32, i32* %7, align 4
  %772 = sext i32 %771 to i64
  %773 = getelementptr inbounds [3 x i32], [3 x i32]* @dc_dct_pred, i64 0, i64 %772
  store i32 0, i32* %773, align 4
  br label %774

774:                                              ; preds = %770
  %775 = load i32, i32* %7, align 4
  %776 = add nsw i32 %775, 1
  store i32 %776, i32* %7, align 4
  br label %767

777:                                              ; preds = %767
  br label %778

778:                                              ; preds = %777, %762
  %779 = load i32, i32* %8, align 4
  %780 = and i32 %779, 1
  %781 = icmp ne i32 %780, 0
  br i1 %781, label %789, label %782

782:                                              ; preds = %778
  %783 = load i32, i32* @pict_type, align 4
  %784 = icmp eq i32 %783, 2
  br i1 %784, label %785, label %814

785:                                              ; preds = %782
  %786 = load i32, i32* %8, align 4
  %787 = and i32 %786, 8
  %788 = icmp ne i32 %787, 0
  br i1 %788, label %814, label %789

789:                                              ; preds = %785, %778
  %790 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 1
  %791 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %790, i64 0, i64 0
  %792 = getelementptr inbounds [2 x i32], [2 x i32]* %791, i64 0, i64 1
  store i32 0, i32* %792, align 4
  %793 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 1
  %794 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %793, i64 0, i64 0
  %795 = getelementptr inbounds [2 x i32], [2 x i32]* %794, i64 0, i64 0
  store i32 0, i32* %795, align 16
  %796 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %797 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %796, i64 0, i64 0
  %798 = getelementptr inbounds [2 x i32], [2 x i32]* %797, i64 0, i64 1
  store i32 0, i32* %798, align 4
  %799 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %800 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %799, i64 0, i64 0
  %801 = getelementptr inbounds [2 x i32], [2 x i32]* %800, i64 0, i64 0
  store i32 0, i32* %801, align 16
  %802 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 1
  %803 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %802, i64 0, i64 1
  %804 = getelementptr inbounds [2 x i32], [2 x i32]* %803, i64 0, i64 1
  store i32 0, i32* %804, align 4
  %805 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 1
  %806 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %805, i64 0, i64 1
  %807 = getelementptr inbounds [2 x i32], [2 x i32]* %806, i64 0, i64 0
  store i32 0, i32* %807, align 8
  %808 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %809 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %808, i64 0, i64 1
  %810 = getelementptr inbounds [2 x i32], [2 x i32]* %809, i64 0, i64 1
  store i32 0, i32* %810, align 4
  %811 = getelementptr inbounds [2 x [2 x [2 x i32]]], [2 x [2 x [2 x i32]]]* %9, i64 0, i64 0
  %812 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %811, i64 0, i64 1
  %813 = getelementptr inbounds [2 x i32], [2 x i32]* %812, i64 0, i64 0
  store i32 0, i32* %813, align 8
  br label %814

814:                                              ; preds = %789, %785, %782
  %815 = load i32, i32* %8, align 4
  %816 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %817 = load i32, i32* %5, align 4
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %816, i64 %818
  %820 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %819, i32 0, i32 0
  store i32 %815, i32* %820, align 8
  %821 = load i32, i32* %5, align 4
  %822 = add nsw i32 %821, 1
  store i32 %822, i32* %5, align 4
  br label %823

823:                                              ; preds = %814, %526, %390, %256
  %824 = load i32, i32* %3, align 4
  %825 = add nsw i32 %824, 1
  store i32 %825, i32* %3, align 4
  br label %24

826:                                              ; preds = %24
  br label %827

827:                                              ; preds = %826
  %828 = load i32, i32* %4, align 4
  %829 = add nsw i32 %828, 1
  store i32 %829, i32* %4, align 4
  br label %19

830:                                              ; preds = %19
  call void @rc_update_pict()
  call void @vbv_end_of_picture()
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @putmvs([2 x [2 x i32]]* %0, [2 x [2 x i32]]* %1, [2 x i32]* %2, i32* %3, i32 %4, i32 %5, i32 %6, i32 %7) #0 {
  %9 = alloca [2 x [2 x i32]]*, align 8
  %10 = alloca [2 x [2 x i32]]*, align 8
  %11 = alloca [2 x i32]*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store [2 x [2 x i32]]* %0, [2 x [2 x i32]]** %9, align 8
  store [2 x [2 x i32]]* %1, [2 x [2 x i32]]** %10, align 8
  store [2 x i32]* %2, [2 x i32]** %11, align 8
  store i32* %3, i32** %12, align 8
  store i32 %4, i32* %13, align 4
  store i32 %5, i32* %14, align 4
  store i32 %6, i32* %15, align 4
  store i32 %7, i32* %16, align 4
  %17 = load i32, i32* @pict_struct, align 4
  %18 = icmp eq i32 %17, 3
  br i1 %18, label %19, label %310

19:                                               ; preds = %8
  %20 = load i32, i32* %14, align 4
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %22, label %93

22:                                               ; preds = %19
  %23 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %24 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %23, i64 0
  %25 = load i32, i32* %13, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %24, i64 0, i64 %26
  %28 = getelementptr inbounds [2 x i32], [2 x i32]* %27, i64 0, i64 0
  %29 = load i32, i32* %28, align 4
  %30 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %31 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %30, i64 0
  %32 = load i32, i32* %13, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %31, i64 0, i64 %33
  %35 = getelementptr inbounds [2 x i32], [2 x i32]* %34, i64 0, i64 0
  %36 = load i32, i32* %35, align 4
  %37 = sub nsw i32 %29, %36
  %38 = load i32, i32* %15, align 4
  call void @putmv(i32 %37, i32 %38)
  %39 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %40 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %39, i64 0
  %41 = load i32, i32* %13, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %40, i64 0, i64 %42
  %44 = getelementptr inbounds [2 x i32], [2 x i32]* %43, i64 0, i64 1
  %45 = load i32, i32* %44, align 4
  %46 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %47 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %46, i64 0
  %48 = load i32, i32* %13, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %47, i64 0, i64 %49
  %51 = getelementptr inbounds [2 x i32], [2 x i32]* %50, i64 0, i64 1
  %52 = load i32, i32* %51, align 4
  %53 = sub nsw i32 %45, %52
  %54 = load i32, i32* %16, align 4
  call void @putmv(i32 %53, i32 %54)
  %55 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %56 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %55, i64 0
  %57 = load i32, i32* %13, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %56, i64 0, i64 %58
  %60 = getelementptr inbounds [2 x i32], [2 x i32]* %59, i64 0, i64 0
  %61 = load i32, i32* %60, align 4
  %62 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %63 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %62, i64 1
  %64 = load i32, i32* %13, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %63, i64 0, i64 %65
  %67 = getelementptr inbounds [2 x i32], [2 x i32]* %66, i64 0, i64 0
  store i32 %61, i32* %67, align 4
  %68 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %69 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %68, i64 0
  %70 = load i32, i32* %13, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %69, i64 0, i64 %71
  %73 = getelementptr inbounds [2 x i32], [2 x i32]* %72, i64 0, i64 0
  store i32 %61, i32* %73, align 4
  %74 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %75 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %74, i64 0
  %76 = load i32, i32* %13, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %75, i64 0, i64 %77
  %79 = getelementptr inbounds [2 x i32], [2 x i32]* %78, i64 0, i64 1
  %80 = load i32, i32* %79, align 4
  %81 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %82 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %81, i64 1
  %83 = load i32, i32* %13, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %82, i64 0, i64 %84
  %86 = getelementptr inbounds [2 x i32], [2 x i32]* %85, i64 0, i64 1
  store i32 %80, i32* %86, align 4
  %87 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %88 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %87, i64 0
  %89 = load i32, i32* %13, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %88, i64 0, i64 %90
  %92 = getelementptr inbounds [2 x i32], [2 x i32]* %91, i64 0, i64 1
  store i32 %80, i32* %92, align 4
  br label %309

93:                                               ; preds = %19
  %94 = load i32, i32* %14, align 4
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %229

96:                                               ; preds = %93
  %97 = load [2 x i32]*, [2 x i32]** %11, align 8
  %98 = getelementptr inbounds [2 x i32], [2 x i32]* %97, i64 0
  %99 = load i32, i32* %13, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [2 x i32], [2 x i32]* %98, i64 0, i64 %100
  %102 = load i32, i32* %101, align 4
  call void @putbits(i32 %102, i32 1)
  %103 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %104 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %103, i64 0
  %105 = load i32, i32* %13, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %104, i64 0, i64 %106
  %108 = getelementptr inbounds [2 x i32], [2 x i32]* %107, i64 0, i64 0
  %109 = load i32, i32* %108, align 4
  %110 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %111 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %110, i64 0
  %112 = load i32, i32* %13, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %111, i64 0, i64 %113
  %115 = getelementptr inbounds [2 x i32], [2 x i32]* %114, i64 0, i64 0
  %116 = load i32, i32* %115, align 4
  %117 = sub nsw i32 %109, %116
  %118 = load i32, i32* %15, align 4
  call void @putmv(i32 %117, i32 %118)
  %119 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %120 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %119, i64 0
  %121 = load i32, i32* %13, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %120, i64 0, i64 %122
  %124 = getelementptr inbounds [2 x i32], [2 x i32]* %123, i64 0, i64 1
  %125 = load i32, i32* %124, align 4
  %126 = ashr i32 %125, 1
  %127 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %128 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %127, i64 0
  %129 = load i32, i32* %13, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %128, i64 0, i64 %130
  %132 = getelementptr inbounds [2 x i32], [2 x i32]* %131, i64 0, i64 1
  %133 = load i32, i32* %132, align 4
  %134 = ashr i32 %133, 1
  %135 = sub nsw i32 %126, %134
  %136 = load i32, i32* %16, align 4
  call void @putmv(i32 %135, i32 %136)
  %137 = load [2 x i32]*, [2 x i32]** %11, align 8
  %138 = getelementptr inbounds [2 x i32], [2 x i32]* %137, i64 1
  %139 = load i32, i32* %13, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds [2 x i32], [2 x i32]* %138, i64 0, i64 %140
  %142 = load i32, i32* %141, align 4
  call void @putbits(i32 %142, i32 1)
  %143 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %144 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %143, i64 1
  %145 = load i32, i32* %13, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %144, i64 0, i64 %146
  %148 = getelementptr inbounds [2 x i32], [2 x i32]* %147, i64 0, i64 0
  %149 = load i32, i32* %148, align 4
  %150 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %151 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %150, i64 1
  %152 = load i32, i32* %13, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %151, i64 0, i64 %153
  %155 = getelementptr inbounds [2 x i32], [2 x i32]* %154, i64 0, i64 0
  %156 = load i32, i32* %155, align 4
  %157 = sub nsw i32 %149, %156
  %158 = load i32, i32* %15, align 4
  call void @putmv(i32 %157, i32 %158)
  %159 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %160 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %159, i64 1
  %161 = load i32, i32* %13, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %160, i64 0, i64 %162
  %164 = getelementptr inbounds [2 x i32], [2 x i32]* %163, i64 0, i64 1
  %165 = load i32, i32* %164, align 4
  %166 = ashr i32 %165, 1
  %167 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %168 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %167, i64 1
  %169 = load i32, i32* %13, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %168, i64 0, i64 %170
  %172 = getelementptr inbounds [2 x i32], [2 x i32]* %171, i64 0, i64 1
  %173 = load i32, i32* %172, align 4
  %174 = ashr i32 %173, 1
  %175 = sub nsw i32 %166, %174
  %176 = load i32, i32* %16, align 4
  call void @putmv(i32 %175, i32 %176)
  %177 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %178 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %177, i64 0
  %179 = load i32, i32* %13, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %178, i64 0, i64 %180
  %182 = getelementptr inbounds [2 x i32], [2 x i32]* %181, i64 0, i64 0
  %183 = load i32, i32* %182, align 4
  %184 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %185 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %184, i64 0
  %186 = load i32, i32* %13, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %185, i64 0, i64 %187
  %189 = getelementptr inbounds [2 x i32], [2 x i32]* %188, i64 0, i64 0
  store i32 %183, i32* %189, align 4
  %190 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %191 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %190, i64 0
  %192 = load i32, i32* %13, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %191, i64 0, i64 %193
  %195 = getelementptr inbounds [2 x i32], [2 x i32]* %194, i64 0, i64 1
  %196 = load i32, i32* %195, align 4
  %197 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %198 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %197, i64 0
  %199 = load i32, i32* %13, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %198, i64 0, i64 %200
  %202 = getelementptr inbounds [2 x i32], [2 x i32]* %201, i64 0, i64 1
  store i32 %196, i32* %202, align 4
  %203 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %204 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %203, i64 1
  %205 = load i32, i32* %13, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %204, i64 0, i64 %206
  %208 = getelementptr inbounds [2 x i32], [2 x i32]* %207, i64 0, i64 0
  %209 = load i32, i32* %208, align 4
  %210 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %211 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %210, i64 1
  %212 = load i32, i32* %13, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %211, i64 0, i64 %213
  %215 = getelementptr inbounds [2 x i32], [2 x i32]* %214, i64 0, i64 0
  store i32 %209, i32* %215, align 4
  %216 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %217 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %216, i64 1
  %218 = load i32, i32* %13, align 4
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %217, i64 0, i64 %219
  %221 = getelementptr inbounds [2 x i32], [2 x i32]* %220, i64 0, i64 1
  %222 = load i32, i32* %221, align 4
  %223 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %224 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %223, i64 1
  %225 = load i32, i32* %13, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %224, i64 0, i64 %226
  %228 = getelementptr inbounds [2 x i32], [2 x i32]* %227, i64 0, i64 1
  store i32 %222, i32* %228, align 4
  br label %308

229:                                              ; preds = %93
  %230 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %231 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %230, i64 0
  %232 = load i32, i32* %13, align 4
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %231, i64 0, i64 %233
  %235 = getelementptr inbounds [2 x i32], [2 x i32]* %234, i64 0, i64 0
  %236 = load i32, i32* %235, align 4
  %237 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %238 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %237, i64 0
  %239 = load i32, i32* %13, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %238, i64 0, i64 %240
  %242 = getelementptr inbounds [2 x i32], [2 x i32]* %241, i64 0, i64 0
  %243 = load i32, i32* %242, align 4
  %244 = sub nsw i32 %236, %243
  %245 = load i32, i32* %15, align 4
  call void @putmv(i32 %244, i32 %245)
  %246 = load i32*, i32** %12, align 8
  %247 = getelementptr inbounds i32, i32* %246, i64 0
  %248 = load i32, i32* %247, align 4
  call void @putdmv(i32 %248)
  %249 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %250 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %249, i64 0
  %251 = load i32, i32* %13, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %250, i64 0, i64 %252
  %254 = getelementptr inbounds [2 x i32], [2 x i32]* %253, i64 0, i64 1
  %255 = load i32, i32* %254, align 4
  %256 = ashr i32 %255, 1
  %257 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %258 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %257, i64 0
  %259 = load i32, i32* %13, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %258, i64 0, i64 %260
  %262 = getelementptr inbounds [2 x i32], [2 x i32]* %261, i64 0, i64 1
  %263 = load i32, i32* %262, align 4
  %264 = ashr i32 %263, 1
  %265 = sub nsw i32 %256, %264
  %266 = load i32, i32* %16, align 4
  call void @putmv(i32 %265, i32 %266)
  %267 = load i32*, i32** %12, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 1
  %269 = load i32, i32* %268, align 4
  call void @putdmv(i32 %269)
  %270 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %271 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %270, i64 0
  %272 = load i32, i32* %13, align 4
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %271, i64 0, i64 %273
  %275 = getelementptr inbounds [2 x i32], [2 x i32]* %274, i64 0, i64 0
  %276 = load i32, i32* %275, align 4
  %277 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %278 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %277, i64 1
  %279 = load i32, i32* %13, align 4
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %278, i64 0, i64 %280
  %282 = getelementptr inbounds [2 x i32], [2 x i32]* %281, i64 0, i64 0
  store i32 %276, i32* %282, align 4
  %283 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %284 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %283, i64 0
  %285 = load i32, i32* %13, align 4
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %284, i64 0, i64 %286
  %288 = getelementptr inbounds [2 x i32], [2 x i32]* %287, i64 0, i64 0
  store i32 %276, i32* %288, align 4
  %289 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %290 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %289, i64 0
  %291 = load i32, i32* %13, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %290, i64 0, i64 %292
  %294 = getelementptr inbounds [2 x i32], [2 x i32]* %293, i64 0, i64 1
  %295 = load i32, i32* %294, align 4
  %296 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %297 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %296, i64 1
  %298 = load i32, i32* %13, align 4
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %297, i64 0, i64 %299
  %301 = getelementptr inbounds [2 x i32], [2 x i32]* %300, i64 0, i64 1
  store i32 %295, i32* %301, align 4
  %302 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %303 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %302, i64 0
  %304 = load i32, i32* %13, align 4
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %303, i64 0, i64 %305
  %307 = getelementptr inbounds [2 x i32], [2 x i32]* %306, i64 0, i64 1
  store i32 %295, i32* %307, align 4
  br label %308

308:                                              ; preds = %229, %96
  br label %309

309:                                              ; preds = %308, %22
  br label %601

310:                                              ; preds = %8
  %311 = load i32, i32* %14, align 4
  %312 = icmp eq i32 %311, 1
  br i1 %312, label %313, label %390

313:                                              ; preds = %310
  %314 = load [2 x i32]*, [2 x i32]** %11, align 8
  %315 = getelementptr inbounds [2 x i32], [2 x i32]* %314, i64 0
  %316 = load i32, i32* %13, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds [2 x i32], [2 x i32]* %315, i64 0, i64 %317
  %319 = load i32, i32* %318, align 4
  call void @putbits(i32 %319, i32 1)
  %320 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %321 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %320, i64 0
  %322 = load i32, i32* %13, align 4
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %321, i64 0, i64 %323
  %325 = getelementptr inbounds [2 x i32], [2 x i32]* %324, i64 0, i64 0
  %326 = load i32, i32* %325, align 4
  %327 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %328 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %327, i64 0
  %329 = load i32, i32* %13, align 4
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %328, i64 0, i64 %330
  %332 = getelementptr inbounds [2 x i32], [2 x i32]* %331, i64 0, i64 0
  %333 = load i32, i32* %332, align 4
  %334 = sub nsw i32 %326, %333
  %335 = load i32, i32* %15, align 4
  call void @putmv(i32 %334, i32 %335)
  %336 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %337 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %336, i64 0
  %338 = load i32, i32* %13, align 4
  %339 = sext i32 %338 to i64
  %340 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %337, i64 0, i64 %339
  %341 = getelementptr inbounds [2 x i32], [2 x i32]* %340, i64 0, i64 1
  %342 = load i32, i32* %341, align 4
  %343 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %344 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %343, i64 0
  %345 = load i32, i32* %13, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %344, i64 0, i64 %346
  %348 = getelementptr inbounds [2 x i32], [2 x i32]* %347, i64 0, i64 1
  %349 = load i32, i32* %348, align 4
  %350 = sub nsw i32 %342, %349
  %351 = load i32, i32* %16, align 4
  call void @putmv(i32 %350, i32 %351)
  %352 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %353 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %352, i64 0
  %354 = load i32, i32* %13, align 4
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %353, i64 0, i64 %355
  %357 = getelementptr inbounds [2 x i32], [2 x i32]* %356, i64 0, i64 0
  %358 = load i32, i32* %357, align 4
  %359 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %360 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %359, i64 1
  %361 = load i32, i32* %13, align 4
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %360, i64 0, i64 %362
  %364 = getelementptr inbounds [2 x i32], [2 x i32]* %363, i64 0, i64 0
  store i32 %358, i32* %364, align 4
  %365 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %366 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %365, i64 0
  %367 = load i32, i32* %13, align 4
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %366, i64 0, i64 %368
  %370 = getelementptr inbounds [2 x i32], [2 x i32]* %369, i64 0, i64 0
  store i32 %358, i32* %370, align 4
  %371 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %372 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %371, i64 0
  %373 = load i32, i32* %13, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %372, i64 0, i64 %374
  %376 = getelementptr inbounds [2 x i32], [2 x i32]* %375, i64 0, i64 1
  %377 = load i32, i32* %376, align 4
  %378 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %379 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %378, i64 1
  %380 = load i32, i32* %13, align 4
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %379, i64 0, i64 %381
  %383 = getelementptr inbounds [2 x i32], [2 x i32]* %382, i64 0, i64 1
  store i32 %377, i32* %383, align 4
  %384 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %385 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %384, i64 0
  %386 = load i32, i32* %13, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %385, i64 0, i64 %387
  %389 = getelementptr inbounds [2 x i32], [2 x i32]* %388, i64 0, i64 1
  store i32 %377, i32* %389, align 4
  br label %600

390:                                              ; preds = %310
  %391 = load i32, i32* %14, align 4
  %392 = icmp eq i32 %391, 2
  br i1 %392, label %393, label %522

393:                                              ; preds = %390
  %394 = load [2 x i32]*, [2 x i32]** %11, align 8
  %395 = getelementptr inbounds [2 x i32], [2 x i32]* %394, i64 0
  %396 = load i32, i32* %13, align 4
  %397 = sext i32 %396 to i64
  %398 = getelementptr inbounds [2 x i32], [2 x i32]* %395, i64 0, i64 %397
  %399 = load i32, i32* %398, align 4
  call void @putbits(i32 %399, i32 1)
  %400 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %401 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %400, i64 0
  %402 = load i32, i32* %13, align 4
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %401, i64 0, i64 %403
  %405 = getelementptr inbounds [2 x i32], [2 x i32]* %404, i64 0, i64 0
  %406 = load i32, i32* %405, align 4
  %407 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %408 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %407, i64 0
  %409 = load i32, i32* %13, align 4
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %408, i64 0, i64 %410
  %412 = getelementptr inbounds [2 x i32], [2 x i32]* %411, i64 0, i64 0
  %413 = load i32, i32* %412, align 4
  %414 = sub nsw i32 %406, %413
  %415 = load i32, i32* %15, align 4
  call void @putmv(i32 %414, i32 %415)
  %416 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %417 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %416, i64 0
  %418 = load i32, i32* %13, align 4
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %417, i64 0, i64 %419
  %421 = getelementptr inbounds [2 x i32], [2 x i32]* %420, i64 0, i64 1
  %422 = load i32, i32* %421, align 4
  %423 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %424 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %423, i64 0
  %425 = load i32, i32* %13, align 4
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %424, i64 0, i64 %426
  %428 = getelementptr inbounds [2 x i32], [2 x i32]* %427, i64 0, i64 1
  %429 = load i32, i32* %428, align 4
  %430 = sub nsw i32 %422, %429
  %431 = load i32, i32* %16, align 4
  call void @putmv(i32 %430, i32 %431)
  %432 = load [2 x i32]*, [2 x i32]** %11, align 8
  %433 = getelementptr inbounds [2 x i32], [2 x i32]* %432, i64 1
  %434 = load i32, i32* %13, align 4
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds [2 x i32], [2 x i32]* %433, i64 0, i64 %435
  %437 = load i32, i32* %436, align 4
  call void @putbits(i32 %437, i32 1)
  %438 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %439 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %438, i64 1
  %440 = load i32, i32* %13, align 4
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %439, i64 0, i64 %441
  %443 = getelementptr inbounds [2 x i32], [2 x i32]* %442, i64 0, i64 0
  %444 = load i32, i32* %443, align 4
  %445 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %446 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %445, i64 1
  %447 = load i32, i32* %13, align 4
  %448 = sext i32 %447 to i64
  %449 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %446, i64 0, i64 %448
  %450 = getelementptr inbounds [2 x i32], [2 x i32]* %449, i64 0, i64 0
  %451 = load i32, i32* %450, align 4
  %452 = sub nsw i32 %444, %451
  %453 = load i32, i32* %15, align 4
  call void @putmv(i32 %452, i32 %453)
  %454 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %455 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %454, i64 1
  %456 = load i32, i32* %13, align 4
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %455, i64 0, i64 %457
  %459 = getelementptr inbounds [2 x i32], [2 x i32]* %458, i64 0, i64 1
  %460 = load i32, i32* %459, align 4
  %461 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %462 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %461, i64 1
  %463 = load i32, i32* %13, align 4
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %462, i64 0, i64 %464
  %466 = getelementptr inbounds [2 x i32], [2 x i32]* %465, i64 0, i64 1
  %467 = load i32, i32* %466, align 4
  %468 = sub nsw i32 %460, %467
  %469 = load i32, i32* %16, align 4
  call void @putmv(i32 %468, i32 %469)
  %470 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %471 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %470, i64 0
  %472 = load i32, i32* %13, align 4
  %473 = sext i32 %472 to i64
  %474 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %471, i64 0, i64 %473
  %475 = getelementptr inbounds [2 x i32], [2 x i32]* %474, i64 0, i64 0
  %476 = load i32, i32* %475, align 4
  %477 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %478 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %477, i64 0
  %479 = load i32, i32* %13, align 4
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %478, i64 0, i64 %480
  %482 = getelementptr inbounds [2 x i32], [2 x i32]* %481, i64 0, i64 0
  store i32 %476, i32* %482, align 4
  %483 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %484 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %483, i64 0
  %485 = load i32, i32* %13, align 4
  %486 = sext i32 %485 to i64
  %487 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %484, i64 0, i64 %486
  %488 = getelementptr inbounds [2 x i32], [2 x i32]* %487, i64 0, i64 1
  %489 = load i32, i32* %488, align 4
  %490 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %491 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %490, i64 0
  %492 = load i32, i32* %13, align 4
  %493 = sext i32 %492 to i64
  %494 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %491, i64 0, i64 %493
  %495 = getelementptr inbounds [2 x i32], [2 x i32]* %494, i64 0, i64 1
  store i32 %489, i32* %495, align 4
  %496 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %497 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %496, i64 1
  %498 = load i32, i32* %13, align 4
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %497, i64 0, i64 %499
  %501 = getelementptr inbounds [2 x i32], [2 x i32]* %500, i64 0, i64 0
  %502 = load i32, i32* %501, align 4
  %503 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %504 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %503, i64 1
  %505 = load i32, i32* %13, align 4
  %506 = sext i32 %505 to i64
  %507 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %504, i64 0, i64 %506
  %508 = getelementptr inbounds [2 x i32], [2 x i32]* %507, i64 0, i64 0
  store i32 %502, i32* %508, align 4
  %509 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %510 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %509, i64 1
  %511 = load i32, i32* %13, align 4
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %510, i64 0, i64 %512
  %514 = getelementptr inbounds [2 x i32], [2 x i32]* %513, i64 0, i64 1
  %515 = load i32, i32* %514, align 4
  %516 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %517 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %516, i64 1
  %518 = load i32, i32* %13, align 4
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %517, i64 0, i64 %519
  %521 = getelementptr inbounds [2 x i32], [2 x i32]* %520, i64 0, i64 1
  store i32 %515, i32* %521, align 4
  br label %599

522:                                              ; preds = %390
  %523 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %524 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %523, i64 0
  %525 = load i32, i32* %13, align 4
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %524, i64 0, i64 %526
  %528 = getelementptr inbounds [2 x i32], [2 x i32]* %527, i64 0, i64 0
  %529 = load i32, i32* %528, align 4
  %530 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %531 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %530, i64 0
  %532 = load i32, i32* %13, align 4
  %533 = sext i32 %532 to i64
  %534 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %531, i64 0, i64 %533
  %535 = getelementptr inbounds [2 x i32], [2 x i32]* %534, i64 0, i64 0
  %536 = load i32, i32* %535, align 4
  %537 = sub nsw i32 %529, %536
  %538 = load i32, i32* %15, align 4
  call void @putmv(i32 %537, i32 %538)
  %539 = load i32*, i32** %12, align 8
  %540 = getelementptr inbounds i32, i32* %539, i64 0
  %541 = load i32, i32* %540, align 4
  call void @putdmv(i32 %541)
  %542 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %543 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %542, i64 0
  %544 = load i32, i32* %13, align 4
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %543, i64 0, i64 %545
  %547 = getelementptr inbounds [2 x i32], [2 x i32]* %546, i64 0, i64 1
  %548 = load i32, i32* %547, align 4
  %549 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %550 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %549, i64 0
  %551 = load i32, i32* %13, align 4
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %550, i64 0, i64 %552
  %554 = getelementptr inbounds [2 x i32], [2 x i32]* %553, i64 0, i64 1
  %555 = load i32, i32* %554, align 4
  %556 = sub nsw i32 %548, %555
  %557 = load i32, i32* %16, align 4
  call void @putmv(i32 %556, i32 %557)
  %558 = load i32*, i32** %12, align 8
  %559 = getelementptr inbounds i32, i32* %558, i64 1
  %560 = load i32, i32* %559, align 4
  call void @putdmv(i32 %560)
  %561 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %562 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %561, i64 0
  %563 = load i32, i32* %13, align 4
  %564 = sext i32 %563 to i64
  %565 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %562, i64 0, i64 %564
  %566 = getelementptr inbounds [2 x i32], [2 x i32]* %565, i64 0, i64 0
  %567 = load i32, i32* %566, align 4
  %568 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %569 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %568, i64 1
  %570 = load i32, i32* %13, align 4
  %571 = sext i32 %570 to i64
  %572 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %569, i64 0, i64 %571
  %573 = getelementptr inbounds [2 x i32], [2 x i32]* %572, i64 0, i64 0
  store i32 %567, i32* %573, align 4
  %574 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %575 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %574, i64 0
  %576 = load i32, i32* %13, align 4
  %577 = sext i32 %576 to i64
  %578 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %575, i64 0, i64 %577
  %579 = getelementptr inbounds [2 x i32], [2 x i32]* %578, i64 0, i64 0
  store i32 %567, i32* %579, align 4
  %580 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %9, align 8
  %581 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %580, i64 0
  %582 = load i32, i32* %13, align 4
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %581, i64 0, i64 %583
  %585 = getelementptr inbounds [2 x i32], [2 x i32]* %584, i64 0, i64 1
  %586 = load i32, i32* %585, align 4
  %587 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %588 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %587, i64 1
  %589 = load i32, i32* %13, align 4
  %590 = sext i32 %589 to i64
  %591 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %588, i64 0, i64 %590
  %592 = getelementptr inbounds [2 x i32], [2 x i32]* %591, i64 0, i64 1
  store i32 %586, i32* %592, align 4
  %593 = load [2 x [2 x i32]]*, [2 x [2 x i32]]** %10, align 8
  %594 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %593, i64 0
  %595 = load i32, i32* %13, align 4
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %594, i64 0, i64 %596
  %598 = getelementptr inbounds [2 x i32], [2 x i32]* %597, i64 0, i64 1
  store i32 %586, i32* %598, align 4
  br label %599

599:                                              ; preds = %522, %393
  br label %600

600:                                              ; preds = %599, %313
  br label %601

601:                                              ; preds = %600, %309
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putseq() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct._IO_FILE*, align 8
  %15 = alloca [256 x i8], align 16
  %16 = alloca [3 x i8*], align 16
  %17 = alloca [3 x i8*], align 16
  call void @rc_init_seq()
  call void @putseqhdr()
  %18 = load i32, i32* @mpeg1, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %0
  call void @putseqext()
  call void @putseqdispext()
  br label %21

21:                                               ; preds = %20, %0
  %22 = call i64 @strlen(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @id_string, i64 0, i64 0)) #8
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @putuserdata(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @id_string, i64 0, i64 0))
  br label %25

25:                                               ; preds = %24, %21
  store i32 0, i32* %1, align 4
  br label %26

26:                                               ; preds = %810, %25
  %27 = load i32, i32* %1, align 4
  %28 = load i32, i32* @nframes, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %813

30:                                               ; preds = %26
  %31 = load i32, i32* @quiet, align 4
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %30
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %35 = load i32, i32* %1, align 4
  %36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.109, i64 0, i64 0), i32 %35)
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %38 = call i32 @fflush(%struct._IO_FILE* %37)
  br label %39

39:                                               ; preds = %33, %30
  %40 = load i32, i32* @N, align 4
  %41 = load i32, i32* %1, align 4
  %42 = load i32, i32* @M, align 4
  %43 = sub nsw i32 %42, 1
  %44 = add nsw i32 %41, %43
  %45 = load i32, i32* @N, align 4
  %46 = sdiv i32 %44, %45
  %47 = mul nsw i32 %40, %46
  %48 = load i32, i32* @M, align 4
  %49 = sub nsw i32 %48, 1
  %50 = sub nsw i32 %47, %49
  store i32 %50, i32* %5, align 4
  %51 = load i32, i32* %5, align 4
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %39
  store i32 0, i32* %5, align 4
  br label %54

54:                                               ; preds = %53, %39
  %55 = load i32, i32* %1, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %54
  %58 = load i32, i32* %1, align 4
  %59 = sub nsw i32 %58, 1
  %60 = load i32, i32* @M, align 4
  %61 = srem i32 %59, %60
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %204

63:                                               ; preds = %57, %54
  store i32 0, i32* %2, align 4
  br label %64

64:                                               ; preds = %110, %63
  %65 = load i32, i32* %2, align 4
  %66 = icmp slt i32 %65, 3
  br i1 %66, label %67, label %113

67:                                               ; preds = %64
  %68 = load i32, i32* %2, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [3 x i8*], [3 x i8*]* @oldorgframe, i64 0, i64 %69
  %71 = load i8*, i8** %70, align 8
  %72 = load i32, i32* %2, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 %73
  store i8* %71, i8** %74, align 8
  %75 = load i32, i32* %2, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [3 x i8*], [3 x i8*]* @oldrefframe, i64 0, i64 %76
  %78 = load i8*, i8** %77, align 8
  %79 = load i32, i32* %2, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 %80
  store i8* %78, i8** %81, align 8
  %82 = load i32, i32* %2, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [3 x i8*], [3 x i8*]* @neworgframe, i64 0, i64 %83
  %85 = load i8*, i8** %84, align 8
  %86 = load i32, i32* %2, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [3 x i8*], [3 x i8*]* @oldorgframe, i64 0, i64 %87
  store i8* %85, i8** %88, align 8
  %89 = load i32, i32* %2, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [3 x i8*], [3 x i8*]* @newrefframe, i64 0, i64 %90
  %92 = load i8*, i8** %91, align 8
  %93 = load i32, i32* %2, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds [3 x i8*], [3 x i8*]* @oldrefframe, i64 0, i64 %94
  store i8* %92, i8** %95, align 8
  %96 = load i32, i32* %2, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 %97
  %99 = load i8*, i8** %98, align 8
  %100 = load i32, i32* %2, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [3 x i8*], [3 x i8*]* @neworgframe, i64 0, i64 %101
  store i8* %99, i8** %102, align 8
  %103 = load i32, i32* %2, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 %104
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %2, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [3 x i8*], [3 x i8*]* @newrefframe, i64 0, i64 %108
  store i8* %106, i8** %109, align 8
  br label %110

110:                                              ; preds = %67
  %111 = load i32, i32* %2, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %2, align 4
  br label %64

113:                                              ; preds = %64
  %114 = load i32, i32* %1, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  br label %122

117:                                              ; preds = %113
  %118 = load i32, i32* %1, align 4
  %119 = load i32, i32* @M, align 4
  %120 = add nsw i32 %118, %119
  %121 = sub nsw i32 %120, 1
  br label %122

122:                                              ; preds = %117, %116
  %123 = phi i32 [ 0, %116 ], [ %121, %117 ]
  store i32 %123, i32* %4, align 4
  %124 = load i32, i32* %4, align 4
  %125 = load i32, i32* @nframes, align 4
  %126 = icmp sge i32 %124, %125
  br i1 %126, label %127, label %130

127:                                              ; preds = %122
  %128 = load i32, i32* @nframes, align 4
  %129 = sub nsw i32 %128, 1
  store i32 %129, i32* %4, align 4
  br label %130

130:                                              ; preds = %127, %122
  %131 = load i32, i32* %1, align 4
  %132 = load i32, i32* %5, align 4
  %133 = icmp eq i32 %131, %132
  br i1 %133, label %134, label %186

134:                                              ; preds = %130
  store i32 1, i32* @pict_type, align 4
  store i32 15, i32* @forw_vert_f_code, align 4
  store i32 15, i32* @forw_hor_f_code, align 4
  store i32 15, i32* @back_vert_f_code, align 4
  store i32 15, i32* @back_hor_f_code, align 4
  %135 = load i32, i32* %1, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %142

137:                                              ; preds = %134
  %138 = load i32, i32* @N, align 4
  %139 = load i32, i32* @M, align 4
  %140 = sub nsw i32 %139, 1
  %141 = sub nsw i32 %138, %140
  br label %144

142:                                              ; preds = %134
  %143 = load i32, i32* @N, align 4
  br label %144

144:                                              ; preds = %142, %137
  %145 = phi i32 [ %141, %137 ], [ %143, %142 ]
  store i32 %145, i32* %6, align 4
  %146 = load i32, i32* %6, align 4
  %147 = load i32, i32* @nframes, align 4
  %148 = load i32, i32* %5, align 4
  %149 = sub nsw i32 %147, %148
  %150 = icmp sgt i32 %146, %149
  br i1 %150, label %151, label %155

151:                                              ; preds = %144
  %152 = load i32, i32* @nframes, align 4
  %153 = load i32, i32* %5, align 4
  %154 = sub nsw i32 %152, %153
  store i32 %154, i32* %6, align 4
  br label %155

155:                                              ; preds = %151, %144
  %156 = load i32, i32* %1, align 4
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %167

158:                                              ; preds = %155
  %159 = load i32, i32* %6, align 4
  %160 = load i32, i32* @M, align 4
  %161 = sub nsw i32 %160, 1
  %162 = mul nsw i32 2, %161
  %163 = add nsw i32 %159, %162
  %164 = load i32, i32* @M, align 4
  %165 = sdiv i32 %163, %164
  %166 = sub nsw i32 %165, 1
  store i32 %166, i32* %7, align 4
  br label %175

167:                                              ; preds = %155
  %168 = load i32, i32* %6, align 4
  %169 = load i32, i32* @M, align 4
  %170 = sub nsw i32 %169, 1
  %171 = add nsw i32 %168, %170
  %172 = load i32, i32* @M, align 4
  %173 = sdiv i32 %171, %172
  %174 = sub nsw i32 %173, 1
  store i32 %174, i32* %7, align 4
  br label %175

175:                                              ; preds = %167, %158
  %176 = load i32, i32* %6, align 4
  %177 = load i32, i32* %7, align 4
  %178 = sub nsw i32 %176, %177
  %179 = sub nsw i32 %178, 1
  store i32 %179, i32* %8, align 4
  %180 = load i32, i32* %7, align 4
  %181 = load i32, i32* %8, align 4
  call void @rc_init_GOP(i32 %180, i32 %181)
  %182 = load i32, i32* %5, align 4
  %183 = load i32, i32* %1, align 4
  %184 = icmp eq i32 %183, 0
  %185 = zext i1 %184 to i32
  call void @putgophdr(i32 %182, i32 %185)
  br label %203

186:                                              ; preds = %130
  store i32 2, i32* @pict_type, align 4
  %187 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %188 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %187, i64 0
  %189 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %188, i32 0, i32 0
  %190 = load i32, i32* %189, align 4
  store i32 %190, i32* @forw_hor_f_code, align 4
  %191 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %192 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %191, i64 0
  %193 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %192, i32 0, i32 1
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* @forw_vert_f_code, align 4
  store i32 15, i32* @back_vert_f_code, align 4
  store i32 15, i32* @back_hor_f_code, align 4
  %195 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %196 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %195, i64 0
  %197 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %196, i32 0, i32 2
  %198 = load i32, i32* %197, align 4
  store i32 %198, i32* %9, align 4
  %199 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %200 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %199, i64 0
  %201 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %200, i32 0, i32 3
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %10, align 4
  br label %203

203:                                              ; preds = %186, %175
  br label %282

204:                                              ; preds = %57
  store i32 0, i32* %2, align 4
  br label %205

205:                                              ; preds = %223, %204
  %206 = load i32, i32* %2, align 4
  %207 = icmp slt i32 %206, 3
  br i1 %207, label %208, label %226

208:                                              ; preds = %205
  %209 = load i32, i32* %2, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds [3 x i8*], [3 x i8*]* @auxorgframe, i64 0, i64 %210
  %212 = load i8*, i8** %211, align 8
  %213 = load i32, i32* %2, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 %214
  store i8* %212, i8** %215, align 8
  %216 = load i32, i32* %2, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [3 x i8*], [3 x i8*]* @auxframe, i64 0, i64 %217
  %219 = load i8*, i8** %218, align 8
  %220 = load i32, i32* %2, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 %221
  store i8* %219, i8** %222, align 8
  br label %223

223:                                              ; preds = %208
  %224 = load i32, i32* %2, align 4
  %225 = add nsw i32 %224, 1
  store i32 %225, i32* %2, align 4
  br label %205

226:                                              ; preds = %205
  %227 = load i32, i32* %1, align 4
  %228 = sub nsw i32 %227, 1
  store i32 %228, i32* %4, align 4
  store i32 3, i32* @pict_type, align 4
  %229 = load i32, i32* %1, align 4
  %230 = sub nsw i32 %229, 2
  %231 = load i32, i32* @M, align 4
  %232 = srem i32 %230, %231
  %233 = add nsw i32 %232, 1
  store i32 %233, i32* %6, align 4
  %234 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %235 = load i32, i32* %6, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %234, i64 %236
  %238 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %237, i32 0, i32 0
  %239 = load i32, i32* %238, align 4
  store i32 %239, i32* @forw_hor_f_code, align 4
  %240 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %241 = load i32, i32* %6, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %240, i64 %242
  %244 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %243, i32 0, i32 1
  %245 = load i32, i32* %244, align 4
  store i32 %245, i32* @forw_vert_f_code, align 4
  %246 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %247 = load i32, i32* %6, align 4
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %246, i64 %248
  %250 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %249, i32 0, i32 4
  %251 = load i32, i32* %250, align 4
  store i32 %251, i32* @back_hor_f_code, align 4
  %252 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %253 = load i32, i32* %6, align 4
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %252, i64 %254
  %256 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %255, i32 0, i32 5
  %257 = load i32, i32* %256, align 4
  store i32 %257, i32* @back_vert_f_code, align 4
  %258 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %259 = load i32, i32* %6, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %258, i64 %260
  %262 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %261, i32 0, i32 2
  %263 = load i32, i32* %262, align 4
  store i32 %263, i32* %9, align 4
  %264 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %265 = load i32, i32* %6, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %264, i64 %266
  %268 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %267, i32 0, i32 3
  %269 = load i32, i32* %268, align 4
  store i32 %269, i32* %10, align 4
  %270 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %271 = load i32, i32* %6, align 4
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %270, i64 %272
  %274 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %273, i32 0, i32 6
  %275 = load i32, i32* %274, align 4
  store i32 %275, i32* %11, align 4
  %276 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %277 = load i32, i32* %6, align 4
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %276, i64 %278
  %280 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %279, i32 0, i32 7
  %281 = load i32, i32* %280, align 4
  store i32 %281, i32* %12, align 4
  br label %282

282:                                              ; preds = %226, %203
  %283 = load i32, i32* %4, align 4
  %284 = load i32, i32* %5, align 4
  %285 = sub nsw i32 %283, %284
  store i32 %285, i32* @temp_ref, align 4
  %286 = load i32, i32* @pict_type, align 4
  %287 = sub nsw i32 %286, 1
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds [3 x i32], [3 x i32]* @frame_pred_dct_tab, i64 0, i64 %288
  %290 = load i32, i32* %289, align 4
  store i32 %290, i32* @frame_pred_dct, align 4
  %291 = load i32, i32* @pict_type, align 4
  %292 = sub nsw i32 %291, 1
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds [3 x i32], [3 x i32]* @qscale_tab, i64 0, i64 %293
  %295 = load i32, i32* %294, align 4
  store i32 %295, i32* @q_scale_type, align 4
  %296 = load i32, i32* @pict_type, align 4
  %297 = sub nsw i32 %296, 1
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds [3 x i32], [3 x i32]* @intravlc_tab, i64 0, i64 %298
  %300 = load i32, i32* %299, align 4
  store i32 %300, i32* @intravlc, align 4
  %301 = load i32, i32* @pict_type, align 4
  %302 = sub nsw i32 %301, 1
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds [3 x i32], [3 x i32]* @altscan_tab, i64 0, i64 %303
  %305 = load i32, i32* %304, align 4
  store i32 %305, i32* @altscan, align 4
  %306 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %307 = load i32, i32* %1, align 4
  %308 = load i32, i32* %4, align 4
  %309 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %306, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1.110, i64 0, i64 0), i32 %307, i32 %308)
  %310 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %311 = load i32, i32* @pict_type, align 4
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds [5 x i8], [5 x i8]* @putseq.ipb, i64 0, i64 %312
  %314 = load i8, i8* %313, align 1
  %315 = sext i8 %314 to i32
  %316 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %310, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.111, i64 0, i64 0), i32 %315)
  %317 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %318 = load i32, i32* @temp_ref, align 4
  %319 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %317, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.112, i64 0, i64 0), i32 %318)
  %320 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %321 = load i32, i32* @frame_pred_dct, align 4
  %322 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %320, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.113, i64 0, i64 0), i32 %321)
  %323 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %324 = load i32, i32* @q_scale_type, align 4
  %325 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %323, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5.114, i64 0, i64 0), i32 %324)
  %326 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %327 = load i32, i32* @intravlc, align 4
  %328 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %326, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6.115, i64 0, i64 0), i32 %327)
  %329 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %330 = load i32, i32* @altscan, align 4
  %331 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %329, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7.116, i64 0, i64 0), i32 %330)
  %332 = load i32, i32* @pict_type, align 4
  %333 = icmp ne i32 %332, 1
  br i1 %333, label %334, label %357

334:                                              ; preds = %282
  %335 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %336 = load i32, i32* %9, align 4
  %337 = sub nsw i32 0, %336
  %338 = load i32, i32* %9, align 4
  %339 = load i32, i32* %10, align 4
  %340 = sub nsw i32 0, %339
  %341 = load i32, i32* %10, align 4
  %342 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %335, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8.117, i64 0, i64 0), i32 %337, i32 %338, i32 %340, i32 %341)
  %343 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %344 = load i32, i32* @forw_hor_f_code, align 4
  %345 = shl i32 4, %344
  %346 = sub nsw i32 0, %345
  %347 = load i32, i32* @forw_hor_f_code, align 4
  %348 = shl i32 4, %347
  %349 = sub nsw i32 %348, 1
  %350 = load i32, i32* @forw_vert_f_code, align 4
  %351 = shl i32 4, %350
  %352 = sub nsw i32 0, %351
  %353 = load i32, i32* @forw_vert_f_code, align 4
  %354 = shl i32 4, %353
  %355 = sub nsw i32 %354, 1
  %356 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %343, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.9.118, i64 0, i64 0), i32 %346, i32 %349, i32 %352, i32 %355)
  br label %357

357:                                              ; preds = %334, %282
  %358 = load i32, i32* @pict_type, align 4
  %359 = icmp eq i32 %358, 3
  br i1 %359, label %360, label %383

360:                                              ; preds = %357
  %361 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %362 = load i32, i32* %11, align 4
  %363 = sub nsw i32 0, %362
  %364 = load i32, i32* %11, align 4
  %365 = load i32, i32* %12, align 4
  %366 = sub nsw i32 0, %365
  %367 = load i32, i32* %12, align 4
  %368 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %361, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10.119, i64 0, i64 0), i32 %363, i32 %364, i32 %366, i32 %367)
  %369 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %370 = load i32, i32* @back_hor_f_code, align 4
  %371 = shl i32 4, %370
  %372 = sub nsw i32 0, %371
  %373 = load i32, i32* @back_hor_f_code, align 4
  %374 = shl i32 4, %373
  %375 = sub nsw i32 %374, 1
  %376 = load i32, i32* @back_vert_f_code, align 4
  %377 = shl i32 4, %376
  %378 = sub nsw i32 0, %377
  %379 = load i32, i32* @back_vert_f_code, align 4
  %380 = shl i32 4, %379
  %381 = sub nsw i32 %380, 1
  %382 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %369, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11.120, i64 0, i64 0), i32 %372, i32 %375, i32 %378, i32 %381)
  br label %383

383:                                              ; preds = %360, %357
  %384 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 0
  %385 = load i32, i32* %4, align 4
  %386 = load i32, i32* @frame0, align 4
  %387 = add nsw i32 %385, %386
  %388 = call i32 (i8*, i8*, ...) @sprintf(i8* %384, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @tplorg, i64 0, i64 0), i32 %387) #6
  %389 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 0
  %390 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  call void @readframe(i8* %389, i8** %390)
  %391 = load i32, i32* @fieldpic, align 4
  %392 = icmp ne i32 %391, 0
  br i1 %392, label %393, label %684

393:                                              ; preds = %383
  %394 = load i32, i32* @quiet, align 4
  %395 = icmp ne i32 %394, 0
  br i1 %395, label %405, label %396

396:                                              ; preds = %393
  %397 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %398 = load i32, i32* @topfirst, align 4
  %399 = icmp ne i32 %398, 0
  %400 = zext i1 %399 to i64
  %401 = select i1 %399, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.121, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.122, i64 0, i64 0)
  %402 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %397, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.123, i64 0, i64 0), i8* %401)
  %403 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %404 = call i32 @fflush(%struct._IO_FILE* %403)
  br label %405

405:                                              ; preds = %396, %393
  %406 = load i32, i32* @topfirst, align 4
  %407 = icmp ne i32 %406, 0
  %408 = zext i1 %407 to i64
  %409 = select i1 %407, i32 1, i32 2
  store i32 %409, i32* @pict_struct, align 4
  %410 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @oldorgframe, i64 0, i64 0), align 16
  %411 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @neworgframe, i64 0, i64 0), align 16
  %412 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @oldrefframe, i64 0, i64 0), align 16
  %413 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @newrefframe, i64 0, i64 0), align 16
  %414 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  %415 = load i8*, i8** %414, align 16
  %416 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 0
  %417 = load i8*, i8** %416, align 16
  %418 = load i32, i32* %9, align 4
  %419 = load i32, i32* %10, align 4
  %420 = load i32, i32* %11, align 4
  %421 = load i32, i32* %12, align 4
  %422 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  call void @motion_estimation(i8* %410, i8* %411, i8* %412, i8* %413, i8* %415, i8* %417, i32 %418, i32 %419, i32 %420, i32 %421, %struct.mbinfo* %422, i32 0, i32 0)
  %423 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  call void @predict(i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @oldrefframe, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @newrefframe, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @predframe, i64 0, i64 0), i32 0, %struct.mbinfo* %423)
  %424 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @predframe, i64 0, i64 0), align 16
  %425 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  %426 = load i8*, i8** %425, align 16
  %427 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  call void @dct_type_estimation(i8* %424, i8* %426, %struct.mbinfo* %427)
  %428 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  %429 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %430 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  call void @transform(i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @predframe, i64 0, i64 0), i8** %428, %struct.mbinfo* %429, [64 x i16]* %430)
  %431 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  %432 = load i8*, i8** %431, align 16
  call void @putpict(i8* %432)
  store i32 0, i32* %3, align 4
  br label %433

433:                                              ; preds = %518, %405
  %434 = load i32, i32* %3, align 4
  %435 = load i32, i32* @mb_height2, align 4
  %436 = load i32, i32* @mb_width, align 4
  %437 = mul nsw i32 %435, %436
  %438 = icmp slt i32 %434, %437
  br i1 %438, label %439, label %521

439:                                              ; preds = %433
  %440 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %441 = load i32, i32* %3, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %440, i64 %442
  %444 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %443, i32 0, i32 0
  %445 = load i32, i32* %444, align 8
  %446 = and i32 %445, 1
  %447 = icmp ne i32 %446, 0
  br i1 %447, label %448, label %483

448:                                              ; preds = %439
  store i32 0, i32* %2, align 4
  br label %449

449:                                              ; preds = %479, %448
  %450 = load i32, i32* %2, align 4
  %451 = load i32, i32* @block_count, align 4
  %452 = icmp slt i32 %450, %451
  br i1 %452, label %453, label %482

453:                                              ; preds = %449
  %454 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %455 = load i32, i32* %3, align 4
  %456 = load i32, i32* @block_count, align 4
  %457 = mul nsw i32 %455, %456
  %458 = load i32, i32* %2, align 4
  %459 = add nsw i32 %457, %458
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds [64 x i16], [64 x i16]* %454, i64 %460
  %462 = getelementptr inbounds [64 x i16], [64 x i16]* %461, i64 0, i64 0
  %463 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %464 = load i32, i32* %3, align 4
  %465 = load i32, i32* @block_count, align 4
  %466 = mul nsw i32 %464, %465
  %467 = load i32, i32* %2, align 4
  %468 = add nsw i32 %466, %467
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds [64 x i16], [64 x i16]* %463, i64 %469
  %471 = getelementptr inbounds [64 x i16], [64 x i16]* %470, i64 0, i64 0
  %472 = load i32, i32* @dc_prec, align 4
  %473 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %474 = load i32, i32* %3, align 4
  %475 = sext i32 %474 to i64
  %476 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %473, i64 %475
  %477 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %476, i32 0, i32 3
  %478 = load i32, i32* %477, align 4
  call void @iquant_intra(i16* %462, i16* %471, i32 %472, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @intra_q, i64 0, i64 0), i32 %478)
  br label %479

479:                                              ; preds = %453
  %480 = load i32, i32* %2, align 4
  %481 = add nsw i32 %480, 1
  store i32 %481, i32* %2, align 4
  br label %449

482:                                              ; preds = %449
  br label %517

483:                                              ; preds = %439
  store i32 0, i32* %2, align 4
  br label %484

484:                                              ; preds = %513, %483
  %485 = load i32, i32* %2, align 4
  %486 = load i32, i32* @block_count, align 4
  %487 = icmp slt i32 %485, %486
  br i1 %487, label %488, label %516

488:                                              ; preds = %484
  %489 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %490 = load i32, i32* %3, align 4
  %491 = load i32, i32* @block_count, align 4
  %492 = mul nsw i32 %490, %491
  %493 = load i32, i32* %2, align 4
  %494 = add nsw i32 %492, %493
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds [64 x i16], [64 x i16]* %489, i64 %495
  %497 = getelementptr inbounds [64 x i16], [64 x i16]* %496, i64 0, i64 0
  %498 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %499 = load i32, i32* %3, align 4
  %500 = load i32, i32* @block_count, align 4
  %501 = mul nsw i32 %499, %500
  %502 = load i32, i32* %2, align 4
  %503 = add nsw i32 %501, %502
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds [64 x i16], [64 x i16]* %498, i64 %504
  %506 = getelementptr inbounds [64 x i16], [64 x i16]* %505, i64 0, i64 0
  %507 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %508 = load i32, i32* %3, align 4
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %507, i64 %509
  %511 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %510, i32 0, i32 3
  %512 = load i32, i32* %511, align 4
  call void @iquant_non_intra(i16* %497, i16* %506, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @inter_q, i64 0, i64 0), i32 %512)
  br label %513

513:                                              ; preds = %488
  %514 = load i32, i32* %2, align 4
  %515 = add nsw i32 %514, 1
  store i32 %515, i32* %2, align 4
  br label %484

516:                                              ; preds = %484
  br label %517

517:                                              ; preds = %516, %482
  br label %518

518:                                              ; preds = %517
  %519 = load i32, i32* %3, align 4
  %520 = add nsw i32 %519, 1
  store i32 %520, i32* %3, align 4
  br label %433

521:                                              ; preds = %433
  %522 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 0
  %523 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %524 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  call void @itransform(i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @predframe, i64 0, i64 0), i8** %522, %struct.mbinfo* %523, [64 x i16]* %524)
  %525 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  %526 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 0
  call void @calcSNR(i8** %525, i8** %526)
  call void @stats()
  %527 = load i32, i32* @quiet, align 4
  %528 = icmp ne i32 %527, 0
  br i1 %528, label %538, label %529

529:                                              ; preds = %521
  %530 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %531 = load i32, i32* @topfirst, align 4
  %532 = icmp ne i32 %531, 0
  %533 = zext i1 %532 to i64
  %534 = select i1 %532, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.122, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.121, i64 0, i64 0)
  %535 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %530, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15.124, i64 0, i64 0), i8* %534)
  %536 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %537 = call i32 @fflush(%struct._IO_FILE* %536)
  br label %538

538:                                              ; preds = %529, %521
  %539 = load i32, i32* @topfirst, align 4
  %540 = icmp ne i32 %539, 0
  %541 = zext i1 %540 to i64
  %542 = select i1 %540, i32 2, i32 1
  store i32 %542, i32* @pict_struct, align 4
  %543 = load i32, i32* @pict_type, align 4
  %544 = icmp eq i32 %543, 1
  %545 = zext i1 %544 to i32
  store i32 %545, i32* %13, align 4
  %546 = load i32, i32* %13, align 4
  %547 = icmp ne i32 %546, 0
  br i1 %547, label %548, label %565

548:                                              ; preds = %538
  store i32 2, i32* @pict_type, align 4
  %549 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %550 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %549, i64 0
  %551 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %550, i32 0, i32 0
  %552 = load i32, i32* %551, align 4
  store i32 %552, i32* @forw_hor_f_code, align 4
  %553 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %554 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %553, i64 0
  %555 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %554, i32 0, i32 1
  %556 = load i32, i32* %555, align 4
  store i32 %556, i32* @forw_vert_f_code, align 4
  store i32 15, i32* @back_vert_f_code, align 4
  store i32 15, i32* @back_hor_f_code, align 4
  %557 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %558 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %557, i64 0
  %559 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %558, i32 0, i32 2
  %560 = load i32, i32* %559, align 4
  store i32 %560, i32* %9, align 4
  %561 = load %struct.motion_data*, %struct.motion_data** @motion_data, align 8
  %562 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %561, i64 0
  %563 = getelementptr inbounds %struct.motion_data, %struct.motion_data* %562, i32 0, i32 3
  %564 = load i32, i32* %563, align 4
  store i32 %564, i32* %10, align 4
  br label %565

565:                                              ; preds = %548, %538
  %566 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @oldorgframe, i64 0, i64 0), align 16
  %567 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @neworgframe, i64 0, i64 0), align 16
  %568 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @oldrefframe, i64 0, i64 0), align 16
  %569 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @newrefframe, i64 0, i64 0), align 16
  %570 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  %571 = load i8*, i8** %570, align 16
  %572 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 0
  %573 = load i8*, i8** %572, align 16
  %574 = load i32, i32* %9, align 4
  %575 = load i32, i32* %10, align 4
  %576 = load i32, i32* %11, align 4
  %577 = load i32, i32* %12, align 4
  %578 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %579 = load i32, i32* %13, align 4
  call void @motion_estimation(i8* %566, i8* %567, i8* %568, i8* %569, i8* %571, i8* %573, i32 %574, i32 %575, i32 %576, i32 %577, %struct.mbinfo* %578, i32 1, i32 %579)
  %580 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  call void @predict(i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @oldrefframe, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @newrefframe, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @predframe, i64 0, i64 0), i32 1, %struct.mbinfo* %580)
  %581 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @predframe, i64 0, i64 0), align 16
  %582 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  %583 = load i8*, i8** %582, align 16
  %584 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  call void @dct_type_estimation(i8* %581, i8* %583, %struct.mbinfo* %584)
  %585 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  %586 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %587 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  call void @transform(i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @predframe, i64 0, i64 0), i8** %585, %struct.mbinfo* %586, [64 x i16]* %587)
  %588 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  %589 = load i8*, i8** %588, align 16
  call void @putpict(i8* %589)
  store i32 0, i32* %3, align 4
  br label %590

590:                                              ; preds = %675, %565
  %591 = load i32, i32* %3, align 4
  %592 = load i32, i32* @mb_height2, align 4
  %593 = load i32, i32* @mb_width, align 4
  %594 = mul nsw i32 %592, %593
  %595 = icmp slt i32 %591, %594
  br i1 %595, label %596, label %678

596:                                              ; preds = %590
  %597 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %598 = load i32, i32* %3, align 4
  %599 = sext i32 %598 to i64
  %600 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %597, i64 %599
  %601 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %600, i32 0, i32 0
  %602 = load i32, i32* %601, align 8
  %603 = and i32 %602, 1
  %604 = icmp ne i32 %603, 0
  br i1 %604, label %605, label %640

605:                                              ; preds = %596
  store i32 0, i32* %2, align 4
  br label %606

606:                                              ; preds = %636, %605
  %607 = load i32, i32* %2, align 4
  %608 = load i32, i32* @block_count, align 4
  %609 = icmp slt i32 %607, %608
  br i1 %609, label %610, label %639

610:                                              ; preds = %606
  %611 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %612 = load i32, i32* %3, align 4
  %613 = load i32, i32* @block_count, align 4
  %614 = mul nsw i32 %612, %613
  %615 = load i32, i32* %2, align 4
  %616 = add nsw i32 %614, %615
  %617 = sext i32 %616 to i64
  %618 = getelementptr inbounds [64 x i16], [64 x i16]* %611, i64 %617
  %619 = getelementptr inbounds [64 x i16], [64 x i16]* %618, i64 0, i64 0
  %620 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %621 = load i32, i32* %3, align 4
  %622 = load i32, i32* @block_count, align 4
  %623 = mul nsw i32 %621, %622
  %624 = load i32, i32* %2, align 4
  %625 = add nsw i32 %623, %624
  %626 = sext i32 %625 to i64
  %627 = getelementptr inbounds [64 x i16], [64 x i16]* %620, i64 %626
  %628 = getelementptr inbounds [64 x i16], [64 x i16]* %627, i64 0, i64 0
  %629 = load i32, i32* @dc_prec, align 4
  %630 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %631 = load i32, i32* %3, align 4
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %630, i64 %632
  %634 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %633, i32 0, i32 3
  %635 = load i32, i32* %634, align 4
  call void @iquant_intra(i16* %619, i16* %628, i32 %629, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @intra_q, i64 0, i64 0), i32 %635)
  br label %636

636:                                              ; preds = %610
  %637 = load i32, i32* %2, align 4
  %638 = add nsw i32 %637, 1
  store i32 %638, i32* %2, align 4
  br label %606

639:                                              ; preds = %606
  br label %674

640:                                              ; preds = %596
  store i32 0, i32* %2, align 4
  br label %641

641:                                              ; preds = %670, %640
  %642 = load i32, i32* %2, align 4
  %643 = load i32, i32* @block_count, align 4
  %644 = icmp slt i32 %642, %643
  br i1 %644, label %645, label %673

645:                                              ; preds = %641
  %646 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %647 = load i32, i32* %3, align 4
  %648 = load i32, i32* @block_count, align 4
  %649 = mul nsw i32 %647, %648
  %650 = load i32, i32* %2, align 4
  %651 = add nsw i32 %649, %650
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds [64 x i16], [64 x i16]* %646, i64 %652
  %654 = getelementptr inbounds [64 x i16], [64 x i16]* %653, i64 0, i64 0
  %655 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %656 = load i32, i32* %3, align 4
  %657 = load i32, i32* @block_count, align 4
  %658 = mul nsw i32 %656, %657
  %659 = load i32, i32* %2, align 4
  %660 = add nsw i32 %658, %659
  %661 = sext i32 %660 to i64
  %662 = getelementptr inbounds [64 x i16], [64 x i16]* %655, i64 %661
  %663 = getelementptr inbounds [64 x i16], [64 x i16]* %662, i64 0, i64 0
  %664 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %665 = load i32, i32* %3, align 4
  %666 = sext i32 %665 to i64
  %667 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %664, i64 %666
  %668 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %667, i32 0, i32 3
  %669 = load i32, i32* %668, align 4
  call void @iquant_non_intra(i16* %654, i16* %663, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @inter_q, i64 0, i64 0), i32 %669)
  br label %670

670:                                              ; preds = %645
  %671 = load i32, i32* %2, align 4
  %672 = add nsw i32 %671, 1
  store i32 %672, i32* %2, align 4
  br label %641

673:                                              ; preds = %641
  br label %674

674:                                              ; preds = %673, %639
  br label %675

675:                                              ; preds = %674
  %676 = load i32, i32* %3, align 4
  %677 = add nsw i32 %676, 1
  store i32 %677, i32* %3, align 4
  br label %590

678:                                              ; preds = %590
  %679 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 0
  %680 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %681 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  call void @itransform(i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @predframe, i64 0, i64 0), i8** %679, %struct.mbinfo* %680, [64 x i16]* %681)
  %682 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  %683 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 0
  call void @calcSNR(i8** %682, i8** %683)
  call void @stats()
  br label %802

684:                                              ; preds = %383
  store i32 3, i32* @pict_struct, align 4
  %685 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @oldorgframe, i64 0, i64 0), align 16
  %686 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @neworgframe, i64 0, i64 0), align 16
  %687 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @oldrefframe, i64 0, i64 0), align 16
  %688 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @newrefframe, i64 0, i64 0), align 16
  %689 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  %690 = load i8*, i8** %689, align 16
  %691 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 0
  %692 = load i8*, i8** %691, align 16
  %693 = load i32, i32* %9, align 4
  %694 = load i32, i32* %10, align 4
  %695 = load i32, i32* %11, align 4
  %696 = load i32, i32* %12, align 4
  %697 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  call void @motion_estimation(i8* %685, i8* %686, i8* %687, i8* %688, i8* %690, i8* %692, i32 %693, i32 %694, i32 %695, i32 %696, %struct.mbinfo* %697, i32 0, i32 0)
  %698 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  call void @predict(i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @oldrefframe, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @newrefframe, i64 0, i64 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @predframe, i64 0, i64 0), i32 0, %struct.mbinfo* %698)
  %699 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @predframe, i64 0, i64 0), align 16
  %700 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  %701 = load i8*, i8** %700, align 16
  %702 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  call void @dct_type_estimation(i8* %699, i8* %701, %struct.mbinfo* %702)
  %703 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  %704 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %705 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  call void @transform(i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @predframe, i64 0, i64 0), i8** %703, %struct.mbinfo* %704, [64 x i16]* %705)
  %706 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  %707 = load i8*, i8** %706, align 16
  call void @putpict(i8* %707)
  store i32 0, i32* %3, align 4
  br label %708

708:                                              ; preds = %793, %684
  %709 = load i32, i32* %3, align 4
  %710 = load i32, i32* @mb_height, align 4
  %711 = load i32, i32* @mb_width, align 4
  %712 = mul nsw i32 %710, %711
  %713 = icmp slt i32 %709, %712
  br i1 %713, label %714, label %796

714:                                              ; preds = %708
  %715 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %716 = load i32, i32* %3, align 4
  %717 = sext i32 %716 to i64
  %718 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %715, i64 %717
  %719 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %718, i32 0, i32 0
  %720 = load i32, i32* %719, align 8
  %721 = and i32 %720, 1
  %722 = icmp ne i32 %721, 0
  br i1 %722, label %723, label %758

723:                                              ; preds = %714
  store i32 0, i32* %2, align 4
  br label %724

724:                                              ; preds = %754, %723
  %725 = load i32, i32* %2, align 4
  %726 = load i32, i32* @block_count, align 4
  %727 = icmp slt i32 %725, %726
  br i1 %727, label %728, label %757

728:                                              ; preds = %724
  %729 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %730 = load i32, i32* %3, align 4
  %731 = load i32, i32* @block_count, align 4
  %732 = mul nsw i32 %730, %731
  %733 = load i32, i32* %2, align 4
  %734 = add nsw i32 %732, %733
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds [64 x i16], [64 x i16]* %729, i64 %735
  %737 = getelementptr inbounds [64 x i16], [64 x i16]* %736, i64 0, i64 0
  %738 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %739 = load i32, i32* %3, align 4
  %740 = load i32, i32* @block_count, align 4
  %741 = mul nsw i32 %739, %740
  %742 = load i32, i32* %2, align 4
  %743 = add nsw i32 %741, %742
  %744 = sext i32 %743 to i64
  %745 = getelementptr inbounds [64 x i16], [64 x i16]* %738, i64 %744
  %746 = getelementptr inbounds [64 x i16], [64 x i16]* %745, i64 0, i64 0
  %747 = load i32, i32* @dc_prec, align 4
  %748 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %749 = load i32, i32* %3, align 4
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %748, i64 %750
  %752 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %751, i32 0, i32 3
  %753 = load i32, i32* %752, align 4
  call void @iquant_intra(i16* %737, i16* %746, i32 %747, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @intra_q, i64 0, i64 0), i32 %753)
  br label %754

754:                                              ; preds = %728
  %755 = load i32, i32* %2, align 4
  %756 = add nsw i32 %755, 1
  store i32 %756, i32* %2, align 4
  br label %724

757:                                              ; preds = %724
  br label %792

758:                                              ; preds = %714
  store i32 0, i32* %2, align 4
  br label %759

759:                                              ; preds = %788, %758
  %760 = load i32, i32* %2, align 4
  %761 = load i32, i32* @block_count, align 4
  %762 = icmp slt i32 %760, %761
  br i1 %762, label %763, label %791

763:                                              ; preds = %759
  %764 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %765 = load i32, i32* %3, align 4
  %766 = load i32, i32* @block_count, align 4
  %767 = mul nsw i32 %765, %766
  %768 = load i32, i32* %2, align 4
  %769 = add nsw i32 %767, %768
  %770 = sext i32 %769 to i64
  %771 = getelementptr inbounds [64 x i16], [64 x i16]* %764, i64 %770
  %772 = getelementptr inbounds [64 x i16], [64 x i16]* %771, i64 0, i64 0
  %773 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  %774 = load i32, i32* %3, align 4
  %775 = load i32, i32* @block_count, align 4
  %776 = mul nsw i32 %774, %775
  %777 = load i32, i32* %2, align 4
  %778 = add nsw i32 %776, %777
  %779 = sext i32 %778 to i64
  %780 = getelementptr inbounds [64 x i16], [64 x i16]* %773, i64 %779
  %781 = getelementptr inbounds [64 x i16], [64 x i16]* %780, i64 0, i64 0
  %782 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %783 = load i32, i32* %3, align 4
  %784 = sext i32 %783 to i64
  %785 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %782, i64 %784
  %786 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %785, i32 0, i32 3
  %787 = load i32, i32* %786, align 4
  call void @iquant_non_intra(i16* %772, i16* %781, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @inter_q, i64 0, i64 0), i32 %787)
  br label %788

788:                                              ; preds = %763
  %789 = load i32, i32* %2, align 4
  %790 = add nsw i32 %789, 1
  store i32 %790, i32* %2, align 4
  br label %759

791:                                              ; preds = %759
  br label %792

792:                                              ; preds = %791, %757
  br label %793

793:                                              ; preds = %792
  %794 = load i32, i32* %3, align 4
  %795 = add nsw i32 %794, 1
  store i32 %795, i32* %3, align 4
  br label %708

796:                                              ; preds = %708
  %797 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 0
  %798 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %799 = load [64 x i16]*, [64 x i16]** @blocks, align 8
  call void @itransform(i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @predframe, i64 0, i64 0), i8** %797, %struct.mbinfo* %798, [64 x i16]* %799)
  %800 = getelementptr inbounds [3 x i8*], [3 x i8*]* %16, i64 0, i64 0
  %801 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 0
  call void @calcSNR(i8** %800, i8** %801)
  call void @stats()
  br label %802

802:                                              ; preds = %796, %678
  %803 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 0
  %804 = load i32, i32* %4, align 4
  %805 = load i32, i32* @frame0, align 4
  %806 = add nsw i32 %804, %805
  %807 = call i32 (i8*, i8*, ...) @sprintf(i8* %803, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @tplref, i64 0, i64 0), i32 %806) #6
  %808 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 0
  %809 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 0
  call void @writeframe(i8* %808, i8** %809)
  br label %810

810:                                              ; preds = %802
  %811 = load i32, i32* %1, align 4
  %812 = add nsw i32 %811, 1
  store i32 %812, i32* %1, align 4
  br label %26

813:                                              ; preds = %26
  call void @putseqend()
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @putDClum(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  call void @putDC(%struct.sVLCtable* getelementptr inbounds ([12 x %struct.sVLCtable], [12 x %struct.sVLCtable]* @DClumtab, i64 0, i64 0), i32 %3)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @putDC(%struct.sVLCtable* %0, i32 %1) #0 {
  %3 = alloca %struct.sVLCtable*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.sVLCtable* %0, %struct.sVLCtable** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load i32, i32* %4, align 4
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = load i32, i32* %4, align 4
  %11 = sub nsw i32 0, %10
  br label %14

12:                                               ; preds = %2
  %13 = load i32, i32* %4, align 4
  br label %14

14:                                               ; preds = %12, %9
  %15 = phi i32 [ %11, %9 ], [ %13, %12 ]
  store i32 %15, i32* %5, align 4
  %16 = load i32, i32* %5, align 4
  %17 = icmp sgt i32 %16, 2047
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  %19 = load i32, i32* @mpeg1, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %18
  %22 = load i32, i32* %5, align 4
  %23 = icmp sgt i32 %22, 255
  br i1 %23, label %24, label %27

24:                                               ; preds = %21, %14
  %25 = load i32, i32* %4, align 4
  %26 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.127, i64 0, i64 0), i32 %25) #6
  call void @error(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0))
  br label %27

27:                                               ; preds = %24, %21, %18
  store i32 0, i32* %6, align 4
  br label %28

28:                                               ; preds = %31, %27
  %29 = load i32, i32* %5, align 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %28
  %32 = load i32, i32* %5, align 4
  %33 = ashr i32 %32, 1
  store i32 %33, i32* %5, align 4
  %34 = load i32, i32* %6, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %6, align 4
  br label %28

36:                                               ; preds = %28
  %37 = load %struct.sVLCtable*, %struct.sVLCtable** %3, align 8
  %38 = load i32, i32* %6, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds %struct.sVLCtable, %struct.sVLCtable* %37, i64 %39
  %41 = getelementptr inbounds %struct.sVLCtable, %struct.sVLCtable* %40, i32 0, i32 0
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = load %struct.sVLCtable*, %struct.sVLCtable** %3, align 8
  %45 = load i32, i32* %6, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.sVLCtable, %struct.sVLCtable* %44, i64 %46
  %48 = getelementptr inbounds %struct.sVLCtable, %struct.sVLCtable* %47, i32 0, i32 1
  %49 = load i8, i8* %48, align 2
  %50 = sext i8 %49 to i32
  call void @putbits(i32 %43, i32 %50)
  %51 = load i32, i32* %6, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %67

53:                                               ; preds = %36
  %54 = load i32, i32* %4, align 4
  %55 = icmp sge i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = load i32, i32* %4, align 4
  store i32 %57, i32* %5, align 4
  br label %64

58:                                               ; preds = %53
  %59 = load i32, i32* %4, align 4
  %60 = load i32, i32* %6, align 4
  %61 = shl i32 1, %60
  %62 = add nsw i32 %59, %61
  %63 = sub nsw i32 %62, 1
  store i32 %63, i32* %5, align 4
  br label %64

64:                                               ; preds = %58, %56
  %65 = load i32, i32* %5, align 4
  %66 = load i32, i32* %6, align 4
  call void @putbits(i32 %65, i32 %66)
  br label %67

67:                                               ; preds = %64, %36
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putDCchrom(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  call void @putDC(%struct.sVLCtable* getelementptr inbounds ([12 x %struct.sVLCtable], [12 x %struct.sVLCtable]* @DCchromtab, i64 0, i64 0), i32 %3)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putACfirst(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %18

7:                                                ; preds = %2
  %8 = load i32, i32* %4, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = load i32, i32* %4, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %18

13:                                               ; preds = %10, %7
  %14 = load i32, i32* %4, align 4
  %15 = icmp slt i32 %14, 0
  %16 = zext i1 %15 to i32
  %17 = or i32 2, %16
  call void @putbits(i32 %17, i32 2)
  br label %21

18:                                               ; preds = %10, %2
  %19 = load i32, i32* %3, align 4
  %20 = load i32, i32* %4, align 4
  call void @putAC(i32 %19, i32 %20, i32 0)
  br label %21

21:                                               ; preds = %18, %13
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putAC(i32 %0, i32 %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.VLCtable*, align 8
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = load i32, i32* %5, align 4
  %14 = sub nsw i32 0, %13
  br label %17

15:                                               ; preds = %3
  %16 = load i32, i32* %5, align 4
  br label %17

17:                                               ; preds = %15, %12
  %18 = phi i32 [ %14, %12 ], [ %16, %15 ]
  store i32 %18, i32* %7, align 4
  %19 = load i32, i32* %4, align 4
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %36, label %21

21:                                               ; preds = %17
  %22 = load i32, i32* %4, align 4
  %23 = icmp sgt i32 %22, 63
  br i1 %23, label %36, label %24

24:                                               ; preds = %21
  %25 = load i32, i32* %7, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %24
  %28 = load i32, i32* %7, align 4
  %29 = icmp sgt i32 %28, 2047
  br i1 %29, label %36, label %30

30:                                               ; preds = %27
  %31 = load i32, i32* @mpeg1, align 4
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %30
  %34 = load i32, i32* %7, align 4
  %35 = icmp sgt i32 %34, 255
  br i1 %35, label %36, label %40

36:                                               ; preds = %33, %27, %24, %21, %17
  %37 = load i32, i32* %4, align 4
  %38 = load i32, i32* %5, align 4
  %39 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.134, i64 0, i64 0), i32 %37, i32 %38) #6
  call void @error(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0))
  br label %40

40:                                               ; preds = %36, %33, %30
  store i32 0, i32* %8, align 4
  %41 = load i32, i32* %4, align 4
  %42 = icmp slt i32 %41, 2
  br i1 %42, label %43, label %70

43:                                               ; preds = %40
  %44 = load i32, i32* %7, align 4
  %45 = icmp slt i32 %44, 41
  br i1 %45, label %46, label %70

46:                                               ; preds = %43
  %47 = load i32, i32* %6, align 4
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %57

49:                                               ; preds = %46
  %50 = load i32, i32* %4, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [2 x [40 x %struct.VLCtable]], [2 x [40 x %struct.VLCtable]]* bitcast (<{ [40 x %struct.VLCtable], <{ [18 x %struct.VLCtable], [22 x %struct.VLCtable] }> }>* @dct_code_tab1a to [2 x [40 x %struct.VLCtable]]*), i64 0, i64 %51
  %53 = load i32, i32* %7, align 4
  %54 = sub nsw i32 %53, 1
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [40 x %struct.VLCtable], [40 x %struct.VLCtable]* %52, i64 0, i64 %55
  store %struct.VLCtable* %56, %struct.VLCtable** %9, align 8
  br label %65

57:                                               ; preds = %46
  %58 = load i32, i32* %4, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [2 x [40 x %struct.VLCtable]], [2 x [40 x %struct.VLCtable]]* bitcast (<{ [40 x %struct.VLCtable], <{ [18 x %struct.VLCtable], [22 x %struct.VLCtable] }> }>* @dct_code_tab1 to [2 x [40 x %struct.VLCtable]]*), i64 0, i64 %59
  %61 = load i32, i32* %7, align 4
  %62 = sub nsw i32 %61, 1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [40 x %struct.VLCtable], [40 x %struct.VLCtable]* %60, i64 0, i64 %63
  store %struct.VLCtable* %64, %struct.VLCtable** %9, align 8
  br label %65

65:                                               ; preds = %57, %49
  %66 = load %struct.VLCtable*, %struct.VLCtable** %9, align 8
  %67 = getelementptr inbounds %struct.VLCtable, %struct.VLCtable* %66, i32 0, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = sext i8 %68 to i32
  store i32 %69, i32* %8, align 4
  br label %103

70:                                               ; preds = %43, %40
  %71 = load i32, i32* %4, align 4
  %72 = icmp slt i32 %71, 32
  br i1 %72, label %73, label %102

73:                                               ; preds = %70
  %74 = load i32, i32* %7, align 4
  %75 = icmp slt i32 %74, 6
  br i1 %75, label %76, label %102

76:                                               ; preds = %73
  %77 = load i32, i32* %6, align 4
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %76
  %80 = load i32, i32* %4, align 4
  %81 = sub nsw i32 %80, 2
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [30 x [5 x %struct.VLCtable]], [30 x [5 x %struct.VLCtable]]* @dct_code_tab2a, i64 0, i64 %82
  %84 = load i32, i32* %7, align 4
  %85 = sub nsw i32 %84, 1
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [5 x %struct.VLCtable], [5 x %struct.VLCtable]* %83, i64 0, i64 %86
  store %struct.VLCtable* %87, %struct.VLCtable** %9, align 8
  br label %97

88:                                               ; preds = %76
  %89 = load i32, i32* %4, align 4
  %90 = sub nsw i32 %89, 2
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [30 x [5 x %struct.VLCtable]], [30 x [5 x %struct.VLCtable]]* @dct_code_tab2, i64 0, i64 %91
  %93 = load i32, i32* %7, align 4
  %94 = sub nsw i32 %93, 1
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [5 x %struct.VLCtable], [5 x %struct.VLCtable]* %92, i64 0, i64 %95
  store %struct.VLCtable* %96, %struct.VLCtable** %9, align 8
  br label %97

97:                                               ; preds = %88, %79
  %98 = load %struct.VLCtable*, %struct.VLCtable** %9, align 8
  %99 = getelementptr inbounds %struct.VLCtable, %struct.VLCtable* %98, i32 0, i32 1
  %100 = load i8, i8* %99, align 1
  %101 = sext i8 %100 to i32
  store i32 %101, i32* %8, align 4
  br label %102

102:                                              ; preds = %97, %73, %70
  br label %103

103:                                              ; preds = %102, %65
  %104 = load i32, i32* %8, align 4
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %106, label %115

106:                                              ; preds = %103
  %107 = load %struct.VLCtable*, %struct.VLCtable** %9, align 8
  %108 = getelementptr inbounds %struct.VLCtable, %struct.VLCtable* %107, i32 0, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = load i32, i32* %8, align 4
  call void @putbits(i32 %110, i32 %111)
  %112 = load i32, i32* %5, align 4
  %113 = icmp slt i32 %112, 0
  %114 = zext i1 %113 to i32
  call void @putbits(i32 %114, i32 1)
  br label %132

115:                                              ; preds = %103
  call void @putbits(i32 1, i32 6)
  %116 = load i32, i32* %4, align 4
  call void @putbits(i32 %116, i32 6)
  %117 = load i32, i32* @mpeg1, align 4
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %129

119:                                              ; preds = %115
  %120 = load i32, i32* %5, align 4
  %121 = icmp sgt i32 %120, 127
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @putbits(i32 0, i32 8)
  br label %123

123:                                              ; preds = %122, %119
  %124 = load i32, i32* %5, align 4
  %125 = icmp slt i32 %124, -127
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @putbits(i32 128, i32 8)
  br label %127

127:                                              ; preds = %126, %123
  %128 = load i32, i32* %5, align 4
  call void @putbits(i32 %128, i32 8)
  br label %131

129:                                              ; preds = %115
  %130 = load i32, i32* %5, align 4
  call void @putbits(i32 %130, i32 12)
  br label %131

131:                                              ; preds = %129, %127
  br label %132

132:                                              ; preds = %131, %106
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putaddrinc(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  br label %3

3:                                                ; preds = %6, %1
  %4 = load i32, i32* %2, align 4
  %5 = icmp sgt i32 %4, 33
  br i1 %5, label %6, label %9

6:                                                ; preds = %3
  call void @putbits(i32 8, i32 11)
  %7 = load i32, i32* %2, align 4
  %8 = sub nsw i32 %7, 33
  store i32 %8, i32* %2, align 4
  br label %3

9:                                                ; preds = %3
  %10 = load i32, i32* %2, align 4
  %11 = sub nsw i32 %10, 1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [33 x %struct.VLCtable], [33 x %struct.VLCtable]* @addrinctab, i64 0, i64 %12
  %14 = getelementptr inbounds %struct.VLCtable, %struct.VLCtable* %13, i32 0, i32 0
  %15 = load i8, i8* %14, align 2
  %16 = zext i8 %15 to i32
  %17 = load i32, i32* %2, align 4
  %18 = sub nsw i32 %17, 1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [33 x %struct.VLCtable], [33 x %struct.VLCtable]* @addrinctab, i64 0, i64 %19
  %21 = getelementptr inbounds %struct.VLCtable, %struct.VLCtable* %20, i32 0, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  call void @putbits(i32 %16, i32 %23)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putmbtype(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = sub nsw i32 %5, 1
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [3 x [32 x %struct.VLCtable]], [3 x [32 x %struct.VLCtable]]* bitcast (<{ <{ [18 x %struct.VLCtable], [14 x %struct.VLCtable] }>, [32 x %struct.VLCtable], [32 x %struct.VLCtable] }>* @mbtypetab to [3 x [32 x %struct.VLCtable]]*), i64 0, i64 %7
  %9 = load i32, i32* %4, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [32 x %struct.VLCtable], [32 x %struct.VLCtable]* %8, i64 0, i64 %10
  %12 = getelementptr inbounds %struct.VLCtable, %struct.VLCtable* %11, i32 0, i32 0
  %13 = load i8, i8* %12, align 2
  %14 = zext i8 %13 to i32
  %15 = load i32, i32* %3, align 4
  %16 = sub nsw i32 %15, 1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [3 x [32 x %struct.VLCtable]], [3 x [32 x %struct.VLCtable]]* bitcast (<{ <{ [18 x %struct.VLCtable], [14 x %struct.VLCtable] }>, [32 x %struct.VLCtable], [32 x %struct.VLCtable] }>* @mbtypetab to [3 x [32 x %struct.VLCtable]]*), i64 0, i64 %17
  %19 = load i32, i32* %4, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32 x %struct.VLCtable], [32 x %struct.VLCtable]* %18, i64 0, i64 %20
  %22 = getelementptr inbounds %struct.VLCtable, %struct.VLCtable* %21, i32 0, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  call void @putbits(i32 %14, i32 %24)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putmotioncode(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %4 = load i32, i32* %2, align 4
  %5 = icmp sge i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = load i32, i32* %2, align 4
  br label %11

8:                                                ; preds = %1
  %9 = load i32, i32* %2, align 4
  %10 = sub nsw i32 0, %9
  br label %11

11:                                               ; preds = %8, %6
  %12 = phi i32 [ %7, %6 ], [ %10, %8 ]
  store i32 %12, i32* %3, align 4
  %13 = load i32, i32* %3, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [17 x %struct.VLCtable], [17 x %struct.VLCtable]* @motionvectab, i64 0, i64 %14
  %16 = getelementptr inbounds %struct.VLCtable, %struct.VLCtable* %15, i32 0, i32 0
  %17 = load i8, i8* %16, align 2
  %18 = zext i8 %17 to i32
  %19 = load i32, i32* %3, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [17 x %struct.VLCtable], [17 x %struct.VLCtable]* @motionvectab, i64 0, i64 %20
  %22 = getelementptr inbounds %struct.VLCtable, %struct.VLCtable* %21, i32 0, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  call void @putbits(i32 %18, i32 %24)
  %25 = load i32, i32* %2, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %11
  %28 = load i32, i32* %2, align 4
  %29 = icmp slt i32 %28, 0
  %30 = zext i1 %29 to i32
  call void @putbits(i32 %30, i32 1)
  br label %31

31:                                               ; preds = %27, %11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putdmv(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  call void @putbits(i32 0, i32 1)
  br label %12

6:                                                ; preds = %1
  %7 = load i32, i32* %2, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  call void @putbits(i32 2, i32 2)
  br label %11

10:                                               ; preds = %6
  call void @putbits(i32 3, i32 2)
  br label %11

11:                                               ; preds = %10, %9
  br label %12

12:                                               ; preds = %11, %5
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @putcbp(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [64 x %struct.VLCtable], [64 x %struct.VLCtable]* @cbptable, i64 0, i64 %4
  %6 = getelementptr inbounds %struct.VLCtable, %struct.VLCtable* %5, i32 0, i32 0
  %7 = load i8, i8* %6, align 2
  %8 = zext i8 %7 to i32
  %9 = load i32, i32* %2, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [64 x %struct.VLCtable], [64 x %struct.VLCtable]* @cbptable, i64 0, i64 %10
  %12 = getelementptr inbounds %struct.VLCtable, %struct.VLCtable* %11, i32 0, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = sext i8 %13 to i32
  call void @putbits(i32 %8, i32 %14)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @quant_intra(i16* %0, i16* %1, i32 %2, i8* %3, i32 %4) #0 {
  %6 = alloca i16*, align 8
  %7 = alloca i16*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i16* %0, i16** %6, align 8
  store i16* %1, i16** %7, align 8
  store i32 %2, i32* %8, align 4
  store i8* %3, i8** %9, align 8
  store i32 %4, i32* %10, align 4
  %15 = load i16*, i16** %6, align 8
  %16 = getelementptr inbounds i16, i16* %15, i64 0
  %17 = load i16, i16* %16, align 2
  %18 = sext i16 %17 to i32
  store i32 %18, i32* %12, align 4
  %19 = load i32, i32* %8, align 4
  %20 = ashr i32 8, %19
  store i32 %20, i32* %14, align 4
  %21 = load i32, i32* %12, align 4
  %22 = icmp sge i32 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %5
  %24 = load i32, i32* %12, align 4
  %25 = load i32, i32* %14, align 4
  %26 = ashr i32 %25, 1
  %27 = add nsw i32 %24, %26
  %28 = load i32, i32* %14, align 4
  %29 = sdiv i32 %27, %28
  br label %39

30:                                               ; preds = %5
  %31 = load i32, i32* %12, align 4
  %32 = sub nsw i32 0, %31
  %33 = load i32, i32* %14, align 4
  %34 = ashr i32 %33, 1
  %35 = add nsw i32 %32, %34
  %36 = load i32, i32* %14, align 4
  %37 = sdiv i32 %35, %36
  %38 = sub nsw i32 0, %37
  br label %39

39:                                               ; preds = %30, %23
  %40 = phi i32 [ %29, %23 ], [ %38, %30 ]
  %41 = trunc i32 %40 to i16
  %42 = load i16*, i16** %7, align 8
  %43 = getelementptr inbounds i16, i16* %42, i64 0
  store i16 %41, i16* %43, align 2
  store i32 1, i32* %11, align 4
  br label %44

44:                                               ; preds = %112, %39
  %45 = load i32, i32* %11, align 4
  %46 = icmp slt i32 %45, 64
  br i1 %46, label %47, label %115

47:                                               ; preds = %44
  %48 = load i16*, i16** %6, align 8
  %49 = load i32, i32* %11, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i16, i16* %48, i64 %50
  %52 = load i16, i16* %51, align 2
  %53 = sext i16 %52 to i32
  store i32 %53, i32* %12, align 4
  %54 = load i8*, i8** %9, align 8
  %55 = load i32, i32* %11, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %54, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  store i32 %59, i32* %14, align 4
  %60 = load i32, i32* %12, align 4
  %61 = icmp sge i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %47
  %63 = load i32, i32* %12, align 4
  br label %67

64:                                               ; preds = %47
  %65 = load i32, i32* %12, align 4
  %66 = sub nsw i32 0, %65
  br label %67

67:                                               ; preds = %64, %62
  %68 = phi i32 [ %63, %62 ], [ %66, %64 ]
  %69 = mul nsw i32 32, %68
  %70 = load i32, i32* %14, align 4
  %71 = ashr i32 %70, 1
  %72 = add nsw i32 %69, %71
  %73 = load i32, i32* %14, align 4
  %74 = sdiv i32 %72, %73
  store i32 %74, i32* %13, align 4
  %75 = load i32, i32* %10, align 4
  %76 = mul nsw i32 3, %75
  %77 = add nsw i32 %76, 2
  %78 = ashr i32 %77, 2
  store i32 %78, i32* %14, align 4
  %79 = load i32, i32* %13, align 4
  %80 = load i32, i32* %14, align 4
  %81 = add nsw i32 %79, %80
  %82 = load i32, i32* %10, align 4
  %83 = mul nsw i32 2, %82
  %84 = sdiv i32 %81, %83
  store i32 %84, i32* %13, align 4
  %85 = load i32, i32* %13, align 4
  %86 = icmp sgt i32 %85, 255
  br i1 %86, label %87, label %97

87:                                               ; preds = %67
  %88 = load i32, i32* @mpeg1, align 4
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  store i32 255, i32* %13, align 4
  br label %96

91:                                               ; preds = %87
  %92 = load i32, i32* %13, align 4
  %93 = icmp sgt i32 %92, 2047
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  store i32 2047, i32* %13, align 4
  br label %95

95:                                               ; preds = %94, %91
  br label %96

96:                                               ; preds = %95, %90
  br label %97

97:                                               ; preds = %96, %67
  %98 = load i32, i32* %12, align 4
  %99 = icmp sge i32 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %97
  %101 = load i32, i32* %13, align 4
  br label %105

102:                                              ; preds = %97
  %103 = load i32, i32* %13, align 4
  %104 = sub nsw i32 0, %103
  br label %105

105:                                              ; preds = %102, %100
  %106 = phi i32 [ %101, %100 ], [ %104, %102 ]
  %107 = trunc i32 %106 to i16
  %108 = load i16*, i16** %7, align 8
  %109 = load i32, i32* %11, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %108, i64 %110
  store i16 %107, i16* %111, align 2
  br label %112

112:                                              ; preds = %105
  %113 = load i32, i32* %11, align 4
  %114 = add nsw i32 %113, 1
  store i32 %114, i32* %11, align 4
  br label %44

115:                                              ; preds = %44
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @quant_non_intra(i16* %0, i16* %1, i8* %2, i32 %3) #0 {
  %5 = alloca i16*, align 8
  %6 = alloca i16*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i16* %0, i16** %5, align 8
  store i16* %1, i16** %6, align 8
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  store i32 0, i32* %13, align 4
  store i32 0, i32* %9, align 4
  br label %14

14:                                               ; preds = %80, %4
  %15 = load i32, i32* %9, align 4
  %16 = icmp slt i32 %15, 64
  br i1 %16, label %17, label %83

17:                                               ; preds = %14
  %18 = load i16*, i16** %5, align 8
  %19 = load i32, i32* %9, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i16, i16* %18, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i32
  store i32 %23, i32* %10, align 4
  %24 = load i8*, i8** %7, align 8
  %25 = load i32, i32* %9, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %24, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  store i32 %29, i32* %12, align 4
  %30 = load i32, i32* %10, align 4
  %31 = icmp sge i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %17
  %33 = load i32, i32* %10, align 4
  br label %37

34:                                               ; preds = %17
  %35 = load i32, i32* %10, align 4
  %36 = sub nsw i32 0, %35
  br label %37

37:                                               ; preds = %34, %32
  %38 = phi i32 [ %33, %32 ], [ %36, %34 ]
  %39 = mul nsw i32 32, %38
  %40 = load i32, i32* %12, align 4
  %41 = ashr i32 %40, 1
  %42 = add nsw i32 %39, %41
  %43 = load i32, i32* %12, align 4
  %44 = sdiv i32 %42, %43
  store i32 %44, i32* %11, align 4
  %45 = load i32, i32* %8, align 4
  %46 = mul nsw i32 2, %45
  %47 = load i32, i32* %11, align 4
  %48 = sdiv i32 %47, %46
  store i32 %48, i32* %11, align 4
  %49 = load i32, i32* %11, align 4
  %50 = icmp sgt i32 %49, 255
  br i1 %50, label %51, label %61

51:                                               ; preds = %37
  %52 = load i32, i32* @mpeg1, align 4
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  store i32 255, i32* %11, align 4
  br label %60

55:                                               ; preds = %51
  %56 = load i32, i32* %11, align 4
  %57 = icmp sgt i32 %56, 2047
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  store i32 2047, i32* %11, align 4
  br label %59

59:                                               ; preds = %58, %55
  br label %60

60:                                               ; preds = %59, %54
  br label %61

61:                                               ; preds = %60, %37
  %62 = load i32, i32* %10, align 4
  %63 = icmp sge i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %61
  %65 = load i32, i32* %11, align 4
  br label %69

66:                                               ; preds = %61
  %67 = load i32, i32* %11, align 4
  %68 = sub nsw i32 0, %67
  br label %69

69:                                               ; preds = %66, %64
  %70 = phi i32 [ %65, %64 ], [ %68, %66 ]
  %71 = trunc i32 %70 to i16
  %72 = load i16*, i16** %6, align 8
  %73 = load i32, i32* %9, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i16, i16* %72, i64 %74
  store i16 %71, i16* %75, align 2
  %76 = sext i16 %71 to i32
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %69
  store i32 1, i32* %13, align 4
  br label %79

79:                                               ; preds = %78, %69
  br label %80

80:                                               ; preds = %79
  %81 = load i32, i32* %9, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %9, align 4
  br label %14

83:                                               ; preds = %14
  %84 = load i32, i32* %13, align 4
  ret i32 %84
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @iquant_intra(i16* %0, i16* %1, i32 %2, i8* %3, i32 %4) #0 {
  %6 = alloca i16*, align 8
  %7 = alloca i16*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i16* %0, i16** %6, align 8
  store i16* %1, i16** %7, align 8
  store i32 %2, i32* %8, align 4
  store i8* %3, i8** %9, align 8
  store i32 %4, i32* %10, align 4
  %14 = load i32, i32* @mpeg1, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %5
  %17 = load i16*, i16** %6, align 8
  %18 = load i16*, i16** %7, align 8
  %19 = load i32, i32* %8, align 4
  %20 = load i8*, i8** %9, align 8
  %21 = load i32, i32* %10, align 4
  call void @iquant1_intra(i16* %17, i16* %18, i32 %19, i8* %20, i32 %21)
  br label %90

22:                                               ; preds = %5
  %23 = load i16*, i16** %6, align 8
  %24 = getelementptr inbounds i16, i16* %23, i64 0
  %25 = load i16, i16* %24, align 2
  %26 = sext i16 %25 to i32
  %27 = load i32, i32* %8, align 4
  %28 = sub nsw i32 3, %27
  %29 = shl i32 %26, %28
  %30 = trunc i32 %29 to i16
  %31 = load i16*, i16** %7, align 8
  %32 = getelementptr inbounds i16, i16* %31, i64 0
  store i16 %30, i16* %32, align 2
  %33 = sext i16 %30 to i32
  store i32 %33, i32* %13, align 4
  store i32 1, i32* %11, align 4
  br label %34

34:                                               ; preds = %75, %22
  %35 = load i32, i32* %11, align 4
  %36 = icmp slt i32 %35, 64
  br i1 %36, label %37, label %78

37:                                               ; preds = %34
  %38 = load i16*, i16** %6, align 8
  %39 = load i32, i32* %11, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i16, i16* %38, i64 %40
  %42 = load i16, i16* %41, align 2
  %43 = sext i16 %42 to i32
  %44 = load i8*, i8** %9, align 8
  %45 = load i32, i32* %11, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = mul nsw i32 %43, %49
  %51 = load i32, i32* %10, align 4
  %52 = mul nsw i32 %50, %51
  %53 = sdiv i32 %52, 16
  store i32 %53, i32* %12, align 4
  %54 = load i32, i32* %12, align 4
  %55 = icmp sgt i32 %54, 2047
  br i1 %55, label %56, label %57

56:                                               ; preds = %37
  br label %65

57:                                               ; preds = %37
  %58 = load i32, i32* %12, align 4
  %59 = icmp slt i32 %58, -2048
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  br label %63

61:                                               ; preds = %57
  %62 = load i32, i32* %12, align 4
  br label %63

63:                                               ; preds = %61, %60
  %64 = phi i32 [ -2048, %60 ], [ %62, %61 ]
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ 2047, %56 ], [ %64, %63 ]
  %67 = trunc i32 %66 to i16
  %68 = load i16*, i16** %7, align 8
  %69 = load i32, i32* %11, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i16, i16* %68, i64 %70
  store i16 %67, i16* %71, align 2
  %72 = sext i16 %67 to i32
  %73 = load i32, i32* %13, align 4
  %74 = add nsw i32 %73, %72
  store i32 %74, i32* %13, align 4
  br label %75

75:                                               ; preds = %65
  %76 = load i32, i32* %11, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %11, align 4
  br label %34

78:                                               ; preds = %34
  %79 = load i32, i32* %13, align 4
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %89

82:                                               ; preds = %78
  %83 = load i16*, i16** %7, align 8
  %84 = getelementptr inbounds i16, i16* %83, i64 63
  %85 = load i16, i16* %84, align 2
  %86 = sext i16 %85 to i32
  %87 = xor i32 %86, 1
  %88 = trunc i32 %87 to i16
  store i16 %88, i16* %84, align 2
  br label %89

89:                                               ; preds = %82, %78
  br label %90

90:                                               ; preds = %89, %16
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @iquant1_intra(i16* %0, i16* %1, i32 %2, i8* %3, i32 %4) #0 {
  %6 = alloca i16*, align 8
  %7 = alloca i16*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i16* %0, i16** %6, align 8
  store i16* %1, i16** %7, align 8
  store i32 %2, i32* %8, align 4
  store i8* %3, i8** %9, align 8
  store i32 %4, i32* %10, align 4
  %13 = load i16*, i16** %6, align 8
  %14 = getelementptr inbounds i16, i16* %13, i64 0
  %15 = load i16, i16* %14, align 2
  %16 = sext i16 %15 to i32
  %17 = load i32, i32* %8, align 4
  %18 = sub nsw i32 3, %17
  %19 = shl i32 %16, %18
  %20 = trunc i32 %19 to i16
  %21 = load i16*, i16** %7, align 8
  %22 = getelementptr inbounds i16, i16* %21, i64 0
  store i16 %20, i16* %22, align 2
  store i32 1, i32* %11, align 4
  br label %23

23:                                               ; preds = %75, %5
  %24 = load i32, i32* %11, align 4
  %25 = icmp slt i32 %24, 64
  br i1 %25, label %26, label %78

26:                                               ; preds = %23
  %27 = load i16*, i16** %6, align 8
  %28 = load i32, i32* %11, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i16, i16* %27, i64 %29
  %31 = load i16, i16* %30, align 2
  %32 = sext i16 %31 to i32
  %33 = load i8*, i8** %9, align 8
  %34 = load i32, i32* %11, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %33, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = mul nsw i32 %32, %38
  %40 = load i32, i32* %10, align 4
  %41 = mul nsw i32 %39, %40
  %42 = sdiv i32 %41, 16
  store i32 %42, i32* %12, align 4
  %43 = load i32, i32* %12, align 4
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %56

46:                                               ; preds = %26
  %47 = load i32, i32* %12, align 4
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %56

49:                                               ; preds = %46
  %50 = load i32, i32* %12, align 4
  %51 = icmp sgt i32 %50, 0
  %52 = zext i1 %51 to i64
  %53 = select i1 %51, i32 -1, i32 1
  %54 = load i32, i32* %12, align 4
  %55 = add nsw i32 %54, %53
  store i32 %55, i32* %12, align 4
  br label %56

56:                                               ; preds = %49, %46, %26
  %57 = load i32, i32* %12, align 4
  %58 = icmp sgt i32 %57, 2047
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  br label %68

60:                                               ; preds = %56
  %61 = load i32, i32* %12, align 4
  %62 = icmp slt i32 %61, -2048
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  br label %66

64:                                               ; preds = %60
  %65 = load i32, i32* %12, align 4
  br label %66

66:                                               ; preds = %64, %63
  %67 = phi i32 [ -2048, %63 ], [ %65, %64 ]
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ 2047, %59 ], [ %67, %66 ]
  %70 = trunc i32 %69 to i16
  %71 = load i16*, i16** %7, align 8
  %72 = load i32, i32* %11, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i16, i16* %71, i64 %73
  store i16 %70, i16* %74, align 2
  br label %75

75:                                               ; preds = %68
  %76 = load i32, i32* %11, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %11, align 4
  br label %23

78:                                               ; preds = %23
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @iquant_non_intra(i16* %0, i16* %1, i8* %2, i32 %3) #0 {
  %5 = alloca i16*, align 8
  %6 = alloca i16*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i16* %0, i16** %5, align 8
  store i16* %1, i16** %6, align 8
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  %12 = load i32, i32* @mpeg1, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %4
  %15 = load i16*, i16** %5, align 8
  %16 = load i16*, i16** %6, align 8
  %17 = load i8*, i8** %7, align 8
  %18 = load i32, i32* %8, align 4
  call void @iquant1_non_intra(i16* %15, i16* %16, i8* %17, i32 %18)
  br label %87

19:                                               ; preds = %4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %9, align 4
  br label %20

20:                                               ; preds = %72, %19
  %21 = load i32, i32* %9, align 4
  %22 = icmp slt i32 %21, 64
  br i1 %22, label %23, label %75

23:                                               ; preds = %20
  %24 = load i16*, i16** %5, align 8
  %25 = load i32, i32* %9, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %24, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = sext i16 %28 to i32
  store i32 %29, i32* %10, align 4
  %30 = load i32, i32* %10, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %50

32:                                               ; preds = %23
  %33 = load i32, i32* %10, align 4
  %34 = mul nsw i32 2, %33
  %35 = load i32, i32* %10, align 4
  %36 = icmp sgt i32 %35, 0
  %37 = zext i1 %36 to i64
  %38 = select i1 %36, i32 1, i32 -1
  %39 = add nsw i32 %34, %38
  %40 = load i8*, i8** %7, align 8
  %41 = load i32, i32* %9, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = mul nsw i32 %39, %45
  %47 = load i32, i32* %8, align 4
  %48 = mul nsw i32 %46, %47
  %49 = sdiv i32 %48, 32
  store i32 %49, i32* %10, align 4
  br label %50

50:                                               ; preds = %32, %23
  %51 = load i32, i32* %10, align 4
  %52 = icmp sgt i32 %51, 2047
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  br label %62

54:                                               ; preds = %50
  %55 = load i32, i32* %10, align 4
  %56 = icmp slt i32 %55, -2048
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  br label %60

58:                                               ; preds = %54
  %59 = load i32, i32* %10, align 4
  br label %60

60:                                               ; preds = %58, %57
  %61 = phi i32 [ -2048, %57 ], [ %59, %58 ]
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ 2047, %53 ], [ %61, %60 ]
  %64 = trunc i32 %63 to i16
  %65 = load i16*, i16** %6, align 8
  %66 = load i32, i32* %9, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i16, i16* %65, i64 %67
  store i16 %64, i16* %68, align 2
  %69 = sext i16 %64 to i32
  %70 = load i32, i32* %11, align 4
  %71 = add nsw i32 %70, %69
  store i32 %71, i32* %11, align 4
  br label %72

72:                                               ; preds = %62
  %73 = load i32, i32* %9, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %9, align 4
  br label %20

75:                                               ; preds = %20
  %76 = load i32, i32* %11, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %86

79:                                               ; preds = %75
  %80 = load i16*, i16** %6, align 8
  %81 = getelementptr inbounds i16, i16* %80, i64 63
  %82 = load i16, i16* %81, align 2
  %83 = sext i16 %82 to i32
  %84 = xor i32 %83, 1
  %85 = trunc i32 %84 to i16
  store i16 %85, i16* %81, align 2
  br label %86

86:                                               ; preds = %79, %75
  br label %87

87:                                               ; preds = %86, %14
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @iquant1_non_intra(i16* %0, i16* %1, i8* %2, i32 %3) #0 {
  %5 = alloca i16*, align 8
  %6 = alloca i16*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i16* %0, i16** %5, align 8
  store i16* %1, i16** %6, align 8
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  store i32 0, i32* %9, align 4
  br label %11

11:                                               ; preds = %74, %4
  %12 = load i32, i32* %9, align 4
  %13 = icmp slt i32 %12, 64
  br i1 %13, label %14, label %77

14:                                               ; preds = %11
  %15 = load i16*, i16** %5, align 8
  %16 = load i32, i32* %9, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i16, i16* %15, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = sext i16 %19 to i32
  store i32 %20, i32* %10, align 4
  %21 = load i32, i32* %10, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %55

23:                                               ; preds = %14
  %24 = load i32, i32* %10, align 4
  %25 = mul nsw i32 2, %24
  %26 = load i32, i32* %10, align 4
  %27 = icmp sgt i32 %26, 0
  %28 = zext i1 %27 to i64
  %29 = select i1 %27, i32 1, i32 -1
  %30 = add nsw i32 %25, %29
  %31 = load i8*, i8** %7, align 8
  %32 = load i32, i32* %9, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %31, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = mul nsw i32 %30, %36
  %38 = load i32, i32* %8, align 4
  %39 = mul nsw i32 %37, %38
  %40 = sdiv i32 %39, 32
  store i32 %40, i32* %10, align 4
  %41 = load i32, i32* %10, align 4
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %54

44:                                               ; preds = %23
  %45 = load i32, i32* %10, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %54

47:                                               ; preds = %44
  %48 = load i32, i32* %10, align 4
  %49 = icmp sgt i32 %48, 0
  %50 = zext i1 %49 to i64
  %51 = select i1 %49, i32 -1, i32 1
  %52 = load i32, i32* %10, align 4
  %53 = add nsw i32 %52, %51
  store i32 %53, i32* %10, align 4
  br label %54

54:                                               ; preds = %47, %44, %23
  br label %55

55:                                               ; preds = %54, %14
  %56 = load i32, i32* %10, align 4
  %57 = icmp sgt i32 %56, 2047
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  br label %67

59:                                               ; preds = %55
  %60 = load i32, i32* %10, align 4
  %61 = icmp slt i32 %60, -2048
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  br label %65

63:                                               ; preds = %59
  %64 = load i32, i32* %10, align 4
  br label %65

65:                                               ; preds = %63, %62
  %66 = phi i32 [ -2048, %62 ], [ %64, %63 ]
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ 2047, %58 ], [ %66, %65 ]
  %69 = trunc i32 %68 to i16
  %70 = load i16*, i16** %6, align 8
  %71 = load i32, i32* %9, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i16, i16* %70, i64 %72
  store i16 %69, i16* %73, align 2
  br label %74

74:                                               ; preds = %67
  %75 = load i32, i32* %9, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %9, align 4
  br label %11

77:                                               ; preds = %11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rc_init_seq() #0 {
  %1 = load i32, i32* @r, align 4
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %11

3:                                                ; preds = %0
  %4 = load double, double* @bit_rate, align 8
  %5 = fmul double 2.000000e+00, %4
  %6 = load double, double* @frame_rate, align 8
  %7 = fdiv double %5, %6
  %8 = fadd double %7, 5.000000e-01
  %9 = call double @llvm.floor.f64(double %8)
  %10 = fptosi double %9 to i32
  store i32 %10, i32* @r, align 4
  br label %11

11:                                               ; preds = %3, %0
  %12 = load double, double* @avg_act, align 8
  %13 = fcmp oeq double %12, 0.000000e+00
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  store double 4.000000e+02, double* @avg_act, align 8
  br label %15

15:                                               ; preds = %14, %11
  store i32 0, i32* @R, align 4
  %16 = load i32, i32* @Xi, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %25

18:                                               ; preds = %15
  %19 = load double, double* @bit_rate, align 8
  %20 = fmul double 1.600000e+02, %19
  %21 = fdiv double %20, 1.150000e+02
  %22 = fadd double %21, 5.000000e-01
  %23 = call double @llvm.floor.f64(double %22)
  %24 = fptosi double %23 to i32
  store i32 %24, i32* @Xi, align 4
  br label %25

25:                                               ; preds = %18, %15
  %26 = load i32, i32* @Xp, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %35

28:                                               ; preds = %25
  %29 = load double, double* @bit_rate, align 8
  %30 = fmul double 6.000000e+01, %29
  %31 = fdiv double %30, 1.150000e+02
  %32 = fadd double %31, 5.000000e-01
  %33 = call double @llvm.floor.f64(double %32)
  %34 = fptosi double %33 to i32
  store i32 %34, i32* @Xp, align 4
  br label %35

35:                                               ; preds = %28, %25
  %36 = load i32, i32* @Xb, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %35
  %39 = load double, double* @bit_rate, align 8
  %40 = fmul double 4.200000e+01, %39
  %41 = fdiv double %40, 1.150000e+02
  %42 = fadd double %41, 5.000000e-01
  %43 = call double @llvm.floor.f64(double %42)
  %44 = fptosi double %43 to i32
  store i32 %44, i32* @Xb, align 4
  br label %45

45:                                               ; preds = %38, %35
  %46 = load i32, i32* @d0i, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %56

48:                                               ; preds = %45
  %49 = load i32, i32* @r, align 4
  %50 = sitofp i32 %49 to double
  %51 = fmul double 1.000000e+01, %50
  %52 = fdiv double %51, 3.100000e+01
  %53 = fadd double %52, 5.000000e-01
  %54 = call double @llvm.floor.f64(double %53)
  %55 = fptosi double %54 to i32
  store i32 %55, i32* @d0i, align 4
  br label %56

56:                                               ; preds = %48, %45
  %57 = load i32, i32* @d0p, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %67

59:                                               ; preds = %56
  %60 = load i32, i32* @r, align 4
  %61 = sitofp i32 %60 to double
  %62 = fmul double 1.000000e+01, %61
  %63 = fdiv double %62, 3.100000e+01
  %64 = fadd double %63, 5.000000e-01
  %65 = call double @llvm.floor.f64(double %64)
  %66 = fptosi double %65 to i32
  store i32 %66, i32* @d0p, align 4
  br label %67

67:                                               ; preds = %59, %56
  %68 = load i32, i32* @d0b, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %78

70:                                               ; preds = %67
  %71 = load i32, i32* @r, align 4
  %72 = sitofp i32 %71 to double
  %73 = fmul double 1.400000e+01, %72
  %74 = fdiv double %73, 3.100000e+01
  %75 = fadd double %74, 5.000000e-01
  %76 = call double @llvm.floor.f64(double %75)
  %77 = fptosi double %76 to i32
  store i32 %77, i32* @d0b, align 4
  br label %78

78:                                               ; preds = %70, %67
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.171, i64 0, i64 0))
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %82 = load i32, i32* @Xi, align 4
  %83 = load i32, i32* @Xp, align 4
  %84 = load i32, i32* @Xb, align 4
  %85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %81, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1.172, i64 0, i64 0), i32 %82, i32 %83, i32 %84)
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %87 = load i32, i32* @r, align 4
  %88 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.173, i64 0, i64 0), i32 %87)
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %90 = load i32, i32* @d0i, align 4
  %91 = load i32, i32* @d0p, align 4
  %92 = load i32, i32* @d0b, align 4
  %93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.3.174, i64 0, i64 0), i32 %90, i32 %91, i32 %92)
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %95 = load double, double* @avg_act, align 8
  %96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4.175, i64 0, i64 0), double %95)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rc_init_GOP(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = add nsw i32 1, %5
  %7 = load i32, i32* %4, align 4
  %8 = add nsw i32 %6, %7
  %9 = sitofp i32 %8 to double
  %10 = load double, double* @bit_rate, align 8
  %11 = fmul double %9, %10
  %12 = load double, double* @frame_rate, align 8
  %13 = fdiv double %11, %12
  %14 = fadd double %13, 5.000000e-01
  %15 = call double @llvm.floor.f64(double %14)
  %16 = fptosi double %15 to i32
  %17 = load i32, i32* @R, align 4
  %18 = add nsw i32 %17, %16
  store i32 %18, i32* @R, align 4
  %19 = load i32, i32* @fieldpic, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %2
  %22 = load i32, i32* %3, align 4
  %23 = mul nsw i32 2, %22
  %24 = add nsw i32 %23, 1
  br label %27

25:                                               ; preds = %2
  %26 = load i32, i32* %3, align 4
  br label %27

27:                                               ; preds = %25, %21
  %28 = phi i32 [ %24, %21 ], [ %26, %25 ]
  store i32 %28, i32* @Np, align 4
  %29 = load i32, i32* @fieldpic, align 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = load i32, i32* %4, align 4
  %33 = mul nsw i32 2, %32
  br label %36

34:                                               ; preds = %27
  %35 = load i32, i32* %4, align 4
  br label %36

36:                                               ; preds = %34, %31
  %37 = phi i32 [ %33, %31 ], [ %35, %34 ]
  store i32 %37, i32* @Nb, align 4
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.178, i64 0, i64 0))
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %41 = load i32, i32* @R, align 4
  %42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.179, i64 0, i64 0), i32 %41)
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %44 = load i32, i32* @Np, align 4
  %45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.180, i64 0, i64 0), i32 %44)
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %47 = load i32, i32* @Nb, align 4
  %48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.181, i64 0, i64 0), i32 %47)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rc_init_pict(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca double, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i32, i32* @pict_type, align 4
  switch i32 %4, label %73 [
    i32 1, label %5
    i32 2, label %31
    i32 3, label %52
  ]

5:                                                ; preds = %1
  %6 = load i32, i32* @R, align 4
  %7 = sitofp i32 %6 to double
  %8 = load i32, i32* @Np, align 4
  %9 = load i32, i32* @Xp, align 4
  %10 = mul nsw i32 %8, %9
  %11 = sitofp i32 %10 to double
  %12 = load i32, i32* @Xi, align 4
  %13 = sitofp i32 %12 to double
  %14 = fmul double %13, 1.000000e+00
  %15 = fdiv double %11, %14
  %16 = fadd double 1.000000e+00, %15
  %17 = load i32, i32* @Nb, align 4
  %18 = load i32, i32* @Xb, align 4
  %19 = mul nsw i32 %17, %18
  %20 = sitofp i32 %19 to double
  %21 = load i32, i32* @Xi, align 4
  %22 = sitofp i32 %21 to double
  %23 = fmul double %22, 1.400000e+00
  %24 = fdiv double %20, %23
  %25 = fadd double %16, %24
  %26 = fdiv double %7, %25
  %27 = fadd double %26, 5.000000e-01
  %28 = call double @llvm.floor.f64(double %27)
  %29 = fptosi double %28 to i32
  store i32 %29, i32* @T, align 4
  %30 = load i32, i32* @d0i, align 4
  store i32 %30, i32* @d, align 4
  br label %73

31:                                               ; preds = %1
  %32 = load i32, i32* @R, align 4
  %33 = sitofp i32 %32 to double
  %34 = load i32, i32* @Np, align 4
  %35 = sitofp i32 %34 to double
  %36 = load i32, i32* @Nb, align 4
  %37 = sitofp i32 %36 to double
  %38 = fmul double %37, 1.000000e+00
  %39 = load i32, i32* @Xb, align 4
  %40 = sitofp i32 %39 to double
  %41 = fmul double %38, %40
  %42 = load i32, i32* @Xp, align 4
  %43 = sitofp i32 %42 to double
  %44 = fmul double 1.400000e+00, %43
  %45 = fdiv double %41, %44
  %46 = fadd double %35, %45
  %47 = fdiv double %33, %46
  %48 = fadd double %47, 5.000000e-01
  %49 = call double @llvm.floor.f64(double %48)
  %50 = fptosi double %49 to i32
  store i32 %50, i32* @T, align 4
  %51 = load i32, i32* @d0p, align 4
  store i32 %51, i32* @d, align 4
  br label %73

52:                                               ; preds = %1
  %53 = load i32, i32* @R, align 4
  %54 = sitofp i32 %53 to double
  %55 = load i32, i32* @Nb, align 4
  %56 = sitofp i32 %55 to double
  %57 = load i32, i32* @Np, align 4
  %58 = sitofp i32 %57 to double
  %59 = fmul double %58, 1.400000e+00
  %60 = load i32, i32* @Xp, align 4
  %61 = sitofp i32 %60 to double
  %62 = fmul double %59, %61
  %63 = load i32, i32* @Xb, align 4
  %64 = sitofp i32 %63 to double
  %65 = fmul double 1.000000e+00, %64
  %66 = fdiv double %62, %65
  %67 = fadd double %56, %66
  %68 = fdiv double %54, %67
  %69 = fadd double %68, 5.000000e-01
  %70 = call double @llvm.floor.f64(double %69)
  %71 = fptosi double %70 to i32
  store i32 %71, i32* @T, align 4
  %72 = load i32, i32* @d0b, align 4
  store i32 %72, i32* @d, align 4
  br label %73

73:                                               ; preds = %52, %31, %5, %1
  %74 = load double, double* @bit_rate, align 8
  %75 = load double, double* @frame_rate, align 8
  %76 = fmul double 8.000000e+00, %75
  %77 = fdiv double %74, %76
  %78 = fadd double %77, 5.000000e-01
  %79 = call double @llvm.floor.f64(double %78)
  %80 = fptosi double %79 to i32
  %81 = sitofp i32 %80 to double
  store double %81, double* %3, align 8
  %82 = load i32, i32* @T, align 4
  %83 = sitofp i32 %82 to double
  %84 = load double, double* %3, align 8
  %85 = fcmp olt double %83, %84
  br i1 %85, label %86, label %89

86:                                               ; preds = %73
  %87 = load double, double* %3, align 8
  %88 = fptosi double %87 to i32
  store i32 %88, i32* @T, align 4
  br label %89

89:                                               ; preds = %86, %73
  %90 = call i32 @bitcount()
  store i32 %90, i32* @S, align 4
  store i32 0, i32* @Q, align 4
  %91 = load i8*, i8** %2, align 8
  call void @calc_actj(i8* %91)
  store double 0.000000e+00, double* @actsum, align 8
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.184, i64 0, i64 0))
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %95 = load i32, i32* @T, align 4
  %96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10.185, i64 0, i64 0), i32 %95)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_actj(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  store i8* %0, i8** %2, align 8
  store i32 0, i32* %5, align 4
  store i32 0, i32* %4, align 4
  br label %9

9:                                                ; preds = %145, %1
  %10 = load i32, i32* %4, align 4
  %11 = load i32, i32* @height2, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %148

13:                                               ; preds = %9
  store i32 0, i32* %3, align 4
  br label %14

14:                                               ; preds = %141, %13
  %15 = load i32, i32* %3, align 4
  %16 = load i32, i32* @width, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %144

18:                                               ; preds = %14
  %19 = load i8*, i8** %2, align 8
  %20 = load i32, i32* @pict_struct, align 4
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = load i32, i32* @width, align 4
  br label %25

24:                                               ; preds = %18
  br label %25

25:                                               ; preds = %24, %22
  %26 = phi i32 [ %23, %22 ], [ 0, %24 ]
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %19, i64 %27
  %29 = load i32, i32* %3, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %28, i64 %30
  %32 = load i32, i32* @width2, align 4
  %33 = load i32, i32* %4, align 4
  %34 = mul nsw i32 %32, %33
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %31, i64 %35
  store i8* %36, i8** %6, align 8
  %37 = load i8*, i8** %6, align 8
  %38 = load i32, i32* @width2, align 4
  %39 = call double @var_sblk(i8* %37, i32 %38)
  store double %39, double* %7, align 8
  %40 = load i8*, i8** %6, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 8
  %42 = load i32, i32* @width2, align 4
  %43 = call double @var_sblk(i8* %41, i32 %42)
  store double %43, double* %8, align 8
  %44 = load double, double* %8, align 8
  %45 = load double, double* %7, align 8
  %46 = fcmp olt double %44, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %25
  %48 = load double, double* %8, align 8
  store double %48, double* %7, align 8
  br label %49

49:                                               ; preds = %47, %25
  %50 = load i8*, i8** %6, align 8
  %51 = load i32, i32* @width2, align 4
  %52 = mul nsw i32 8, %51
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %50, i64 %53
  %55 = load i32, i32* @width2, align 4
  %56 = call double @var_sblk(i8* %54, i32 %55)
  store double %56, double* %8, align 8
  %57 = load double, double* %8, align 8
  %58 = load double, double* %7, align 8
  %59 = fcmp olt double %57, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %49
  %61 = load double, double* %8, align 8
  store double %61, double* %7, align 8
  br label %62

62:                                               ; preds = %60, %49
  %63 = load i8*, i8** %6, align 8
  %64 = load i32, i32* @width2, align 4
  %65 = mul nsw i32 8, %64
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %63, i64 %66
  %68 = getelementptr inbounds i8, i8* %67, i64 8
  %69 = load i32, i32* @width2, align 4
  %70 = call double @var_sblk(i8* %68, i32 %69)
  store double %70, double* %8, align 8
  %71 = load double, double* %8, align 8
  %72 = load double, double* %7, align 8
  %73 = fcmp olt double %71, %72
  br i1 %73, label %74, label %76

74:                                               ; preds = %62
  %75 = load double, double* %8, align 8
  store double %75, double* %7, align 8
  br label %76

76:                                               ; preds = %74, %62
  %77 = load i32, i32* @fieldpic, align 4
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %131, label %79

79:                                               ; preds = %76
  %80 = load i32, i32* @prog_seq, align 4
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %131, label %82

82:                                               ; preds = %79
  %83 = load i8*, i8** %6, align 8
  %84 = load i32, i32* @width, align 4
  %85 = shl i32 %84, 1
  %86 = call double @var_sblk(i8* %83, i32 %85)
  store double %86, double* %8, align 8
  %87 = load double, double* %8, align 8
  %88 = load double, double* %7, align 8
  %89 = fcmp olt double %87, %88
  br i1 %89, label %90, label %92

90:                                               ; preds = %82
  %91 = load double, double* %8, align 8
  store double %91, double* %7, align 8
  br label %92

92:                                               ; preds = %90, %82
  %93 = load i8*, i8** %6, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 8
  %95 = load i32, i32* @width, align 4
  %96 = shl i32 %95, 1
  %97 = call double @var_sblk(i8* %94, i32 %96)
  store double %97, double* %8, align 8
  %98 = load double, double* %8, align 8
  %99 = load double, double* %7, align 8
  %100 = fcmp olt double %98, %99
  br i1 %100, label %101, label %103

101:                                              ; preds = %92
  %102 = load double, double* %8, align 8
  store double %102, double* %7, align 8
  br label %103

103:                                              ; preds = %101, %92
  %104 = load i8*, i8** %6, align 8
  %105 = load i32, i32* @width, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i8, i8* %104, i64 %106
  %108 = load i32, i32* @width, align 4
  %109 = shl i32 %108, 1
  %110 = call double @var_sblk(i8* %107, i32 %109)
  store double %110, double* %8, align 8
  %111 = load double, double* %8, align 8
  %112 = load double, double* %7, align 8
  %113 = fcmp olt double %111, %112
  br i1 %113, label %114, label %116

114:                                              ; preds = %103
  %115 = load double, double* %8, align 8
  store double %115, double* %7, align 8
  br label %116

116:                                              ; preds = %114, %103
  %117 = load i8*, i8** %6, align 8
  %118 = load i32, i32* @width, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8, i8* %117, i64 %119
  %121 = getelementptr inbounds i8, i8* %120, i64 8
  %122 = load i32, i32* @width, align 4
  %123 = shl i32 %122, 1
  %124 = call double @var_sblk(i8* %121, i32 %123)
  store double %124, double* %8, align 8
  %125 = load double, double* %8, align 8
  %126 = load double, double* %7, align 8
  %127 = fcmp olt double %125, %126
  br i1 %127, label %128, label %130

128:                                              ; preds = %116
  %129 = load double, double* %8, align 8
  store double %129, double* %7, align 8
  br label %130

130:                                              ; preds = %128, %116
  br label %131

131:                                              ; preds = %130, %79, %76
  %132 = load double, double* %7, align 8
  %133 = fadd double %132, 1.000000e+00
  store double %133, double* %7, align 8
  %134 = load double, double* %7, align 8
  %135 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %136 = load i32, i32* %5, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %5, align 4
  %138 = sext i32 %136 to i64
  %139 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %135, i64 %138
  %140 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %139, i32 0, i32 9
  store double %134, double* %140, align 8
  br label %141

141:                                              ; preds = %131
  %142 = load i32, i32* %3, align 4
  %143 = add nsw i32 %142, 16
  store i32 %143, i32* %3, align 4
  br label %14

144:                                              ; preds = %14
  br label %145

145:                                              ; preds = %144
  %146 = load i32, i32* %4, align 4
  %147 = add nsw i32 %146, 16
  store i32 %147, i32* %4, align 4
  br label %9

148:                                              ; preds = %9
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal double @var_sblk(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %39, %2
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 8
  br i1 %12, label %13, label %42

13:                                               ; preds = %10
  store i32 0, i32* %5, align 4
  br label %14

14:                                               ; preds = %30, %13
  %15 = load i32, i32* %5, align 4
  %16 = icmp slt i32 %15, 8
  br i1 %16, label %17, label %33

17:                                               ; preds = %14
  %18 = load i8*, i8** %3, align 8
  %19 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %19, i8** %3, align 8
  %20 = load i8, i8* %18, align 1
  %21 = zext i8 %20 to i32
  store i32 %21, i32* %7, align 4
  %22 = load i32, i32* %7, align 4
  %23 = load i32, i32* %8, align 4
  %24 = add i32 %23, %22
  store i32 %24, i32* %8, align 4
  %25 = load i32, i32* %7, align 4
  %26 = load i32, i32* %7, align 4
  %27 = mul i32 %25, %26
  %28 = load i32, i32* %9, align 4
  %29 = add i32 %28, %27
  store i32 %29, i32* %9, align 4
  br label %30

30:                                               ; preds = %17
  %31 = load i32, i32* %5, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %5, align 4
  br label %14

33:                                               ; preds = %14
  %34 = load i32, i32* %4, align 4
  %35 = sub nsw i32 %34, 8
  %36 = load i8*, i8** %3, align 8
  %37 = sext i32 %35 to i64
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  store i8* %38, i8** %3, align 8
  br label %39

39:                                               ; preds = %33
  %40 = load i32, i32* %6, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %6, align 4
  br label %10

42:                                               ; preds = %10
  %43 = load i32, i32* %9, align 4
  %44 = uitofp i32 %43 to double
  %45 = fdiv double %44, 6.400000e+01
  %46 = load i32, i32* %8, align 4
  %47 = uitofp i32 %46 to double
  %48 = fdiv double %47, 6.400000e+01
  %49 = load i32, i32* %8, align 4
  %50 = uitofp i32 %49 to double
  %51 = fdiv double %50, 6.400000e+01
  %52 = fmul double %48, %51
  %53 = fsub double %45, %52
  ret double %53
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rc_update_pict() #0 {
  %1 = alloca double, align 8
  %2 = call i32 @bitcount()
  %3 = load i32, i32* @S, align 4
  %4 = sub nsw i32 %2, %3
  store i32 %4, i32* @S, align 4
  %5 = load i32, i32* @S, align 4
  %6 = load i32, i32* @R, align 4
  %7 = sub nsw i32 %6, %5
  store i32 %7, i32* @R, align 4
  %8 = load i32, i32* @S, align 4
  %9 = sitofp i32 %8 to double
  %10 = load i32, i32* @Q, align 4
  %11 = sitofp i32 %10 to double
  %12 = fmul double 5.000000e-01, %11
  %13 = load i32, i32* @mb_width, align 4
  %14 = load i32, i32* @mb_height2, align 4
  %15 = mul nsw i32 %13, %14
  %16 = sitofp i32 %15 to double
  %17 = fdiv double %12, %16
  %18 = fmul double %9, %17
  %19 = fadd double %18, 5.000000e-01
  %20 = call double @llvm.floor.f64(double %19)
  %21 = fptosi double %20 to i32
  %22 = sitofp i32 %21 to double
  store double %22, double* %1, align 8
  %23 = load i32, i32* @S, align 4
  %24 = load i32, i32* @T, align 4
  %25 = sub nsw i32 %23, %24
  %26 = load i32, i32* @d, align 4
  %27 = add nsw i32 %26, %25
  store i32 %27, i32* @d, align 4
  %28 = load double, double* @actsum, align 8
  %29 = load i32, i32* @mb_width, align 4
  %30 = load i32, i32* @mb_height2, align 4
  %31 = mul nsw i32 %29, %30
  %32 = sitofp i32 %31 to double
  %33 = fdiv double %28, %32
  store double %33, double* @avg_act, align 8
  %34 = load i32, i32* @pict_type, align 4
  switch i32 %34, label %51 [
    i32 1, label %35
    i32 2, label %39
    i32 3, label %45
  ]

35:                                               ; preds = %0
  %36 = load double, double* %1, align 8
  %37 = fptosi double %36 to i32
  store i32 %37, i32* @Xi, align 4
  %38 = load i32, i32* @d, align 4
  store i32 %38, i32* @d0i, align 4
  br label %51

39:                                               ; preds = %0
  %40 = load double, double* %1, align 8
  %41 = fptosi double %40 to i32
  store i32 %41, i32* @Xp, align 4
  %42 = load i32, i32* @d, align 4
  store i32 %42, i32* @d0p, align 4
  %43 = load i32, i32* @Np, align 4
  %44 = add nsw i32 %43, -1
  store i32 %44, i32* @Np, align 4
  br label %51

45:                                               ; preds = %0
  %46 = load double, double* %1, align 8
  %47 = fptosi double %46 to i32
  store i32 %47, i32* @Xb, align 4
  %48 = load i32, i32* @d, align 4
  store i32 %48, i32* @d0b, align 4
  %49 = load i32, i32* @Nb, align 4
  %50 = add nsw i32 %49, -1
  store i32 %50, i32* @Nb, align 4
  br label %51

51:                                               ; preds = %45, %39, %35, %0
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.188, i64 0, i64 0))
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %55 = load i32, i32* @S, align 4
  %56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %54, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12.189, i64 0, i64 0), i32 %55)
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %58 = load i32, i32* @Q, align 4
  %59 = sitofp i32 %58 to double
  %60 = load i32, i32* @mb_width, align 4
  %61 = load i32, i32* @mb_height2, align 4
  %62 = mul nsw i32 %60, %61
  %63 = sitofp i32 %62 to double
  %64 = fdiv double %59, %63
  %65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13.190, i64 0, i64 0), double %64)
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %67 = load i32, i32* @R, align 4
  %68 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %66, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14.191, i64 0, i64 0), i32 %67)
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %70 = load i32, i32* @Xi, align 4
  %71 = load i32, i32* @Xp, align 4
  %72 = load i32, i32* @Xb, align 4
  %73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %69, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.15.192, i64 0, i64 0), i32 %70, i32 %71, i32 %72)
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %75 = load i32, i32* @d0i, align 4
  %76 = load i32, i32* @d0p, align 4
  %77 = load i32, i32* @d0b, align 4
  %78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.16.193, i64 0, i64 0), i32 %75, i32 %76, i32 %77)
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %80 = load i32, i32* @Np, align 4
  %81 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.17.194, i64 0, i64 0), i32 %80)
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %83 = load i32, i32* @Nb, align 4
  %84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %82, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.18.195, i64 0, i64 0), i32 %83)
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %86 = load double, double* @avg_act, align 8
  %87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %85, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19.196, i64 0, i64 0), double %86)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @rc_start_mb() #0 {
  %1 = alloca i32, align 4
  %2 = load i32, i32* @q_scale_type, align 4
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %4, label %31

4:                                                ; preds = %0
  %5 = load i32, i32* @d, align 4
  %6 = sitofp i32 %5 to double
  %7 = fmul double 2.000000e+00, %6
  %8 = fmul double %7, 3.100000e+01
  %9 = load i32, i32* @r, align 4
  %10 = sitofp i32 %9 to double
  %11 = fdiv double %8, %10
  %12 = fadd double %11, 5.000000e-01
  %13 = call double @llvm.floor.f64(double %12)
  %14 = fptosi double %13 to i32
  store i32 %14, i32* %1, align 4
  %15 = load i32, i32* %1, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %18

17:                                               ; preds = %4
  store i32 1, i32* %1, align 4
  br label %18

18:                                               ; preds = %17, %4
  %19 = load i32, i32* %1, align 4
  %20 = icmp sgt i32 %19, 112
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  store i32 112, i32* %1, align 4
  br label %22

22:                                               ; preds = %21, %18
  %23 = load i32, i32* %1, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [113 x i8], [113 x i8]* @map_non_linear_mquant, i64 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds [32 x i8], [32 x i8]* @non_linear_mquant_table, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  store i32 %30, i32* %1, align 4
  br label %52

31:                                               ; preds = %0
  %32 = load i32, i32* @d, align 4
  %33 = sitofp i32 %32 to double
  %34 = fmul double %33, 3.100000e+01
  %35 = load i32, i32* @r, align 4
  %36 = sitofp i32 %35 to double
  %37 = fdiv double %34, %36
  %38 = fadd double %37, 5.000000e-01
  %39 = call double @llvm.floor.f64(double %38)
  %40 = fptosi double %39 to i32
  store i32 %40, i32* %1, align 4
  %41 = load i32, i32* %1, align 4
  %42 = shl i32 %41, 1
  store i32 %42, i32* %1, align 4
  %43 = load i32, i32* %1, align 4
  %44 = icmp slt i32 %43, 2
  br i1 %44, label %45, label %46

45:                                               ; preds = %31
  store i32 2, i32* %1, align 4
  br label %46

46:                                               ; preds = %45, %31
  %47 = load i32, i32* %1, align 4
  %48 = icmp sgt i32 %47, 62
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  store i32 62, i32* %1, align 4
  br label %50

50:                                               ; preds = %49, %46
  %51 = load i32, i32* %1, align 4
  store i32 %51, i32* @prev_mquant, align 4
  br label %52

52:                                               ; preds = %50, %22
  %53 = load i32, i32* %1, align 4
  ret i32 %53
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @rc_calc_mquant(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  store i32 %0, i32* %2, align 4
  %8 = load i32, i32* @d, align 4
  %9 = call i32 @bitcount()
  %10 = load i32, i32* @S, align 4
  %11 = sub nsw i32 %9, %10
  %12 = add nsw i32 %8, %11
  %13 = load i32, i32* %2, align 4
  %14 = load i32, i32* @T, align 4
  %15 = load i32, i32* @mb_width, align 4
  %16 = load i32, i32* @mb_height2, align 4
  %17 = mul nsw i32 %15, %16
  %18 = sdiv i32 %14, %17
  %19 = mul nsw i32 %13, %18
  %20 = sub nsw i32 %12, %19
  %21 = sitofp i32 %20 to double
  store double %21, double* %4, align 8
  %22 = load double, double* %4, align 8
  %23 = fmul double %22, 3.100000e+01
  %24 = load i32, i32* @r, align 4
  %25 = sitofp i32 %24 to double
  %26 = fdiv double %23, %25
  store double %26, double* %5, align 8
  %27 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %28 = load i32, i32* %2, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %27, i64 %29
  %31 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %30, i32 0, i32 9
  %32 = load double, double* %31, align 8
  store double %32, double* %6, align 8
  %33 = load double, double* %6, align 8
  %34 = load double, double* @actsum, align 8
  %35 = fadd double %34, %33
  store double %35, double* @actsum, align 8
  %36 = load double, double* %6, align 8
  %37 = fmul double 2.000000e+00, %36
  %38 = load double, double* @avg_act, align 8
  %39 = fadd double %37, %38
  %40 = load double, double* %6, align 8
  %41 = load double, double* @avg_act, align 8
  %42 = fmul double 2.000000e+00, %41
  %43 = fadd double %40, %42
  %44 = fdiv double %39, %43
  store double %44, double* %7, align 8
  %45 = load i32, i32* @q_scale_type, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %71

47:                                               ; preds = %1
  %48 = load double, double* %5, align 8
  %49 = fmul double 2.000000e+00, %48
  %50 = load double, double* %7, align 8
  %51 = fmul double %49, %50
  %52 = fadd double %51, 5.000000e-01
  %53 = call double @llvm.floor.f64(double %52)
  %54 = fptosi double %53 to i32
  store i32 %54, i32* %3, align 4
  %55 = load i32, i32* %3, align 4
  %56 = icmp slt i32 %55, 1
  br i1 %56, label %57, label %58

57:                                               ; preds = %47
  store i32 1, i32* %3, align 4
  br label %58

58:                                               ; preds = %57, %47
  %59 = load i32, i32* %3, align 4
  %60 = icmp sgt i32 %59, 112
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  store i32 112, i32* %3, align 4
  br label %62

62:                                               ; preds = %61, %58
  %63 = load i32, i32* %3, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [113 x i8], [113 x i8]* @map_non_linear_mquant, i64 0, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  %68 = getelementptr inbounds [32 x i8], [32 x i8]* @non_linear_mquant_table, i64 0, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  store i32 %70, i32* %3, align 4
  br label %104

71:                                               ; preds = %1
  %72 = load double, double* %5, align 8
  %73 = load double, double* %7, align 8
  %74 = fmul double %72, %73
  %75 = fadd double %74, 5.000000e-01
  %76 = call double @llvm.floor.f64(double %75)
  %77 = fptosi double %76 to i32
  store i32 %77, i32* %3, align 4
  %78 = load i32, i32* %3, align 4
  %79 = shl i32 %78, 1
  store i32 %79, i32* %3, align 4
  %80 = load i32, i32* %3, align 4
  %81 = icmp slt i32 %80, 2
  br i1 %81, label %82, label %83

82:                                               ; preds = %71
  store i32 2, i32* %3, align 4
  br label %83

83:                                               ; preds = %82, %71
  %84 = load i32, i32* %3, align 4
  %85 = icmp sgt i32 %84, 62
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  store i32 62, i32* %3, align 4
  br label %87

87:                                               ; preds = %86, %83
  %88 = load i32, i32* %3, align 4
  %89 = icmp sge i32 %88, 8
  br i1 %89, label %90, label %102

90:                                               ; preds = %87
  %91 = load i32, i32* %3, align 4
  %92 = load i32, i32* @prev_mquant, align 4
  %93 = sub nsw i32 %91, %92
  %94 = icmp sge i32 %93, -4
  br i1 %94, label %95, label %102

95:                                               ; preds = %90
  %96 = load i32, i32* %3, align 4
  %97 = load i32, i32* @prev_mquant, align 4
  %98 = sub nsw i32 %96, %97
  %99 = icmp sle i32 %98, 4
  br i1 %99, label %100, label %102

100:                                              ; preds = %95
  %101 = load i32, i32* @prev_mquant, align 4
  store i32 %101, i32* %3, align 4
  br label %102

102:                                              ; preds = %100, %95, %90, %87
  %103 = load i32, i32* %3, align 4
  store i32 %103, i32* @prev_mquant, align 4
  br label %104

104:                                              ; preds = %102, %62
  %105 = load i32, i32* %3, align 4
  %106 = load i32, i32* @Q, align 4
  %107 = add nsw i32 %106, %105
  store i32 %107, i32* @Q, align 4
  %108 = load i32, i32* %3, align 4
  ret i32 %108
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @vbv_end_of_picture() #0 {
  %1 = call i32 @bitcount()
  store i32 %1, i32* @bitcnt_EOP, align 4
  %2 = load i32, i32* @bitcnt_EOP, align 4
  %3 = add nsw i32 %2, 7
  %4 = and i32 %3, -8
  store i32 %4, i32* @bitcnt_EOP, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @calc_vbv_delay() #0 {
  %1 = alloca double, align 8
  %2 = load i32, i32* @pict_type, align 4
  %3 = icmp eq i32 %2, 3
  br i1 %3, label %4, label %45

4:                                                ; preds = %0
  %5 = load i32, i32* @prog_seq, align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %24

7:                                                ; preds = %4
  %8 = load i32, i32* @repeatfirst, align 4
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = load double, double* @frame_rate, align 8
  %12 = fdiv double 9.000000e+04, %11
  store double %12, double* %1, align 8
  br label %23

13:                                               ; preds = %7
  %14 = load i32, i32* @topfirst, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = load double, double* @frame_rate, align 8
  %18 = fdiv double 1.800000e+05, %17
  store double %18, double* %1, align 8
  br label %22

19:                                               ; preds = %13
  %20 = load double, double* @frame_rate, align 8
  %21 = fdiv double 2.700000e+05, %20
  store double %21, double* %1, align 8
  br label %22

22:                                               ; preds = %19, %16
  br label %23

23:                                               ; preds = %22, %10
  br label %44

24:                                               ; preds = %4
  %25 = load i32, i32* @fieldpic, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %24
  %28 = load double, double* @frame_rate, align 8
  %29 = fmul double 2.000000e+00, %28
  %30 = fdiv double 9.000000e+04, %29
  store double %30, double* %1, align 8
  br label %43

31:                                               ; preds = %24
  %32 = load i32, i32* @repeatfirst, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = load double, double* @frame_rate, align 8
  %36 = fmul double 2.000000e+00, %35
  %37 = fdiv double 1.800000e+05, %36
  store double %37, double* %1, align 8
  br label %42

38:                                               ; preds = %31
  %39 = load double, double* @frame_rate, align 8
  %40 = fmul double 2.000000e+00, %39
  %41 = fdiv double 2.700000e+05, %40
  store double %41, double* %1, align 8
  br label %42

42:                                               ; preds = %38, %34
  br label %43

43:                                               ; preds = %42, %27
  br label %44

44:                                               ; preds = %43, %23
  br label %118

45:                                               ; preds = %0
  %46 = load i32, i32* @fieldpic, align 4
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %65

48:                                               ; preds = %45
  %49 = load i32, i32* @topfirst, align 4
  %50 = load i32, i32* @pict_struct, align 4
  %51 = icmp eq i32 %50, 1
  %52 = zext i1 %51 to i32
  %53 = icmp eq i32 %49, %52
  br i1 %53, label %54, label %58

54:                                               ; preds = %48
  %55 = load double, double* @frame_rate, align 8
  %56 = fmul double 2.000000e+00, %55
  %57 = fdiv double 9.000000e+04, %56
  store double %57, double* %1, align 8
  br label %64

58:                                               ; preds = %48
  %59 = load double, double* @calc_vbv_delay.next_ip_delay, align 8
  %60 = load double, double* @frame_rate, align 8
  %61 = fmul double 2.000000e+00, %60
  %62 = fdiv double 9.000000e+04, %61
  %63 = fsub double %59, %62
  store double %63, double* %1, align 8
  br label %64

64:                                               ; preds = %58, %54
  br label %67

65:                                               ; preds = %45
  %66 = load double, double* @calc_vbv_delay.next_ip_delay, align 8
  store double %66, double* %1, align 8
  br label %67

67:                                               ; preds = %65, %64
  %68 = load i32, i32* @fieldpic, align 4
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %76

70:                                               ; preds = %67
  %71 = load i32, i32* @topfirst, align 4
  %72 = load i32, i32* @pict_struct, align 4
  %73 = icmp eq i32 %72, 1
  %74 = zext i1 %73 to i32
  %75 = icmp ne i32 %71, %74
  br i1 %75, label %76, label %117

76:                                               ; preds = %70, %67
  %77 = load i32, i32* @prog_seq, align 4
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %96

79:                                               ; preds = %76
  %80 = load i32, i32* @repeatfirst, align 4
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %79
  %83 = load double, double* @frame_rate, align 8
  %84 = fdiv double 9.000000e+04, %83
  store double %84, double* @calc_vbv_delay.next_ip_delay, align 8
  br label %95

85:                                               ; preds = %79
  %86 = load i32, i32* @topfirst, align 4
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  %89 = load double, double* @frame_rate, align 8
  %90 = fdiv double 1.800000e+05, %89
  store double %90, double* @calc_vbv_delay.next_ip_delay, align 8
  br label %94

91:                                               ; preds = %85
  %92 = load double, double* @frame_rate, align 8
  %93 = fdiv double 2.700000e+05, %92
  store double %93, double* @calc_vbv_delay.next_ip_delay, align 8
  br label %94

94:                                               ; preds = %91, %88
  br label %95

95:                                               ; preds = %94, %82
  br label %116

96:                                               ; preds = %76
  %97 = load i32, i32* @fieldpic, align 4
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %96
  %100 = load double, double* @frame_rate, align 8
  %101 = fmul double 2.000000e+00, %100
  %102 = fdiv double 9.000000e+04, %101
  store double %102, double* @calc_vbv_delay.next_ip_delay, align 8
  br label %115

103:                                              ; preds = %96
  %104 = load i32, i32* @repeatfirst, align 4
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %110, label %106

106:                                              ; preds = %103
  %107 = load double, double* @frame_rate, align 8
  %108 = fmul double 2.000000e+00, %107
  %109 = fdiv double 1.800000e+05, %108
  store double %109, double* @calc_vbv_delay.next_ip_delay, align 8
  br label %114

110:                                              ; preds = %103
  %111 = load double, double* @frame_rate, align 8
  %112 = fmul double 2.000000e+00, %111
  %113 = fdiv double 2.700000e+05, %112
  store double %113, double* @calc_vbv_delay.next_ip_delay, align 8
  br label %114

114:                                              ; preds = %110, %106
  br label %115

115:                                              ; preds = %114, %99
  br label %116

116:                                              ; preds = %115, %95
  br label %117

117:                                              ; preds = %116, %70
  br label %118

118:                                              ; preds = %117, %44
  %119 = load double, double* @calc_vbv_delay.decoding_time, align 8
  %120 = fcmp oeq double %119, 0.000000e+00
  br i1 %120, label %121, label %139

121:                                              ; preds = %118
  %122 = load i32, i32* @vbv_buffer_size, align 4
  %123 = mul nsw i32 %122, 16384
  %124 = mul nsw i32 %123, 7
  %125 = sdiv i32 %124, 8
  %126 = sitofp i32 %125 to double
  %127 = fmul double %126, 9.000000e+04
  %128 = load double, double* @bit_rate, align 8
  %129 = fdiv double %127, %128
  store double %129, double* %1, align 8
  %130 = load i32, i32* @fieldpic, align 4
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %138

132:                                              ; preds = %121
  %133 = load double, double* @frame_rate, align 8
  %134 = fdiv double 9.000000e+04, %133
  %135 = fadd double %134, 5.000000e-01
  %136 = fptosi double %135 to i32
  %137 = sitofp i32 %136 to double
  store double %137, double* @calc_vbv_delay.next_ip_delay, align 8
  br label %138

138:                                              ; preds = %132, %121
  br label %139

139:                                              ; preds = %138, %118
  %140 = load i32, i32* @low_delay, align 4
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %163, label %142

142:                                              ; preds = %139
  %143 = load double, double* @calc_vbv_delay.decoding_time, align 8
  %144 = load i32, i32* @bitcnt_EOP, align 4
  %145 = sitofp i32 %144 to double
  %146 = fmul double %145, 9.000000e+04
  %147 = load double, double* @bit_rate, align 8
  %148 = fdiv double %146, %147
  %149 = fcmp olt double %143, %148
  br i1 %149, label %150, label %163

150:                                              ; preds = %142
  %151 = load i32, i32* @quiet, align 4
  %152 = icmp ne i32 %151, 0
  br i1 %152, label %162, label %153

153:                                              ; preds = %150
  %154 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %155 = load double, double* @calc_vbv_delay.decoding_time, align 8
  %156 = load i32, i32* @bitcnt_EOP, align 4
  %157 = sitofp i32 %156 to double
  %158 = fmul double %157, 9.000000e+04
  %159 = load double, double* @bit_rate, align 8
  %160 = fdiv double %158, %159
  %161 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %154, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.20.205, i64 0, i64 0), double %155, double %160)
  br label %162

162:                                              ; preds = %153, %150
  br label %163

163:                                              ; preds = %162, %142, %139
  %164 = load double, double* %1, align 8
  %165 = load double, double* @calc_vbv_delay.decoding_time, align 8
  %166 = fadd double %165, %164
  store double %166, double* @calc_vbv_delay.decoding_time, align 8
  %167 = load double, double* @calc_vbv_delay.decoding_time, align 8
  %168 = call i32 @bitcount()
  %169 = sitofp i32 %168 to double
  %170 = fmul double %169, 9.000000e+04
  %171 = load double, double* @bit_rate, align 8
  %172 = fdiv double %170, %171
  %173 = fsub double %167, %172
  %174 = fptosi double %173 to i32
  store i32 %174, i32* @vbv_delay, align 4
  %175 = load double, double* @calc_vbv_delay.decoding_time, align 8
  %176 = load i32, i32* @bitcnt_EOP, align 4
  %177 = sitofp i32 %176 to double
  %178 = fmul double %177, 9.000000e+04
  %179 = load double, double* @bit_rate, align 8
  %180 = fdiv double %178, %179
  %181 = fsub double %175, %180
  %182 = load i32, i32* @vbv_buffer_size, align 4
  %183 = mul nsw i32 %182, 16384
  %184 = sitofp i32 %183 to double
  %185 = fmul double %184, 9.000000e+04
  %186 = load double, double* @bit_rate, align 8
  %187 = fdiv double %185, %186
  %188 = fcmp ogt double %181, %187
  br i1 %188, label %189, label %196

189:                                              ; preds = %163
  %190 = load i32, i32* @quiet, align 4
  %191 = icmp ne i32 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %189
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %194 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %193, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21.206, i64 0, i64 0))
  br label %195

195:                                              ; preds = %192, %189
  br label %196

196:                                              ; preds = %195, %163
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %198 = load i32, i32* @vbv_delay, align 4
  %199 = call i32 @bitcount()
  %200 = load double, double* @calc_vbv_delay.decoding_time, align 8
  %201 = load i32, i32* @bitcnt_EOP, align 4
  %202 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %197, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.22.207, i64 0, i64 0), i32 %198, i32 %199, double %200, i32 %201)
  %203 = load i32, i32* @vbv_delay, align 4
  %204 = icmp slt i32 %203, 0
  br i1 %204, label %205, label %213

205:                                              ; preds = %196
  %206 = load i32, i32* @quiet, align 4
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %212, label %208

208:                                              ; preds = %205
  %209 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %210 = load i32, i32* @vbv_delay, align 4
  %211 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %209, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.23.208, i64 0, i64 0), i32 %210)
  br label %212

212:                                              ; preds = %208, %205
  store i32 0, i32* @vbv_delay, align 4
  br label %213

213:                                              ; preds = %212, %196
  %214 = load i32, i32* @vbv_delay, align 4
  %215 = icmp sgt i32 %214, 65535
  br i1 %215, label %216, label %224

216:                                              ; preds = %213
  %217 = load i32, i32* @quiet, align 4
  %218 = icmp ne i32 %217, 0
  br i1 %218, label %223, label %219

219:                                              ; preds = %216
  %220 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %221 = load i32, i32* @vbv_delay, align 4
  %222 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %220, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24.209, i64 0, i64 0), i32 %221)
  br label %223

223:                                              ; preds = %219, %216
  store i32 65535, i32* @vbv_delay, align 4
  br label %224

224:                                              ; preds = %223, %213
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @readframe(i8* %0, i8** %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  store i8* %0, i8** %3, align 8
  store i8** %1, i8*** %4, align 8
  %5 = load i32, i32* @inputtype, align 4
  switch i32 %5, label %15 [
    i32 0, label %6
    i32 1, label %9
    i32 2, label %12
  ]

6:                                                ; preds = %2
  %7 = load i8*, i8** %3, align 8
  %8 = load i8**, i8*** %4, align 8
  call void @read_y_u_v(i8* %7, i8** %8)
  br label %16

9:                                                ; preds = %2
  %10 = load i8*, i8** %3, align 8
  %11 = load i8**, i8*** %4, align 8
  call void @read_yuv(i8* %10, i8** %11)
  br label %16

12:                                               ; preds = %2
  %13 = load i8*, i8** %3, align 8
  %14 = load i8**, i8*** %4, align 8
  call void @read_ppm(i8* %13, i8** %14)
  br label %16

15:                                               ; preds = %2
  br label %16

16:                                               ; preds = %15, %12, %9, %6
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @read_y_u_v(i8* %0, i8** %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [128 x i8], align 16
  %9 = alloca %struct._IO_FILE*, align 8
  store i8* %0, i8** %3, align 8
  store i8** %1, i8*** %4, align 8
  %10 = load i32, i32* @chroma_format, align 4
  %11 = icmp eq i32 %10, 3
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = load i32, i32* @horizontal_size, align 4
  br label %17

14:                                               ; preds = %2
  %15 = load i32, i32* @horizontal_size, align 4
  %16 = ashr i32 %15, 1
  br label %17

17:                                               ; preds = %14, %12
  %18 = phi i32 [ %13, %12 ], [ %16, %14 ]
  store i32 %18, i32* %6, align 4
  %19 = load i32, i32* @chroma_format, align 4
  %20 = icmp ne i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = load i32, i32* @vertical_size, align 4
  br label %26

23:                                               ; preds = %17
  %24 = load i32, i32* @vertical_size, align 4
  %25 = ashr i32 %24, 1
  br label %26

26:                                               ; preds = %23, %21
  %27 = phi i32 [ %22, %21 ], [ %25, %23 ]
  store i32 %27, i32* %7, align 4
  %28 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 0
  %29 = load i8*, i8** %3, align 8
  %30 = call i32 (i8*, i8*, ...) @sprintf(i8* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.217, i64 0, i64 0), i8* %29) #6
  %31 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 0
  %32 = call %struct._IO_FILE* @fopen(i8* %31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.214, i64 0, i64 0))
  store %struct._IO_FILE* %32, %struct._IO_FILE** %9, align 8
  %33 = icmp ne %struct._IO_FILE* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 0
  %36 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.215, i64 0, i64 0), i8* %35) #6
  call void @error(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0))
  br label %37

37:                                               ; preds = %34, %26
  store i32 0, i32* %5, align 4
  br label %38

38:                                               ; preds = %55, %37
  %39 = load i32, i32* %5, align 4
  %40 = load i32, i32* @vertical_size, align 4
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %42, label %58

42:                                               ; preds = %38
  %43 = load i8**, i8*** %4, align 8
  %44 = getelementptr inbounds i8*, i8** %43, i64 0
  %45 = load i8*, i8** %44, align 8
  %46 = load i32, i32* %5, align 4
  %47 = load i32, i32* @width, align 4
  %48 = mul nsw i32 %46, %47
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %45, i64 %49
  %51 = load i32, i32* @horizontal_size, align 4
  %52 = sext i32 %51 to i64
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %54 = call i64 @fread(i8* %50, i64 1, i64 %52, %struct._IO_FILE* %53)
  br label %55

55:                                               ; preds = %42
  %56 = load i32, i32* %5, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %5, align 4
  br label %38

58:                                               ; preds = %38
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %60 = call i32 @fclose(%struct._IO_FILE* %59)
  %61 = load i8**, i8*** %4, align 8
  %62 = getelementptr inbounds i8*, i8** %61, i64 0
  %63 = load i8*, i8** %62, align 8
  %64 = load i32, i32* @horizontal_size, align 4
  %65 = load i32, i32* @vertical_size, align 4
  %66 = load i32, i32* @width, align 4
  %67 = load i32, i32* @height, align 4
  call void @border_extend(i8* %63, i32 %64, i32 %65, i32 %66, i32 %67)
  %68 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 0
  %69 = load i8*, i8** %3, align 8
  %70 = call i32 (i8*, i8*, ...) @sprintf(i8* %68, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.218, i64 0, i64 0), i8* %69) #6
  %71 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 0
  %72 = call %struct._IO_FILE* @fopen(i8* %71, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.214, i64 0, i64 0))
  store %struct._IO_FILE* %72, %struct._IO_FILE** %9, align 8
  %73 = icmp ne %struct._IO_FILE* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %58
  %75 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 0
  %76 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.215, i64 0, i64 0), i8* %75) #6
  call void @error(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0))
  br label %77

77:                                               ; preds = %74, %58
  store i32 0, i32* %5, align 4
  br label %78

78:                                               ; preds = %95, %77
  %79 = load i32, i32* %5, align 4
  %80 = load i32, i32* %7, align 4
  %81 = icmp slt i32 %79, %80
  br i1 %81, label %82, label %98

82:                                               ; preds = %78
  %83 = load i8**, i8*** %4, align 8
  %84 = getelementptr inbounds i8*, i8** %83, i64 1
  %85 = load i8*, i8** %84, align 8
  %86 = load i32, i32* %5, align 4
  %87 = load i32, i32* @chrom_width, align 4
  %88 = mul nsw i32 %86, %87
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %85, i64 %89
  %91 = load i32, i32* %6, align 4
  %92 = sext i32 %91 to i64
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %94 = call i64 @fread(i8* %90, i64 1, i64 %92, %struct._IO_FILE* %93)
  br label %95

95:                                               ; preds = %82
  %96 = load i32, i32* %5, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %5, align 4
  br label %78

98:                                               ; preds = %78
  %99 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %100 = call i32 @fclose(%struct._IO_FILE* %99)
  %101 = load i8**, i8*** %4, align 8
  %102 = getelementptr inbounds i8*, i8** %101, i64 1
  %103 = load i8*, i8** %102, align 8
  %104 = load i32, i32* %6, align 4
  %105 = load i32, i32* %7, align 4
  %106 = load i32, i32* @chrom_width, align 4
  %107 = load i32, i32* @chrom_height, align 4
  call void @border_extend(i8* %103, i32 %104, i32 %105, i32 %106, i32 %107)
  %108 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 0
  %109 = load i8*, i8** %3, align 8
  %110 = call i32 (i8*, i8*, ...) @sprintf(i8* %108, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.219, i64 0, i64 0), i8* %109) #6
  %111 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 0
  %112 = call %struct._IO_FILE* @fopen(i8* %111, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.214, i64 0, i64 0))
  store %struct._IO_FILE* %112, %struct._IO_FILE** %9, align 8
  %113 = icmp ne %struct._IO_FILE* %112, null
  br i1 %113, label %117, label %114

114:                                              ; preds = %98
  %115 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 0
  %116 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.215, i64 0, i64 0), i8* %115) #6
  call void @error(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0))
  br label %117

117:                                              ; preds = %114, %98
  store i32 0, i32* %5, align 4
  br label %118

118:                                              ; preds = %135, %117
  %119 = load i32, i32* %5, align 4
  %120 = load i32, i32* %7, align 4
  %121 = icmp slt i32 %119, %120
  br i1 %121, label %122, label %138

122:                                              ; preds = %118
  %123 = load i8**, i8*** %4, align 8
  %124 = getelementptr inbounds i8*, i8** %123, i64 2
  %125 = load i8*, i8** %124, align 8
  %126 = load i32, i32* %5, align 4
  %127 = load i32, i32* @chrom_width, align 4
  %128 = mul nsw i32 %126, %127
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* %125, i64 %129
  %131 = load i32, i32* %6, align 4
  %132 = sext i32 %131 to i64
  %133 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %134 = call i64 @fread(i8* %130, i64 1, i64 %132, %struct._IO_FILE* %133)
  br label %135

135:                                              ; preds = %122
  %136 = load i32, i32* %5, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %5, align 4
  br label %118

138:                                              ; preds = %118
  %139 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %140 = call i32 @fclose(%struct._IO_FILE* %139)
  %141 = load i8**, i8*** %4, align 8
  %142 = getelementptr inbounds i8*, i8** %141, i64 2
  %143 = load i8*, i8** %142, align 8
  %144 = load i32, i32* %6, align 4
  %145 = load i32, i32* %7, align 4
  %146 = load i32, i32* @chrom_width, align 4
  %147 = load i32, i32* @chrom_height, align 4
  call void @border_extend(i8* %143, i32 %144, i32 %145, i32 %146, i32 %147)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @read_yuv(i8* %0, i8** %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [128 x i8], align 16
  %9 = alloca %struct._IO_FILE*, align 8
  store i8* %0, i8** %3, align 8
  store i8** %1, i8*** %4, align 8
  %10 = load i32, i32* @chroma_format, align 4
  %11 = icmp eq i32 %10, 3
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = load i32, i32* @horizontal_size, align 4
  br label %17

14:                                               ; preds = %2
  %15 = load i32, i32* @horizontal_size, align 4
  %16 = ashr i32 %15, 1
  br label %17

17:                                               ; preds = %14, %12
  %18 = phi i32 [ %13, %12 ], [ %16, %14 ]
  store i32 %18, i32* %6, align 4
  %19 = load i32, i32* @chroma_format, align 4
  %20 = icmp ne i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = load i32, i32* @vertical_size, align 4
  br label %26

23:                                               ; preds = %17
  %24 = load i32, i32* @vertical_size, align 4
  %25 = ashr i32 %24, 1
  br label %26

26:                                               ; preds = %23, %21
  %27 = phi i32 [ %22, %21 ], [ %25, %23 ]
  store i32 %27, i32* %7, align 4
  %28 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 0
  %29 = load i8*, i8** %3, align 8
  %30 = call i32 (i8*, i8*, ...) @sprintf(i8* %28, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.216, i64 0, i64 0), i8* %29) #6
  %31 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 0
  %32 = call %struct._IO_FILE* @fopen(i8* %31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.214, i64 0, i64 0))
  store %struct._IO_FILE* %32, %struct._IO_FILE** %9, align 8
  %33 = icmp ne %struct._IO_FILE* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 0
  %36 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.215, i64 0, i64 0), i8* %35) #6
  call void @error(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0))
  br label %37

37:                                               ; preds = %34, %26
  store i32 0, i32* %5, align 4
  br label %38

38:                                               ; preds = %55, %37
  %39 = load i32, i32* %5, align 4
  %40 = load i32, i32* @vertical_size, align 4
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %42, label %58

42:                                               ; preds = %38
  %43 = load i8**, i8*** %4, align 8
  %44 = getelementptr inbounds i8*, i8** %43, i64 0
  %45 = load i8*, i8** %44, align 8
  %46 = load i32, i32* %5, align 4
  %47 = load i32, i32* @width, align 4
  %48 = mul nsw i32 %46, %47
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %45, i64 %49
  %51 = load i32, i32* @horizontal_size, align 4
  %52 = sext i32 %51 to i64
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %54 = call i64 @fread(i8* %50, i64 1, i64 %52, %struct._IO_FILE* %53)
  br label %55

55:                                               ; preds = %42
  %56 = load i32, i32* %5, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %5, align 4
  br label %38

58:                                               ; preds = %38
  %59 = load i8**, i8*** %4, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i64 0
  %61 = load i8*, i8** %60, align 8
  %62 = load i32, i32* @horizontal_size, align 4
  %63 = load i32, i32* @vertical_size, align 4
  %64 = load i32, i32* @width, align 4
  %65 = load i32, i32* @height, align 4
  call void @border_extend(i8* %61, i32 %62, i32 %63, i32 %64, i32 %65)
  store i32 0, i32* %5, align 4
  br label %66

66:                                               ; preds = %83, %58
  %67 = load i32, i32* %5, align 4
  %68 = load i32, i32* %7, align 4
  %69 = icmp slt i32 %67, %68
  br i1 %69, label %70, label %86

70:                                               ; preds = %66
  %71 = load i8**, i8*** %4, align 8
  %72 = getelementptr inbounds i8*, i8** %71, i64 1
  %73 = load i8*, i8** %72, align 8
  %74 = load i32, i32* %5, align 4
  %75 = load i32, i32* @chrom_width, align 4
  %76 = mul nsw i32 %74, %75
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i8, i8* %73, i64 %77
  %79 = load i32, i32* %6, align 4
  %80 = sext i32 %79 to i64
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %82 = call i64 @fread(i8* %78, i64 1, i64 %80, %struct._IO_FILE* %81)
  br label %83

83:                                               ; preds = %70
  %84 = load i32, i32* %5, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %5, align 4
  br label %66

86:                                               ; preds = %66
  %87 = load i8**, i8*** %4, align 8
  %88 = getelementptr inbounds i8*, i8** %87, i64 1
  %89 = load i8*, i8** %88, align 8
  %90 = load i32, i32* %6, align 4
  %91 = load i32, i32* %7, align 4
  %92 = load i32, i32* @chrom_width, align 4
  %93 = load i32, i32* @chrom_height, align 4
  call void @border_extend(i8* %89, i32 %90, i32 %91, i32 %92, i32 %93)
  store i32 0, i32* %5, align 4
  br label %94

94:                                               ; preds = %111, %86
  %95 = load i32, i32* %5, align 4
  %96 = load i32, i32* %7, align 4
  %97 = icmp slt i32 %95, %96
  br i1 %97, label %98, label %114

98:                                               ; preds = %94
  %99 = load i8**, i8*** %4, align 8
  %100 = getelementptr inbounds i8*, i8** %99, i64 2
  %101 = load i8*, i8** %100, align 8
  %102 = load i32, i32* %5, align 4
  %103 = load i32, i32* @chrom_width, align 4
  %104 = mul nsw i32 %102, %103
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, i8* %101, i64 %105
  %107 = load i32, i32* %6, align 4
  %108 = sext i32 %107 to i64
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %110 = call i64 @fread(i8* %106, i64 1, i64 %108, %struct._IO_FILE* %109)
  br label %111

111:                                              ; preds = %98
  %112 = load i32, i32* %5, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %5, align 4
  br label %94

114:                                              ; preds = %94
  %115 = load i8**, i8*** %4, align 8
  %116 = getelementptr inbounds i8*, i8** %115, i64 2
  %117 = load i8*, i8** %116, align 8
  %118 = load i32, i32* %6, align 4
  %119 = load i32, i32* %7, align 4
  %120 = load i32, i32* @chrom_width, align 4
  %121 = load i32, i32* @chrom_height, align 4
  call void @border_extend(i8* %117, i32 %118, i32 %119, i32 %120, i32 %121)
  %122 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %123 = call i32 @fclose(%struct._IO_FILE* %122)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @read_ppm(i8* %0, i8** %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca [128 x i8], align 16
  %19 = alloca %struct._IO_FILE*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8** %1, i8*** %4, align 8
  %23 = load i32, i32* @matrix_coefficients, align 4
  store i32 %23, i32* %5, align 4
  %24 = load i32, i32* %5, align 4
  %25 = icmp sgt i32 %24, 8
  br i1 %25, label %26, label %27

26:                                               ; preds = %2
  store i32 3, i32* %5, align 4
  br label %27

27:                                               ; preds = %26, %2
  %28 = load i32, i32* %5, align 4
  %29 = sub nsw i32 %28, 1
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [7 x [3 x double]], [7 x [3 x double]]* @read_ppm.coef, i64 0, i64 %30
  %32 = getelementptr inbounds [3 x double], [3 x double]* %31, i64 0, i64 0
  %33 = load double, double* %32, align 8
  store double %33, double* %13, align 8
  %34 = load i32, i32* %5, align 4
  %35 = sub nsw i32 %34, 1
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [7 x [3 x double]], [7 x [3 x double]]* @read_ppm.coef, i64 0, i64 %36
  %38 = getelementptr inbounds [3 x double], [3 x double]* %37, i64 0, i64 1
  %39 = load double, double* %38, align 8
  store double %39, double* %14, align 8
  %40 = load i32, i32* %5, align 4
  %41 = sub nsw i32 %40, 1
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [7 x [3 x double]], [7 x [3 x double]]* @read_ppm.coef, i64 0, i64 %42
  %44 = getelementptr inbounds [3 x double], [3 x double]* %43, i64 0, i64 2
  %45 = load double, double* %44, align 8
  store double %45, double* %15, align 8
  %46 = load double, double* %15, align 8
  %47 = fsub double 1.000000e+00, %46
  %48 = fdiv double 5.000000e-01, %47
  store double %48, double* %16, align 8
  %49 = load double, double* %13, align 8
  %50 = fsub double 1.000000e+00, %49
  %51 = fdiv double 5.000000e-01, %50
  store double %51, double* %17, align 8
  %52 = load i32, i32* @chroma_format, align 4
  %53 = icmp eq i32 %52, 3
  br i1 %53, label %54, label %61

54:                                               ; preds = %27
  %55 = load i8**, i8*** %4, align 8
  %56 = getelementptr inbounds i8*, i8** %55, i64 1
  %57 = load i8*, i8** %56, align 8
  store i8* %57, i8** @read_ppm.u444, align 8
  %58 = load i8**, i8*** %4, align 8
  %59 = getelementptr inbounds i8*, i8** %58, i64 2
  %60 = load i8*, i8** %59, align 8
  store i8* %60, i8** @read_ppm.v444, align 8
  br label %104

61:                                               ; preds = %27
  %62 = load i8*, i8** @read_ppm.u444, align 8
  %63 = icmp ne i8* %62, null
  br i1 %63, label %103, label %64

64:                                               ; preds = %61
  %65 = load i32, i32* @width, align 4
  %66 = load i32, i32* @height, align 4
  %67 = mul nsw i32 %65, %66
  %68 = sext i32 %67 to i64
  %69 = call noalias i8* @malloc(i64 %68) #6
  store i8* %69, i8** @read_ppm.u444, align 8
  %70 = icmp ne i8* %69, null
  br i1 %70, label %72, label %71

71:                                               ; preds = %64
  call void @error(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.212, i64 0, i64 0))
  br label %72

72:                                               ; preds = %71, %64
  %73 = load i32, i32* @width, align 4
  %74 = load i32, i32* @height, align 4
  %75 = mul nsw i32 %73, %74
  %76 = sext i32 %75 to i64
  %77 = call noalias i8* @malloc(i64 %76) #6
  store i8* %77, i8** @read_ppm.v444, align 8
  %78 = icmp ne i8* %77, null
  br i1 %78, label %80, label %79

79:                                               ; preds = %72
  call void @error(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.212, i64 0, i64 0))
  br label %80

80:                                               ; preds = %79, %72
  %81 = load i32, i32* @chroma_format, align 4
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %102

83:                                               ; preds = %80
  %84 = load i32, i32* @width, align 4
  %85 = ashr i32 %84, 1
  %86 = load i32, i32* @height, align 4
  %87 = mul nsw i32 %85, %86
  %88 = sext i32 %87 to i64
  %89 = call noalias i8* @malloc(i64 %88) #6
  store i8* %89, i8** @read_ppm.u422, align 8
  %90 = icmp ne i8* %89, null
  br i1 %90, label %92, label %91

91:                                               ; preds = %83
  call void @error(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.212, i64 0, i64 0))
  br label %92

92:                                               ; preds = %91, %83
  %93 = load i32, i32* @width, align 4
  %94 = ashr i32 %93, 1
  %95 = load i32, i32* @height, align 4
  %96 = mul nsw i32 %94, %95
  %97 = sext i32 %96 to i64
  %98 = call noalias i8* @malloc(i64 %97) #6
  store i8* %98, i8** @read_ppm.v422, align 8
  %99 = icmp ne i8* %98, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %92
  call void @error(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.212, i64 0, i64 0))
  br label %101

101:                                              ; preds = %100, %92
  br label %102

102:                                              ; preds = %101, %80
  br label %103

103:                                              ; preds = %102, %61
  br label %104

104:                                              ; preds = %103, %54
  %105 = getelementptr inbounds [128 x i8], [128 x i8]* %18, i64 0, i64 0
  %106 = load i8*, i8** %3, align 8
  %107 = call i32 (i8*, i8*, ...) @sprintf(i8* %105, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.213, i64 0, i64 0), i8* %106) #6
  %108 = getelementptr inbounds [128 x i8], [128 x i8]* %18, i64 0, i64 0
  %109 = call %struct._IO_FILE* @fopen(i8* %108, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.214, i64 0, i64 0))
  store %struct._IO_FILE* %109, %struct._IO_FILE** %19, align 8
  %110 = icmp ne %struct._IO_FILE* %109, null
  br i1 %110, label %114, label %111

111:                                              ; preds = %104
  %112 = getelementptr inbounds [128 x i8], [128 x i8]* %18, i64 0, i64 0
  %113 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.215, i64 0, i64 0), i8* %112) #6
  call void @error(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0))
  br label %114

114:                                              ; preds = %111, %104
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %116 = call i32 @getc(%struct._IO_FILE* %115)
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %118 = call i32 @getc(%struct._IO_FILE* %117)
  %119 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %120 = call i32 @pbm_getint(%struct._IO_FILE* %119)
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %122 = call i32 @pbm_getint(%struct._IO_FILE* %121)
  %123 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %124 = call i32 @pbm_getint(%struct._IO_FILE* %123)
  store i32 0, i32* %5, align 4
  br label %125

125:                                              ; preds = %215, %114
  %126 = load i32, i32* %5, align 4
  %127 = load i32, i32* @vertical_size, align 4
  %128 = icmp slt i32 %126, %127
  br i1 %128, label %129, label %218

129:                                              ; preds = %125
  %130 = load i8**, i8*** %4, align 8
  %131 = getelementptr inbounds i8*, i8** %130, i64 0
  %132 = load i8*, i8** %131, align 8
  %133 = load i32, i32* %5, align 4
  %134 = load i32, i32* @width, align 4
  %135 = mul nsw i32 %133, %134
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* %132, i64 %136
  store i8* %137, i8** %20, align 8
  %138 = load i8*, i8** @read_ppm.u444, align 8
  %139 = load i32, i32* %5, align 4
  %140 = load i32, i32* @width, align 4
  %141 = mul nsw i32 %139, %140
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %138, i64 %142
  store i8* %143, i8** %21, align 8
  %144 = load i8*, i8** @read_ppm.v444, align 8
  %145 = load i32, i32* %5, align 4
  %146 = load i32, i32* @width, align 4
  %147 = mul nsw i32 %145, %146
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* %144, i64 %148
  store i8* %149, i8** %22, align 8
  store i32 0, i32* %6, align 4
  br label %150

150:                                              ; preds = %211, %129
  %151 = load i32, i32* %6, align 4
  %152 = load i32, i32* @horizontal_size, align 4
  %153 = icmp slt i32 %151, %152
  br i1 %153, label %154, label %214

154:                                              ; preds = %150
  %155 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %156 = call i32 @getc(%struct._IO_FILE* %155)
  store i32 %156, i32* %7, align 4
  %157 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %158 = call i32 @getc(%struct._IO_FILE* %157)
  store i32 %158, i32* %8, align 4
  %159 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %160 = call i32 @getc(%struct._IO_FILE* %159)
  store i32 %160, i32* %9, align 4
  %161 = load double, double* %13, align 8
  %162 = load i32, i32* %7, align 4
  %163 = sitofp i32 %162 to double
  %164 = fmul double %161, %163
  %165 = load double, double* %14, align 8
  %166 = load i32, i32* %8, align 4
  %167 = sitofp i32 %166 to double
  %168 = fmul double %165, %167
  %169 = fadd double %164, %168
  %170 = load double, double* %15, align 8
  %171 = load i32, i32* %9, align 4
  %172 = sitofp i32 %171 to double
  %173 = fmul double %170, %172
  %174 = fadd double %169, %173
  store double %174, double* %10, align 8
  %175 = load double, double* %16, align 8
  %176 = load i32, i32* %9, align 4
  %177 = sitofp i32 %176 to double
  %178 = load double, double* %10, align 8
  %179 = fsub double %177, %178
  %180 = fmul double %175, %179
  store double %180, double* %11, align 8
  %181 = load double, double* %17, align 8
  %182 = load i32, i32* %7, align 4
  %183 = sitofp i32 %182 to double
  %184 = load double, double* %10, align 8
  %185 = fsub double %183, %184
  %186 = fmul double %181, %185
  store double %186, double* %12, align 8
  %187 = load double, double* %10, align 8
  %188 = fmul double 0x3FEB600000000000, %187
  %189 = fadd double %188, 1.650000e+01
  %190 = fptoui double %189 to i8
  %191 = load i8*, i8** %20, align 8
  %192 = load i32, i32* %6, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds i8, i8* %191, i64 %193
  store i8 %190, i8* %194, align 1
  %195 = load double, double* %11, align 8
  %196 = fmul double 8.750000e-01, %195
  %197 = fadd double %196, 1.285000e+02
  %198 = fptoui double %197 to i8
  %199 = load i8*, i8** %21, align 8
  %200 = load i32, i32* %6, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds i8, i8* %199, i64 %201
  store i8 %198, i8* %202, align 1
  %203 = load double, double* %12, align 8
  %204 = fmul double 8.750000e-01, %203
  %205 = fadd double %204, 1.285000e+02
  %206 = fptoui double %205 to i8
  %207 = load i8*, i8** %22, align 8
  %208 = load i32, i32* %6, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds i8, i8* %207, i64 %209
  store i8 %206, i8* %210, align 1
  br label %211

211:                                              ; preds = %154
  %212 = load i32, i32* %6, align 4
  %213 = add nsw i32 %212, 1
  store i32 %213, i32* %6, align 4
  br label %150

214:                                              ; preds = %150
  br label %215

215:                                              ; preds = %214
  %216 = load i32, i32* %5, align 4
  %217 = add nsw i32 %216, 1
  store i32 %217, i32* %5, align 4
  br label %125

218:                                              ; preds = %125
  %219 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %220 = call i32 @fclose(%struct._IO_FILE* %219)
  %221 = load i8**, i8*** %4, align 8
  %222 = getelementptr inbounds i8*, i8** %221, i64 0
  %223 = load i8*, i8** %222, align 8
  %224 = load i32, i32* @horizontal_size, align 4
  %225 = load i32, i32* @vertical_size, align 4
  %226 = load i32, i32* @width, align 4
  %227 = load i32, i32* @height, align 4
  call void @border_extend(i8* %223, i32 %224, i32 %225, i32 %226, i32 %227)
  %228 = load i8*, i8** @read_ppm.u444, align 8
  %229 = load i32, i32* @horizontal_size, align 4
  %230 = load i32, i32* @vertical_size, align 4
  %231 = load i32, i32* @width, align 4
  %232 = load i32, i32* @height, align 4
  call void @border_extend(i8* %228, i32 %229, i32 %230, i32 %231, i32 %232)
  %233 = load i8*, i8** @read_ppm.v444, align 8
  %234 = load i32, i32* @horizontal_size, align 4
  %235 = load i32, i32* @vertical_size, align 4
  %236 = load i32, i32* @width, align 4
  %237 = load i32, i32* @height, align 4
  call void @border_extend(i8* %233, i32 %234, i32 %235, i32 %236, i32 %237)
  %238 = load i32, i32* @chroma_format, align 4
  %239 = icmp eq i32 %238, 2
  br i1 %239, label %240, label %249

240:                                              ; preds = %218
  %241 = load i8*, i8** @read_ppm.u444, align 8
  %242 = load i8**, i8*** %4, align 8
  %243 = getelementptr inbounds i8*, i8** %242, i64 1
  %244 = load i8*, i8** %243, align 8
  call void @conv444to422(i8* %241, i8* %244)
  %245 = load i8*, i8** @read_ppm.v444, align 8
  %246 = load i8**, i8*** %4, align 8
  %247 = getelementptr inbounds i8*, i8** %246, i64 2
  %248 = load i8*, i8** %247, align 8
  call void @conv444to422(i8* %245, i8* %248)
  br label %249

249:                                              ; preds = %240, %218
  %250 = load i32, i32* @chroma_format, align 4
  %251 = icmp eq i32 %250, 1
  br i1 %251, label %252, label %265

252:                                              ; preds = %249
  %253 = load i8*, i8** @read_ppm.u444, align 8
  %254 = load i8*, i8** @read_ppm.u422, align 8
  call void @conv444to422(i8* %253, i8* %254)
  %255 = load i8*, i8** @read_ppm.v444, align 8
  %256 = load i8*, i8** @read_ppm.v422, align 8
  call void @conv444to422(i8* %255, i8* %256)
  %257 = load i8*, i8** @read_ppm.u422, align 8
  %258 = load i8**, i8*** %4, align 8
  %259 = getelementptr inbounds i8*, i8** %258, i64 1
  %260 = load i8*, i8** %259, align 8
  call void @conv422to420(i8* %257, i8* %260)
  %261 = load i8*, i8** @read_ppm.v422, align 8
  %262 = load i8**, i8*** %4, align 8
  %263 = getelementptr inbounds i8*, i8** %262, i64 2
  %264 = load i8*, i8** %263, align 8
  call void @conv422to420(i8* %261, i8* %264)
  br label %265

265:                                              ; preds = %252, %249
  ret void
}

declare dso_local i32 @getc(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @pbm_getint(%struct._IO_FILE* %0) #0 {
  %2 = alloca %struct._IO_FILE*, align 8
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  br label %5

5:                                                ; preds = %24, %1
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %7 = call signext i8 @pbm_getc(%struct._IO_FILE* %6)
  store i8 %7, i8* %3, align 1
  br label %8

8:                                                ; preds = %5
  %9 = load i8, i8* %3, align 1
  %10 = sext i8 %9 to i32
  %11 = icmp eq i32 %10, 32
  br i1 %11, label %24, label %12

12:                                               ; preds = %8
  %13 = load i8, i8* %3, align 1
  %14 = sext i8 %13 to i32
  %15 = icmp eq i32 %14, 9
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  %17 = load i8, i8* %3, align 1
  %18 = sext i8 %17 to i32
  %19 = icmp eq i32 %18, 10
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = load i8, i8* %3, align 1
  %22 = sext i8 %21 to i32
  %23 = icmp eq i32 %22, 13
  br label %24

24:                                               ; preds = %20, %16, %12, %8
  %25 = phi i1 [ true, %16 ], [ true, %12 ], [ true, %8 ], [ %23, %20 ]
  br i1 %25, label %5, label %26

26:                                               ; preds = %24
  store i32 0, i32* %4, align 4
  br label %27

27:                                               ; preds = %44, %26
  %28 = load i32, i32* %4, align 4
  %29 = mul nsw i32 %28, 10
  %30 = load i8, i8* %3, align 1
  %31 = sext i8 %30 to i32
  %32 = add nsw i32 %29, %31
  %33 = sub nsw i32 %32, 48
  store i32 %33, i32* %4, align 4
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %35 = call signext i8 @pbm_getc(%struct._IO_FILE* %34)
  store i8 %35, i8* %3, align 1
  br label %36

36:                                               ; preds = %27
  %37 = load i8, i8* %3, align 1
  %38 = sext i8 %37 to i32
  %39 = icmp sge i32 %38, 48
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = load i8, i8* %3, align 1
  %42 = sext i8 %41 to i32
  %43 = icmp sle i32 %42, 57
  br label %44

44:                                               ; preds = %40, %36
  %45 = phi i1 [ false, %36 ], [ %43, %40 ]
  br i1 %45, label %27, label %46

46:                                               ; preds = %44
  %47 = load i32, i32* %4, align 4
  ret i32 %47
}

; Function Attrs: noinline nounwind uwtable
define internal void @border_extend(i8* %0, i32 %1, i32 %2, i32 %3, i32 %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  store i8* %0, i8** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  store i32 0, i32* %12, align 4
  br label %14

14:                                               ; preds = %45, %5
  %15 = load i32, i32* %12, align 4
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %48

18:                                               ; preds = %14
  %19 = load i8*, i8** %6, align 8
  %20 = load i32, i32* %12, align 4
  %21 = load i32, i32* %9, align 4
  %22 = mul nsw i32 %20, %21
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %19, i64 %23
  store i8* %24, i8** %13, align 8
  %25 = load i32, i32* %7, align 4
  store i32 %25, i32* %11, align 4
  br label %26

26:                                               ; preds = %41, %18
  %27 = load i32, i32* %11, align 4
  %28 = load i32, i32* %9, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %44

30:                                               ; preds = %26
  %31 = load i8*, i8** %13, align 8
  %32 = load i32, i32* %11, align 4
  %33 = sub nsw i32 %32, 1
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %31, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = load i8*, i8** %13, align 8
  %38 = load i32, i32* %11, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %37, i64 %39
  store i8 %36, i8* %40, align 1
  br label %41

41:                                               ; preds = %30
  %42 = load i32, i32* %11, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %11, align 4
  br label %26

44:                                               ; preds = %26
  br label %45

45:                                               ; preds = %44
  %46 = load i32, i32* %12, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %12, align 4
  br label %14

48:                                               ; preds = %14
  %49 = load i32, i32* %8, align 4
  store i32 %49, i32* %12, align 4
  br label %50

50:                                               ; preds = %81, %48
  %51 = load i32, i32* %12, align 4
  %52 = load i32, i32* %10, align 4
  %53 = icmp slt i32 %51, %52
  br i1 %53, label %54, label %84

54:                                               ; preds = %50
  %55 = load i8*, i8** %6, align 8
  %56 = load i32, i32* %12, align 4
  %57 = load i32, i32* %9, align 4
  %58 = mul nsw i32 %56, %57
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %55, i64 %59
  store i8* %60, i8** %13, align 8
  store i32 0, i32* %11, align 4
  br label %61

61:                                               ; preds = %77, %54
  %62 = load i32, i32* %11, align 4
  %63 = load i32, i32* %9, align 4
  %64 = icmp slt i32 %62, %63
  br i1 %64, label %65, label %80

65:                                               ; preds = %61
  %66 = load i8*, i8** %13, align 8
  %67 = load i32, i32* %11, align 4
  %68 = load i32, i32* %9, align 4
  %69 = sub nsw i32 %67, %68
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %66, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = load i8*, i8** %13, align 8
  %74 = load i32, i32* %11, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %73, i64 %75
  store i8 %72, i8* %76, align 1
  br label %77

77:                                               ; preds = %65
  %78 = load i32, i32* %11, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %11, align 4
  br label %61

80:                                               ; preds = %61
  br label %81

81:                                               ; preds = %80
  %82 = load i32, i32* %12, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %12, align 4
  br label %50

84:                                               ; preds = %50
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @conv444to422(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %18 = load i32, i32* @mpeg1, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %260

20:                                               ; preds = %2
  store i32 0, i32* %6, align 4
  br label %21

21:                                               ; preds = %256, %20
  %22 = load i32, i32* %6, align 4
  %23 = load i32, i32* @height, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %25, label %259

25:                                               ; preds = %21
  store i32 0, i32* %5, align 4
  br label %26

26:                                               ; preds = %243, %25
  %27 = load i32, i32* %5, align 4
  %28 = load i32, i32* @width, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %246

30:                                               ; preds = %26
  %31 = load i32, i32* %5, align 4
  %32 = icmp slt i32 %31, 5
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  br label %37

34:                                               ; preds = %30
  %35 = load i32, i32* %5, align 4
  %36 = sub nsw i32 %35, 5
  br label %37

37:                                               ; preds = %34, %33
  %38 = phi i32 [ 0, %33 ], [ %36, %34 ]
  store i32 %38, i32* %7, align 4
  %39 = load i32, i32* %5, align 4
  %40 = icmp slt i32 %39, 4
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  br label %45

42:                                               ; preds = %37
  %43 = load i32, i32* %5, align 4
  %44 = sub nsw i32 %43, 4
  br label %45

45:                                               ; preds = %42, %41
  %46 = phi i32 [ 0, %41 ], [ %44, %42 ]
  store i32 %46, i32* %8, align 4
  %47 = load i32, i32* %5, align 4
  %48 = icmp slt i32 %47, 3
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  br label %53

50:                                               ; preds = %45
  %51 = load i32, i32* %5, align 4
  %52 = sub nsw i32 %51, 3
  br label %53

53:                                               ; preds = %50, %49
  %54 = phi i32 [ 0, %49 ], [ %52, %50 ]
  store i32 %54, i32* %9, align 4
  %55 = load i32, i32* %5, align 4
  %56 = icmp slt i32 %55, 2
  br i1 %56, label %57, label %58

57:                                               ; preds = %53
  br label %61

58:                                               ; preds = %53
  %59 = load i32, i32* %5, align 4
  %60 = sub nsw i32 %59, 2
  br label %61

61:                                               ; preds = %58, %57
  %62 = phi i32 [ 0, %57 ], [ %60, %58 ]
  store i32 %62, i32* %10, align 4
  %63 = load i32, i32* %5, align 4
  %64 = icmp slt i32 %63, 1
  br i1 %64, label %65, label %66

65:                                               ; preds = %61
  br label %69

66:                                               ; preds = %61
  %67 = load i32, i32* %5, align 4
  %68 = sub nsw i32 %67, 1
  br label %69

69:                                               ; preds = %66, %65
  %70 = phi i32 [ 0, %65 ], [ %68, %66 ]
  store i32 %70, i32* %11, align 4
  %71 = load i32, i32* %5, align 4
  %72 = load i32, i32* @width, align 4
  %73 = sub nsw i32 %72, 1
  %74 = icmp slt i32 %71, %73
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = load i32, i32* %5, align 4
  %77 = add nsw i32 %76, 1
  br label %81

78:                                               ; preds = %69
  %79 = load i32, i32* @width, align 4
  %80 = sub nsw i32 %79, 1
  br label %81

81:                                               ; preds = %78, %75
  %82 = phi i32 [ %77, %75 ], [ %80, %78 ]
  store i32 %82, i32* %12, align 4
  %83 = load i32, i32* %5, align 4
  %84 = load i32, i32* @width, align 4
  %85 = sub nsw i32 %84, 2
  %86 = icmp slt i32 %83, %85
  br i1 %86, label %87, label %90

87:                                               ; preds = %81
  %88 = load i32, i32* %5, align 4
  %89 = add nsw i32 %88, 2
  br label %93

90:                                               ; preds = %81
  %91 = load i32, i32* @width, align 4
  %92 = sub nsw i32 %91, 1
  br label %93

93:                                               ; preds = %90, %87
  %94 = phi i32 [ %89, %87 ], [ %92, %90 ]
  store i32 %94, i32* %13, align 4
  %95 = load i32, i32* %5, align 4
  %96 = load i32, i32* @width, align 4
  %97 = sub nsw i32 %96, 3
  %98 = icmp slt i32 %95, %97
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = load i32, i32* %5, align 4
  %101 = add nsw i32 %100, 3
  br label %105

102:                                              ; preds = %93
  %103 = load i32, i32* @width, align 4
  %104 = sub nsw i32 %103, 1
  br label %105

105:                                              ; preds = %102, %99
  %106 = phi i32 [ %101, %99 ], [ %104, %102 ]
  store i32 %106, i32* %14, align 4
  %107 = load i32, i32* %5, align 4
  %108 = load i32, i32* @width, align 4
  %109 = sub nsw i32 %108, 4
  %110 = icmp slt i32 %107, %109
  br i1 %110, label %111, label %114

111:                                              ; preds = %105
  %112 = load i32, i32* %5, align 4
  %113 = add nsw i32 %112, 4
  br label %117

114:                                              ; preds = %105
  %115 = load i32, i32* @width, align 4
  %116 = sub nsw i32 %115, 1
  br label %117

117:                                              ; preds = %114, %111
  %118 = phi i32 [ %113, %111 ], [ %116, %114 ]
  store i32 %118, i32* %15, align 4
  %119 = load i32, i32* %5, align 4
  %120 = load i32, i32* @width, align 4
  %121 = sub nsw i32 %120, 5
  %122 = icmp slt i32 %119, %121
  br i1 %122, label %123, label %126

123:                                              ; preds = %117
  %124 = load i32, i32* %5, align 4
  %125 = add nsw i32 %124, 5
  br label %129

126:                                              ; preds = %117
  %127 = load i32, i32* @width, align 4
  %128 = sub nsw i32 %127, 1
  br label %129

129:                                              ; preds = %126, %123
  %130 = phi i32 [ %125, %123 ], [ %128, %126 ]
  store i32 %130, i32* %16, align 4
  %131 = load i32, i32* %5, align 4
  %132 = load i32, i32* @width, align 4
  %133 = sub nsw i32 %132, 5
  %134 = icmp slt i32 %131, %133
  br i1 %134, label %135, label %138

135:                                              ; preds = %129
  %136 = load i32, i32* %5, align 4
  %137 = add nsw i32 %136, 6
  br label %141

138:                                              ; preds = %129
  %139 = load i32, i32* @width, align 4
  %140 = sub nsw i32 %139, 1
  br label %141

141:                                              ; preds = %138, %135
  %142 = phi i32 [ %137, %135 ], [ %140, %138 ]
  store i32 %142, i32* %17, align 4
  %143 = load i8*, i8** @clp, align 8
  %144 = load i8*, i8** %3, align 8
  %145 = load i32, i32* %5, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* %144, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = load i8*, i8** %3, align 8
  %151 = load i32, i32* %12, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i8, i8* %150, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = add nsw i32 %149, %155
  %157 = mul nsw i32 228, %156
  %158 = load i8*, i8** %3, align 8
  %159 = load i32, i32* %11, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i8, i8* %158, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = load i8*, i8** %3, align 8
  %165 = load i32, i32* %13, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i8, i8* %164, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = add nsw i32 %163, %169
  %171 = mul nsw i32 70, %170
  %172 = add nsw i32 %157, %171
  %173 = load i8*, i8** %3, align 8
  %174 = load i32, i32* %10, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i8, i8* %173, i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i32
  %179 = load i8*, i8** %3, align 8
  %180 = load i32, i32* %14, align 4
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds i8, i8* %179, i64 %181
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i32
  %185 = add nsw i32 %178, %184
  %186 = mul nsw i32 37, %185
  %187 = sub nsw i32 %172, %186
  %188 = load i8*, i8** %3, align 8
  %189 = load i32, i32* %9, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds i8, i8* %188, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = load i8*, i8** %3, align 8
  %195 = load i32, i32* %15, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds i8, i8* %194, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = add nsw i32 %193, %199
  %201 = mul nsw i32 21, %200
  %202 = sub nsw i32 %187, %201
  %203 = load i8*, i8** %3, align 8
  %204 = load i32, i32* %8, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds i8, i8* %203, i64 %205
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i32
  %209 = load i8*, i8** %3, align 8
  %210 = load i32, i32* %16, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i8, i8* %209, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = add nsw i32 %208, %214
  %216 = mul nsw i32 11, %215
  %217 = add nsw i32 %202, %216
  %218 = load i8*, i8** %3, align 8
  %219 = load i32, i32* %7, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i8, i8* %218, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = load i8*, i8** %3, align 8
  %225 = load i32, i32* %17, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds i8, i8* %224, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i32
  %230 = add nsw i32 %223, %229
  %231 = mul nsw i32 5, %230
  %232 = add nsw i32 %217, %231
  %233 = add nsw i32 %232, 256
  %234 = ashr i32 %233, 9
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds i8, i8* %143, i64 %235
  %237 = load i8, i8* %236, align 1
  %238 = load i8*, i8** %4, align 8
  %239 = load i32, i32* %5, align 4
  %240 = ashr i32 %239, 1
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i8, i8* %238, i64 %241
  store i8 %237, i8* %242, align 1
  br label %243

243:                                              ; preds = %141
  %244 = load i32, i32* %5, align 4
  %245 = add nsw i32 %244, 2
  store i32 %245, i32* %5, align 4
  br label %26

246:                                              ; preds = %26
  %247 = load i32, i32* @width, align 4
  %248 = load i8*, i8** %3, align 8
  %249 = sext i32 %247 to i64
  %250 = getelementptr inbounds i8, i8* %248, i64 %249
  store i8* %250, i8** %3, align 8
  %251 = load i32, i32* @width, align 4
  %252 = ashr i32 %251, 1
  %253 = load i8*, i8** %4, align 8
  %254 = sext i32 %252 to i64
  %255 = getelementptr inbounds i8, i8* %253, i64 %254
  store i8* %255, i8** %4, align 8
  br label %256

256:                                              ; preds = %246
  %257 = load i32, i32* %6, align 4
  %258 = add nsw i32 %257, 1
  store i32 %258, i32* %6, align 4
  br label %21

259:                                              ; preds = %21
  br label %411

260:                                              ; preds = %2
  store i32 0, i32* %6, align 4
  br label %261

261:                                              ; preds = %407, %260
  %262 = load i32, i32* %6, align 4
  %263 = load i32, i32* @height, align 4
  %264 = icmp slt i32 %262, %263
  br i1 %264, label %265, label %410

265:                                              ; preds = %261
  store i32 0, i32* %5, align 4
  br label %266

266:                                              ; preds = %394, %265
  %267 = load i32, i32* %5, align 4
  %268 = load i32, i32* @width, align 4
  %269 = icmp slt i32 %267, %268
  br i1 %269, label %270, label %397

270:                                              ; preds = %266
  %271 = load i32, i32* %5, align 4
  %272 = icmp slt i32 %271, 5
  br i1 %272, label %273, label %274

273:                                              ; preds = %270
  br label %277

274:                                              ; preds = %270
  %275 = load i32, i32* %5, align 4
  %276 = sub nsw i32 %275, 5
  br label %277

277:                                              ; preds = %274, %273
  %278 = phi i32 [ 0, %273 ], [ %276, %274 ]
  store i32 %278, i32* %7, align 4
  %279 = load i32, i32* %5, align 4
  %280 = icmp slt i32 %279, 3
  br i1 %280, label %281, label %282

281:                                              ; preds = %277
  br label %285

282:                                              ; preds = %277
  %283 = load i32, i32* %5, align 4
  %284 = sub nsw i32 %283, 3
  br label %285

285:                                              ; preds = %282, %281
  %286 = phi i32 [ 0, %281 ], [ %284, %282 ]
  store i32 %286, i32* %9, align 4
  %287 = load i32, i32* %5, align 4
  %288 = icmp slt i32 %287, 1
  br i1 %288, label %289, label %290

289:                                              ; preds = %285
  br label %293

290:                                              ; preds = %285
  %291 = load i32, i32* %5, align 4
  %292 = sub nsw i32 %291, 1
  br label %293

293:                                              ; preds = %290, %289
  %294 = phi i32 [ 0, %289 ], [ %292, %290 ]
  store i32 %294, i32* %11, align 4
  %295 = load i32, i32* %5, align 4
  %296 = load i32, i32* @width, align 4
  %297 = sub nsw i32 %296, 1
  %298 = icmp slt i32 %295, %297
  br i1 %298, label %299, label %302

299:                                              ; preds = %293
  %300 = load i32, i32* %5, align 4
  %301 = add nsw i32 %300, 1
  br label %305

302:                                              ; preds = %293
  %303 = load i32, i32* @width, align 4
  %304 = sub nsw i32 %303, 1
  br label %305

305:                                              ; preds = %302, %299
  %306 = phi i32 [ %301, %299 ], [ %304, %302 ]
  store i32 %306, i32* %12, align 4
  %307 = load i32, i32* %5, align 4
  %308 = load i32, i32* @width, align 4
  %309 = sub nsw i32 %308, 3
  %310 = icmp slt i32 %307, %309
  br i1 %310, label %311, label %314

311:                                              ; preds = %305
  %312 = load i32, i32* %5, align 4
  %313 = add nsw i32 %312, 3
  br label %317

314:                                              ; preds = %305
  %315 = load i32, i32* @width, align 4
  %316 = sub nsw i32 %315, 1
  br label %317

317:                                              ; preds = %314, %311
  %318 = phi i32 [ %313, %311 ], [ %316, %314 ]
  store i32 %318, i32* %14, align 4
  %319 = load i32, i32* %5, align 4
  %320 = load i32, i32* @width, align 4
  %321 = sub nsw i32 %320, 5
  %322 = icmp slt i32 %319, %321
  br i1 %322, label %323, label %326

323:                                              ; preds = %317
  %324 = load i32, i32* %5, align 4
  %325 = add nsw i32 %324, 5
  br label %329

326:                                              ; preds = %317
  %327 = load i32, i32* @width, align 4
  %328 = sub nsw i32 %327, 1
  br label %329

329:                                              ; preds = %326, %323
  %330 = phi i32 [ %325, %323 ], [ %328, %326 ]
  store i32 %330, i32* %16, align 4
  %331 = load i8*, i8** @clp, align 8
  %332 = load i8*, i8** %3, align 8
  %333 = load i32, i32* %7, align 4
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds i8, i8* %332, i64 %334
  %336 = load i8, i8* %335, align 1
  %337 = zext i8 %336 to i32
  %338 = load i8*, i8** %3, align 8
  %339 = load i32, i32* %16, align 4
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds i8, i8* %338, i64 %340
  %342 = load i8, i8* %341, align 1
  %343 = zext i8 %342 to i32
  %344 = add nsw i32 %337, %343
  %345 = mul nsw i32 22, %344
  %346 = load i8*, i8** %3, align 8
  %347 = load i32, i32* %9, align 4
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds i8, i8* %346, i64 %348
  %350 = load i8, i8* %349, align 1
  %351 = zext i8 %350 to i32
  %352 = load i8*, i8** %3, align 8
  %353 = load i32, i32* %14, align 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds i8, i8* %352, i64 %354
  %356 = load i8, i8* %355, align 1
  %357 = zext i8 %356 to i32
  %358 = add nsw i32 %351, %357
  %359 = mul nsw i32 52, %358
  %360 = sub nsw i32 %345, %359
  %361 = load i8*, i8** %3, align 8
  %362 = load i32, i32* %11, align 4
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds i8, i8* %361, i64 %363
  %365 = load i8, i8* %364, align 1
  %366 = zext i8 %365 to i32
  %367 = load i8*, i8** %3, align 8
  %368 = load i32, i32* %12, align 4
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds i8, i8* %367, i64 %369
  %371 = load i8, i8* %370, align 1
  %372 = zext i8 %371 to i32
  %373 = add nsw i32 %366, %372
  %374 = mul nsw i32 159, %373
  %375 = add nsw i32 %360, %374
  %376 = load i8*, i8** %3, align 8
  %377 = load i32, i32* %5, align 4
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds i8, i8* %376, i64 %378
  %380 = load i8, i8* %379, align 1
  %381 = zext i8 %380 to i32
  %382 = mul nsw i32 256, %381
  %383 = add nsw i32 %375, %382
  %384 = add nsw i32 %383, 256
  %385 = ashr i32 %384, 9
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds i8, i8* %331, i64 %386
  %388 = load i8, i8* %387, align 1
  %389 = load i8*, i8** %4, align 8
  %390 = load i32, i32* %5, align 4
  %391 = ashr i32 %390, 1
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds i8, i8* %389, i64 %392
  store i8 %388, i8* %393, align 1
  br label %394

394:                                              ; preds = %329
  %395 = load i32, i32* %5, align 4
  %396 = add nsw i32 %395, 2
  store i32 %396, i32* %5, align 4
  br label %266

397:                                              ; preds = %266
  %398 = load i32, i32* @width, align 4
  %399 = load i8*, i8** %3, align 8
  %400 = sext i32 %398 to i64
  %401 = getelementptr inbounds i8, i8* %399, i64 %400
  store i8* %401, i8** %3, align 8
  %402 = load i32, i32* @width, align 4
  %403 = ashr i32 %402, 1
  %404 = load i8*, i8** %4, align 8
  %405 = sext i32 %403 to i64
  %406 = getelementptr inbounds i8, i8* %404, i64 %405
  store i8* %406, i8** %4, align 8
  br label %407

407:                                              ; preds = %397
  %408 = load i32, i32* %6, align 4
  %409 = add nsw i32 %408, 1
  store i32 %409, i32* %6, align 4
  br label %261

410:                                              ; preds = %261
  br label %411

411:                                              ; preds = %410, %259
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @conv422to420(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %20 = load i32, i32* @width, align 4
  %21 = ashr i32 %20, 1
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* @prog_frame, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %285

24:                                               ; preds = %2
  store i32 0, i32* %6, align 4
  br label %25

25:                                               ; preds = %281, %24
  %26 = load i32, i32* %6, align 4
  %27 = load i32, i32* %5, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %29, label %284

29:                                               ; preds = %25
  store i32 0, i32* %7, align 4
  br label %30

30:                                               ; preds = %273, %29
  %31 = load i32, i32* %7, align 4
  %32 = load i32, i32* @height, align 4
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %34, label %276

34:                                               ; preds = %30
  %35 = load i32, i32* %7, align 4
  %36 = icmp slt i32 %35, 5
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  br label %41

38:                                               ; preds = %34
  %39 = load i32, i32* %7, align 4
  %40 = sub nsw i32 %39, 5
  br label %41

41:                                               ; preds = %38, %37
  %42 = phi i32 [ 0, %37 ], [ %40, %38 ]
  store i32 %42, i32* %9, align 4
  %43 = load i32, i32* %7, align 4
  %44 = icmp slt i32 %43, 4
  br i1 %44, label %45, label %46

45:                                               ; preds = %41
  br label %49

46:                                               ; preds = %41
  %47 = load i32, i32* %7, align 4
  %48 = sub nsw i32 %47, 4
  br label %49

49:                                               ; preds = %46, %45
  %50 = phi i32 [ 0, %45 ], [ %48, %46 ]
  store i32 %50, i32* %10, align 4
  %51 = load i32, i32* %7, align 4
  %52 = icmp slt i32 %51, 3
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  br label %57

54:                                               ; preds = %49
  %55 = load i32, i32* %7, align 4
  %56 = sub nsw i32 %55, 3
  br label %57

57:                                               ; preds = %54, %53
  %58 = phi i32 [ 0, %53 ], [ %56, %54 ]
  store i32 %58, i32* %11, align 4
  %59 = load i32, i32* %7, align 4
  %60 = icmp slt i32 %59, 2
  br i1 %60, label %61, label %62

61:                                               ; preds = %57
  br label %65

62:                                               ; preds = %57
  %63 = load i32, i32* %7, align 4
  %64 = sub nsw i32 %63, 2
  br label %65

65:                                               ; preds = %62, %61
  %66 = phi i32 [ 0, %61 ], [ %64, %62 ]
  store i32 %66, i32* %12, align 4
  %67 = load i32, i32* %7, align 4
  %68 = icmp slt i32 %67, 1
  br i1 %68, label %69, label %70

69:                                               ; preds = %65
  br label %73

70:                                               ; preds = %65
  %71 = load i32, i32* %7, align 4
  %72 = sub nsw i32 %71, 1
  br label %73

73:                                               ; preds = %70, %69
  %74 = phi i32 [ 0, %69 ], [ %72, %70 ]
  store i32 %74, i32* %13, align 4
  %75 = load i32, i32* %7, align 4
  %76 = load i32, i32* @height, align 4
  %77 = sub nsw i32 %76, 1
  %78 = icmp slt i32 %75, %77
  br i1 %78, label %79, label %82

79:                                               ; preds = %73
  %80 = load i32, i32* %7, align 4
  %81 = add nsw i32 %80, 1
  br label %85

82:                                               ; preds = %73
  %83 = load i32, i32* @height, align 4
  %84 = sub nsw i32 %83, 1
  br label %85

85:                                               ; preds = %82, %79
  %86 = phi i32 [ %81, %79 ], [ %84, %82 ]
  store i32 %86, i32* %14, align 4
  %87 = load i32, i32* %7, align 4
  %88 = load i32, i32* @height, align 4
  %89 = sub nsw i32 %88, 2
  %90 = icmp slt i32 %87, %89
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = load i32, i32* %7, align 4
  %93 = add nsw i32 %92, 2
  br label %97

94:                                               ; preds = %85
  %95 = load i32, i32* @height, align 4
  %96 = sub nsw i32 %95, 1
  br label %97

97:                                               ; preds = %94, %91
  %98 = phi i32 [ %93, %91 ], [ %96, %94 ]
  store i32 %98, i32* %15, align 4
  %99 = load i32, i32* %7, align 4
  %100 = load i32, i32* @height, align 4
  %101 = sub nsw i32 %100, 3
  %102 = icmp slt i32 %99, %101
  br i1 %102, label %103, label %106

103:                                              ; preds = %97
  %104 = load i32, i32* %7, align 4
  %105 = add nsw i32 %104, 3
  br label %109

106:                                              ; preds = %97
  %107 = load i32, i32* @height, align 4
  %108 = sub nsw i32 %107, 1
  br label %109

109:                                              ; preds = %106, %103
  %110 = phi i32 [ %105, %103 ], [ %108, %106 ]
  store i32 %110, i32* %16, align 4
  %111 = load i32, i32* %7, align 4
  %112 = load i32, i32* @height, align 4
  %113 = sub nsw i32 %112, 4
  %114 = icmp slt i32 %111, %113
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = load i32, i32* %7, align 4
  %117 = add nsw i32 %116, 4
  br label %121

118:                                              ; preds = %109
  %119 = load i32, i32* @height, align 4
  %120 = sub nsw i32 %119, 1
  br label %121

121:                                              ; preds = %118, %115
  %122 = phi i32 [ %117, %115 ], [ %120, %118 ]
  store i32 %122, i32* %17, align 4
  %123 = load i32, i32* %7, align 4
  %124 = load i32, i32* @height, align 4
  %125 = sub nsw i32 %124, 5
  %126 = icmp slt i32 %123, %125
  br i1 %126, label %127, label %130

127:                                              ; preds = %121
  %128 = load i32, i32* %7, align 4
  %129 = add nsw i32 %128, 5
  br label %133

130:                                              ; preds = %121
  %131 = load i32, i32* @height, align 4
  %132 = sub nsw i32 %131, 1
  br label %133

133:                                              ; preds = %130, %127
  %134 = phi i32 [ %129, %127 ], [ %132, %130 ]
  store i32 %134, i32* %18, align 4
  %135 = load i32, i32* %7, align 4
  %136 = load i32, i32* @height, align 4
  %137 = sub nsw i32 %136, 5
  %138 = icmp slt i32 %135, %137
  br i1 %138, label %139, label %142

139:                                              ; preds = %133
  %140 = load i32, i32* %7, align 4
  %141 = add nsw i32 %140, 6
  br label %145

142:                                              ; preds = %133
  %143 = load i32, i32* @height, align 4
  %144 = sub nsw i32 %143, 1
  br label %145

145:                                              ; preds = %142, %139
  %146 = phi i32 [ %141, %139 ], [ %144, %142 ]
  store i32 %146, i32* %19, align 4
  %147 = load i8*, i8** @clp, align 8
  %148 = load i8*, i8** %3, align 8
  %149 = load i32, i32* %5, align 4
  %150 = load i32, i32* %7, align 4
  %151 = mul nsw i32 %149, %150
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i8, i8* %148, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = load i8*, i8** %3, align 8
  %157 = load i32, i32* %5, align 4
  %158 = load i32, i32* %14, align 4
  %159 = mul nsw i32 %157, %158
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i8, i8* %156, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = add nsw i32 %155, %163
  %165 = mul nsw i32 228, %164
  %166 = load i8*, i8** %3, align 8
  %167 = load i32, i32* %5, align 4
  %168 = load i32, i32* %13, align 4
  %169 = mul nsw i32 %167, %168
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8, i8* %166, i64 %170
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i32
  %174 = load i8*, i8** %3, align 8
  %175 = load i32, i32* %5, align 4
  %176 = load i32, i32* %15, align 4
  %177 = mul nsw i32 %175, %176
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds i8, i8* %174, i64 %178
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i32
  %182 = add nsw i32 %173, %181
  %183 = mul nsw i32 70, %182
  %184 = add nsw i32 %165, %183
  %185 = load i8*, i8** %3, align 8
  %186 = load i32, i32* %5, align 4
  %187 = load i32, i32* %12, align 4
  %188 = mul nsw i32 %186, %187
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds i8, i8* %185, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i32
  %193 = load i8*, i8** %3, align 8
  %194 = load i32, i32* %5, align 4
  %195 = load i32, i32* %16, align 4
  %196 = mul nsw i32 %194, %195
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds i8, i8* %193, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = add nsw i32 %192, %200
  %202 = mul nsw i32 37, %201
  %203 = sub nsw i32 %184, %202
  %204 = load i8*, i8** %3, align 8
  %205 = load i32, i32* %5, align 4
  %206 = load i32, i32* %11, align 4
  %207 = mul nsw i32 %205, %206
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds i8, i8* %204, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = load i8*, i8** %3, align 8
  %213 = load i32, i32* %5, align 4
  %214 = load i32, i32* %17, align 4
  %215 = mul nsw i32 %213, %214
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds i8, i8* %212, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = add nsw i32 %211, %219
  %221 = mul nsw i32 21, %220
  %222 = sub nsw i32 %203, %221
  %223 = load i8*, i8** %3, align 8
  %224 = load i32, i32* %5, align 4
  %225 = load i32, i32* %10, align 4
  %226 = mul nsw i32 %224, %225
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds i8, i8* %223, i64 %227
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  %231 = load i8*, i8** %3, align 8
  %232 = load i32, i32* %5, align 4
  %233 = load i32, i32* %18, align 4
  %234 = mul nsw i32 %232, %233
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds i8, i8* %231, i64 %235
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i32
  %239 = add nsw i32 %230, %238
  %240 = mul nsw i32 11, %239
  %241 = add nsw i32 %222, %240
  %242 = load i8*, i8** %3, align 8
  %243 = load i32, i32* %5, align 4
  %244 = load i32, i32* %9, align 4
  %245 = mul nsw i32 %243, %244
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i8, i8* %242, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = load i8*, i8** %3, align 8
  %251 = load i32, i32* %5, align 4
  %252 = load i32, i32* %19, align 4
  %253 = mul nsw i32 %251, %252
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds i8, i8* %250, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = zext i8 %256 to i32
  %258 = add nsw i32 %249, %257
  %259 = mul nsw i32 5, %258
  %260 = add nsw i32 %241, %259
  %261 = add nsw i32 %260, 256
  %262 = ashr i32 %261, 9
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds i8, i8* %147, i64 %263
  %265 = load i8, i8* %264, align 1
  %266 = load i8*, i8** %4, align 8
  %267 = load i32, i32* %5, align 4
  %268 = load i32, i32* %7, align 4
  %269 = ashr i32 %268, 1
  %270 = mul nsw i32 %267, %269
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds i8, i8* %266, i64 %271
  store i8 %265, i8* %272, align 1
  br label %273

273:                                              ; preds = %145
  %274 = load i32, i32* %7, align 4
  %275 = add nsw i32 %274, 2
  store i32 %275, i32* %7, align 4
  br label %30

276:                                              ; preds = %30
  %277 = load i8*, i8** %3, align 8
  %278 = getelementptr inbounds i8, i8* %277, i32 1
  store i8* %278, i8** %3, align 8
  %279 = load i8*, i8** %4, align 8
  %280 = getelementptr inbounds i8, i8* %279, i32 1
  store i8* %280, i8** %4, align 8
  br label %281

281:                                              ; preds = %276
  %282 = load i32, i32* %6, align 4
  %283 = add nsw i32 %282, 1
  store i32 %283, i32* %6, align 4
  br label %25

284:                                              ; preds = %25
  br label %809

285:                                              ; preds = %2
  store i32 0, i32* %6, align 4
  br label %286

286:                                              ; preds = %805, %285
  %287 = load i32, i32* %6, align 4
  %288 = load i32, i32* %5, align 4
  %289 = icmp slt i32 %287, %288
  br i1 %289, label %290, label %808

290:                                              ; preds = %286
  store i32 0, i32* %7, align 4
  br label %291

291:                                              ; preds = %797, %290
  %292 = load i32, i32* %7, align 4
  %293 = load i32, i32* @height, align 4
  %294 = icmp slt i32 %292, %293
  br i1 %294, label %295, label %800

295:                                              ; preds = %291
  %296 = load i32, i32* %7, align 4
  %297 = icmp slt i32 %296, 10
  br i1 %297, label %298, label %299

298:                                              ; preds = %295
  br label %302

299:                                              ; preds = %295
  %300 = load i32, i32* %7, align 4
  %301 = sub nsw i32 %300, 10
  br label %302

302:                                              ; preds = %299, %298
  %303 = phi i32 [ 0, %298 ], [ %301, %299 ]
  store i32 %303, i32* %9, align 4
  %304 = load i32, i32* %7, align 4
  %305 = icmp slt i32 %304, 8
  br i1 %305, label %306, label %307

306:                                              ; preds = %302
  br label %310

307:                                              ; preds = %302
  %308 = load i32, i32* %7, align 4
  %309 = sub nsw i32 %308, 8
  br label %310

310:                                              ; preds = %307, %306
  %311 = phi i32 [ 0, %306 ], [ %309, %307 ]
  store i32 %311, i32* %10, align 4
  %312 = load i32, i32* %7, align 4
  %313 = icmp slt i32 %312, 6
  br i1 %313, label %314, label %315

314:                                              ; preds = %310
  br label %318

315:                                              ; preds = %310
  %316 = load i32, i32* %7, align 4
  %317 = sub nsw i32 %316, 6
  br label %318

318:                                              ; preds = %315, %314
  %319 = phi i32 [ 0, %314 ], [ %317, %315 ]
  store i32 %319, i32* %11, align 4
  %320 = load i32, i32* %7, align 4
  %321 = icmp slt i32 %320, 4
  br i1 %321, label %322, label %323

322:                                              ; preds = %318
  br label %326

323:                                              ; preds = %318
  %324 = load i32, i32* %7, align 4
  %325 = sub nsw i32 %324, 4
  br label %326

326:                                              ; preds = %323, %322
  %327 = phi i32 [ 0, %322 ], [ %325, %323 ]
  store i32 %327, i32* %12, align 4
  %328 = load i32, i32* %7, align 4
  %329 = icmp slt i32 %328, 2
  br i1 %329, label %330, label %331

330:                                              ; preds = %326
  br label %334

331:                                              ; preds = %326
  %332 = load i32, i32* %7, align 4
  %333 = sub nsw i32 %332, 2
  br label %334

334:                                              ; preds = %331, %330
  %335 = phi i32 [ 0, %330 ], [ %333, %331 ]
  store i32 %335, i32* %13, align 4
  %336 = load i32, i32* %7, align 4
  %337 = load i32, i32* @height, align 4
  %338 = sub nsw i32 %337, 2
  %339 = icmp slt i32 %336, %338
  br i1 %339, label %340, label %343

340:                                              ; preds = %334
  %341 = load i32, i32* %7, align 4
  %342 = add nsw i32 %341, 2
  br label %346

343:                                              ; preds = %334
  %344 = load i32, i32* @height, align 4
  %345 = sub nsw i32 %344, 2
  br label %346

346:                                              ; preds = %343, %340
  %347 = phi i32 [ %342, %340 ], [ %345, %343 ]
  store i32 %347, i32* %14, align 4
  %348 = load i32, i32* %7, align 4
  %349 = load i32, i32* @height, align 4
  %350 = sub nsw i32 %349, 4
  %351 = icmp slt i32 %348, %350
  br i1 %351, label %352, label %355

352:                                              ; preds = %346
  %353 = load i32, i32* %7, align 4
  %354 = add nsw i32 %353, 4
  br label %358

355:                                              ; preds = %346
  %356 = load i32, i32* @height, align 4
  %357 = sub nsw i32 %356, 2
  br label %358

358:                                              ; preds = %355, %352
  %359 = phi i32 [ %354, %352 ], [ %357, %355 ]
  store i32 %359, i32* %15, align 4
  %360 = load i32, i32* %7, align 4
  %361 = load i32, i32* @height, align 4
  %362 = sub nsw i32 %361, 6
  %363 = icmp slt i32 %360, %362
  br i1 %363, label %364, label %367

364:                                              ; preds = %358
  %365 = load i32, i32* %7, align 4
  %366 = add nsw i32 %365, 6
  br label %370

367:                                              ; preds = %358
  %368 = load i32, i32* @height, align 4
  %369 = sub nsw i32 %368, 2
  br label %370

370:                                              ; preds = %367, %364
  %371 = phi i32 [ %366, %364 ], [ %369, %367 ]
  store i32 %371, i32* %16, align 4
  %372 = load i32, i32* %7, align 4
  %373 = load i32, i32* @height, align 4
  %374 = sub nsw i32 %373, 8
  %375 = icmp slt i32 %372, %374
  br i1 %375, label %376, label %379

376:                                              ; preds = %370
  %377 = load i32, i32* %7, align 4
  %378 = add nsw i32 %377, 8
  br label %382

379:                                              ; preds = %370
  %380 = load i32, i32* @height, align 4
  %381 = sub nsw i32 %380, 2
  br label %382

382:                                              ; preds = %379, %376
  %383 = phi i32 [ %378, %376 ], [ %381, %379 ]
  store i32 %383, i32* %17, align 4
  %384 = load i32, i32* %7, align 4
  %385 = load i32, i32* @height, align 4
  %386 = sub nsw i32 %385, 10
  %387 = icmp slt i32 %384, %386
  br i1 %387, label %388, label %391

388:                                              ; preds = %382
  %389 = load i32, i32* %7, align 4
  %390 = add nsw i32 %389, 10
  br label %394

391:                                              ; preds = %382
  %392 = load i32, i32* @height, align 4
  %393 = sub nsw i32 %392, 2
  br label %394

394:                                              ; preds = %391, %388
  %395 = phi i32 [ %390, %388 ], [ %393, %391 ]
  store i32 %395, i32* %18, align 4
  %396 = load i32, i32* %7, align 4
  %397 = load i32, i32* @height, align 4
  %398 = sub nsw i32 %397, 12
  %399 = icmp slt i32 %396, %398
  br i1 %399, label %400, label %403

400:                                              ; preds = %394
  %401 = load i32, i32* %7, align 4
  %402 = add nsw i32 %401, 12
  br label %406

403:                                              ; preds = %394
  %404 = load i32, i32* @height, align 4
  %405 = sub nsw i32 %404, 2
  br label %406

406:                                              ; preds = %403, %400
  %407 = phi i32 [ %402, %400 ], [ %405, %403 ]
  store i32 %407, i32* %19, align 4
  %408 = load i8*, i8** @clp, align 8
  %409 = load i8*, i8** %3, align 8
  %410 = load i32, i32* %5, align 4
  %411 = load i32, i32* %9, align 4
  %412 = mul nsw i32 %410, %411
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds i8, i8* %409, i64 %413
  %415 = load i8, i8* %414, align 1
  %416 = zext i8 %415 to i32
  %417 = mul nsw i32 8, %416
  %418 = load i8*, i8** %3, align 8
  %419 = load i32, i32* %5, align 4
  %420 = load i32, i32* %10, align 4
  %421 = mul nsw i32 %419, %420
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds i8, i8* %418, i64 %422
  %424 = load i8, i8* %423, align 1
  %425 = zext i8 %424 to i32
  %426 = mul nsw i32 5, %425
  %427 = add nsw i32 %417, %426
  %428 = load i8*, i8** %3, align 8
  %429 = load i32, i32* %5, align 4
  %430 = load i32, i32* %11, align 4
  %431 = mul nsw i32 %429, %430
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds i8, i8* %428, i64 %432
  %434 = load i8, i8* %433, align 1
  %435 = zext i8 %434 to i32
  %436 = mul nsw i32 30, %435
  %437 = sub nsw i32 %427, %436
  %438 = load i8*, i8** %3, align 8
  %439 = load i32, i32* %5, align 4
  %440 = load i32, i32* %12, align 4
  %441 = mul nsw i32 %439, %440
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds i8, i8* %438, i64 %442
  %444 = load i8, i8* %443, align 1
  %445 = zext i8 %444 to i32
  %446 = mul nsw i32 18, %445
  %447 = sub nsw i32 %437, %446
  %448 = load i8*, i8** %3, align 8
  %449 = load i32, i32* %5, align 4
  %450 = load i32, i32* %13, align 4
  %451 = mul nsw i32 %449, %450
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds i8, i8* %448, i64 %452
  %454 = load i8, i8* %453, align 1
  %455 = zext i8 %454 to i32
  %456 = mul nsw i32 113, %455
  %457 = add nsw i32 %447, %456
  %458 = load i8*, i8** %3, align 8
  %459 = load i32, i32* %5, align 4
  %460 = load i32, i32* %7, align 4
  %461 = mul nsw i32 %459, %460
  %462 = sext i32 %461 to i64
  %463 = getelementptr inbounds i8, i8* %458, i64 %462
  %464 = load i8, i8* %463, align 1
  %465 = zext i8 %464 to i32
  %466 = mul nsw i32 242, %465
  %467 = add nsw i32 %457, %466
  %468 = load i8*, i8** %3, align 8
  %469 = load i32, i32* %5, align 4
  %470 = load i32, i32* %14, align 4
  %471 = mul nsw i32 %469, %470
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds i8, i8* %468, i64 %472
  %474 = load i8, i8* %473, align 1
  %475 = zext i8 %474 to i32
  %476 = mul nsw i32 192, %475
  %477 = add nsw i32 %467, %476
  %478 = load i8*, i8** %3, align 8
  %479 = load i32, i32* %5, align 4
  %480 = load i32, i32* %15, align 4
  %481 = mul nsw i32 %479, %480
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds i8, i8* %478, i64 %482
  %484 = load i8, i8* %483, align 1
  %485 = zext i8 %484 to i32
  %486 = mul nsw i32 35, %485
  %487 = add nsw i32 %477, %486
  %488 = load i8*, i8** %3, align 8
  %489 = load i32, i32* %5, align 4
  %490 = load i32, i32* %16, align 4
  %491 = mul nsw i32 %489, %490
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds i8, i8* %488, i64 %492
  %494 = load i8, i8* %493, align 1
  %495 = zext i8 %494 to i32
  %496 = mul nsw i32 38, %495
  %497 = sub nsw i32 %487, %496
  %498 = load i8*, i8** %3, align 8
  %499 = load i32, i32* %5, align 4
  %500 = load i32, i32* %17, align 4
  %501 = mul nsw i32 %499, %500
  %502 = sext i32 %501 to i64
  %503 = getelementptr inbounds i8, i8* %498, i64 %502
  %504 = load i8, i8* %503, align 1
  %505 = zext i8 %504 to i32
  %506 = mul nsw i32 10, %505
  %507 = sub nsw i32 %497, %506
  %508 = load i8*, i8** %3, align 8
  %509 = load i32, i32* %5, align 4
  %510 = load i32, i32* %18, align 4
  %511 = mul nsw i32 %509, %510
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds i8, i8* %508, i64 %512
  %514 = load i8, i8* %513, align 1
  %515 = zext i8 %514 to i32
  %516 = mul nsw i32 11, %515
  %517 = add nsw i32 %507, %516
  %518 = load i8*, i8** %3, align 8
  %519 = load i32, i32* %5, align 4
  %520 = load i32, i32* %19, align 4
  %521 = mul nsw i32 %519, %520
  %522 = sext i32 %521 to i64
  %523 = getelementptr inbounds i8, i8* %518, i64 %522
  %524 = load i8, i8* %523, align 1
  %525 = zext i8 %524 to i32
  %526 = mul nsw i32 2, %525
  %527 = add nsw i32 %517, %526
  %528 = add nsw i32 %527, 256
  %529 = ashr i32 %528, 9
  %530 = sext i32 %529 to i64
  %531 = getelementptr inbounds i8, i8* %408, i64 %530
  %532 = load i8, i8* %531, align 1
  %533 = load i8*, i8** %4, align 8
  %534 = load i32, i32* %5, align 4
  %535 = load i32, i32* %7, align 4
  %536 = ashr i32 %535, 1
  %537 = mul nsw i32 %534, %536
  %538 = sext i32 %537 to i64
  %539 = getelementptr inbounds i8, i8* %533, i64 %538
  store i8 %532, i8* %539, align 1
  %540 = load i32, i32* %7, align 4
  %541 = icmp slt i32 %540, 9
  br i1 %541, label %542, label %543

542:                                              ; preds = %406
  br label %546

543:                                              ; preds = %406
  %544 = load i32, i32* %7, align 4
  %545 = sub nsw i32 %544, 9
  br label %546

546:                                              ; preds = %543, %542
  %547 = phi i32 [ 1, %542 ], [ %545, %543 ]
  store i32 %547, i32* %8, align 4
  %548 = load i32, i32* %7, align 4
  %549 = icmp slt i32 %548, 7
  br i1 %549, label %550, label %551

550:                                              ; preds = %546
  br label %554

551:                                              ; preds = %546
  %552 = load i32, i32* %7, align 4
  %553 = sub nsw i32 %552, 7
  br label %554

554:                                              ; preds = %551, %550
  %555 = phi i32 [ 1, %550 ], [ %553, %551 ]
  store i32 %555, i32* %9, align 4
  %556 = load i32, i32* %7, align 4
  %557 = icmp slt i32 %556, 5
  br i1 %557, label %558, label %559

558:                                              ; preds = %554
  br label %562

559:                                              ; preds = %554
  %560 = load i32, i32* %7, align 4
  %561 = sub nsw i32 %560, 5
  br label %562

562:                                              ; preds = %559, %558
  %563 = phi i32 [ 1, %558 ], [ %561, %559 ]
  store i32 %563, i32* %10, align 4
  %564 = load i32, i32* %7, align 4
  %565 = icmp slt i32 %564, 3
  br i1 %565, label %566, label %567

566:                                              ; preds = %562
  br label %570

567:                                              ; preds = %562
  %568 = load i32, i32* %7, align 4
  %569 = sub nsw i32 %568, 3
  br label %570

570:                                              ; preds = %567, %566
  %571 = phi i32 [ 1, %566 ], [ %569, %567 ]
  store i32 %571, i32* %11, align 4
  %572 = load i32, i32* %7, align 4
  %573 = icmp slt i32 %572, 1
  br i1 %573, label %574, label %575

574:                                              ; preds = %570
  br label %578

575:                                              ; preds = %570
  %576 = load i32, i32* %7, align 4
  %577 = sub nsw i32 %576, 1
  br label %578

578:                                              ; preds = %575, %574
  %579 = phi i32 [ 1, %574 ], [ %577, %575 ]
  store i32 %579, i32* %12, align 4
  %580 = load i32, i32* %7, align 4
  %581 = load i32, i32* @height, align 4
  %582 = sub nsw i32 %581, 1
  %583 = icmp slt i32 %580, %582
  br i1 %583, label %584, label %587

584:                                              ; preds = %578
  %585 = load i32, i32* %7, align 4
  %586 = add nsw i32 %585, 1
  br label %590

587:                                              ; preds = %578
  %588 = load i32, i32* @height, align 4
  %589 = sub nsw i32 %588, 1
  br label %590

590:                                              ; preds = %587, %584
  %591 = phi i32 [ %586, %584 ], [ %589, %587 ]
  store i32 %591, i32* %13, align 4
  %592 = load i32, i32* %7, align 4
  %593 = load i32, i32* @height, align 4
  %594 = sub nsw i32 %593, 3
  %595 = icmp slt i32 %592, %594
  br i1 %595, label %596, label %599

596:                                              ; preds = %590
  %597 = load i32, i32* %7, align 4
  %598 = add nsw i32 %597, 3
  br label %602

599:                                              ; preds = %590
  %600 = load i32, i32* @height, align 4
  %601 = sub nsw i32 %600, 1
  br label %602

602:                                              ; preds = %599, %596
  %603 = phi i32 [ %598, %596 ], [ %601, %599 ]
  store i32 %603, i32* %14, align 4
  %604 = load i32, i32* %7, align 4
  %605 = load i32, i32* @height, align 4
  %606 = sub nsw i32 %605, 5
  %607 = icmp slt i32 %604, %606
  br i1 %607, label %608, label %611

608:                                              ; preds = %602
  %609 = load i32, i32* %7, align 4
  %610 = add nsw i32 %609, 5
  br label %614

611:                                              ; preds = %602
  %612 = load i32, i32* @height, align 4
  %613 = sub nsw i32 %612, 1
  br label %614

614:                                              ; preds = %611, %608
  %615 = phi i32 [ %610, %608 ], [ %613, %611 ]
  store i32 %615, i32* %15, align 4
  %616 = load i32, i32* %7, align 4
  %617 = load i32, i32* @height, align 4
  %618 = sub nsw i32 %617, 7
  %619 = icmp slt i32 %616, %618
  br i1 %619, label %620, label %623

620:                                              ; preds = %614
  %621 = load i32, i32* %7, align 4
  %622 = add nsw i32 %621, 7
  br label %626

623:                                              ; preds = %614
  %624 = load i32, i32* @height, align 4
  %625 = sub nsw i32 %624, 1
  br label %626

626:                                              ; preds = %623, %620
  %627 = phi i32 [ %622, %620 ], [ %625, %623 ]
  store i32 %627, i32* %16, align 4
  %628 = load i32, i32* %7, align 4
  %629 = load i32, i32* @height, align 4
  %630 = sub nsw i32 %629, 9
  %631 = icmp slt i32 %628, %630
  br i1 %631, label %632, label %635

632:                                              ; preds = %626
  %633 = load i32, i32* %7, align 4
  %634 = add nsw i32 %633, 9
  br label %638

635:                                              ; preds = %626
  %636 = load i32, i32* @height, align 4
  %637 = sub nsw i32 %636, 1
  br label %638

638:                                              ; preds = %635, %632
  %639 = phi i32 [ %634, %632 ], [ %637, %635 ]
  store i32 %639, i32* %17, align 4
  %640 = load i32, i32* %7, align 4
  %641 = load i32, i32* @height, align 4
  %642 = sub nsw i32 %641, 11
  %643 = icmp slt i32 %640, %642
  br i1 %643, label %644, label %647

644:                                              ; preds = %638
  %645 = load i32, i32* %7, align 4
  %646 = add nsw i32 %645, 11
  br label %650

647:                                              ; preds = %638
  %648 = load i32, i32* @height, align 4
  %649 = sub nsw i32 %648, 1
  br label %650

650:                                              ; preds = %647, %644
  %651 = phi i32 [ %646, %644 ], [ %649, %647 ]
  store i32 %651, i32* %18, align 4
  %652 = load i32, i32* %7, align 4
  %653 = load i32, i32* @height, align 4
  %654 = sub nsw i32 %653, 13
  %655 = icmp slt i32 %652, %654
  br i1 %655, label %656, label %659

656:                                              ; preds = %650
  %657 = load i32, i32* %7, align 4
  %658 = add nsw i32 %657, 13
  br label %662

659:                                              ; preds = %650
  %660 = load i32, i32* @height, align 4
  %661 = sub nsw i32 %660, 1
  br label %662

662:                                              ; preds = %659, %656
  %663 = phi i32 [ %658, %656 ], [ %661, %659 ]
  store i32 %663, i32* %19, align 4
  %664 = load i8*, i8** @clp, align 8
  %665 = load i8*, i8** %3, align 8
  %666 = load i32, i32* %5, align 4
  %667 = load i32, i32* %19, align 4
  %668 = mul nsw i32 %666, %667
  %669 = sext i32 %668 to i64
  %670 = getelementptr inbounds i8, i8* %665, i64 %669
  %671 = load i8, i8* %670, align 1
  %672 = zext i8 %671 to i32
  %673 = mul nsw i32 8, %672
  %674 = load i8*, i8** %3, align 8
  %675 = load i32, i32* %5, align 4
  %676 = load i32, i32* %18, align 4
  %677 = mul nsw i32 %675, %676
  %678 = sext i32 %677 to i64
  %679 = getelementptr inbounds i8, i8* %674, i64 %678
  %680 = load i8, i8* %679, align 1
  %681 = zext i8 %680 to i32
  %682 = mul nsw i32 5, %681
  %683 = add nsw i32 %673, %682
  %684 = load i8*, i8** %3, align 8
  %685 = load i32, i32* %5, align 4
  %686 = load i32, i32* %17, align 4
  %687 = mul nsw i32 %685, %686
  %688 = sext i32 %687 to i64
  %689 = getelementptr inbounds i8, i8* %684, i64 %688
  %690 = load i8, i8* %689, align 1
  %691 = zext i8 %690 to i32
  %692 = mul nsw i32 30, %691
  %693 = sub nsw i32 %683, %692
  %694 = load i8*, i8** %3, align 8
  %695 = load i32, i32* %5, align 4
  %696 = load i32, i32* %16, align 4
  %697 = mul nsw i32 %695, %696
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds i8, i8* %694, i64 %698
  %700 = load i8, i8* %699, align 1
  %701 = zext i8 %700 to i32
  %702 = mul nsw i32 18, %701
  %703 = sub nsw i32 %693, %702
  %704 = load i8*, i8** %3, align 8
  %705 = load i32, i32* %5, align 4
  %706 = load i32, i32* %15, align 4
  %707 = mul nsw i32 %705, %706
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds i8, i8* %704, i64 %708
  %710 = load i8, i8* %709, align 1
  %711 = zext i8 %710 to i32
  %712 = mul nsw i32 113, %711
  %713 = add nsw i32 %703, %712
  %714 = load i8*, i8** %3, align 8
  %715 = load i32, i32* %5, align 4
  %716 = load i32, i32* %14, align 4
  %717 = mul nsw i32 %715, %716
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds i8, i8* %714, i64 %718
  %720 = load i8, i8* %719, align 1
  %721 = zext i8 %720 to i32
  %722 = mul nsw i32 242, %721
  %723 = add nsw i32 %713, %722
  %724 = load i8*, i8** %3, align 8
  %725 = load i32, i32* %5, align 4
  %726 = load i32, i32* %13, align 4
  %727 = mul nsw i32 %725, %726
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds i8, i8* %724, i64 %728
  %730 = load i8, i8* %729, align 1
  %731 = zext i8 %730 to i32
  %732 = mul nsw i32 192, %731
  %733 = add nsw i32 %723, %732
  %734 = load i8*, i8** %3, align 8
  %735 = load i32, i32* %5, align 4
  %736 = load i32, i32* %12, align 4
  %737 = mul nsw i32 %735, %736
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds i8, i8* %734, i64 %738
  %740 = load i8, i8* %739, align 1
  %741 = zext i8 %740 to i32
  %742 = mul nsw i32 35, %741
  %743 = add nsw i32 %733, %742
  %744 = load i8*, i8** %3, align 8
  %745 = load i32, i32* %5, align 4
  %746 = load i32, i32* %11, align 4
  %747 = mul nsw i32 %745, %746
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds i8, i8* %744, i64 %748
  %750 = load i8, i8* %749, align 1
  %751 = zext i8 %750 to i32
  %752 = mul nsw i32 38, %751
  %753 = sub nsw i32 %743, %752
  %754 = load i8*, i8** %3, align 8
  %755 = load i32, i32* %5, align 4
  %756 = load i32, i32* %10, align 4
  %757 = mul nsw i32 %755, %756
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds i8, i8* %754, i64 %758
  %760 = load i8, i8* %759, align 1
  %761 = zext i8 %760 to i32
  %762 = mul nsw i32 10, %761
  %763 = sub nsw i32 %753, %762
  %764 = load i8*, i8** %3, align 8
  %765 = load i32, i32* %5, align 4
  %766 = load i32, i32* %9, align 4
  %767 = mul nsw i32 %765, %766
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds i8, i8* %764, i64 %768
  %770 = load i8, i8* %769, align 1
  %771 = zext i8 %770 to i32
  %772 = mul nsw i32 11, %771
  %773 = add nsw i32 %763, %772
  %774 = load i8*, i8** %3, align 8
  %775 = load i32, i32* %5, align 4
  %776 = load i32, i32* %8, align 4
  %777 = mul nsw i32 %775, %776
  %778 = sext i32 %777 to i64
  %779 = getelementptr inbounds i8, i8* %774, i64 %778
  %780 = load i8, i8* %779, align 1
  %781 = zext i8 %780 to i32
  %782 = mul nsw i32 2, %781
  %783 = add nsw i32 %773, %782
  %784 = add nsw i32 %783, 256
  %785 = ashr i32 %784, 9
  %786 = sext i32 %785 to i64
  %787 = getelementptr inbounds i8, i8* %664, i64 %786
  %788 = load i8, i8* %787, align 1
  %789 = load i8*, i8** %4, align 8
  %790 = load i32, i32* %5, align 4
  %791 = load i32, i32* %7, align 4
  %792 = ashr i32 %791, 1
  %793 = add nsw i32 %792, 1
  %794 = mul nsw i32 %790, %793
  %795 = sext i32 %794 to i64
  %796 = getelementptr inbounds i8, i8* %789, i64 %795
  store i8 %788, i8* %796, align 1
  br label %797

797:                                              ; preds = %662
  %798 = load i32, i32* %7, align 4
  %799 = add nsw i32 %798, 4
  store i32 %799, i32* %7, align 4
  br label %291

800:                                              ; preds = %291
  %801 = load i8*, i8** %3, align 8
  %802 = getelementptr inbounds i8, i8* %801, i32 1
  store i8* %802, i8** %3, align 8
  %803 = load i8*, i8** %4, align 8
  %804 = getelementptr inbounds i8, i8* %803, i32 1
  store i8* %804, i8** %4, align 8
  br label %805

805:                                              ; preds = %800
  %806 = load i32, i32* %6, align 4
  %807 = add nsw i32 %806, 1
  store i32 %807, i32* %6, align 4
  br label %286

808:                                              ; preds = %286
  br label %809

809:                                              ; preds = %808, %284
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local signext i8 @pbm_getc(%struct._IO_FILE* %0) #0 {
  %2 = alloca %struct._IO_FILE*, align 8
  %3 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %5 = call i32 @getc(%struct._IO_FILE* %4)
  %6 = trunc i32 %5 to i8
  store i8 %6, i8* %3, align 1
  %7 = load i8, i8* %3, align 1
  %8 = sext i8 %7 to i32
  %9 = icmp eq i32 %8, 35
  br i1 %9, label %10, label %26

10:                                               ; preds = %1
  br label %11

11:                                               ; preds = %23, %10
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %13 = call i32 @getc(%struct._IO_FILE* %12)
  %14 = trunc i32 %13 to i8
  store i8 %14, i8* %3, align 1
  br label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %3, align 1
  %17 = sext i8 %16 to i32
  %18 = icmp ne i32 %17, 10
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = load i8, i8* %3, align 1
  %21 = sext i8 %20 to i32
  %22 = icmp ne i32 %21, 13
  br label %23

23:                                               ; preds = %19, %15
  %24 = phi i1 [ false, %15 ], [ %22, %19 ]
  br i1 %24, label %11, label %25

25:                                               ; preds = %23
  br label %26

26:                                               ; preds = %25, %1
  %27 = load i8, i8* %3, align 1
  ret i8 %27
}

declare dso_local i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @calcSNR(i8** %0, i8** %1) #0 {
  %3 = alloca i8**, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  store i8** %0, i8*** %3, align 8
  store i8** %1, i8*** %4, align 8
  %10 = load i32, i32* @horizontal_size, align 4
  store i32 %10, i32* %5, align 4
  %11 = load i32, i32* @pict_struct, align 4
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i32, i32* @vertical_size, align 4
  br label %18

15:                                               ; preds = %2
  %16 = load i32, i32* @vertical_size, align 4
  %17 = ashr i32 %16, 1
  br label %18

18:                                               ; preds = %15, %13
  %19 = phi i32 [ %14, %13 ], [ %17, %15 ]
  store i32 %19, i32* %6, align 4
  %20 = load i32, i32* @pict_struct, align 4
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = load i32, i32* @width, align 4
  br label %25

24:                                               ; preds = %18
  br label %25

25:                                               ; preds = %24, %22
  %26 = phi i32 [ %23, %22 ], [ 0, %24 ]
  store i32 %26, i32* %7, align 4
  %27 = load i8**, i8*** %3, align 8
  %28 = getelementptr inbounds i8*, i8** %27, i64 0
  %29 = load i8*, i8** %28, align 8
  %30 = load i32, i32* %7, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %29, i64 %31
  %33 = load i8**, i8*** %4, align 8
  %34 = getelementptr inbounds i8*, i8** %33, i64 0
  %35 = load i8*, i8** %34, align 8
  %36 = load i32, i32* %7, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %35, i64 %37
  %39 = load i32, i32* @width2, align 4
  %40 = load i32, i32* %5, align 4
  %41 = load i32, i32* %6, align 4
  call void @calcSNR1(i8* %32, i8* %38, i32 %39, i32 %40, i32 %41, double* %8, double* %9)
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %43 = load double, double* %8, align 8
  %44 = load double, double* %9, align 8
  %45 = load double, double* %9, align 8
  %46 = fdiv double 6.502500e+04, %45
  %47 = call double @log10(double %46) #6
  %48 = fmul double 1.000000e+01, %47
  %49 = load double, double* %8, align 8
  %50 = load double, double* %9, align 8
  %51 = fdiv double %49, %50
  %52 = call double @log10(double %51) #6
  %53 = fmul double 1.000000e+01, %52
  %54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.222, i64 0, i64 0), double %43, double %44, double %48, double %53)
  %55 = load i32, i32* @chroma_format, align 4
  %56 = icmp ne i32 %55, 3
  br i1 %56, label %57, label %62

57:                                               ; preds = %25
  %58 = load i32, i32* %5, align 4
  %59 = ashr i32 %58, 1
  store i32 %59, i32* %5, align 4
  %60 = load i32, i32* %7, align 4
  %61 = ashr i32 %60, 1
  store i32 %61, i32* %7, align 4
  br label %62

62:                                               ; preds = %57, %25
  %63 = load i32, i32* @chroma_format, align 4
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %68

65:                                               ; preds = %62
  %66 = load i32, i32* %6, align 4
  %67 = ashr i32 %66, 1
  store i32 %67, i32* %6, align 4
  br label %68

68:                                               ; preds = %65, %62
  %69 = load i8**, i8*** %3, align 8
  %70 = getelementptr inbounds i8*, i8** %69, i64 1
  %71 = load i8*, i8** %70, align 8
  %72 = load i32, i32* %7, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %71, i64 %73
  %75 = load i8**, i8*** %4, align 8
  %76 = getelementptr inbounds i8*, i8** %75, i64 1
  %77 = load i8*, i8** %76, align 8
  %78 = load i32, i32* %7, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %77, i64 %79
  %81 = load i32, i32* @chrom_width2, align 4
  %82 = load i32, i32* %5, align 4
  %83 = load i32, i32* %6, align 4
  call void @calcSNR1(i8* %74, i8* %80, i32 %81, i32 %82, i32 %83, double* %8, double* %9)
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %85 = load double, double* %8, align 8
  %86 = load double, double* %9, align 8
  %87 = load double, double* %9, align 8
  %88 = fdiv double 6.502500e+04, %87
  %89 = call double @log10(double %88) #6
  %90 = fmul double 1.000000e+01, %89
  %91 = load double, double* %8, align 8
  %92 = load double, double* %9, align 8
  %93 = fdiv double %91, %92
  %94 = call double @log10(double %93) #6
  %95 = fmul double 1.000000e+01, %94
  %96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %84, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1.223, i64 0, i64 0), double %85, double %86, double %90, double %95)
  %97 = load i8**, i8*** %3, align 8
  %98 = getelementptr inbounds i8*, i8** %97, i64 2
  %99 = load i8*, i8** %98, align 8
  %100 = load i32, i32* %7, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* %99, i64 %101
  %103 = load i8**, i8*** %4, align 8
  %104 = getelementptr inbounds i8*, i8** %103, i64 2
  %105 = load i8*, i8** %104, align 8
  %106 = load i32, i32* %7, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i8, i8* %105, i64 %107
  %109 = load i32, i32* @chrom_width2, align 4
  %110 = load i32, i32* %5, align 4
  %111 = load i32, i32* %6, align 4
  call void @calcSNR1(i8* %102, i8* %108, i32 %109, i32 %110, i32 %111, double* %8, double* %9)
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %113 = load double, double* %8, align 8
  %114 = load double, double* %9, align 8
  %115 = load double, double* %9, align 8
  %116 = fdiv double 6.502500e+04, %115
  %117 = call double @log10(double %116) #6
  %118 = fmul double 1.000000e+01, %117
  %119 = load double, double* %8, align 8
  %120 = load double, double* %9, align 8
  %121 = fdiv double %119, %120
  %122 = call double @log10(double %121) #6
  %123 = fmul double 1.000000e+01, %122
  %124 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2.224, i64 0, i64 0), double %113, double %114, double %118, double %123)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @calcSNR1(i8* %0, i8* %1, i32 %2, i32 %3, i32 %4, double* %5, double* %6) #0 {
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  store i8* %0, i8** %8, align 8
  store i8* %1, i8** %9, align 8
  store i32 %2, i32* %10, align 4
  store i32 %3, i32* %11, align 4
  store i32 %4, i32* %12, align 4
  store double* %5, double** %13, align 8
  store double* %6, double** %14, align 8
  store double 0.000000e+00, double* %20, align 8
  store double 0.000000e+00, double* %19, align 8
  store double 0.000000e+00, double* %18, align 8
  store i32 0, i32* %16, align 4
  br label %21

21:                                               ; preds = %71, %7
  %22 = load i32, i32* %16, align 4
  %23 = load i32, i32* %12, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %25, label %74

25:                                               ; preds = %21
  store i32 0, i32* %15, align 4
  br label %26

26:                                               ; preds = %59, %25
  %27 = load i32, i32* %15, align 4
  %28 = load i32, i32* %11, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %62

30:                                               ; preds = %26
  %31 = load i8*, i8** %8, align 8
  %32 = load i32, i32* %15, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %31, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = uitofp i8 %35 to double
  store double %36, double* %17, align 8
  %37 = load double, double* %17, align 8
  %38 = load double, double* %18, align 8
  %39 = fadd double %38, %37
  store double %39, double* %18, align 8
  %40 = load double, double* %17, align 8
  %41 = load double, double* %17, align 8
  %42 = fmul double %40, %41
  %43 = load double, double* %19, align 8
  %44 = fadd double %43, %42
  store double %44, double* %19, align 8
  %45 = load i8*, i8** %9, align 8
  %46 = load i32, i32* %15, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %45, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = sitofp i32 %50 to double
  %52 = load double, double* %17, align 8
  %53 = fsub double %52, %51
  store double %53, double* %17, align 8
  %54 = load double, double* %17, align 8
  %55 = load double, double* %17, align 8
  %56 = fmul double %54, %55
  %57 = load double, double* %20, align 8
  %58 = fadd double %57, %56
  store double %58, double* %20, align 8
  br label %59

59:                                               ; preds = %30
  %60 = load i32, i32* %15, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %15, align 4
  br label %26

62:                                               ; preds = %26
  %63 = load i32, i32* %10, align 4
  %64 = load i8*, i8** %8, align 8
  %65 = sext i32 %63 to i64
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  store i8* %66, i8** %8, align 8
  %67 = load i32, i32* %10, align 4
  %68 = load i8*, i8** %9, align 8
  %69 = sext i32 %67 to i64
  %70 = getelementptr inbounds i8, i8* %68, i64 %69
  store i8* %70, i8** %9, align 8
  br label %71

71:                                               ; preds = %62
  %72 = load i32, i32* %16, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %16, align 4
  br label %21

74:                                               ; preds = %21
  %75 = load i32, i32* %11, align 4
  %76 = load i32, i32* %12, align 4
  %77 = mul nsw i32 %75, %76
  %78 = sitofp i32 %77 to double
  %79 = load double, double* %18, align 8
  %80 = fdiv double %79, %78
  store double %80, double* %18, align 8
  %81 = load i32, i32* %11, align 4
  %82 = load i32, i32* %12, align 4
  %83 = mul nsw i32 %81, %82
  %84 = sitofp i32 %83 to double
  %85 = load double, double* %19, align 8
  %86 = fdiv double %85, %84
  store double %86, double* %19, align 8
  %87 = load i32, i32* %11, align 4
  %88 = load i32, i32* %12, align 4
  %89 = mul nsw i32 %87, %88
  %90 = sitofp i32 %89 to double
  %91 = load double, double* %20, align 8
  %92 = fdiv double %91, %90
  store double %92, double* %20, align 8
  %93 = load double, double* %20, align 8
  %94 = fcmp oeq double %93, 0.000000e+00
  br i1 %94, label %95, label %96

95:                                               ; preds = %74
  store double 1.000000e-05, double* %20, align 8
  br label %96

96:                                               ; preds = %95, %74
  %97 = load double, double* %19, align 8
  %98 = load double, double* %18, align 8
  %99 = load double, double* %18, align 8
  %100 = fmul double %98, %99
  %101 = fsub double %97, %100
  %102 = load double*, double** %13, align 8
  store double %101, double* %102, align 8
  %103 = load double, double* %20, align 8
  %104 = load double*, double** %14, align 8
  store double %103, double* %104, align 8
  ret void
}

; Function Attrs: nounwind
declare dso_local double @log10(double) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @stats() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.mbinfo*, align 8
  %14 = load i32, i32* @mb_width, align 4
  %15 = load i32, i32* @mb_height2, align 4
  %16 = mul nsw i32 %14, %15
  store i32 %16, i32* %4, align 4
  store i32 0, i32* %12, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %10, align 4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %6, align 4
  store i32 0, i32* %3, align 4
  br label %17

17:                                               ; preds = %103, %0
  %18 = load i32, i32* %3, align 4
  %19 = load i32, i32* %4, align 4
  %20 = icmp slt i32 %18, %19
  br i1 %20, label %21, label %106

21:                                               ; preds = %17
  %22 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %23 = load i32, i32* %3, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %22, i64 %24
  store %struct.mbinfo* %25, %struct.mbinfo** %13, align 8
  %26 = load %struct.mbinfo*, %struct.mbinfo** %13, align 8
  %27 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %26, i32 0, i32 5
  %28 = load i32, i32* %27, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %21
  %31 = load i32, i32* %6, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %6, align 4
  br label %53

33:                                               ; preds = %21
  %34 = load %struct.mbinfo*, %struct.mbinfo** %13, align 8
  %35 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 1
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = load i32, i32* %7, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %7, align 4
  br label %52

42:                                               ; preds = %33
  %43 = load %struct.mbinfo*, %struct.mbinfo** %13, align 8
  %44 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 2
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %42
  %49 = load i32, i32* %8, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %8, align 4
  br label %51

51:                                               ; preds = %48, %42
  br label %52

52:                                               ; preds = %51, %39
  br label %53

53:                                               ; preds = %52, %30
  store i32 0, i32* %1, align 4
  br label %54

54:                                               ; preds = %70, %53
  %55 = load i32, i32* %1, align 4
  %56 = load i32, i32* @block_count, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %58, label %73

58:                                               ; preds = %54
  %59 = load %struct.mbinfo*, %struct.mbinfo** %13, align 8
  %60 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %59, i32 0, i32 4
  %61 = load i32, i32* %60, align 8
  %62 = load i32, i32* %1, align 4
  %63 = shl i32 1, %62
  %64 = and i32 %61, %63
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %58
  %67 = load i32, i32* %9, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %9, align 4
  br label %69

69:                                               ; preds = %66, %58
  br label %70

70:                                               ; preds = %69
  %71 = load i32, i32* %1, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %1, align 4
  br label %54

73:                                               ; preds = %54
  %74 = load %struct.mbinfo*, %struct.mbinfo** %13, align 8
  %75 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %74, i32 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = and i32 %76, 8
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %92

79:                                               ; preds = %73
  %80 = load %struct.mbinfo*, %struct.mbinfo** %13, align 8
  %81 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %80, i32 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, 4
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = load i32, i32* %10, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %10, align 4
  br label %91

88:                                               ; preds = %79
  %89 = load i32, i32* %11, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %11, align 4
  br label %91

91:                                               ; preds = %88, %85
  br label %102

92:                                               ; preds = %73
  %93 = load %struct.mbinfo*, %struct.mbinfo** %13, align 8
  %94 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %93, i32 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 4
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %92
  %99 = load i32, i32* %12, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %12, align 4
  br label %101

101:                                              ; preds = %98, %92
  br label %102

102:                                              ; preds = %101, %91
  br label %103

103:                                              ; preds = %102
  %104 = load i32, i32* %3, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %3, align 4
  br label %17

106:                                              ; preds = %17
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %108 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %107, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3.227, i64 0, i64 0))
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %110 = load i32, i32* %7, align 4
  %111 = load i32, i32* %7, align 4
  %112 = sitofp i32 %111 to double
  %113 = fmul double 1.000000e+02, %112
  %114 = load i32, i32* %4, align 4
  %115 = sitofp i32 %114 to double
  %116 = fdiv double %113, %115
  %117 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %109, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4.228, i64 0, i64 0), i32 %110, double %116)
  %118 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %119 = load i32, i32* %9, align 4
  %120 = load i32, i32* %9, align 4
  %121 = sitofp i32 %120 to double
  %122 = fmul double 1.000000e+02, %121
  %123 = load i32, i32* @block_count, align 4
  %124 = load i32, i32* %4, align 4
  %125 = mul nsw i32 %123, %124
  %126 = sitofp i32 %125 to double
  %127 = fdiv double %122, %126
  %128 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %118, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.5.229, i64 0, i64 0), i32 %119, double %127)
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %130 = load i32, i32* %8, align 4
  %131 = load i32, i32* %8, align 4
  %132 = sitofp i32 %131 to double
  %133 = fmul double 1.000000e+02, %132
  %134 = load i32, i32* %4, align 4
  %135 = sitofp i32 %134 to double
  %136 = fdiv double %133, %135
  %137 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %129, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.6.230, i64 0, i64 0), i32 %130, double %136)
  %138 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %139 = load i32, i32* %6, align 4
  %140 = load i32, i32* %6, align 4
  %141 = sitofp i32 %140 to double
  %142 = fmul double 1.000000e+02, %141
  %143 = load i32, i32* %4, align 4
  %144 = sitofp i32 %143 to double
  %145 = fdiv double %142, %144
  %146 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %138, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7.231, i64 0, i64 0), i32 %139, double %145)
  %147 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %148 = load i32, i32* %11, align 4
  %149 = load i32, i32* %11, align 4
  %150 = sitofp i32 %149 to double
  %151 = fmul double 1.000000e+02, %150
  %152 = load i32, i32* %4, align 4
  %153 = sitofp i32 %152 to double
  %154 = fdiv double %151, %153
  %155 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %147, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.8.232, i64 0, i64 0), i32 %148, double %154)
  %156 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %157 = load i32, i32* %12, align 4
  %158 = load i32, i32* %12, align 4
  %159 = sitofp i32 %158 to double
  %160 = fmul double 1.000000e+02, %159
  %161 = load i32, i32* %4, align 4
  %162 = sitofp i32 %161 to double
  %163 = fdiv double %160, %162
  %164 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %156, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.9.233, i64 0, i64 0), i32 %157, double %163)
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %166 = load i32, i32* %10, align 4
  %167 = load i32, i32* %10, align 4
  %168 = sitofp i32 %167 to double
  %169 = fmul double 1.000000e+02, %168
  %170 = load i32, i32* %4, align 4
  %171 = sitofp i32 %170 to double
  %172 = fdiv double %169, %171
  %173 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %165, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.10.234, i64 0, i64 0), i32 %166, double %172)
  %174 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %175 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %174, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11.235, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  store i32 0, i32* %2, align 4
  br label %176

176:                                              ; preds = %279, %106
  %177 = load i32, i32* %2, align 4
  %178 = load i32, i32* @mb_height2, align 4
  %179 = icmp slt i32 %177, %178
  br i1 %179, label %180, label %282

180:                                              ; preds = %176
  store i32 0, i32* %1, align 4
  br label %181

181:                                              ; preds = %273, %180
  %182 = load i32, i32* %1, align 4
  %183 = load i32, i32* @mb_width, align 4
  %184 = icmp slt i32 %182, %183
  br i1 %184, label %185, label %276

185:                                              ; preds = %181
  %186 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %187 = load i32, i32* %3, align 4
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %186, i64 %188
  store %struct.mbinfo* %189, %struct.mbinfo** %13, align 8
  %190 = load %struct.mbinfo*, %struct.mbinfo** %13, align 8
  %191 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %190, i32 0, i32 0
  %192 = load i32, i32* %191, align 8
  store i32 %192, i32* %5, align 4
  %193 = load %struct.mbinfo*, %struct.mbinfo** %13, align 8
  %194 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %193, i32 0, i32 5
  %195 = load i32, i32* %194, align 4
  %196 = icmp ne i32 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %185
  %198 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %199 = call i32 @putc(i32 83, %struct._IO_FILE* %198)
  br label %250

200:                                              ; preds = %185
  %201 = load i32, i32* %5, align 4
  %202 = and i32 %201, 1
  %203 = icmp ne i32 %202, 0
  br i1 %203, label %204, label %207

204:                                              ; preds = %200
  %205 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %206 = call i32 @putc(i32 73, %struct._IO_FILE* %205)
  br label %249

207:                                              ; preds = %200
  %208 = load i32, i32* %5, align 4
  %209 = and i32 %208, 12
  switch i32 %209, label %245 [
    i32 8, label %210
    i32 4, label %227
    i32 12, label %236
  ]

210:                                              ; preds = %207
  %211 = load %struct.mbinfo*, %struct.mbinfo** %13, align 8
  %212 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %211, i32 0, i32 1
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %213, 1
  br i1 %214, label %215, label %216

215:                                              ; preds = %210
  br label %223

216:                                              ; preds = %210
  %217 = load %struct.mbinfo*, %struct.mbinfo** %13, align 8
  %218 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %217, i32 0, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = icmp eq i32 %219, 3
  %221 = zext i1 %220 to i64
  %222 = select i1 %220, i32 112, i32 70
  br label %223

223:                                              ; preds = %216, %215
  %224 = phi i32 [ 102, %215 ], [ %222, %216 ]
  %225 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %226 = call i32 @putc(i32 %224, %struct._IO_FILE* %225)
  br label %248

227:                                              ; preds = %207
  %228 = load %struct.mbinfo*, %struct.mbinfo** %13, align 8
  %229 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %228, i32 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %230, 1
  %232 = zext i1 %231 to i64
  %233 = select i1 %231, i32 98, i32 66
  %234 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %235 = call i32 @putc(i32 %233, %struct._IO_FILE* %234)
  br label %248

236:                                              ; preds = %207
  %237 = load %struct.mbinfo*, %struct.mbinfo** %13, align 8
  %238 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %237, i32 0, i32 1
  %239 = load i32, i32* %238, align 4
  %240 = icmp eq i32 %239, 1
  %241 = zext i1 %240 to i64
  %242 = select i1 %240, i32 100, i32 68
  %243 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %244 = call i32 @putc(i32 %242, %struct._IO_FILE* %243)
  br label %248

245:                                              ; preds = %207
  %246 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %247 = call i32 @putc(i32 48, %struct._IO_FILE* %246)
  br label %248

248:                                              ; preds = %245, %236, %227, %223
  br label %249

249:                                              ; preds = %248, %204
  br label %250

250:                                              ; preds = %249, %197
  %251 = load i32, i32* %5, align 4
  %252 = and i32 %251, 16
  %253 = icmp ne i32 %252, 0
  br i1 %253, label %254, label %257

254:                                              ; preds = %250
  %255 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %256 = call i32 @putc(i32 81, %struct._IO_FILE* %255)
  br label %268

257:                                              ; preds = %250
  %258 = load i32, i32* %5, align 4
  %259 = and i32 %258, 3
  %260 = icmp ne i32 %259, 0
  br i1 %260, label %261, label %264

261:                                              ; preds = %257
  %262 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %263 = call i32 @putc(i32 32, %struct._IO_FILE* %262)
  br label %267

264:                                              ; preds = %257
  %265 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %266 = call i32 @putc(i32 78, %struct._IO_FILE* %265)
  br label %267

267:                                              ; preds = %264, %261
  br label %268

268:                                              ; preds = %267, %254
  %269 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %270 = call i32 @putc(i32 32, %struct._IO_FILE* %269)
  %271 = load i32, i32* %3, align 4
  %272 = add nsw i32 %271, 1
  store i32 %272, i32* %3, align 4
  br label %273

273:                                              ; preds = %268
  %274 = load i32, i32* %1, align 4
  %275 = add nsw i32 %274, 1
  store i32 %275, i32* %1, align 4
  br label %181

276:                                              ; preds = %181
  %277 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %278 = call i32 @putc(i32 10, %struct._IO_FILE* %277)
  br label %279

279:                                              ; preds = %276
  %280 = load i32, i32* %2, align 4
  %281 = add nsw i32 %280, 1
  store i32 %281, i32* %2, align 4
  br label %176

282:                                              ; preds = %176
  %283 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %284 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %283, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12.236, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  store i32 0, i32* %2, align 4
  br label %285

285:                                              ; preds = %333, %282
  %286 = load i32, i32* %2, align 4
  %287 = load i32, i32* @mb_height2, align 4
  %288 = icmp slt i32 %286, %287
  br i1 %288, label %289, label %336

289:                                              ; preds = %285
  store i32 0, i32* %1, align 4
  br label %290

290:                                              ; preds = %327, %289
  %291 = load i32, i32* %1, align 4
  %292 = load i32, i32* @mb_width, align 4
  %293 = icmp slt i32 %291, %292
  br i1 %293, label %294, label %330

294:                                              ; preds = %290
  %295 = load i32, i32* %1, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %312, label %297

297:                                              ; preds = %294
  %298 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %299 = load i32, i32* %3, align 4
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %298, i64 %300
  %302 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %301, i32 0, i32 3
  %303 = load i32, i32* %302, align 4
  %304 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %305 = load i32, i32* %3, align 4
  %306 = sub nsw i32 %305, 1
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %304, i64 %307
  %309 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %308, i32 0, i32 3
  %310 = load i32, i32* %309, align 4
  %311 = icmp ne i32 %303, %310
  br i1 %311, label %312, label %321

312:                                              ; preds = %297, %294
  %313 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %314 = load %struct.mbinfo*, %struct.mbinfo** @mbinfo, align 8
  %315 = load i32, i32* %3, align 4
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %314, i64 %316
  %318 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %317, i32 0, i32 3
  %319 = load i32, i32* %318, align 4
  %320 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %313, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.237, i64 0, i64 0), i32 %319)
  br label %324

321:                                              ; preds = %297
  %322 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %323 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %322, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.238, i64 0, i64 0))
  br label %324

324:                                              ; preds = %321, %312
  %325 = load i32, i32* %3, align 4
  %326 = add nsw i32 %325, 1
  store i32 %326, i32* %3, align 4
  br label %327

327:                                              ; preds = %324
  %328 = load i32, i32* %1, align 4
  %329 = add nsw i32 %328, 1
  store i32 %329, i32* %1, align 4
  br label %290

330:                                              ; preds = %290
  %331 = load %struct._IO_FILE*, %struct._IO_FILE** @statfile, align 8
  %332 = call i32 @putc(i32 10, %struct._IO_FILE* %331)
  br label %333

333:                                              ; preds = %330
  %334 = load i32, i32* %2, align 4
  %335 = add nsw i32 %334, 1
  store i32 %335, i32* %2, align 4
  br label %285

336:                                              ; preds = %285
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @transform(i8** %0, i8** %1, %struct.mbinfo* %2, [64 x i16]* %3) #0 {
  %5 = alloca i8**, align 8
  %6 = alloca i8**, align 8
  %7 = alloca %struct.mbinfo*, align 8
  %8 = alloca [64 x i16]*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store i8** %0, i8*** %5, align 8
  store i8** %1, i8*** %6, align 8
  store %struct.mbinfo* %2, %struct.mbinfo** %7, align 8
  store [64 x i16]* %3, [64 x i16]** %8, align 8
  store i32 0, i32* %13, align 4
  store i32 0, i32* %10, align 4
  br label %18

18:                                               ; preds = %209, %4
  %19 = load i32, i32* %10, align 4
  %20 = load i32, i32* @height2, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %22, label %212

22:                                               ; preds = %18
  store i32 0, i32* %9, align 4
  br label %23

23:                                               ; preds = %205, %22
  %24 = load i32, i32* %9, align 4
  %25 = load i32, i32* @width, align 4
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %27, label %208

27:                                               ; preds = %23
  store i32 0, i32* %14, align 4
  br label %28

28:                                               ; preds = %199, %27
  %29 = load i32, i32* %14, align 4
  %30 = load i32, i32* @block_count, align 4
  %31 = icmp slt i32 %29, %30
  br i1 %31, label %32, label %202

32:                                               ; preds = %28
  %33 = load i32, i32* %14, align 4
  %34 = icmp slt i32 %33, 4
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  br label %40

36:                                               ; preds = %32
  %37 = load i32, i32* %14, align 4
  %38 = and i32 %37, 1
  %39 = add nsw i32 %38, 1
  br label %40

40:                                               ; preds = %36, %35
  %41 = phi i32 [ 0, %35 ], [ %39, %36 ]
  store i32 %41, i32* %15, align 4
  %42 = load i32, i32* %15, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %94

44:                                               ; preds = %40
  %45 = load i32, i32* @pict_struct, align 4
  %46 = icmp eq i32 %45, 3
  br i1 %46, label %47, label %71

47:                                               ; preds = %44
  %48 = load %struct.mbinfo*, %struct.mbinfo** %7, align 8
  %49 = load i32, i32* %13, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %48, i64 %50
  %52 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %51, i32 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %71

55:                                               ; preds = %47
  %56 = load i32, i32* %9, align 4
  %57 = load i32, i32* %14, align 4
  %58 = and i32 %57, 1
  %59 = shl i32 %58, 3
  %60 = add nsw i32 %56, %59
  %61 = load i32, i32* @width, align 4
  %62 = load i32, i32* %10, align 4
  %63 = load i32, i32* %14, align 4
  %64 = and i32 %63, 2
  %65 = ashr i32 %64, 1
  %66 = add nsw i32 %62, %65
  %67 = mul nsw i32 %61, %66
  %68 = add nsw i32 %60, %67
  store i32 %68, i32* %16, align 4
  %69 = load i32, i32* @width, align 4
  %70 = shl i32 %69, 1
  store i32 %70, i32* %17, align 4
  br label %86

71:                                               ; preds = %47, %44
  %72 = load i32, i32* %9, align 4
  %73 = load i32, i32* %14, align 4
  %74 = and i32 %73, 1
  %75 = shl i32 %74, 3
  %76 = add nsw i32 %72, %75
  %77 = load i32, i32* @width2, align 4
  %78 = load i32, i32* %10, align 4
  %79 = load i32, i32* %14, align 4
  %80 = and i32 %79, 2
  %81 = shl i32 %80, 2
  %82 = add nsw i32 %78, %81
  %83 = mul nsw i32 %77, %82
  %84 = add nsw i32 %76, %83
  store i32 %84, i32* %16, align 4
  %85 = load i32, i32* @width2, align 4
  store i32 %85, i32* %17, align 4
  br label %86

86:                                               ; preds = %71, %55
  %87 = load i32, i32* @pict_struct, align 4
  %88 = icmp eq i32 %87, 2
  br i1 %88, label %89, label %93

89:                                               ; preds = %86
  %90 = load i32, i32* @width, align 4
  %91 = load i32, i32* %16, align 4
  %92 = add nsw i32 %91, %90
  store i32 %92, i32* %16, align 4
  br label %93

93:                                               ; preds = %89, %86
  br label %163

94:                                               ; preds = %40
  %95 = load i32, i32* @chroma_format, align 4
  %96 = icmp eq i32 %95, 3
  br i1 %96, label %97, label %99

97:                                               ; preds = %94
  %98 = load i32, i32* %9, align 4
  br label %102

99:                                               ; preds = %94
  %100 = load i32, i32* %9, align 4
  %101 = ashr i32 %100, 1
  br label %102

102:                                              ; preds = %99, %97
  %103 = phi i32 [ %98, %97 ], [ %101, %99 ]
  store i32 %103, i32* %11, align 4
  %104 = load i32, i32* @chroma_format, align 4
  %105 = icmp ne i32 %104, 1
  br i1 %105, label %106, label %108

106:                                              ; preds = %102
  %107 = load i32, i32* %10, align 4
  br label %111

108:                                              ; preds = %102
  %109 = load i32, i32* %10, align 4
  %110 = ashr i32 %109, 1
  br label %111

111:                                              ; preds = %108, %106
  %112 = phi i32 [ %107, %106 ], [ %110, %108 ]
  store i32 %112, i32* %12, align 4
  %113 = load i32, i32* @pict_struct, align 4
  %114 = icmp eq i32 %113, 3
  br i1 %114, label %115, label %141

115:                                              ; preds = %111
  %116 = load %struct.mbinfo*, %struct.mbinfo** %7, align 8
  %117 = load i32, i32* %13, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %116, i64 %118
  %120 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %119, i32 0, i32 2
  %121 = load i32, i32* %120, align 8
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %123, label %141

123:                                              ; preds = %115
  %124 = load i32, i32* @chroma_format, align 4
  %125 = icmp ne i32 %124, 1
  br i1 %125, label %126, label %141

126:                                              ; preds = %123
  %127 = load i32, i32* %11, align 4
  %128 = load i32, i32* %14, align 4
  %129 = and i32 %128, 8
  %130 = add nsw i32 %127, %129
  %131 = load i32, i32* @chrom_width, align 4
  %132 = load i32, i32* %12, align 4
  %133 = load i32, i32* %14, align 4
  %134 = and i32 %133, 2
  %135 = ashr i32 %134, 1
  %136 = add nsw i32 %132, %135
  %137 = mul nsw i32 %131, %136
  %138 = add nsw i32 %130, %137
  store i32 %138, i32* %16, align 4
  %139 = load i32, i32* @chrom_width, align 4
  %140 = shl i32 %139, 1
  store i32 %140, i32* %17, align 4
  br label %155

141:                                              ; preds = %123, %115, %111
  %142 = load i32, i32* %11, align 4
  %143 = load i32, i32* %14, align 4
  %144 = and i32 %143, 8
  %145 = add nsw i32 %142, %144
  %146 = load i32, i32* @chrom_width2, align 4
  %147 = load i32, i32* %12, align 4
  %148 = load i32, i32* %14, align 4
  %149 = and i32 %148, 2
  %150 = shl i32 %149, 2
  %151 = add nsw i32 %147, %150
  %152 = mul nsw i32 %146, %151
  %153 = add nsw i32 %145, %152
  store i32 %153, i32* %16, align 4
  %154 = load i32, i32* @chrom_width2, align 4
  store i32 %154, i32* %17, align 4
  br label %155

155:                                              ; preds = %141, %126
  %156 = load i32, i32* @pict_struct, align 4
  %157 = icmp eq i32 %156, 2
  br i1 %157, label %158, label %162

158:                                              ; preds = %155
  %159 = load i32, i32* @chrom_width, align 4
  %160 = load i32, i32* %16, align 4
  %161 = add nsw i32 %160, %159
  store i32 %161, i32* %16, align 4
  br label %162

162:                                              ; preds = %158, %155
  br label %163

163:                                              ; preds = %162, %93
  %164 = load i8**, i8*** %5, align 8
  %165 = load i32, i32* %15, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i8*, i8** %164, i64 %166
  %168 = load i8*, i8** %167, align 8
  %169 = load i32, i32* %16, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8, i8* %168, i64 %170
  %172 = load i8**, i8*** %6, align 8
  %173 = load i32, i32* %15, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i8*, i8** %172, i64 %174
  %176 = load i8*, i8** %175, align 8
  %177 = load i32, i32* %16, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds i8, i8* %176, i64 %178
  %180 = load i32, i32* %17, align 4
  %181 = load [64 x i16]*, [64 x i16]** %8, align 8
  %182 = load i32, i32* %13, align 4
  %183 = load i32, i32* @block_count, align 4
  %184 = mul nsw i32 %182, %183
  %185 = load i32, i32* %14, align 4
  %186 = add nsw i32 %184, %185
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds [64 x i16], [64 x i16]* %181, i64 %187
  %189 = getelementptr inbounds [64 x i16], [64 x i16]* %188, i64 0, i64 0
  call void @sub_pred(i8* %171, i8* %179, i32 %180, i16* %189)
  %190 = load [64 x i16]*, [64 x i16]** %8, align 8
  %191 = load i32, i32* %13, align 4
  %192 = load i32, i32* @block_count, align 4
  %193 = mul nsw i32 %191, %192
  %194 = load i32, i32* %14, align 4
  %195 = add nsw i32 %193, %194
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds [64 x i16], [64 x i16]* %190, i64 %196
  %198 = getelementptr inbounds [64 x i16], [64 x i16]* %197, i64 0, i64 0
  call void @fdct(i16* %198)
  br label %199

199:                                              ; preds = %163
  %200 = load i32, i32* %14, align 4
  %201 = add nsw i32 %200, 1
  store i32 %201, i32* %14, align 4
  br label %28

202:                                              ; preds = %28
  %203 = load i32, i32* %13, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %13, align 4
  br label %205

205:                                              ; preds = %202
  %206 = load i32, i32* %9, align 4
  %207 = add nsw i32 %206, 16
  store i32 %207, i32* %9, align 4
  br label %23

208:                                              ; preds = %23
  br label %209

209:                                              ; preds = %208
  %210 = load i32, i32* %10, align 4
  %211 = add nsw i32 %210, 16
  store i32 %211, i32* %10, align 4
  br label %18

212:                                              ; preds = %18
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_pred(i8* %0, i8* %1, i32 %2, i16* %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i16*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i16* %3, i16** %8, align 8
  store i32 0, i32* %10, align 4
  br label %11

11:                                               ; preds = %51, %4
  %12 = load i32, i32* %10, align 4
  %13 = icmp slt i32 %12, 8
  br i1 %13, label %14, label %54

14:                                               ; preds = %11
  store i32 0, i32* %9, align 4
  br label %15

15:                                               ; preds = %37, %14
  %16 = load i32, i32* %9, align 4
  %17 = icmp slt i32 %16, 8
  br i1 %17, label %18, label %40

18:                                               ; preds = %15
  %19 = load i8*, i8** %6, align 8
  %20 = load i32, i32* %9, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %19, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = load i8*, i8** %5, align 8
  %26 = load i32, i32* %9, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = sub nsw i32 %24, %30
  %32 = trunc i32 %31 to i16
  %33 = load i16*, i16** %8, align 8
  %34 = load i32, i32* %9, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %33, i64 %35
  store i16 %32, i16* %36, align 2
  br label %37

37:                                               ; preds = %18
  %38 = load i32, i32* %9, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %9, align 4
  br label %15

40:                                               ; preds = %15
  %41 = load i16*, i16** %8, align 8
  %42 = getelementptr inbounds i16, i16* %41, i64 8
  store i16* %42, i16** %8, align 8
  %43 = load i32, i32* %7, align 4
  %44 = load i8*, i8** %6, align 8
  %45 = sext i32 %43 to i64
  %46 = getelementptr inbounds i8, i8* %44, i64 %45
  store i8* %46, i8** %6, align 8
  %47 = load i32, i32* %7, align 4
  %48 = load i8*, i8** %5, align 8
  %49 = sext i32 %47 to i64
  %50 = getelementptr inbounds i8, i8* %48, i64 %49
  store i8* %50, i8** %5, align 8
  br label %51

51:                                               ; preds = %40
  %52 = load i32, i32* %10, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %10, align 4
  br label %11

54:                                               ; preds = %11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @itransform(i8** %0, i8** %1, %struct.mbinfo* %2, [64 x i16]* %3) #0 {
  %5 = alloca i8**, align 8
  %6 = alloca i8**, align 8
  %7 = alloca %struct.mbinfo*, align 8
  %8 = alloca [64 x i16]*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store i8** %0, i8*** %5, align 8
  store i8** %1, i8*** %6, align 8
  store %struct.mbinfo* %2, %struct.mbinfo** %7, align 8
  store [64 x i16]* %3, [64 x i16]** %8, align 8
  store i32 0, i32* %13, align 4
  store i32 0, i32* %10, align 4
  br label %18

18:                                               ; preds = %209, %4
  %19 = load i32, i32* %10, align 4
  %20 = load i32, i32* @height2, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %22, label %212

22:                                               ; preds = %18
  store i32 0, i32* %9, align 4
  br label %23

23:                                               ; preds = %205, %22
  %24 = load i32, i32* %9, align 4
  %25 = load i32, i32* @width, align 4
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %27, label %208

27:                                               ; preds = %23
  store i32 0, i32* %14, align 4
  br label %28

28:                                               ; preds = %199, %27
  %29 = load i32, i32* %14, align 4
  %30 = load i32, i32* @block_count, align 4
  %31 = icmp slt i32 %29, %30
  br i1 %31, label %32, label %202

32:                                               ; preds = %28
  %33 = load i32, i32* %14, align 4
  %34 = icmp slt i32 %33, 4
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  br label %40

36:                                               ; preds = %32
  %37 = load i32, i32* %14, align 4
  %38 = and i32 %37, 1
  %39 = add nsw i32 %38, 1
  br label %40

40:                                               ; preds = %36, %35
  %41 = phi i32 [ 0, %35 ], [ %39, %36 ]
  store i32 %41, i32* %15, align 4
  %42 = load i32, i32* %15, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %94

44:                                               ; preds = %40
  %45 = load i32, i32* @pict_struct, align 4
  %46 = icmp eq i32 %45, 3
  br i1 %46, label %47, label %71

47:                                               ; preds = %44
  %48 = load %struct.mbinfo*, %struct.mbinfo** %7, align 8
  %49 = load i32, i32* %13, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %48, i64 %50
  %52 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %51, i32 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %71

55:                                               ; preds = %47
  %56 = load i32, i32* %9, align 4
  %57 = load i32, i32* %14, align 4
  %58 = and i32 %57, 1
  %59 = shl i32 %58, 3
  %60 = add nsw i32 %56, %59
  %61 = load i32, i32* @width, align 4
  %62 = load i32, i32* %10, align 4
  %63 = load i32, i32* %14, align 4
  %64 = and i32 %63, 2
  %65 = ashr i32 %64, 1
  %66 = add nsw i32 %62, %65
  %67 = mul nsw i32 %61, %66
  %68 = add nsw i32 %60, %67
  store i32 %68, i32* %16, align 4
  %69 = load i32, i32* @width, align 4
  %70 = shl i32 %69, 1
  store i32 %70, i32* %17, align 4
  br label %86

71:                                               ; preds = %47, %44
  %72 = load i32, i32* %9, align 4
  %73 = load i32, i32* %14, align 4
  %74 = and i32 %73, 1
  %75 = shl i32 %74, 3
  %76 = add nsw i32 %72, %75
  %77 = load i32, i32* @width2, align 4
  %78 = load i32, i32* %10, align 4
  %79 = load i32, i32* %14, align 4
  %80 = and i32 %79, 2
  %81 = shl i32 %80, 2
  %82 = add nsw i32 %78, %81
  %83 = mul nsw i32 %77, %82
  %84 = add nsw i32 %76, %83
  store i32 %84, i32* %16, align 4
  %85 = load i32, i32* @width2, align 4
  store i32 %85, i32* %17, align 4
  br label %86

86:                                               ; preds = %71, %55
  %87 = load i32, i32* @pict_struct, align 4
  %88 = icmp eq i32 %87, 2
  br i1 %88, label %89, label %93

89:                                               ; preds = %86
  %90 = load i32, i32* @width, align 4
  %91 = load i32, i32* %16, align 4
  %92 = add nsw i32 %91, %90
  store i32 %92, i32* %16, align 4
  br label %93

93:                                               ; preds = %89, %86
  br label %163

94:                                               ; preds = %40
  %95 = load i32, i32* @chroma_format, align 4
  %96 = icmp eq i32 %95, 3
  br i1 %96, label %97, label %99

97:                                               ; preds = %94
  %98 = load i32, i32* %9, align 4
  br label %102

99:                                               ; preds = %94
  %100 = load i32, i32* %9, align 4
  %101 = ashr i32 %100, 1
  br label %102

102:                                              ; preds = %99, %97
  %103 = phi i32 [ %98, %97 ], [ %101, %99 ]
  store i32 %103, i32* %11, align 4
  %104 = load i32, i32* @chroma_format, align 4
  %105 = icmp ne i32 %104, 1
  br i1 %105, label %106, label %108

106:                                              ; preds = %102
  %107 = load i32, i32* %10, align 4
  br label %111

108:                                              ; preds = %102
  %109 = load i32, i32* %10, align 4
  %110 = ashr i32 %109, 1
  br label %111

111:                                              ; preds = %108, %106
  %112 = phi i32 [ %107, %106 ], [ %110, %108 ]
  store i32 %112, i32* %12, align 4
  %113 = load i32, i32* @pict_struct, align 4
  %114 = icmp eq i32 %113, 3
  br i1 %114, label %115, label %141

115:                                              ; preds = %111
  %116 = load %struct.mbinfo*, %struct.mbinfo** %7, align 8
  %117 = load i32, i32* %13, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %116, i64 %118
  %120 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %119, i32 0, i32 2
  %121 = load i32, i32* %120, align 8
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %123, label %141

123:                                              ; preds = %115
  %124 = load i32, i32* @chroma_format, align 4
  %125 = icmp ne i32 %124, 1
  br i1 %125, label %126, label %141

126:                                              ; preds = %123
  %127 = load i32, i32* %11, align 4
  %128 = load i32, i32* %14, align 4
  %129 = and i32 %128, 8
  %130 = add nsw i32 %127, %129
  %131 = load i32, i32* @chrom_width, align 4
  %132 = load i32, i32* %12, align 4
  %133 = load i32, i32* %14, align 4
  %134 = and i32 %133, 2
  %135 = ashr i32 %134, 1
  %136 = add nsw i32 %132, %135
  %137 = mul nsw i32 %131, %136
  %138 = add nsw i32 %130, %137
  store i32 %138, i32* %16, align 4
  %139 = load i32, i32* @chrom_width, align 4
  %140 = shl i32 %139, 1
  store i32 %140, i32* %17, align 4
  br label %155

141:                                              ; preds = %123, %115, %111
  %142 = load i32, i32* %11, align 4
  %143 = load i32, i32* %14, align 4
  %144 = and i32 %143, 8
  %145 = add nsw i32 %142, %144
  %146 = load i32, i32* @chrom_width2, align 4
  %147 = load i32, i32* %12, align 4
  %148 = load i32, i32* %14, align 4
  %149 = and i32 %148, 2
  %150 = shl i32 %149, 2
  %151 = add nsw i32 %147, %150
  %152 = mul nsw i32 %146, %151
  %153 = add nsw i32 %145, %152
  store i32 %153, i32* %16, align 4
  %154 = load i32, i32* @chrom_width2, align 4
  store i32 %154, i32* %17, align 4
  br label %155

155:                                              ; preds = %141, %126
  %156 = load i32, i32* @pict_struct, align 4
  %157 = icmp eq i32 %156, 2
  br i1 %157, label %158, label %162

158:                                              ; preds = %155
  %159 = load i32, i32* @chrom_width, align 4
  %160 = load i32, i32* %16, align 4
  %161 = add nsw i32 %160, %159
  store i32 %161, i32* %16, align 4
  br label %162

162:                                              ; preds = %158, %155
  br label %163

163:                                              ; preds = %162, %93
  %164 = load [64 x i16]*, [64 x i16]** %8, align 8
  %165 = load i32, i32* %13, align 4
  %166 = load i32, i32* @block_count, align 4
  %167 = mul nsw i32 %165, %166
  %168 = load i32, i32* %14, align 4
  %169 = add nsw i32 %167, %168
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds [64 x i16], [64 x i16]* %164, i64 %170
  %172 = getelementptr inbounds [64 x i16], [64 x i16]* %171, i64 0, i64 0
  call void @idct(i16* %172)
  %173 = load i8**, i8*** %5, align 8
  %174 = load i32, i32* %15, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i8*, i8** %173, i64 %175
  %177 = load i8*, i8** %176, align 8
  %178 = load i32, i32* %16, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i8, i8* %177, i64 %179
  %181 = load i8**, i8*** %6, align 8
  %182 = load i32, i32* %15, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i8*, i8** %181, i64 %183
  %185 = load i8*, i8** %184, align 8
  %186 = load i32, i32* %16, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds i8, i8* %185, i64 %187
  %189 = load i32, i32* %17, align 4
  %190 = load [64 x i16]*, [64 x i16]** %8, align 8
  %191 = load i32, i32* %13, align 4
  %192 = load i32, i32* @block_count, align 4
  %193 = mul nsw i32 %191, %192
  %194 = load i32, i32* %14, align 4
  %195 = add nsw i32 %193, %194
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds [64 x i16], [64 x i16]* %190, i64 %196
  %198 = getelementptr inbounds [64 x i16], [64 x i16]* %197, i64 0, i64 0
  call void @add_pred(i8* %180, i8* %188, i32 %189, i16* %198)
  br label %199

199:                                              ; preds = %163
  %200 = load i32, i32* %14, align 4
  %201 = add nsw i32 %200, 1
  store i32 %201, i32* %14, align 4
  br label %28

202:                                              ; preds = %28
  %203 = load i32, i32* %13, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %13, align 4
  br label %205

205:                                              ; preds = %202
  %206 = load i32, i32* %9, align 4
  %207 = add nsw i32 %206, 16
  store i32 %207, i32* %9, align 4
  br label %23

208:                                              ; preds = %23
  br label %209

209:                                              ; preds = %208
  %210 = load i32, i32* %10, align 4
  %211 = add nsw i32 %210, 16
  store i32 %211, i32* %10, align 4
  br label %18

212:                                              ; preds = %18
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_pred(i8* %0, i8* %1, i32 %2, i16* %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i16*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i16* %3, i16** %8, align 8
  store i32 0, i32* %10, align 4
  br label %11

11:                                               ; preds = %54, %4
  %12 = load i32, i32* %10, align 4
  %13 = icmp slt i32 %12, 8
  br i1 %13, label %14, label %57

14:                                               ; preds = %11
  store i32 0, i32* %9, align 4
  br label %15

15:                                               ; preds = %40, %14
  %16 = load i32, i32* %9, align 4
  %17 = icmp slt i32 %16, 8
  br i1 %17, label %18, label %43

18:                                               ; preds = %15
  %19 = load i8*, i8** @clp, align 8
  %20 = load i16*, i16** %8, align 8
  %21 = load i32, i32* %9, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i16, i16* %20, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = sext i16 %24 to i32
  %26 = load i8*, i8** %5, align 8
  %27 = load i32, i32* %9, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = add nsw i32 %25, %31
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %19, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = load i8*, i8** %6, align 8
  %37 = load i32, i32* %9, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %36, i64 %38
  store i8 %35, i8* %39, align 1
  br label %40

40:                                               ; preds = %18
  %41 = load i32, i32* %9, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %9, align 4
  br label %15

43:                                               ; preds = %15
  %44 = load i16*, i16** %8, align 8
  %45 = getelementptr inbounds i16, i16* %44, i64 8
  store i16* %45, i16** %8, align 8
  %46 = load i32, i32* %7, align 4
  %47 = load i8*, i8** %6, align 8
  %48 = sext i32 %46 to i64
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  store i8* %49, i8** %6, align 8
  %50 = load i32, i32* %7, align 4
  %51 = load i8*, i8** %5, align 8
  %52 = sext i32 %50 to i64
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  store i8* %53, i8** %5, align 8
  br label %54

54:                                               ; preds = %43
  %55 = load i32, i32* %10, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %10, align 4
  br label %11

57:                                               ; preds = %11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @dct_type_estimation(i8* %0, i8* %1, %struct.mbinfo* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.mbinfo*, align 8
  %7 = alloca [128 x i16], align 16
  %8 = alloca [128 x i16], align 16
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.mbinfo* %2, %struct.mbinfo** %6, align 8
  store i32 0, i32* %13, align 4
  store i32 0, i32* %12, align 4
  br label %22

22:                                               ; preds = %235, %3
  %23 = load i32, i32* %12, align 4
  %24 = load i32, i32* @height2, align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %26, label %238

26:                                               ; preds = %22
  store i32 0, i32* %11, align 4
  br label %27

27:                                               ; preds = %231, %26
  %28 = load i32, i32* %11, align 4
  %29 = load i32, i32* @width, align 4
  %30 = icmp slt i32 %28, %29
  br i1 %30, label %31, label %234

31:                                               ; preds = %27
  %32 = load i32, i32* @frame_pred_dct, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = load i32, i32* @pict_struct, align 4
  %36 = icmp ne i32 %35, 3
  br i1 %36, label %37, label %43

37:                                               ; preds = %34, %31
  %38 = load %struct.mbinfo*, %struct.mbinfo** %6, align 8
  %39 = load i32, i32* %13, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %38, i64 %40
  %42 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %41, i32 0, i32 2
  store i32 0, i32* %42, align 8
  br label %228

43:                                               ; preds = %34
  store i32 0, i32* %10, align 4
  br label %44

44:                                               ; preds = %110, %43
  %45 = load i32, i32* %10, align 4
  %46 = icmp slt i32 %45, 8
  br i1 %46, label %47, label %113

47:                                               ; preds = %44
  %48 = load i32, i32* @width, align 4
  %49 = load i32, i32* %10, align 4
  %50 = shl i32 %49, 1
  %51 = load i32, i32* %12, align 4
  %52 = add nsw i32 %50, %51
  %53 = mul nsw i32 %48, %52
  %54 = load i32, i32* %11, align 4
  %55 = add nsw i32 %53, %54
  store i32 %55, i32* %14, align 4
  store i32 0, i32* %9, align 4
  br label %56

56:                                               ; preds = %106, %47
  %57 = load i32, i32* %9, align 4
  %58 = icmp slt i32 %57, 16
  br i1 %58, label %59, label %109

59:                                               ; preds = %56
  %60 = load i8*, i8** %5, align 8
  %61 = load i32, i32* %14, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %60, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = load i8*, i8** %4, align 8
  %67 = load i32, i32* %14, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %66, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = sub nsw i32 %65, %71
  %73 = trunc i32 %72 to i16
  %74 = load i32, i32* %10, align 4
  %75 = mul nsw i32 16, %74
  %76 = load i32, i32* %9, align 4
  %77 = add nsw i32 %75, %76
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [128 x i16], [128 x i16]* %7, i64 0, i64 %78
  store i16 %73, i16* %79, align 2
  %80 = load i8*, i8** %5, align 8
  %81 = load i32, i32* %14, align 4
  %82 = load i32, i32* @width, align 4
  %83 = add nsw i32 %81, %82
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %80, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = load i8*, i8** %4, align 8
  %89 = load i32, i32* %14, align 4
  %90 = load i32, i32* @width, align 4
  %91 = add nsw i32 %89, %90
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %88, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = sub nsw i32 %87, %95
  %97 = trunc i32 %96 to i16
  %98 = load i32, i32* %10, align 4
  %99 = mul nsw i32 16, %98
  %100 = load i32, i32* %9, align 4
  %101 = add nsw i32 %99, %100
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [128 x i16], [128 x i16]* %8, i64 0, i64 %102
  store i16 %97, i16* %103, align 2
  %104 = load i32, i32* %14, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %14, align 4
  br label %106

106:                                              ; preds = %59
  %107 = load i32, i32* %9, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, i32* %9, align 4
  br label %56

109:                                              ; preds = %56
  br label %110

110:                                              ; preds = %109
  %111 = load i32, i32* %10, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %10, align 4
  br label %44

113:                                              ; preds = %44
  store i32 0, i32* %19, align 4
  store i32 0, i32* %18, align 4
  store i32 0, i32* %17, align 4
  store i32 0, i32* %16, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %9, align 4
  br label %114

114:                                              ; preds = %171, %113
  %115 = load i32, i32* %9, align 4
  %116 = icmp slt i32 %115, 128
  br i1 %116, label %117, label %174

117:                                              ; preds = %114
  %118 = load i32, i32* %9, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [128 x i16], [128 x i16]* %7, i64 0, i64 %119
  %121 = load i16, i16* %120, align 2
  %122 = sext i16 %121 to i32
  %123 = load i32, i32* %15, align 4
  %124 = add nsw i32 %123, %122
  store i32 %124, i32* %15, align 4
  %125 = load i32, i32* %9, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [128 x i16], [128 x i16]* %7, i64 0, i64 %126
  %128 = load i16, i16* %127, align 2
  %129 = sext i16 %128 to i32
  %130 = load i32, i32* %9, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [128 x i16], [128 x i16]* %7, i64 0, i64 %131
  %133 = load i16, i16* %132, align 2
  %134 = sext i16 %133 to i32
  %135 = mul nsw i32 %129, %134
  %136 = load i32, i32* %17, align 4
  %137 = add nsw i32 %136, %135
  store i32 %137, i32* %17, align 4
  %138 = load i32, i32* %9, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [128 x i16], [128 x i16]* %8, i64 0, i64 %139
  %141 = load i16, i16* %140, align 2
  %142 = sext i16 %141 to i32
  %143 = load i32, i32* %16, align 4
  %144 = add nsw i32 %143, %142
  store i32 %144, i32* %16, align 4
  %145 = load i32, i32* %9, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds [128 x i16], [128 x i16]* %8, i64 0, i64 %146
  %148 = load i16, i16* %147, align 2
  %149 = sext i16 %148 to i32
  %150 = load i32, i32* %9, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [128 x i16], [128 x i16]* %8, i64 0, i64 %151
  %153 = load i16, i16* %152, align 2
  %154 = sext i16 %153 to i32
  %155 = mul nsw i32 %149, %154
  %156 = load i32, i32* %18, align 4
  %157 = add nsw i32 %156, %155
  store i32 %157, i32* %18, align 4
  %158 = load i32, i32* %9, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [128 x i16], [128 x i16]* %7, i64 0, i64 %159
  %161 = load i16, i16* %160, align 2
  %162 = sext i16 %161 to i32
  %163 = load i32, i32* %9, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [128 x i16], [128 x i16]* %8, i64 0, i64 %164
  %166 = load i16, i16* %165, align 2
  %167 = sext i16 %166 to i32
  %168 = mul nsw i32 %162, %167
  %169 = load i32, i32* %19, align 4
  %170 = add nsw i32 %169, %168
  store i32 %170, i32* %19, align 4
  br label %171

171:                                              ; preds = %117
  %172 = load i32, i32* %9, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %9, align 4
  br label %114

174:                                              ; preds = %114
  %175 = load i32, i32* %17, align 4
  %176 = sitofp i32 %175 to double
  %177 = load i32, i32* %15, align 4
  %178 = load i32, i32* %15, align 4
  %179 = mul nsw i32 %177, %178
  %180 = sitofp i32 %179 to double
  %181 = fdiv double %180, 1.280000e+02
  %182 = fsub double %176, %181
  %183 = load i32, i32* %18, align 4
  %184 = sitofp i32 %183 to double
  %185 = load i32, i32* %16, align 4
  %186 = load i32, i32* %16, align 4
  %187 = mul nsw i32 %185, %186
  %188 = sitofp i32 %187 to double
  %189 = fdiv double %188, 1.280000e+02
  %190 = fsub double %184, %189
  %191 = fmul double %182, %190
  store double %191, double* %20, align 8
  %192 = load double, double* %20, align 8
  %193 = fcmp ogt double %192, 0.000000e+00
  br i1 %193, label %194, label %221

194:                                              ; preds = %174
  %195 = load i32, i32* %19, align 4
  %196 = sitofp i32 %195 to double
  %197 = load i32, i32* %15, align 4
  %198 = load i32, i32* %16, align 4
  %199 = mul nsw i32 %197, %198
  %200 = sitofp i32 %199 to double
  %201 = fdiv double %200, 1.280000e+02
  %202 = fsub double %196, %201
  %203 = load double, double* %20, align 8
  %204 = call double @sqrt(double %203) #6
  %205 = fdiv double %202, %204
  store double %205, double* %21, align 8
  %206 = load double, double* %21, align 8
  %207 = fcmp ogt double %206, 5.000000e-01
  br i1 %207, label %208, label %214

208:                                              ; preds = %194
  %209 = load %struct.mbinfo*, %struct.mbinfo** %6, align 8
  %210 = load i32, i32* %13, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %209, i64 %211
  %213 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %212, i32 0, i32 2
  store i32 0, i32* %213, align 8
  br label %220

214:                                              ; preds = %194
  %215 = load %struct.mbinfo*, %struct.mbinfo** %6, align 8
  %216 = load i32, i32* %13, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %215, i64 %217
  %219 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %218, i32 0, i32 2
  store i32 1, i32* %219, align 8
  br label %220

220:                                              ; preds = %214, %208
  br label %227

221:                                              ; preds = %174
  %222 = load %struct.mbinfo*, %struct.mbinfo** %6, align 8
  %223 = load i32, i32* %13, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %222, i64 %224
  %226 = getelementptr inbounds %struct.mbinfo, %struct.mbinfo* %225, i32 0, i32 2
  store i32 1, i32* %226, align 8
  br label %227

227:                                              ; preds = %221, %220
  br label %228

228:                                              ; preds = %227, %37
  %229 = load i32, i32* %13, align 4
  %230 = add nsw i32 %229, 1
  store i32 %230, i32* %13, align 4
  br label %231

231:                                              ; preds = %228
  %232 = load i32, i32* %11, align 4
  %233 = add nsw i32 %232, 16
  store i32 %233, i32* %11, align 4
  br label %27

234:                                              ; preds = %27
  br label %235

235:                                              ; preds = %234
  %236 = load i32, i32* %12, align 4
  %237 = add nsw i32 %236, 16
  store i32 %237, i32* %12, align 4
  br label %22

238:                                              ; preds = %22
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @writeframe(i8* %0, i8** %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [128 x i8], align 16
  %8 = alloca %struct._IO_FILE*, align 8
  store i8* %0, i8** %3, align 8
  store i8** %1, i8*** %4, align 8
  %9 = load i32, i32* @chroma_format, align 4
  %10 = icmp eq i32 %9, 3
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = load i32, i32* @horizontal_size, align 4
  br label %16

13:                                               ; preds = %2
  %14 = load i32, i32* @horizontal_size, align 4
  %15 = ashr i32 %14, 1
  br label %16

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ]
  store i32 %17, i32* %5, align 4
  %18 = load i32, i32* @chroma_format, align 4
  %19 = icmp ne i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = load i32, i32* @vertical_size, align 4
  br label %25

22:                                               ; preds = %16
  %23 = load i32, i32* @vertical_size, align 4
  %24 = ashr i32 %23, 1
  br label %25

25:                                               ; preds = %22, %20
  %26 = phi i32 [ %21, %20 ], [ %24, %22 ]
  store i32 %26, i32* %6, align 4
  %27 = load i8*, i8** %3, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 0
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = icmp eq i32 %30, 45
  br i1 %31, label %32, label %33

32:                                               ; preds = %25
  br label %97

33:                                               ; preds = %25
  %34 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %35 = load i8*, i8** %3, align 8
  %36 = call i32 (i8*, i8*, ...) @sprintf(i8* %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.247, i64 0, i64 0), i8* %35) #6
  %37 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %38 = call %struct._IO_FILE* @fopen(i8* %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.248, i64 0, i64 0))
  store %struct._IO_FILE* %38, %struct._IO_FILE** %8, align 8
  %39 = icmp ne %struct._IO_FILE* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %42 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.249, i64 0, i64 0), i8* %41) #6
  call void @error(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0))
  br label %43

43:                                               ; preds = %40, %33
  %44 = load i8**, i8*** %4, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 0
  %46 = load i8*, i8** %45, align 8
  %47 = load i32, i32* @horizontal_size, align 4
  %48 = load i32, i32* @vertical_size, align 4
  %49 = mul nsw i32 %47, %48
  %50 = sext i32 %49 to i64
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %52 = call i64 @fwrite(i8* %46, i64 1, i64 %50, %struct._IO_FILE* %51)
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %54 = call i32 @fclose(%struct._IO_FILE* %53)
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %56 = load i8*, i8** %3, align 8
  %57 = call i32 (i8*, i8*, ...) @sprintf(i8* %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.250, i64 0, i64 0), i8* %56) #6
  %58 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %59 = call %struct._IO_FILE* @fopen(i8* %58, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.248, i64 0, i64 0))
  store %struct._IO_FILE* %59, %struct._IO_FILE** %8, align 8
  %60 = icmp ne %struct._IO_FILE* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %43
  %62 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %63 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.249, i64 0, i64 0), i8* %62) #6
  call void @error(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0))
  br label %64

64:                                               ; preds = %61, %43
  %65 = load i8**, i8*** %4, align 8
  %66 = getelementptr inbounds i8*, i8** %65, i64 1
  %67 = load i8*, i8** %66, align 8
  %68 = load i32, i32* %5, align 4
  %69 = load i32, i32* %6, align 4
  %70 = mul nsw i32 %68, %69
  %71 = sext i32 %70 to i64
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %73 = call i64 @fwrite(i8* %67, i64 1, i64 %71, %struct._IO_FILE* %72)
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %75 = call i32 @fclose(%struct._IO_FILE* %74)
  %76 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %77 = load i8*, i8** %3, align 8
  %78 = call i32 (i8*, i8*, ...) @sprintf(i8* %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.251, i64 0, i64 0), i8* %77) #6
  %79 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %80 = call %struct._IO_FILE* @fopen(i8* %79, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.248, i64 0, i64 0))
  store %struct._IO_FILE* %80, %struct._IO_FILE** %8, align 8
  %81 = icmp ne %struct._IO_FILE* %80, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %64
  %83 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %84 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.249, i64 0, i64 0), i8* %83) #6
  call void @error(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @errortext, i64 0, i64 0))
  br label %85

85:                                               ; preds = %82, %64
  %86 = load i8**, i8*** %4, align 8
  %87 = getelementptr inbounds i8*, i8** %86, i64 2
  %88 = load i8*, i8** %87, align 8
  %89 = load i32, i32* %5, align 4
  %90 = load i32, i32* %6, align 4
  %91 = mul nsw i32 %89, %90
  %92 = sext i32 %91 to i64
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %94 = call i64 @fwrite(i8* %88, i64 1, i64 %92, %struct._IO_FILE* %93)
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %96 = call i32 @fclose(%struct._IO_FILE* %95)
  br label %97

97:                                               ; preds = %85, %32
  ret void
}

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind readonly }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"Debian clang version 10.0.1-++20200708124224+ef32c611aa2-1~exp1~20200707224822.188 "}
!1 = !{i32 1, !"wchar_size", i32 4}
