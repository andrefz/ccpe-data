; ModuleID = 'llvm-link'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.jpeg_decompress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64 }
%struct.jvirt_sarray_control = type { i8**, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.jvirt_sarray_control*, %struct.backing_store_struct }
%struct.backing_store_struct = type { void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*, i8*, i64, i64)*, void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*, i8*, i64, i64)*, void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*)*, %struct._IO_FILE*, [64 x i8] }
%struct.jpeg_common_struct.855 = type { %struct.jpeg_error_mgr.856*, %struct.jpeg_memory_mgr.857*, %struct.jpeg_progress_mgr*, i32, i32 }
%struct.jpeg_error_mgr.856 = type { {}*, void (%struct.jpeg_common_struct.855*, i32)*, {}*, void (%struct.jpeg_common_struct.855*, i8*)*, {}*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_memory_mgr.857 = type { i8* (%struct.jpeg_common_struct.855*, i32, i64)*, i8* (%struct.jpeg_common_struct.855*, i32, i64)*, i8** (%struct.jpeg_common_struct.855*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct.855*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct.855*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct.855*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct.855*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct.855*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct.855*, i32)*, {}*, i64 }
%struct.jvirt_barray_control = type { [64 x i16]**, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.jvirt_barray_control*, %struct.backing_store_struct }
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_source_mgr = type { i8*, i64, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i64)*, i32 (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*)* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.jpeg_decomp_master = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32 }
%struct.jpeg_d_main_controller = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller = type { i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32, i32 }
%struct.jpeg_marker_reader = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, [16 x i32 (%struct.jpeg_decompress_struct*)*], i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*, [64 x i16]**)* }
%struct.jpeg_inverse_dct = type { void (%struct.jpeg_decompress_struct*)*, [10 x void (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)* }
%struct.djpeg_dest_struct = type { void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)*, %struct._IO_FILE*, i8**, i32 }
%struct.jpeg_compress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_destination_mgr*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master*, %struct.jpeg_c_main_controller*, %struct.jpeg_c_prep_controller*, %struct.jpeg_c_coef_controller*, %struct.jpeg_marker_writer*, %struct.jpeg_color_converter*, %struct.jpeg_downsampler*, %struct.jpeg_forward_dct*, %struct.jpeg_entropy_encoder* }
%struct.jpeg_destination_mgr = type { i8*, i64, void (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_scan_info = type { i32, [4 x i32], i32, i32, i32, i32 }
%struct.jpeg_comp_master = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, i32, i32 }
%struct.jpeg_c_main_controller = type { void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller = type { void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller = type { void (%struct.jpeg_compress_struct*, i32)*, i32 (%struct.jpeg_compress_struct*, i8***)* }
%struct.jpeg_marker_writer = type { void (%struct.jpeg_compress_struct*, i32, i8*, i32)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_color_converter = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder = type { void (%struct.jpeg_compress_struct*, i32)*, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_compress_struct.14 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_destination_mgr.18*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master.23*, %struct.jpeg_c_main_controller.24*, %struct.jpeg_c_prep_controller.25*, %struct.jpeg_c_coef_controller.26*, %struct.jpeg_marker_writer.27*, %struct.jpeg_color_converter.28*, %struct.jpeg_downsampler.29*, %struct.jpeg_forward_dct.30*, %struct.jpeg_entropy_encoder.31* }
%struct.jpeg_destination_mgr.18 = type { i8*, i64, void (%struct.jpeg_compress_struct.14*)*, i32 (%struct.jpeg_compress_struct.14*)*, void (%struct.jpeg_compress_struct.14*)* }
%struct.jpeg_comp_master.23 = type { void (%struct.jpeg_compress_struct.14*)*, void (%struct.jpeg_compress_struct.14*)*, void (%struct.jpeg_compress_struct.14*)*, i32, i32 }
%struct.jpeg_c_main_controller.24 = type { void (%struct.jpeg_compress_struct.14*, i32)*, void (%struct.jpeg_compress_struct.14*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller.25 = type { void (%struct.jpeg_compress_struct.14*, i32)*, void (%struct.jpeg_compress_struct.14*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller.26 = type { void (%struct.jpeg_compress_struct.14*, i32)*, i32 (%struct.jpeg_compress_struct.14*, i8***)* }
%struct.jpeg_marker_writer.27 = type { void (%struct.jpeg_compress_struct.14*, i32, i8*, i32)*, void (%struct.jpeg_compress_struct.14*)*, void (%struct.jpeg_compress_struct.14*)*, void (%struct.jpeg_compress_struct.14*)*, void (%struct.jpeg_compress_struct.14*)*, void (%struct.jpeg_compress_struct.14*)* }
%struct.jpeg_color_converter.28 = type { void (%struct.jpeg_compress_struct.14*)*, void (%struct.jpeg_compress_struct.14*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler.29 = type { void (%struct.jpeg_compress_struct.14*)*, void (%struct.jpeg_compress_struct.14*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct.30 = type { void (%struct.jpeg_compress_struct.14*)*, void (%struct.jpeg_compress_struct.14*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder.31 = type { {}*, i32 (%struct.jpeg_compress_struct.14*, [64 x i16]**)*, void (%struct.jpeg_compress_struct.14*)* }
%struct.jpeg_compress_struct.36 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_destination_mgr.40*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master.45*, %struct.jpeg_c_main_controller.46*, %struct.jpeg_c_prep_controller.47*, %struct.jpeg_c_coef_controller.48*, %struct.jpeg_marker_writer.49*, %struct.jpeg_color_converter.50*, %struct.jpeg_downsampler.51*, %struct.jpeg_forward_dct.52*, %struct.jpeg_entropy_encoder.53* }
%struct.jpeg_destination_mgr.40 = type { i8*, i64, void (%struct.jpeg_compress_struct.36*)*, i32 (%struct.jpeg_compress_struct.36*)*, void (%struct.jpeg_compress_struct.36*)* }
%struct.jpeg_comp_master.45 = type { void (%struct.jpeg_compress_struct.36*)*, void (%struct.jpeg_compress_struct.36*)*, void (%struct.jpeg_compress_struct.36*)*, i32, i32 }
%struct.jpeg_c_main_controller.46 = type { void (%struct.jpeg_compress_struct.36*, i32)*, void (%struct.jpeg_compress_struct.36*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller.47 = type { void (%struct.jpeg_compress_struct.36*, i32)*, void (%struct.jpeg_compress_struct.36*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller.48 = type { void (%struct.jpeg_compress_struct.36*, i32)*, i32 (%struct.jpeg_compress_struct.36*, i8***)* }
%struct.jpeg_marker_writer.49 = type { void (%struct.jpeg_compress_struct.36*, i32, i8*, i32)*, void (%struct.jpeg_compress_struct.36*)*, void (%struct.jpeg_compress_struct.36*)*, void (%struct.jpeg_compress_struct.36*)*, void (%struct.jpeg_compress_struct.36*)*, void (%struct.jpeg_compress_struct.36*)* }
%struct.jpeg_color_converter.50 = type { void (%struct.jpeg_compress_struct.36*)*, void (%struct.jpeg_compress_struct.36*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler.51 = type { void (%struct.jpeg_compress_struct.36*)*, void (%struct.jpeg_compress_struct.36*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct.52 = type { void (%struct.jpeg_compress_struct.36*)*, void (%struct.jpeg_compress_struct.36*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder.53 = type { {}*, i32 (%struct.jpeg_compress_struct.36*, [64 x i16]**)*, void (%struct.jpeg_compress_struct.36*)* }
%struct.my_coef_controller = type { %struct.jpeg_c_coef_controller.48, i32, i32, i32, i32, [10 x [64 x i16]*], [10 x %struct.jvirt_barray_control*] }
%struct.jpeg_compress_struct.58 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_destination_mgr.62*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master.67*, %struct.jpeg_c_main_controller.68*, %struct.jpeg_c_prep_controller.69*, %struct.jpeg_c_coef_controller.70*, %struct.jpeg_marker_writer.71*, %struct.jpeg_color_converter.72*, %struct.jpeg_downsampler.73*, %struct.jpeg_forward_dct.74*, %struct.jpeg_entropy_encoder.75* }
%struct.jpeg_destination_mgr.62 = type { i8*, i64, {}*, i32 (%struct.jpeg_compress_struct.58*)*, {}* }
%struct.jpeg_comp_master.67 = type { {}*, {}*, {}*, i32, i32 }
%struct.jpeg_c_main_controller.68 = type { void (%struct.jpeg_compress_struct.58*, i32)*, void (%struct.jpeg_compress_struct.58*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller.69 = type { void (%struct.jpeg_compress_struct.58*, i32)*, void (%struct.jpeg_compress_struct.58*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller.70 = type { void (%struct.jpeg_compress_struct.58*, i32)*, i32 (%struct.jpeg_compress_struct.58*, i8***)* }
%struct.jpeg_marker_writer.71 = type { void (%struct.jpeg_compress_struct.58*, i32, i8*, i32)*, {}*, {}*, {}*, {}*, {}* }
%struct.jpeg_color_converter.72 = type { {}*, void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler.73 = type { {}*, void (%struct.jpeg_compress_struct.58*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct.74 = type { {}*, void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder.75 = type { void (%struct.jpeg_compress_struct.58*, i32)*, i32 (%struct.jpeg_compress_struct.58*, [64 x i16]**)*, {}* }
%struct.my_color_converter = type { %struct.jpeg_color_converter.72, i64* }
%struct.jpeg_compress_struct.80 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_destination_mgr.84*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master.67*, %struct.jpeg_c_main_controller.90*, %struct.jpeg_c_prep_controller.91*, %struct.jpeg_c_coef_controller.92*, %struct.jpeg_marker_writer.93*, %struct.jpeg_color_converter.94*, %struct.jpeg_downsampler.95*, %struct.jpeg_forward_dct.96*, %struct.jpeg_entropy_encoder.97* }
%struct.jpeg_destination_mgr.84 = type { i8*, i64, {}*, i32 (%struct.jpeg_compress_struct.80*)*, {}* }
%struct.jpeg_c_main_controller.90 = type { void (%struct.jpeg_compress_struct.80*, i32)*, void (%struct.jpeg_compress_struct.80*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller.91 = type { void (%struct.jpeg_compress_struct.80*, i32)*, void (%struct.jpeg_compress_struct.80*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller.92 = type { void (%struct.jpeg_compress_struct.80*, i32)*, i32 (%struct.jpeg_compress_struct.80*, i8***)* }
%struct.jpeg_marker_writer.93 = type { void (%struct.jpeg_compress_struct.80*, i32, i8*, i32)*, {}*, {}*, {}*, {}*, {}* }
%struct.jpeg_color_converter.94 = type { {}*, void (%struct.jpeg_compress_struct.80*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler.95 = type { {}*, void (%struct.jpeg_compress_struct.80*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct.96 = type { {}*, void (%struct.jpeg_compress_struct.80*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder.97 = type { void (%struct.jpeg_compress_struct.80*, i32)*, i32 (%struct.jpeg_compress_struct.80*, [64 x i16]**)*, {}* }
%struct.my_fdct_controller = type { %struct.jpeg_forward_dct.96, void (i32*)*, [4 x i32*], void (float*)*, [4 x float*] }
%struct.c_derived_tbl = type { [256 x i32], [256 x i8] }
%struct.huff_entropy_encoder = type { %struct.jpeg_entropy_encoder, %struct.savable_state, i32, i32, [4 x %struct.c_derived_tbl*], [4 x %struct.c_derived_tbl*], [4 x i64*], [4 x i64*] }
%struct.savable_state = type { i64, i32, [4 x i32] }
%struct.working_state = type { i8*, i64, %struct.savable_state, %struct.jpeg_compress_struct* }
%struct.jpeg_compress_struct.146 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_destination_mgr.150*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master.155*, %struct.jpeg_c_main_controller.156*, %struct.jpeg_c_prep_controller.157*, %struct.jpeg_c_coef_controller.158*, %struct.jpeg_marker_writer.159*, %struct.jpeg_color_converter.160*, %struct.jpeg_downsampler.161*, %struct.jpeg_forward_dct.162*, %struct.jpeg_entropy_encoder.163* }
%struct.jpeg_destination_mgr.150 = type { i8*, i64, void (%struct.jpeg_compress_struct.146*)*, i32 (%struct.jpeg_compress_struct.146*)*, void (%struct.jpeg_compress_struct.146*)* }
%struct.jpeg_comp_master.155 = type { void (%struct.jpeg_compress_struct.146*)*, void (%struct.jpeg_compress_struct.146*)*, void (%struct.jpeg_compress_struct.146*)*, i32, i32 }
%struct.jpeg_c_main_controller.156 = type { void (%struct.jpeg_compress_struct.146*, i32)*, void (%struct.jpeg_compress_struct.146*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller.157 = type { void (%struct.jpeg_compress_struct.146*, i32)*, void (%struct.jpeg_compress_struct.146*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller.158 = type { void (%struct.jpeg_compress_struct.146*, i32)*, i32 (%struct.jpeg_compress_struct.146*, i8***)* }
%struct.jpeg_marker_writer.159 = type { void (%struct.jpeg_compress_struct.146*, i32, i8*, i32)*, void (%struct.jpeg_compress_struct.146*)*, void (%struct.jpeg_compress_struct.146*)*, void (%struct.jpeg_compress_struct.146*)*, void (%struct.jpeg_compress_struct.146*)*, void (%struct.jpeg_compress_struct.146*)* }
%struct.jpeg_color_converter.160 = type { void (%struct.jpeg_compress_struct.146*)*, void (%struct.jpeg_compress_struct.146*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler.161 = type { void (%struct.jpeg_compress_struct.146*)*, void (%struct.jpeg_compress_struct.146*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct.162 = type { void (%struct.jpeg_compress_struct.146*)*, void (%struct.jpeg_compress_struct.146*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder.163 = type { {}*, i32 (%struct.jpeg_compress_struct.146*, [64 x i16]**)*, void (%struct.jpeg_compress_struct.146*)* }
%struct.my_main_controller = type { %struct.jpeg_c_main_controller.156, i32, i32, i32, i32, [10 x i8**] }
%struct.jpeg_compress_struct.168 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_destination_mgr.172*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master.67*, %struct.jpeg_c_main_controller.178*, %struct.jpeg_c_prep_controller.179*, %struct.jpeg_c_coef_controller.180*, %struct.jpeg_marker_writer.181*, %struct.jpeg_color_converter.182*, %struct.jpeg_downsampler.183*, %struct.jpeg_forward_dct.184*, %struct.jpeg_entropy_encoder.185* }
%struct.jpeg_destination_mgr.172 = type { i8*, i64, {}*, i32 (%struct.jpeg_compress_struct.168*)*, {}* }
%struct.jpeg_c_main_controller.178 = type { void (%struct.jpeg_compress_struct.168*, i32)*, void (%struct.jpeg_compress_struct.168*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller.179 = type { void (%struct.jpeg_compress_struct.168*, i32)*, void (%struct.jpeg_compress_struct.168*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller.180 = type { void (%struct.jpeg_compress_struct.168*, i32)*, i32 (%struct.jpeg_compress_struct.168*, i8***)* }
%struct.jpeg_marker_writer.181 = type { void (%struct.jpeg_compress_struct.168*, i32, i8*, i32)*, {}*, {}*, {}*, {}*, {}* }
%struct.jpeg_color_converter.182 = type { {}*, void (%struct.jpeg_compress_struct.168*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler.183 = type { {}*, void (%struct.jpeg_compress_struct.168*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct.184 = type { {}*, void (%struct.jpeg_compress_struct.168*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder.185 = type { void (%struct.jpeg_compress_struct.168*, i32)*, i32 (%struct.jpeg_compress_struct.168*, [64 x i16]**)*, {}* }
%struct.jpeg_compress_struct.190 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_destination_mgr.194*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master.199*, %struct.jpeg_c_main_controller.200*, %struct.jpeg_c_prep_controller.201*, %struct.jpeg_c_coef_controller.202*, %struct.jpeg_marker_writer.203*, %struct.jpeg_color_converter.204*, %struct.jpeg_downsampler.205*, %struct.jpeg_forward_dct.206*, %struct.jpeg_entropy_encoder.207* }
%struct.jpeg_destination_mgr.194 = type { i8*, i64, void (%struct.jpeg_compress_struct.190*)*, i32 (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*)* }
%struct.jpeg_comp_master.199 = type { void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*)*, i32, i32 }
%struct.jpeg_c_main_controller.200 = type { void (%struct.jpeg_compress_struct.190*, i32)*, void (%struct.jpeg_compress_struct.190*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller.201 = type { void (%struct.jpeg_compress_struct.190*, i32)*, void (%struct.jpeg_compress_struct.190*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller.202 = type { void (%struct.jpeg_compress_struct.190*, i32)*, i32 (%struct.jpeg_compress_struct.190*, i8***)* }
%struct.jpeg_marker_writer.203 = type { void (%struct.jpeg_compress_struct.190*, i32, i8*, i32)*, void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*)* }
%struct.jpeg_color_converter.204 = type { void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler.205 = type { void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct.206 = type { void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder.207 = type { {}*, i32 (%struct.jpeg_compress_struct.190*, [64 x i16]**)*, void (%struct.jpeg_compress_struct.190*)* }
%struct.my_comp_master = type { %struct.jpeg_comp_master.199, i32, i32, i32, i32 }
%struct.jpeg_common_struct.212 = type { %struct.jpeg_error_mgr.213*, %struct.jpeg_memory_mgr.214*, %struct.jpeg_progress_mgr*, i32, i32 }
%struct.jpeg_error_mgr.213 = type { {}*, void (%struct.jpeg_common_struct.212*, i32)*, {}*, void (%struct.jpeg_common_struct.212*, i8*)*, {}*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_memory_mgr.214 = type { i8* (%struct.jpeg_common_struct.212*, i32, i64)*, i8* (%struct.jpeg_common_struct.212*, i32, i64)*, i8** (%struct.jpeg_common_struct.212*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct.212*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct.212*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct.212*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct.212*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct.212*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct.212*, i32)*, {}*, i64 }
%struct.phuff_entropy_encoder = type { %struct.jpeg_entropy_encoder.75, i32, i8*, i64, i64, i32, %struct.jpeg_compress_struct.58*, [4 x i32], i32, i32, i32, i8*, i32, i32, [4 x %struct.c_derived_tbl*], [4 x i64*] }
%struct.jpeg_compress_struct.266 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_destination_mgr.270*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master.275*, %struct.jpeg_c_main_controller.276*, %struct.jpeg_c_prep_controller.277*, %struct.jpeg_c_coef_controller.278*, %struct.jpeg_marker_writer.279*, %struct.jpeg_color_converter.280*, %struct.jpeg_downsampler.281*, %struct.jpeg_forward_dct.282*, %struct.jpeg_entropy_encoder.283* }
%struct.jpeg_destination_mgr.270 = type { i8*, i64, void (%struct.jpeg_compress_struct.266*)*, i32 (%struct.jpeg_compress_struct.266*)*, void (%struct.jpeg_compress_struct.266*)* }
%struct.jpeg_comp_master.275 = type { void (%struct.jpeg_compress_struct.266*)*, void (%struct.jpeg_compress_struct.266*)*, void (%struct.jpeg_compress_struct.266*)*, i32, i32 }
%struct.jpeg_c_main_controller.276 = type { void (%struct.jpeg_compress_struct.266*, i32)*, void (%struct.jpeg_compress_struct.266*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller.277 = type { void (%struct.jpeg_compress_struct.266*, i32)*, void (%struct.jpeg_compress_struct.266*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller.278 = type { void (%struct.jpeg_compress_struct.266*, i32)*, i32 (%struct.jpeg_compress_struct.266*, i8***)* }
%struct.jpeg_marker_writer.279 = type { void (%struct.jpeg_compress_struct.266*, i32, i8*, i32)*, void (%struct.jpeg_compress_struct.266*)*, void (%struct.jpeg_compress_struct.266*)*, void (%struct.jpeg_compress_struct.266*)*, void (%struct.jpeg_compress_struct.266*)*, void (%struct.jpeg_compress_struct.266*)* }
%struct.jpeg_color_converter.280 = type { void (%struct.jpeg_compress_struct.266*)*, void (%struct.jpeg_compress_struct.266*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler.281 = type { void (%struct.jpeg_compress_struct.266*)*, void (%struct.jpeg_compress_struct.266*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct.282 = type { void (%struct.jpeg_compress_struct.266*)*, void (%struct.jpeg_compress_struct.266*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder.283 = type { {}*, i32 (%struct.jpeg_compress_struct.266*, [64 x i16]**)*, void (%struct.jpeg_compress_struct.266*)* }
%struct.my_prep_controller = type { %struct.jpeg_c_prep_controller.277, [10 x i8**], i32, i32, i32, i32 }
%struct.my_downsampler = type { %struct.jpeg_downsampler.73, [10 x void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)*] }
%struct.my_coef_controller.345 = type { %struct.jpeg_c_coef_controller, i32, i32, i32, i32, %struct.jvirt_barray_control**, [10 x [64 x i16]*] }
%struct.jpeg_decompress_struct.369 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr.373*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master.377*, %struct.jpeg_d_main_controller.378*, %struct.jpeg_d_coef_controller.379*, %struct.jpeg_d_post_controller.380*, %struct.jpeg_input_controller.381*, %struct.jpeg_marker_reader.382*, %struct.jpeg_entropy_decoder.383*, %struct.jpeg_inverse_dct.384*, %struct.jpeg_upsampler.385*, %struct.jpeg_color_deconverter.386*, %struct.jpeg_color_quantizer.387* }
%struct.jpeg_source_mgr.373 = type { i8*, i64, void (%struct.jpeg_decompress_struct.369*)*, {}*, void (%struct.jpeg_decompress_struct.369*, i64)*, i32 (%struct.jpeg_decompress_struct.369*, i32)*, void (%struct.jpeg_decompress_struct.369*)* }
%struct.jpeg_decomp_master.377 = type { void (%struct.jpeg_decompress_struct.369*)*, void (%struct.jpeg_decompress_struct.369*)*, i32 }
%struct.jpeg_d_main_controller.378 = type { void (%struct.jpeg_decompress_struct.369*, i32)*, void (%struct.jpeg_decompress_struct.369*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller.379 = type { void (%struct.jpeg_decompress_struct.369*)*, {}*, void (%struct.jpeg_decompress_struct.369*)*, i32 (%struct.jpeg_decompress_struct.369*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller.380 = type { void (%struct.jpeg_decompress_struct.369*, i32)*, void (%struct.jpeg_decompress_struct.369*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller.381 = type { {}*, void (%struct.jpeg_decompress_struct.369*)*, void (%struct.jpeg_decompress_struct.369*)*, void (%struct.jpeg_decompress_struct.369*)*, i32, i32 }
%struct.jpeg_marker_reader.382 = type { void (%struct.jpeg_decompress_struct.369*)*, {}*, {}*, {}*, [16 x {}*], i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder.383 = type { void (%struct.jpeg_decompress_struct.369*)*, i32 (%struct.jpeg_decompress_struct.369*, [64 x i16]**)* }
%struct.jpeg_inverse_dct.384 = type { void (%struct.jpeg_decompress_struct.369*)*, [10 x void (%struct.jpeg_decompress_struct.369*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler.385 = type { void (%struct.jpeg_decompress_struct.369*)*, void (%struct.jpeg_decompress_struct.369*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter.386 = type { void (%struct.jpeg_decompress_struct.369*)*, void (%struct.jpeg_decompress_struct.369*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer.387 = type { void (%struct.jpeg_decompress_struct.369*, i32)*, void (%struct.jpeg_decompress_struct.369*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct.369*)*, void (%struct.jpeg_decompress_struct.369*)* }
%struct.my_destination_mgr = type { %struct.jpeg_destination_mgr, %struct._IO_FILE*, i8* }
%struct.my_source_mgr = type { %struct.jpeg_source_mgr, %struct._IO_FILE*, i8*, i32 }
%struct.jpeg_decompress_struct.445 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr.449*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master.453*, %struct.jpeg_d_main_controller.454*, %struct.jpeg_d_coef_controller.455*, %struct.jpeg_d_post_controller.456*, %struct.jpeg_input_controller.457*, %struct.jpeg_marker_reader.458*, %struct.jpeg_entropy_decoder.459*, %struct.jpeg_inverse_dct.460*, %struct.jpeg_upsampler.461*, %struct.jpeg_color_deconverter.462*, %struct.jpeg_color_quantizer.463* }
%struct.jpeg_source_mgr.449 = type { i8*, i64, void (%struct.jpeg_decompress_struct.445*)*, i32 (%struct.jpeg_decompress_struct.445*)*, void (%struct.jpeg_decompress_struct.445*, i64)*, i32 (%struct.jpeg_decompress_struct.445*, i32)*, void (%struct.jpeg_decompress_struct.445*)* }
%struct.jpeg_decomp_master.453 = type { void (%struct.jpeg_decompress_struct.445*)*, void (%struct.jpeg_decompress_struct.445*)*, i32 }
%struct.jpeg_d_main_controller.454 = type { void (%struct.jpeg_decompress_struct.445*, i32)*, void (%struct.jpeg_decompress_struct.445*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller.455 = type { void (%struct.jpeg_decompress_struct.445*)*, i32 (%struct.jpeg_decompress_struct.445*)*, void (%struct.jpeg_decompress_struct.445*)*, i32 (%struct.jpeg_decompress_struct.445*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller.456 = type { void (%struct.jpeg_decompress_struct.445*, i32)*, void (%struct.jpeg_decompress_struct.445*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller.457 = type { i32 (%struct.jpeg_decompress_struct.445*)*, void (%struct.jpeg_decompress_struct.445*)*, void (%struct.jpeg_decompress_struct.445*)*, void (%struct.jpeg_decompress_struct.445*)*, i32, i32 }
%struct.jpeg_marker_reader.458 = type { void (%struct.jpeg_decompress_struct.445*)*, i32 (%struct.jpeg_decompress_struct.445*)*, i32 (%struct.jpeg_decompress_struct.445*)*, i32 (%struct.jpeg_decompress_struct.445*)*, [16 x i32 (%struct.jpeg_decompress_struct.445*)*], i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder.459 = type { void (%struct.jpeg_decompress_struct.445*)*, i32 (%struct.jpeg_decompress_struct.445*, [64 x i16]**)* }
%struct.jpeg_inverse_dct.460 = type { void (%struct.jpeg_decompress_struct.445*)*, [10 x void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler.461 = type { void (%struct.jpeg_decompress_struct.445*)*, void (%struct.jpeg_decompress_struct.445*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter.462 = type { void (%struct.jpeg_decompress_struct.445*)*, void (%struct.jpeg_decompress_struct.445*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer.463 = type { {}*, void (%struct.jpeg_decompress_struct.445*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct.445*)*, void (%struct.jpeg_decompress_struct.445*)* }
%struct.my_coef_controller.468 = type { %struct.jpeg_d_coef_controller.455, i32, i32, i32, [10 x [64 x i16]*], [10 x %struct.jvirt_barray_control*], i32* }
%struct.jpeg_decompress_struct.469 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr.473*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master.477*, %struct.jpeg_d_main_controller.478*, %struct.jpeg_d_coef_controller.479*, %struct.jpeg_d_post_controller.480*, %struct.jpeg_input_controller.481*, %struct.jpeg_marker_reader.482*, %struct.jpeg_entropy_decoder.483*, %struct.jpeg_inverse_dct.484*, %struct.jpeg_upsampler.485*, %struct.jpeg_color_deconverter.486*, %struct.jpeg_color_quantizer.487* }
%struct.jpeg_source_mgr.473 = type { i8*, i64, {}*, i32 (%struct.jpeg_decompress_struct.469*)*, void (%struct.jpeg_decompress_struct.469*, i64)*, i32 (%struct.jpeg_decompress_struct.469*, i32)*, {}* }
%struct.jpeg_decomp_master.477 = type { {}*, {}*, i32 }
%struct.jpeg_d_main_controller.478 = type { void (%struct.jpeg_decompress_struct.469*, i32)*, void (%struct.jpeg_decompress_struct.469*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller.479 = type { {}*, i32 (%struct.jpeg_decompress_struct.469*)*, {}*, i32 (%struct.jpeg_decompress_struct.469*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller.480 = type { void (%struct.jpeg_decompress_struct.469*, i32)*, void (%struct.jpeg_decompress_struct.469*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller.481 = type { i32 (%struct.jpeg_decompress_struct.469*)*, {}*, {}*, {}*, i32, i32 }
%struct.jpeg_marker_reader.482 = type { {}*, i32 (%struct.jpeg_decompress_struct.469*)*, i32 (%struct.jpeg_decompress_struct.469*)*, i32 (%struct.jpeg_decompress_struct.469*)*, [16 x i32 (%struct.jpeg_decompress_struct.469*)*], i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder.483 = type { {}*, i32 (%struct.jpeg_decompress_struct.469*, [64 x i16]**)* }
%struct.jpeg_inverse_dct.484 = type { {}*, [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler.485 = type { {}*, void (%struct.jpeg_decompress_struct.469*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter.486 = type { {}*, void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer.487 = type { void (%struct.jpeg_decompress_struct.469*, i32)*, void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)*, {}*, {}* }
%struct.my_color_deconverter = type { %struct.jpeg_color_deconverter.486, i32*, i32*, i64*, i64* }
%struct.jpeg_decompress_struct.492 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr.496*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master.477*, %struct.jpeg_d_main_controller.501*, %struct.jpeg_d_coef_controller.502*, %struct.jpeg_d_post_controller.503*, %struct.jpeg_input_controller.504*, %struct.jpeg_marker_reader.505*, %struct.jpeg_entropy_decoder.506*, %struct.jpeg_inverse_dct.507*, %struct.jpeg_upsampler.508*, %struct.jpeg_color_deconverter.509*, %struct.jpeg_color_quantizer.510* }
%struct.jpeg_source_mgr.496 = type { i8*, i64, {}*, i32 (%struct.jpeg_decompress_struct.492*)*, void (%struct.jpeg_decompress_struct.492*, i64)*, i32 (%struct.jpeg_decompress_struct.492*, i32)*, {}* }
%struct.jpeg_d_main_controller.501 = type { void (%struct.jpeg_decompress_struct.492*, i32)*, void (%struct.jpeg_decompress_struct.492*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller.502 = type { {}*, i32 (%struct.jpeg_decompress_struct.492*)*, {}*, i32 (%struct.jpeg_decompress_struct.492*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller.503 = type { void (%struct.jpeg_decompress_struct.492*, i32)*, void (%struct.jpeg_decompress_struct.492*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller.504 = type { i32 (%struct.jpeg_decompress_struct.492*)*, {}*, {}*, {}*, i32, i32 }
%struct.jpeg_marker_reader.505 = type { {}*, i32 (%struct.jpeg_decompress_struct.492*)*, i32 (%struct.jpeg_decompress_struct.492*)*, i32 (%struct.jpeg_decompress_struct.492*)*, [16 x i32 (%struct.jpeg_decompress_struct.492*)*], i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder.506 = type { {}*, i32 (%struct.jpeg_decompress_struct.492*, [64 x i16]**)* }
%struct.jpeg_inverse_dct.507 = type { {}*, [10 x void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler.508 = type { {}*, void (%struct.jpeg_decompress_struct.492*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter.509 = type { {}*, void (%struct.jpeg_decompress_struct.492*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer.510 = type { void (%struct.jpeg_decompress_struct.492*, i32)*, void (%struct.jpeg_decompress_struct.492*, i8**, i8**, i32)*, {}*, {}* }
%struct.my_idct_controller = type { %struct.jpeg_inverse_dct.507, [10 x i32] }
%struct.d_derived_tbl = type { [17 x i64], [18 x i64], [17 x i32], %struct.JHUFF_TBL*, [256 x i32], [256 x i8] }
%struct.bitread_working_state = type { i8*, i64, i32, i64, i32, %struct.jpeg_decompress_struct*, i32* }
%struct.huff_entropy_decoder = type { %struct.jpeg_entropy_decoder, %struct.bitread_perm_state, %struct.savable_state.538, i32, [4 x %struct.d_derived_tbl*], [4 x %struct.d_derived_tbl*] }
%struct.bitread_perm_state = type { i64, i32, i32 }
%struct.savable_state.538 = type { [4 x i32] }
%struct.jpeg_decompress_struct.539 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr.543*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master.477*, %struct.jpeg_d_main_controller.548*, %struct.jpeg_d_coef_controller.549*, %struct.jpeg_d_post_controller.550*, %struct.jpeg_input_controller.551*, %struct.jpeg_marker_reader.552*, %struct.jpeg_entropy_decoder.553*, %struct.jpeg_inverse_dct.554*, %struct.jpeg_upsampler.555*, %struct.jpeg_color_deconverter.556*, %struct.jpeg_color_quantizer.557* }
%struct.jpeg_source_mgr.543 = type { i8*, i64, {}*, i32 (%struct.jpeg_decompress_struct.539*)*, void (%struct.jpeg_decompress_struct.539*, i64)*, i32 (%struct.jpeg_decompress_struct.539*, i32)*, {}* }
%struct.jpeg_d_main_controller.548 = type { void (%struct.jpeg_decompress_struct.539*, i32)*, void (%struct.jpeg_decompress_struct.539*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller.549 = type { {}*, i32 (%struct.jpeg_decompress_struct.539*)*, {}*, i32 (%struct.jpeg_decompress_struct.539*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller.550 = type { void (%struct.jpeg_decompress_struct.539*, i32)*, void (%struct.jpeg_decompress_struct.539*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller.551 = type { i32 (%struct.jpeg_decompress_struct.539*)*, {}*, {}*, {}*, i32, i32 }
%struct.jpeg_marker_reader.552 = type { {}*, i32 (%struct.jpeg_decompress_struct.539*)*, i32 (%struct.jpeg_decompress_struct.539*)*, i32 (%struct.jpeg_decompress_struct.539*)*, [16 x i32 (%struct.jpeg_decompress_struct.539*)*], i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder.553 = type { {}*, i32 (%struct.jpeg_decompress_struct.539*, [64 x i16]**)* }
%struct.jpeg_inverse_dct.554 = type { {}*, [10 x void (%struct.jpeg_decompress_struct.539*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler.555 = type { {}*, void (%struct.jpeg_decompress_struct.539*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter.556 = type { {}*, void (%struct.jpeg_decompress_struct.539*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer.557 = type { void (%struct.jpeg_decompress_struct.539*, i32)*, void (%struct.jpeg_decompress_struct.539*, i8**, i8**, i32)*, {}*, {}* }
%struct.my_input_controller = type { %struct.jpeg_input_controller.551, i32 }
%struct.jpeg_decompress_struct.562 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr.566*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master.570*, %struct.jpeg_d_main_controller.571*, %struct.jpeg_d_coef_controller.572*, %struct.jpeg_d_post_controller.573*, %struct.jpeg_input_controller.574*, %struct.jpeg_marker_reader.575*, %struct.jpeg_entropy_decoder.576*, %struct.jpeg_inverse_dct.577*, %struct.jpeg_upsampler.578*, %struct.jpeg_color_deconverter.579*, %struct.jpeg_color_quantizer.580* }
%struct.jpeg_source_mgr.566 = type { i8*, i64, void (%struct.jpeg_decompress_struct.562*)*, i32 (%struct.jpeg_decompress_struct.562*)*, void (%struct.jpeg_decompress_struct.562*, i64)*, i32 (%struct.jpeg_decompress_struct.562*, i32)*, void (%struct.jpeg_decompress_struct.562*)* }
%struct.jpeg_decomp_master.570 = type { void (%struct.jpeg_decompress_struct.562*)*, void (%struct.jpeg_decompress_struct.562*)*, i32 }
%struct.jpeg_d_main_controller.571 = type { void (%struct.jpeg_decompress_struct.562*, i32)*, void (%struct.jpeg_decompress_struct.562*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller.572 = type { void (%struct.jpeg_decompress_struct.562*)*, i32 (%struct.jpeg_decompress_struct.562*)*, void (%struct.jpeg_decompress_struct.562*)*, i32 (%struct.jpeg_decompress_struct.562*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller.573 = type { void (%struct.jpeg_decompress_struct.562*, i32)*, void (%struct.jpeg_decompress_struct.562*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller.574 = type { i32 (%struct.jpeg_decompress_struct.562*)*, void (%struct.jpeg_decompress_struct.562*)*, void (%struct.jpeg_decompress_struct.562*)*, void (%struct.jpeg_decompress_struct.562*)*, i32, i32 }
%struct.jpeg_marker_reader.575 = type { void (%struct.jpeg_decompress_struct.562*)*, i32 (%struct.jpeg_decompress_struct.562*)*, i32 (%struct.jpeg_decompress_struct.562*)*, i32 (%struct.jpeg_decompress_struct.562*)*, [16 x i32 (%struct.jpeg_decompress_struct.562*)*], i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder.576 = type { void (%struct.jpeg_decompress_struct.562*)*, i32 (%struct.jpeg_decompress_struct.562*, [64 x i16]**)* }
%struct.jpeg_inverse_dct.577 = type { void (%struct.jpeg_decompress_struct.562*)*, [10 x void (%struct.jpeg_decompress_struct.562*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler.578 = type { void (%struct.jpeg_decompress_struct.562*)*, void (%struct.jpeg_decompress_struct.562*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter.579 = type { void (%struct.jpeg_decompress_struct.562*)*, void (%struct.jpeg_decompress_struct.562*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer.580 = type { {}*, void (%struct.jpeg_decompress_struct.562*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct.562*)*, void (%struct.jpeg_decompress_struct.562*)* }
%struct.my_main_controller.585 = type { %struct.jpeg_d_main_controller.571, [10 x i8**], i32, i32, [2 x i8***], i32, i32, i32, i32 }
%struct.jpeg_decompress_struct.586 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr.590*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master.594*, %struct.jpeg_d_main_controller.595*, %struct.jpeg_d_coef_controller.596*, %struct.jpeg_d_post_controller.597*, %struct.jpeg_input_controller.598*, %struct.jpeg_marker_reader.599*, %struct.jpeg_entropy_decoder.600*, %struct.jpeg_inverse_dct.601*, %struct.jpeg_upsampler.602*, %struct.jpeg_color_deconverter.603*, %struct.jpeg_color_quantizer.604* }
%struct.jpeg_source_mgr.590 = type { i8*, i64, void (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)*, void (%struct.jpeg_decompress_struct.586*, i64)*, {}*, void (%struct.jpeg_decompress_struct.586*)* }
%struct.jpeg_decomp_master.594 = type { void (%struct.jpeg_decompress_struct.586*)*, void (%struct.jpeg_decompress_struct.586*)*, i32 }
%struct.jpeg_d_main_controller.595 = type { void (%struct.jpeg_decompress_struct.586*, i32)*, void (%struct.jpeg_decompress_struct.586*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller.596 = type { void (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)*, void (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller.597 = type { void (%struct.jpeg_decompress_struct.586*, i32)*, void (%struct.jpeg_decompress_struct.586*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller.598 = type { i32 (%struct.jpeg_decompress_struct.586*)*, void (%struct.jpeg_decompress_struct.586*)*, void (%struct.jpeg_decompress_struct.586*)*, void (%struct.jpeg_decompress_struct.586*)*, i32, i32 }
%struct.jpeg_marker_reader.599 = type { void (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)*, [16 x i32 (%struct.jpeg_decompress_struct.586*)*], i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder.600 = type { void (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*, [64 x i16]**)* }
%struct.jpeg_inverse_dct.601 = type { void (%struct.jpeg_decompress_struct.586*)*, [10 x void (%struct.jpeg_decompress_struct.586*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler.602 = type { void (%struct.jpeg_decompress_struct.586*)*, void (%struct.jpeg_decompress_struct.586*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter.603 = type { void (%struct.jpeg_decompress_struct.586*)*, void (%struct.jpeg_decompress_struct.586*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer.604 = type { void (%struct.jpeg_decompress_struct.586*, i32)*, void (%struct.jpeg_decompress_struct.586*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct.586*)*, void (%struct.jpeg_decompress_struct.586*)* }
%struct.my_decomp_master = type { %struct.jpeg_decomp_master.477, i32, i32, %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487* }
%struct.my_upsampler = type { %struct.jpeg_upsampler.485, void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**)*, i32*, i32*, i64*, i64*, i8*, i32, i32, i32 }
%struct.phuff_entropy_decoder = type { %struct.jpeg_entropy_decoder.483, %struct.bitread_perm_state, %struct.savable_state.679, i32, [4 x %struct.d_derived_tbl*], %struct.d_derived_tbl* }
%struct.savable_state.679 = type { i32, [4 x i32] }
%struct.bitread_working_state.681 = type { i8*, i64, i32, i64, i32, %struct.jpeg_decompress_struct.469*, i32* }
%struct.jpeg_decompress_struct.682 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr.686*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master.690*, %struct.jpeg_d_main_controller.691*, %struct.jpeg_d_coef_controller.692*, %struct.jpeg_d_post_controller.693*, %struct.jpeg_input_controller.694*, %struct.jpeg_marker_reader.695*, %struct.jpeg_entropy_decoder.696*, %struct.jpeg_inverse_dct.697*, %struct.jpeg_upsampler.698*, %struct.jpeg_color_deconverter.699*, %struct.jpeg_color_quantizer.700* }
%struct.jpeg_source_mgr.686 = type { i8*, i64, void (%struct.jpeg_decompress_struct.682*)*, i32 (%struct.jpeg_decompress_struct.682*)*, void (%struct.jpeg_decompress_struct.682*, i64)*, i32 (%struct.jpeg_decompress_struct.682*, i32)*, void (%struct.jpeg_decompress_struct.682*)* }
%struct.jpeg_decomp_master.690 = type { void (%struct.jpeg_decompress_struct.682*)*, void (%struct.jpeg_decompress_struct.682*)*, i32 }
%struct.jpeg_d_main_controller.691 = type { void (%struct.jpeg_decompress_struct.682*, i32)*, void (%struct.jpeg_decompress_struct.682*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller.692 = type { void (%struct.jpeg_decompress_struct.682*)*, i32 (%struct.jpeg_decompress_struct.682*)*, void (%struct.jpeg_decompress_struct.682*)*, i32 (%struct.jpeg_decompress_struct.682*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller.693 = type { void (%struct.jpeg_decompress_struct.682*, i32)*, void (%struct.jpeg_decompress_struct.682*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller.694 = type { i32 (%struct.jpeg_decompress_struct.682*)*, void (%struct.jpeg_decompress_struct.682*)*, void (%struct.jpeg_decompress_struct.682*)*, void (%struct.jpeg_decompress_struct.682*)*, i32, i32 }
%struct.jpeg_marker_reader.695 = type { void (%struct.jpeg_decompress_struct.682*)*, i32 (%struct.jpeg_decompress_struct.682*)*, i32 (%struct.jpeg_decompress_struct.682*)*, i32 (%struct.jpeg_decompress_struct.682*)*, [16 x i32 (%struct.jpeg_decompress_struct.682*)*], i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder.696 = type { void (%struct.jpeg_decompress_struct.682*)*, i32 (%struct.jpeg_decompress_struct.682*, [64 x i16]**)* }
%struct.jpeg_inverse_dct.697 = type { void (%struct.jpeg_decompress_struct.682*)*, [10 x void (%struct.jpeg_decompress_struct.682*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler.698 = type { void (%struct.jpeg_decompress_struct.682*)*, void (%struct.jpeg_decompress_struct.682*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter.699 = type { void (%struct.jpeg_decompress_struct.682*)*, void (%struct.jpeg_decompress_struct.682*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer.700 = type { {}*, void (%struct.jpeg_decompress_struct.682*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct.682*)*, void (%struct.jpeg_decompress_struct.682*)* }
%struct.my_post_controller = type { %struct.jpeg_d_post_controller.693, %struct.jvirt_sarray_control*, i8**, i32, i32, i32 }
%struct.my_upsampler.728 = type { %struct.jpeg_upsampler.485, [10 x i8**], [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*], i32, i32, [10 x i32], [10 x i8], [10 x i8] }
%struct.jpeg_decompress_struct.763 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr.767*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master.771*, %struct.jpeg_d_main_controller.772*, %struct.jpeg_d_coef_controller.773*, %struct.jpeg_d_post_controller.774*, %struct.jpeg_input_controller.775*, %struct.jpeg_marker_reader.776*, %struct.jpeg_entropy_decoder.777*, %struct.jpeg_inverse_dct.778*, %struct.jpeg_upsampler.779*, %struct.jpeg_color_deconverter.780*, %struct.jpeg_color_quantizer.781* }
%struct.jpeg_source_mgr.767 = type { i8*, i64, void (%struct.jpeg_decompress_struct.763*)*, i32 (%struct.jpeg_decompress_struct.763*)*, void (%struct.jpeg_decompress_struct.763*, i64)*, i32 (%struct.jpeg_decompress_struct.763*, i32)*, void (%struct.jpeg_decompress_struct.763*)* }
%struct.jpeg_decomp_master.771 = type { void (%struct.jpeg_decompress_struct.763*)*, void (%struct.jpeg_decompress_struct.763*)*, i32 }
%struct.jpeg_d_main_controller.772 = type { void (%struct.jpeg_decompress_struct.763*, i32)*, void (%struct.jpeg_decompress_struct.763*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller.773 = type { void (%struct.jpeg_decompress_struct.763*)*, i32 (%struct.jpeg_decompress_struct.763*)*, void (%struct.jpeg_decompress_struct.763*)*, i32 (%struct.jpeg_decompress_struct.763*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller.774 = type { void (%struct.jpeg_decompress_struct.763*, i32)*, void (%struct.jpeg_decompress_struct.763*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller.775 = type { i32 (%struct.jpeg_decompress_struct.763*)*, void (%struct.jpeg_decompress_struct.763*)*, void (%struct.jpeg_decompress_struct.763*)*, void (%struct.jpeg_decompress_struct.763*)*, i32, i32 }
%struct.jpeg_marker_reader.776 = type { void (%struct.jpeg_decompress_struct.763*)*, i32 (%struct.jpeg_decompress_struct.763*)*, i32 (%struct.jpeg_decompress_struct.763*)*, i32 (%struct.jpeg_decompress_struct.763*)*, [16 x i32 (%struct.jpeg_decompress_struct.763*)*], i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder.777 = type { void (%struct.jpeg_decompress_struct.763*)*, i32 (%struct.jpeg_decompress_struct.763*, [64 x i16]**)* }
%struct.jpeg_inverse_dct.778 = type { void (%struct.jpeg_decompress_struct.763*)*, [10 x {}*] }
%struct.jpeg_upsampler.779 = type { void (%struct.jpeg_decompress_struct.763*)*, void (%struct.jpeg_decompress_struct.763*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter.780 = type { void (%struct.jpeg_decompress_struct.763*)*, void (%struct.jpeg_decompress_struct.763*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer.781 = type { void (%struct.jpeg_decompress_struct.763*, i32)*, void (%struct.jpeg_decompress_struct.763*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct.763*)*, void (%struct.jpeg_decompress_struct.763*)* }
%struct.jpeg_decompress_struct.786 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr.790*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master.794*, %struct.jpeg_d_main_controller.795*, %struct.jpeg_d_coef_controller.796*, %struct.jpeg_d_post_controller.797*, %struct.jpeg_input_controller.798*, %struct.jpeg_marker_reader.799*, %struct.jpeg_entropy_decoder.800*, %struct.jpeg_inverse_dct.801*, %struct.jpeg_upsampler.802*, %struct.jpeg_color_deconverter.803*, %struct.jpeg_color_quantizer.804* }
%struct.jpeg_source_mgr.790 = type { i8*, i64, void (%struct.jpeg_decompress_struct.786*)*, i32 (%struct.jpeg_decompress_struct.786*)*, void (%struct.jpeg_decompress_struct.786*, i64)*, i32 (%struct.jpeg_decompress_struct.786*, i32)*, void (%struct.jpeg_decompress_struct.786*)* }
%struct.jpeg_decomp_master.794 = type { void (%struct.jpeg_decompress_struct.786*)*, void (%struct.jpeg_decompress_struct.786*)*, i32 }
%struct.jpeg_d_main_controller.795 = type { void (%struct.jpeg_decompress_struct.786*, i32)*, void (%struct.jpeg_decompress_struct.786*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller.796 = type { void (%struct.jpeg_decompress_struct.786*)*, i32 (%struct.jpeg_decompress_struct.786*)*, void (%struct.jpeg_decompress_struct.786*)*, i32 (%struct.jpeg_decompress_struct.786*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller.797 = type { void (%struct.jpeg_decompress_struct.786*, i32)*, void (%struct.jpeg_decompress_struct.786*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller.798 = type { i32 (%struct.jpeg_decompress_struct.786*)*, void (%struct.jpeg_decompress_struct.786*)*, void (%struct.jpeg_decompress_struct.786*)*, void (%struct.jpeg_decompress_struct.786*)*, i32, i32 }
%struct.jpeg_marker_reader.799 = type { void (%struct.jpeg_decompress_struct.786*)*, i32 (%struct.jpeg_decompress_struct.786*)*, i32 (%struct.jpeg_decompress_struct.786*)*, i32 (%struct.jpeg_decompress_struct.786*)*, [16 x i32 (%struct.jpeg_decompress_struct.786*)*], i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder.800 = type { void (%struct.jpeg_decompress_struct.786*)*, i32 (%struct.jpeg_decompress_struct.786*, [64 x i16]**)* }
%struct.jpeg_inverse_dct.801 = type { void (%struct.jpeg_decompress_struct.786*)*, [10 x {}*] }
%struct.jpeg_upsampler.802 = type { void (%struct.jpeg_decompress_struct.786*)*, void (%struct.jpeg_decompress_struct.786*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter.803 = type { void (%struct.jpeg_decompress_struct.786*)*, void (%struct.jpeg_decompress_struct.786*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer.804 = type { void (%struct.jpeg_decompress_struct.786*, i32)*, void (%struct.jpeg_decompress_struct.786*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct.786*)*, void (%struct.jpeg_decompress_struct.786*)* }
%struct.jpeg_decompress_struct.809 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr.813*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master.817*, %struct.jpeg_d_main_controller.818*, %struct.jpeg_d_coef_controller.819*, %struct.jpeg_d_post_controller.820*, %struct.jpeg_input_controller.821*, %struct.jpeg_marker_reader.822*, %struct.jpeg_entropy_decoder.823*, %struct.jpeg_inverse_dct.824*, %struct.jpeg_upsampler.825*, %struct.jpeg_color_deconverter.826*, %struct.jpeg_color_quantizer.827* }
%struct.jpeg_source_mgr.813 = type { i8*, i64, void (%struct.jpeg_decompress_struct.809*)*, i32 (%struct.jpeg_decompress_struct.809*)*, void (%struct.jpeg_decompress_struct.809*, i64)*, i32 (%struct.jpeg_decompress_struct.809*, i32)*, void (%struct.jpeg_decompress_struct.809*)* }
%struct.jpeg_decomp_master.817 = type { void (%struct.jpeg_decompress_struct.809*)*, void (%struct.jpeg_decompress_struct.809*)*, i32 }
%struct.jpeg_d_main_controller.818 = type { void (%struct.jpeg_decompress_struct.809*, i32)*, void (%struct.jpeg_decompress_struct.809*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller.819 = type { void (%struct.jpeg_decompress_struct.809*)*, i32 (%struct.jpeg_decompress_struct.809*)*, void (%struct.jpeg_decompress_struct.809*)*, i32 (%struct.jpeg_decompress_struct.809*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller.820 = type { void (%struct.jpeg_decompress_struct.809*, i32)*, void (%struct.jpeg_decompress_struct.809*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller.821 = type { i32 (%struct.jpeg_decompress_struct.809*)*, void (%struct.jpeg_decompress_struct.809*)*, void (%struct.jpeg_decompress_struct.809*)*, void (%struct.jpeg_decompress_struct.809*)*, i32, i32 }
%struct.jpeg_marker_reader.822 = type { void (%struct.jpeg_decompress_struct.809*)*, i32 (%struct.jpeg_decompress_struct.809*)*, i32 (%struct.jpeg_decompress_struct.809*)*, i32 (%struct.jpeg_decompress_struct.809*)*, [16 x i32 (%struct.jpeg_decompress_struct.809*)*], i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder.823 = type { void (%struct.jpeg_decompress_struct.809*)*, i32 (%struct.jpeg_decompress_struct.809*, [64 x i16]**)* }
%struct.jpeg_inverse_dct.824 = type { void (%struct.jpeg_decompress_struct.809*)*, [10 x {}*] }
%struct.jpeg_upsampler.825 = type { void (%struct.jpeg_decompress_struct.809*)*, void (%struct.jpeg_decompress_struct.809*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter.826 = type { void (%struct.jpeg_decompress_struct.809*)*, void (%struct.jpeg_decompress_struct.809*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer.827 = type { void (%struct.jpeg_decompress_struct.809*, i32)*, void (%struct.jpeg_decompress_struct.809*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct.809*)*, void (%struct.jpeg_decompress_struct.809*)* }
%struct.jpeg_decompress_struct.832 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr.836*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master.840*, %struct.jpeg_d_main_controller.841*, %struct.jpeg_d_coef_controller.842*, %struct.jpeg_d_post_controller.843*, %struct.jpeg_input_controller.844*, %struct.jpeg_marker_reader.845*, %struct.jpeg_entropy_decoder.846*, %struct.jpeg_inverse_dct.847*, %struct.jpeg_upsampler.848*, %struct.jpeg_color_deconverter.849*, %struct.jpeg_color_quantizer.850* }
%struct.jpeg_source_mgr.836 = type { i8*, i64, void (%struct.jpeg_decompress_struct.832*)*, i32 (%struct.jpeg_decompress_struct.832*)*, void (%struct.jpeg_decompress_struct.832*, i64)*, i32 (%struct.jpeg_decompress_struct.832*, i32)*, void (%struct.jpeg_decompress_struct.832*)* }
%struct.jpeg_decomp_master.840 = type { void (%struct.jpeg_decompress_struct.832*)*, void (%struct.jpeg_decompress_struct.832*)*, i32 }
%struct.jpeg_d_main_controller.841 = type { void (%struct.jpeg_decompress_struct.832*, i32)*, void (%struct.jpeg_decompress_struct.832*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller.842 = type { void (%struct.jpeg_decompress_struct.832*)*, i32 (%struct.jpeg_decompress_struct.832*)*, void (%struct.jpeg_decompress_struct.832*)*, i32 (%struct.jpeg_decompress_struct.832*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller.843 = type { void (%struct.jpeg_decompress_struct.832*, i32)*, void (%struct.jpeg_decompress_struct.832*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller.844 = type { i32 (%struct.jpeg_decompress_struct.832*)*, void (%struct.jpeg_decompress_struct.832*)*, void (%struct.jpeg_decompress_struct.832*)*, void (%struct.jpeg_decompress_struct.832*)*, i32, i32 }
%struct.jpeg_marker_reader.845 = type { void (%struct.jpeg_decompress_struct.832*)*, i32 (%struct.jpeg_decompress_struct.832*)*, i32 (%struct.jpeg_decompress_struct.832*)*, i32 (%struct.jpeg_decompress_struct.832*)*, [16 x i32 (%struct.jpeg_decompress_struct.832*)*], i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder.846 = type { void (%struct.jpeg_decompress_struct.832*)*, i32 (%struct.jpeg_decompress_struct.832*, [64 x i16]**)* }
%struct.jpeg_inverse_dct.847 = type { void (%struct.jpeg_decompress_struct.832*)*, [10 x {}*] }
%struct.jpeg_upsampler.848 = type { void (%struct.jpeg_decompress_struct.832*)*, void (%struct.jpeg_decompress_struct.832*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter.849 = type { void (%struct.jpeg_decompress_struct.832*)*, void (%struct.jpeg_decompress_struct.832*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer.850 = type { void (%struct.jpeg_decompress_struct.832*, i32)*, void (%struct.jpeg_decompress_struct.832*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct.832*)*, void (%struct.jpeg_decompress_struct.832*)* }
%struct.my_memory_mgr = type { %struct.jpeg_memory_mgr.857, [2 x %union.small_pool_struct*], [2 x %union.large_pool_struct*], %struct.jvirt_sarray_control*, %struct.jvirt_barray_control*, i64, i32 }
%union.small_pool_struct = type { %struct.anon }
%struct.anon = type { %union.small_pool_struct*, i64, i64 }
%union.large_pool_struct = type { %struct.anon.0 }
%struct.anon.0 = type { %union.large_pool_struct*, i64, i64 }
%struct.jpeg_common_struct.866 = type { %struct.jpeg_error_mgr.867*, %struct.jpeg_memory_mgr.868*, %struct.jpeg_progress_mgr.869*, i32, i32 }
%struct.jpeg_error_mgr.867 = type { void (%struct.jpeg_common_struct.866*)*, void (%struct.jpeg_common_struct.866*, i32)*, void (%struct.jpeg_common_struct.866*)*, void (%struct.jpeg_common_struct.866*, i8*)*, void (%struct.jpeg_common_struct.866*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_memory_mgr.868 = type { i8* (%struct.jpeg_common_struct.866*, i32, i64)*, i8* (%struct.jpeg_common_struct.866*, i32, i64)*, i8** (%struct.jpeg_common_struct.866*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct.866*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct.866*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct.866*, i32, i32, i32, i32, i32)*, void (%struct.jpeg_common_struct.866*)*, i8** (%struct.jpeg_common_struct.866*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct.866*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct.866*, i32)*, void (%struct.jpeg_common_struct.866*)*, i64 }
%struct.jpeg_progress_mgr.869 = type { void (%struct.jpeg_common_struct.866*)*, i64, i64, i32, i32 }
%struct.backing_store_struct.873 = type { void (%struct.jpeg_common_struct.866*, %struct.backing_store_struct.873*, i8*, i64, i64)*, void (%struct.jpeg_common_struct.866*, %struct.backing_store_struct.873*, i8*, i64, i64)*, void (%struct.jpeg_common_struct.866*, %struct.backing_store_struct.873*)*, %struct._IO_FILE*, [64 x i8] }
%struct.my_cquantizer = type { %struct.jpeg_color_quantizer.487, i8**, i32, i8**, i32, [4 x i32], i32, [4 x [16 x i32]*], [4 x i16*], i32 }
%struct.my_cquantizer.924 = type { %struct.jpeg_color_quantizer.487, i8**, i32, [32 x i16]**, i32, i16*, i32, i32* }
%struct.box = type { i32, i32, i32, i32, i32, i32, i64, i64 }
%struct.bmp_dest_struct = type { %struct.djpeg_dest_struct, i32, %struct.jvirt_sarray_control*, i32, i32, i32, i32 }
%struct.cdjpeg_progress_mgr = type { %struct.jpeg_progress_mgr, i32, i32, i32 }
%struct.gif_dest_struct = type { %struct.djpeg_dest_struct, %struct.jpeg_decompress_struct*, i32, i16, i32, i64, i32, i16, i32, i16, i16, i16, i16*, i64*, i32, [256 x i8] }
%struct.ppm_dest_struct = type { %struct.djpeg_dest_struct, i8*, i8*, i64, i32 }
%struct.tga_dest_struct = type { %struct.djpeg_dest_struct, i8*, i32 }

@stdin = external dso_local global %struct._IO_FILE*, align 8
@stdout = external dso_local global %struct._IO_FILE*, align 8
@progname = internal global i8* null, align 8
@.str = private unnamed_addr constant [6 x i8] c"djpeg\00", align 1
@cdjpeg_message_table = internal constant [44 x i8*] [i8* null, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.46, i32 0, i32 0), i8* null], align 16
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [25 x i8] c"%s: only one input file\0A\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"%s: can't open %s\0A\00", align 1
@outfilename = internal global i8* null, align 8
@.str.4 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@requested_fmt = internal global i32 0, align 4
@.str.86 = private unnamed_addr constant [22 x i8] c"usage: %s [switches] \00", align 1
@.str.87 = private unnamed_addr constant [13 x i8] c"[inputfile]\0A\00", align 1
@.str.88 = private unnamed_addr constant [38 x i8] c"Switches (names may be abbreviated):\0A\00", align 1
@.str.89 = private unnamed_addr constant [56 x i8] c"  -colors N      Reduce image to no more than N colors\0A\00", align 1
@.str.90 = private unnamed_addr constant [47 x i8] c"  -fast          Fast, low-quality processing\0A\00", align 1
@.str.91 = private unnamed_addr constant [41 x i8] c"  -grayscale     Force grayscale output\0A\00", align 1
@.str.92 = private unnamed_addr constant [62 x i8] c"  -scale M/N     Scale output image by fraction M/N, eg, 1/8\0A\00", align 1
@.str.93 = private unnamed_addr constant [61 x i8] c"  -bmp           Select BMP output format (Windows style)%s\0A\00", align 1
@.str.94 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.95 = private unnamed_addr constant [45 x i8] c"  -gif           Select GIF output format%s\0A\00", align 1
@.str.96 = private unnamed_addr constant [58 x i8] c"  -os2           Select BMP output format (OS/2 style)%s\0A\00", align 1
@.str.97 = private unnamed_addr constant [59 x i8] c"  -pnm           Select PBMPLUS (PPM/PGM) output format%s\0A\00", align 1
@.str.98 = private unnamed_addr constant [11 x i8] c" (default)\00", align 1
@.str.99 = private unnamed_addr constant [47 x i8] c"  -targa         Select Targa output format%s\0A\00", align 1
@.str.100 = private unnamed_addr constant [30 x i8] c"Switches for advanced users:\0A\00", align 1
@.str.101 = private unnamed_addr constant [43 x i8] c"  -dct int       Use integer DCT method%s\0A\00", align 1
@.str.102 = private unnamed_addr constant [57 x i8] c"  -dct fast      Use fast integer DCT (less accurate)%s\0A\00", align 1
@.str.103 = private unnamed_addr constant [50 x i8] c"  -dct float     Use floating-point DCT method%s\0A\00", align 1
@.str.104 = private unnamed_addr constant [46 x i8] c"  -dither fs     Use F-S dithering (default)\0A\00", align 1
@.str.105 = private unnamed_addr constant [54 x i8] c"  -dither none   Don't use dithering in quantization\0A\00", align 1
@.str.106 = private unnamed_addr constant [63 x i8] c"  -dither ordered  Use ordered dither (medium speed, quality)\0A\00", align 1
@.str.107 = private unnamed_addr constant [57 x i8] c"  -map FILE      Map to colors used in named image file\0A\00", align 1
@.str.108 = private unnamed_addr constant [52 x i8] c"  -nosmooth      Don't use high-quality upsampling\0A\00", align 1
@.str.109 = private unnamed_addr constant [62 x i8] c"  -onepass       Use 1-pass quantization (fast, low quality)\0A\00", align 1
@.str.110 = private unnamed_addr constant [52 x i8] c"  -maxmemory N   Maximum memory to use (in kbytes)\0A\00", align 1
@.str.111 = private unnamed_addr constant [47 x i8] c"  -outfile name  Specify name for output file\0A\00", align 1
@.str.112 = private unnamed_addr constant [44 x i8] c"  -verbose  or  -debug   Emit debug output\0A\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"bmp\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"colors\00", align 1
@.str.53 = private unnamed_addr constant [8 x i8] c"colours\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"quantize\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c"quantise\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"dct\00", align 1
@.str.58 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"fast\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"dither\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"fs\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.64 = private unnamed_addr constant [8 x i8] c"ordered\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.66 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@parse_switches.printed_version = internal global i32 0, align 4
@.str.67 = private unnamed_addr constant [47 x i8] c"Independent JPEG Group's DJPEG, version %s\0A%s\0A\00", align 1
@.str.68 = private unnamed_addr constant [13 x i8] c"6a  7-Feb-96\00", align 1
@.str.69 = private unnamed_addr constant [35 x i8] c"Copyright (C) 1996, Thomas G. Lane\00", align 1
@.str.70 = private unnamed_addr constant [4 x i8] c"gif\00", align 1
@.str.71 = private unnamed_addr constant [10 x i8] c"grayscale\00", align 1
@.str.72 = private unnamed_addr constant [10 x i8] c"greyscale\00", align 1
@.str.73 = private unnamed_addr constant [4 x i8] c"map\00", align 1
@.str.74 = private unnamed_addr constant [10 x i8] c"maxmemory\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"%ld%c\00", align 1
@.str.76 = private unnamed_addr constant [9 x i8] c"nosmooth\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"onepass\00", align 1
@.str.78 = private unnamed_addr constant [4 x i8] c"os2\00", align 1
@.str.79 = private unnamed_addr constant [8 x i8] c"outfile\00", align 1
@.str.80 = private unnamed_addr constant [4 x i8] c"pnm\00", align 1
@.str.81 = private unnamed_addr constant [4 x i8] c"ppm\00", align 1
@.str.82 = private unnamed_addr constant [4 x i8] c"rle\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c"scale\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"%d/%d\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"targa\00", align 1
@.str.47 = private unnamed_addr constant [22 x i8] c"Comment, length %ld:\0A\00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.49 = private unnamed_addr constant [3 x i8] c"\\\\\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"\\%03o\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"Unsupported BMP colormap format\00", align 1
@.str.6 = private unnamed_addr constant [43 x i8] c"Only 8- and 24-bit BMP files are supported\00", align 1
@.str.7 = private unnamed_addr constant [36 x i8] c"Invalid BMP file: bad header length\00", align 1
@.str.8 = private unnamed_addr constant [42 x i8] c"Invalid BMP file: biPlanes not equal to 1\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"BMP output must be grayscale or RGB\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"Sorry, compressed BMPs not yet supported\00", align 1
@.str.11 = private unnamed_addr constant [40 x i8] c"Not a BMP file - does not start with BM\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"%ux%u 24-bit BMP image\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"%ux%u 8-bit colormapped BMP image\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"%ux%u 24-bit OS2 BMP image\00", align 1
@.str.15 = private unnamed_addr constant [38 x i8] c"%ux%u 8-bit colormapped OS2 BMP image\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"GIF output got confused\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"Bogus GIF codesize %d\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"GIF output must be grayscale or RGB\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"Too few images in GIF file\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"Not a GIF file\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"%ux%ux%d GIF image\00", align 1
@.str.22 = private unnamed_addr constant [48 x i8] c"Warning: unexpected GIF version number '%c%c%c'\00", align 1
@.str.23 = private unnamed_addr constant [44 x i8] c"Ignoring GIF extension block of type 0x%02x\00", align 1
@.str.24 = private unnamed_addr constant [35 x i8] c"Caution: nonsquare pixels in input\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"Corrupt data in GIF file\00", align 1
@.str.26 = private unnamed_addr constant [40 x i8] c"Bogus char 0x%02x in GIF file, ignoring\00", align 1
@.str.27 = private unnamed_addr constant [27 x i8] c"Premature end of GIF image\00", align 1
@.str.28 = private unnamed_addr constant [20 x i8] c"Ran out of GIF bits\00", align 1
@.str.29 = private unnamed_addr constant [36 x i8] c"PPM output must be grayscale or RGB\00", align 1
@.str.30 = private unnamed_addr constant [28 x i8] c"Nonnumeric data in PPM file\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"Not a PPM file\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"%ux%u PGM image\00", align 1
@.str.33 = private unnamed_addr constant [21 x i8] c"%ux%u text PGM image\00", align 1
@.str.34 = private unnamed_addr constant [16 x i8] c"%ux%u PPM image\00", align 1
@.str.35 = private unnamed_addr constant [21 x i8] c"%ux%u text PPM image\00", align 1
@.str.36 = private unnamed_addr constant [34 x i8] c"Unsupported Targa colormap format\00", align 1
@.str.37 = private unnamed_addr constant [34 x i8] c"Invalid or unsupported Targa file\00", align 1
@.str.38 = private unnamed_addr constant [38 x i8] c"Targa output must be grayscale or RGB\00", align 1
@.str.39 = private unnamed_addr constant [22 x i8] c"%ux%u RGB Targa image\00", align 1
@.str.40 = private unnamed_addr constant [28 x i8] c"%ux%u grayscale Targa image\00", align 1
@.str.41 = private unnamed_addr constant [30 x i8] c"%ux%u colormapped Targa image\00", align 1
@.str.42 = private unnamed_addr constant [51 x i8] c"Color map file is invalid or of unsupported format\00", align 1
@.str.43 = private unnamed_addr constant [53 x i8] c"Output file format cannot handle %d colormap entries\00", align 1
@.str.44 = private unnamed_addr constant [14 x i8] c"ungetc failed\00", align 1
@.str.45 = private unnamed_addr constant [59 x i8] c"Unrecognized input file format --- perhaps you need -targa\00", align 1
@.str.46 = private unnamed_addr constant [31 x i8] c"Unsupported output file format\00", align 1
@start_pass_fdctmgr.aanscales = internal constant [64 x i16] [i16 16384, i16 22725, i16 21407, i16 19266, i16 16384, i16 12873, i16 8867, i16 4520, i16 22725, i16 31521, i16 29692, i16 26722, i16 22725, i16 17855, i16 12299, i16 6270, i16 21407, i16 29692, i16 27969, i16 25172, i16 21407, i16 16819, i16 11585, i16 5906, i16 19266, i16 26722, i16 25172, i16 22654, i16 19266, i16 15137, i16 10426, i16 5315, i16 16384, i16 22725, i16 21407, i16 19266, i16 16384, i16 12873, i16 8867, i16 4520, i16 12873, i16 17855, i16 16819, i16 15137, i16 12873, i16 10114, i16 6967, i16 3552, i16 8867, i16 12299, i16 11585, i16 10426, i16 8867, i16 6967, i16 4799, i16 2446, i16 4520, i16 6270, i16 5906, i16 5315, i16 4520, i16 3552, i16 2446, i16 1247], align 16
@start_pass_fdctmgr.aanscalefactor = internal constant [8 x double] [double 1.000000e+00, double 0x3FF63150B14861EF, double 0x3FF4E7AE914D6FCA, double 0x3FF2D062EF6C11AA, double 1.000000e+00, double 0x3FE92469C0A7BF3B, double 0x3FE1517A7BC720BB, double 0x3FD1A855DE72AB5D], align 16
@jpeg_set_linear_quality.std_luminance_quant_tbl = internal constant [64 x i32] [i32 16, i32 11, i32 10, i32 16, i32 24, i32 40, i32 51, i32 61, i32 12, i32 12, i32 14, i32 19, i32 26, i32 58, i32 60, i32 55, i32 14, i32 13, i32 16, i32 24, i32 40, i32 57, i32 69, i32 56, i32 14, i32 17, i32 22, i32 29, i32 51, i32 87, i32 80, i32 62, i32 18, i32 22, i32 37, i32 56, i32 68, i32 109, i32 103, i32 77, i32 24, i32 35, i32 55, i32 64, i32 81, i32 104, i32 113, i32 92, i32 49, i32 64, i32 78, i32 87, i32 103, i32 121, i32 120, i32 101, i32 72, i32 92, i32 95, i32 98, i32 112, i32 100, i32 103, i32 99], align 16
@jpeg_set_linear_quality.std_chrominance_quant_tbl = internal constant [64 x i32] [i32 17, i32 18, i32 24, i32 47, i32 99, i32 99, i32 99, i32 99, i32 18, i32 21, i32 26, i32 66, i32 99, i32 99, i32 99, i32 99, i32 24, i32 26, i32 56, i32 99, i32 99, i32 99, i32 99, i32 99, i32 47, i32 66, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99], align 16
@std_huff_tables.bits_dc_luminance = internal constant [17 x i8] c"\00\00\01\05\01\01\01\01\01\01\00\00\00\00\00\00\00", align 16
@std_huff_tables.val_dc_luminance = internal constant [12 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B", align 1
@std_huff_tables.bits_ac_luminance = internal constant [17 x i8] c"\00\00\02\01\03\03\02\04\03\05\05\04\04\00\00\01}", align 16
@std_huff_tables.val_ac_luminance = internal constant [162 x i8] c"\01\02\03\00\04\11\05\12!1A\06\13Qa\07\22q\142\81\91\A1\08#B\B1\C1\15R\D1\F0$3br\82\09\0A\16\17\18\19\1A%&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\83\84\85\86\87\88\89\8A\92\93\94\95\96\97\98\99\9A\A2\A3\A4\A5\A6\A7\A8\A9\AA\B2\B3\B4\B5\B6\B7\B8\B9\BA\C2\C3\C4\C5\C6\C7\C8\C9\CA\D2\D3\D4\D5\D6\D7\D8\D9\DA\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA", align 16
@std_huff_tables.bits_dc_chrominance = internal constant [17 x i8] c"\00\00\03\01\01\01\01\01\01\01\01\01\00\00\00\00\00", align 16
@std_huff_tables.val_dc_chrominance = internal constant [12 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B", align 1
@std_huff_tables.bits_ac_chrominance = internal constant [17 x i8] c"\00\00\02\01\02\04\04\03\04\07\05\04\04\00\01\02w", align 16
@std_huff_tables.val_ac_chrominance = internal constant [162 x i8] c"\00\01\02\03\11\04\05!1\06\12AQ\07aq\13\222\81\08\14B\91\A1\B1\C1\09#3R\F0\15br\D1\0A\16$4\E1%\F1\17\18\19\1A&'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\82\83\84\85\86\87\88\89\8A\92\93\94\95\96\97\98\99\9A\A2\A3\A4\A5\A6\A7\A8\A9\AA\B2\B3\B4\B5\B6\B7\B8\B9\BA\C2\C3\C4\C5\C6\C7\C8\C9\CA\D2\D3\D4\D5\D6\D7\D8\D9\DA\E2\E3\E4\E5\E6\E7\E8\E9\EA\F2\F3\F4\F5\F6\F7\F8\F9\FA", align 16
@start_pass.aanscales = internal constant [64 x i16] [i16 16384, i16 22725, i16 21407, i16 19266, i16 16384, i16 12873, i16 8867, i16 4520, i16 22725, i16 31521, i16 29692, i16 26722, i16 22725, i16 17855, i16 12299, i16 6270, i16 21407, i16 29692, i16 27969, i16 25172, i16 21407, i16 16819, i16 11585, i16 5906, i16 19266, i16 26722, i16 25172, i16 22654, i16 19266, i16 15137, i16 10426, i16 5315, i16 16384, i16 22725, i16 21407, i16 19266, i16 16384, i16 12873, i16 8867, i16 4520, i16 12873, i16 17855, i16 16819, i16 15137, i16 12873, i16 10114, i16 6967, i16 3552, i16 8867, i16 12299, i16 11585, i16 10426, i16 8867, i16 6967, i16 4799, i16 2446, i16 4520, i16 6270, i16 5906, i16 5315, i16 4520, i16 3552, i16 2446, i16 1247], align 16
@start_pass.aanscalefactor = internal constant [8 x double] [double 1.000000e+00, double 0x3FF63150B14861EF, double 0x3FF4E7AE914D6FCA, double 0x3FF2D062EF6C11AA, double 1.000000e+00, double 0x3FE92469C0A7BF3B, double 0x3FE1517A7BC720BB, double 0x3FD1A855DE72AB5D], align 16
@extend_test = internal constant [16 x i32] [i32 0, i32 1, i32 2, i32 4, i32 8, i32 16, i32 32, i32 64, i32 128, i32 256, i32 512, i32 1024, i32 2048, i32 4096, i32 8192, i32 16384], align 16
@extend_offset = internal constant [16 x i32] [i32 0, i32 -1, i32 -3, i32 -7, i32 -15, i32 -31, i32 -63, i32 -127, i32 -255, i32 -511, i32 -1023, i32 -2047, i32 -4095, i32 -8191, i32 -16383, i32 -32767], align 16
@extend_test.66 = internal constant [16 x i32] [i32 0, i32 1, i32 2, i32 4, i32 8, i32 16, i32 32, i32 64, i32 128, i32 256, i32 512, i32 1024, i32 2048, i32 4096, i32 8192, i32 16384], align 16
@extend_offset.67 = internal constant [16 x i32] [i32 0, i32 -1, i32 -3, i32 -7, i32 -15, i32 -31, i32 -63, i32 -127, i32 -255, i32 -511, i32 -1023, i32 -2047, i32 -4095, i32 -8191, i32 -16383, i32 -32767], align 16
@jpeg_std_message_table = dso_local constant [121 x i8*] [i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1.114, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2.115, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.116, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.117, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.118, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.119, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.120, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.121, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.122, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.10.123, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11.124, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12.125, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13.126, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14.127, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15.128, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16.129, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17.130, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18.131, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.19.132, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20.133, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.21.134, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22.135, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.23.136, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.24.137, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.25.138, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26.139, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27.140, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28.141, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29.142, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30.143, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.31.144, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32.145, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.33.146, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.34.147, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.35.148, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36.149, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.37.150, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.38.151, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39.152, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.40.153, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.41.154, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.42.155, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.43.156, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.44.157, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.45.158, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.46.159, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.47.160, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48.161, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.162, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.50.163, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.51.164, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.52.165, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53.166, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.54.167, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.55.168, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.56.169, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.57.170, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.58.171, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.59.172, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.60.173, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.61.174, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.62.175, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.63.176, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64.177, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.65.178, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.66.179, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.67.180, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.68.181, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.69.182, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.70.183, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.71.184, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.72.185, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73.186, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.74.187, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.75.188, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.76.189, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.77.190, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.78.191, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.79.192, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.80.193, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.81.194, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.82.195, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.83.196, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.84.197, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.85.198, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.86.199, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.87.200, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.88.201, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.89.202, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.90.203, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.91.204, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.92.205, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.93.206, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94.207, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.95.208, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.96.209, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97.210, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.98.211, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99.212, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.100.213, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.101.214, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.102.215, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.103.216, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.104.217, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.105.218, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.106.219, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.107.220, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.108.221, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.109.222, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.110.223, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.111.224, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.112.225, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.113.226, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.119, i32 0, i32 0), i8* null], align 16
@.str.113 = private unnamed_addr constant [22 x i8] c"Bogus message code %d\00", align 1
@.str.1.114 = private unnamed_addr constant [57 x i8] c"Sorry, there are legal restrictions on arithmetic coding\00", align 1
@.str.2.115 = private unnamed_addr constant [32 x i8] c"ALIGN_TYPE is wrong, please fix\00", align 1
@.str.3.116 = private unnamed_addr constant [37 x i8] c"MAX_ALLOC_CHUNK is wrong, please fix\00", align 1
@.str.4.117 = private unnamed_addr constant [26 x i8] c"Bogus buffer control mode\00", align 1
@.str.5.118 = private unnamed_addr constant [31 x i8] c"Invalid component ID %d in SOS\00", align 1
@.str.6.119 = private unnamed_addr constant [40 x i8] c"IDCT output block size %d not supported\00", align 1
@.str.7.120 = private unnamed_addr constant [23 x i8] c"Bogus input colorspace\00", align 1
@.str.8.121 = private unnamed_addr constant [22 x i8] c"Bogus JPEG colorspace\00", align 1
@.str.9.122 = private unnamed_addr constant [20 x i8] c"Bogus marker length\00", align 1
@.str.10.123 = private unnamed_addr constant [61 x i8] c"Wrong JPEG library version: library is %d, caller expects %d\00", align 1
@.str.11.124 = private unnamed_addr constant [48 x i8] c"Sampling factors too large for interleaved scan\00", align 1
@.str.12.125 = private unnamed_addr constant [28 x i8] c"Invalid memory pool code %d\00", align 1
@.str.13.126 = private unnamed_addr constant [35 x i8] c"Unsupported JPEG data precision %d\00", align 1
@.str.14.127 = private unnamed_addr constant [55 x i8] c"Invalid progressive parameters Ss=%d Se=%d Ah=%d Al=%d\00", align 1
@.str.15.128 = private unnamed_addr constant [55 x i8] c"Invalid progressive parameters at scan script entry %d\00", align 1
@.str.16.129 = private unnamed_addr constant [23 x i8] c"Bogus sampling factors\00", align 1
@.str.17.130 = private unnamed_addr constant [32 x i8] c"Invalid scan script at entry %d\00", align 1
@.str.18.131 = private unnamed_addr constant [42 x i8] c"Improper call to JPEG library in state %d\00", align 1
@.str.19.132 = private unnamed_addr constant [77 x i8] c"JPEG parameter struct mismatch: library thinks size is %u, caller expects %u\00", align 1
@.str.20.133 = private unnamed_addr constant [27 x i8] c"Bogus virtual array access\00", align 1
@.str.21.134 = private unnamed_addr constant [43 x i8] c"Buffer passed to JPEG library is too small\00", align 1
@.str.22.135 = private unnamed_addr constant [28 x i8] c"Suspension not allowed here\00", align 1
@.str.23.136 = private unnamed_addr constant [37 x i8] c"CCIR601 sampling not implemented yet\00", align 1
@.str.24.137 = private unnamed_addr constant [38 x i8] c"Too many color components: %d, max %d\00", align 1
@.str.25.138 = private unnamed_addr constant [37 x i8] c"Unsupported color conversion request\00", align 1
@.str.26.139 = private unnamed_addr constant [19 x i8] c"Bogus DAC index %d\00", align 1
@.str.27.140 = private unnamed_addr constant [21 x i8] c"Bogus DAC value 0x%x\00", align 1
@.str.28.141 = private unnamed_addr constant [17 x i8] c"Bogus DHT counts\00", align 1
@.str.29.142 = private unnamed_addr constant [19 x i8] c"Bogus DHT index %d\00", align 1
@.str.30.143 = private unnamed_addr constant [19 x i8] c"Bogus DQT index %d\00", align 1
@.str.31.144 = private unnamed_addr constant [37 x i8] c"Empty JPEG image (DNL not supported)\00", align 1
@.str.32.145 = private unnamed_addr constant [21 x i8] c"Read from EMS failed\00", align 1
@.str.33.146 = private unnamed_addr constant [20 x i8] c"Write to EMS failed\00", align 1
@.str.34.147 = private unnamed_addr constant [33 x i8] c"Didn't expect more than one scan\00", align 1
@.str.35.148 = private unnamed_addr constant [22 x i8] c"Input file read error\00", align 1
@.str.36.149 = private unnamed_addr constant [47 x i8] c"Output file write error --- out of disk space?\00", align 1
@.str.37.150 = private unnamed_addr constant [40 x i8] c"Fractional sampling not implemented yet\00", align 1
@.str.38.151 = private unnamed_addr constant [33 x i8] c"Huffman code size table overflow\00", align 1
@.str.39.152 = private unnamed_addr constant [33 x i8] c"Missing Huffman code table entry\00", align 1
@.str.40.153 = private unnamed_addr constant [47 x i8] c"Maximum supported image dimension is %u pixels\00", align 1
@.str.41.154 = private unnamed_addr constant [17 x i8] c"Empty input file\00", align 1
@.str.42.155 = private unnamed_addr constant [28 x i8] c"Premature end of input file\00", align 1
@.str.43.156 = private unnamed_addr constant [62 x i8] c"Cannot transcode due to multiple use of quantization table %d\00", align 1
@.str.44.157 = private unnamed_addr constant [39 x i8] c"Scan script does not transmit all data\00", align 1
@.str.45.158 = private unnamed_addr constant [39 x i8] c"Invalid color quantization mode change\00", align 1
@.str.46.159 = private unnamed_addr constant [20 x i8] c"Not implemented yet\00", align 1
@.str.47.160 = private unnamed_addr constant [46 x i8] c"Requested feature was omitted at compile time\00", align 1
@.str.48.161 = private unnamed_addr constant [28 x i8] c"Backing store not supported\00", align 1
@.str.49.162 = private unnamed_addr constant [37 x i8] c"Huffman table 0x%02x was not defined\00", align 1
@.str.50.163 = private unnamed_addr constant [34 x i8] c"JPEG datastream contains no image\00", align 1
@.str.51.164 = private unnamed_addr constant [42 x i8] c"Quantization table 0x%02x was not defined\00", align 1
@.str.52.165 = private unnamed_addr constant [43 x i8] c"Not a JPEG file: starts with 0x%02x 0x%02x\00", align 1
@.str.53.166 = private unnamed_addr constant [30 x i8] c"Insufficient memory (case %d)\00", align 1
@.str.54.167 = private unnamed_addr constant [46 x i8] c"Cannot quantize more than %d color components\00", align 1
@.str.55.168 = private unnamed_addr constant [40 x i8] c"Cannot quantize to fewer than %d colors\00", align 1
@.str.56.169 = private unnamed_addr constant [39 x i8] c"Cannot quantize to more than %d colors\00", align 1
@.str.57.170 = private unnamed_addr constant [45 x i8] c"Invalid JPEG file structure: two SOF markers\00", align 1
@.str.58.171 = private unnamed_addr constant [48 x i8] c"Invalid JPEG file structure: missing SOS marker\00", align 1
@.str.59.172 = private unnamed_addr constant [42 x i8] c"Unsupported JPEG process: SOF type 0x%02x\00", align 1
@.str.60.173 = private unnamed_addr constant [45 x i8] c"Invalid JPEG file structure: two SOI markers\00", align 1
@.str.61.174 = private unnamed_addr constant [44 x i8] c"Invalid JPEG file structure: SOS before SOF\00", align 1
@.str.62.175 = private unnamed_addr constant [35 x i8] c"Failed to create temporary file %s\00", align 1
@.str.63.176 = private unnamed_addr constant [30 x i8] c"Read failed on temporary file\00", align 1
@.str.64.177 = private unnamed_addr constant [30 x i8] c"Seek failed on temporary file\00", align 1
@.str.65.178 = private unnamed_addr constant [54 x i8] c"Write failed on temporary file --- out of disk space?\00", align 1
@.str.66.179 = private unnamed_addr constant [42 x i8] c"Application transferred too few scanlines\00", align 1
@.str.67.180 = private unnamed_addr constant [31 x i8] c"Unsupported marker type 0x%02x\00", align 1
@.str.68.181 = private unnamed_addr constant [35 x i8] c"Virtual array controller messed up\00", align 1
@.str.69.182 = private unnamed_addr constant [39 x i8] c"Image too wide for this implementation\00", align 1
@.str.70.183 = private unnamed_addr constant [21 x i8] c"Read from XMS failed\00", align 1
@.str.71.184 = private unnamed_addr constant [20 x i8] c"Write to XMS failed\00", align 1
@.str.72.185 = private unnamed_addr constant [35 x i8] c"Copyright (C) 1996, Thomas G. Lane\00", align 1
@.str.73.186 = private unnamed_addr constant [13 x i8] c"6a  7-Feb-96\00", align 1
@.str.74.187 = private unnamed_addr constant [62 x i8] c"Caution: quantization tables are too coarse for baseline JPEG\00", align 1
@.str.75.188 = private unnamed_addr constant [66 x i8] c"Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d\00", align 1
@.str.76.189 = private unnamed_addr constant [42 x i8] c"Unknown APP0 marker (not JFIF), length %u\00", align 1
@.str.77.190 = private unnamed_addr constant [44 x i8] c"Unknown APP14 marker (not Adobe), length %u\00", align 1
@.str.78.191 = private unnamed_addr constant [39 x i8] c"Define Arithmetic Table 0x%02x: 0x%02x\00", align 1
@.str.79.192 = private unnamed_addr constant [28 x i8] c"Define Huffman Table 0x%02x\00", align 1
@.str.80.193 = private unnamed_addr constant [43 x i8] c"Define Quantization Table %d  precision %d\00", align 1
@.str.81.194 = private unnamed_addr constant [27 x i8] c"Define Restart Interval %u\00", align 1
@.str.82.195 = private unnamed_addr constant [20 x i8] c"Freed EMS handle %u\00", align 1
@.str.83.196 = private unnamed_addr constant [23 x i8] c"Obtained EMS handle %u\00", align 1
@.str.84.197 = private unnamed_addr constant [13 x i8] c"End Of Image\00", align 1
@.str.85.198 = private unnamed_addr constant [40 x i8] c"        %3d %3d %3d %3d %3d %3d %3d %3d\00", align 1
@.str.86.199 = private unnamed_addr constant [36 x i8] c"JFIF APP0 marker, density %dx%d  %d\00", align 1
@.str.87.200 = private unnamed_addr constant [60 x i8] c"Warning: thumbnail image size does not match data length %u\00", align 1
@.str.88.201 = private unnamed_addr constant [43 x i8] c"Unknown JFIF minor revision number %d.%02d\00", align 1
@.str.89.202 = private unnamed_addr constant [33 x i8] c"    with %d x %d thumbnail image\00", align 1
@.str.90.203 = private unnamed_addr constant [34 x i8] c"Skipping marker 0x%02x, length %u\00", align 1
@.str.91.204 = private unnamed_addr constant [25 x i8] c"Unexpected marker 0x%02x\00", align 1
@.str.92.205 = private unnamed_addr constant [40 x i8] c"        %4u %4u %4u %4u %4u %4u %4u %4u\00", align 1
@.str.93.206 = private unnamed_addr constant [35 x i8] c"Quantizing to %d = %d*%d*%d colors\00", align 1
@.str.94.207 = private unnamed_addr constant [24 x i8] c"Quantizing to %d colors\00", align 1
@.str.95.208 = private unnamed_addr constant [36 x i8] c"Selected %d colors for quantization\00", align 1
@.str.96.209 = private unnamed_addr constant [37 x i8] c"At marker 0x%02x, recovery action %d\00", align 1
@.str.97.210 = private unnamed_addr constant [6 x i8] c"RST%d\00", align 1
@.str.98.211 = private unnamed_addr constant [57 x i8] c"Smoothing not supported with nonstandard sampling ratios\00", align 1
@.str.99.212 = private unnamed_addr constant [58 x i8] c"Start Of Frame 0x%02x: width=%u, height=%u, components=%d\00", align 1
@.str.100.213 = private unnamed_addr constant [31 x i8] c"    Component %d: %dhx%dv q=%d\00", align 1
@.str.101.214 = private unnamed_addr constant [15 x i8] c"Start of Image\00", align 1
@.str.102.215 = private unnamed_addr constant [29 x i8] c"Start Of Scan: %d components\00", align 1
@.str.103.216 = private unnamed_addr constant [30 x i8] c"    Component %d: dc=%d ac=%d\00", align 1
@.str.104.217 = private unnamed_addr constant [29 x i8] c"  Ss=%d, Se=%d, Ah=%d, Al=%d\00", align 1
@.str.105.218 = private unnamed_addr constant [25 x i8] c"Closed temporary file %s\00", align 1
@.str.106.219 = private unnamed_addr constant [25 x i8] c"Opened temporary file %s\00", align 1
@.str.107.220 = private unnamed_addr constant [52 x i8] c"Unrecognized component IDs %d %d %d, assuming YCbCr\00", align 1
@.str.108.221 = private unnamed_addr constant [20 x i8] c"Freed XMS handle %u\00", align 1
@.str.109.222 = private unnamed_addr constant [23 x i8] c"Obtained XMS handle %u\00", align 1
@.str.110.223 = private unnamed_addr constant [38 x i8] c"Unknown Adobe color transform code %d\00", align 1
@.str.111.224 = private unnamed_addr constant [66 x i8] c"Inconsistent progression sequence for component %d coefficient %d\00", align 1
@.str.112.225 = private unnamed_addr constant [60 x i8] c"Corrupt JPEG data: %u extraneous bytes before marker 0x%02x\00", align 1
@.str.113.226 = private unnamed_addr constant [49 x i8] c"Corrupt JPEG data: premature end of data segment\00", align 1
@.str.114 = private unnamed_addr constant [36 x i8] c"Corrupt JPEG data: bad Huffman code\00", align 1
@.str.115 = private unnamed_addr constant [46 x i8] c"Warning: unknown JFIF revision number %d.%02d\00", align 1
@.str.116 = private unnamed_addr constant [27 x i8] c"Premature end of JPEG file\00", align 1
@.str.117 = private unnamed_addr constant [56 x i8] c"Corrupt JPEG data: found marker 0x%02x instead of RST%d\00", align 1
@.str.118 = private unnamed_addr constant [43 x i8] c"Invalid SOS parameters for sequential JPEG\00", align 1
@.str.119 = private unnamed_addr constant [43 x i8] c"Application transferred too many scanlines\00", align 1
@.str.120 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.249 = private unnamed_addr constant [8 x i8] c"JPEGMEM\00", align 1
@.str.1.250 = private unnamed_addr constant [6 x i8] c"%ld%c\00", align 1
@first_pool_slop = internal constant [2 x i64] [i64 1600, i64 16000], align 16
@extra_pool_slop = internal constant [2 x i64] [i64 0, i64 5000], align 16
@select_ncolors.RGB_order = internal constant [3 x i32] [i32 1, i32 0, i32 2], align 4
@base_dither_matrix = internal constant [16 x [16 x i8]] [[16 x i8] c"\00\C00\F0\0C\CC<\FC\03\C33\F3\0F\CF?\FF", [16 x i8] c"\80@\B0p\8CL\BC|\83C\B3s\8FO\BF\7F", [16 x i8] c" \E0\10\D0,\EC\1C\DC#\E3\13\D3/\EF\1F\DF", [16 x i8] c"\A0`\90P\ACl\9C\\\A3c\93S\AFo\9F_", [16 x i8] c"\08\C88\F8\04\C44\F4\0B\CB;\FB\07\C77\F7", [16 x i8] c"\88H\B8x\84D\B4t\8BK\BB{\87G\B7w", [16 x i8] c"(\E8\18\D8$\E4\14\D4+\EB\1B\DB'\E7\17\D7", [16 x i8] c"\A8h\98X\A4d\94T\ABk\9B[\A7g\97W", [16 x i8] c"\02\C22\F2\0E\CE>\FE\01\C11\F1\0D\CD=\FD", [16 x i8] c"\82B\B2r\8EN\BE~\81A\B1q\8DM\BD}", [16 x i8] c"\22\E2\12\D2.\EE\1E\DE!\E1\11\D1-\ED\1D\DD", [16 x i8] c"\A2b\92R\AEn\9E^\A1a\91Q\ADm\9D]", [16 x i8] c"\0A\CA:\FA\06\C66\F6\09\C99\F9\05\C55\F5", [16 x i8] c"\8AJ\BAz\86F\B6v\89I\B9y\85E\B5u", [16 x i8] c"*\EA\1A\DA&\E6\16\D6)\E9\19\D9%\E5\15\D5", [16 x i8] c"\AAj\9AZ\A6f\96V\A9i\99Y\A5e\95U"], align 16
@jpeg_natural_order = dso_local constant [80 x i32] [i32 0, i32 1, i32 8, i32 16, i32 9, i32 2, i32 3, i32 10, i32 17, i32 24, i32 32, i32 25, i32 18, i32 11, i32 4, i32 5, i32 12, i32 19, i32 26, i32 33, i32 40, i32 48, i32 41, i32 34, i32 27, i32 20, i32 13, i32 6, i32 7, i32 14, i32 21, i32 28, i32 35, i32 42, i32 49, i32 56, i32 57, i32 50, i32 43, i32 36, i32 29, i32 22, i32 15, i32 23, i32 30, i32 37, i32 44, i32 51, i32 58, i32 59, i32 52, i32 45, i32 38, i32 31, i32 39, i32 46, i32 53, i32 60, i32 61, i32 54, i32 47, i32 55, i32 62, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63], align 16
@.str.293 = private unnamed_addr constant [15 x i8] c"P5\0A%ld %ld\0A%d\0A\00", align 1
@.str.1.294 = private unnamed_addr constant [15 x i8] c"P6\0A%ld %ld\0A%d\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @keymatch(i8* %0, i8* %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 0, i32* %10, align 4
  br label %11

11:                                               ; preds = %42, %3
  %12 = load i8*, i8** %5, align 8
  %13 = getelementptr inbounds i8, i8* %12, i32 1
  store i8* %13, i8** %5, align 8
  %14 = load i8, i8* %12, align 1
  %15 = sext i8 %14 to i32
  store i32 %15, i32* %8, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %45

17:                                               ; preds = %11
  %18 = load i8*, i8** %6, align 8
  %19 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %19, i8** %6, align 8
  %20 = load i8, i8* %18, align 1
  %21 = sext i8 %20 to i32
  store i32 %21, i32* %9, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  store i32 0, i32* %4, align 4
  br label %51

24:                                               ; preds = %17
  %25 = call i16** @__ctype_b_loc() #7
  %26 = load i16*, i16** %25, align 8
  %27 = load i32, i32* %8, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i16, i16* %26, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = and i32 %31, 256
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %24
  %35 = load i32, i32* %8, align 4
  %36 = call i32 @tolower(i32 %35) #8
  store i32 %36, i32* %8, align 4
  br label %37

37:                                               ; preds = %34, %24
  %38 = load i32, i32* %8, align 4
  %39 = load i32, i32* %9, align 4
  %40 = icmp ne i32 %38, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  store i32 0, i32* %4, align 4
  br label %51

42:                                               ; preds = %37
  %43 = load i32, i32* %10, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %10, align 4
  br label %11

45:                                               ; preds = %11
  %46 = load i32, i32* %10, align 4
  %47 = load i32, i32* %7, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  store i32 0, i32* %4, align 4
  br label %51

50:                                               ; preds = %45
  store i32 1, i32* %4, align 4
  br label %51

51:                                               ; preds = %50, %49, %41, %23
  %52 = load i32, i32* %4, align 4
  ret i32 %52
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #1

; Function Attrs: nounwind readonly
declare dso_local i32 @tolower(i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._IO_FILE* @read_stdin() #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  store %struct._IO_FILE* %2, %struct._IO_FILE** %1, align 8
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  ret %struct._IO_FILE* %3
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._IO_FILE* @write_stdout() #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %2, %struct._IO_FILE** %1, align 8
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  ret %struct._IO_FILE* %3
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.jpeg_decompress_struct, align 8
  %7 = alloca %struct.jpeg_error_mgr, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.djpeg_dest_struct*, align 8
  %10 = alloca %struct._IO_FILE*, align 8
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store %struct.djpeg_dest_struct* null, %struct.djpeg_dest_struct** %9, align 8
  %13 = load i8**, i8*** %5, align 8
  %14 = getelementptr inbounds i8*, i8** %13, i64 0
  %15 = load i8*, i8** %14, align 8
  store i8* %15, i8** @progname, align 8
  %16 = load i8*, i8** @progname, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %2
  %19 = load i8*, i8** @progname, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 0
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %18, %2
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8** @progname, align 8
  br label %25

25:                                               ; preds = %24, %18
  %26 = call %struct.jpeg_error_mgr* @jpeg_std_error(%struct.jpeg_error_mgr* %7)
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %6, i32 0, i32 0
  store %struct.jpeg_error_mgr* %26, %struct.jpeg_error_mgr** %27, align 8
  call void @jpeg_CreateDecompress(%struct.jpeg_decompress_struct* %6, i32 61, i64 616)
  %28 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %7, i32 0, i32 11
  store i8** getelementptr inbounds ([44 x i8*], [44 x i8*]* @cdjpeg_message_table, i64 0, i64 0), i8*** %28, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %7, i32 0, i32 12
  store i32 1000, i32* %29, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %7, i32 0, i32 13
  store i32 1043, i32* %30, align 4
  call void @jpeg_set_marker_processor(%struct.jpeg_decompress_struct* %6, i32 254, i32 (%struct.jpeg_decompress_struct*)* @COM_handler)
  %31 = load i32, i32* %4, align 4
  %32 = load i8**, i8*** %5, align 8
  %33 = call i32 @parse_switches(%struct.jpeg_decompress_struct* %6, i32 %31, i8** %32, i32 0, i32 0)
  store i32 %33, i32* %8, align 4
  %34 = load i32, i32* %8, align 4
  %35 = load i32, i32* %4, align 4
  %36 = sub nsw i32 %35, 1
  %37 = icmp slt i32 %34, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %25
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %40 = load i8*, i8** @progname, align 8
  %41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i8* %40)
  call void @usage()
  br label %42

42:                                               ; preds = %38, %25
  %43 = load i32, i32* %8, align 4
  %44 = load i32, i32* %4, align 4
  %45 = icmp slt i32 %43, %44
  br i1 %45, label %46, label %64

46:                                               ; preds = %42
  %47 = load i8**, i8*** %5, align 8
  %48 = load i32, i32* %8, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8*, i8** %47, i64 %49
  %51 = load i8*, i8** %50, align 8
  %52 = call %struct._IO_FILE* @fopen(i8* %51, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  store %struct._IO_FILE* %52, %struct._IO_FILE** %10, align 8
  %53 = icmp eq %struct._IO_FILE* %52, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %46
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %56 = load i8*, i8** @progname, align 8
  %57 = load i8**, i8*** %5, align 8
  %58 = load i32, i32* %8, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8*, i8** %57, i64 %59
  %61 = load i8*, i8** %60, align 8
  %62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %55, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i8* %56, i8* %61)
  call void @exit(i32 1) #9
  unreachable

63:                                               ; preds = %46
  br label %66

64:                                               ; preds = %42
  %65 = call %struct._IO_FILE* @read_stdin()
  store %struct._IO_FILE* %65, %struct._IO_FILE** %10, align 8
  br label %66

66:                                               ; preds = %64, %63
  %67 = load i8*, i8** @outfilename, align 8
  %68 = icmp ne i8* %67, null
  br i1 %68, label %69, label %79

69:                                               ; preds = %66
  %70 = load i8*, i8** @outfilename, align 8
  %71 = call %struct._IO_FILE* @fopen(i8* %70, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0))
  store %struct._IO_FILE* %71, %struct._IO_FILE** %11, align 8
  %72 = icmp eq %struct._IO_FILE* %71, null
  br i1 %72, label %73, label %78

73:                                               ; preds = %69
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %75 = load i8*, i8** @progname, align 8
  %76 = load i8*, i8** @outfilename, align 8
  %77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i8* %75, i8* %76)
  call void @exit(i32 1) #9
  unreachable

78:                                               ; preds = %69
  br label %81

79:                                               ; preds = %66
  %80 = call %struct._IO_FILE* @write_stdout()
  store %struct._IO_FILE* %80, %struct._IO_FILE** %11, align 8
  br label %81

81:                                               ; preds = %79, %78
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  call void @jpeg_stdio_src(%struct.jpeg_decompress_struct* %6, %struct._IO_FILE* %82)
  %83 = call i32 @jpeg_read_header(%struct.jpeg_decompress_struct* %6, i32 1)
  %84 = load i32, i32* %4, align 4
  %85 = load i8**, i8*** %5, align 8
  %86 = call i32 @parse_switches(%struct.jpeg_decompress_struct* %6, i32 %84, i8** %85, i32 0, i32 1)
  store i32 %86, i32* %8, align 4
  %87 = load i32, i32* @requested_fmt, align 4
  switch i32 %87, label %98 [
    i32 0, label %88
    i32 2, label %90
    i32 1, label %92
    i32 3, label %94
    i32 5, label %96
  ]

88:                                               ; preds = %81
  %89 = call %struct.djpeg_dest_struct* @jinit_write_bmp(%struct.jpeg_decompress_struct* %6, i32 0)
  store %struct.djpeg_dest_struct* %89, %struct.djpeg_dest_struct** %9, align 8
  br label %107

90:                                               ; preds = %81
  %91 = call %struct.djpeg_dest_struct* @jinit_write_bmp(%struct.jpeg_decompress_struct* %6, i32 1)
  store %struct.djpeg_dest_struct* %91, %struct.djpeg_dest_struct** %9, align 8
  br label %107

92:                                               ; preds = %81
  %93 = call %struct.djpeg_dest_struct* @jinit_write_gif(%struct.jpeg_decompress_struct* %6)
  store %struct.djpeg_dest_struct* %93, %struct.djpeg_dest_struct** %9, align 8
  br label %107

94:                                               ; preds = %81
  %95 = call %struct.djpeg_dest_struct* @jinit_write_ppm(%struct.jpeg_decompress_struct* %6)
  store %struct.djpeg_dest_struct* %95, %struct.djpeg_dest_struct** %9, align 8
  br label %107

96:                                               ; preds = %81
  %97 = call %struct.djpeg_dest_struct* @jinit_write_targa(%struct.jpeg_decompress_struct* %6)
  store %struct.djpeg_dest_struct* %97, %struct.djpeg_dest_struct** %9, align 8
  br label %107

98:                                               ; preds = %81
  %99 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %6, i32 0, i32 0
  %100 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %99, align 8
  %101 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %100, i32 0, i32 5
  store i32 1042, i32* %101, align 8
  %102 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %6, i32 0, i32 0
  %103 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %102, align 8
  %104 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %103, i32 0, i32 0
  %105 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %104, align 8
  %106 = bitcast %struct.jpeg_decompress_struct* %6 to %struct.jpeg_common_struct*
  call void %105(%struct.jpeg_common_struct* %106)
  br label %107

107:                                              ; preds = %98, %96, %94, %92, %90, %88
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %109 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %9, align 8
  %110 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %109, i32 0, i32 3
  store %struct._IO_FILE* %108, %struct._IO_FILE** %110, align 8
  %111 = call i32 bitcast (i32 (%struct.jpeg_decompress_struct.369*)* @jpeg_start_decompress to i32 (%struct.jpeg_decompress_struct*)*)(%struct.jpeg_decompress_struct* %6)
  %112 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %9, align 8
  %113 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %112, i32 0, i32 0
  %114 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)** %113, align 8
  %115 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %9, align 8
  call void %114(%struct.jpeg_decompress_struct* %6, %struct.djpeg_dest_struct* %115)
  br label %116

116:                                              ; preds = %122, %107
  %117 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %6, i32 0, i32 33
  %118 = load i32, i32* %117, align 8
  %119 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %6, i32 0, i32 27
  %120 = load i32, i32* %119, align 4
  %121 = icmp ult i32 %118, %120
  br i1 %121, label %122, label %135

122:                                              ; preds = %116
  %123 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %9, align 8
  %124 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %123, i32 0, i32 4
  %125 = load i8**, i8*** %124, align 8
  %126 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %9, align 8
  %127 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %126, i32 0, i32 5
  %128 = load i32, i32* %127, align 8
  %129 = call i32 bitcast (i32 (%struct.jpeg_decompress_struct.369*, i8**, i32)* @jpeg_read_scanlines to i32 (%struct.jpeg_decompress_struct*, i8**, i32)*)(%struct.jpeg_decompress_struct* %6, i8** %125, i32 %128)
  store i32 %129, i32* %12, align 4
  %130 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %9, align 8
  %131 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %130, i32 0, i32 1
  %132 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %131, align 8
  %133 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %9, align 8
  %134 = load i32, i32* %12, align 4
  call void %132(%struct.jpeg_decompress_struct* %6, %struct.djpeg_dest_struct* %133, i32 %134)
  br label %116

135:                                              ; preds = %116
  %136 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %9, align 8
  %137 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %136, i32 0, i32 2
  %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)** %137, align 8
  %139 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %9, align 8
  call void %138(%struct.jpeg_decompress_struct* %6, %struct.djpeg_dest_struct* %139)
  %140 = call i32 @jpeg_finish_decompress(%struct.jpeg_decompress_struct* %6)
  call void @jpeg_destroy_decompress(%struct.jpeg_decompress_struct* %6)
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %142 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %143 = icmp ne %struct._IO_FILE* %141, %142
  br i1 %143, label %144, label %147

144:                                              ; preds = %135
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %146 = call i32 @fclose(%struct._IO_FILE* %145)
  br label %147

147:                                              ; preds = %144, %135
  %148 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %149 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %150 = icmp ne %struct._IO_FILE* %148, %149
  br i1 %150, label %151, label %154

151:                                              ; preds = %147
  %152 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %153 = call i32 @fclose(%struct._IO_FILE* %152)
  br label %154

154:                                              ; preds = %151, %147
  %155 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %7, i32 0, i32 8
  %156 = load i64, i64* %155, align 8
  %157 = icmp ne i64 %156, 0
  %158 = zext i1 %157 to i64
  %159 = select i1 %157, i32 2, i32 0
  call void @exit(i32 %159) #9
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @COM_handler(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  %7 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %7, i32 0, i32 0
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i32 0, i32 7
  %11 = load i32, i32* %10, align 4
  %12 = icmp sge i32 %11, 1
  %13 = zext i1 %12 to i32
  store i32 %13, i32* %3, align 4
  store i32 0, i32* %6, align 4
  %14 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %15 = call i32 @jpeg_getc(%struct.jpeg_decompress_struct* %14)
  %16 = shl i32 %15, 8
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %4, align 8
  %18 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %19 = call i32 @jpeg_getc(%struct.jpeg_decompress_struct* %18)
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %4, align 8
  %22 = add nsw i64 %21, %20
  store i64 %22, i64* %4, align 8
  %23 = load i64, i64* %4, align 8
  %24 = sub nsw i64 %23, 2
  store i64 %24, i64* %4, align 8
  %25 = load i32, i32* %3, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %1
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %29 = load i64, i64* %4, align 8
  %30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i64 0, i64 0), i64 %29)
  br label %31

31:                                               ; preds = %27, %1
  br label %32

32:                                               ; preds = %86, %31
  %33 = load i64, i64* %4, align 8
  %34 = add nsw i64 %33, -1
  store i64 %34, i64* %4, align 8
  %35 = icmp sge i64 %34, 0
  br i1 %35, label %36, label %87

36:                                               ; preds = %32
  %37 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %38 = call i32 @jpeg_getc(%struct.jpeg_decompress_struct* %37)
  store i32 %38, i32* %5, align 4
  %39 = load i32, i32* %3, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %86

41:                                               ; preds = %36
  %42 = load i32, i32* %5, align 4
  %43 = icmp eq i32 %42, 13
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i64 0, i64 0))
  br label %84

47:                                               ; preds = %41
  %48 = load i32, i32* %5, align 4
  %49 = icmp eq i32 %48, 10
  br i1 %49, label %50, label %57

50:                                               ; preds = %47
  %51 = load i32, i32* %6, align 4
  %52 = icmp ne i32 %51, 13
  br i1 %52, label %53, label %56

53:                                               ; preds = %50
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %54, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i64 0, i64 0))
  br label %56

56:                                               ; preds = %53, %50
  br label %83

57:                                               ; preds = %47
  %58 = load i32, i32* %5, align 4
  %59 = icmp eq i32 %58, 92
  br i1 %59, label %60, label %63

60:                                               ; preds = %57
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i64 0, i64 0))
  br label %82

63:                                               ; preds = %57
  %64 = call i16** @__ctype_b_loc() #7
  %65 = load i16*, i16** %64, align 8
  %66 = load i32, i32* %5, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i16, i16* %65, i64 %67
  %69 = load i16, i16* %68, align 2
  %70 = zext i16 %69 to i32
  %71 = and i32 %70, 16384
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %63
  %74 = load i32, i32* %5, align 4
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %76 = call i32 @putc(i32 %74, %struct._IO_FILE* %75)
  br label %81

77:                                               ; preds = %63
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %79 = load i32, i32* %5, align 4
  %80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %78, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i64 0, i64 0), i32 %79)
  br label %81

81:                                               ; preds = %77, %73
  br label %82

82:                                               ; preds = %81, %60
  br label %83

83:                                               ; preds = %82, %56
  br label %84

84:                                               ; preds = %83, %44
  %85 = load i32, i32* %5, align 4
  store i32 %85, i32* %6, align 4
  br label %86

86:                                               ; preds = %84, %36
  br label %32

87:                                               ; preds = %32
  %88 = load i32, i32* %3, align 4
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %87
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %92 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i64 0, i64 0))
  br label %93

93:                                               ; preds = %90, %87
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @parse_switches(%struct.jpeg_decompress_struct* %0, i32 %1, i8** %2, i32 %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_decompress_struct*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct._IO_FILE*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8, align 1
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %6, align 8
  store i32 %1, i32* %7, align 4
  store i8** %2, i8*** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  store i32 3, i32* @requested_fmt, align 4
  store i8* null, i8** @outfilename, align 8
  %17 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %17, i32 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i32 0, i32 7
  store i32 0, i32* %20, align 4
  store i32 1, i32* %11, align 4
  br label %21

21:                                               ; preds = %409, %5
  %22 = load i32, i32* %11, align 4
  %23 = load i32, i32* %7, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %25, label %412

25:                                               ; preds = %21
  %26 = load i8**, i8*** %8, align 8
  %27 = load i32, i32* %11, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8*, i8** %26, i64 %28
  %30 = load i8*, i8** %29, align 8
  store i8* %30, i8** %12, align 8
  %31 = load i8*, i8** %12, align 8
  %32 = load i8, i8* %31, align 1
  %33 = sext i8 %32 to i32
  %34 = icmp ne i32 %33, 45
  br i1 %34, label %35, label %41

35:                                               ; preds = %25
  %36 = load i32, i32* %11, align 4
  %37 = load i32, i32* %9, align 4
  %38 = icmp sle i32 %36, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  store i8* null, i8** @outfilename, align 8
  br label %409

40:                                               ; preds = %35
  br label %412

41:                                               ; preds = %25
  %42 = load i8*, i8** %12, align 8
  %43 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %43, i8** %12, align 8
  %44 = load i8*, i8** %12, align 8
  %45 = call i32 @keymatch(i8* %44, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i64 0, i64 0), i32 1)
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %41
  store i32 0, i32* @requested_fmt, align 4
  br label %408

48:                                               ; preds = %41
  %49 = load i8*, i8** %12, align 8
  %50 = call i32 @keymatch(i8* %49, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i64 0, i64 0), i32 1)
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %64, label %52

52:                                               ; preds = %48
  %53 = load i8*, i8** %12, align 8
  %54 = call i32 @keymatch(i8* %53, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i64 0, i64 0), i32 1)
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %52
  %57 = load i8*, i8** %12, align 8
  %58 = call i32 @keymatch(i8* %57, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i64 0, i64 0), i32 1)
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %56
  %61 = load i8*, i8** %12, align 8
  %62 = call i32 @keymatch(i8* %61, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0), i32 1)
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %85

64:                                               ; preds = %60, %56, %52, %48
  %65 = load i32, i32* %11, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %11, align 4
  %67 = load i32, i32* %7, align 4
  %68 = icmp sge i32 %66, %67
  br i1 %68, label %69, label %70

69:                                               ; preds = %64
  call void @usage()
  br label %70

70:                                               ; preds = %69, %64
  %71 = load i8**, i8*** %8, align 8
  %72 = load i32, i32* %11, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8*, i8** %71, i64 %73
  %75 = load i8*, i8** %74, align 8
  %76 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %75, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), i32* %13) #10
  %77 = icmp ne i32 %76, 1
  br i1 %77, label %78, label %79

78:                                               ; preds = %70
  call void @usage()
  br label %79

79:                                               ; preds = %78, %70
  %80 = load i32, i32* %13, align 4
  %81 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %82 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %81, i32 0, i32 22
  store i32 %80, i32* %82, align 8
  %83 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %84 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %83, i32 0, i32 19
  store i32 1, i32* %84, align 4
  br label %407

85:                                               ; preds = %60
  %86 = load i8*, i8** %12, align 8
  %87 = call i32 @keymatch(i8* %86, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i64 0, i64 0), i32 2)
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %132

89:                                               ; preds = %85
  %90 = load i32, i32* %11, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %11, align 4
  %92 = load i32, i32* %7, align 4
  %93 = icmp sge i32 %91, %92
  br i1 %93, label %94, label %95

94:                                               ; preds = %89
  call void @usage()
  br label %95

95:                                               ; preds = %94, %89
  %96 = load i8**, i8*** %8, align 8
  %97 = load i32, i32* %11, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8*, i8** %96, i64 %98
  %100 = load i8*, i8** %99, align 8
  %101 = call i32 @keymatch(i8* %100, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i64 0, i64 0), i32 1)
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %95
  %104 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %105 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %104, i32 0, i32 16
  store i32 0, i32* %105, align 8
  br label %131

106:                                              ; preds = %95
  %107 = load i8**, i8*** %8, align 8
  %108 = load i32, i32* %11, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8*, i8** %107, i64 %109
  %111 = load i8*, i8** %110, align 8
  %112 = call i32 @keymatch(i8* %111, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i64 0, i64 0), i32 2)
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %106
  %115 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %116 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %115, i32 0, i32 16
  store i32 1, i32* %116, align 8
  br label %130

117:                                              ; preds = %106
  %118 = load i8**, i8*** %8, align 8
  %119 = load i32, i32* %11, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8*, i8** %118, i64 %120
  %122 = load i8*, i8** %121, align 8
  %123 = call i32 @keymatch(i8* %122, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0), i32 2)
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %117
  %126 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %127 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %126, i32 0, i32 16
  store i32 2, i32* %127, align 8
  br label %129

128:                                              ; preds = %117
  call void @usage()
  br label %129

129:                                              ; preds = %128, %125
  br label %130

130:                                              ; preds = %129, %114
  br label %131

131:                                              ; preds = %130, %103
  br label %406

132:                                              ; preds = %85
  %133 = load i8*, i8** %12, align 8
  %134 = call i32 @keymatch(i8* %133, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i64 0, i64 0), i32 2)
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %136, label %179

136:                                              ; preds = %132
  %137 = load i32, i32* %11, align 4
  %138 = add nsw i32 %137, 1
  store i32 %138, i32* %11, align 4
  %139 = load i32, i32* %7, align 4
  %140 = icmp sge i32 %138, %139
  br i1 %140, label %141, label %142

141:                                              ; preds = %136
  call void @usage()
  br label %142

142:                                              ; preds = %141, %136
  %143 = load i8**, i8*** %8, align 8
  %144 = load i32, i32* %11, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i8*, i8** %143, i64 %145
  %147 = load i8*, i8** %146, align 8
  %148 = call i32 @keymatch(i8* %147, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0), i32 2)
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %142
  %151 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %152 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %151, i32 0, i32 20
  store i32 2, i32* %152, align 8
  br label %178

153:                                              ; preds = %142
  %154 = load i8**, i8*** %8, align 8
  %155 = load i32, i32* %11, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i8*, i8** %154, i64 %156
  %158 = load i8*, i8** %157, align 8
  %159 = call i32 @keymatch(i8* %158, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0), i32 2)
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %153
  %162 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %163 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %162, i32 0, i32 20
  store i32 0, i32* %163, align 8
  br label %177

164:                                              ; preds = %153
  %165 = load i8**, i8*** %8, align 8
  %166 = load i32, i32* %11, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i8*, i8** %165, i64 %167
  %169 = load i8*, i8** %168, align 8
  %170 = call i32 @keymatch(i8* %169, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i64 0, i64 0), i32 2)
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %164
  %173 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %174 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %173, i32 0, i32 20
  store i32 1, i32* %174, align 8
  br label %176

175:                                              ; preds = %164
  call void @usage()
  br label %176

176:                                              ; preds = %175, %172
  br label %177

177:                                              ; preds = %176, %161
  br label %178

178:                                              ; preds = %177, %150
  br label %405

179:                                              ; preds = %132
  %180 = load i8*, i8** %12, align 8
  %181 = call i32 @keymatch(i8* %180, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0), i32 1)
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %187, label %183

183:                                              ; preds = %179
  %184 = load i8*, i8** %12, align 8
  %185 = call i32 @keymatch(i8* %184, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i64 0, i64 0), i32 1)
  %186 = icmp ne i32 %185, 0
  br i1 %186, label %187, label %200

187:                                              ; preds = %183, %179
  %188 = load i32, i32* @parse_switches.printed_version, align 4
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %193, label %190

190:                                              ; preds = %187
  %191 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %192 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %191, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.69, i64 0, i64 0))
  store i32 1, i32* @parse_switches.printed_version, align 4
  br label %193

193:                                              ; preds = %190, %187
  %194 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %195 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %194, i32 0, i32 0
  %196 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %195, align 8
  %197 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %196, i32 0, i32 7
  %198 = load i32, i32* %197, align 4
  %199 = add nsw i32 %198, 1
  store i32 %199, i32* %197, align 4
  br label %404

200:                                              ; preds = %183
  %201 = load i8*, i8** %12, align 8
  %202 = call i32 @keymatch(i8* %201, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i64 0, i64 0), i32 1)
  %203 = icmp ne i32 %202, 0
  br i1 %203, label %204, label %221

204:                                              ; preds = %200
  %205 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %206 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %205, i32 0, i32 21
  store i32 0, i32* %206, align 4
  %207 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %208 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %207, i32 0, i32 20
  store i32 1, i32* %208, align 8
  %209 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %210 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %209, i32 0, i32 19
  %211 = load i32, i32* %210, align 4
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %216, label %213

213:                                              ; preds = %204
  %214 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %215 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %214, i32 0, i32 22
  store i32 216, i32* %215, align 8
  br label %216

216:                                              ; preds = %213, %204
  %217 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %218 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %217, i32 0, i32 16
  store i32 1, i32* %218, align 8
  %219 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %220 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %219, i32 0, i32 17
  store i32 0, i32* %220, align 4
  br label %403

221:                                              ; preds = %200
  %222 = load i8*, i8** %12, align 8
  %223 = call i32 @keymatch(i8* %222, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0), i32 1)
  %224 = icmp ne i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %221
  store i32 1, i32* @requested_fmt, align 4
  br label %402

226:                                              ; preds = %221
  %227 = load i8*, i8** %12, align 8
  %228 = call i32 @keymatch(i8* %227, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i64 0, i64 0), i32 2)
  %229 = icmp ne i32 %228, 0
  br i1 %229, label %234, label %230

230:                                              ; preds = %226
  %231 = load i8*, i8** %12, align 8
  %232 = call i32 @keymatch(i8* %231, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72, i64 0, i64 0), i32 2)
  %233 = icmp ne i32 %232, 0
  br i1 %233, label %234, label %237

234:                                              ; preds = %230, %226
  %235 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %236 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %235, i32 0, i32 10
  store i32 1, i32* %236, align 8
  br label %401

237:                                              ; preds = %230
  %238 = load i8*, i8** %12, align 8
  %239 = call i32 @keymatch(i8* %238, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73, i64 0, i64 0), i32 3)
  %240 = icmp ne i32 %239, 0
  br i1 %240, label %241, label %275

241:                                              ; preds = %237
  %242 = load i32, i32* %11, align 4
  %243 = add nsw i32 %242, 1
  store i32 %243, i32* %11, align 4
  %244 = load i32, i32* %7, align 4
  %245 = icmp sge i32 %243, %244
  br i1 %245, label %246, label %247

246:                                              ; preds = %241
  call void @usage()
  br label %247

247:                                              ; preds = %246, %241
  %248 = load i32, i32* %10, align 4
  %249 = icmp ne i32 %248, 0
  br i1 %249, label %250, label %274

250:                                              ; preds = %247
  %251 = load i8**, i8*** %8, align 8
  %252 = load i32, i32* %11, align 4
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds i8*, i8** %251, i64 %253
  %255 = load i8*, i8** %254, align 8
  %256 = call %struct._IO_FILE* @fopen(i8* %255, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  store %struct._IO_FILE* %256, %struct._IO_FILE** %14, align 8
  %257 = icmp eq %struct._IO_FILE* %256, null
  br i1 %257, label %258, label %267

258:                                              ; preds = %250
  %259 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %260 = load i8*, i8** @progname, align 8
  %261 = load i8**, i8*** %8, align 8
  %262 = load i32, i32* %11, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds i8*, i8** %261, i64 %263
  %265 = load i8*, i8** %264, align 8
  %266 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %259, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i8* %260, i8* %265)
  call void @exit(i32 1) #9
  unreachable

267:                                              ; preds = %250
  %268 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %269 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  call void @read_color_map(%struct.jpeg_decompress_struct* %268, %struct._IO_FILE* %269)
  %270 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %271 = call i32 @fclose(%struct._IO_FILE* %270)
  %272 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %273 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %272, i32 0, i32 19
  store i32 1, i32* %273, align 4
  br label %274

274:                                              ; preds = %267, %247
  br label %400

275:                                              ; preds = %237
  %276 = load i8*, i8** %12, align 8
  %277 = call i32 @keymatch(i8* %276, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.74, i64 0, i64 0), i32 3)
  %278 = icmp ne i32 %277, 0
  br i1 %278, label %279, label %312

279:                                              ; preds = %275
  store i8 120, i8* %16, align 1
  %280 = load i32, i32* %11, align 4
  %281 = add nsw i32 %280, 1
  store i32 %281, i32* %11, align 4
  %282 = load i32, i32* %7, align 4
  %283 = icmp sge i32 %281, %282
  br i1 %283, label %284, label %285

284:                                              ; preds = %279
  call void @usage()
  br label %285

285:                                              ; preds = %284, %279
  %286 = load i8**, i8*** %8, align 8
  %287 = load i32, i32* %11, align 4
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds i8*, i8** %286, i64 %288
  %290 = load i8*, i8** %289, align 8
  %291 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %290, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0), i64* %15, i8* %16) #10
  %292 = icmp slt i32 %291, 1
  br i1 %292, label %293, label %294

293:                                              ; preds = %285
  call void @usage()
  br label %294

294:                                              ; preds = %293, %285
  %295 = load i8, i8* %16, align 1
  %296 = sext i8 %295 to i32
  %297 = icmp eq i32 %296, 109
  br i1 %297, label %302, label %298

298:                                              ; preds = %294
  %299 = load i8, i8* %16, align 1
  %300 = sext i8 %299 to i32
  %301 = icmp eq i32 %300, 77
  br i1 %301, label %302, label %305

302:                                              ; preds = %298, %294
  %303 = load i64, i64* %15, align 8
  %304 = mul nsw i64 %303, 1000
  store i64 %304, i64* %15, align 8
  br label %305

305:                                              ; preds = %302, %298
  %306 = load i64, i64* %15, align 8
  %307 = mul nsw i64 %306, 1000
  %308 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %309 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %308, i32 0, i32 1
  %310 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %309, align 8
  %311 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %310, i32 0, i32 11
  store i64 %307, i64* %311, align 8
  br label %399

312:                                              ; preds = %275
  %313 = load i8*, i8** %12, align 8
  %314 = call i32 @keymatch(i8* %313, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i64 0, i64 0), i32 3)
  %315 = icmp ne i32 %314, 0
  br i1 %315, label %316, label %319

316:                                              ; preds = %312
  %317 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %318 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %317, i32 0, i32 17
  store i32 0, i32* %318, align 4
  br label %398

319:                                              ; preds = %312
  %320 = load i8*, i8** %12, align 8
  %321 = call i32 @keymatch(i8* %320, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i32 3)
  %322 = icmp ne i32 %321, 0
  br i1 %322, label %323, label %326

323:                                              ; preds = %319
  %324 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %325 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %324, i32 0, i32 21
  store i32 0, i32* %325, align 4
  br label %397

326:                                              ; preds = %319
  %327 = load i8*, i8** %12, align 8
  %328 = call i32 @keymatch(i8* %327, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.78, i64 0, i64 0), i32 3)
  %329 = icmp ne i32 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %326
  store i32 2, i32* @requested_fmt, align 4
  br label %396

331:                                              ; preds = %326
  %332 = load i8*, i8** %12, align 8
  %333 = call i32 @keymatch(i8* %332, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.79, i64 0, i64 0), i32 4)
  %334 = icmp ne i32 %333, 0
  br i1 %334, label %335, label %347

335:                                              ; preds = %331
  %336 = load i32, i32* %11, align 4
  %337 = add nsw i32 %336, 1
  store i32 %337, i32* %11, align 4
  %338 = load i32, i32* %7, align 4
  %339 = icmp sge i32 %337, %338
  br i1 %339, label %340, label %341

340:                                              ; preds = %335
  call void @usage()
  br label %341

341:                                              ; preds = %340, %335
  %342 = load i8**, i8*** %8, align 8
  %343 = load i32, i32* %11, align 4
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds i8*, i8** %342, i64 %344
  %346 = load i8*, i8** %345, align 8
  store i8* %346, i8** @outfilename, align 8
  br label %395

347:                                              ; preds = %331
  %348 = load i8*, i8** %12, align 8
  %349 = call i32 @keymatch(i8* %348, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.80, i64 0, i64 0), i32 1)
  %350 = icmp ne i32 %349, 0
  br i1 %350, label %355, label %351

351:                                              ; preds = %347
  %352 = load i8*, i8** %12, align 8
  %353 = call i32 @keymatch(i8* %352, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.81, i64 0, i64 0), i32 1)
  %354 = icmp ne i32 %353, 0
  br i1 %354, label %355, label %356

355:                                              ; preds = %351, %347
  store i32 3, i32* @requested_fmt, align 4
  br label %394

356:                                              ; preds = %351
  %357 = load i8*, i8** %12, align 8
  %358 = call i32 @keymatch(i8* %357, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.82, i64 0, i64 0), i32 1)
  %359 = icmp ne i32 %358, 0
  br i1 %359, label %360, label %361

360:                                              ; preds = %356
  store i32 4, i32* @requested_fmt, align 4
  br label %393

361:                                              ; preds = %356
  %362 = load i8*, i8** %12, align 8
  %363 = call i32 @keymatch(i8* %362, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0), i32 1)
  %364 = icmp ne i32 %363, 0
  br i1 %364, label %365, label %385

365:                                              ; preds = %361
  %366 = load i32, i32* %11, align 4
  %367 = add nsw i32 %366, 1
  store i32 %367, i32* %11, align 4
  %368 = load i32, i32* %7, align 4
  %369 = icmp sge i32 %367, %368
  br i1 %369, label %370, label %371

370:                                              ; preds = %365
  call void @usage()
  br label %371

371:                                              ; preds = %370, %365
  %372 = load i8**, i8*** %8, align 8
  %373 = load i32, i32* %11, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds i8*, i8** %372, i64 %374
  %376 = load i8*, i8** %375, align 8
  %377 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %378 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %377, i32 0, i32 11
  %379 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %380 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %379, i32 0, i32 12
  %381 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %376, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0), i32* %378, i32* %380) #10
  %382 = icmp ne i32 %381, 2
  br i1 %382, label %383, label %384

383:                                              ; preds = %371
  call void @usage()
  br label %384

384:                                              ; preds = %383, %371
  br label %392

385:                                              ; preds = %361
  %386 = load i8*, i8** %12, align 8
  %387 = call i32 @keymatch(i8* %386, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0), i32 1)
  %388 = icmp ne i32 %387, 0
  br i1 %388, label %389, label %390

389:                                              ; preds = %385
  store i32 5, i32* @requested_fmt, align 4
  br label %391

390:                                              ; preds = %385
  call void @usage()
  br label %391

391:                                              ; preds = %390, %389
  br label %392

392:                                              ; preds = %391, %384
  br label %393

393:                                              ; preds = %392, %360
  br label %394

394:                                              ; preds = %393, %355
  br label %395

395:                                              ; preds = %394, %341
  br label %396

396:                                              ; preds = %395, %330
  br label %397

397:                                              ; preds = %396, %323
  br label %398

398:                                              ; preds = %397, %316
  br label %399

399:                                              ; preds = %398, %305
  br label %400

400:                                              ; preds = %399, %274
  br label %401

401:                                              ; preds = %400, %234
  br label %402

402:                                              ; preds = %401, %225
  br label %403

403:                                              ; preds = %402, %216
  br label %404

404:                                              ; preds = %403, %193
  br label %405

405:                                              ; preds = %404, %178
  br label %406

406:                                              ; preds = %405, %131
  br label %407

407:                                              ; preds = %406, %79
  br label %408

408:                                              ; preds = %407, %47
  br label %409

409:                                              ; preds = %408, %39
  %410 = load i32, i32* %11, align 4
  %411 = add nsw i32 %410, 1
  store i32 %411, i32* %11, align 4
  br label %21

412:                                              ; preds = %40, %21
  %413 = load i32, i32* %11, align 4
  ret i32 %413
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: noinline nounwind uwtable
define internal void @usage() #0 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = load i8*, i8** @progname, align 8
  %3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.86, i64 0, i64 0), i8* %2)
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.87, i64 0, i64 0))
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.88, i64 0, i64 0))
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.89, i64 0, i64 0))
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.90, i64 0, i64 0))
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.91, i64 0, i64 0))
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.92, i64 0, i64 0))
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.94, i64 0, i64 0))
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.94, i64 0, i64 0))
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.96, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.94, i64 0, i64 0))
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.98, i64 0, i64 0))
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.94, i64 0, i64 0))
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.100, i64 0, i64 0))
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.101, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.98, i64 0, i64 0))
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.102, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.94, i64 0, i64 0))
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.94, i64 0, i64 0))
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.104, i64 0, i64 0))
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.105, i64 0, i64 0))
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.106, i64 0, i64 0))
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.107, i64 0, i64 0))
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.108, i64 0, i64 0))
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.109, i64 0, i64 0))
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.110, i64 0, i64 0))
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %49 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.111, i64 0, i64 0))
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.112, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__isoc99_sscanf(i8*, i8*, ...) #5

; Function Attrs: noinline nounwind uwtable
define internal i32 @jpeg_getc(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  %3 = alloca %struct.jpeg_source_mgr*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i32 0, i32 5
  %6 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %5, align 8
  store %struct.jpeg_source_mgr* %6, %struct.jpeg_source_mgr** %3, align 8
  %7 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %3, align 8
  %8 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %7, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %31

11:                                               ; preds = %1
  %12 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %3, align 8
  %13 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %12, i32 0, i32 3
  %14 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %13, align 8
  %15 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %16 = call i32 %14(%struct.jpeg_decompress_struct* %15)
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %11
  %19 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %19, i32 0, i32 0
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i32 0, i32 5
  store i32 22, i32* %22, align 8
  %23 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %23, i32 0, i32 0
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i32 0, i32 0
  %27 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %26, align 8
  %28 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %29 = bitcast %struct.jpeg_decompress_struct* %28 to %struct.jpeg_common_struct*
  call void %27(%struct.jpeg_common_struct* %29)
  br label %30

30:                                               ; preds = %18, %11
  br label %31

31:                                               ; preds = %30, %1
  %32 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %3, align 8
  %33 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %32, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, -1
  store i64 %35, i64* %33, align 8
  %36 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %3, align 8
  %37 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %36, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %39, i8** %37, align 8
  %40 = load i8, i8* %38, align 1
  %41 = zext i8 %40 to i32
  ret i32 %41
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_CreateCompress(%struct.jpeg_compress_struct* %0, i32 %1, i64 %2) #0 {
  %4 = alloca %struct.jpeg_compress_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.jpeg_error_mgr*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %4, align 8
  store i32 %1, i32* %5, align 4
  store i64 %2, i64* %6, align 8
  %9 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %9, i32 0, i32 1
  store %struct.jpeg_memory_mgr* null, %struct.jpeg_memory_mgr** %10, align 8
  %11 = load i32, i32* %5, align 4
  %12 = icmp ne i32 %11, 61
  br i1 %12, label %13, label %38

13:                                               ; preds = %3
  %14 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %14, i32 0, i32 0
  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i32 0, i32 5
  store i32 10, i32* %17, align 8
  %18 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %18, i32 0, i32 0
  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i32 0, i32 6
  %22 = bitcast %union.anon* %21 to [8 x i32]*
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %22, i64 0, i64 0
  store i32 61, i32* %23, align 4
  %24 = load i32, i32* %5, align 4
  %25 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %25, i32 0, i32 0
  %27 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %26, align 8
  %28 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %27, i32 0, i32 6
  %29 = bitcast %union.anon* %28 to [8 x i32]*
  %30 = getelementptr inbounds [8 x i32], [8 x i32]* %29, i64 0, i64 1
  store i32 %24, i32* %30, align 4
  %31 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %32 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %31, i32 0, i32 0
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i32 0, i32 0
  %35 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %34, align 8
  %36 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %37 = bitcast %struct.jpeg_compress_struct* %36 to %struct.jpeg_common_struct*
  call void %35(%struct.jpeg_common_struct* %37)
  br label %38

38:                                               ; preds = %13, %3
  %39 = load i64, i64* %6, align 8
  %40 = icmp ne i64 %39, 496
  br i1 %40, label %41, label %67

41:                                               ; preds = %38
  %42 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %42, i32 0, i32 0
  %44 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %43, align 8
  %45 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %44, i32 0, i32 5
  store i32 19, i32* %45, align 8
  %46 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %47 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %46, i32 0, i32 0
  %48 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %47, align 8
  %49 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %48, i32 0, i32 6
  %50 = bitcast %union.anon* %49 to [8 x i32]*
  %51 = getelementptr inbounds [8 x i32], [8 x i32]* %50, i64 0, i64 0
  store i32 496, i32* %51, align 4
  %52 = load i64, i64* %6, align 8
  %53 = trunc i64 %52 to i32
  %54 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %55 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %54, i32 0, i32 0
  %56 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %57 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %56, i32 0, i32 6
  %58 = bitcast %union.anon* %57 to [8 x i32]*
  %59 = getelementptr inbounds [8 x i32], [8 x i32]* %58, i64 0, i64 1
  store i32 %53, i32* %59, align 4
  %60 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %61 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %60, i32 0, i32 0
  %62 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %61, align 8
  %63 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %62, i32 0, i32 0
  %64 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %63, align 8
  %65 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %66 = bitcast %struct.jpeg_compress_struct* %65 to %struct.jpeg_common_struct*
  call void %64(%struct.jpeg_common_struct* %66)
  br label %67

67:                                               ; preds = %41, %38
  %68 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %69 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %68, i32 0, i32 0
  %70 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %69, align 8
  store %struct.jpeg_error_mgr* %70, %struct.jpeg_error_mgr** %8, align 8
  %71 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %72 = bitcast %struct.jpeg_compress_struct* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %72, i8 0, i64 496, i1 false)
  %73 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %74 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %75 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %74, i32 0, i32 0
  store %struct.jpeg_error_mgr* %73, %struct.jpeg_error_mgr** %75, align 8
  %76 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %77 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %76, i32 0, i32 3
  store i32 0, i32* %77, align 8
  %78 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %79 = bitcast %struct.jpeg_compress_struct* %78 to %struct.jpeg_common_struct*
  call void bitcast (void (%struct.jpeg_common_struct.855*)* @jinit_memory_mgr to void (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %79)
  %80 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %81 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %80, i32 0, i32 2
  store %struct.jpeg_progress_mgr* null, %struct.jpeg_progress_mgr** %81, align 8
  %82 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %83 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %82, i32 0, i32 5
  store %struct.jpeg_destination_mgr* null, %struct.jpeg_destination_mgr** %83, align 8
  %84 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %85 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %84, i32 0, i32 14
  store %struct.jpeg_component_info* null, %struct.jpeg_component_info** %85, align 8
  store i32 0, i32* %7, align 4
  br label %86

86:                                               ; preds = %95, %67
  %87 = load i32, i32* %7, align 4
  %88 = icmp slt i32 %87, 4
  br i1 %88, label %89, label %98

89:                                               ; preds = %86
  %90 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %91 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %90, i32 0, i32 15
  %92 = load i32, i32* %7, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %91, i64 0, i64 %93
  store %struct.JQUANT_TBL* null, %struct.JQUANT_TBL** %94, align 8
  br label %95

95:                                               ; preds = %89
  %96 = load i32, i32* %7, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %7, align 4
  br label %86

98:                                               ; preds = %86
  store i32 0, i32* %7, align 4
  br label %99

99:                                               ; preds = %113, %98
  %100 = load i32, i32* %7, align 4
  %101 = icmp slt i32 %100, 4
  br i1 %101, label %102, label %116

102:                                              ; preds = %99
  %103 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %104 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %103, i32 0, i32 16
  %105 = load i32, i32* %7, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %104, i64 0, i64 %106
  store %struct.JHUFF_TBL* null, %struct.JHUFF_TBL** %107, align 8
  %108 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %109 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %108, i32 0, i32 17
  %110 = load i32, i32* %7, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %109, i64 0, i64 %111
  store %struct.JHUFF_TBL* null, %struct.JHUFF_TBL** %112, align 8
  br label %113

113:                                              ; preds = %102
  %114 = load i32, i32* %7, align 4
  %115 = add nsw i32 %114, 1
  store i32 %115, i32* %7, align 4
  br label %99

116:                                              ; preds = %99
  %117 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %118 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %117, i32 0, i32 10
  store double 1.000000e+00, double* %118, align 8
  %119 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %120 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %119, i32 0, i32 4
  store i32 100, i32* %120, align 4
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_destroy_compress(%struct.jpeg_compress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %2, align 8
  %3 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %4 = bitcast %struct.jpeg_compress_struct* %3 to %struct.jpeg_common_struct*
  call void bitcast (void (%struct.jpeg_common_struct.212*)* @jpeg_destroy to void (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_abort_compress(%struct.jpeg_compress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %2, align 8
  %3 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %4 = bitcast %struct.jpeg_compress_struct* %3 to %struct.jpeg_common_struct*
  call void bitcast (void (%struct.jpeg_common_struct.212*)* @jpeg_abort to void (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_suppress_tables(%struct.jpeg_compress_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.JQUANT_TBL*, align 8
  %7 = alloca %struct.JHUFF_TBL*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %8

8:                                                ; preds = %24, %2
  %9 = load i32, i32* %5, align 4
  %10 = icmp slt i32 %9, 4
  br i1 %10, label %11, label %27

11:                                               ; preds = %8
  %12 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %12, i32 0, i32 15
  %14 = load i32, i32* %5, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %13, i64 0, i64 %15
  %17 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %16, align 8
  store %struct.JQUANT_TBL* %17, %struct.JQUANT_TBL** %6, align 8
  %18 = icmp ne %struct.JQUANT_TBL* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %11
  %20 = load i32, i32* %4, align 4
  %21 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %6, align 8
  %22 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %21, i32 0, i32 1
  store i32 %20, i32* %22, align 4
  br label %23

23:                                               ; preds = %19, %11
  br label %24

24:                                               ; preds = %23
  %25 = load i32, i32* %5, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %5, align 4
  br label %8

27:                                               ; preds = %8
  store i32 0, i32* %5, align 4
  br label %28

28:                                               ; preds = %56, %27
  %29 = load i32, i32* %5, align 4
  %30 = icmp slt i32 %29, 4
  br i1 %30, label %31, label %59

31:                                               ; preds = %28
  %32 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %33 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %32, i32 0, i32 16
  %34 = load i32, i32* %5, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %33, i64 0, i64 %35
  %37 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %36, align 8
  store %struct.JHUFF_TBL* %37, %struct.JHUFF_TBL** %7, align 8
  %38 = icmp ne %struct.JHUFF_TBL* %37, null
  br i1 %38, label %39, label %43

39:                                               ; preds = %31
  %40 = load i32, i32* %4, align 4
  %41 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %7, align 8
  %42 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %41, i32 0, i32 2
  store i32 %40, i32* %42, align 4
  br label %43

43:                                               ; preds = %39, %31
  %44 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %45 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %44, i32 0, i32 17
  %46 = load i32, i32* %5, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %45, i64 0, i64 %47
  %49 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %48, align 8
  store %struct.JHUFF_TBL* %49, %struct.JHUFF_TBL** %7, align 8
  %50 = icmp ne %struct.JHUFF_TBL* %49, null
  br i1 %50, label %51, label %55

51:                                               ; preds = %43
  %52 = load i32, i32* %4, align 4
  %53 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %7, align 8
  %54 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %53, i32 0, i32 2
  store i32 %52, i32* %54, align 4
  br label %55

55:                                               ; preds = %51, %43
  br label %56

56:                                               ; preds = %55
  %57 = load i32, i32* %5, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %5, align 4
  br label %28

59:                                               ; preds = %28
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_finish_compress(%struct.jpeg_compress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct*, align 8
  %3 = alloca i32, align 4
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %2, align 8
  %4 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 101
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %9, i32 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 102
  br i1 %12, label %13, label %40

13:                                               ; preds = %8, %1
  %14 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %14, i32 0, i32 36
  %16 = load i32, i32* %15, align 8
  %17 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %17, i32 0, i32 7
  %19 = load i32, i32* %18, align 4
  %20 = icmp ult i32 %16, %19
  br i1 %20, label %21, label %33

21:                                               ; preds = %13
  %22 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %22, i32 0, i32 0
  %24 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %25 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %24, i32 0, i32 5
  store i32 66, i32* %25, align 8
  %26 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %27 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %26, i32 0, i32 0
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i32 0, i32 0
  %30 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %29, align 8
  %31 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %32 = bitcast %struct.jpeg_compress_struct* %31 to %struct.jpeg_common_struct*
  call void %30(%struct.jpeg_common_struct* %32)
  br label %33

33:                                               ; preds = %21, %13
  %34 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %34, i32 0, i32 51
  %36 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %36, i32 0, i32 2
  %38 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %37, align 8
  %39 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void %38(%struct.jpeg_compress_struct* %39)
  br label %67

40:                                               ; preds = %8
  %41 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %42 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %41, i32 0, i32 4
  %43 = load i32, i32* %42, align 4
  %44 = icmp ne i32 %43, 103
  br i1 %44, label %45, label %66

45:                                               ; preds = %40
  %46 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %47 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %46, i32 0, i32 0
  %48 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %47, align 8
  %49 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %48, i32 0, i32 5
  store i32 18, i32* %49, align 8
  %50 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %51 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %50, i32 0, i32 4
  %52 = load i32, i32* %51, align 4
  %53 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %54 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %53, i32 0, i32 0
  %55 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %54, align 8
  %56 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %55, i32 0, i32 6
  %57 = bitcast %union.anon* %56 to [8 x i32]*
  %58 = getelementptr inbounds [8 x i32], [8 x i32]* %57, i64 0, i64 0
  store i32 %52, i32* %58, align 4
  %59 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %60 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %59, i32 0, i32 0
  %61 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %60, align 8
  %62 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %61, i32 0, i32 0
  %63 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %62, align 8
  %64 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %65 = bitcast %struct.jpeg_compress_struct* %64 to %struct.jpeg_common_struct*
  call void %63(%struct.jpeg_common_struct* %65)
  br label %66

66:                                               ; preds = %45, %40
  br label %67

67:                                               ; preds = %66, %33
  br label %68

68:                                               ; preds = %142, %67
  %69 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %70 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %69, i32 0, i32 51
  %71 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %70, align 8
  %72 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %71, i32 0, i32 4
  %73 = load i32, i32* %72, align 4
  %74 = icmp ne i32 %73, 0
  %75 = xor i1 %74, true
  br i1 %75, label %76, label %149

76:                                               ; preds = %68
  %77 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %78 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %77, i32 0, i32 51
  %79 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %78, align 8
  %80 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %79, i32 0, i32 0
  %81 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %80, align 8
  %82 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void %81(%struct.jpeg_compress_struct* %82)
  store i32 0, i32* %3, align 4
  br label %83

83:                                               ; preds = %139, %76
  %84 = load i32, i32* %3, align 4
  %85 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %86 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %85, i32 0, i32 40
  %87 = load i32, i32* %86, align 8
  %88 = icmp ult i32 %84, %87
  br i1 %88, label %89, label %142

89:                                               ; preds = %83
  %90 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %91 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %90, i32 0, i32 2
  %92 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %91, align 8
  %93 = icmp ne %struct.jpeg_progress_mgr* %92, null
  br i1 %93, label %94, label %117

94:                                               ; preds = %89
  %95 = load i32, i32* %3, align 4
  %96 = zext i32 %95 to i64
  %97 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %98 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %97, i32 0, i32 2
  %99 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8
  %100 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %99, i32 0, i32 1
  store i64 %96, i64* %100, align 8
  %101 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %102 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %101, i32 0, i32 40
  %103 = load i32, i32* %102, align 8
  %104 = zext i32 %103 to i64
  %105 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %106 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %105, i32 0, i32 2
  %107 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %106, align 8
  %108 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %107, i32 0, i32 2
  store i64 %104, i64* %108, align 8
  %109 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %110 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %109, i32 0, i32 2
  %111 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %110, align 8
  %112 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %111, i32 0, i32 0
  %113 = bitcast {}** %112 to void (%struct.jpeg_common_struct*)**
  %114 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %113, align 8
  %115 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %116 = bitcast %struct.jpeg_compress_struct* %115 to %struct.jpeg_common_struct*
  call void %114(%struct.jpeg_common_struct* %116)
  br label %117

117:                                              ; preds = %94, %89
  %118 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %119 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %118, i32 0, i32 54
  %120 = load %struct.jpeg_c_coef_controller*, %struct.jpeg_c_coef_controller** %119, align 8
  %121 = getelementptr inbounds %struct.jpeg_c_coef_controller, %struct.jpeg_c_coef_controller* %120, i32 0, i32 1
  %122 = load i32 (%struct.jpeg_compress_struct*, i8***)*, i32 (%struct.jpeg_compress_struct*, i8***)** %121, align 8
  %123 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %124 = call i32 %122(%struct.jpeg_compress_struct* %123, i8*** null)
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %138, label %126

126:                                              ; preds = %117
  %127 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %128 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %127, i32 0, i32 0
  %129 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %128, align 8
  %130 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %129, i32 0, i32 5
  store i32 22, i32* %130, align 8
  %131 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %132 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %131, i32 0, i32 0
  %133 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %132, align 8
  %134 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %133, i32 0, i32 0
  %135 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %134, align 8
  %136 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %137 = bitcast %struct.jpeg_compress_struct* %136 to %struct.jpeg_common_struct*
  call void %135(%struct.jpeg_common_struct* %137)
  br label %138

138:                                              ; preds = %126, %117
  br label %139

139:                                              ; preds = %138
  %140 = load i32, i32* %3, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %3, align 4
  br label %83

142:                                              ; preds = %83
  %143 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %144 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %143, i32 0, i32 51
  %145 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %144, align 8
  %146 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %145, i32 0, i32 2
  %147 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %146, align 8
  %148 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void %147(%struct.jpeg_compress_struct* %148)
  br label %68

149:                                              ; preds = %68
  %150 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %151 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %150, i32 0, i32 55
  %152 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %151, align 8
  %153 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %152, i32 0, i32 4
  %154 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %153, align 8
  %155 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void %154(%struct.jpeg_compress_struct* %155)
  %156 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %157 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %156, i32 0, i32 5
  %158 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %157, align 8
  %159 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %158, i32 0, i32 4
  %160 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %159, align 8
  %161 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void %160(%struct.jpeg_compress_struct* %161)
  %162 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %163 = bitcast %struct.jpeg_compress_struct* %162 to %struct.jpeg_common_struct*
  call void bitcast (void (%struct.jpeg_common_struct.212*)* @jpeg_abort to void (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %163)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_write_marker(%struct.jpeg_compress_struct* %0, i32 %1, i8* %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_compress_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %5, align 8
  store i32 %1, i32* %6, align 4
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %5, align 8
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %9, i32 0, i32 36
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %4
  %14 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %5, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %14, i32 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = icmp ne i32 %16, 101
  br i1 %17, label %18, label %49

18:                                               ; preds = %13
  %19 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %5, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %19, i32 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %21, 102
  br i1 %22, label %23, label %49

23:                                               ; preds = %18
  %24 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %5, align 8
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %24, i32 0, i32 4
  %26 = load i32, i32* %25, align 4
  %27 = icmp ne i32 %26, 103
  br i1 %27, label %28, label %49

28:                                               ; preds = %23, %4
  %29 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %5, align 8
  %30 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %29, i32 0, i32 0
  %31 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %30, align 8
  %32 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %31, i32 0, i32 5
  store i32 18, i32* %32, align 8
  %33 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %5, align 8
  %34 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %33, i32 0, i32 4
  %35 = load i32, i32* %34, align 4
  %36 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %5, align 8
  %37 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %36, i32 0, i32 0
  %38 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %37, align 8
  %39 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %38, i32 0, i32 6
  %40 = bitcast %union.anon* %39 to [8 x i32]*
  %41 = getelementptr inbounds [8 x i32], [8 x i32]* %40, i64 0, i64 0
  store i32 %35, i32* %41, align 4
  %42 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %5, align 8
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %42, i32 0, i32 0
  %44 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %43, align 8
  %45 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %44, i32 0, i32 0
  %46 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %45, align 8
  %47 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %5, align 8
  %48 = bitcast %struct.jpeg_compress_struct* %47 to %struct.jpeg_common_struct*
  call void %46(%struct.jpeg_common_struct* %48)
  br label %49

49:                                               ; preds = %28, %23, %18, %13
  %50 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %5, align 8
  %51 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %50, i32 0, i32 55
  %52 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %51, align 8
  %53 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %52, i32 0, i32 0
  %54 = load void (%struct.jpeg_compress_struct*, i32, i8*, i32)*, void (%struct.jpeg_compress_struct*, i32, i8*, i32)** %53, align 8
  %55 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %5, align 8
  %56 = load i32, i32* %6, align 4
  %57 = load i8*, i8** %7, align 8
  %58 = load i32, i32* %8, align 4
  call void %54(%struct.jpeg_compress_struct* %55, i32 %56, i8* %57, i32 %58)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_write_tables(%struct.jpeg_compress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %2, align 8
  %3 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %3, i32 0, i32 4
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, 100
  br i1 %6, label %7, label %28

7:                                                ; preds = %1
  %8 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %8, i32 0, i32 0
  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i32 0, i32 5
  store i32 18, i32* %11, align 8
  %12 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %12, i32 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %15, i32 0, i32 0
  %17 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %17, i32 0, i32 6
  %19 = bitcast %union.anon* %18 to [8 x i32]*
  %20 = getelementptr inbounds [8 x i32], [8 x i32]* %19, i64 0, i64 0
  store i32 %14, i32* %20, align 4
  %21 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %21, i32 0, i32 0
  %23 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %23, i32 0, i32 0
  %25 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %24, align 8
  %26 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %27 = bitcast %struct.jpeg_compress_struct* %26 to %struct.jpeg_common_struct*
  call void %25(%struct.jpeg_common_struct* %27)
  br label %28

28:                                               ; preds = %7, %1
  %29 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %30 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %29, i32 0, i32 0
  %31 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %30, align 8
  %32 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %31, i32 0, i32 4
  %33 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %32, align 8
  %34 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %35 = bitcast %struct.jpeg_compress_struct* %34 to %struct.jpeg_common_struct*
  call void %33(%struct.jpeg_common_struct* %35)
  %36 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %37 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %36, i32 0, i32 5
  %38 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %37, align 8
  %39 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %38, i32 0, i32 2
  %40 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %39, align 8
  %41 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void %40(%struct.jpeg_compress_struct* %41)
  %42 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void bitcast (void (%struct.jpeg_compress_struct.168*)* @jinit_marker_writer to void (%struct.jpeg_compress_struct*)*)(%struct.jpeg_compress_struct* %42)
  %43 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %44 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %43, i32 0, i32 55
  %45 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %45, i32 0, i32 5
  %47 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %46, align 8
  %48 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void %47(%struct.jpeg_compress_struct* %48)
  %49 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %50 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %49, i32 0, i32 5
  %51 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %50, align 8
  %52 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %51, i32 0, i32 4
  %53 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %52, align 8
  %54 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void %53(%struct.jpeg_compress_struct* %54)
  %55 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %56 = bitcast %struct.jpeg_compress_struct* %55 to %struct.jpeg_common_struct*
  call void bitcast (void (%struct.jpeg_common_struct.212*)* @jpeg_abort to void (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %56)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_start_compress(%struct.jpeg_compress_struct.14* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.14*, align 8
  %4 = alloca i32, align 4
  store %struct.jpeg_compress_struct.14* %0, %struct.jpeg_compress_struct.14** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  %6 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %5, i32 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 100
  br i1 %8, label %9, label %30

9:                                                ; preds = %2
  %10 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %10, i32 0, i32 0
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i32 0, i32 5
  store i32 18, i32* %13, align 8
  %14 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %14, i32 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %17, i32 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i32 0, i32 6
  %21 = bitcast %union.anon* %20 to [8 x i32]*
  %22 = getelementptr inbounds [8 x i32], [8 x i32]* %21, i64 0, i64 0
  store i32 %16, i32* %22, align 4
  %23 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %23, i32 0, i32 0
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i32 0, i32 0
  %27 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %26, align 8
  %28 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  %29 = bitcast %struct.jpeg_compress_struct.14* %28 to %struct.jpeg_common_struct*
  call void %27(%struct.jpeg_common_struct* %29)
  br label %30

30:                                               ; preds = %9, %2
  %31 = load i32, i32* %4, align 4
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %30
  %34 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  call void bitcast (void (%struct.jpeg_compress_struct*, i32)* @jpeg_suppress_tables to void (%struct.jpeg_compress_struct.14*, i32)*)(%struct.jpeg_compress_struct.14* %34, i32 0)
  br label %35

35:                                               ; preds = %33, %30
  %36 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  %37 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %36, i32 0, i32 0
  %38 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %37, align 8
  %39 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %38, i32 0, i32 4
  %40 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %39, align 8
  %41 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  %42 = bitcast %struct.jpeg_compress_struct.14* %41 to %struct.jpeg_common_struct*
  call void %40(%struct.jpeg_common_struct* %42)
  %43 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  %44 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %43, i32 0, i32 5
  %45 = load %struct.jpeg_destination_mgr.18*, %struct.jpeg_destination_mgr.18** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_destination_mgr.18, %struct.jpeg_destination_mgr.18* %45, i32 0, i32 2
  %47 = load void (%struct.jpeg_compress_struct.14*)*, void (%struct.jpeg_compress_struct.14*)** %46, align 8
  %48 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  call void %47(%struct.jpeg_compress_struct.14* %48)
  %49 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  call void bitcast (void (%struct.jpeg_compress_struct.58*)* @jinit_compress_master to void (%struct.jpeg_compress_struct.14*)*)(%struct.jpeg_compress_struct.14* %49)
  %50 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  %51 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %50, i32 0, i32 51
  %52 = load %struct.jpeg_comp_master.23*, %struct.jpeg_comp_master.23** %51, align 8
  %53 = getelementptr inbounds %struct.jpeg_comp_master.23, %struct.jpeg_comp_master.23* %52, i32 0, i32 0
  %54 = load void (%struct.jpeg_compress_struct.14*)*, void (%struct.jpeg_compress_struct.14*)** %53, align 8
  %55 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  call void %54(%struct.jpeg_compress_struct.14* %55)
  %56 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  %57 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %56, i32 0, i32 36
  store i32 0, i32* %57, align 8
  %58 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  %59 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %58, i32 0, i32 23
  %60 = load i32, i32* %59, align 8
  %61 = icmp ne i32 %60, 0
  %62 = zext i1 %61 to i64
  %63 = select i1 %61, i32 102, i32 101
  %64 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %3, align 8
  %65 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %64, i32 0, i32 4
  store i32 %63, i32* %65, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @jpeg_write_scanlines(%struct.jpeg_compress_struct.14* %0, i8** %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_compress_struct.14*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.jpeg_compress_struct.14* %0, %struct.jpeg_compress_struct.14** %4, align 8
  store i8** %1, i8*** %5, align 8
  store i32 %2, i32* %6, align 4
  %9 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %10 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %9, i32 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %11, 101
  br i1 %12, label %13, label %34

13:                                               ; preds = %3
  %14 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %14, i32 0, i32 0
  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i32 0, i32 5
  store i32 18, i32* %17, align 8
  %18 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %19 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %18, i32 0, i32 4
  %20 = load i32, i32* %19, align 4
  %21 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %21, i32 0, i32 0
  %23 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %23, i32 0, i32 6
  %25 = bitcast %union.anon* %24 to [8 x i32]*
  %26 = getelementptr inbounds [8 x i32], [8 x i32]* %25, i64 0, i64 0
  store i32 %20, i32* %26, align 4
  %27 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %28 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %27, i32 0, i32 0
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i32 0, i32 0
  %31 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %30, align 8
  %32 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %33 = bitcast %struct.jpeg_compress_struct.14* %32 to %struct.jpeg_common_struct*
  call void %31(%struct.jpeg_common_struct* %33)
  br label %34

34:                                               ; preds = %13, %3
  %35 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %36 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %35, i32 0, i32 36
  %37 = load i32, i32* %36, align 8
  %38 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %39 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %38, i32 0, i32 7
  %40 = load i32, i32* %39, align 4
  %41 = icmp uge i32 %37, %40
  br i1 %41, label %42, label %54

42:                                               ; preds = %34
  %43 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %44 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %43, i32 0, i32 0
  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i32 0, i32 5
  store i32 119, i32* %46, align 8
  %47 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %48 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %47, i32 0, i32 0
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i32 0, i32 1
  %51 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %50, align 8
  %52 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %53 = bitcast %struct.jpeg_compress_struct.14* %52 to %struct.jpeg_common_struct*
  call void %51(%struct.jpeg_common_struct* %53, i32 -1)
  br label %54

54:                                               ; preds = %42, %34
  %55 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %56 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %55, i32 0, i32 2
  %57 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %56, align 8
  %58 = icmp ne %struct.jpeg_progress_mgr* %57, null
  br i1 %58, label %59, label %84

59:                                               ; preds = %54
  %60 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %61 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %60, i32 0, i32 36
  %62 = load i32, i32* %61, align 8
  %63 = zext i32 %62 to i64
  %64 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %65 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %64, i32 0, i32 2
  %66 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %65, align 8
  %67 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %66, i32 0, i32 1
  store i64 %63, i64* %67, align 8
  %68 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %69 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %68, i32 0, i32 7
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %73 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %72, i32 0, i32 2
  %74 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %73, align 8
  %75 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %74, i32 0, i32 2
  store i64 %71, i64* %75, align 8
  %76 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %77 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %76, i32 0, i32 2
  %78 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %77, align 8
  %79 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %78, i32 0, i32 0
  %80 = bitcast {}** %79 to void (%struct.jpeg_common_struct*)**
  %81 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %80, align 8
  %82 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %83 = bitcast %struct.jpeg_compress_struct.14* %82 to %struct.jpeg_common_struct*
  call void %81(%struct.jpeg_common_struct* %83)
  br label %84

84:                                               ; preds = %59, %54
  %85 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %86 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %85, i32 0, i32 51
  %87 = load %struct.jpeg_comp_master.23*, %struct.jpeg_comp_master.23** %86, align 8
  %88 = getelementptr inbounds %struct.jpeg_comp_master.23, %struct.jpeg_comp_master.23* %87, i32 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %84
  %92 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %93 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %92, i32 0, i32 51
  %94 = load %struct.jpeg_comp_master.23*, %struct.jpeg_comp_master.23** %93, align 8
  %95 = getelementptr inbounds %struct.jpeg_comp_master.23, %struct.jpeg_comp_master.23* %94, i32 0, i32 1
  %96 = load void (%struct.jpeg_compress_struct.14*)*, void (%struct.jpeg_compress_struct.14*)** %95, align 8
  %97 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  call void %96(%struct.jpeg_compress_struct.14* %97)
  br label %98

98:                                               ; preds = %91, %84
  %99 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %100 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %99, i32 0, i32 7
  %101 = load i32, i32* %100, align 4
  %102 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %103 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %102, i32 0, i32 36
  %104 = load i32, i32* %103, align 8
  %105 = sub i32 %101, %104
  store i32 %105, i32* %8, align 4
  %106 = load i32, i32* %6, align 4
  %107 = load i32, i32* %8, align 4
  %108 = icmp ugt i32 %106, %107
  br i1 %108, label %109, label %111

109:                                              ; preds = %98
  %110 = load i32, i32* %8, align 4
  store i32 %110, i32* %6, align 4
  br label %111

111:                                              ; preds = %109, %98
  store i32 0, i32* %7, align 4
  %112 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %113 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %112, i32 0, i32 52
  %114 = load %struct.jpeg_c_main_controller.24*, %struct.jpeg_c_main_controller.24** %113, align 8
  %115 = getelementptr inbounds %struct.jpeg_c_main_controller.24, %struct.jpeg_c_main_controller.24* %114, i32 0, i32 1
  %116 = load void (%struct.jpeg_compress_struct.14*, i8**, i32*, i32)*, void (%struct.jpeg_compress_struct.14*, i8**, i32*, i32)** %115, align 8
  %117 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %118 = load i8**, i8*** %5, align 8
  %119 = load i32, i32* %6, align 4
  call void %116(%struct.jpeg_compress_struct.14* %117, i8** %118, i32* %7, i32 %119)
  %120 = load i32, i32* %7, align 4
  %121 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %4, align 8
  %122 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %121, i32 0, i32 36
  %123 = load i32, i32* %122, align 8
  %124 = add i32 %123, %120
  store i32 %124, i32* %122, align 8
  %125 = load i32, i32* %7, align 4
  ret i32 %125
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @jpeg_write_raw_data(%struct.jpeg_compress_struct.14* %0, i8*** %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.jpeg_compress_struct.14*, align 8
  %6 = alloca i8***, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.jpeg_compress_struct.14* %0, %struct.jpeg_compress_struct.14** %5, align 8
  store i8*** %1, i8**** %6, align 8
  store i32 %2, i32* %7, align 4
  %9 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %10 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %9, i32 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %11, 102
  br i1 %12, label %13, label %34

13:                                               ; preds = %3
  %14 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %14, i32 0, i32 0
  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i32 0, i32 5
  store i32 18, i32* %17, align 8
  %18 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %19 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %18, i32 0, i32 4
  %20 = load i32, i32* %19, align 4
  %21 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %21, i32 0, i32 0
  %23 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %23, i32 0, i32 6
  %25 = bitcast %union.anon* %24 to [8 x i32]*
  %26 = getelementptr inbounds [8 x i32], [8 x i32]* %25, i64 0, i64 0
  store i32 %20, i32* %26, align 4
  %27 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %28 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %27, i32 0, i32 0
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i32 0, i32 0
  %31 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %30, align 8
  %32 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %33 = bitcast %struct.jpeg_compress_struct.14* %32 to %struct.jpeg_common_struct*
  call void %31(%struct.jpeg_common_struct* %33)
  br label %34

34:                                               ; preds = %13, %3
  %35 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %36 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %35, i32 0, i32 36
  %37 = load i32, i32* %36, align 8
  %38 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %39 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %38, i32 0, i32 7
  %40 = load i32, i32* %39, align 4
  %41 = icmp uge i32 %37, %40
  br i1 %41, label %42, label %54

42:                                               ; preds = %34
  %43 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %44 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %43, i32 0, i32 0
  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i32 0, i32 5
  store i32 119, i32* %46, align 8
  %47 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %48 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %47, i32 0, i32 0
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i32 0, i32 1
  %51 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %50, align 8
  %52 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %53 = bitcast %struct.jpeg_compress_struct.14* %52 to %struct.jpeg_common_struct*
  call void %51(%struct.jpeg_common_struct* %53, i32 -1)
  store i32 0, i32* %4, align 4
  br label %136

54:                                               ; preds = %34
  %55 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %56 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %55, i32 0, i32 2
  %57 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %56, align 8
  %58 = icmp ne %struct.jpeg_progress_mgr* %57, null
  br i1 %58, label %59, label %84

59:                                               ; preds = %54
  %60 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %61 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %60, i32 0, i32 36
  %62 = load i32, i32* %61, align 8
  %63 = zext i32 %62 to i64
  %64 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %65 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %64, i32 0, i32 2
  %66 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %65, align 8
  %67 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %66, i32 0, i32 1
  store i64 %63, i64* %67, align 8
  %68 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %69 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %68, i32 0, i32 7
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %73 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %72, i32 0, i32 2
  %74 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %73, align 8
  %75 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %74, i32 0, i32 2
  store i64 %71, i64* %75, align 8
  %76 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %77 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %76, i32 0, i32 2
  %78 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %77, align 8
  %79 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %78, i32 0, i32 0
  %80 = bitcast {}** %79 to void (%struct.jpeg_common_struct*)**
  %81 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %80, align 8
  %82 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %83 = bitcast %struct.jpeg_compress_struct.14* %82 to %struct.jpeg_common_struct*
  call void %81(%struct.jpeg_common_struct* %83)
  br label %84

84:                                               ; preds = %59, %54
  %85 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %86 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %85, i32 0, i32 51
  %87 = load %struct.jpeg_comp_master.23*, %struct.jpeg_comp_master.23** %86, align 8
  %88 = getelementptr inbounds %struct.jpeg_comp_master.23, %struct.jpeg_comp_master.23* %87, i32 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %84
  %92 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %93 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %92, i32 0, i32 51
  %94 = load %struct.jpeg_comp_master.23*, %struct.jpeg_comp_master.23** %93, align 8
  %95 = getelementptr inbounds %struct.jpeg_comp_master.23, %struct.jpeg_comp_master.23* %94, i32 0, i32 1
  %96 = load void (%struct.jpeg_compress_struct.14*)*, void (%struct.jpeg_compress_struct.14*)** %95, align 8
  %97 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  call void %96(%struct.jpeg_compress_struct.14* %97)
  br label %98

98:                                               ; preds = %91, %84
  %99 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %100 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %99, i32 0, i32 39
  %101 = load i32, i32* %100, align 4
  %102 = mul nsw i32 %101, 8
  store i32 %102, i32* %8, align 4
  %103 = load i32, i32* %7, align 4
  %104 = load i32, i32* %8, align 4
  %105 = icmp ult i32 %103, %104
  br i1 %105, label %106, label %118

106:                                              ; preds = %98
  %107 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %108 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %107, i32 0, i32 0
  %109 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %108, align 8
  %110 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %109, i32 0, i32 5
  store i32 21, i32* %110, align 8
  %111 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %112 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %111, i32 0, i32 0
  %113 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %112, align 8
  %114 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %113, i32 0, i32 0
  %115 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %114, align 8
  %116 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %117 = bitcast %struct.jpeg_compress_struct.14* %116 to %struct.jpeg_common_struct*
  call void %115(%struct.jpeg_common_struct* %117)
  br label %118

118:                                              ; preds = %106, %98
  %119 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %120 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %119, i32 0, i32 54
  %121 = load %struct.jpeg_c_coef_controller.26*, %struct.jpeg_c_coef_controller.26** %120, align 8
  %122 = getelementptr inbounds %struct.jpeg_c_coef_controller.26, %struct.jpeg_c_coef_controller.26* %121, i32 0, i32 1
  %123 = load i32 (%struct.jpeg_compress_struct.14*, i8***)*, i32 (%struct.jpeg_compress_struct.14*, i8***)** %122, align 8
  %124 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %125 = load i8***, i8**** %6, align 8
  %126 = call i32 %123(%struct.jpeg_compress_struct.14* %124, i8*** %125)
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %129, label %128

128:                                              ; preds = %118
  store i32 0, i32* %4, align 4
  br label %136

129:                                              ; preds = %118
  %130 = load i32, i32* %8, align 4
  %131 = load %struct.jpeg_compress_struct.14*, %struct.jpeg_compress_struct.14** %5, align 8
  %132 = getelementptr inbounds %struct.jpeg_compress_struct.14, %struct.jpeg_compress_struct.14* %131, i32 0, i32 36
  %133 = load i32, i32* %132, align 8
  %134 = add i32 %133, %130
  store i32 %134, i32* %132, align 8
  %135 = load i32, i32* %8, align 4
  store i32 %135, i32* %4, align 4
  br label %136

136:                                              ; preds = %129, %128, %42
  %137 = load i32, i32* %4, align 4
  ret i32 %137
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_c_coef_controller(%struct.jpeg_compress_struct.36* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.36*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.my_coef_controller*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.jpeg_component_info*, align 8
  %8 = alloca [64 x i16]*, align 8
  %9 = alloca i32, align 4
  store %struct.jpeg_compress_struct.36* %0, %struct.jpeg_compress_struct.36** %3, align 8
  store i32 %1, i32* %4, align 4
  %10 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %10, i32 0, i32 1
  %12 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %12, i32 0, i32 0
  %14 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %13, align 8
  %15 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %16 = bitcast %struct.jpeg_compress_struct.36* %15 to %struct.jpeg_common_struct*
  %17 = call i8* %14(%struct.jpeg_common_struct* %16, i32 1, i64 192)
  %18 = bitcast i8* %17 to %struct.my_coef_controller*
  store %struct.my_coef_controller* %18, %struct.my_coef_controller** %5, align 8
  %19 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8
  %20 = bitcast %struct.my_coef_controller* %19 to %struct.jpeg_c_coef_controller.48*
  %21 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %21, i32 0, i32 54
  store %struct.jpeg_c_coef_controller.48* %20, %struct.jpeg_c_coef_controller.48** %22, align 8
  %23 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8
  %24 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %23, i32 0, i32 0
  %25 = getelementptr inbounds %struct.jpeg_c_coef_controller.48, %struct.jpeg_c_coef_controller.48* %24, i32 0, i32 0
  store void (%struct.jpeg_compress_struct.36*, i32)* @start_pass_coef, void (%struct.jpeg_compress_struct.36*, i32)** %25, align 8
  %26 = load i32, i32* %4, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %81

28:                                               ; preds = %2
  store i32 0, i32* %6, align 4
  %29 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %30 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %29, i32 0, i32 14
  %31 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %30, align 8
  store %struct.jpeg_component_info* %31, %struct.jpeg_component_info** %7, align 8
  br label %32

32:                                               ; preds = %75, %28
  %33 = load i32, i32* %6, align 4
  %34 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %34, i32 0, i32 12
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %33, %36
  br i1 %37, label %38, label %80

38:                                               ; preds = %32
  %39 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %40 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %39, i32 0, i32 1
  %41 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %41, i32 0, i32 5
  %43 = load %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)** %42, align 8
  %44 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %45 = bitcast %struct.jpeg_compress_struct.36* %44 to %struct.jpeg_common_struct*
  %46 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %47 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %46, i32 0, i32 7
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %51 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %50, i32 0, i32 2
  %52 = load i32, i32* %51, align 8
  %53 = sext i32 %52 to i64
  %54 = call i64 @jround_up(i64 %49, i64 %53)
  %55 = trunc i64 %54 to i32
  %56 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i32 0, i32 8
  %58 = load i32, i32* %57, align 8
  %59 = zext i32 %58 to i64
  %60 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %61 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %60, i32 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = call i64 @jround_up(i64 %59, i64 %63)
  %65 = trunc i64 %64 to i32
  %66 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %67 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %66, i32 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = call %struct.jvirt_barray_control* %43(%struct.jpeg_common_struct* %45, i32 1, i32 0, i32 %55, i32 %65, i32 %68)
  %70 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8
  %71 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %70, i32 0, i32 6
  %72 = load i32, i32* %6, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10 x %struct.jvirt_barray_control*]* %71, i64 0, i64 %73
  store %struct.jvirt_barray_control* %69, %struct.jvirt_barray_control** %74, align 8
  br label %75

75:                                               ; preds = %38
  %76 = load i32, i32* %6, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %6, align 4
  %78 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %79 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %78, i32 1
  store %struct.jpeg_component_info* %79, %struct.jpeg_component_info** %7, align 8
  br label %32

80:                                               ; preds = %32
  br label %111

81:                                               ; preds = %2
  %82 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %83 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %82, i32 0, i32 1
  %84 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %83, align 8
  %85 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %84, i32 0, i32 1
  %86 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %85, align 8
  %87 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %88 = bitcast %struct.jpeg_compress_struct.36* %87 to %struct.jpeg_common_struct*
  %89 = call i8* %86(%struct.jpeg_common_struct* %88, i32 1, i64 1280)
  %90 = bitcast i8* %89 to [64 x i16]*
  store [64 x i16]* %90, [64 x i16]** %8, align 8
  store i32 0, i32* %9, align 4
  br label %91

91:                                               ; preds = %104, %81
  %92 = load i32, i32* %9, align 4
  %93 = icmp slt i32 %92, 10
  br i1 %93, label %94, label %107

94:                                               ; preds = %91
  %95 = load [64 x i16]*, [64 x i16]** %8, align 8
  %96 = load i32, i32* %9, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [64 x i16], [64 x i16]* %95, i64 %97
  %99 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8
  %100 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %99, i32 0, i32 5
  %101 = load i32, i32* %9, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %100, i64 0, i64 %102
  store [64 x i16]* %98, [64 x i16]** %103, align 8
  br label %104

104:                                              ; preds = %94
  %105 = load i32, i32* %9, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %9, align 4
  br label %91

107:                                              ; preds = %91
  %108 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8
  %109 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %108, i32 0, i32 6
  %110 = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10 x %struct.jvirt_barray_control*]* %109, i64 0, i64 0
  store %struct.jvirt_barray_control* null, %struct.jvirt_barray_control** %110, align 8
  br label %111

111:                                              ; preds = %107, %80
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_coef(%struct.jpeg_compress_struct.36* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.36*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.my_coef_controller*, align 8
  store %struct.jpeg_compress_struct.36* %0, %struct.jpeg_compress_struct.36** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %6, i32 0, i32 54
  %8 = load %struct.jpeg_c_coef_controller.48*, %struct.jpeg_c_coef_controller.48** %7, align 8
  %9 = bitcast %struct.jpeg_c_coef_controller.48* %8 to %struct.my_coef_controller*
  store %struct.my_coef_controller* %9, %struct.my_coef_controller** %5, align 8
  %10 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8
  %11 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %10, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  call void @start_iMCU_row(%struct.jpeg_compress_struct.36* %12)
  %13 = load i32, i32* %4, align 4
  switch i32 %13, label %80 [
    i32 0, label %14
    i32 3, label %36
    i32 2, label %58
  ]

14:                                               ; preds = %2
  %15 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8
  %16 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %15, i32 0, i32 6
  %17 = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10 x %struct.jvirt_barray_control*]* %16, i64 0, i64 0
  %18 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %17, align 8
  %19 = icmp ne %struct.jvirt_barray_control* %18, null
  br i1 %19, label %20, label %32

20:                                               ; preds = %14
  %21 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %21, i32 0, i32 0
  %23 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %23, i32 0, i32 5
  store i32 4, i32* %24, align 8
  %25 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %25, i32 0, i32 0
  %27 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %26, align 8
  %28 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %27, i32 0, i32 0
  %29 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %28, align 8
  %30 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %31 = bitcast %struct.jpeg_compress_struct.36* %30 to %struct.jpeg_common_struct*
  call void %29(%struct.jpeg_common_struct* %31)
  br label %32

32:                                               ; preds = %20, %14
  %33 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8
  %34 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %33, i32 0, i32 0
  %35 = getelementptr inbounds %struct.jpeg_c_coef_controller.48, %struct.jpeg_c_coef_controller.48* %34, i32 0, i32 1
  store i32 (%struct.jpeg_compress_struct.36*, i8***)* @compress_data, i32 (%struct.jpeg_compress_struct.36*, i8***)** %35, align 8
  br label %92

36:                                               ; preds = %2
  %37 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8
  %38 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %37, i32 0, i32 6
  %39 = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10 x %struct.jvirt_barray_control*]* %38, i64 0, i64 0
  %40 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %39, align 8
  %41 = icmp eq %struct.jvirt_barray_control* %40, null
  br i1 %41, label %42, label %54

42:                                               ; preds = %36
  %43 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %44 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %43, i32 0, i32 0
  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i32 0, i32 5
  store i32 4, i32* %46, align 8
  %47 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %48 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %47, i32 0, i32 0
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i32 0, i32 0
  %51 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %50, align 8
  %52 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %53 = bitcast %struct.jpeg_compress_struct.36* %52 to %struct.jpeg_common_struct*
  call void %51(%struct.jpeg_common_struct* %53)
  br label %54

54:                                               ; preds = %42, %36
  %55 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8
  %56 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %55, i32 0, i32 0
  %57 = getelementptr inbounds %struct.jpeg_c_coef_controller.48, %struct.jpeg_c_coef_controller.48* %56, i32 0, i32 1
  store i32 (%struct.jpeg_compress_struct.36*, i8***)* @compress_first_pass, i32 (%struct.jpeg_compress_struct.36*, i8***)** %57, align 8
  br label %92

58:                                               ; preds = %2
  %59 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8
  %60 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %59, i32 0, i32 6
  %61 = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10 x %struct.jvirt_barray_control*]* %60, i64 0, i64 0
  %62 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %61, align 8
  %63 = icmp eq %struct.jvirt_barray_control* %62, null
  br i1 %63, label %64, label %76

64:                                               ; preds = %58
  %65 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %66 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %65, i32 0, i32 0
  %67 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %66, align 8
  %68 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %67, i32 0, i32 5
  store i32 4, i32* %68, align 8
  %69 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %70 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %69, i32 0, i32 0
  %71 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %70, align 8
  %72 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %71, i32 0, i32 0
  %73 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %72, align 8
  %74 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %75 = bitcast %struct.jpeg_compress_struct.36* %74 to %struct.jpeg_common_struct*
  call void %73(%struct.jpeg_common_struct* %75)
  br label %76

76:                                               ; preds = %64, %58
  %77 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8
  %78 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %77, i32 0, i32 0
  %79 = getelementptr inbounds %struct.jpeg_c_coef_controller.48, %struct.jpeg_c_coef_controller.48* %78, i32 0, i32 1
  store i32 (%struct.jpeg_compress_struct.36*, i8***)* @compress_output, i32 (%struct.jpeg_compress_struct.36*, i8***)** %79, align 8
  br label %92

80:                                               ; preds = %2
  %81 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %82 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %81, i32 0, i32 0
  %83 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %82, align 8
  %84 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %83, i32 0, i32 5
  store i32 4, i32* %84, align 8
  %85 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %86 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %85, i32 0, i32 0
  %87 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %86, align 8
  %88 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %87, i32 0, i32 0
  %89 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %88, align 8
  %90 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %91 = bitcast %struct.jpeg_compress_struct.36* %90 to %struct.jpeg_common_struct*
  call void %89(%struct.jpeg_common_struct* %91)
  br label %92

92:                                               ; preds = %80, %76, %54, %32
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_iMCU_row(%struct.jpeg_compress_struct.36* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.36*, align 8
  %3 = alloca %struct.my_coef_controller*, align 8
  store %struct.jpeg_compress_struct.36* %0, %struct.jpeg_compress_struct.36** %2, align 8
  %4 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %4, i32 0, i32 54
  %6 = load %struct.jpeg_c_coef_controller.48*, %struct.jpeg_c_coef_controller.48** %5, align 8
  %7 = bitcast %struct.jpeg_c_coef_controller.48* %6 to %struct.my_coef_controller*
  store %struct.my_coef_controller* %7, %struct.my_coef_controller** %3, align 8
  %8 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %8, i32 0, i32 41
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = load %struct.my_coef_controller*, %struct.my_coef_controller** %3, align 8
  %14 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %13, i32 0, i32 4
  store i32 1, i32* %14, align 4
  br label %43

15:                                               ; preds = %1
  %16 = load %struct.my_coef_controller*, %struct.my_coef_controller** %3, align 8
  %17 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %19, i32 0, i32 40
  %21 = load i32, i32* %20, align 8
  %22 = sub i32 %21, 1
  %23 = icmp ult i32 %18, %22
  br i1 %23, label %24, label %33

24:                                               ; preds = %15
  %25 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %2, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %25, i32 0, i32 42
  %27 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %26, i64 0, i64 0
  %28 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i32 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = load %struct.my_coef_controller*, %struct.my_coef_controller** %3, align 8
  %32 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %31, i32 0, i32 4
  store i32 %30, i32* %32, align 4
  br label %42

33:                                               ; preds = %15
  %34 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %34, i32 0, i32 42
  %36 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %35, i64 0, i64 0
  %37 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %37, i32 0, i32 18
  %39 = load i32, i32* %38, align 8
  %40 = load %struct.my_coef_controller*, %struct.my_coef_controller** %3, align 8
  %41 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %40, i32 0, i32 4
  store i32 %39, i32* %41, align 4
  br label %42

42:                                               ; preds = %33, %24
  br label %43

43:                                               ; preds = %42, %12
  %44 = load %struct.my_coef_controller*, %struct.my_coef_controller** %3, align 8
  %45 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %44, i32 0, i32 2
  store i32 0, i32* %45, align 4
  %46 = load %struct.my_coef_controller*, %struct.my_coef_controller** %3, align 8
  %47 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %46, i32 0, i32 3
  store i32 0, i32* %47, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @compress_data(%struct.jpeg_compress_struct.36* %0, i8*** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_compress_struct.36*, align 8
  %5 = alloca i8***, align 8
  %6 = alloca %struct.my_coef_controller*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_compress_struct.36* %0, %struct.jpeg_compress_struct.36** %4, align 8
  store i8*** %1, i8**** %5, align 8
  %19 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %19, i32 0, i32 54
  %21 = load %struct.jpeg_c_coef_controller.48*, %struct.jpeg_c_coef_controller.48** %20, align 8
  %22 = bitcast %struct.jpeg_c_coef_controller.48* %21 to %struct.my_coef_controller*
  store %struct.my_coef_controller* %22, %struct.my_coef_controller** %6, align 8
  %23 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %23, i32 0, i32 43
  %25 = load i32, i32* %24, align 8
  %26 = sub i32 %25, 1
  store i32 %26, i32* %8, align 4
  %27 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %28 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %27, i32 0, i32 40
  %29 = load i32, i32* %28, align 8
  %30 = sub i32 %29, 1
  store i32 %30, i32* %9, align 4
  %31 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %32 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %31, i32 0, i32 3
  %33 = load i32, i32* %32, align 8
  store i32 %33, i32* %14, align 4
  br label %34

34:                                               ; preds = %266, %2
  %35 = load i32, i32* %14, align 4
  %36 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %37 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %36, i32 0, i32 4
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %35, %38
  br i1 %39, label %40, label %269

40:                                               ; preds = %34
  %41 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %42 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %41, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %7, align 4
  br label %44

44:                                               ; preds = %260, %40
  %45 = load i32, i32* %7, align 4
  %46 = load i32, i32* %8, align 4
  %47 = icmp ule i32 %45, %46
  br i1 %47, label %48, label %263

48:                                               ; preds = %44
  store i32 0, i32* %10, align 4
  store i32 0, i32* %12, align 4
  br label %49

49:                                               ; preds = %237, %48
  %50 = load i32, i32* %12, align 4
  %51 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %52 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %51, i32 0, i32 41
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %50, %53
  br i1 %54, label %55, label %240

55:                                               ; preds = %49
  %56 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %57 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %56, i32 0, i32 42
  %58 = load i32, i32* %12, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %57, i64 0, i64 %59
  %61 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %60, align 8
  store %struct.jpeg_component_info* %61, %struct.jpeg_component_info** %18, align 8
  %62 = load i32, i32* %7, align 4
  %63 = load i32, i32* %8, align 4
  %64 = icmp ult i32 %62, %63
  br i1 %64, label %65, label %69

65:                                               ; preds = %55
  %66 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8
  %67 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %66, i32 0, i32 13
  %68 = load i32, i32* %67, align 4
  br label %73

69:                                               ; preds = %55
  %70 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8
  %71 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %70, i32 0, i32 17
  %72 = load i32, i32* %71, align 4
  br label %73

73:                                               ; preds = %69, %65
  %74 = phi i32 [ %68, %65 ], [ %72, %69 ]
  store i32 %74, i32* %15, align 4
  %75 = load i32, i32* %7, align 4
  %76 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8
  %77 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %76, i32 0, i32 16
  %78 = load i32, i32* %77, align 8
  %79 = mul i32 %75, %78
  store i32 %79, i32* %17, align 4
  %80 = load i32, i32* %14, align 4
  %81 = mul nsw i32 %80, 8
  store i32 %81, i32* %16, align 4
  store i32 0, i32* %13, align 4
  br label %82

82:                                               ; preds = %233, %73
  %83 = load i32, i32* %13, align 4
  %84 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8
  %85 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %84, i32 0, i32 14
  %86 = load i32, i32* %85, align 8
  %87 = icmp slt i32 %83, %86
  br i1 %87, label %88, label %236

88:                                               ; preds = %82
  %89 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %90 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %89, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = load i32, i32* %9, align 4
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %102, label %94

94:                                               ; preds = %88
  %95 = load i32, i32* %14, align 4
  %96 = load i32, i32* %13, align 4
  %97 = add nsw i32 %95, %96
  %98 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8
  %99 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %98, i32 0, i32 18
  %100 = load i32, i32* %99, align 8
  %101 = icmp slt i32 %97, %100
  br i1 %101, label %102, label %181

102:                                              ; preds = %94, %88
  %103 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %104 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %103, i32 0, i32 58
  %105 = load %struct.jpeg_forward_dct.52*, %struct.jpeg_forward_dct.52** %104, align 8
  %106 = getelementptr inbounds %struct.jpeg_forward_dct.52, %struct.jpeg_forward_dct.52* %105, i32 0, i32 1
  %107 = load void (%struct.jpeg_compress_struct.36*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)*, void (%struct.jpeg_compress_struct.36*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)** %106, align 8
  %108 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %109 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8
  %110 = load i8***, i8**** %5, align 8
  %111 = load i32, i32* %12, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i8**, i8*** %110, i64 %112
  %114 = load i8**, i8*** %113, align 8
  %115 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %116 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %115, i32 0, i32 5
  %117 = load i32, i32* %10, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %116, i64 0, i64 %118
  %120 = load [64 x i16]*, [64 x i16]** %119, align 8
  %121 = load i32, i32* %16, align 4
  %122 = load i32, i32* %17, align 4
  %123 = load i32, i32* %15, align 4
  call void %107(%struct.jpeg_compress_struct.36* %108, %struct.jpeg_component_info* %109, i8** %114, [64 x i16]* %120, i32 %121, i32 %122, i32 %123)
  %124 = load i32, i32* %15, align 4
  %125 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8
  %126 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %125, i32 0, i32 13
  %127 = load i32, i32* %126, align 4
  %128 = icmp slt i32 %124, %127
  br i1 %128, label %129, label %180

129:                                              ; preds = %102
  %130 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %131 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %130, i32 0, i32 5
  %132 = load i32, i32* %10, align 4
  %133 = load i32, i32* %15, align 4
  %134 = add nsw i32 %132, %133
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %131, i64 0, i64 %135
  %137 = load [64 x i16]*, [64 x i16]** %136, align 8
  %138 = bitcast [64 x i16]* %137 to i8*
  %139 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8
  %140 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %139, i32 0, i32 13
  %141 = load i32, i32* %140, align 4
  %142 = load i32, i32* %15, align 4
  %143 = sub nsw i32 %141, %142
  %144 = sext i32 %143 to i64
  %145 = mul i64 %144, 128
  call void @jzero_far(i8* %138, i64 %145)
  %146 = load i32, i32* %15, align 4
  store i32 %146, i32* %11, align 4
  br label %147

147:                                              ; preds = %176, %129
  %148 = load i32, i32* %11, align 4
  %149 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8
  %150 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %149, i32 0, i32 13
  %151 = load i32, i32* %150, align 4
  %152 = icmp slt i32 %148, %151
  br i1 %152, label %153, label %179

153:                                              ; preds = %147
  %154 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %155 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %154, i32 0, i32 5
  %156 = load i32, i32* %10, align 4
  %157 = load i32, i32* %11, align 4
  %158 = add nsw i32 %156, %157
  %159 = sub nsw i32 %158, 1
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %155, i64 0, i64 %160
  %162 = load [64 x i16]*, [64 x i16]** %161, align 8
  %163 = getelementptr inbounds [64 x i16], [64 x i16]* %162, i64 0
  %164 = getelementptr inbounds [64 x i16], [64 x i16]* %163, i64 0, i64 0
  %165 = load i16, i16* %164, align 2
  %166 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %167 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %166, i32 0, i32 5
  %168 = load i32, i32* %10, align 4
  %169 = load i32, i32* %11, align 4
  %170 = add nsw i32 %168, %169
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %167, i64 0, i64 %171
  %173 = load [64 x i16]*, [64 x i16]** %172, align 8
  %174 = getelementptr inbounds [64 x i16], [64 x i16]* %173, i64 0
  %175 = getelementptr inbounds [64 x i16], [64 x i16]* %174, i64 0, i64 0
  store i16 %165, i16* %175, align 2
  br label %176

176:                                              ; preds = %153
  %177 = load i32, i32* %11, align 4
  %178 = add nsw i32 %177, 1
  store i32 %178, i32* %11, align 4
  br label %147

179:                                              ; preds = %147
  br label %180

180:                                              ; preds = %179, %102
  br label %225

181:                                              ; preds = %94
  %182 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %183 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %182, i32 0, i32 5
  %184 = load i32, i32* %10, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %183, i64 0, i64 %185
  %187 = load [64 x i16]*, [64 x i16]** %186, align 8
  %188 = bitcast [64 x i16]* %187 to i8*
  %189 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8
  %190 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %189, i32 0, i32 13
  %191 = load i32, i32* %190, align 4
  %192 = sext i32 %191 to i64
  %193 = mul i64 %192, 128
  call void @jzero_far(i8* %188, i64 %193)
  store i32 0, i32* %11, align 4
  br label %194

194:                                              ; preds = %221, %181
  %195 = load i32, i32* %11, align 4
  %196 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8
  %197 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %196, i32 0, i32 13
  %198 = load i32, i32* %197, align 4
  %199 = icmp slt i32 %195, %198
  br i1 %199, label %200, label %224

200:                                              ; preds = %194
  %201 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %202 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %201, i32 0, i32 5
  %203 = load i32, i32* %10, align 4
  %204 = sub nsw i32 %203, 1
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %202, i64 0, i64 %205
  %207 = load [64 x i16]*, [64 x i16]** %206, align 8
  %208 = getelementptr inbounds [64 x i16], [64 x i16]* %207, i64 0
  %209 = getelementptr inbounds [64 x i16], [64 x i16]* %208, i64 0, i64 0
  %210 = load i16, i16* %209, align 2
  %211 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %212 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %211, i32 0, i32 5
  %213 = load i32, i32* %10, align 4
  %214 = load i32, i32* %11, align 4
  %215 = add nsw i32 %213, %214
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %212, i64 0, i64 %216
  %218 = load [64 x i16]*, [64 x i16]** %217, align 8
  %219 = getelementptr inbounds [64 x i16], [64 x i16]* %218, i64 0
  %220 = getelementptr inbounds [64 x i16], [64 x i16]* %219, i64 0, i64 0
  store i16 %210, i16* %220, align 2
  br label %221

221:                                              ; preds = %200
  %222 = load i32, i32* %11, align 4
  %223 = add nsw i32 %222, 1
  store i32 %223, i32* %11, align 4
  br label %194

224:                                              ; preds = %194
  br label %225

225:                                              ; preds = %224, %180
  %226 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8
  %227 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %226, i32 0, i32 13
  %228 = load i32, i32* %227, align 4
  %229 = load i32, i32* %10, align 4
  %230 = add nsw i32 %229, %228
  store i32 %230, i32* %10, align 4
  %231 = load i32, i32* %16, align 4
  %232 = add i32 %231, 8
  store i32 %232, i32* %16, align 4
  br label %233

233:                                              ; preds = %225
  %234 = load i32, i32* %13, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %13, align 4
  br label %82

236:                                              ; preds = %82
  br label %237

237:                                              ; preds = %236
  %238 = load i32, i32* %12, align 4
  %239 = add nsw i32 %238, 1
  store i32 %239, i32* %12, align 4
  br label %49

240:                                              ; preds = %49
  %241 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %242 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %241, i32 0, i32 59
  %243 = load %struct.jpeg_entropy_encoder.53*, %struct.jpeg_entropy_encoder.53** %242, align 8
  %244 = getelementptr inbounds %struct.jpeg_entropy_encoder.53, %struct.jpeg_entropy_encoder.53* %243, i32 0, i32 1
  %245 = load i32 (%struct.jpeg_compress_struct.36*, [64 x i16]**)*, i32 (%struct.jpeg_compress_struct.36*, [64 x i16]**)** %244, align 8
  %246 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %247 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %248 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %247, i32 0, i32 5
  %249 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %248, i64 0, i64 0
  %250 = call i32 %245(%struct.jpeg_compress_struct.36* %246, [64 x i16]** %249)
  %251 = icmp ne i32 %250, 0
  br i1 %251, label %259, label %252

252:                                              ; preds = %240
  %253 = load i32, i32* %14, align 4
  %254 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %255 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %254, i32 0, i32 3
  store i32 %253, i32* %255, align 8
  %256 = load i32, i32* %7, align 4
  %257 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %258 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %257, i32 0, i32 2
  store i32 %256, i32* %258, align 4
  store i32 0, i32* %3, align 4
  br label %275

259:                                              ; preds = %240
  br label %260

260:                                              ; preds = %259
  %261 = load i32, i32* %7, align 4
  %262 = add i32 %261, 1
  store i32 %262, i32* %7, align 4
  br label %44

263:                                              ; preds = %44
  %264 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %265 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %264, i32 0, i32 2
  store i32 0, i32* %265, align 4
  br label %266

266:                                              ; preds = %263
  %267 = load i32, i32* %14, align 4
  %268 = add nsw i32 %267, 1
  store i32 %268, i32* %14, align 4
  br label %34

269:                                              ; preds = %34
  %270 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %271 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %270, i32 0, i32 1
  %272 = load i32, i32* %271, align 8
  %273 = add i32 %272, 1
  store i32 %273, i32* %271, align 8
  %274 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  call void @start_iMCU_row(%struct.jpeg_compress_struct.36* %274)
  store i32 1, i32* %3, align 4
  br label %275

275:                                              ; preds = %269, %252
  %276 = load i32, i32* %3, align 4
  ret i32 %276
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @compress_first_pass(%struct.jpeg_compress_struct.36* %0, i8*** %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.36*, align 8
  %4 = alloca i8***, align 8
  %5 = alloca %struct.my_coef_controller*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i16, align 2
  %17 = alloca %struct.jpeg_component_info*, align 8
  %18 = alloca [64 x i16]**, align 8
  %19 = alloca [64 x i16]*, align 8
  %20 = alloca [64 x i16]*, align 8
  store %struct.jpeg_compress_struct.36* %0, %struct.jpeg_compress_struct.36** %3, align 8
  store i8*** %1, i8**** %4, align 8
  %21 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %21, i32 0, i32 54
  %23 = load %struct.jpeg_c_coef_controller.48*, %struct.jpeg_c_coef_controller.48** %22, align 8
  %24 = bitcast %struct.jpeg_c_coef_controller.48* %23 to %struct.my_coef_controller*
  store %struct.my_coef_controller* %24, %struct.my_coef_controller** %5, align 8
  %25 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %25, i32 0, i32 40
  %27 = load i32, i32* %26, align 8
  %28 = sub i32 %27, 1
  store i32 %28, i32* %6, align 4
  store i32 0, i32* %11, align 4
  %29 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %30 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %29, i32 0, i32 14
  %31 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %30, align 8
  store %struct.jpeg_component_info* %31, %struct.jpeg_component_info** %17, align 8
  br label %32

32:                                               ; preds = %246, %2
  %33 = load i32, i32* %11, align 4
  %34 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %34, i32 0, i32 12
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %33, %36
  br i1 %37, label %38, label %251

38:                                               ; preds = %32
  %39 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %40 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %39, i32 0, i32 1
  %41 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %41, i32 0, i32 8
  %43 = load [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)** %42, align 8
  %44 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %45 = bitcast %struct.jpeg_compress_struct.36* %44 to %struct.jpeg_common_struct*
  %46 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8
  %47 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %46, i32 0, i32 6
  %48 = load i32, i32* %11, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10 x %struct.jvirt_barray_control*]* %47, i64 0, i64 %49
  %51 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %50, align 8
  %52 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8
  %53 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %52, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %17, align 8
  %56 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %55, i32 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = mul i32 %54, %57
  %59 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %17, align 8
  %60 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %59, i32 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = call [64 x i16]** %43(%struct.jpeg_common_struct* %45, %struct.jvirt_barray_control* %51, i32 %58, i32 %61, i32 1)
  store [64 x i16]** %62, [64 x i16]*** %18, align 8
  %63 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8
  %64 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %63, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = load i32, i32* %6, align 4
  %67 = icmp ult i32 %65, %66
  br i1 %67, label %68, label %72

68:                                               ; preds = %38
  %69 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %17, align 8
  %70 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %69, i32 0, i32 3
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %14, align 4
  br label %87

72:                                               ; preds = %38
  %73 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %17, align 8
  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i32 0, i32 8
  %75 = load i32, i32* %74, align 8
  %76 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %17, align 8
  %77 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %76, i32 0, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = urem i32 %75, %78
  store i32 %79, i32* %14, align 4
  %80 = load i32, i32* %14, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %72
  %83 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %17, align 8
  %84 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %83, i32 0, i32 3
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %14, align 4
  br label %86

86:                                               ; preds = %82, %72
  br label %87

87:                                               ; preds = %86, %68
  %88 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %17, align 8
  %89 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %88, i32 0, i32 7
  %90 = load i32, i32* %89, align 4
  store i32 %90, i32* %7, align 4
  %91 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %17, align 8
  %92 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %91, i32 0, i32 2
  %93 = load i32, i32* %92, align 8
  store i32 %93, i32* %12, align 4
  %94 = load i32, i32* %7, align 4
  %95 = load i32, i32* %12, align 4
  %96 = urem i32 %94, %95
  store i32 %96, i32* %15, align 4
  %97 = load i32, i32* %15, align 4
  %98 = icmp sgt i32 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %87
  %100 = load i32, i32* %12, align 4
  %101 = load i32, i32* %15, align 4
  %102 = sub nsw i32 %100, %101
  store i32 %102, i32* %15, align 4
  br label %103

103:                                              ; preds = %99, %87
  store i32 0, i32* %13, align 4
  br label %104

104:                                              ; preds = %162, %103
  %105 = load i32, i32* %13, align 4
  %106 = load i32, i32* %14, align 4
  %107 = icmp slt i32 %105, %106
  br i1 %107, label %108, label %165

108:                                              ; preds = %104
  %109 = load [64 x i16]**, [64 x i16]*** %18, align 8
  %110 = load i32, i32* %13, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [64 x i16]*, [64 x i16]** %109, i64 %111
  %113 = load [64 x i16]*, [64 x i16]** %112, align 8
  store [64 x i16]* %113, [64 x i16]** %19, align 8
  %114 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %115 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %114, i32 0, i32 58
  %116 = load %struct.jpeg_forward_dct.52*, %struct.jpeg_forward_dct.52** %115, align 8
  %117 = getelementptr inbounds %struct.jpeg_forward_dct.52, %struct.jpeg_forward_dct.52* %116, i32 0, i32 1
  %118 = load void (%struct.jpeg_compress_struct.36*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)*, void (%struct.jpeg_compress_struct.36*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)** %117, align 8
  %119 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %120 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %17, align 8
  %121 = load i8***, i8**** %4, align 8
  %122 = load i32, i32* %11, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8**, i8*** %121, i64 %123
  %125 = load i8**, i8*** %124, align 8
  %126 = load [64 x i16]*, [64 x i16]** %19, align 8
  %127 = load i32, i32* %13, align 4
  %128 = mul nsw i32 %127, 8
  %129 = load i32, i32* %7, align 4
  call void %118(%struct.jpeg_compress_struct.36* %119, %struct.jpeg_component_info* %120, i8** %125, [64 x i16]* %126, i32 %128, i32 0, i32 %129)
  %130 = load i32, i32* %15, align 4
  %131 = icmp sgt i32 %130, 0
  br i1 %131, label %132, label %161

132:                                              ; preds = %108
  %133 = load i32, i32* %7, align 4
  %134 = load [64 x i16]*, [64 x i16]** %19, align 8
  %135 = zext i32 %133 to i64
  %136 = getelementptr inbounds [64 x i16], [64 x i16]* %134, i64 %135
  store [64 x i16]* %136, [64 x i16]** %19, align 8
  %137 = load [64 x i16]*, [64 x i16]** %19, align 8
  %138 = bitcast [64 x i16]* %137 to i8*
  %139 = load i32, i32* %15, align 4
  %140 = sext i32 %139 to i64
  %141 = mul i64 %140, 128
  call void @jzero_far(i8* %138, i64 %141)
  %142 = load [64 x i16]*, [64 x i16]** %19, align 8
  %143 = getelementptr inbounds [64 x i16], [64 x i16]* %142, i64 -1
  %144 = getelementptr inbounds [64 x i16], [64 x i16]* %143, i64 0, i64 0
  %145 = load i16, i16* %144, align 2
  store i16 %145, i16* %16, align 2
  store i32 0, i32* %10, align 4
  br label %146

146:                                              ; preds = %157, %132
  %147 = load i32, i32* %10, align 4
  %148 = load i32, i32* %15, align 4
  %149 = icmp slt i32 %147, %148
  br i1 %149, label %150, label %160

150:                                              ; preds = %146
  %151 = load i16, i16* %16, align 2
  %152 = load [64 x i16]*, [64 x i16]** %19, align 8
  %153 = load i32, i32* %10, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds [64 x i16], [64 x i16]* %152, i64 %154
  %156 = getelementptr inbounds [64 x i16], [64 x i16]* %155, i64 0, i64 0
  store i16 %151, i16* %156, align 2
  br label %157

157:                                              ; preds = %150
  %158 = load i32, i32* %10, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %10, align 4
  br label %146

160:                                              ; preds = %146
  br label %161

161:                                              ; preds = %160, %108
  br label %162

162:                                              ; preds = %161
  %163 = load i32, i32* %13, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %13, align 4
  br label %104

165:                                              ; preds = %104
  %166 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8
  %167 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %166, i32 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = load i32, i32* %6, align 4
  %170 = icmp eq i32 %168, %169
  br i1 %170, label %171, label %245

171:                                              ; preds = %165
  %172 = load i32, i32* %15, align 4
  %173 = load i32, i32* %7, align 4
  %174 = add i32 %173, %172
  store i32 %174, i32* %7, align 4
  %175 = load i32, i32* %7, align 4
  %176 = load i32, i32* %12, align 4
  %177 = udiv i32 %175, %176
  store i32 %177, i32* %8, align 4
  %178 = load i32, i32* %14, align 4
  store i32 %178, i32* %13, align 4
  br label %179

179:                                              ; preds = %241, %171
  %180 = load i32, i32* %13, align 4
  %181 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %17, align 8
  %182 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %181, i32 0, i32 3
  %183 = load i32, i32* %182, align 4
  %184 = icmp slt i32 %180, %183
  br i1 %184, label %185, label %244

185:                                              ; preds = %179
  %186 = load [64 x i16]**, [64 x i16]*** %18, align 8
  %187 = load i32, i32* %13, align 4
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds [64 x i16]*, [64 x i16]** %186, i64 %188
  %190 = load [64 x i16]*, [64 x i16]** %189, align 8
  store [64 x i16]* %190, [64 x i16]** %19, align 8
  %191 = load [64 x i16]**, [64 x i16]*** %18, align 8
  %192 = load i32, i32* %13, align 4
  %193 = sub nsw i32 %192, 1
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [64 x i16]*, [64 x i16]** %191, i64 %194
  %196 = load [64 x i16]*, [64 x i16]** %195, align 8
  store [64 x i16]* %196, [64 x i16]** %20, align 8
  %197 = load [64 x i16]*, [64 x i16]** %19, align 8
  %198 = bitcast [64 x i16]* %197 to i8*
  %199 = load i32, i32* %7, align 4
  %200 = zext i32 %199 to i64
  %201 = mul i64 %200, 128
  call void @jzero_far(i8* %198, i64 %201)
  store i32 0, i32* %9, align 4
  br label %202

202:                                              ; preds = %237, %185
  %203 = load i32, i32* %9, align 4
  %204 = load i32, i32* %8, align 4
  %205 = icmp ult i32 %203, %204
  br i1 %205, label %206, label %240

206:                                              ; preds = %202
  %207 = load [64 x i16]*, [64 x i16]** %20, align 8
  %208 = load i32, i32* %12, align 4
  %209 = sub nsw i32 %208, 1
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds [64 x i16], [64 x i16]* %207, i64 %210
  %212 = getelementptr inbounds [64 x i16], [64 x i16]* %211, i64 0, i64 0
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %16, align 2
  store i32 0, i32* %10, align 4
  br label %214

214:                                              ; preds = %225, %206
  %215 = load i32, i32* %10, align 4
  %216 = load i32, i32* %12, align 4
  %217 = icmp slt i32 %215, %216
  br i1 %217, label %218, label %228

218:                                              ; preds = %214
  %219 = load i16, i16* %16, align 2
  %220 = load [64 x i16]*, [64 x i16]** %19, align 8
  %221 = load i32, i32* %10, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds [64 x i16], [64 x i16]* %220, i64 %222
  %224 = getelementptr inbounds [64 x i16], [64 x i16]* %223, i64 0, i64 0
  store i16 %219, i16* %224, align 2
  br label %225

225:                                              ; preds = %218
  %226 = load i32, i32* %10, align 4
  %227 = add nsw i32 %226, 1
  store i32 %227, i32* %10, align 4
  br label %214

228:                                              ; preds = %214
  %229 = load i32, i32* %12, align 4
  %230 = load [64 x i16]*, [64 x i16]** %19, align 8
  %231 = sext i32 %229 to i64
  %232 = getelementptr inbounds [64 x i16], [64 x i16]* %230, i64 %231
  store [64 x i16]* %232, [64 x i16]** %19, align 8
  %233 = load i32, i32* %12, align 4
  %234 = load [64 x i16]*, [64 x i16]** %20, align 8
  %235 = sext i32 %233 to i64
  %236 = getelementptr inbounds [64 x i16], [64 x i16]* %234, i64 %235
  store [64 x i16]* %236, [64 x i16]** %20, align 8
  br label %237

237:                                              ; preds = %228
  %238 = load i32, i32* %9, align 4
  %239 = add i32 %238, 1
  store i32 %239, i32* %9, align 4
  br label %202

240:                                              ; preds = %202
  br label %241

241:                                              ; preds = %240
  %242 = load i32, i32* %13, align 4
  %243 = add nsw i32 %242, 1
  store i32 %243, i32* %13, align 4
  br label %179

244:                                              ; preds = %179
  br label %245

245:                                              ; preds = %244, %165
  br label %246

246:                                              ; preds = %245
  %247 = load i32, i32* %11, align 4
  %248 = add nsw i32 %247, 1
  store i32 %248, i32* %11, align 4
  %249 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %17, align 8
  %250 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %249, i32 1
  store %struct.jpeg_component_info* %250, %struct.jpeg_component_info** %17, align 8
  br label %32

251:                                              ; preds = %32
  %252 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %3, align 8
  %253 = load i8***, i8**** %4, align 8
  %254 = call i32 @compress_output(%struct.jpeg_compress_struct.36* %252, i8*** %253)
  ret i32 %254
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @compress_output(%struct.jpeg_compress_struct.36* %0, i8*** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_compress_struct.36*, align 8
  %5 = alloca i8***, align 8
  %6 = alloca %struct.my_coef_controller*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca [4 x [64 x i16]**], align 16
  %15 = alloca [64 x i16]*, align 8
  %16 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_compress_struct.36* %0, %struct.jpeg_compress_struct.36** %4, align 8
  store i8*** %1, i8**** %5, align 8
  %17 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %17, i32 0, i32 54
  %19 = load %struct.jpeg_c_coef_controller.48*, %struct.jpeg_c_coef_controller.48** %18, align 8
  %20 = bitcast %struct.jpeg_c_coef_controller.48* %19 to %struct.my_coef_controller*
  store %struct.my_coef_controller* %20, %struct.my_coef_controller** %6, align 8
  store i32 0, i32* %9, align 4
  br label %21

21:                                               ; preds = %63, %2
  %22 = load i32, i32* %9, align 4
  %23 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %23, i32 0, i32 41
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %22, %25
  br i1 %26, label %27, label %66

27:                                               ; preds = %21
  %28 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %29 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %28, i32 0, i32 42
  %30 = load i32, i32* %9, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %29, i64 0, i64 %31
  %33 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %32, align 8
  store %struct.jpeg_component_info* %33, %struct.jpeg_component_info** %16, align 8
  %34 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %34, i32 0, i32 1
  %36 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %36, i32 0, i32 8
  %38 = load [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)** %37, align 8
  %39 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %40 = bitcast %struct.jpeg_compress_struct.36* %39 to %struct.jpeg_common_struct*
  %41 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %42 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %41, i32 0, i32 6
  %43 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %44 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10 x %struct.jvirt_barray_control*]* %42, i64 0, i64 %46
  %48 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %47, align 8
  %49 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %50 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %52, i32 0, i32 3
  %54 = load i32, i32* %53, align 4
  %55 = mul i32 %51, %54
  %56 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i32 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = call [64 x i16]** %38(%struct.jpeg_common_struct* %40, %struct.jvirt_barray_control* %48, i32 %55, i32 %58, i32 0)
  %60 = load i32, i32* %9, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [4 x [64 x i16]**], [4 x [64 x i16]**]* %14, i64 0, i64 %61
  store [64 x i16]** %59, [64 x i16]*** %62, align 8
  br label %63

63:                                               ; preds = %27
  %64 = load i32, i32* %9, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %9, align 4
  br label %21

66:                                               ; preds = %21
  %67 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %68 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %67, i32 0, i32 3
  %69 = load i32, i32* %68, align 8
  store i32 %69, i32* %12, align 4
  br label %70

70:                                               ; preds = %177, %66
  %71 = load i32, i32* %12, align 4
  %72 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %73 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %72, i32 0, i32 4
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %71, %74
  br i1 %75, label %76, label %180

76:                                               ; preds = %70
  %77 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %78 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %77, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %7, align 4
  br label %80

80:                                               ; preds = %171, %76
  %81 = load i32, i32* %7, align 4
  %82 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %83 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %82, i32 0, i32 43
  %84 = load i32, i32* %83, align 8
  %85 = icmp ult i32 %81, %84
  br i1 %85, label %86, label %174

86:                                               ; preds = %80
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  br label %87

87:                                               ; preds = %148, %86
  %88 = load i32, i32* %9, align 4
  %89 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %90 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %89, i32 0, i32 41
  %91 = load i32, i32* %90, align 4
  %92 = icmp slt i32 %88, %91
  br i1 %92, label %93, label %151

93:                                               ; preds = %87
  %94 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %95 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %94, i32 0, i32 42
  %96 = load i32, i32* %9, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %95, i64 0, i64 %97
  %99 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %98, align 8
  store %struct.jpeg_component_info* %99, %struct.jpeg_component_info** %16, align 8
  %100 = load i32, i32* %7, align 4
  %101 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %102 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %101, i32 0, i32 13
  %103 = load i32, i32* %102, align 4
  %104 = mul i32 %100, %103
  store i32 %104, i32* %13, align 4
  store i32 0, i32* %11, align 4
  br label %105

105:                                              ; preds = %144, %93
  %106 = load i32, i32* %11, align 4
  %107 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %108 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %107, i32 0, i32 14
  %109 = load i32, i32* %108, align 8
  %110 = icmp slt i32 %106, %109
  br i1 %110, label %111, label %147

111:                                              ; preds = %105
  %112 = load i32, i32* %9, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [4 x [64 x i16]**], [4 x [64 x i16]**]* %14, i64 0, i64 %113
  %115 = load [64 x i16]**, [64 x i16]*** %114, align 8
  %116 = load i32, i32* %11, align 4
  %117 = load i32, i32* %12, align 4
  %118 = add nsw i32 %116, %117
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [64 x i16]*, [64 x i16]** %115, i64 %119
  %121 = load [64 x i16]*, [64 x i16]** %120, align 8
  %122 = load i32, i32* %13, align 4
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds [64 x i16], [64 x i16]* %121, i64 %123
  store [64 x i16]* %124, [64 x i16]** %15, align 8
  store i32 0, i32* %10, align 4
  br label %125

125:                                              ; preds = %140, %111
  %126 = load i32, i32* %10, align 4
  %127 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %128 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %127, i32 0, i32 13
  %129 = load i32, i32* %128, align 4
  %130 = icmp slt i32 %126, %129
  br i1 %130, label %131, label %143

131:                                              ; preds = %125
  %132 = load [64 x i16]*, [64 x i16]** %15, align 8
  %133 = getelementptr inbounds [64 x i16], [64 x i16]* %132, i32 1
  store [64 x i16]* %133, [64 x i16]** %15, align 8
  %134 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %135 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %134, i32 0, i32 5
  %136 = load i32, i32* %8, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %8, align 4
  %138 = sext i32 %136 to i64
  %139 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %135, i64 0, i64 %138
  store [64 x i16]* %132, [64 x i16]** %139, align 8
  br label %140

140:                                              ; preds = %131
  %141 = load i32, i32* %10, align 4
  %142 = add nsw i32 %141, 1
  store i32 %142, i32* %10, align 4
  br label %125

143:                                              ; preds = %125
  br label %144

144:                                              ; preds = %143
  %145 = load i32, i32* %11, align 4
  %146 = add nsw i32 %145, 1
  store i32 %146, i32* %11, align 4
  br label %105

147:                                              ; preds = %105
  br label %148

148:                                              ; preds = %147
  %149 = load i32, i32* %9, align 4
  %150 = add nsw i32 %149, 1
  store i32 %150, i32* %9, align 4
  br label %87

151:                                              ; preds = %87
  %152 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %153 = getelementptr inbounds %struct.jpeg_compress_struct.36, %struct.jpeg_compress_struct.36* %152, i32 0, i32 59
  %154 = load %struct.jpeg_entropy_encoder.53*, %struct.jpeg_entropy_encoder.53** %153, align 8
  %155 = getelementptr inbounds %struct.jpeg_entropy_encoder.53, %struct.jpeg_entropy_encoder.53* %154, i32 0, i32 1
  %156 = load i32 (%struct.jpeg_compress_struct.36*, [64 x i16]**)*, i32 (%struct.jpeg_compress_struct.36*, [64 x i16]**)** %155, align 8
  %157 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  %158 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %159 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %158, i32 0, i32 5
  %160 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %159, i64 0, i64 0
  %161 = call i32 %156(%struct.jpeg_compress_struct.36* %157, [64 x i16]** %160)
  %162 = icmp ne i32 %161, 0
  br i1 %162, label %170, label %163

163:                                              ; preds = %151
  %164 = load i32, i32* %12, align 4
  %165 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %166 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %165, i32 0, i32 3
  store i32 %164, i32* %166, align 8
  %167 = load i32, i32* %7, align 4
  %168 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %169 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %168, i32 0, i32 2
  store i32 %167, i32* %169, align 4
  store i32 0, i32* %3, align 4
  br label %186

170:                                              ; preds = %151
  br label %171

171:                                              ; preds = %170
  %172 = load i32, i32* %7, align 4
  %173 = add i32 %172, 1
  store i32 %173, i32* %7, align 4
  br label %80

174:                                              ; preds = %80
  %175 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %176 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %175, i32 0, i32 2
  store i32 0, i32* %176, align 4
  br label %177

177:                                              ; preds = %174
  %178 = load i32, i32* %12, align 4
  %179 = add nsw i32 %178, 1
  store i32 %179, i32* %12, align 4
  br label %70

180:                                              ; preds = %70
  %181 = load %struct.my_coef_controller*, %struct.my_coef_controller** %6, align 8
  %182 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %181, i32 0, i32 1
  %183 = load i32, i32* %182, align 8
  %184 = add i32 %183, 1
  store i32 %184, i32* %182, align 8
  %185 = load %struct.jpeg_compress_struct.36*, %struct.jpeg_compress_struct.36** %4, align 8
  call void @start_iMCU_row(%struct.jpeg_compress_struct.36* %185)
  store i32 1, i32* %3, align 4
  br label %186

186:                                              ; preds = %180, %163
  %187 = load i32, i32* %3, align 4
  ret i32 %187
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_color_converter(%struct.jpeg_compress_struct.58* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.58*, align 8
  %3 = alloca %struct.my_color_converter*, align 8
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %2, align 8
  %4 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %4, i32 0, i32 1
  %6 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %6, i32 0, i32 0
  %8 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %7, align 8
  %9 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %10 = bitcast %struct.jpeg_compress_struct.58* %9 to %struct.jpeg_common_struct*
  %11 = call i8* %8(%struct.jpeg_common_struct* %10, i32 1, i64 24)
  %12 = bitcast i8* %11 to %struct.my_color_converter*
  store %struct.my_color_converter* %12, %struct.my_color_converter** %3, align 8
  %13 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8
  %14 = bitcast %struct.my_color_converter* %13 to %struct.jpeg_color_converter.72*
  %15 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %15, i32 0, i32 56
  store %struct.jpeg_color_converter.72* %14, %struct.jpeg_color_converter.72** %16, align 8
  %17 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8
  %18 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %17, i32 0, i32 0
  %19 = getelementptr inbounds %struct.jpeg_color_converter.72, %struct.jpeg_color_converter.72* %18, i32 0, i32 0
  %20 = bitcast {}** %19 to void (%struct.jpeg_compress_struct.58*)**
  store void (%struct.jpeg_compress_struct.58*)* @null_method, void (%struct.jpeg_compress_struct.58*)** %20, align 8
  %21 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %21, i32 0, i32 9
  %23 = load i32, i32* %22, align 4
  switch i32 %23, label %78 [
    i32 1, label %24
    i32 2, label %42
    i32 3, label %42
    i32 4, label %60
    i32 5, label %60
  ]

24:                                               ; preds = %1
  %25 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %25, i32 0, i32 8
  %27 = load i32, i32* %26, align 8
  %28 = icmp ne i32 %27, 1
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %31 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %30, i32 0, i32 0
  %32 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %31, align 8
  %33 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %32, i32 0, i32 5
  store i32 7, i32* %33, align 8
  %34 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %34, i32 0, i32 0
  %36 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %36, i32 0, i32 0
  %38 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %37, align 8
  %39 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %40 = bitcast %struct.jpeg_compress_struct.58* %39 to %struct.jpeg_common_struct*
  call void %38(%struct.jpeg_common_struct* %40)
  br label %41

41:                                               ; preds = %29, %24
  br label %96

42:                                               ; preds = %1, %1
  %43 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %44 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %43, i32 0, i32 8
  %45 = load i32, i32* %44, align 8
  %46 = icmp ne i32 %45, 3
  br i1 %46, label %47, label %59

47:                                               ; preds = %42
  %48 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %49 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %48, i32 0, i32 0
  %50 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %49, align 8
  %51 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %50, i32 0, i32 5
  store i32 7, i32* %51, align 8
  %52 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %53 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %52, i32 0, i32 0
  %54 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %53, align 8
  %55 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %54, i32 0, i32 0
  %56 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %55, align 8
  %57 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %58 = bitcast %struct.jpeg_compress_struct.58* %57 to %struct.jpeg_common_struct*
  call void %56(%struct.jpeg_common_struct* %58)
  br label %59

59:                                               ; preds = %47, %42
  br label %96

60:                                               ; preds = %1, %1
  %61 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %62 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %61, i32 0, i32 8
  %63 = load i32, i32* %62, align 8
  %64 = icmp ne i32 %63, 4
  br i1 %64, label %65, label %77

65:                                               ; preds = %60
  %66 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %67 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %66, i32 0, i32 0
  %68 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %67, align 8
  %69 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %68, i32 0, i32 5
  store i32 7, i32* %69, align 8
  %70 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %71 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %70, i32 0, i32 0
  %72 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %71, align 8
  %73 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %72, i32 0, i32 0
  %74 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %73, align 8
  %75 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %76 = bitcast %struct.jpeg_compress_struct.58* %75 to %struct.jpeg_common_struct*
  call void %74(%struct.jpeg_common_struct* %76)
  br label %77

77:                                               ; preds = %65, %60
  br label %96

78:                                               ; preds = %1
  %79 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %80 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %79, i32 0, i32 8
  %81 = load i32, i32* %80, align 8
  %82 = icmp slt i32 %81, 1
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %85 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %84, i32 0, i32 0
  %86 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %85, align 8
  %87 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %86, i32 0, i32 5
  store i32 7, i32* %87, align 8
  %88 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %89 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %88, i32 0, i32 0
  %90 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %89, align 8
  %91 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %90, i32 0, i32 0
  %92 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %91, align 8
  %93 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %94 = bitcast %struct.jpeg_compress_struct.58* %93 to %struct.jpeg_common_struct*
  call void %92(%struct.jpeg_common_struct* %94)
  br label %95

95:                                               ; preds = %83, %78
  br label %96

96:                                               ; preds = %95, %77, %59, %41
  %97 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %98 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %97, i32 0, i32 13
  %99 = load i32, i32* %98, align 8
  switch i32 %99, label %347 [
    i32 1, label %100
    i32 2, label %163
    i32 3, label %202
    i32 4, label %255
    i32 5, label %294
  ]

100:                                              ; preds = %96
  %101 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %102 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %101, i32 0, i32 12
  %103 = load i32, i32* %102, align 4
  %104 = icmp ne i32 %103, 1
  br i1 %104, label %105, label %117

105:                                              ; preds = %100
  %106 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %107 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %106, i32 0, i32 0
  %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %107, align 8
  %109 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %108, i32 0, i32 5
  store i32 8, i32* %109, align 8
  %110 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %111 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %110, i32 0, i32 0
  %112 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %111, align 8
  %113 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %112, i32 0, i32 0
  %114 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %113, align 8
  %115 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %116 = bitcast %struct.jpeg_compress_struct.58* %115 to %struct.jpeg_common_struct*
  call void %114(%struct.jpeg_common_struct* %116)
  br label %117

117:                                              ; preds = %105, %100
  %118 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %119 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %118, i32 0, i32 9
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %122, label %126

122:                                              ; preds = %117
  %123 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8
  %124 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %123, i32 0, i32 0
  %125 = getelementptr inbounds %struct.jpeg_color_converter.72, %struct.jpeg_color_converter.72* %124, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)* @grayscale_convert, void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)** %125, align 8
  br label %162

126:                                              ; preds = %117
  %127 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %128 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %127, i32 0, i32 9
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 2
  br i1 %130, label %131, label %139

131:                                              ; preds = %126
  %132 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8
  %133 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %132, i32 0, i32 0
  %134 = getelementptr inbounds %struct.jpeg_color_converter.72, %struct.jpeg_color_converter.72* %133, i32 0, i32 0
  %135 = bitcast {}** %134 to void (%struct.jpeg_compress_struct.58*)**
  store void (%struct.jpeg_compress_struct.58*)* @rgb_ycc_start, void (%struct.jpeg_compress_struct.58*)** %135, align 8
  %136 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8
  %137 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %136, i32 0, i32 0
  %138 = getelementptr inbounds %struct.jpeg_color_converter.72, %struct.jpeg_color_converter.72* %137, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)* @rgb_gray_convert, void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)** %138, align 8
  br label %161

139:                                              ; preds = %126
  %140 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %141 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %140, i32 0, i32 9
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, 3
  br i1 %143, label %144, label %148

144:                                              ; preds = %139
  %145 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8
  %146 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %145, i32 0, i32 0
  %147 = getelementptr inbounds %struct.jpeg_color_converter.72, %struct.jpeg_color_converter.72* %146, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)* @grayscale_convert, void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)** %147, align 8
  br label %160

148:                                              ; preds = %139
  %149 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %150 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %149, i32 0, i32 0
  %151 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %150, align 8
  %152 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %151, i32 0, i32 5
  store i32 25, i32* %152, align 8
  %153 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %154 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %153, i32 0, i32 0
  %155 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %154, align 8
  %156 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %155, i32 0, i32 0
  %157 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %156, align 8
  %158 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %159 = bitcast %struct.jpeg_compress_struct.58* %158 to %struct.jpeg_common_struct*
  call void %157(%struct.jpeg_common_struct* %159)
  br label %160

160:                                              ; preds = %148, %144
  br label %161

161:                                              ; preds = %160, %131
  br label %162

162:                                              ; preds = %161, %122
  br label %379

163:                                              ; preds = %96
  %164 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %165 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %164, i32 0, i32 12
  %166 = load i32, i32* %165, align 4
  %167 = icmp ne i32 %166, 3
  br i1 %167, label %168, label %180

168:                                              ; preds = %163
  %169 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %170 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %169, i32 0, i32 0
  %171 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %170, align 8
  %172 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %171, i32 0, i32 5
  store i32 8, i32* %172, align 8
  %173 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %174 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %173, i32 0, i32 0
  %175 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %174, align 8
  %176 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %175, i32 0, i32 0
  %177 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %176, align 8
  %178 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %179 = bitcast %struct.jpeg_compress_struct.58* %178 to %struct.jpeg_common_struct*
  call void %177(%struct.jpeg_common_struct* %179)
  br label %180

180:                                              ; preds = %168, %163
  %181 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %182 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %181, i32 0, i32 9
  %183 = load i32, i32* %182, align 4
  %184 = icmp eq i32 %183, 2
  br i1 %184, label %185, label %189

185:                                              ; preds = %180
  %186 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8
  %187 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %186, i32 0, i32 0
  %188 = getelementptr inbounds %struct.jpeg_color_converter.72, %struct.jpeg_color_converter.72* %187, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)* @null_convert, void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)** %188, align 8
  br label %201

189:                                              ; preds = %180
  %190 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %191 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %190, i32 0, i32 0
  %192 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %191, align 8
  %193 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %192, i32 0, i32 5
  store i32 25, i32* %193, align 8
  %194 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %195 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %194, i32 0, i32 0
  %196 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %195, align 8
  %197 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %196, i32 0, i32 0
  %198 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %197, align 8
  %199 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %200 = bitcast %struct.jpeg_compress_struct.58* %199 to %struct.jpeg_common_struct*
  call void %198(%struct.jpeg_common_struct* %200)
  br label %201

201:                                              ; preds = %189, %185
  br label %379

202:                                              ; preds = %96
  %203 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %204 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %203, i32 0, i32 12
  %205 = load i32, i32* %204, align 4
  %206 = icmp ne i32 %205, 3
  br i1 %206, label %207, label %219

207:                                              ; preds = %202
  %208 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %209 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %208, i32 0, i32 0
  %210 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %209, align 8
  %211 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %210, i32 0, i32 5
  store i32 8, i32* %211, align 8
  %212 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %213 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %212, i32 0, i32 0
  %214 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %213, align 8
  %215 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %214, i32 0, i32 0
  %216 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %215, align 8
  %217 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %218 = bitcast %struct.jpeg_compress_struct.58* %217 to %struct.jpeg_common_struct*
  call void %216(%struct.jpeg_common_struct* %218)
  br label %219

219:                                              ; preds = %207, %202
  %220 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %221 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %220, i32 0, i32 9
  %222 = load i32, i32* %221, align 4
  %223 = icmp eq i32 %222, 2
  br i1 %223, label %224, label %232

224:                                              ; preds = %219
  %225 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8
  %226 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %225, i32 0, i32 0
  %227 = getelementptr inbounds %struct.jpeg_color_converter.72, %struct.jpeg_color_converter.72* %226, i32 0, i32 0
  %228 = bitcast {}** %227 to void (%struct.jpeg_compress_struct.58*)**
  store void (%struct.jpeg_compress_struct.58*)* @rgb_ycc_start, void (%struct.jpeg_compress_struct.58*)** %228, align 8
  %229 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8
  %230 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %229, i32 0, i32 0
  %231 = getelementptr inbounds %struct.jpeg_color_converter.72, %struct.jpeg_color_converter.72* %230, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)* @rgb_ycc_convert, void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)** %231, align 8
  br label %254

232:                                              ; preds = %219
  %233 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %234 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %233, i32 0, i32 9
  %235 = load i32, i32* %234, align 4
  %236 = icmp eq i32 %235, 3
  br i1 %236, label %237, label %241

237:                                              ; preds = %232
  %238 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8
  %239 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %238, i32 0, i32 0
  %240 = getelementptr inbounds %struct.jpeg_color_converter.72, %struct.jpeg_color_converter.72* %239, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)* @null_convert, void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)** %240, align 8
  br label %253

241:                                              ; preds = %232
  %242 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %243 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %242, i32 0, i32 0
  %244 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %243, align 8
  %245 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %244, i32 0, i32 5
  store i32 25, i32* %245, align 8
  %246 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %247 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %246, i32 0, i32 0
  %248 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %247, align 8
  %249 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %248, i32 0, i32 0
  %250 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %249, align 8
  %251 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %252 = bitcast %struct.jpeg_compress_struct.58* %251 to %struct.jpeg_common_struct*
  call void %250(%struct.jpeg_common_struct* %252)
  br label %253

253:                                              ; preds = %241, %237
  br label %254

254:                                              ; preds = %253, %224
  br label %379

255:                                              ; preds = %96
  %256 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %257 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %256, i32 0, i32 12
  %258 = load i32, i32* %257, align 4
  %259 = icmp ne i32 %258, 4
  br i1 %259, label %260, label %272

260:                                              ; preds = %255
  %261 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %262 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %261, i32 0, i32 0
  %263 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %262, align 8
  %264 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %263, i32 0, i32 5
  store i32 8, i32* %264, align 8
  %265 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %266 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %265, i32 0, i32 0
  %267 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %266, align 8
  %268 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %267, i32 0, i32 0
  %269 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %268, align 8
  %270 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %271 = bitcast %struct.jpeg_compress_struct.58* %270 to %struct.jpeg_common_struct*
  call void %269(%struct.jpeg_common_struct* %271)
  br label %272

272:                                              ; preds = %260, %255
  %273 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %274 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %273, i32 0, i32 9
  %275 = load i32, i32* %274, align 4
  %276 = icmp eq i32 %275, 4
  br i1 %276, label %277, label %281

277:                                              ; preds = %272
  %278 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8
  %279 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %278, i32 0, i32 0
  %280 = getelementptr inbounds %struct.jpeg_color_converter.72, %struct.jpeg_color_converter.72* %279, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)* @null_convert, void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)** %280, align 8
  br label %293

281:                                              ; preds = %272
  %282 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %283 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %282, i32 0, i32 0
  %284 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %283, align 8
  %285 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %284, i32 0, i32 5
  store i32 25, i32* %285, align 8
  %286 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %287 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %286, i32 0, i32 0
  %288 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %287, align 8
  %289 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %288, i32 0, i32 0
  %290 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %289, align 8
  %291 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %292 = bitcast %struct.jpeg_compress_struct.58* %291 to %struct.jpeg_common_struct*
  call void %290(%struct.jpeg_common_struct* %292)
  br label %293

293:                                              ; preds = %281, %277
  br label %379

294:                                              ; preds = %96
  %295 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %296 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %295, i32 0, i32 12
  %297 = load i32, i32* %296, align 4
  %298 = icmp ne i32 %297, 4
  br i1 %298, label %299, label %311

299:                                              ; preds = %294
  %300 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %301 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %300, i32 0, i32 0
  %302 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %301, align 8
  %303 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %302, i32 0, i32 5
  store i32 8, i32* %303, align 8
  %304 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %305 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %304, i32 0, i32 0
  %306 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %305, align 8
  %307 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %306, i32 0, i32 0
  %308 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %307, align 8
  %309 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %310 = bitcast %struct.jpeg_compress_struct.58* %309 to %struct.jpeg_common_struct*
  call void %308(%struct.jpeg_common_struct* %310)
  br label %311

311:                                              ; preds = %299, %294
  %312 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %313 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %312, i32 0, i32 9
  %314 = load i32, i32* %313, align 4
  %315 = icmp eq i32 %314, 4
  br i1 %315, label %316, label %324

316:                                              ; preds = %311
  %317 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8
  %318 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %317, i32 0, i32 0
  %319 = getelementptr inbounds %struct.jpeg_color_converter.72, %struct.jpeg_color_converter.72* %318, i32 0, i32 0
  %320 = bitcast {}** %319 to void (%struct.jpeg_compress_struct.58*)**
  store void (%struct.jpeg_compress_struct.58*)* @rgb_ycc_start, void (%struct.jpeg_compress_struct.58*)** %320, align 8
  %321 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8
  %322 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %321, i32 0, i32 0
  %323 = getelementptr inbounds %struct.jpeg_color_converter.72, %struct.jpeg_color_converter.72* %322, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)* @cmyk_ycck_convert, void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)** %323, align 8
  br label %346

324:                                              ; preds = %311
  %325 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %326 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %325, i32 0, i32 9
  %327 = load i32, i32* %326, align 4
  %328 = icmp eq i32 %327, 5
  br i1 %328, label %329, label %333

329:                                              ; preds = %324
  %330 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8
  %331 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %330, i32 0, i32 0
  %332 = getelementptr inbounds %struct.jpeg_color_converter.72, %struct.jpeg_color_converter.72* %331, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)* @null_convert, void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)** %332, align 8
  br label %345

333:                                              ; preds = %324
  %334 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %335 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %334, i32 0, i32 0
  %336 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %335, align 8
  %337 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %336, i32 0, i32 5
  store i32 25, i32* %337, align 8
  %338 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %339 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %338, i32 0, i32 0
  %340 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %339, align 8
  %341 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %340, i32 0, i32 0
  %342 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %341, align 8
  %343 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %344 = bitcast %struct.jpeg_compress_struct.58* %343 to %struct.jpeg_common_struct*
  call void %342(%struct.jpeg_common_struct* %344)
  br label %345

345:                                              ; preds = %333, %329
  br label %346

346:                                              ; preds = %345, %316
  br label %379

347:                                              ; preds = %96
  %348 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %349 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %348, i32 0, i32 13
  %350 = load i32, i32* %349, align 8
  %351 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %352 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %351, i32 0, i32 9
  %353 = load i32, i32* %352, align 4
  %354 = icmp ne i32 %350, %353
  br i1 %354, label %363, label %355

355:                                              ; preds = %347
  %356 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %357 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %356, i32 0, i32 12
  %358 = load i32, i32* %357, align 4
  %359 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %360 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %359, i32 0, i32 8
  %361 = load i32, i32* %360, align 8
  %362 = icmp ne i32 %358, %361
  br i1 %362, label %363, label %375

363:                                              ; preds = %355, %347
  %364 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %365 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %364, i32 0, i32 0
  %366 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %365, align 8
  %367 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %366, i32 0, i32 5
  store i32 25, i32* %367, align 8
  %368 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %369 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %368, i32 0, i32 0
  %370 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %369, align 8
  %371 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %370, i32 0, i32 0
  %372 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %371, align 8
  %373 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %374 = bitcast %struct.jpeg_compress_struct.58* %373 to %struct.jpeg_common_struct*
  call void %372(%struct.jpeg_common_struct* %374)
  br label %375

375:                                              ; preds = %363, %355
  %376 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8
  %377 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %376, i32 0, i32 0
  %378 = getelementptr inbounds %struct.jpeg_color_converter.72, %struct.jpeg_color_converter.72* %377, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)* @null_convert, void (%struct.jpeg_compress_struct.58*, i8**, i8***, i32, i32)** %378, align 8
  br label %379

379:                                              ; preds = %375, %346, %293, %254, %201, %162
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @null_method(%struct.jpeg_compress_struct.58* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.58*, align 8
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @grayscale_convert(%struct.jpeg_compress_struct.58* %0, i8** %1, i8*** %2, i32 %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_compress_struct.58*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8***, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i8*** %2, i8**** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %16 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %6, align 8
  %17 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %16, i32 0, i32 6
  %18 = load i32, i32* %17, align 8
  store i32 %18, i32* %14, align 4
  %19 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %6, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %19, i32 0, i32 8
  %21 = load i32, i32* %20, align 8
  store i32 %21, i32* %15, align 4
  br label %22

22:                                               ; preds = %58, %5
  %23 = load i32, i32* %10, align 4
  %24 = add nsw i32 %23, -1
  store i32 %24, i32* %10, align 4
  %25 = icmp sge i32 %24, 0
  br i1 %25, label %26, label %59

26:                                               ; preds = %22
  %27 = load i8**, i8*** %7, align 8
  %28 = getelementptr inbounds i8*, i8** %27, i32 1
  store i8** %28, i8*** %7, align 8
  %29 = load i8*, i8** %27, align 8
  store i8* %29, i8** %11, align 8
  %30 = load i8***, i8**** %8, align 8
  %31 = getelementptr inbounds i8**, i8*** %30, i64 0
  %32 = load i8**, i8*** %31, align 8
  %33 = load i32, i32* %9, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i8*, i8** %32, i64 %34
  %36 = load i8*, i8** %35, align 8
  store i8* %36, i8** %12, align 8
  %37 = load i32, i32* %9, align 4
  %38 = add i32 %37, 1
  store i32 %38, i32* %9, align 4
  store i32 0, i32* %13, align 4
  br label %39

39:                                               ; preds = %55, %26
  %40 = load i32, i32* %13, align 4
  %41 = load i32, i32* %14, align 4
  %42 = icmp ult i32 %40, %41
  br i1 %42, label %43, label %58

43:                                               ; preds = %39
  %44 = load i8*, i8** %11, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 0
  %46 = load i8, i8* %45, align 1
  %47 = load i8*, i8** %12, align 8
  %48 = load i32, i32* %13, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %47, i64 %49
  store i8 %46, i8* %50, align 1
  %51 = load i32, i32* %15, align 4
  %52 = load i8*, i8** %11, align 8
  %53 = sext i32 %51 to i64
  %54 = getelementptr inbounds i8, i8* %52, i64 %53
  store i8* %54, i8** %11, align 8
  br label %55

55:                                               ; preds = %43
  %56 = load i32, i32* %13, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %13, align 4
  br label %39

58:                                               ; preds = %39
  br label %22

59:                                               ; preds = %22
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @rgb_ycc_start(%struct.jpeg_compress_struct.58* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.58*, align 8
  %3 = alloca %struct.my_color_converter*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %2, align 8
  %6 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %7 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %6, i32 0, i32 56
  %8 = load %struct.jpeg_color_converter.72*, %struct.jpeg_color_converter.72** %7, align 8
  %9 = bitcast %struct.jpeg_color_converter.72* %8 to %struct.my_color_converter*
  store %struct.my_color_converter* %9, %struct.my_color_converter** %3, align 8
  %10 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %11 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %10, i32 0, i32 1
  %12 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %12, i32 0, i32 0
  %14 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %13, align 8
  %15 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %16 = bitcast %struct.jpeg_compress_struct.58* %15 to %struct.jpeg_common_struct*
  %17 = call i8* %14(%struct.jpeg_common_struct* %16, i32 1, i64 16384)
  %18 = bitcast i8* %17 to i64*
  store i64* %18, i64** %4, align 8
  %19 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8
  %20 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %19, i32 0, i32 1
  store i64* %18, i64** %20, align 8
  store i64 0, i64* %5, align 8
  br label %21

21:                                               ; preds = %77, %1
  %22 = load i64, i64* %5, align 8
  %23 = icmp sle i64 %22, 255
  br i1 %23, label %24, label %80

24:                                               ; preds = %21
  %25 = load i64, i64* %5, align 8
  %26 = mul nsw i64 19595, %25
  %27 = load i64*, i64** %4, align 8
  %28 = load i64, i64* %5, align 8
  %29 = add nsw i64 %28, 0
  %30 = getelementptr inbounds i64, i64* %27, i64 %29
  store i64 %26, i64* %30, align 8
  %31 = load i64, i64* %5, align 8
  %32 = mul nsw i64 38470, %31
  %33 = load i64*, i64** %4, align 8
  %34 = load i64, i64* %5, align 8
  %35 = add nsw i64 %34, 256
  %36 = getelementptr inbounds i64, i64* %33, i64 %35
  store i64 %32, i64* %36, align 8
  %37 = load i64, i64* %5, align 8
  %38 = mul nsw i64 7471, %37
  %39 = add nsw i64 %38, 32768
  %40 = load i64*, i64** %4, align 8
  %41 = load i64, i64* %5, align 8
  %42 = add nsw i64 %41, 512
  %43 = getelementptr inbounds i64, i64* %40, i64 %42
  store i64 %39, i64* %43, align 8
  %44 = load i64, i64* %5, align 8
  %45 = mul nsw i64 -11059, %44
  %46 = load i64*, i64** %4, align 8
  %47 = load i64, i64* %5, align 8
  %48 = add nsw i64 %47, 768
  %49 = getelementptr inbounds i64, i64* %46, i64 %48
  store i64 %45, i64* %49, align 8
  %50 = load i64, i64* %5, align 8
  %51 = mul nsw i64 -21709, %50
  %52 = load i64*, i64** %4, align 8
  %53 = load i64, i64* %5, align 8
  %54 = add nsw i64 %53, 1024
  %55 = getelementptr inbounds i64, i64* %52, i64 %54
  store i64 %51, i64* %55, align 8
  %56 = load i64, i64* %5, align 8
  %57 = mul nsw i64 32768, %56
  %58 = add nsw i64 %57, 8388608
  %59 = add nsw i64 %58, 32768
  %60 = sub nsw i64 %59, 1
  %61 = load i64*, i64** %4, align 8
  %62 = load i64, i64* %5, align 8
  %63 = add nsw i64 %62, 1280
  %64 = getelementptr inbounds i64, i64* %61, i64 %63
  store i64 %60, i64* %64, align 8
  %65 = load i64, i64* %5, align 8
  %66 = mul nsw i64 -27439, %65
  %67 = load i64*, i64** %4, align 8
  %68 = load i64, i64* %5, align 8
  %69 = add nsw i64 %68, 1536
  %70 = getelementptr inbounds i64, i64* %67, i64 %69
  store i64 %66, i64* %70, align 8
  %71 = load i64, i64* %5, align 8
  %72 = mul nsw i64 -5329, %71
  %73 = load i64*, i64** %4, align 8
  %74 = load i64, i64* %5, align 8
  %75 = add nsw i64 %74, 1792
  %76 = getelementptr inbounds i64, i64* %73, i64 %75
  store i64 %72, i64* %76, align 8
  br label %77

77:                                               ; preds = %24
  %78 = load i64, i64* %5, align 8
  %79 = add nsw i64 %78, 1
  store i64 %79, i64* %5, align 8
  br label %21

80:                                               ; preds = %21
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @rgb_gray_convert(%struct.jpeg_compress_struct.58* %0, i8** %1, i8*** %2, i32 %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_compress_struct.58*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8***, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.my_color_converter*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i8*** %2, i8**** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %20 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %6, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %20, i32 0, i32 56
  %22 = load %struct.jpeg_color_converter.72*, %struct.jpeg_color_converter.72** %21, align 8
  %23 = bitcast %struct.jpeg_color_converter.72* %22 to %struct.my_color_converter*
  store %struct.my_color_converter* %23, %struct.my_color_converter** %11, align 8
  %24 = load %struct.my_color_converter*, %struct.my_color_converter** %11, align 8
  %25 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %24, i32 0, i32 1
  %26 = load i64*, i64** %25, align 8
  store i64* %26, i64** %15, align 8
  %27 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %6, align 8
  %28 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %27, i32 0, i32 6
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %95, %5
  %31 = load i32, i32* %10, align 4
  %32 = add nsw i32 %31, -1
  store i32 %32, i32* %10, align 4
  %33 = icmp sge i32 %32, 0
  br i1 %33, label %34, label %96

34:                                               ; preds = %30
  %35 = load i8**, i8*** %7, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i32 1
  store i8** %36, i8*** %7, align 8
  %37 = load i8*, i8** %35, align 8
  store i8* %37, i8** %16, align 8
  %38 = load i8***, i8**** %8, align 8
  %39 = getelementptr inbounds i8**, i8*** %38, i64 0
  %40 = load i8**, i8*** %39, align 8
  %41 = load i32, i32* %9, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8*, i8** %40, i64 %42
  %44 = load i8*, i8** %43, align 8
  store i8* %44, i8** %17, align 8
  %45 = load i32, i32* %9, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %9, align 4
  store i32 0, i32* %18, align 4
  br label %47

47:                                               ; preds = %92, %34
  %48 = load i32, i32* %18, align 4
  %49 = load i32, i32* %19, align 4
  %50 = icmp ult i32 %48, %49
  br i1 %50, label %51, label %95

51:                                               ; preds = %47
  %52 = load i8*, i8** %16, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 0
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  store i32 %55, i32* %12, align 4
  %56 = load i8*, i8** %16, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 1
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  store i32 %59, i32* %13, align 4
  %60 = load i8*, i8** %16, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 2
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  store i32 %63, i32* %14, align 4
  %64 = load i8*, i8** %16, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 3
  store i8* %65, i8** %16, align 8
  %66 = load i64*, i64** %15, align 8
  %67 = load i32, i32* %12, align 4
  %68 = add nsw i32 %67, 0
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i64, i64* %66, i64 %69
  %71 = load i64, i64* %70, align 8
  %72 = load i64*, i64** %15, align 8
  %73 = load i32, i32* %13, align 4
  %74 = add nsw i32 %73, 256
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i64, i64* %72, i64 %75
  %77 = load i64, i64* %76, align 8
  %78 = add nsw i64 %71, %77
  %79 = load i64*, i64** %15, align 8
  %80 = load i32, i32* %14, align 4
  %81 = add nsw i32 %80, 512
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i64, i64* %79, i64 %82
  %84 = load i64, i64* %83, align 8
  %85 = add nsw i64 %78, %84
  %86 = ashr i64 %85, 16
  %87 = trunc i64 %86 to i8
  %88 = load i8*, i8** %17, align 8
  %89 = load i32, i32* %18, align 4
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds i8, i8* %88, i64 %90
  store i8 %87, i8* %91, align 1
  br label %92

92:                                               ; preds = %51
  %93 = load i32, i32* %18, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %18, align 4
  br label %47

95:                                               ; preds = %47
  br label %30

96:                                               ; preds = %30
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @null_convert(%struct.jpeg_compress_struct.58* %0, i8** %1, i8*** %2, i32 %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_compress_struct.58*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8***, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i8*** %2, i8**** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %17 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %6, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %17, i32 0, i32 12
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %15, align 4
  %20 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %6, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %20, i32 0, i32 6
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %16, align 4
  br label %23

23:                                               ; preds = %69, %5
  %24 = load i32, i32* %10, align 4
  %25 = add nsw i32 %24, -1
  store i32 %25, i32* %10, align 4
  %26 = icmp sge i32 %25, 0
  br i1 %26, label %27, label %74

27:                                               ; preds = %23
  store i32 0, i32* %14, align 4
  br label %28

28:                                               ; preds = %66, %27
  %29 = load i32, i32* %14, align 4
  %30 = load i32, i32* %15, align 4
  %31 = icmp slt i32 %29, %30
  br i1 %31, label %32, label %69

32:                                               ; preds = %28
  %33 = load i8**, i8*** %7, align 8
  %34 = load i8*, i8** %33, align 8
  store i8* %34, i8** %11, align 8
  %35 = load i8***, i8**** %8, align 8
  %36 = load i32, i32* %14, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8**, i8*** %35, i64 %37
  %39 = load i8**, i8*** %38, align 8
  %40 = load i32, i32* %9, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8*, i8** %39, i64 %41
  %43 = load i8*, i8** %42, align 8
  store i8* %43, i8** %12, align 8
  store i32 0, i32* %13, align 4
  br label %44

44:                                               ; preds = %62, %32
  %45 = load i32, i32* %13, align 4
  %46 = load i32, i32* %16, align 4
  %47 = icmp ult i32 %45, %46
  br i1 %47, label %48, label %65

48:                                               ; preds = %44
  %49 = load i8*, i8** %11, align 8
  %50 = load i32, i32* %14, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = load i8*, i8** %12, align 8
  %55 = load i32, i32* %13, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %54, i64 %56
  store i8 %53, i8* %57, align 1
  %58 = load i32, i32* %15, align 4
  %59 = load i8*, i8** %11, align 8
  %60 = sext i32 %58 to i64
  %61 = getelementptr inbounds i8, i8* %59, i64 %60
  store i8* %61, i8** %11, align 8
  br label %62

62:                                               ; preds = %48
  %63 = load i32, i32* %13, align 4
  %64 = add i32 %63, 1
  store i32 %64, i32* %13, align 4
  br label %44

65:                                               ; preds = %44
  br label %66

66:                                               ; preds = %65
  %67 = load i32, i32* %14, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %14, align 4
  br label %28

69:                                               ; preds = %28
  %70 = load i8**, i8*** %7, align 8
  %71 = getelementptr inbounds i8*, i8** %70, i32 1
  store i8** %71, i8*** %7, align 8
  %72 = load i32, i32* %9, align 4
  %73 = add i32 %72, 1
  store i32 %73, i32* %9, align 4
  br label %23

74:                                               ; preds = %23
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @rgb_ycc_convert(%struct.jpeg_compress_struct.58* %0, i8** %1, i8*** %2, i32 %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_compress_struct.58*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8***, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.my_color_converter*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i8*** %2, i8**** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %22 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %6, align 8
  %23 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %22, i32 0, i32 56
  %24 = load %struct.jpeg_color_converter.72*, %struct.jpeg_color_converter.72** %23, align 8
  %25 = bitcast %struct.jpeg_color_converter.72* %24 to %struct.my_color_converter*
  store %struct.my_color_converter* %25, %struct.my_color_converter** %11, align 8
  %26 = load %struct.my_color_converter*, %struct.my_color_converter** %11, align 8
  %27 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %26, i32 0, i32 1
  %28 = load i64*, i64** %27, align 8
  store i64* %28, i64** %15, align 8
  %29 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %6, align 8
  %30 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %29, i32 0, i32 6
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %163, %5
  %33 = load i32, i32* %10, align 4
  %34 = add nsw i32 %33, -1
  store i32 %34, i32* %10, align 4
  %35 = icmp sge i32 %34, 0
  br i1 %35, label %36, label %164

36:                                               ; preds = %32
  %37 = load i8**, i8*** %7, align 8
  %38 = getelementptr inbounds i8*, i8** %37, i32 1
  store i8** %38, i8*** %7, align 8
  %39 = load i8*, i8** %37, align 8
  store i8* %39, i8** %16, align 8
  %40 = load i8***, i8**** %8, align 8
  %41 = getelementptr inbounds i8**, i8*** %40, i64 0
  %42 = load i8**, i8*** %41, align 8
  %43 = load i32, i32* %9, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i8*, i8** %42, i64 %44
  %46 = load i8*, i8** %45, align 8
  store i8* %46, i8** %17, align 8
  %47 = load i8***, i8**** %8, align 8
  %48 = getelementptr inbounds i8**, i8*** %47, i64 1
  %49 = load i8**, i8*** %48, align 8
  %50 = load i32, i32* %9, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8*, i8** %49, i64 %51
  %53 = load i8*, i8** %52, align 8
  store i8* %53, i8** %18, align 8
  %54 = load i8***, i8**** %8, align 8
  %55 = getelementptr inbounds i8**, i8*** %54, i64 2
  %56 = load i8**, i8*** %55, align 8
  %57 = load i32, i32* %9, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i8*, i8** %56, i64 %58
  %60 = load i8*, i8** %59, align 8
  store i8* %60, i8** %19, align 8
  %61 = load i32, i32* %9, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %9, align 4
  store i32 0, i32* %20, align 4
  br label %63

63:                                               ; preds = %160, %36
  %64 = load i32, i32* %20, align 4
  %65 = load i32, i32* %21, align 4
  %66 = icmp ult i32 %64, %65
  br i1 %66, label %67, label %163

67:                                               ; preds = %63
  %68 = load i8*, i8** %16, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 0
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  store i32 %71, i32* %12, align 4
  %72 = load i8*, i8** %16, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 1
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  store i32 %75, i32* %13, align 4
  %76 = load i8*, i8** %16, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 2
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  store i32 %79, i32* %14, align 4
  %80 = load i8*, i8** %16, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 3
  store i8* %81, i8** %16, align 8
  %82 = load i64*, i64** %15, align 8
  %83 = load i32, i32* %12, align 4
  %84 = add nsw i32 %83, 0
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i64, i64* %82, i64 %85
  %87 = load i64, i64* %86, align 8
  %88 = load i64*, i64** %15, align 8
  %89 = load i32, i32* %13, align 4
  %90 = add nsw i32 %89, 256
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i64, i64* %88, i64 %91
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %87, %93
  %95 = load i64*, i64** %15, align 8
  %96 = load i32, i32* %14, align 4
  %97 = add nsw i32 %96, 512
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i64, i64* %95, i64 %98
  %100 = load i64, i64* %99, align 8
  %101 = add nsw i64 %94, %100
  %102 = ashr i64 %101, 16
  %103 = trunc i64 %102 to i8
  %104 = load i8*, i8** %17, align 8
  %105 = load i32, i32* %20, align 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i8, i8* %104, i64 %106
  store i8 %103, i8* %107, align 1
  %108 = load i64*, i64** %15, align 8
  %109 = load i32, i32* %12, align 4
  %110 = add nsw i32 %109, 768
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i64, i64* %108, i64 %111
  %113 = load i64, i64* %112, align 8
  %114 = load i64*, i64** %15, align 8
  %115 = load i32, i32* %13, align 4
  %116 = add nsw i32 %115, 1024
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i64, i64* %114, i64 %117
  %119 = load i64, i64* %118, align 8
  %120 = add nsw i64 %113, %119
  %121 = load i64*, i64** %15, align 8
  %122 = load i32, i32* %14, align 4
  %123 = add nsw i32 %122, 1280
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i64, i64* %121, i64 %124
  %126 = load i64, i64* %125, align 8
  %127 = add nsw i64 %120, %126
  %128 = ashr i64 %127, 16
  %129 = trunc i64 %128 to i8
  %130 = load i8*, i8** %18, align 8
  %131 = load i32, i32* %20, align 4
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %130, i64 %132
  store i8 %129, i8* %133, align 1
  %134 = load i64*, i64** %15, align 8
  %135 = load i32, i32* %12, align 4
  %136 = add nsw i32 %135, 1280
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i64, i64* %134, i64 %137
  %139 = load i64, i64* %138, align 8
  %140 = load i64*, i64** %15, align 8
  %141 = load i32, i32* %13, align 4
  %142 = add nsw i32 %141, 1536
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds i64, i64* %140, i64 %143
  %145 = load i64, i64* %144, align 8
  %146 = add nsw i64 %139, %145
  %147 = load i64*, i64** %15, align 8
  %148 = load i32, i32* %14, align 4
  %149 = add nsw i32 %148, 1792
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i64, i64* %147, i64 %150
  %152 = load i64, i64* %151, align 8
  %153 = add nsw i64 %146, %152
  %154 = ashr i64 %153, 16
  %155 = trunc i64 %154 to i8
  %156 = load i8*, i8** %19, align 8
  %157 = load i32, i32* %20, align 4
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds i8, i8* %156, i64 %158
  store i8 %155, i8* %159, align 1
  br label %160

160:                                              ; preds = %67
  %161 = load i32, i32* %20, align 4
  %162 = add i32 %161, 1
  store i32 %162, i32* %20, align 4
  br label %63

163:                                              ; preds = %63
  br label %32

164:                                              ; preds = %32
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @cmyk_ycck_convert(%struct.jpeg_compress_struct.58* %0, i8** %1, i8*** %2, i32 %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_compress_struct.58*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8***, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.my_color_converter*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i8*** %2, i8**** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %23 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %6, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %23, i32 0, i32 56
  %25 = load %struct.jpeg_color_converter.72*, %struct.jpeg_color_converter.72** %24, align 8
  %26 = bitcast %struct.jpeg_color_converter.72* %25 to %struct.my_color_converter*
  store %struct.my_color_converter* %26, %struct.my_color_converter** %11, align 8
  %27 = load %struct.my_color_converter*, %struct.my_color_converter** %11, align 8
  %28 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %27, i32 0, i32 1
  %29 = load i64*, i64** %28, align 8
  store i64* %29, i64** %15, align 8
  %30 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %6, align 8
  %31 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %30, i32 0, i32 6
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %181, %5
  %34 = load i32, i32* %10, align 4
  %35 = add nsw i32 %34, -1
  store i32 %35, i32* %10, align 4
  %36 = icmp sge i32 %35, 0
  br i1 %36, label %37, label %182

37:                                               ; preds = %33
  %38 = load i8**, i8*** %7, align 8
  %39 = getelementptr inbounds i8*, i8** %38, i32 1
  store i8** %39, i8*** %7, align 8
  %40 = load i8*, i8** %38, align 8
  store i8* %40, i8** %16, align 8
  %41 = load i8***, i8**** %8, align 8
  %42 = getelementptr inbounds i8**, i8*** %41, i64 0
  %43 = load i8**, i8*** %42, align 8
  %44 = load i32, i32* %9, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i8*, i8** %43, i64 %45
  %47 = load i8*, i8** %46, align 8
  store i8* %47, i8** %17, align 8
  %48 = load i8***, i8**** %8, align 8
  %49 = getelementptr inbounds i8**, i8*** %48, i64 1
  %50 = load i8**, i8*** %49, align 8
  %51 = load i32, i32* %9, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8*, i8** %50, i64 %52
  %54 = load i8*, i8** %53, align 8
  store i8* %54, i8** %18, align 8
  %55 = load i8***, i8**** %8, align 8
  %56 = getelementptr inbounds i8**, i8*** %55, i64 2
  %57 = load i8**, i8*** %56, align 8
  %58 = load i32, i32* %9, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8*, i8** %57, i64 %59
  %61 = load i8*, i8** %60, align 8
  store i8* %61, i8** %19, align 8
  %62 = load i8***, i8**** %8, align 8
  %63 = getelementptr inbounds i8**, i8*** %62, i64 3
  %64 = load i8**, i8*** %63, align 8
  %65 = load i32, i32* %9, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i8*, i8** %64, i64 %66
  %68 = load i8*, i8** %67, align 8
  store i8* %68, i8** %20, align 8
  %69 = load i32, i32* %9, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %9, align 4
  store i32 0, i32* %21, align 4
  br label %71

71:                                               ; preds = %178, %37
  %72 = load i32, i32* %21, align 4
  %73 = load i32, i32* %22, align 4
  %74 = icmp ult i32 %72, %73
  br i1 %74, label %75, label %181

75:                                               ; preds = %71
  %76 = load i8*, i8** %16, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 0
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = sub nsw i32 255, %79
  store i32 %80, i32* %12, align 4
  %81 = load i8*, i8** %16, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 1
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = sub nsw i32 255, %84
  store i32 %85, i32* %13, align 4
  %86 = load i8*, i8** %16, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 2
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = sub nsw i32 255, %89
  store i32 %90, i32* %14, align 4
  %91 = load i8*, i8** %16, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 3
  %93 = load i8, i8* %92, align 1
  %94 = load i8*, i8** %20, align 8
  %95 = load i32, i32* %21, align 4
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %94, i64 %96
  store i8 %93, i8* %97, align 1
  %98 = load i8*, i8** %16, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 4
  store i8* %99, i8** %16, align 8
  %100 = load i64*, i64** %15, align 8
  %101 = load i32, i32* %12, align 4
  %102 = add nsw i32 %101, 0
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i64, i64* %100, i64 %103
  %105 = load i64, i64* %104, align 8
  %106 = load i64*, i64** %15, align 8
  %107 = load i32, i32* %13, align 4
  %108 = add nsw i32 %107, 256
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i64, i64* %106, i64 %109
  %111 = load i64, i64* %110, align 8
  %112 = add nsw i64 %105, %111
  %113 = load i64*, i64** %15, align 8
  %114 = load i32, i32* %14, align 4
  %115 = add nsw i32 %114, 512
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i64, i64* %113, i64 %116
  %118 = load i64, i64* %117, align 8
  %119 = add nsw i64 %112, %118
  %120 = ashr i64 %119, 16
  %121 = trunc i64 %120 to i8
  %122 = load i8*, i8** %17, align 8
  %123 = load i32, i32* %21, align 4
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* %122, i64 %124
  store i8 %121, i8* %125, align 1
  %126 = load i64*, i64** %15, align 8
  %127 = load i32, i32* %12, align 4
  %128 = add nsw i32 %127, 768
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i64, i64* %126, i64 %129
  %131 = load i64, i64* %130, align 8
  %132 = load i64*, i64** %15, align 8
  %133 = load i32, i32* %13, align 4
  %134 = add nsw i32 %133, 1024
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i64, i64* %132, i64 %135
  %137 = load i64, i64* %136, align 8
  %138 = add nsw i64 %131, %137
  %139 = load i64*, i64** %15, align 8
  %140 = load i32, i32* %14, align 4
  %141 = add nsw i32 %140, 1280
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i64, i64* %139, i64 %142
  %144 = load i64, i64* %143, align 8
  %145 = add nsw i64 %138, %144
  %146 = ashr i64 %145, 16
  %147 = trunc i64 %146 to i8
  %148 = load i8*, i8** %18, align 8
  %149 = load i32, i32* %21, align 4
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds i8, i8* %148, i64 %150
  store i8 %147, i8* %151, align 1
  %152 = load i64*, i64** %15, align 8
  %153 = load i32, i32* %12, align 4
  %154 = add nsw i32 %153, 1280
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i64, i64* %152, i64 %155
  %157 = load i64, i64* %156, align 8
  %158 = load i64*, i64** %15, align 8
  %159 = load i32, i32* %13, align 4
  %160 = add nsw i32 %159, 1536
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i64, i64* %158, i64 %161
  %163 = load i64, i64* %162, align 8
  %164 = add nsw i64 %157, %163
  %165 = load i64*, i64** %15, align 8
  %166 = load i32, i32* %14, align 4
  %167 = add nsw i32 %166, 1792
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i64, i64* %165, i64 %168
  %170 = load i64, i64* %169, align 8
  %171 = add nsw i64 %164, %170
  %172 = ashr i64 %171, 16
  %173 = trunc i64 %172 to i8
  %174 = load i8*, i8** %19, align 8
  %175 = load i32, i32* %21, align 4
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds i8, i8* %174, i64 %176
  store i8 %173, i8* %177, align 1
  br label %178

178:                                              ; preds = %75
  %179 = load i32, i32* %21, align 4
  %180 = add i32 %179, 1
  store i32 %180, i32* %21, align 4
  br label %71

181:                                              ; preds = %71
  br label %33

182:                                              ; preds = %33
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_forward_dct(%struct.jpeg_compress_struct.80* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.80*, align 8
  %3 = alloca %struct.my_fdct_controller*, align 8
  %4 = alloca i32, align 4
  store %struct.jpeg_compress_struct.80* %0, %struct.jpeg_compress_struct.80** %2, align 8
  %5 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %6 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %5, i32 0, i32 1
  %7 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %7, i32 0, i32 0
  %9 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %8, align 8
  %10 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %11 = bitcast %struct.jpeg_compress_struct.80* %10 to %struct.jpeg_common_struct*
  %12 = call i8* %9(%struct.jpeg_common_struct* %11, i32 1, i64 96)
  %13 = bitcast i8* %12 to %struct.my_fdct_controller*
  store %struct.my_fdct_controller* %13, %struct.my_fdct_controller** %3, align 8
  %14 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %15 = bitcast %struct.my_fdct_controller* %14 to %struct.jpeg_forward_dct.96*
  %16 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %17 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %16, i32 0, i32 58
  store %struct.jpeg_forward_dct.96* %15, %struct.jpeg_forward_dct.96** %17, align 8
  %18 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %19 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %18, i32 0, i32 0
  %20 = getelementptr inbounds %struct.jpeg_forward_dct.96, %struct.jpeg_forward_dct.96* %19, i32 0, i32 0
  %21 = bitcast {}** %20 to void (%struct.jpeg_compress_struct.80*)**
  store void (%struct.jpeg_compress_struct.80*)* @start_pass_fdctmgr, void (%struct.jpeg_compress_struct.80*)** %21, align 8
  %22 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %23 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %22, i32 0, i32 28
  %24 = load i32, i32* %23, align 4
  switch i32 %24, label %43 [
    i32 0, label %25
    i32 1, label %31
    i32 2, label %37
  ]

25:                                               ; preds = %1
  %26 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %27 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %26, i32 0, i32 0
  %28 = getelementptr inbounds %struct.jpeg_forward_dct.96, %struct.jpeg_forward_dct.96* %27, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.80*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* @forward_DCT, void (%struct.jpeg_compress_struct.80*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)** %28, align 8
  %29 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %30 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %29, i32 0, i32 1
  store void (i32*)* @jpeg_fdct_islow, void (i32*)** %30, align 8
  br label %55

31:                                               ; preds = %1
  %32 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %33 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %32, i32 0, i32 0
  %34 = getelementptr inbounds %struct.jpeg_forward_dct.96, %struct.jpeg_forward_dct.96* %33, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.80*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* @forward_DCT, void (%struct.jpeg_compress_struct.80*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)** %34, align 8
  %35 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %36 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %35, i32 0, i32 1
  store void (i32*)* @jpeg_fdct_ifast, void (i32*)** %36, align 8
  br label %55

37:                                               ; preds = %1
  %38 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %39 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %38, i32 0, i32 0
  %40 = getelementptr inbounds %struct.jpeg_forward_dct.96, %struct.jpeg_forward_dct.96* %39, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.80*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* @forward_DCT_float, void (%struct.jpeg_compress_struct.80*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)** %40, align 8
  %41 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %42 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %41, i32 0, i32 3
  store void (float*)* @jpeg_fdct_float, void (float*)** %42, align 8
  br label %55

43:                                               ; preds = %1
  %44 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %45 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %44, i32 0, i32 0
  %46 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %45, align 8
  %47 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %46, i32 0, i32 5
  store i32 47, i32* %47, align 8
  %48 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %49 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %48, i32 0, i32 0
  %50 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %49, align 8
  %51 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %50, i32 0, i32 0
  %52 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %51, align 8
  %53 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %54 = bitcast %struct.jpeg_compress_struct.80* %53 to %struct.jpeg_common_struct*
  call void %52(%struct.jpeg_common_struct* %54)
  br label %55

55:                                               ; preds = %43, %37, %31, %25
  store i32 0, i32* %4, align 4
  br label %56

56:                                               ; preds = %70, %55
  %57 = load i32, i32* %4, align 4
  %58 = icmp slt i32 %57, 4
  br i1 %58, label %59, label %73

59:                                               ; preds = %56
  %60 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %61 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %60, i32 0, i32 2
  %62 = load i32, i32* %4, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [4 x i32*], [4 x i32*]* %61, i64 0, i64 %63
  store i32* null, i32** %64, align 8
  %65 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %66 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %65, i32 0, i32 4
  %67 = load i32, i32* %4, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [4 x float*], [4 x float*]* %66, i64 0, i64 %68
  store float* null, float** %69, align 8
  br label %70

70:                                               ; preds = %59
  %71 = load i32, i32* %4, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %4, align 4
  br label %56

73:                                               ; preds = %56
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_fdctmgr(%struct.jpeg_compress_struct.80* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.80*, align 8
  %3 = alloca %struct.my_fdct_controller*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.jpeg_component_info*, align 8
  %8 = alloca %struct.JQUANT_TBL*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca float*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.jpeg_compress_struct.80* %0, %struct.jpeg_compress_struct.80** %2, align 8
  %13 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %13, i32 0, i32 58
  %15 = load %struct.jpeg_forward_dct.96*, %struct.jpeg_forward_dct.96** %14, align 8
  %16 = bitcast %struct.jpeg_forward_dct.96* %15 to %struct.my_fdct_controller*
  store %struct.my_fdct_controller* %16, %struct.my_fdct_controller** %3, align 8
  store i32 0, i32* %4, align 4
  %17 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %17, i32 0, i32 14
  %19 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8
  store %struct.jpeg_component_info* %19, %struct.jpeg_component_info** %7, align 8
  br label %20

20:                                               ; preds = %265, %1
  %21 = load i32, i32* %4, align 4
  %22 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %23 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %22, i32 0, i32 12
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %21, %24
  br i1 %25, label %26, label %270

26:                                               ; preds = %20
  %27 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %27, i32 0, i32 4
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %5, align 4
  %30 = load i32, i32* %5, align 4
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %43, label %32

32:                                               ; preds = %26
  %33 = load i32, i32* %5, align 4
  %34 = icmp sge i32 %33, 4
  br i1 %34, label %43, label %35

35:                                               ; preds = %32
  %36 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %37 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %36, i32 0, i32 15
  %38 = load i32, i32* %5, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %37, i64 0, i64 %39
  %41 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %40, align 8
  %42 = icmp eq %struct.JQUANT_TBL* %41, null
  br i1 %42, label %43, label %62

43:                                               ; preds = %35, %32, %26
  %44 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %45 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %44, i32 0, i32 0
  %46 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %45, align 8
  %47 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %46, i32 0, i32 5
  store i32 51, i32* %47, align 8
  %48 = load i32, i32* %5, align 4
  %49 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %50 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %49, i32 0, i32 0
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %50, align 8
  %52 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i32 0, i32 6
  %53 = bitcast %union.anon* %52 to [8 x i32]*
  %54 = getelementptr inbounds [8 x i32], [8 x i32]* %53, i64 0, i64 0
  store i32 %48, i32* %54, align 4
  %55 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %56 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %55, i32 0, i32 0
  %57 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %56, align 8
  %58 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %57, i32 0, i32 0
  %59 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %58, align 8
  %60 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %61 = bitcast %struct.jpeg_compress_struct.80* %60 to %struct.jpeg_common_struct*
  call void %59(%struct.jpeg_common_struct* %61)
  br label %62

62:                                               ; preds = %43, %35
  %63 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %64 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %63, i32 0, i32 15
  %65 = load i32, i32* %5, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %64, i64 0, i64 %66
  %68 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %67, align 8
  store %struct.JQUANT_TBL* %68, %struct.JQUANT_TBL** %8, align 8
  %69 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %70 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %69, i32 0, i32 28
  %71 = load i32, i32* %70, align 4
  switch i32 %71, label %252 [
    i32 0, label %72
    i32 1, label %122
    i32 2, label %180
  ]

72:                                               ; preds = %62
  %73 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %74 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %73, i32 0, i32 2
  %75 = load i32, i32* %5, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [4 x i32*], [4 x i32*]* %74, i64 0, i64 %76
  %78 = load i32*, i32** %77, align 8
  %79 = icmp eq i32* %78, null
  br i1 %79, label %80, label %95

80:                                               ; preds = %72
  %81 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %82 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %81, i32 0, i32 1
  %83 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %82, align 8
  %84 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %83, i32 0, i32 0
  %85 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %84, align 8
  %86 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %87 = bitcast %struct.jpeg_compress_struct.80* %86 to %struct.jpeg_common_struct*
  %88 = call i8* %85(%struct.jpeg_common_struct* %87, i32 1, i64 256)
  %89 = bitcast i8* %88 to i32*
  %90 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %91 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %90, i32 0, i32 2
  %92 = load i32, i32* %5, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [4 x i32*], [4 x i32*]* %91, i64 0, i64 %93
  store i32* %89, i32** %94, align 8
  br label %95

95:                                               ; preds = %80, %72
  %96 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %97 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %96, i32 0, i32 2
  %98 = load i32, i32* %5, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds [4 x i32*], [4 x i32*]* %97, i64 0, i64 %99
  %101 = load i32*, i32** %100, align 8
  store i32* %101, i32** %9, align 8
  store i32 0, i32* %6, align 4
  br label %102

102:                                              ; preds = %118, %95
  %103 = load i32, i32* %6, align 4
  %104 = icmp slt i32 %103, 64
  br i1 %104, label %105, label %121

105:                                              ; preds = %102
  %106 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %8, align 8
  %107 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %106, i32 0, i32 0
  %108 = load i32, i32* %6, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [64 x i16], [64 x i16]* %107, i64 0, i64 %109
  %111 = load i16, i16* %110, align 2
  %112 = zext i16 %111 to i32
  %113 = shl i32 %112, 3
  %114 = load i32*, i32** %9, align 8
  %115 = load i32, i32* %6, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i32, i32* %114, i64 %116
  store i32 %113, i32* %117, align 4
  br label %118

118:                                              ; preds = %105
  %119 = load i32, i32* %6, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %6, align 4
  br label %102

121:                                              ; preds = %102
  br label %264

122:                                              ; preds = %62
  %123 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %124 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %123, i32 0, i32 2
  %125 = load i32, i32* %5, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [4 x i32*], [4 x i32*]* %124, i64 0, i64 %126
  %128 = load i32*, i32** %127, align 8
  %129 = icmp eq i32* %128, null
  br i1 %129, label %130, label %145

130:                                              ; preds = %122
  %131 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %132 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %131, i32 0, i32 1
  %133 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %132, align 8
  %134 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %133, i32 0, i32 0
  %135 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %134, align 8
  %136 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %137 = bitcast %struct.jpeg_compress_struct.80* %136 to %struct.jpeg_common_struct*
  %138 = call i8* %135(%struct.jpeg_common_struct* %137, i32 1, i64 256)
  %139 = bitcast i8* %138 to i32*
  %140 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %141 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %140, i32 0, i32 2
  %142 = load i32, i32* %5, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [4 x i32*], [4 x i32*]* %141, i64 0, i64 %143
  store i32* %139, i32** %144, align 8
  br label %145

145:                                              ; preds = %130, %122
  %146 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %147 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %146, i32 0, i32 2
  %148 = load i32, i32* %5, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [4 x i32*], [4 x i32*]* %147, i64 0, i64 %149
  %151 = load i32*, i32** %150, align 8
  store i32* %151, i32** %9, align 8
  store i32 0, i32* %6, align 4
  br label %152

152:                                              ; preds = %176, %145
  %153 = load i32, i32* %6, align 4
  %154 = icmp slt i32 %153, 64
  br i1 %154, label %155, label %179

155:                                              ; preds = %152
  %156 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %8, align 8
  %157 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %156, i32 0, i32 0
  %158 = load i32, i32* %6, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [64 x i16], [64 x i16]* %157, i64 0, i64 %159
  %161 = load i16, i16* %160, align 2
  %162 = zext i16 %161 to i64
  %163 = load i32, i32* %6, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [64 x i16], [64 x i16]* @start_pass_fdctmgr.aanscales, i64 0, i64 %164
  %166 = load i16, i16* %165, align 2
  %167 = sext i16 %166 to i64
  %168 = mul nsw i64 %162, %167
  %169 = add nsw i64 %168, 1024
  %170 = ashr i64 %169, 11
  %171 = trunc i64 %170 to i32
  %172 = load i32*, i32** %9, align 8
  %173 = load i32, i32* %6, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i32, i32* %172, i64 %174
  store i32 %171, i32* %175, align 4
  br label %176

176:                                              ; preds = %155
  %177 = load i32, i32* %6, align 4
  %178 = add nsw i32 %177, 1
  store i32 %178, i32* %6, align 4
  br label %152

179:                                              ; preds = %152
  br label %264

180:                                              ; preds = %62
  %181 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %182 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %181, i32 0, i32 4
  %183 = load i32, i32* %5, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [4 x float*], [4 x float*]* %182, i64 0, i64 %184
  %186 = load float*, float** %185, align 8
  %187 = icmp eq float* %186, null
  br i1 %187, label %188, label %203

188:                                              ; preds = %180
  %189 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %190 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %189, i32 0, i32 1
  %191 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %190, align 8
  %192 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %191, i32 0, i32 0
  %193 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %192, align 8
  %194 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %195 = bitcast %struct.jpeg_compress_struct.80* %194 to %struct.jpeg_common_struct*
  %196 = call i8* %193(%struct.jpeg_common_struct* %195, i32 1, i64 256)
  %197 = bitcast i8* %196 to float*
  %198 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %199 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %198, i32 0, i32 4
  %200 = load i32, i32* %5, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [4 x float*], [4 x float*]* %199, i64 0, i64 %201
  store float* %197, float** %202, align 8
  br label %203

203:                                              ; preds = %188, %180
  %204 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8
  %205 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %204, i32 0, i32 4
  %206 = load i32, i32* %5, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [4 x float*], [4 x float*]* %205, i64 0, i64 %207
  %209 = load float*, float** %208, align 8
  store float* %209, float** %10, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %11, align 4
  br label %210

210:                                              ; preds = %248, %203
  %211 = load i32, i32* %11, align 4
  %212 = icmp slt i32 %211, 8
  br i1 %212, label %213, label %251

213:                                              ; preds = %210
  store i32 0, i32* %12, align 4
  br label %214

214:                                              ; preds = %244, %213
  %215 = load i32, i32* %12, align 4
  %216 = icmp slt i32 %215, 8
  br i1 %216, label %217, label %247

217:                                              ; preds = %214
  %218 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %8, align 8
  %219 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %218, i32 0, i32 0
  %220 = load i32, i32* %6, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [64 x i16], [64 x i16]* %219, i64 0, i64 %221
  %223 = load i16, i16* %222, align 2
  %224 = uitofp i16 %223 to double
  %225 = load i32, i32* %11, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds [8 x double], [8 x double]* @start_pass_fdctmgr.aanscalefactor, i64 0, i64 %226
  %228 = load double, double* %227, align 8
  %229 = fmul double %224, %228
  %230 = load i32, i32* %12, align 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds [8 x double], [8 x double]* @start_pass_fdctmgr.aanscalefactor, i64 0, i64 %231
  %233 = load double, double* %232, align 8
  %234 = fmul double %229, %233
  %235 = fmul double %234, 8.000000e+00
  %236 = fdiv double 1.000000e+00, %235
  %237 = fptrunc double %236 to float
  %238 = load float*, float** %10, align 8
  %239 = load i32, i32* %6, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds float, float* %238, i64 %240
  store float %237, float* %241, align 4
  %242 = load i32, i32* %6, align 4
  %243 = add nsw i32 %242, 1
  store i32 %243, i32* %6, align 4
  br label %244

244:                                              ; preds = %217
  %245 = load i32, i32* %12, align 4
  %246 = add nsw i32 %245, 1
  store i32 %246, i32* %12, align 4
  br label %214

247:                                              ; preds = %214
  br label %248

248:                                              ; preds = %247
  %249 = load i32, i32* %11, align 4
  %250 = add nsw i32 %249, 1
  store i32 %250, i32* %11, align 4
  br label %210

251:                                              ; preds = %210
  br label %264

252:                                              ; preds = %62
  %253 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %254 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %253, i32 0, i32 0
  %255 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %254, align 8
  %256 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %255, i32 0, i32 5
  store i32 47, i32* %256, align 8
  %257 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %258 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %257, i32 0, i32 0
  %259 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %258, align 8
  %260 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %259, i32 0, i32 0
  %261 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %260, align 8
  %262 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %2, align 8
  %263 = bitcast %struct.jpeg_compress_struct.80* %262 to %struct.jpeg_common_struct*
  call void %261(%struct.jpeg_common_struct* %263)
  br label %264

264:                                              ; preds = %252, %251, %179, %121
  br label %265

265:                                              ; preds = %264
  %266 = load i32, i32* %4, align 4
  %267 = add nsw i32 %266, 1
  store i32 %267, i32* %4, align 4
  %268 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %269 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %268, i32 1
  store %struct.jpeg_component_info* %269, %struct.jpeg_component_info** %7, align 8
  br label %20

270:                                              ; preds = %20
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @forward_DCT(%struct.jpeg_compress_struct.80* %0, %struct.jpeg_component_info* %1, i8** %2, [64 x i16]* %3, i32 %4, i32 %5, i32 %6) #0 {
  %8 = alloca %struct.jpeg_compress_struct.80*, align 8
  %9 = alloca %struct.jpeg_component_info*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca [64 x i16]*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.my_fdct_controller*, align 8
  %16 = alloca void (i32*)*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca [64 x i32], align 16
  %19 = alloca i32, align 4
  %20 = alloca i32*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i16*, align 8
  store %struct.jpeg_compress_struct.80* %0, %struct.jpeg_compress_struct.80** %8, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %9, align 8
  store i8** %2, i8*** %10, align 8
  store [64 x i16]* %3, [64 x i16]** %11, align 8
  store i32 %4, i32* %12, align 4
  store i32 %5, i32* %13, align 4
  store i32 %6, i32* %14, align 4
  %27 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %8, align 8
  %28 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %27, i32 0, i32 58
  %29 = load %struct.jpeg_forward_dct.96*, %struct.jpeg_forward_dct.96** %28, align 8
  %30 = bitcast %struct.jpeg_forward_dct.96* %29 to %struct.my_fdct_controller*
  store %struct.my_fdct_controller* %30, %struct.my_fdct_controller** %15, align 8
  %31 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %15, align 8
  %32 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %31, i32 0, i32 1
  %33 = load void (i32*)*, void (i32*)** %32, align 8
  store void (i32*)* %33, void (i32*)** %16, align 8
  %34 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %15, align 8
  %35 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %34, i32 0, i32 2
  %36 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8
  %37 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %36, i32 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [4 x i32*], [4 x i32*]* %35, i64 0, i64 %39
  %41 = load i32*, i32** %40, align 8
  store i32* %41, i32** %17, align 8
  %42 = load i32, i32* %12, align 4
  %43 = load i8**, i8*** %10, align 8
  %44 = zext i32 %42 to i64
  %45 = getelementptr inbounds i8*, i8** %43, i64 %44
  store i8** %45, i8*** %10, align 8
  store i32 0, i32* %19, align 4
  br label %46

46:                                               ; preds = %189, %7
  %47 = load i32, i32* %19, align 4
  %48 = load i32, i32* %14, align 4
  %49 = icmp ult i32 %47, %48
  br i1 %49, label %50, label %194

50:                                               ; preds = %46
  %51 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 0
  store i32* %51, i32** %20, align 8
  store i32 0, i32* %22, align 4
  br label %52

52:                                               ; preds = %120, %50
  %53 = load i32, i32* %22, align 4
  %54 = icmp slt i32 %53, 8
  br i1 %54, label %55, label %123

55:                                               ; preds = %52
  %56 = load i8**, i8*** %10, align 8
  %57 = load i32, i32* %22, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8*, i8** %56, i64 %58
  %60 = load i8*, i8** %59, align 8
  %61 = load i32, i32* %13, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %60, i64 %62
  store i8* %63, i8** %21, align 8
  %64 = load i8*, i8** %21, align 8
  %65 = getelementptr inbounds i8, i8* %64, i32 1
  store i8* %65, i8** %21, align 8
  %66 = load i8, i8* %64, align 1
  %67 = zext i8 %66 to i32
  %68 = sub nsw i32 %67, 128
  %69 = load i32*, i32** %20, align 8
  %70 = getelementptr inbounds i32, i32* %69, i32 1
  store i32* %70, i32** %20, align 8
  store i32 %68, i32* %69, align 4
  %71 = load i8*, i8** %21, align 8
  %72 = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %72, i8** %21, align 8
  %73 = load i8, i8* %71, align 1
  %74 = zext i8 %73 to i32
  %75 = sub nsw i32 %74, 128
  %76 = load i32*, i32** %20, align 8
  %77 = getelementptr inbounds i32, i32* %76, i32 1
  store i32* %77, i32** %20, align 8
  store i32 %75, i32* %76, align 4
  %78 = load i8*, i8** %21, align 8
  %79 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %79, i8** %21, align 8
  %80 = load i8, i8* %78, align 1
  %81 = zext i8 %80 to i32
  %82 = sub nsw i32 %81, 128
  %83 = load i32*, i32** %20, align 8
  %84 = getelementptr inbounds i32, i32* %83, i32 1
  store i32* %84, i32** %20, align 8
  store i32 %82, i32* %83, align 4
  %85 = load i8*, i8** %21, align 8
  %86 = getelementptr inbounds i8, i8* %85, i32 1
  store i8* %86, i8** %21, align 8
  %87 = load i8, i8* %85, align 1
  %88 = zext i8 %87 to i32
  %89 = sub nsw i32 %88, 128
  %90 = load i32*, i32** %20, align 8
  %91 = getelementptr inbounds i32, i32* %90, i32 1
  store i32* %91, i32** %20, align 8
  store i32 %89, i32* %90, align 4
  %92 = load i8*, i8** %21, align 8
  %93 = getelementptr inbounds i8, i8* %92, i32 1
  store i8* %93, i8** %21, align 8
  %94 = load i8, i8* %92, align 1
  %95 = zext i8 %94 to i32
  %96 = sub nsw i32 %95, 128
  %97 = load i32*, i32** %20, align 8
  %98 = getelementptr inbounds i32, i32* %97, i32 1
  store i32* %98, i32** %20, align 8
  store i32 %96, i32* %97, align 4
  %99 = load i8*, i8** %21, align 8
  %100 = getelementptr inbounds i8, i8* %99, i32 1
  store i8* %100, i8** %21, align 8
  %101 = load i8, i8* %99, align 1
  %102 = zext i8 %101 to i32
  %103 = sub nsw i32 %102, 128
  %104 = load i32*, i32** %20, align 8
  %105 = getelementptr inbounds i32, i32* %104, i32 1
  store i32* %105, i32** %20, align 8
  store i32 %103, i32* %104, align 4
  %106 = load i8*, i8** %21, align 8
  %107 = getelementptr inbounds i8, i8* %106, i32 1
  store i8* %107, i8** %21, align 8
  %108 = load i8, i8* %106, align 1
  %109 = zext i8 %108 to i32
  %110 = sub nsw i32 %109, 128
  %111 = load i32*, i32** %20, align 8
  %112 = getelementptr inbounds i32, i32* %111, i32 1
  store i32* %112, i32** %20, align 8
  store i32 %110, i32* %111, align 4
  %113 = load i8*, i8** %21, align 8
  %114 = getelementptr inbounds i8, i8* %113, i32 1
  store i8* %114, i8** %21, align 8
  %115 = load i8, i8* %113, align 1
  %116 = zext i8 %115 to i32
  %117 = sub nsw i32 %116, 128
  %118 = load i32*, i32** %20, align 8
  %119 = getelementptr inbounds i32, i32* %118, i32 1
  store i32* %119, i32** %20, align 8
  store i32 %117, i32* %118, align 4
  br label %120

120:                                              ; preds = %55
  %121 = load i32, i32* %22, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %22, align 4
  br label %52

123:                                              ; preds = %52
  %124 = load void (i32*)*, void (i32*)** %16, align 8
  %125 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 0
  call void %124(i32* %125)
  %126 = load [64 x i16]*, [64 x i16]** %11, align 8
  %127 = load i32, i32* %19, align 4
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds [64 x i16], [64 x i16]* %126, i64 %128
  %130 = getelementptr inbounds [64 x i16], [64 x i16]* %129, i64 0, i64 0
  store i16* %130, i16** %26, align 8
  store i32 0, i32* %25, align 4
  br label %131

131:                                              ; preds = %185, %123
  %132 = load i32, i32* %25, align 4
  %133 = icmp slt i32 %132, 64
  br i1 %133, label %134, label %188

134:                                              ; preds = %131
  %135 = load i32*, i32** %17, align 8
  %136 = load i32, i32* %25, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i32, i32* %135, i64 %137
  %139 = load i32, i32* %138, align 4
  store i32 %139, i32* %24, align 4
  %140 = load i32, i32* %25, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 %141
  %143 = load i32, i32* %142, align 4
  store i32 %143, i32* %23, align 4
  %144 = load i32, i32* %23, align 4
  %145 = icmp slt i32 %144, 0
  br i1 %145, label %146, label %164

146:                                              ; preds = %134
  %147 = load i32, i32* %23, align 4
  %148 = sub nsw i32 0, %147
  store i32 %148, i32* %23, align 4
  %149 = load i32, i32* %24, align 4
  %150 = ashr i32 %149, 1
  %151 = load i32, i32* %23, align 4
  %152 = add nsw i32 %151, %150
  store i32 %152, i32* %23, align 4
  %153 = load i32, i32* %23, align 4
  %154 = load i32, i32* %24, align 4
  %155 = icmp sge i32 %153, %154
  br i1 %155, label %156, label %160

156:                                              ; preds = %146
  %157 = load i32, i32* %24, align 4
  %158 = load i32, i32* %23, align 4
  %159 = sdiv i32 %158, %157
  store i32 %159, i32* %23, align 4
  br label %161

160:                                              ; preds = %146
  store i32 0, i32* %23, align 4
  br label %161

161:                                              ; preds = %160, %156
  %162 = load i32, i32* %23, align 4
  %163 = sub nsw i32 0, %162
  store i32 %163, i32* %23, align 4
  br label %178

164:                                              ; preds = %134
  %165 = load i32, i32* %24, align 4
  %166 = ashr i32 %165, 1
  %167 = load i32, i32* %23, align 4
  %168 = add nsw i32 %167, %166
  store i32 %168, i32* %23, align 4
  %169 = load i32, i32* %23, align 4
  %170 = load i32, i32* %24, align 4
  %171 = icmp sge i32 %169, %170
  br i1 %171, label %172, label %176

172:                                              ; preds = %164
  %173 = load i32, i32* %24, align 4
  %174 = load i32, i32* %23, align 4
  %175 = sdiv i32 %174, %173
  store i32 %175, i32* %23, align 4
  br label %177

176:                                              ; preds = %164
  store i32 0, i32* %23, align 4
  br label %177

177:                                              ; preds = %176, %172
  br label %178

178:                                              ; preds = %177, %161
  %179 = load i32, i32* %23, align 4
  %180 = trunc i32 %179 to i16
  %181 = load i16*, i16** %26, align 8
  %182 = load i32, i32* %25, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i16, i16* %181, i64 %183
  store i16 %180, i16* %184, align 2
  br label %185

185:                                              ; preds = %178
  %186 = load i32, i32* %25, align 4
  %187 = add nsw i32 %186, 1
  store i32 %187, i32* %25, align 4
  br label %131

188:                                              ; preds = %131
  br label %189

189:                                              ; preds = %188
  %190 = load i32, i32* %19, align 4
  %191 = add i32 %190, 1
  store i32 %191, i32* %19, align 4
  %192 = load i32, i32* %13, align 4
  %193 = add i32 %192, 8
  store i32 %193, i32* %13, align 4
  br label %46

194:                                              ; preds = %46
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @forward_DCT_float(%struct.jpeg_compress_struct.80* %0, %struct.jpeg_component_info* %1, i8** %2, [64 x i16]* %3, i32 %4, i32 %5, i32 %6) #0 {
  %8 = alloca %struct.jpeg_compress_struct.80*, align 8
  %9 = alloca %struct.jpeg_component_info*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca [64 x i16]*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.my_fdct_controller*, align 8
  %16 = alloca void (float*)*, align 8
  %17 = alloca float*, align 8
  %18 = alloca [64 x float], align 16
  %19 = alloca i32, align 4
  %20 = alloca float*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca float, align 4
  %24 = alloca i32, align 4
  %25 = alloca i16*, align 8
  store %struct.jpeg_compress_struct.80* %0, %struct.jpeg_compress_struct.80** %8, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %9, align 8
  store i8** %2, i8*** %10, align 8
  store [64 x i16]* %3, [64 x i16]** %11, align 8
  store i32 %4, i32* %12, align 4
  store i32 %5, i32* %13, align 4
  store i32 %6, i32* %14, align 4
  %26 = load %struct.jpeg_compress_struct.80*, %struct.jpeg_compress_struct.80** %8, align 8
  %27 = getelementptr inbounds %struct.jpeg_compress_struct.80, %struct.jpeg_compress_struct.80* %26, i32 0, i32 58
  %28 = load %struct.jpeg_forward_dct.96*, %struct.jpeg_forward_dct.96** %27, align 8
  %29 = bitcast %struct.jpeg_forward_dct.96* %28 to %struct.my_fdct_controller*
  store %struct.my_fdct_controller* %29, %struct.my_fdct_controller** %15, align 8
  %30 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %15, align 8
  %31 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %30, i32 0, i32 3
  %32 = load void (float*)*, void (float*)** %31, align 8
  store void (float*)* %32, void (float*)** %16, align 8
  %33 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %15, align 8
  %34 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %33, i32 0, i32 4
  %35 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8
  %36 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %35, i32 0, i32 4
  %37 = load i32, i32* %36, align 8
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [4 x float*], [4 x float*]* %34, i64 0, i64 %38
  %40 = load float*, float** %39, align 8
  store float* %40, float** %17, align 8
  %41 = load i32, i32* %12, align 4
  %42 = load i8**, i8*** %10, align 8
  %43 = zext i32 %41 to i64
  %44 = getelementptr inbounds i8*, i8** %42, i64 %43
  store i8** %44, i8*** %10, align 8
  store i32 0, i32* %19, align 4
  br label %45

45:                                               ; preds = %165, %7
  %46 = load i32, i32* %19, align 4
  %47 = load i32, i32* %14, align 4
  %48 = icmp ult i32 %46, %47
  br i1 %48, label %49, label %170

49:                                               ; preds = %45
  %50 = getelementptr inbounds [64 x float], [64 x float]* %18, i64 0, i64 0
  store float* %50, float** %20, align 8
  store i32 0, i32* %22, align 4
  br label %51

51:                                               ; preds = %127, %49
  %52 = load i32, i32* %22, align 4
  %53 = icmp slt i32 %52, 8
  br i1 %53, label %54, label %130

54:                                               ; preds = %51
  %55 = load i8**, i8*** %10, align 8
  %56 = load i32, i32* %22, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8*, i8** %55, i64 %57
  %59 = load i8*, i8** %58, align 8
  %60 = load i32, i32* %13, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* %59, i64 %61
  store i8* %62, i8** %21, align 8
  %63 = load i8*, i8** %21, align 8
  %64 = getelementptr inbounds i8, i8* %63, i32 1
  store i8* %64, i8** %21, align 8
  %65 = load i8, i8* %63, align 1
  %66 = zext i8 %65 to i32
  %67 = sub nsw i32 %66, 128
  %68 = sitofp i32 %67 to float
  %69 = load float*, float** %20, align 8
  %70 = getelementptr inbounds float, float* %69, i32 1
  store float* %70, float** %20, align 8
  store float %68, float* %69, align 4
  %71 = load i8*, i8** %21, align 8
  %72 = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %72, i8** %21, align 8
  %73 = load i8, i8* %71, align 1
  %74 = zext i8 %73 to i32
  %75 = sub nsw i32 %74, 128
  %76 = sitofp i32 %75 to float
  %77 = load float*, float** %20, align 8
  %78 = getelementptr inbounds float, float* %77, i32 1
  store float* %78, float** %20, align 8
  store float %76, float* %77, align 4
  %79 = load i8*, i8** %21, align 8
  %80 = getelementptr inbounds i8, i8* %79, i32 1
  store i8* %80, i8** %21, align 8
  %81 = load i8, i8* %79, align 1
  %82 = zext i8 %81 to i32
  %83 = sub nsw i32 %82, 128
  %84 = sitofp i32 %83 to float
  %85 = load float*, float** %20, align 8
  %86 = getelementptr inbounds float, float* %85, i32 1
  store float* %86, float** %20, align 8
  store float %84, float* %85, align 4
  %87 = load i8*, i8** %21, align 8
  %88 = getelementptr inbounds i8, i8* %87, i32 1
  store i8* %88, i8** %21, align 8
  %89 = load i8, i8* %87, align 1
  %90 = zext i8 %89 to i32
  %91 = sub nsw i32 %90, 128
  %92 = sitofp i32 %91 to float
  %93 = load float*, float** %20, align 8
  %94 = getelementptr inbounds float, float* %93, i32 1
  store float* %94, float** %20, align 8
  store float %92, float* %93, align 4
  %95 = load i8*, i8** %21, align 8
  %96 = getelementptr inbounds i8, i8* %95, i32 1
  store i8* %96, i8** %21, align 8
  %97 = load i8, i8* %95, align 1
  %98 = zext i8 %97 to i32
  %99 = sub nsw i32 %98, 128
  %100 = sitofp i32 %99 to float
  %101 = load float*, float** %20, align 8
  %102 = getelementptr inbounds float, float* %101, i32 1
  store float* %102, float** %20, align 8
  store float %100, float* %101, align 4
  %103 = load i8*, i8** %21, align 8
  %104 = getelementptr inbounds i8, i8* %103, i32 1
  store i8* %104, i8** %21, align 8
  %105 = load i8, i8* %103, align 1
  %106 = zext i8 %105 to i32
  %107 = sub nsw i32 %106, 128
  %108 = sitofp i32 %107 to float
  %109 = load float*, float** %20, align 8
  %110 = getelementptr inbounds float, float* %109, i32 1
  store float* %110, float** %20, align 8
  store float %108, float* %109, align 4
  %111 = load i8*, i8** %21, align 8
  %112 = getelementptr inbounds i8, i8* %111, i32 1
  store i8* %112, i8** %21, align 8
  %113 = load i8, i8* %111, align 1
  %114 = zext i8 %113 to i32
  %115 = sub nsw i32 %114, 128
  %116 = sitofp i32 %115 to float
  %117 = load float*, float** %20, align 8
  %118 = getelementptr inbounds float, float* %117, i32 1
  store float* %118, float** %20, align 8
  store float %116, float* %117, align 4
  %119 = load i8*, i8** %21, align 8
  %120 = getelementptr inbounds i8, i8* %119, i32 1
  store i8* %120, i8** %21, align 8
  %121 = load i8, i8* %119, align 1
  %122 = zext i8 %121 to i32
  %123 = sub nsw i32 %122, 128
  %124 = sitofp i32 %123 to float
  %125 = load float*, float** %20, align 8
  %126 = getelementptr inbounds float, float* %125, i32 1
  store float* %126, float** %20, align 8
  store float %124, float* %125, align 4
  br label %127

127:                                              ; preds = %54
  %128 = load i32, i32* %22, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %22, align 4
  br label %51

130:                                              ; preds = %51
  %131 = load void (float*)*, void (float*)** %16, align 8
  %132 = getelementptr inbounds [64 x float], [64 x float]* %18, i64 0, i64 0
  call void %131(float* %132)
  %133 = load [64 x i16]*, [64 x i16]** %11, align 8
  %134 = load i32, i32* %19, align 4
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds [64 x i16], [64 x i16]* %133, i64 %135
  %137 = getelementptr inbounds [64 x i16], [64 x i16]* %136, i64 0, i64 0
  store i16* %137, i16** %25, align 8
  store i32 0, i32* %24, align 4
  br label %138

138:                                              ; preds = %161, %130
  %139 = load i32, i32* %24, align 4
  %140 = icmp slt i32 %139, 64
  br i1 %140, label %141, label %164

141:                                              ; preds = %138
  %142 = load i32, i32* %24, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [64 x float], [64 x float]* %18, i64 0, i64 %143
  %145 = load float, float* %144, align 4
  %146 = load float*, float** %17, align 8
  %147 = load i32, i32* %24, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds float, float* %146, i64 %148
  %150 = load float, float* %149, align 4
  %151 = fmul float %145, %150
  store float %151, float* %23, align 4
  %152 = load float, float* %23, align 4
  %153 = fadd float %152, 1.638450e+04
  %154 = fptosi float %153 to i32
  %155 = sub nsw i32 %154, 16384
  %156 = trunc i32 %155 to i16
  %157 = load i16*, i16** %25, align 8
  %158 = load i32, i32* %24, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i16, i16* %157, i64 %159
  store i16 %156, i16* %160, align 2
  br label %161

161:                                              ; preds = %141
  %162 = load i32, i32* %24, align 4
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %24, align 4
  br label %138

164:                                              ; preds = %138
  br label %165

165:                                              ; preds = %164
  %166 = load i32, i32* %19, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %19, align 4
  %168 = load i32, i32* %13, align 4
  %169 = add i32 %168, 8
  store i32 %169, i32* %13, align 4
  br label %45

170:                                              ; preds = %45
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_make_c_derived_tbl(%struct.jpeg_compress_struct* %0, %struct.JHUFF_TBL* %1, %struct.c_derived_tbl** %2) #0 {
  %4 = alloca %struct.jpeg_compress_struct*, align 8
  %5 = alloca %struct.JHUFF_TBL*, align 8
  %6 = alloca %struct.c_derived_tbl**, align 8
  %7 = alloca %struct.c_derived_tbl*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [257 x i8], align 16
  %14 = alloca [257 x i32], align 16
  %15 = alloca i32, align 4
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %4, align 8
  store %struct.JHUFF_TBL* %1, %struct.JHUFF_TBL** %5, align 8
  store %struct.c_derived_tbl** %2, %struct.c_derived_tbl*** %6, align 8
  %16 = load %struct.c_derived_tbl**, %struct.c_derived_tbl*** %6, align 8
  %17 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %16, align 8
  %18 = icmp eq %struct.c_derived_tbl* %17, null
  br i1 %18, label %19, label %30

19:                                               ; preds = %3
  %20 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %20, i32 0, i32 1
  %22 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %21, align 8
  %23 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %22, i32 0, i32 0
  %24 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %23, align 8
  %25 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %26 = bitcast %struct.jpeg_compress_struct* %25 to %struct.jpeg_common_struct*
  %27 = call i8* %24(%struct.jpeg_common_struct* %26, i32 1, i64 1280)
  %28 = bitcast i8* %27 to %struct.c_derived_tbl*
  %29 = load %struct.c_derived_tbl**, %struct.c_derived_tbl*** %6, align 8
  store %struct.c_derived_tbl* %28, %struct.c_derived_tbl** %29, align 8
  br label %30

30:                                               ; preds = %19, %3
  %31 = load %struct.c_derived_tbl**, %struct.c_derived_tbl*** %6, align 8
  %32 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %31, align 8
  store %struct.c_derived_tbl* %32, %struct.c_derived_tbl** %7, align 8
  store i32 0, i32* %8, align 4
  store i32 1, i32* %10, align 4
  br label %33

33:                                               ; preds = %58, %30
  %34 = load i32, i32* %10, align 4
  %35 = icmp sle i32 %34, 16
  br i1 %35, label %36, label %61

36:                                               ; preds = %33
  store i32 1, i32* %9, align 4
  br label %37

37:                                               ; preds = %54, %36
  %38 = load i32, i32* %9, align 4
  %39 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %5, align 8
  %40 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %39, i32 0, i32 0
  %41 = load i32, i32* %10, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [17 x i8], [17 x i8]* %40, i64 0, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = icmp sle i32 %38, %45
  br i1 %46, label %47, label %57

47:                                               ; preds = %37
  %48 = load i32, i32* %10, align 4
  %49 = trunc i32 %48 to i8
  %50 = load i32, i32* %8, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %8, align 4
  %52 = sext i32 %50 to i64
  %53 = getelementptr inbounds [257 x i8], [257 x i8]* %13, i64 0, i64 %52
  store i8 %49, i8* %53, align 1
  br label %54

54:                                               ; preds = %47
  %55 = load i32, i32* %9, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %9, align 4
  br label %37

57:                                               ; preds = %37
  br label %58

58:                                               ; preds = %57
  %59 = load i32, i32* %10, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %10, align 4
  br label %33

61:                                               ; preds = %33
  %62 = load i32, i32* %8, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [257 x i8], [257 x i8]* %13, i64 0, i64 %63
  store i8 0, i8* %64, align 1
  %65 = load i32, i32* %8, align 4
  store i32 %65, i32* %11, align 4
  store i32 0, i32* %15, align 4
  %66 = getelementptr inbounds [257 x i8], [257 x i8]* %13, i64 0, i64 0
  %67 = load i8, i8* %66, align 16
  %68 = sext i8 %67 to i32
  store i32 %68, i32* %12, align 4
  store i32 0, i32* %8, align 4
  br label %69

69:                                               ; preds = %92, %61
  %70 = load i32, i32* %8, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [257 x i8], [257 x i8]* %13, i64 0, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = icmp ne i8 %73, 0
  br i1 %74, label %75, label %97

75:                                               ; preds = %69
  br label %76

76:                                               ; preds = %84, %75
  %77 = load i32, i32* %8, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [257 x i8], [257 x i8]* %13, i64 0, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = sext i8 %80 to i32
  %82 = load i32, i32* %12, align 4
  %83 = icmp eq i32 %81, %82
  br i1 %83, label %84, label %92

84:                                               ; preds = %76
  %85 = load i32, i32* %15, align 4
  %86 = load i32, i32* %8, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %8, align 4
  %88 = sext i32 %86 to i64
  %89 = getelementptr inbounds [257 x i32], [257 x i32]* %14, i64 0, i64 %88
  store i32 %85, i32* %89, align 4
  %90 = load i32, i32* %15, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %15, align 4
  br label %76

92:                                               ; preds = %76
  %93 = load i32, i32* %15, align 4
  %94 = shl i32 %93, 1
  store i32 %94, i32* %15, align 4
  %95 = load i32, i32* %12, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %12, align 4
  br label %69

97:                                               ; preds = %69
  %98 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %7, align 8
  %99 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %98, i32 0, i32 1
  %100 = getelementptr inbounds [256 x i8], [256 x i8]* %99, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %100, i8 0, i64 256, i1 false)
  store i32 0, i32* %8, align 4
  br label %101

101:                                              ; preds = %134, %97
  %102 = load i32, i32* %8, align 4
  %103 = load i32, i32* %11, align 4
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %105, label %137

105:                                              ; preds = %101
  %106 = load i32, i32* %8, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [257 x i32], [257 x i32]* %14, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %7, align 8
  %111 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %110, i32 0, i32 0
  %112 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %5, align 8
  %113 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %112, i32 0, i32 1
  %114 = load i32, i32* %8, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [256 x i8], [256 x i8]* %113, i64 0, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i32], [256 x i32]* %111, i64 0, i64 %118
  store i32 %109, i32* %119, align 4
  %120 = load i32, i32* %8, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds [257 x i8], [257 x i8]* %13, i64 0, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %7, align 8
  %125 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %124, i32 0, i32 1
  %126 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %5, align 8
  %127 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %126, i32 0, i32 1
  %128 = load i32, i32* %8, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [256 x i8], [256 x i8]* %127, i64 0, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* %125, i64 0, i64 %132
  store i8 %123, i8* %133, align 1
  br label %134

134:                                              ; preds = %105
  %135 = load i32, i32* %8, align 4
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %8, align 4
  br label %101

137:                                              ; preds = %101
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_gen_optimal_table(%struct.jpeg_compress_struct* %0, %struct.JHUFF_TBL* %1, i64* %2) #0 {
  %4 = alloca %struct.jpeg_compress_struct*, align 8
  %5 = alloca %struct.JHUFF_TBL*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca [33 x i8], align 16
  %8 = alloca [257 x i32], align 16
  %9 = alloca [257 x i32], align 16
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %4, align 8
  store %struct.JHUFF_TBL* %1, %struct.JHUFF_TBL** %5, align 8
  store i64* %2, i64** %6, align 8
  %16 = getelementptr inbounds [33 x i8], [33 x i8]* %7, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %16, i8 0, i64 33, i1 false)
  %17 = getelementptr inbounds [257 x i32], [257 x i32]* %8, i64 0, i64 0
  %18 = bitcast i32* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %18, i8 0, i64 1028, i1 false)
  store i32 0, i32* %13, align 4
  br label %19

19:                                               ; preds = %26, %3
  %20 = load i32, i32* %13, align 4
  %21 = icmp slt i32 %20, 257
  br i1 %21, label %22, label %29

22:                                               ; preds = %19
  %23 = load i32, i32* %13, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [257 x i32], [257 x i32]* %9, i64 0, i64 %24
  store i32 -1, i32* %25, align 4
  br label %26

26:                                               ; preds = %22
  %27 = load i32, i32* %13, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %13, align 4
  br label %19

29:                                               ; preds = %19
  %30 = load i64*, i64** %6, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 256
  store i64 1, i64* %31, align 8
  br label %32

32:                                               ; preds = %163, %29
  store i32 -1, i32* %10, align 4
  store i64 1000000000, i64* %15, align 8
  store i32 0, i32* %13, align 4
  br label %33

33:                                               ; preds = %59, %32
  %34 = load i32, i32* %13, align 4
  %35 = icmp sle i32 %34, 256
  br i1 %35, label %36, label %62

36:                                               ; preds = %33
  %37 = load i64*, i64** %6, align 8
  %38 = load i32, i32* %13, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i64, i64* %37, i64 %39
  %41 = load i64, i64* %40, align 8
  %42 = icmp ne i64 %41, 0
  br i1 %42, label %43, label %58

43:                                               ; preds = %36
  %44 = load i64*, i64** %6, align 8
  %45 = load i32, i32* %13, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i64, i64* %44, i64 %46
  %48 = load i64, i64* %47, align 8
  %49 = load i64, i64* %15, align 8
  %50 = icmp sle i64 %48, %49
  br i1 %50, label %51, label %58

51:                                               ; preds = %43
  %52 = load i64*, i64** %6, align 8
  %53 = load i32, i32* %13, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i64, i64* %52, i64 %54
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %15, align 8
  %57 = load i32, i32* %13, align 4
  store i32 %57, i32* %10, align 4
  br label %58

58:                                               ; preds = %51, %43, %36
  br label %59

59:                                               ; preds = %58
  %60 = load i32, i32* %13, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %13, align 4
  br label %33

62:                                               ; preds = %33
  store i32 -1, i32* %11, align 4
  store i64 1000000000, i64* %15, align 8
  store i32 0, i32* %13, align 4
  br label %63

63:                                               ; preds = %93, %62
  %64 = load i32, i32* %13, align 4
  %65 = icmp sle i32 %64, 256
  br i1 %65, label %66, label %96

66:                                               ; preds = %63
  %67 = load i64*, i64** %6, align 8
  %68 = load i32, i32* %13, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i64, i64* %67, i64 %69
  %71 = load i64, i64* %70, align 8
  %72 = icmp ne i64 %71, 0
  br i1 %72, label %73, label %92

73:                                               ; preds = %66
  %74 = load i64*, i64** %6, align 8
  %75 = load i32, i32* %13, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i64, i64* %74, i64 %76
  %78 = load i64, i64* %77, align 8
  %79 = load i64, i64* %15, align 8
  %80 = icmp sle i64 %78, %79
  br i1 %80, label %81, label %92

81:                                               ; preds = %73
  %82 = load i32, i32* %13, align 4
  %83 = load i32, i32* %10, align 4
  %84 = icmp ne i32 %82, %83
  br i1 %84, label %85, label %92

85:                                               ; preds = %81
  %86 = load i64*, i64** %6, align 8
  %87 = load i32, i32* %13, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i64, i64* %86, i64 %88
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %15, align 8
  %91 = load i32, i32* %13, align 4
  store i32 %91, i32* %11, align 4
  br label %92

92:                                               ; preds = %85, %81, %73, %66
  br label %93

93:                                               ; preds = %92
  %94 = load i32, i32* %13, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %13, align 4
  br label %63

96:                                               ; preds = %63
  %97 = load i32, i32* %11, align 4
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  br label %164

100:                                              ; preds = %96
  %101 = load i64*, i64** %6, align 8
  %102 = load i32, i32* %11, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i64, i64* %101, i64 %103
  %105 = load i64, i64* %104, align 8
  %106 = load i64*, i64** %6, align 8
  %107 = load i32, i32* %10, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i64, i64* %106, i64 %108
  %110 = load i64, i64* %109, align 8
  %111 = add nsw i64 %110, %105
  store i64 %111, i64* %109, align 8
  %112 = load i64*, i64** %6, align 8
  %113 = load i32, i32* %11, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i64, i64* %112, i64 %114
  store i64 0, i64* %115, align 8
  %116 = load i32, i32* %10, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [257 x i32], [257 x i32]* %8, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %118, align 4
  br label %121

121:                                              ; preds = %127, %100
  %122 = load i32, i32* %10, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds [257 x i32], [257 x i32]* %9, i64 0, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = icmp sge i32 %125, 0
  br i1 %126, label %127, label %137

127:                                              ; preds = %121
  %128 = load i32, i32* %10, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [257 x i32], [257 x i32]* %9, i64 0, i64 %129
  %131 = load i32, i32* %130, align 4
  store i32 %131, i32* %10, align 4
  %132 = load i32, i32* %10, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [257 x i32], [257 x i32]* %8, i64 0, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %134, align 4
  br label %121

137:                                              ; preds = %121
  %138 = load i32, i32* %11, align 4
  %139 = load i32, i32* %10, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds [257 x i32], [257 x i32]* %9, i64 0, i64 %140
  store i32 %138, i32* %141, align 4
  %142 = load i32, i32* %11, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [257 x i32], [257 x i32]* %8, i64 0, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = add nsw i32 %145, 1
  store i32 %146, i32* %144, align 4
  br label %147

147:                                              ; preds = %153, %137
  %148 = load i32, i32* %11, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [257 x i32], [257 x i32]* %9, i64 0, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = icmp sge i32 %151, 0
  br i1 %152, label %153, label %163

153:                                              ; preds = %147
  %154 = load i32, i32* %11, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [257 x i32], [257 x i32]* %9, i64 0, i64 %155
  %157 = load i32, i32* %156, align 4
  store i32 %157, i32* %11, align 4
  %158 = load i32, i32* %11, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [257 x i32], [257 x i32]* %8, i64 0, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = add nsw i32 %161, 1
  store i32 %162, i32* %160, align 4
  br label %147

163:                                              ; preds = %147
  br label %32

164:                                              ; preds = %99
  store i32 0, i32* %13, align 4
  br label %165

165:                                              ; preds = %202, %164
  %166 = load i32, i32* %13, align 4
  %167 = icmp sle i32 %166, 256
  br i1 %167, label %168, label %205

168:                                              ; preds = %165
  %169 = load i32, i32* %13, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds [257 x i32], [257 x i32]* %8, i64 0, i64 %170
  %172 = load i32, i32* %171, align 4
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %201

174:                                              ; preds = %168
  %175 = load i32, i32* %13, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [257 x i32], [257 x i32]* %8, i64 0, i64 %176
  %178 = load i32, i32* %177, align 4
  %179 = icmp sgt i32 %178, 32
  br i1 %179, label %180, label %192

180:                                              ; preds = %174
  %181 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %182 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %181, i32 0, i32 0
  %183 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %182, align 8
  %184 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %183, i32 0, i32 5
  store i32 38, i32* %184, align 8
  %185 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %186 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %185, i32 0, i32 0
  %187 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %186, align 8
  %188 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %187, i32 0, i32 0
  %189 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %188, align 8
  %190 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %191 = bitcast %struct.jpeg_compress_struct* %190 to %struct.jpeg_common_struct*
  call void %189(%struct.jpeg_common_struct* %191)
  br label %192

192:                                              ; preds = %180, %174
  %193 = load i32, i32* %13, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [257 x i32], [257 x i32]* %8, i64 0, i64 %194
  %196 = load i32, i32* %195, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds [33 x i8], [33 x i8]* %7, i64 0, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = add i8 %199, 1
  store i8 %200, i8* %198, align 1
  br label %201

201:                                              ; preds = %192, %168
  br label %202

202:                                              ; preds = %201
  %203 = load i32, i32* %13, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %13, align 4
  br label %165

205:                                              ; preds = %165
  store i32 32, i32* %13, align 4
  br label %206

206:                                              ; preds = %258, %205
  %207 = load i32, i32* %13, align 4
  %208 = icmp sgt i32 %207, 16
  br i1 %208, label %209, label %261

209:                                              ; preds = %206
  br label %210

210:                                              ; preds = %230, %209
  %211 = load i32, i32* %13, align 4
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds [33 x i8], [33 x i8]* %7, i64 0, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i32
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %217, label %257

217:                                              ; preds = %210
  %218 = load i32, i32* %13, align 4
  %219 = sub nsw i32 %218, 2
  store i32 %219, i32* %14, align 4
  br label %220

220:                                              ; preds = %227, %217
  %221 = load i32, i32* %14, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds [33 x i8], [33 x i8]* %7, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %230

227:                                              ; preds = %220
  %228 = load i32, i32* %14, align 4
  %229 = add nsw i32 %228, -1
  store i32 %229, i32* %14, align 4
  br label %220

230:                                              ; preds = %220
  %231 = load i32, i32* %13, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds [33 x i8], [33 x i8]* %7, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = sub nsw i32 %235, 2
  %237 = trunc i32 %236 to i8
  store i8 %237, i8* %233, align 1
  %238 = load i32, i32* %13, align 4
  %239 = sub nsw i32 %238, 1
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds [33 x i8], [33 x i8]* %7, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = add i8 %242, 1
  store i8 %243, i8* %241, align 1
  %244 = load i32, i32* %14, align 4
  %245 = add nsw i32 %244, 1
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds [33 x i8], [33 x i8]* %7, i64 0, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = add nsw i32 %249, 2
  %251 = trunc i32 %250 to i8
  store i8 %251, i8* %247, align 1
  %252 = load i32, i32* %14, align 4
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds [33 x i8], [33 x i8]* %7, i64 0, i64 %253
  %255 = load i8, i8* %254, align 1
  %256 = add i8 %255, -1
  store i8 %256, i8* %254, align 1
  br label %210

257:                                              ; preds = %210
  br label %258

258:                                              ; preds = %257
  %259 = load i32, i32* %13, align 4
  %260 = add nsw i32 %259, -1
  store i32 %260, i32* %13, align 4
  br label %206

261:                                              ; preds = %206
  br label %262

262:                                              ; preds = %269, %261
  %263 = load i32, i32* %13, align 4
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds [33 x i8], [33 x i8]* %7, i64 0, i64 %264
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i32
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %272

269:                                              ; preds = %262
  %270 = load i32, i32* %13, align 4
  %271 = add nsw i32 %270, -1
  store i32 %271, i32* %13, align 4
  br label %262

272:                                              ; preds = %262
  %273 = load i32, i32* %13, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds [33 x i8], [33 x i8]* %7, i64 0, i64 %274
  %276 = load i8, i8* %275, align 1
  %277 = add i8 %276, -1
  store i8 %277, i8* %275, align 1
  %278 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %5, align 8
  %279 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %278, i32 0, i32 0
  %280 = getelementptr inbounds [17 x i8], [17 x i8]* %279, i64 0, i64 0
  %281 = getelementptr inbounds [33 x i8], [33 x i8]* %7, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %280, i8* align 16 %281, i64 17, i1 false)
  store i32 0, i32* %12, align 4
  store i32 1, i32* %13, align 4
  br label %282

282:                                              ; preds = %311, %272
  %283 = load i32, i32* %13, align 4
  %284 = icmp sle i32 %283, 32
  br i1 %284, label %285, label %314

285:                                              ; preds = %282
  store i32 0, i32* %14, align 4
  br label %286

286:                                              ; preds = %307, %285
  %287 = load i32, i32* %14, align 4
  %288 = icmp sle i32 %287, 255
  br i1 %288, label %289, label %310

289:                                              ; preds = %286
  %290 = load i32, i32* %14, align 4
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds [257 x i32], [257 x i32]* %8, i64 0, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = load i32, i32* %13, align 4
  %295 = icmp eq i32 %293, %294
  br i1 %295, label %296, label %306

296:                                              ; preds = %289
  %297 = load i32, i32* %14, align 4
  %298 = trunc i32 %297 to i8
  %299 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %5, align 8
  %300 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %299, i32 0, i32 1
  %301 = load i32, i32* %12, align 4
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds [256 x i8], [256 x i8]* %300, i64 0, i64 %302
  store i8 %298, i8* %303, align 1
  %304 = load i32, i32* %12, align 4
  %305 = add nsw i32 %304, 1
  store i32 %305, i32* %12, align 4
  br label %306

306:                                              ; preds = %296, %289
  br label %307

307:                                              ; preds = %306
  %308 = load i32, i32* %14, align 4
  %309 = add nsw i32 %308, 1
  store i32 %309, i32* %14, align 4
  br label %286

310:                                              ; preds = %286
  br label %311

311:                                              ; preds = %310
  %312 = load i32, i32* %13, align 4
  %313 = add nsw i32 %312, 1
  store i32 %313, i32* %13, align 4
  br label %282

314:                                              ; preds = %282
  %315 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %5, align 8
  %316 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %315, i32 0, i32 2
  store i32 0, i32* %316, align 4
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_huff_encoder(%struct.jpeg_compress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct*, align 8
  %3 = alloca %struct.huff_entropy_encoder*, align 8
  %4 = alloca i32, align 4
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %2, align 8
  %5 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %5, i32 0, i32 1
  %7 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %7, i32 0, i32 0
  %9 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %8, align 8
  %10 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %11 = bitcast %struct.jpeg_compress_struct* %10 to %struct.jpeg_common_struct*
  %12 = call i8* %9(%struct.jpeg_common_struct* %11, i32 1, i64 192)
  %13 = bitcast i8* %12 to %struct.huff_entropy_encoder*
  store %struct.huff_entropy_encoder* %13, %struct.huff_entropy_encoder** %3, align 8
  %14 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %3, align 8
  %15 = bitcast %struct.huff_entropy_encoder* %14 to %struct.jpeg_entropy_encoder*
  %16 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %16, i32 0, i32 59
  store %struct.jpeg_entropy_encoder* %15, %struct.jpeg_entropy_encoder** %17, align 8
  %18 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %3, align 8
  %19 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %18, i32 0, i32 0
  %20 = getelementptr inbounds %struct.jpeg_entropy_encoder, %struct.jpeg_entropy_encoder* %19, i32 0, i32 0
  store void (%struct.jpeg_compress_struct*, i32)* @start_pass_huff, void (%struct.jpeg_compress_struct*, i32)** %20, align 8
  store i32 0, i32* %4, align 4
  br label %21

21:                                               ; preds = %45, %1
  %22 = load i32, i32* %4, align 4
  %23 = icmp slt i32 %22, 4
  br i1 %23, label %24, label %48

24:                                               ; preds = %21
  %25 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %3, align 8
  %26 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %25, i32 0, i32 5
  %27 = load i32, i32* %4, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [4 x %struct.c_derived_tbl*], [4 x %struct.c_derived_tbl*]* %26, i64 0, i64 %28
  store %struct.c_derived_tbl* null, %struct.c_derived_tbl** %29, align 8
  %30 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %3, align 8
  %31 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %30, i32 0, i32 4
  %32 = load i32, i32* %4, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [4 x %struct.c_derived_tbl*], [4 x %struct.c_derived_tbl*]* %31, i64 0, i64 %33
  store %struct.c_derived_tbl* null, %struct.c_derived_tbl** %34, align 8
  %35 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %3, align 8
  %36 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %35, i32 0, i32 7
  %37 = load i32, i32* %4, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [4 x i64*], [4 x i64*]* %36, i64 0, i64 %38
  store i64* null, i64** %39, align 8
  %40 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %3, align 8
  %41 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %40, i32 0, i32 6
  %42 = load i32, i32* %4, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [4 x i64*], [4 x i64*]* %41, i64 0, i64 %43
  store i64* null, i64** %44, align 8
  br label %45

45:                                               ; preds = %24
  %46 = load i32, i32* %4, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %4, align 4
  br label %21

48:                                               ; preds = %21
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_huff(%struct.jpeg_compress_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.huff_entropy_encoder*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %10 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %10, i32 0, i32 59
  %12 = load %struct.jpeg_entropy_encoder*, %struct.jpeg_entropy_encoder** %11, align 8
  %13 = bitcast %struct.jpeg_entropy_encoder* %12 to %struct.huff_entropy_encoder*
  store %struct.huff_entropy_encoder* %13, %struct.huff_entropy_encoder** %5, align 8
  %14 = load i32, i32* %4, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %2
  %17 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %18 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %17, i32 0, i32 0
  %19 = getelementptr inbounds %struct.jpeg_entropy_encoder, %struct.jpeg_entropy_encoder* %18, i32 0, i32 1
  store i32 (%struct.jpeg_compress_struct*, [64 x i16]**)* @encode_mcu_gather, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)** %19, align 8
  %20 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %21 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %20, i32 0, i32 0
  %22 = getelementptr inbounds %struct.jpeg_entropy_encoder, %struct.jpeg_entropy_encoder* %21, i32 0, i32 2
  store void (%struct.jpeg_compress_struct*)* @finish_pass_gather, void (%struct.jpeg_compress_struct*)** %22, align 8
  br label %30

23:                                               ; preds = %2
  %24 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %25 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %24, i32 0, i32 0
  %26 = getelementptr inbounds %struct.jpeg_entropy_encoder, %struct.jpeg_entropy_encoder* %25, i32 0, i32 1
  store i32 (%struct.jpeg_compress_struct*, [64 x i16]**)* @encode_mcu_huff, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)** %26, align 8
  %27 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %28 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %27, i32 0, i32 0
  %29 = getelementptr inbounds %struct.jpeg_entropy_encoder, %struct.jpeg_entropy_encoder* %28, i32 0, i32 2
  store void (%struct.jpeg_compress_struct*)* @finish_pass_huff, void (%struct.jpeg_compress_struct*)** %29, align 8
  br label %30

30:                                               ; preds = %23, %16
  store i32 0, i32* %6, align 4
  br label %31

31:                                               ; preds = %217, %30
  %32 = load i32, i32* %6, align 4
  %33 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %34 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %33, i32 0, i32 41
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %32, %35
  br i1 %36, label %37, label %220

37:                                               ; preds = %31
  %38 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %39 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %38, i32 0, i32 42
  %40 = load i32, i32* %6, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %39, i64 0, i64 %41
  %43 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %42, align 8
  store %struct.jpeg_component_info* %43, %struct.jpeg_component_info** %9, align 8
  %44 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8
  %45 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %44, i32 0, i32 5
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %7, align 4
  %47 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8
  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i32 0, i32 6
  %49 = load i32, i32* %48, align 8
  store i32 %49, i32* %8, align 4
  %50 = load i32, i32* %7, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %66, label %52

52:                                               ; preds = %37
  %53 = load i32, i32* %7, align 4
  %54 = icmp sge i32 %53, 4
  br i1 %54, label %66, label %55

55:                                               ; preds = %52
  %56 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %57 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %56, i32 0, i32 16
  %58 = load i32, i32* %7, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %57, i64 0, i64 %59
  %61 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %60, align 8
  %62 = icmp eq %struct.JHUFF_TBL* %61, null
  br i1 %62, label %63, label %85

63:                                               ; preds = %55
  %64 = load i32, i32* %4, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %85, label %66

66:                                               ; preds = %63, %52, %37
  %67 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %68 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %67, i32 0, i32 0
  %69 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %68, align 8
  %70 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %69, i32 0, i32 5
  store i32 49, i32* %70, align 8
  %71 = load i32, i32* %7, align 4
  %72 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %73 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %72, i32 0, i32 0
  %74 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %73, align 8
  %75 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %74, i32 0, i32 6
  %76 = bitcast %union.anon* %75 to [8 x i32]*
  %77 = getelementptr inbounds [8 x i32], [8 x i32]* %76, i64 0, i64 0
  store i32 %71, i32* %77, align 4
  %78 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %79 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %78, i32 0, i32 0
  %80 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %79, align 8
  %81 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %80, i32 0, i32 0
  %82 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %81, align 8
  %83 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %84 = bitcast %struct.jpeg_compress_struct* %83 to %struct.jpeg_common_struct*
  call void %82(%struct.jpeg_common_struct* %84)
  br label %85

85:                                               ; preds = %66, %63, %55
  %86 = load i32, i32* %8, align 4
  %87 = icmp slt i32 %86, 0
  br i1 %87, label %102, label %88

88:                                               ; preds = %85
  %89 = load i32, i32* %8, align 4
  %90 = icmp sge i32 %89, 4
  br i1 %90, label %102, label %91

91:                                               ; preds = %88
  %92 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %93 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %92, i32 0, i32 17
  %94 = load i32, i32* %8, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %93, i64 0, i64 %95
  %97 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %96, align 8
  %98 = icmp eq %struct.JHUFF_TBL* %97, null
  br i1 %98, label %99, label %121

99:                                               ; preds = %91
  %100 = load i32, i32* %4, align 4
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %121, label %102

102:                                              ; preds = %99, %88, %85
  %103 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %104 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %103, i32 0, i32 0
  %105 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %104, align 8
  %106 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %105, i32 0, i32 5
  store i32 49, i32* %106, align 8
  %107 = load i32, i32* %8, align 4
  %108 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %109 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %108, i32 0, i32 0
  %110 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %109, align 8
  %111 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %110, i32 0, i32 6
  %112 = bitcast %union.anon* %111 to [8 x i32]*
  %113 = getelementptr inbounds [8 x i32], [8 x i32]* %112, i64 0, i64 0
  store i32 %107, i32* %113, align 4
  %114 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %115 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %114, i32 0, i32 0
  %116 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %115, align 8
  %117 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %116, i32 0, i32 0
  %118 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %117, align 8
  %119 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %120 = bitcast %struct.jpeg_compress_struct* %119 to %struct.jpeg_common_struct*
  call void %118(%struct.jpeg_common_struct* %120)
  br label %121

121:                                              ; preds = %102, %99, %91
  %122 = load i32, i32* %4, align 4
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %185

124:                                              ; preds = %121
  %125 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %126 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %125, i32 0, i32 6
  %127 = load i32, i32* %7, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds [4 x i64*], [4 x i64*]* %126, i64 0, i64 %128
  %130 = load i64*, i64** %129, align 8
  %131 = icmp eq i64* %130, null
  br i1 %131, label %132, label %147

132:                                              ; preds = %124
  %133 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %134 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %133, i32 0, i32 1
  %135 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %134, align 8
  %136 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %135, i32 0, i32 0
  %137 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %136, align 8
  %138 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %139 = bitcast %struct.jpeg_compress_struct* %138 to %struct.jpeg_common_struct*
  %140 = call i8* %137(%struct.jpeg_common_struct* %139, i32 1, i64 2056)
  %141 = bitcast i8* %140 to i64*
  %142 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %143 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %142, i32 0, i32 6
  %144 = load i32, i32* %7, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [4 x i64*], [4 x i64*]* %143, i64 0, i64 %145
  store i64* %141, i64** %146, align 8
  br label %147

147:                                              ; preds = %132, %124
  %148 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %149 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %148, i32 0, i32 6
  %150 = load i32, i32* %7, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [4 x i64*], [4 x i64*]* %149, i64 0, i64 %151
  %153 = load i64*, i64** %152, align 8
  %154 = bitcast i64* %153 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %154, i8 0, i64 2056, i1 false)
  %155 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %156 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %155, i32 0, i32 7
  %157 = load i32, i32* %8, align 4
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds [4 x i64*], [4 x i64*]* %156, i64 0, i64 %158
  %160 = load i64*, i64** %159, align 8
  %161 = icmp eq i64* %160, null
  br i1 %161, label %162, label %177

162:                                              ; preds = %147
  %163 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %164 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %163, i32 0, i32 1
  %165 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %164, align 8
  %166 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %165, i32 0, i32 0
  %167 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %166, align 8
  %168 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %169 = bitcast %struct.jpeg_compress_struct* %168 to %struct.jpeg_common_struct*
  %170 = call i8* %167(%struct.jpeg_common_struct* %169, i32 1, i64 2056)
  %171 = bitcast i8* %170 to i64*
  %172 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %173 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %172, i32 0, i32 7
  %174 = load i32, i32* %8, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds [4 x i64*], [4 x i64*]* %173, i64 0, i64 %175
  store i64* %171, i64** %176, align 8
  br label %177

177:                                              ; preds = %162, %147
  %178 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %179 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %178, i32 0, i32 7
  %180 = load i32, i32* %8, align 4
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds [4 x i64*], [4 x i64*]* %179, i64 0, i64 %181
  %183 = load i64*, i64** %182, align 8
  %184 = bitcast i64* %183 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %184, i8 0, i64 2056, i1 false)
  br label %210

185:                                              ; preds = %121
  %186 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %187 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %188 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %187, i32 0, i32 16
  %189 = load i32, i32* %7, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %188, i64 0, i64 %190
  %192 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %191, align 8
  %193 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %194 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %193, i32 0, i32 4
  %195 = load i32, i32* %7, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds [4 x %struct.c_derived_tbl*], [4 x %struct.c_derived_tbl*]* %194, i64 0, i64 %196
  call void @jpeg_make_c_derived_tbl(%struct.jpeg_compress_struct* %186, %struct.JHUFF_TBL* %192, %struct.c_derived_tbl** %197)
  %198 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %199 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %200 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %199, i32 0, i32 17
  %201 = load i32, i32* %8, align 4
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %200, i64 0, i64 %202
  %204 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %203, align 8
  %205 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %206 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %205, i32 0, i32 5
  %207 = load i32, i32* %8, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [4 x %struct.c_derived_tbl*], [4 x %struct.c_derived_tbl*]* %206, i64 0, i64 %208
  call void @jpeg_make_c_derived_tbl(%struct.jpeg_compress_struct* %198, %struct.JHUFF_TBL* %204, %struct.c_derived_tbl** %209)
  br label %210

210:                                              ; preds = %185, %177
  %211 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %212 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %211, i32 0, i32 1
  %213 = getelementptr inbounds %struct.savable_state, %struct.savable_state* %212, i32 0, i32 2
  %214 = load i32, i32* %6, align 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds [4 x i32], [4 x i32]* %213, i64 0, i64 %215
  store i32 0, i32* %216, align 4
  br label %217

217:                                              ; preds = %210
  %218 = load i32, i32* %6, align 4
  %219 = add nsw i32 %218, 1
  store i32 %219, i32* %6, align 4
  br label %31

220:                                              ; preds = %31
  %221 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %222 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %221, i32 0, i32 1
  %223 = getelementptr inbounds %struct.savable_state, %struct.savable_state* %222, i32 0, i32 0
  store i64 0, i64* %223, align 8
  %224 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %225 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %224, i32 0, i32 1
  %226 = getelementptr inbounds %struct.savable_state, %struct.savable_state* %225, i32 0, i32 1
  store i32 0, i32* %226, align 8
  %227 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %228 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %227, i32 0, i32 29
  %229 = load i32, i32* %228, align 8
  %230 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %231 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %230, i32 0, i32 2
  store i32 %229, i32* %231, align 8
  %232 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %233 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %232, i32 0, i32 3
  store i32 0, i32* %233, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @encode_mcu_gather(%struct.jpeg_compress_struct* %0, [64 x i16]** %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct*, align 8
  %4 = alloca [64 x i16]**, align 8
  %5 = alloca %struct.huff_entropy_encoder*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %3, align 8
  store [64 x i16]** %1, [64 x i16]*** %4, align 8
  %9 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %9, i32 0, i32 59
  %11 = load %struct.jpeg_entropy_encoder*, %struct.jpeg_entropy_encoder** %10, align 8
  %12 = bitcast %struct.jpeg_entropy_encoder* %11 to %struct.huff_entropy_encoder*
  store %struct.huff_entropy_encoder* %12, %struct.huff_entropy_encoder** %5, align 8
  %13 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %13, i32 0, i32 29
  %15 = load i32, i32* %14, align 8
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %50

17:                                               ; preds = %2
  %18 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %19 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %45

22:                                               ; preds = %17
  store i32 0, i32* %7, align 4
  br label %23

23:                                               ; preds = %36, %22
  %24 = load i32, i32* %7, align 4
  %25 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %25, i32 0, i32 41
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %24, %27
  br i1 %28, label %29, label %39

29:                                               ; preds = %23
  %30 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %31 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %30, i32 0, i32 1
  %32 = getelementptr inbounds %struct.savable_state, %struct.savable_state* %31, i32 0, i32 2
  %33 = load i32, i32* %7, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [4 x i32], [4 x i32]* %32, i64 0, i64 %34
  store i32 0, i32* %35, align 4
  br label %36

36:                                               ; preds = %29
  %37 = load i32, i32* %7, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %7, align 4
  br label %23

39:                                               ; preds = %23
  %40 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %41 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %40, i32 0, i32 29
  %42 = load i32, i32* %41, align 8
  %43 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %44 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %43, i32 0, i32 2
  store i32 %42, i32* %44, align 8
  br label %45

45:                                               ; preds = %39, %17
  %46 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %47 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %46, i32 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = add i32 %48, -1
  store i32 %49, i32* %47, align 8
  br label %50

50:                                               ; preds = %45, %2
  store i32 0, i32* %6, align 4
  br label %51

51:                                               ; preds = %115, %50
  %52 = load i32, i32* %6, align 4
  %53 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %54 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %53, i32 0, i32 45
  %55 = load i32, i32* %54, align 8
  %56 = icmp slt i32 %52, %55
  br i1 %56, label %57, label %118

57:                                               ; preds = %51
  %58 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %59 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %58, i32 0, i32 46
  %60 = load i32, i32* %6, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [10 x i32], [10 x i32]* %59, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %7, align 4
  %64 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %65 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %64, i32 0, i32 42
  %66 = load i32, i32* %7, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %65, i64 0, i64 %67
  %69 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %68, align 8
  store %struct.jpeg_component_info* %69, %struct.jpeg_component_info** %8, align 8
  %70 = load [64 x i16]**, [64 x i16]*** %4, align 8
  %71 = load i32, i32* %6, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [64 x i16]*, [64 x i16]** %70, i64 %72
  %74 = load [64 x i16]*, [64 x i16]** %73, align 8
  %75 = getelementptr inbounds [64 x i16], [64 x i16]* %74, i64 0
  %76 = getelementptr inbounds [64 x i16], [64 x i16]* %75, i64 0, i64 0
  %77 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %78 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %77, i32 0, i32 1
  %79 = getelementptr inbounds %struct.savable_state, %struct.savable_state* %78, i32 0, i32 2
  %80 = load i32, i32* %7, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [4 x i32], [4 x i32]* %79, i64 0, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %85 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %84, i32 0, i32 6
  %86 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  %87 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %86, i32 0, i32 5
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [4 x i64*], [4 x i64*]* %85, i64 0, i64 %89
  %91 = load i64*, i64** %90, align 8
  %92 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %93 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %92, i32 0, i32 7
  %94 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  %95 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %94, i32 0, i32 6
  %96 = load i32, i32* %95, align 8
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [4 x i64*], [4 x i64*]* %93, i64 0, i64 %97
  %99 = load i64*, i64** %98, align 8
  call void @htest_one_block(i16* %76, i32 %83, i64* %91, i64* %99)
  %100 = load [64 x i16]**, [64 x i16]*** %4, align 8
  %101 = load i32, i32* %6, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [64 x i16]*, [64 x i16]** %100, i64 %102
  %104 = load [64 x i16]*, [64 x i16]** %103, align 8
  %105 = getelementptr inbounds [64 x i16], [64 x i16]* %104, i64 0
  %106 = getelementptr inbounds [64 x i16], [64 x i16]* %105, i64 0, i64 0
  %107 = load i16, i16* %106, align 2
  %108 = sext i16 %107 to i32
  %109 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %110 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %109, i32 0, i32 1
  %111 = getelementptr inbounds %struct.savable_state, %struct.savable_state* %110, i32 0, i32 2
  %112 = load i32, i32* %7, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [4 x i32], [4 x i32]* %111, i64 0, i64 %113
  store i32 %108, i32* %114, align 4
  br label %115

115:                                              ; preds = %57
  %116 = load i32, i32* %6, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %6, align 4
  br label %51

118:                                              ; preds = %51
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_pass_gather(%struct.jpeg_compress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct*, align 8
  %3 = alloca %struct.huff_entropy_encoder*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.jpeg_component_info*, align 8
  %8 = alloca %struct.JHUFF_TBL**, align 8
  %9 = alloca [4 x i32], align 16
  %10 = alloca [4 x i32], align 16
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %2, align 8
  %11 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %11, i32 0, i32 59
  %13 = load %struct.jpeg_entropy_encoder*, %struct.jpeg_entropy_encoder** %12, align 8
  %14 = bitcast %struct.jpeg_entropy_encoder* %13 to %struct.huff_entropy_encoder*
  store %struct.huff_entropy_encoder* %14, %struct.huff_entropy_encoder** %3, align 8
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 0
  %16 = bitcast i32* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %16, i8 0, i64 16, i1 false)
  %17 = getelementptr inbounds [4 x i32], [4 x i32]* %10, i64 0, i64 0
  %18 = bitcast i32* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %18, i8 0, i64 16, i1 false)
  store i32 0, i32* %4, align 4
  br label %19

19:                                               ; preds = %104, %1
  %20 = load i32, i32* %4, align 4
  %21 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %21, i32 0, i32 41
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %20, %23
  br i1 %24, label %25, label %107

25:                                               ; preds = %19
  %26 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %27 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %26, i32 0, i32 42
  %28 = load i32, i32* %4, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %27, i64 0, i64 %29
  %31 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %30, align 8
  store %struct.jpeg_component_info* %31, %struct.jpeg_component_info** %7, align 8
  %32 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %33 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %32, i32 0, i32 5
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %5, align 4
  %35 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %36 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %35, i32 0, i32 6
  %37 = load i32, i32* %36, align 8
  store i32 %37, i32* %6, align 4
  %38 = load i32, i32* %5, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %70, label %43

43:                                               ; preds = %25
  %44 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %45 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %44, i32 0, i32 16
  %46 = load i32, i32* %5, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %45, i64 0, i64 %47
  store %struct.JHUFF_TBL** %48, %struct.JHUFF_TBL*** %8, align 8
  %49 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %8, align 8
  %50 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %49, align 8
  %51 = icmp eq %struct.JHUFF_TBL* %50, null
  br i1 %51, label %52, label %57

52:                                               ; preds = %43
  %53 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %54 = bitcast %struct.jpeg_compress_struct* %53 to %struct.jpeg_common_struct*
  %55 = call %struct.JHUFF_TBL* bitcast (%struct.JHUFF_TBL* (%struct.jpeg_common_struct.212*)* @jpeg_alloc_huff_table to %struct.JHUFF_TBL* (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %54)
  %56 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %8, align 8
  store %struct.JHUFF_TBL* %55, %struct.JHUFF_TBL** %56, align 8
  br label %57

57:                                               ; preds = %52, %43
  %58 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %59 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %8, align 8
  %60 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %59, align 8
  %61 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %3, align 8
  %62 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %61, i32 0, i32 6
  %63 = load i32, i32* %5, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [4 x i64*], [4 x i64*]* %62, i64 0, i64 %64
  %66 = load i64*, i64** %65, align 8
  call void @jpeg_gen_optimal_table(%struct.jpeg_compress_struct* %58, %struct.JHUFF_TBL* %60, i64* %66)
  %67 = load i32, i32* %5, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %68
  store i32 1, i32* %69, align 4
  br label %70

70:                                               ; preds = %57, %25
  %71 = load i32, i32* %6, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [4 x i32], [4 x i32]* %10, i64 0, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %103, label %76

76:                                               ; preds = %70
  %77 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %78 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %77, i32 0, i32 17
  %79 = load i32, i32* %6, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %78, i64 0, i64 %80
  store %struct.JHUFF_TBL** %81, %struct.JHUFF_TBL*** %8, align 8
  %82 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %8, align 8
  %83 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %82, align 8
  %84 = icmp eq %struct.JHUFF_TBL* %83, null
  br i1 %84, label %85, label %90

85:                                               ; preds = %76
  %86 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %87 = bitcast %struct.jpeg_compress_struct* %86 to %struct.jpeg_common_struct*
  %88 = call %struct.JHUFF_TBL* bitcast (%struct.JHUFF_TBL* (%struct.jpeg_common_struct.212*)* @jpeg_alloc_huff_table to %struct.JHUFF_TBL* (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %87)
  %89 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %8, align 8
  store %struct.JHUFF_TBL* %88, %struct.JHUFF_TBL** %89, align 8
  br label %90

90:                                               ; preds = %85, %76
  %91 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %92 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %8, align 8
  %93 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %92, align 8
  %94 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %3, align 8
  %95 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %94, i32 0, i32 7
  %96 = load i32, i32* %6, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [4 x i64*], [4 x i64*]* %95, i64 0, i64 %97
  %99 = load i64*, i64** %98, align 8
  call void @jpeg_gen_optimal_table(%struct.jpeg_compress_struct* %91, %struct.JHUFF_TBL* %93, i64* %99)
  %100 = load i32, i32* %6, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [4 x i32], [4 x i32]* %10, i64 0, i64 %101
  store i32 1, i32* %102, align 4
  br label %103

103:                                              ; preds = %90, %70
  br label %104

104:                                              ; preds = %103
  %105 = load i32, i32* %4, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %4, align 4
  br label %19

107:                                              ; preds = %19
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @encode_mcu_huff(%struct.jpeg_compress_struct* %0, [64 x i16]** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_compress_struct*, align 8
  %5 = alloca [64 x i16]**, align 8
  %6 = alloca %struct.huff_entropy_encoder*, align 8
  %7 = alloca %struct.working_state, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %4, align 8
  store [64 x i16]** %1, [64 x i16]*** %5, align 8
  %11 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %11, i32 0, i32 59
  %13 = load %struct.jpeg_entropy_encoder*, %struct.jpeg_entropy_encoder** %12, align 8
  %14 = bitcast %struct.jpeg_entropy_encoder* %13 to %struct.huff_entropy_encoder*
  store %struct.huff_entropy_encoder* %14, %struct.huff_entropy_encoder** %6, align 8
  %15 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %15, i32 0, i32 5
  %17 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %17, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %struct.working_state, %struct.working_state* %7, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %21, i32 0, i32 5
  %23 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %23, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %struct.working_state, %struct.working_state* %7, i32 0, i32 1
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %struct.working_state, %struct.working_state* %7, i32 0, i32 2
  %28 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %6, align 8
  %29 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %28, i32 0, i32 1
  %30 = bitcast %struct.savable_state* %27 to i8*
  %31 = bitcast %struct.savable_state* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 32, i1 false)
  %32 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %33 = getelementptr inbounds %struct.working_state, %struct.working_state* %7, i32 0, i32 3
  store %struct.jpeg_compress_struct* %32, %struct.jpeg_compress_struct** %33, align 8
  %34 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %34, i32 0, i32 29
  %36 = load i32, i32* %35, align 8
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %52

38:                                               ; preds = %2
  %39 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %6, align 8
  %40 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %39, i32 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %51

43:                                               ; preds = %38
  %44 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %6, align 8
  %45 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %44, i32 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = call i32 @emit_restart(%struct.working_state* %7, i32 %46)
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %43
  store i32 0, i32* %3, align 4
  br label %169

50:                                               ; preds = %43
  br label %51

51:                                               ; preds = %50, %38
  br label %52

52:                                               ; preds = %51, %2
  store i32 0, i32* %8, align 4
  br label %53

53:                                               ; preds = %119, %52
  %54 = load i32, i32* %8, align 4
  %55 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %56 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %55, i32 0, i32 45
  %57 = load i32, i32* %56, align 8
  %58 = icmp slt i32 %54, %57
  br i1 %58, label %59, label %122

59:                                               ; preds = %53
  %60 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %61 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %60, i32 0, i32 46
  %62 = load i32, i32* %8, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [10 x i32], [10 x i32]* %61, i64 0, i64 %63
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %9, align 4
  %66 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %67 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %66, i32 0, i32 42
  %68 = load i32, i32* %9, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %67, i64 0, i64 %69
  %71 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %70, align 8
  store %struct.jpeg_component_info* %71, %struct.jpeg_component_info** %10, align 8
  %72 = load [64 x i16]**, [64 x i16]*** %5, align 8
  %73 = load i32, i32* %8, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [64 x i16]*, [64 x i16]** %72, i64 %74
  %76 = load [64 x i16]*, [64 x i16]** %75, align 8
  %77 = getelementptr inbounds [64 x i16], [64 x i16]* %76, i64 0
  %78 = getelementptr inbounds [64 x i16], [64 x i16]* %77, i64 0, i64 0
  %79 = getelementptr inbounds %struct.working_state, %struct.working_state* %7, i32 0, i32 2
  %80 = getelementptr inbounds %struct.savable_state, %struct.savable_state* %79, i32 0, i32 2
  %81 = load i32, i32* %9, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [4 x i32], [4 x i32]* %80, i64 0, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %6, align 8
  %86 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %85, i32 0, i32 4
  %87 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %10, align 8
  %88 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %87, i32 0, i32 5
  %89 = load i32, i32* %88, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [4 x %struct.c_derived_tbl*], [4 x %struct.c_derived_tbl*]* %86, i64 0, i64 %90
  %92 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %91, align 8
  %93 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %6, align 8
  %94 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %93, i32 0, i32 5
  %95 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %10, align 8
  %96 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %95, i32 0, i32 6
  %97 = load i32, i32* %96, align 8
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds [4 x %struct.c_derived_tbl*], [4 x %struct.c_derived_tbl*]* %94, i64 0, i64 %98
  %100 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %99, align 8
  %101 = call i32 @encode_one_block(%struct.working_state* %7, i16* %78, i32 %84, %struct.c_derived_tbl* %92, %struct.c_derived_tbl* %100)
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %104, label %103

103:                                              ; preds = %59
  store i32 0, i32* %3, align 4
  br label %169

104:                                              ; preds = %59
  %105 = load [64 x i16]**, [64 x i16]*** %5, align 8
  %106 = load i32, i32* %8, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [64 x i16]*, [64 x i16]** %105, i64 %107
  %109 = load [64 x i16]*, [64 x i16]** %108, align 8
  %110 = getelementptr inbounds [64 x i16], [64 x i16]* %109, i64 0
  %111 = getelementptr inbounds [64 x i16], [64 x i16]* %110, i64 0, i64 0
  %112 = load i16, i16* %111, align 2
  %113 = sext i16 %112 to i32
  %114 = getelementptr inbounds %struct.working_state, %struct.working_state* %7, i32 0, i32 2
  %115 = getelementptr inbounds %struct.savable_state, %struct.savable_state* %114, i32 0, i32 2
  %116 = load i32, i32* %9, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [4 x i32], [4 x i32]* %115, i64 0, i64 %117
  store i32 %113, i32* %118, align 4
  br label %119

119:                                              ; preds = %104
  %120 = load i32, i32* %8, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %8, align 4
  br label %53

122:                                              ; preds = %53
  %123 = getelementptr inbounds %struct.working_state, %struct.working_state* %7, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %126 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %125, i32 0, i32 5
  %127 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %126, align 8
  %128 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %127, i32 0, i32 0
  store i8* %124, i8** %128, align 8
  %129 = getelementptr inbounds %struct.working_state, %struct.working_state* %7, i32 0, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %132 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %131, i32 0, i32 5
  %133 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %132, align 8
  %134 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %133, i32 0, i32 1
  store i64 %130, i64* %134, align 8
  %135 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %6, align 8
  %136 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %135, i32 0, i32 1
  %137 = getelementptr inbounds %struct.working_state, %struct.working_state* %7, i32 0, i32 2
  %138 = bitcast %struct.savable_state* %136 to i8*
  %139 = bitcast %struct.savable_state* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %139, i64 32, i1 false)
  %140 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %141 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %140, i32 0, i32 29
  %142 = load i32, i32* %141, align 8
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %144, label %168

144:                                              ; preds = %122
  %145 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %6, align 8
  %146 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %145, i32 0, i32 2
  %147 = load i32, i32* %146, align 8
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %163

149:                                              ; preds = %144
  %150 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %151 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %150, i32 0, i32 29
  %152 = load i32, i32* %151, align 8
  %153 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %6, align 8
  %154 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %153, i32 0, i32 2
  store i32 %152, i32* %154, align 8
  %155 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %6, align 8
  %156 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %155, i32 0, i32 3
  %157 = load i32, i32* %156, align 4
  %158 = add nsw i32 %157, 1
  store i32 %158, i32* %156, align 4
  %159 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %6, align 8
  %160 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %159, i32 0, i32 3
  %161 = load i32, i32* %160, align 4
  %162 = and i32 %161, 7
  store i32 %162, i32* %160, align 4
  br label %163

163:                                              ; preds = %149, %144
  %164 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %6, align 8
  %165 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %164, i32 0, i32 2
  %166 = load i32, i32* %165, align 8
  %167 = add i32 %166, -1
  store i32 %167, i32* %165, align 8
  br label %168

168:                                              ; preds = %163, %122
  store i32 1, i32* %3, align 4
  br label %169

169:                                              ; preds = %168, %103, %49
  %170 = load i32, i32* %3, align 4
  ret i32 %170
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_pass_huff(%struct.jpeg_compress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct*, align 8
  %3 = alloca %struct.huff_entropy_encoder*, align 8
  %4 = alloca %struct.working_state, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %2, align 8
  %5 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %5, i32 0, i32 59
  %7 = load %struct.jpeg_entropy_encoder*, %struct.jpeg_entropy_encoder** %6, align 8
  %8 = bitcast %struct.jpeg_entropy_encoder* %7 to %struct.huff_entropy_encoder*
  store %struct.huff_entropy_encoder* %8, %struct.huff_entropy_encoder** %3, align 8
  %9 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %9, i32 0, i32 5
  %11 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %10, align 8
  %12 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %11, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %struct.working_state, %struct.working_state* %4, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %15, i32 0, i32 5
  %17 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %17, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %struct.working_state, %struct.working_state* %4, i32 0, i32 1
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %struct.working_state, %struct.working_state* %4, i32 0, i32 2
  %22 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %3, align 8
  %23 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %22, i32 0, i32 1
  %24 = bitcast %struct.savable_state* %21 to i8*
  %25 = bitcast %struct.savable_state* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 32, i1 false)
  %26 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %27 = getelementptr inbounds %struct.working_state, %struct.working_state* %4, i32 0, i32 3
  store %struct.jpeg_compress_struct* %26, %struct.jpeg_compress_struct** %27, align 8
  %28 = call i32 @flush_bits(%struct.working_state* %4)
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %42, label %30

30:                                               ; preds = %1
  %31 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %32 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %31, i32 0, i32 0
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i32 0, i32 5
  store i32 22, i32* %34, align 8
  %35 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %36 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %35, i32 0, i32 0
  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i32 0, i32 0
  %39 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %38, align 8
  %40 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %41 = bitcast %struct.jpeg_compress_struct* %40 to %struct.jpeg_common_struct*
  call void %39(%struct.jpeg_common_struct* %41)
  br label %42

42:                                               ; preds = %30, %1
  %43 = getelementptr inbounds %struct.working_state, %struct.working_state* %4, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %46 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %45, i32 0, i32 5
  %47 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %46, align 8
  %48 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %47, i32 0, i32 0
  store i8* %44, i8** %48, align 8
  %49 = getelementptr inbounds %struct.working_state, %struct.working_state* %4, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %52 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %51, i32 0, i32 5
  %53 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %52, align 8
  %54 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %53, i32 0, i32 1
  store i64 %50, i64* %54, align 8
  %55 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %3, align 8
  %56 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %55, i32 0, i32 1
  %57 = getelementptr inbounds %struct.working_state, %struct.working_state* %4, i32 0, i32 2
  %58 = bitcast %struct.savable_state* %56 to i8*
  %59 = bitcast %struct.savable_state* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 32, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @flush_bits(%struct.working_state* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.working_state*, align 8
  store %struct.working_state* %0, %struct.working_state** %3, align 8
  %4 = load %struct.working_state*, %struct.working_state** %3, align 8
  %5 = call i32 @emit_bits(%struct.working_state* %4, i32 127, i32 7)
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  store i32 0, i32* %2, align 4
  br label %15

8:                                                ; preds = %1
  %9 = load %struct.working_state*, %struct.working_state** %3, align 8
  %10 = getelementptr inbounds %struct.working_state, %struct.working_state* %9, i32 0, i32 2
  %11 = getelementptr inbounds %struct.savable_state, %struct.savable_state* %10, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = load %struct.working_state*, %struct.working_state** %3, align 8
  %13 = getelementptr inbounds %struct.working_state, %struct.working_state* %12, i32 0, i32 2
  %14 = getelementptr inbounds %struct.savable_state, %struct.savable_state* %13, i32 0, i32 1
  store i32 0, i32* %14, align 8
  store i32 1, i32* %2, align 4
  br label %15

15:                                               ; preds = %8, %7
  %16 = load i32, i32* %2, align 4
  ret i32 %16
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @emit_bits(%struct.working_state* %0, i32 %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.working_state*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.working_state* %0, %struct.working_state** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %11 = load i32, i32* %6, align 4
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %8, align 8
  %13 = load %struct.working_state*, %struct.working_state** %5, align 8
  %14 = getelementptr inbounds %struct.working_state, %struct.working_state* %13, i32 0, i32 2
  %15 = getelementptr inbounds %struct.savable_state, %struct.savable_state* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %9, align 4
  %17 = load i32, i32* %7, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %37

19:                                               ; preds = %3
  %20 = load %struct.working_state*, %struct.working_state** %5, align 8
  %21 = getelementptr inbounds %struct.working_state, %struct.working_state* %20, i32 0, i32 3
  %22 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %21, align 8
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %22, i32 0, i32 0
  %24 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %25 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %24, i32 0, i32 5
  store i32 39, i32* %25, align 8
  %26 = load %struct.working_state*, %struct.working_state** %5, align 8
  %27 = getelementptr inbounds %struct.working_state, %struct.working_state* %26, i32 0, i32 3
  %28 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %28, i32 0, i32 0
  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %29, align 8
  %31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i32 0, i32 0
  %32 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %31, align 8
  %33 = load %struct.working_state*, %struct.working_state** %5, align 8
  %34 = getelementptr inbounds %struct.working_state, %struct.working_state* %33, i32 0, i32 3
  %35 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %34, align 8
  %36 = bitcast %struct.jpeg_compress_struct* %35 to %struct.jpeg_common_struct*
  call void %32(%struct.jpeg_common_struct* %36)
  br label %37

37:                                               ; preds = %19, %3
  %38 = load i32, i32* %7, align 4
  %39 = zext i32 %38 to i64
  %40 = shl i64 1, %39
  %41 = sub nsw i64 %40, 1
  %42 = load i64, i64* %8, align 8
  %43 = and i64 %42, %41
  store i64 %43, i64* %8, align 8
  %44 = load i32, i32* %7, align 4
  %45 = load i32, i32* %9, align 4
  %46 = add nsw i32 %45, %44
  store i32 %46, i32* %9, align 4
  %47 = load i32, i32* %9, align 4
  %48 = sub nsw i32 24, %47
  %49 = load i64, i64* %8, align 8
  %50 = zext i32 %48 to i64
  %51 = shl i64 %49, %50
  store i64 %51, i64* %8, align 8
  %52 = load %struct.working_state*, %struct.working_state** %5, align 8
  %53 = getelementptr inbounds %struct.working_state, %struct.working_state* %52, i32 0, i32 2
  %54 = getelementptr inbounds %struct.savable_state, %struct.savable_state* %53, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = load i64, i64* %8, align 8
  %57 = or i64 %56, %55
  store i64 %57, i64* %8, align 8
  br label %58

58:                                               ; preds = %103, %37
  %59 = load i32, i32* %9, align 4
  %60 = icmp sge i32 %59, 8
  br i1 %60, label %61, label %108

61:                                               ; preds = %58
  %62 = load i64, i64* %8, align 8
  %63 = ashr i64 %62, 16
  %64 = and i64 %63, 255
  %65 = trunc i64 %64 to i32
  store i32 %65, i32* %10, align 4
  %66 = load i32, i32* %10, align 4
  %67 = trunc i32 %66 to i8
  %68 = load %struct.working_state*, %struct.working_state** %5, align 8
  %69 = getelementptr inbounds %struct.working_state, %struct.working_state* %68, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %71, i8** %69, align 8
  store i8 %67, i8* %70, align 1
  %72 = load %struct.working_state*, %struct.working_state** %5, align 8
  %73 = getelementptr inbounds %struct.working_state, %struct.working_state* %72, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, -1
  store i64 %75, i64* %73, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %83

77:                                               ; preds = %61
  %78 = load %struct.working_state*, %struct.working_state** %5, align 8
  %79 = call i32 @dump_buffer(%struct.working_state* %78)
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %77
  store i32 0, i32* %4, align 4
  br label %117

82:                                               ; preds = %77
  br label %83

83:                                               ; preds = %82, %61
  %84 = load i32, i32* %10, align 4
  %85 = icmp eq i32 %84, 255
  br i1 %85, label %86, label %103

86:                                               ; preds = %83
  %87 = load %struct.working_state*, %struct.working_state** %5, align 8
  %88 = getelementptr inbounds %struct.working_state, %struct.working_state* %87, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds i8, i8* %89, i32 1
  store i8* %90, i8** %88, align 8
  store i8 0, i8* %89, align 1
  %91 = load %struct.working_state*, %struct.working_state** %5, align 8
  %92 = getelementptr inbounds %struct.working_state, %struct.working_state* %91, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, -1
  store i64 %94, i64* %92, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %102

96:                                               ; preds = %86
  %97 = load %struct.working_state*, %struct.working_state** %5, align 8
  %98 = call i32 @dump_buffer(%struct.working_state* %97)
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %101, label %100

100:                                              ; preds = %96
  store i32 0, i32* %4, align 4
  br label %117

101:                                              ; preds = %96
  br label %102

102:                                              ; preds = %101, %86
  br label %103

103:                                              ; preds = %102, %83
  %104 = load i64, i64* %8, align 8
  %105 = shl i64 %104, 8
  store i64 %105, i64* %8, align 8
  %106 = load i32, i32* %9, align 4
  %107 = sub nsw i32 %106, 8
  store i32 %107, i32* %9, align 4
  br label %58

108:                                              ; preds = %58
  %109 = load i64, i64* %8, align 8
  %110 = load %struct.working_state*, %struct.working_state** %5, align 8
  %111 = getelementptr inbounds %struct.working_state, %struct.working_state* %110, i32 0, i32 2
  %112 = getelementptr inbounds %struct.savable_state, %struct.savable_state* %111, i32 0, i32 0
  store i64 %109, i64* %112, align 8
  %113 = load i32, i32* %9, align 4
  %114 = load %struct.working_state*, %struct.working_state** %5, align 8
  %115 = getelementptr inbounds %struct.working_state, %struct.working_state* %114, i32 0, i32 2
  %116 = getelementptr inbounds %struct.savable_state, %struct.savable_state* %115, i32 0, i32 1
  store i32 %113, i32* %116, align 8
  store i32 1, i32* %4, align 4
  br label %117

117:                                              ; preds = %108, %100, %81
  %118 = load i32, i32* %4, align 4
  ret i32 %118
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dump_buffer(%struct.working_state* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.working_state*, align 8
  %4 = alloca %struct.jpeg_destination_mgr*, align 8
  store %struct.working_state* %0, %struct.working_state** %3, align 8
  %5 = load %struct.working_state*, %struct.working_state** %3, align 8
  %6 = getelementptr inbounds %struct.working_state, %struct.working_state* %5, i32 0, i32 3
  %7 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %7, i32 0, i32 5
  %9 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %8, align 8
  store %struct.jpeg_destination_mgr* %9, %struct.jpeg_destination_mgr** %4, align 8
  %10 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %4, align 8
  %11 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %10, i32 0, i32 3
  %12 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %11, align 8
  %13 = load %struct.working_state*, %struct.working_state** %3, align 8
  %14 = getelementptr inbounds %struct.working_state, %struct.working_state* %13, i32 0, i32 3
  %15 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %14, align 8
  %16 = call i32 %12(%struct.jpeg_compress_struct* %15)
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  br label %30

19:                                               ; preds = %1
  %20 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %4, align 8
  %21 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = load %struct.working_state*, %struct.working_state** %3, align 8
  %24 = getelementptr inbounds %struct.working_state, %struct.working_state* %23, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %4, align 8
  %26 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %25, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = load %struct.working_state*, %struct.working_state** %3, align 8
  %29 = getelementptr inbounds %struct.working_state, %struct.working_state* %28, i32 0, i32 1
  store i64 %27, i64* %29, align 8
  store i32 1, i32* %2, align 4
  br label %30

30:                                               ; preds = %19, %18
  %31 = load i32, i32* %2, align 4
  ret i32 %31
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @emit_restart(%struct.working_state* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.working_state*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.working_state* %0, %struct.working_state** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = load %struct.working_state*, %struct.working_state** %4, align 8
  %8 = call i32 @flush_bits(%struct.working_state* %7)
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %66

11:                                               ; preds = %2
  %12 = load %struct.working_state*, %struct.working_state** %4, align 8
  %13 = getelementptr inbounds %struct.working_state, %struct.working_state* %12, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %15, i8** %13, align 8
  store i8 -1, i8* %14, align 1
  %16 = load %struct.working_state*, %struct.working_state** %4, align 8
  %17 = getelementptr inbounds %struct.working_state, %struct.working_state* %16, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, -1
  store i64 %19, i64* %17, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %11
  %22 = load %struct.working_state*, %struct.working_state** %4, align 8
  %23 = call i32 @dump_buffer(%struct.working_state* %22)
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  store i32 0, i32* %3, align 4
  br label %66

26:                                               ; preds = %21
  br label %27

27:                                               ; preds = %26, %11
  %28 = load i32, i32* %5, align 4
  %29 = add nsw i32 208, %28
  %30 = trunc i32 %29 to i8
  %31 = load %struct.working_state*, %struct.working_state** %4, align 8
  %32 = getelementptr inbounds %struct.working_state, %struct.working_state* %31, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %34, i8** %32, align 8
  store i8 %30, i8* %33, align 1
  %35 = load %struct.working_state*, %struct.working_state** %4, align 8
  %36 = getelementptr inbounds %struct.working_state, %struct.working_state* %35, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, -1
  store i64 %38, i64* %36, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %27
  %41 = load %struct.working_state*, %struct.working_state** %4, align 8
  %42 = call i32 @dump_buffer(%struct.working_state* %41)
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %40
  store i32 0, i32* %3, align 4
  br label %66

45:                                               ; preds = %40
  br label %46

46:                                               ; preds = %45, %27
  store i32 0, i32* %6, align 4
  br label %47

47:                                               ; preds = %62, %46
  %48 = load i32, i32* %6, align 4
  %49 = load %struct.working_state*, %struct.working_state** %4, align 8
  %50 = getelementptr inbounds %struct.working_state, %struct.working_state* %49, i32 0, i32 3
  %51 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %50, align 8
  %52 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %51, i32 0, i32 41
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %48, %53
  br i1 %54, label %55, label %65

55:                                               ; preds = %47
  %56 = load %struct.working_state*, %struct.working_state** %4, align 8
  %57 = getelementptr inbounds %struct.working_state, %struct.working_state* %56, i32 0, i32 2
  %58 = getelementptr inbounds %struct.savable_state, %struct.savable_state* %57, i32 0, i32 2
  %59 = load i32, i32* %6, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [4 x i32], [4 x i32]* %58, i64 0, i64 %60
  store i32 0, i32* %61, align 4
  br label %62

62:                                               ; preds = %55
  %63 = load i32, i32* %6, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %6, align 4
  br label %47

65:                                               ; preds = %47
  store i32 1, i32* %3, align 4
  br label %66

66:                                               ; preds = %65, %44, %25, %10
  %67 = load i32, i32* %3, align 4
  ret i32 %67
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @encode_one_block(%struct.working_state* %0, i16* %1, i32 %2, %struct.c_derived_tbl* %3, %struct.c_derived_tbl* %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.working_state*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.c_derived_tbl*, align 8
  %11 = alloca %struct.c_derived_tbl*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %struct.working_state* %0, %struct.working_state** %7, align 8
  store i16* %1, i16** %8, align 8
  store i32 %2, i32* %9, align 4
  store %struct.c_derived_tbl* %3, %struct.c_derived_tbl** %10, align 8
  store %struct.c_derived_tbl* %4, %struct.c_derived_tbl** %11, align 8
  %18 = load i16*, i16** %8, align 8
  %19 = getelementptr inbounds i16, i16* %18, i64 0
  %20 = load i16, i16* %19, align 2
  %21 = sext i16 %20 to i32
  %22 = load i32, i32* %9, align 4
  %23 = sub nsw i32 %21, %22
  store i32 %23, i32* %13, align 4
  store i32 %23, i32* %12, align 4
  %24 = load i32, i32* %12, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %5
  %27 = load i32, i32* %12, align 4
  %28 = sub nsw i32 0, %27
  store i32 %28, i32* %12, align 4
  %29 = load i32, i32* %13, align 4
  %30 = add nsw i32 %29, -1
  store i32 %30, i32* %13, align 4
  br label %31

31:                                               ; preds = %26, %5
  store i32 0, i32* %14, align 4
  br label %32

32:                                               ; preds = %35, %31
  %33 = load i32, i32* %12, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %32
  %36 = load i32, i32* %14, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %14, align 4
  %38 = load i32, i32* %12, align 4
  %39 = ashr i32 %38, 1
  store i32 %39, i32* %12, align 4
  br label %32

40:                                               ; preds = %32
  %41 = load %struct.working_state*, %struct.working_state** %7, align 8
  %42 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %10, align 8
  %43 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %42, i32 0, i32 0
  %44 = load i32, i32* %14, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [256 x i32], [256 x i32]* %43, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %10, align 8
  %49 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %48, i32 0, i32 1
  %50 = load i32, i32* %14, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [256 x i8], [256 x i8]* %49, i64 0, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = sext i8 %53 to i32
  %55 = call i32 @emit_bits(%struct.working_state* %41, i32 %47, i32 %54)
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %40
  store i32 0, i32* %6, align 4
  br label %178

58:                                               ; preds = %40
  %59 = load i32, i32* %14, align 4
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %69

61:                                               ; preds = %58
  %62 = load %struct.working_state*, %struct.working_state** %7, align 8
  %63 = load i32, i32* %13, align 4
  %64 = load i32, i32* %14, align 4
  %65 = call i32 @emit_bits(%struct.working_state* %62, i32 %63, i32 %64)
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %61
  store i32 0, i32* %6, align 4
  br label %178

68:                                               ; preds = %61
  br label %69

69:                                               ; preds = %68, %58
  store i32 0, i32* %16, align 4
  store i32 1, i32* %15, align 4
  br label %70

70:                                               ; preds = %156, %69
  %71 = load i32, i32* %15, align 4
  %72 = icmp slt i32 %71, 64
  br i1 %72, label %73, label %159

73:                                               ; preds = %70
  %74 = load i16*, i16** %8, align 8
  %75 = load i32, i32* %15, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i16, i16* %74, i64 %79
  %81 = load i16, i16* %80, align 2
  %82 = sext i16 %81 to i32
  store i32 %82, i32* %12, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %73
  %85 = load i32, i32* %16, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %16, align 4
  br label %155

87:                                               ; preds = %73
  br label %88

88:                                               ; preds = %105, %87
  %89 = load i32, i32* %16, align 4
  %90 = icmp sgt i32 %89, 15
  br i1 %90, label %91, label %108

91:                                               ; preds = %88
  %92 = load %struct.working_state*, %struct.working_state** %7, align 8
  %93 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %11, align 8
  %94 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %93, i32 0, i32 0
  %95 = getelementptr inbounds [256 x i32], [256 x i32]* %94, i64 0, i64 240
  %96 = load i32, i32* %95, align 4
  %97 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %11, align 8
  %98 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %97, i32 0, i32 1
  %99 = getelementptr inbounds [256 x i8], [256 x i8]* %98, i64 0, i64 240
  %100 = load i8, i8* %99, align 4
  %101 = sext i8 %100 to i32
  %102 = call i32 @emit_bits(%struct.working_state* %92, i32 %96, i32 %101)
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %105, label %104

104:                                              ; preds = %91
  store i32 0, i32* %6, align 4
  br label %178

105:                                              ; preds = %91
  %106 = load i32, i32* %16, align 4
  %107 = sub nsw i32 %106, 16
  store i32 %107, i32* %16, align 4
  br label %88

108:                                              ; preds = %88
  %109 = load i32, i32* %12, align 4
  store i32 %109, i32* %13, align 4
  %110 = load i32, i32* %12, align 4
  %111 = icmp slt i32 %110, 0
  br i1 %111, label %112, label %117

112:                                              ; preds = %108
  %113 = load i32, i32* %12, align 4
  %114 = sub nsw i32 0, %113
  store i32 %114, i32* %12, align 4
  %115 = load i32, i32* %13, align 4
  %116 = add nsw i32 %115, -1
  store i32 %116, i32* %13, align 4
  br label %117

117:                                              ; preds = %112, %108
  store i32 1, i32* %14, align 4
  br label %118

118:                                              ; preds = %122, %117
  %119 = load i32, i32* %12, align 4
  %120 = ashr i32 %119, 1
  store i32 %120, i32* %12, align 4
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %118
  %123 = load i32, i32* %14, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %14, align 4
  br label %118

125:                                              ; preds = %118
  %126 = load i32, i32* %16, align 4
  %127 = shl i32 %126, 4
  %128 = load i32, i32* %14, align 4
  %129 = add nsw i32 %127, %128
  store i32 %129, i32* %17, align 4
  %130 = load %struct.working_state*, %struct.working_state** %7, align 8
  %131 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %11, align 8
  %132 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %131, i32 0, i32 0
  %133 = load i32, i32* %17, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [256 x i32], [256 x i32]* %132, i64 0, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %11, align 8
  %138 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %137, i32 0, i32 1
  %139 = load i32, i32* %17, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds [256 x i8], [256 x i8]* %138, i64 0, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = sext i8 %142 to i32
  %144 = call i32 @emit_bits(%struct.working_state* %130, i32 %136, i32 %143)
  %145 = icmp ne i32 %144, 0
  br i1 %145, label %147, label %146

146:                                              ; preds = %125
  store i32 0, i32* %6, align 4
  br label %178

147:                                              ; preds = %125
  %148 = load %struct.working_state*, %struct.working_state** %7, align 8
  %149 = load i32, i32* %13, align 4
  %150 = load i32, i32* %14, align 4
  %151 = call i32 @emit_bits(%struct.working_state* %148, i32 %149, i32 %150)
  %152 = icmp ne i32 %151, 0
  br i1 %152, label %154, label %153

153:                                              ; preds = %147
  store i32 0, i32* %6, align 4
  br label %178

154:                                              ; preds = %147
  store i32 0, i32* %16, align 4
  br label %155

155:                                              ; preds = %154, %84
  br label %156

156:                                              ; preds = %155
  %157 = load i32, i32* %15, align 4
  %158 = add nsw i32 %157, 1
  store i32 %158, i32* %15, align 4
  br label %70

159:                                              ; preds = %70
  %160 = load i32, i32* %16, align 4
  %161 = icmp sgt i32 %160, 0
  br i1 %161, label %162, label %177

162:                                              ; preds = %159
  %163 = load %struct.working_state*, %struct.working_state** %7, align 8
  %164 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %11, align 8
  %165 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %164, i32 0, i32 0
  %166 = getelementptr inbounds [256 x i32], [256 x i32]* %165, i64 0, i64 0
  %167 = load i32, i32* %166, align 4
  %168 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %11, align 8
  %169 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %168, i32 0, i32 1
  %170 = getelementptr inbounds [256 x i8], [256 x i8]* %169, i64 0, i64 0
  %171 = load i8, i8* %170, align 4
  %172 = sext i8 %171 to i32
  %173 = call i32 @emit_bits(%struct.working_state* %163, i32 %167, i32 %172)
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %176, label %175

175:                                              ; preds = %162
  store i32 0, i32* %6, align 4
  br label %178

176:                                              ; preds = %162
  br label %177

177:                                              ; preds = %176, %159
  store i32 1, i32* %6, align 4
  br label %178

178:                                              ; preds = %177, %175, %153, %146, %104, %67, %57
  %179 = load i32, i32* %6, align 4
  ret i32 %179
}

; Function Attrs: noinline nounwind uwtable
define internal void @htest_one_block(i16* %0, i32 %1, i64* %2, i64* %3) #0 {
  %5 = alloca i16*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i16* %0, i16** %5, align 8
  store i32 %1, i32* %6, align 4
  store i64* %2, i64** %7, align 8
  store i64* %3, i64** %8, align 8
  %13 = load i16*, i16** %5, align 8
  %14 = getelementptr inbounds i16, i16* %13, i64 0
  %15 = load i16, i16* %14, align 2
  %16 = sext i16 %15 to i32
  %17 = load i32, i32* %6, align 4
  %18 = sub nsw i32 %16, %17
  store i32 %18, i32* %9, align 4
  %19 = load i32, i32* %9, align 4
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %4
  %22 = load i32, i32* %9, align 4
  %23 = sub nsw i32 0, %22
  store i32 %23, i32* %9, align 4
  br label %24

24:                                               ; preds = %21, %4
  store i32 0, i32* %10, align 4
  br label %25

25:                                               ; preds = %28, %24
  %26 = load i32, i32* %9, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %25
  %29 = load i32, i32* %10, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %10, align 4
  %31 = load i32, i32* %9, align 4
  %32 = ashr i32 %31, 1
  store i32 %32, i32* %9, align 4
  br label %25

33:                                               ; preds = %25
  %34 = load i64*, i64** %7, align 8
  %35 = load i32, i32* %10, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = load i64, i64* %37, align 8
  %39 = add nsw i64 %38, 1
  store i64 %39, i64* %37, align 8
  store i32 0, i32* %12, align 4
  store i32 1, i32* %11, align 4
  br label %40

40:                                               ; preds = %93, %33
  %41 = load i32, i32* %11, align 4
  %42 = icmp slt i32 %41, 64
  br i1 %42, label %43, label %96

43:                                               ; preds = %40
  %44 = load i16*, i16** %5, align 8
  %45 = load i32, i32* %11, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i16, i16* %44, i64 %49
  %51 = load i16, i16* %50, align 2
  %52 = sext i16 %51 to i32
  store i32 %52, i32* %9, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %43
  %55 = load i32, i32* %12, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %12, align 4
  br label %92

57:                                               ; preds = %43
  br label %58

58:                                               ; preds = %61, %57
  %59 = load i32, i32* %12, align 4
  %60 = icmp sgt i32 %59, 15
  br i1 %60, label %61, label %68

61:                                               ; preds = %58
  %62 = load i64*, i64** %8, align 8
  %63 = getelementptr inbounds i64, i64* %62, i64 240
  %64 = load i64, i64* %63, align 8
  %65 = add nsw i64 %64, 1
  store i64 %65, i64* %63, align 8
  %66 = load i32, i32* %12, align 4
  %67 = sub nsw i32 %66, 16
  store i32 %67, i32* %12, align 4
  br label %58

68:                                               ; preds = %58
  %69 = load i32, i32* %9, align 4
  %70 = icmp slt i32 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %68
  %72 = load i32, i32* %9, align 4
  %73 = sub nsw i32 0, %72
  store i32 %73, i32* %9, align 4
  br label %74

74:                                               ; preds = %71, %68
  store i32 1, i32* %10, align 4
  br label %75

75:                                               ; preds = %79, %74
  %76 = load i32, i32* %9, align 4
  %77 = ashr i32 %76, 1
  store i32 %77, i32* %9, align 4
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %75
  %80 = load i32, i32* %10, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %10, align 4
  br label %75

82:                                               ; preds = %75
  %83 = load i64*, i64** %8, align 8
  %84 = load i32, i32* %12, align 4
  %85 = shl i32 %84, 4
  %86 = load i32, i32* %10, align 4
  %87 = add nsw i32 %85, %86
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i64, i64* %83, i64 %88
  %90 = load i64, i64* %89, align 8
  %91 = add nsw i64 %90, 1
  store i64 %91, i64* %89, align 8
  store i32 0, i32* %12, align 4
  br label %92

92:                                               ; preds = %82, %54
  br label %93

93:                                               ; preds = %92
  %94 = load i32, i32* %11, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %11, align 4
  br label %40

96:                                               ; preds = %40
  %97 = load i32, i32* %12, align 4
  %98 = icmp sgt i32 %97, 0
  br i1 %98, label %99, label %104

99:                                               ; preds = %96
  %100 = load i64*, i64** %8, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 0
  %102 = load i64, i64* %101, align 8
  %103 = add nsw i64 %102, 1
  store i64 %103, i64* %101, align 8
  br label %104

104:                                              ; preds = %99, %96
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_compress_master(%struct.jpeg_compress_struct.58* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.58*, align 8
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %2, align 8
  %3 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  call void bitcast (void (%struct.jpeg_compress_struct.190*, i32)* @jinit_c_master_control to void (%struct.jpeg_compress_struct.58*, i32)*)(%struct.jpeg_compress_struct.58* %3, i32 0)
  %4 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %4, i32 0, i32 23
  %6 = load i32, i32* %5, align 8
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  call void @jinit_color_converter(%struct.jpeg_compress_struct.58* %9)
  %10 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  call void @jinit_downsampler(%struct.jpeg_compress_struct.58* %10)
  %11 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  call void bitcast (void (%struct.jpeg_compress_struct.266*, i32)* @jinit_c_prep_controller to void (%struct.jpeg_compress_struct.58*, i32)*)(%struct.jpeg_compress_struct.58* %11, i32 0)
  br label %12

12:                                               ; preds = %8, %1
  %13 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  call void bitcast (void (%struct.jpeg_compress_struct.80*)* @jinit_forward_dct to void (%struct.jpeg_compress_struct.58*)*)(%struct.jpeg_compress_struct.58* %13)
  %14 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %14, i32 0, i32 24
  %16 = load i32, i32* %15, align 4
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %12
  %19 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %19, i32 0, i32 0
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i32 0, i32 5
  store i32 1, i32* %22, align 8
  %23 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %23, i32 0, i32 0
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i32 0, i32 0
  %27 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %26, align 8
  %28 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %29 = bitcast %struct.jpeg_compress_struct.58* %28 to %struct.jpeg_common_struct*
  call void %27(%struct.jpeg_common_struct* %29)
  br label %40

30:                                               ; preds = %12
  %31 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %32 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %31, i32 0, i32 37
  %33 = load i32, i32* %32, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  call void @jinit_phuff_encoder(%struct.jpeg_compress_struct.58* %36)
  br label %39

37:                                               ; preds = %30
  %38 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  call void bitcast (void (%struct.jpeg_compress_struct*)* @jinit_huff_encoder to void (%struct.jpeg_compress_struct.58*)*)(%struct.jpeg_compress_struct.58* %38)
  br label %39

39:                                               ; preds = %37, %35
  br label %40

40:                                               ; preds = %39, %18
  %41 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %42 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %43 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %42, i32 0, i32 21
  %44 = load i32, i32* %43, align 8
  %45 = icmp sgt i32 %44, 1
  br i1 %45, label %51, label %46

46:                                               ; preds = %40
  %47 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %48 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %47, i32 0, i32 25
  %49 = load i32, i32* %48, align 8
  %50 = icmp ne i32 %49, 0
  br label %51

51:                                               ; preds = %46, %40
  %52 = phi i1 [ true, %40 ], [ %50, %46 ]
  %53 = zext i1 %52 to i32
  call void bitcast (void (%struct.jpeg_compress_struct.36*, i32)* @jinit_c_coef_controller to void (%struct.jpeg_compress_struct.58*, i32)*)(%struct.jpeg_compress_struct.58* %41, i32 %53)
  %54 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  call void bitcast (void (%struct.jpeg_compress_struct.146*, i32)* @jinit_c_main_controller to void (%struct.jpeg_compress_struct.58*, i32)*)(%struct.jpeg_compress_struct.58* %54, i32 0)
  %55 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  call void bitcast (void (%struct.jpeg_compress_struct.168*)* @jinit_marker_writer to void (%struct.jpeg_compress_struct.58*)*)(%struct.jpeg_compress_struct.58* %55)
  %56 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %57 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %56, i32 0, i32 1
  %58 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %57, align 8
  %59 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %58, i32 0, i32 6
  %60 = bitcast {}** %59 to void (%struct.jpeg_common_struct*)**
  %61 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %60, align 8
  %62 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %63 = bitcast %struct.jpeg_compress_struct.58* %62 to %struct.jpeg_common_struct*
  call void %61(%struct.jpeg_common_struct* %63)
  %64 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %65 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %64, i32 0, i32 55
  %66 = load %struct.jpeg_marker_writer.71*, %struct.jpeg_marker_writer.71** %65, align 8
  %67 = getelementptr inbounds %struct.jpeg_marker_writer.71, %struct.jpeg_marker_writer.71* %66, i32 0, i32 1
  %68 = bitcast {}** %67 to void (%struct.jpeg_compress_struct.58*)**
  %69 = load void (%struct.jpeg_compress_struct.58*)*, void (%struct.jpeg_compress_struct.58*)** %68, align 8
  %70 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  call void %69(%struct.jpeg_compress_struct.58* %70)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_c_main_controller(%struct.jpeg_compress_struct.146* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.146*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.my_main_controller*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_compress_struct.146* %0, %struct.jpeg_compress_struct.146** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %3, align 8
  %9 = getelementptr inbounds %struct.jpeg_compress_struct.146, %struct.jpeg_compress_struct.146* %8, i32 0, i32 1
  %10 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %10, i32 0, i32 0
  %12 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %11, align 8
  %13 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %3, align 8
  %14 = bitcast %struct.jpeg_compress_struct.146* %13 to %struct.jpeg_common_struct*
  %15 = call i8* %12(%struct.jpeg_common_struct* %14, i32 1, i64 112)
  %16 = bitcast i8* %15 to %struct.my_main_controller*
  store %struct.my_main_controller* %16, %struct.my_main_controller** %5, align 8
  %17 = load %struct.my_main_controller*, %struct.my_main_controller** %5, align 8
  %18 = bitcast %struct.my_main_controller* %17 to %struct.jpeg_c_main_controller.156*
  %19 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %3, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct.146, %struct.jpeg_compress_struct.146* %19, i32 0, i32 52
  store %struct.jpeg_c_main_controller.156* %18, %struct.jpeg_c_main_controller.156** %20, align 8
  %21 = load %struct.my_main_controller*, %struct.my_main_controller** %5, align 8
  %22 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %21, i32 0, i32 0
  %23 = getelementptr inbounds %struct.jpeg_c_main_controller.156, %struct.jpeg_c_main_controller.156* %22, i32 0, i32 0
  store void (%struct.jpeg_compress_struct.146*, i32)* @start_pass_main, void (%struct.jpeg_compress_struct.146*, i32)** %23, align 8
  %24 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %3, align 8
  %25 = getelementptr inbounds %struct.jpeg_compress_struct.146, %struct.jpeg_compress_struct.146* %24, i32 0, i32 23
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %2
  br label %82

29:                                               ; preds = %2
  %30 = load i32, i32* %4, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %29
  %33 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %3, align 8
  %34 = getelementptr inbounds %struct.jpeg_compress_struct.146, %struct.jpeg_compress_struct.146* %33, i32 0, i32 0
  %35 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %34, align 8
  %36 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %35, i32 0, i32 5
  store i32 4, i32* %36, align 8
  %37 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %3, align 8
  %38 = getelementptr inbounds %struct.jpeg_compress_struct.146, %struct.jpeg_compress_struct.146* %37, i32 0, i32 0
  %39 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %38, align 8
  %40 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i32 0, i32 0
  %41 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %40, align 8
  %42 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %3, align 8
  %43 = bitcast %struct.jpeg_compress_struct.146* %42 to %struct.jpeg_common_struct*
  call void %41(%struct.jpeg_common_struct* %43)
  br label %82

44:                                               ; preds = %29
  store i32 0, i32* %6, align 4
  %45 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %3, align 8
  %46 = getelementptr inbounds %struct.jpeg_compress_struct.146, %struct.jpeg_compress_struct.146* %45, i32 0, i32 14
  %47 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %46, align 8
  store %struct.jpeg_component_info* %47, %struct.jpeg_component_info** %7, align 8
  br label %48

48:                                               ; preds = %76, %44
  %49 = load i32, i32* %6, align 4
  %50 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %3, align 8
  %51 = getelementptr inbounds %struct.jpeg_compress_struct.146, %struct.jpeg_compress_struct.146* %50, i32 0, i32 12
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %49, %52
  br i1 %53, label %54, label %81

54:                                               ; preds = %48
  %55 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %3, align 8
  %56 = getelementptr inbounds %struct.jpeg_compress_struct.146, %struct.jpeg_compress_struct.146* %55, i32 0, i32 1
  %57 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %56, align 8
  %58 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %57, i32 0, i32 2
  %59 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %58, align 8
  %60 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %3, align 8
  %61 = bitcast %struct.jpeg_compress_struct.146* %60 to %struct.jpeg_common_struct*
  %62 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %63 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i32 0, i32 7
  %64 = load i32, i32* %63, align 4
  %65 = mul i32 %64, 8
  %66 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %67 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %66, i32 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = mul nsw i32 %68, 8
  %70 = call i8** %59(%struct.jpeg_common_struct* %61, i32 1, i32 %65, i32 %69)
  %71 = load %struct.my_main_controller*, %struct.my_main_controller** %5, align 8
  %72 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %71, i32 0, i32 5
  %73 = load i32, i32* %6, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [10 x i8**], [10 x i8**]* %72, i64 0, i64 %74
  store i8** %70, i8*** %75, align 8
  br label %76

76:                                               ; preds = %54
  %77 = load i32, i32* %6, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %6, align 4
  %79 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %80 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %79, i32 1
  store %struct.jpeg_component_info* %80, %struct.jpeg_component_info** %7, align 8
  br label %48

81:                                               ; preds = %48
  br label %82

82:                                               ; preds = %81, %32, %28
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_main(%struct.jpeg_compress_struct.146* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.146*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.my_main_controller*, align 8
  store %struct.jpeg_compress_struct.146* %0, %struct.jpeg_compress_struct.146** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_compress_struct.146, %struct.jpeg_compress_struct.146* %6, i32 0, i32 52
  %8 = load %struct.jpeg_c_main_controller.156*, %struct.jpeg_c_main_controller.156** %7, align 8
  %9 = bitcast %struct.jpeg_c_main_controller.156* %8 to %struct.my_main_controller*
  store %struct.my_main_controller* %9, %struct.my_main_controller** %5, align 8
  %10 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_compress_struct.146, %struct.jpeg_compress_struct.146* %10, i32 0, i32 23
  %12 = load i32, i32* %11, align 8
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  br label %42

15:                                               ; preds = %2
  %16 = load %struct.my_main_controller*, %struct.my_main_controller** %5, align 8
  %17 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %16, i32 0, i32 1
  store i32 0, i32* %17, align 8
  %18 = load %struct.my_main_controller*, %struct.my_main_controller** %5, align 8
  %19 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %18, i32 0, i32 2
  store i32 0, i32* %19, align 4
  %20 = load %struct.my_main_controller*, %struct.my_main_controller** %5, align 8
  %21 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %20, i32 0, i32 3
  store i32 0, i32* %21, align 8
  %22 = load i32, i32* %4, align 4
  %23 = load %struct.my_main_controller*, %struct.my_main_controller** %5, align 8
  %24 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %23, i32 0, i32 4
  store i32 %22, i32* %24, align 4
  %25 = load i32, i32* %4, align 4
  switch i32 %25, label %30 [
    i32 0, label %26
  ]

26:                                               ; preds = %15
  %27 = load %struct.my_main_controller*, %struct.my_main_controller** %5, align 8
  %28 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %27, i32 0, i32 0
  %29 = getelementptr inbounds %struct.jpeg_c_main_controller.156, %struct.jpeg_c_main_controller.156* %28, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.146*, i8**, i32*, i32)* @process_data_simple_main, void (%struct.jpeg_compress_struct.146*, i8**, i32*, i32)** %29, align 8
  br label %42

30:                                               ; preds = %15
  %31 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %3, align 8
  %32 = getelementptr inbounds %struct.jpeg_compress_struct.146, %struct.jpeg_compress_struct.146* %31, i32 0, i32 0
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i32 0, i32 5
  store i32 4, i32* %34, align 8
  %35 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %3, align 8
  %36 = getelementptr inbounds %struct.jpeg_compress_struct.146, %struct.jpeg_compress_struct.146* %35, i32 0, i32 0
  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i32 0, i32 0
  %39 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %38, align 8
  %40 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %3, align 8
  %41 = bitcast %struct.jpeg_compress_struct.146* %40 to %struct.jpeg_common_struct*
  call void %39(%struct.jpeg_common_struct* %41)
  br label %42

42:                                               ; preds = %30, %26, %14
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @process_data_simple_main(%struct.jpeg_compress_struct.146* %0, i8** %1, i32* %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_compress_struct.146*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.my_main_controller*, align 8
  store %struct.jpeg_compress_struct.146* %0, %struct.jpeg_compress_struct.146** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32 %3, i32* %8, align 4
  %10 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %5, align 8
  %11 = getelementptr inbounds %struct.jpeg_compress_struct.146, %struct.jpeg_compress_struct.146* %10, i32 0, i32 52
  %12 = load %struct.jpeg_c_main_controller.156*, %struct.jpeg_c_main_controller.156** %11, align 8
  %13 = bitcast %struct.jpeg_c_main_controller.156* %12 to %struct.my_main_controller*
  store %struct.my_main_controller* %13, %struct.my_main_controller** %9, align 8
  br label %14

14:                                               ; preds = %83, %4
  %15 = load %struct.my_main_controller*, %struct.my_main_controller** %9, align 8
  %16 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %5, align 8
  %19 = getelementptr inbounds %struct.jpeg_compress_struct.146, %struct.jpeg_compress_struct.146* %18, i32 0, i32 40
  %20 = load i32, i32* %19, align 8
  %21 = icmp ult i32 %17, %20
  br i1 %21, label %22, label %90

22:                                               ; preds = %14
  %23 = load %struct.my_main_controller*, %struct.my_main_controller** %9, align 8
  %24 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %23, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp ult i32 %25, 8
  br i1 %26, label %27, label %42

27:                                               ; preds = %22
  %28 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %5, align 8
  %29 = getelementptr inbounds %struct.jpeg_compress_struct.146, %struct.jpeg_compress_struct.146* %28, i32 0, i32 53
  %30 = load %struct.jpeg_c_prep_controller.157*, %struct.jpeg_c_prep_controller.157** %29, align 8
  %31 = getelementptr inbounds %struct.jpeg_c_prep_controller.157, %struct.jpeg_c_prep_controller.157* %30, i32 0, i32 1
  %32 = load void (%struct.jpeg_compress_struct.146*, i8**, i32*, i32, i8***, i32*, i32)*, void (%struct.jpeg_compress_struct.146*, i8**, i32*, i32, i8***, i32*, i32)** %31, align 8
  %33 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %5, align 8
  %34 = load i8**, i8*** %6, align 8
  %35 = load i32*, i32** %7, align 8
  %36 = load i32, i32* %8, align 4
  %37 = load %struct.my_main_controller*, %struct.my_main_controller** %9, align 8
  %38 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %37, i32 0, i32 5
  %39 = getelementptr inbounds [10 x i8**], [10 x i8**]* %38, i64 0, i64 0
  %40 = load %struct.my_main_controller*, %struct.my_main_controller** %9, align 8
  %41 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %40, i32 0, i32 2
  call void %32(%struct.jpeg_compress_struct.146* %33, i8** %34, i32* %35, i32 %36, i8*** %39, i32* %41, i32 8)
  br label %42

42:                                               ; preds = %27, %22
  %43 = load %struct.my_main_controller*, %struct.my_main_controller** %9, align 8
  %44 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %43, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp ne i32 %45, 8
  br i1 %46, label %47, label %48

47:                                               ; preds = %42
  br label %90

48:                                               ; preds = %42
  %49 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %5, align 8
  %50 = getelementptr inbounds %struct.jpeg_compress_struct.146, %struct.jpeg_compress_struct.146* %49, i32 0, i32 54
  %51 = load %struct.jpeg_c_coef_controller.158*, %struct.jpeg_c_coef_controller.158** %50, align 8
  %52 = getelementptr inbounds %struct.jpeg_c_coef_controller.158, %struct.jpeg_c_coef_controller.158* %51, i32 0, i32 1
  %53 = load i32 (%struct.jpeg_compress_struct.146*, i8***)*, i32 (%struct.jpeg_compress_struct.146*, i8***)** %52, align 8
  %54 = load %struct.jpeg_compress_struct.146*, %struct.jpeg_compress_struct.146** %5, align 8
  %55 = load %struct.my_main_controller*, %struct.my_main_controller** %9, align 8
  %56 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %55, i32 0, i32 5
  %57 = getelementptr inbounds [10 x i8**], [10 x i8**]* %56, i64 0, i64 0
  %58 = call i32 %53(%struct.jpeg_compress_struct.146* %54, i8*** %57)
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %72, label %60

60:                                               ; preds = %48
  %61 = load %struct.my_main_controller*, %struct.my_main_controller** %9, align 8
  %62 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %61, i32 0, i32 3
  %63 = load i32, i32* %62, align 8
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %60
  %66 = load i32*, i32** %7, align 8
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, -1
  store i32 %68, i32* %66, align 4
  %69 = load %struct.my_main_controller*, %struct.my_main_controller** %9, align 8
  %70 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %69, i32 0, i32 3
  store i32 1, i32* %70, align 8
  br label %71

71:                                               ; preds = %65, %60
  br label %90

72:                                               ; preds = %48
  %73 = load %struct.my_main_controller*, %struct.my_main_controller** %9, align 8
  %74 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %73, i32 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %83

77:                                               ; preds = %72
  %78 = load i32*, i32** %7, align 8
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = load %struct.my_main_controller*, %struct.my_main_controller** %9, align 8
  %82 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %81, i32 0, i32 3
  store i32 0, i32* %82, align 8
  br label %83

83:                                               ; preds = %77, %72
  %84 = load %struct.my_main_controller*, %struct.my_main_controller** %9, align 8
  %85 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %84, i32 0, i32 2
  store i32 0, i32* %85, align 4
  %86 = load %struct.my_main_controller*, %struct.my_main_controller** %9, align 8
  %87 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %86, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = add i32 %88, 1
  store i32 %89, i32* %87, align 8
  br label %14

90:                                               ; preds = %71, %47, %14
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_marker_writer(%struct.jpeg_compress_struct.168* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.168*, align 8
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %2, align 8
  %3 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %3, i32 0, i32 1
  %5 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %4, align 8
  %6 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %5, i32 0, i32 0
  %7 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %6, align 8
  %8 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %9 = bitcast %struct.jpeg_compress_struct.168* %8 to %struct.jpeg_common_struct*
  %10 = call i8* %7(%struct.jpeg_common_struct* %9, i32 1, i64 48)
  %11 = bitcast i8* %10 to %struct.jpeg_marker_writer.181*
  %12 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %13 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %12, i32 0, i32 55
  store %struct.jpeg_marker_writer.181* %11, %struct.jpeg_marker_writer.181** %13, align 8
  %14 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %14, i32 0, i32 55
  %16 = load %struct.jpeg_marker_writer.181*, %struct.jpeg_marker_writer.181** %15, align 8
  %17 = getelementptr inbounds %struct.jpeg_marker_writer.181, %struct.jpeg_marker_writer.181* %16, i32 0, i32 0
  store void (%struct.jpeg_compress_struct.168*, i32, i8*, i32)* @write_any_marker, void (%struct.jpeg_compress_struct.168*, i32, i8*, i32)** %17, align 8
  %18 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %19 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %18, i32 0, i32 55
  %20 = load %struct.jpeg_marker_writer.181*, %struct.jpeg_marker_writer.181** %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_marker_writer.181, %struct.jpeg_marker_writer.181* %20, i32 0, i32 1
  %22 = bitcast {}** %21 to void (%struct.jpeg_compress_struct.168*)**
  store void (%struct.jpeg_compress_struct.168*)* @write_file_header, void (%struct.jpeg_compress_struct.168*)** %22, align 8
  %23 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %23, i32 0, i32 55
  %25 = load %struct.jpeg_marker_writer.181*, %struct.jpeg_marker_writer.181** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_marker_writer.181, %struct.jpeg_marker_writer.181* %25, i32 0, i32 2
  %27 = bitcast {}** %26 to void (%struct.jpeg_compress_struct.168*)**
  store void (%struct.jpeg_compress_struct.168*)* @write_frame_header, void (%struct.jpeg_compress_struct.168*)** %27, align 8
  %28 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %29 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %28, i32 0, i32 55
  %30 = load %struct.jpeg_marker_writer.181*, %struct.jpeg_marker_writer.181** %29, align 8
  %31 = getelementptr inbounds %struct.jpeg_marker_writer.181, %struct.jpeg_marker_writer.181* %30, i32 0, i32 3
  %32 = bitcast {}** %31 to void (%struct.jpeg_compress_struct.168*)**
  store void (%struct.jpeg_compress_struct.168*)* @write_scan_header, void (%struct.jpeg_compress_struct.168*)** %32, align 8
  %33 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %34 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %33, i32 0, i32 55
  %35 = load %struct.jpeg_marker_writer.181*, %struct.jpeg_marker_writer.181** %34, align 8
  %36 = getelementptr inbounds %struct.jpeg_marker_writer.181, %struct.jpeg_marker_writer.181* %35, i32 0, i32 4
  %37 = bitcast {}** %36 to void (%struct.jpeg_compress_struct.168*)**
  store void (%struct.jpeg_compress_struct.168*)* @write_file_trailer, void (%struct.jpeg_compress_struct.168*)** %37, align 8
  %38 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %39 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %38, i32 0, i32 55
  %40 = load %struct.jpeg_marker_writer.181*, %struct.jpeg_marker_writer.181** %39, align 8
  %41 = getelementptr inbounds %struct.jpeg_marker_writer.181, %struct.jpeg_marker_writer.181* %40, i32 0, i32 5
  %42 = bitcast {}** %41 to void (%struct.jpeg_compress_struct.168*)**
  store void (%struct.jpeg_compress_struct.168*)* @write_tables_only, void (%struct.jpeg_compress_struct.168*)** %42, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_any_marker(%struct.jpeg_compress_struct.168* %0, i32 %1, i8* %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_compress_struct.168*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %5, align 8
  store i32 %1, i32* %6, align 4
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load i32, i32* %8, align 4
  %10 = icmp ule i32 %9, 65533
  br i1 %10, label %11, label %29

11:                                               ; preds = %4
  %12 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %5, align 8
  %13 = load i32, i32* %6, align 4
  call void @emit_marker(%struct.jpeg_compress_struct.168* %12, i32 %13)
  %14 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %5, align 8
  %15 = load i32, i32* %8, align 4
  %16 = add i32 %15, 2
  call void @emit_2bytes(%struct.jpeg_compress_struct.168* %14, i32 %16)
  br label %17

17:                                               ; preds = %21, %11
  %18 = load i32, i32* %8, align 4
  %19 = add i32 %18, -1
  store i32 %19, i32* %8, align 4
  %20 = icmp ne i32 %18, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %17
  %22 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %5, align 8
  %23 = load i8*, i8** %7, align 8
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  call void @emit_byte(%struct.jpeg_compress_struct.168* %22, i32 %25)
  %26 = load i8*, i8** %7, align 8
  %27 = getelementptr inbounds i8, i8* %26, i32 1
  store i8* %27, i8** %7, align 8
  br label %17

28:                                               ; preds = %17
  br label %29

29:                                               ; preds = %28, %4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_file_header(%struct.jpeg_compress_struct.168* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.168*, align 8
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %2, align 8
  %3 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_marker(%struct.jpeg_compress_struct.168* %3, i32 216)
  %4 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %4, i32 0, i32 31
  %6 = load i32, i32* %5, align 8
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_jfif_app0(%struct.jpeg_compress_struct.168* %9)
  br label %10

10:                                               ; preds = %8, %1
  %11 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %12 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %11, i32 0, i32 35
  %13 = load i32, i32* %12, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_adobe_app14(%struct.jpeg_compress_struct.168* %16)
  br label %17

17:                                               ; preds = %15, %10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_frame_header(%struct.jpeg_compress_struct.168* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.168*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %2, align 8
  store i32 0, i32* %4, align 4
  store i32 0, i32* %3, align 4
  %7 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %7, i32 0, i32 14
  %9 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  store %struct.jpeg_component_info* %9, %struct.jpeg_component_info** %6, align 8
  br label %10

10:                                               ; preds = %24, %1
  %11 = load i32, i32* %3, align 4
  %12 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %13 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %12, i32 0, i32 12
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %11, %14
  br i1 %15, label %16, label %29

16:                                               ; preds = %10
  %17 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %18 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %19 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i32 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = call i32 @emit_dqt(%struct.jpeg_compress_struct.168* %17, i32 %20)
  %22 = load i32, i32* %4, align 4
  %23 = add nsw i32 %22, %21
  store i32 %23, i32* %4, align 4
  br label %24

24:                                               ; preds = %16
  %25 = load i32, i32* %3, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %3, align 4
  %27 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %27, i32 1
  store %struct.jpeg_component_info* %28, %struct.jpeg_component_info** %6, align 8
  br label %10

29:                                               ; preds = %10
  %30 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %31 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %30, i32 0, i32 24
  %32 = load i32, i32* %31, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %44, label %34

34:                                               ; preds = %29
  %35 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %36 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %35, i32 0, i32 37
  %37 = load i32, i32* %36, align 4
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %34
  %40 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %41 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %40, i32 0, i32 11
  %42 = load i32, i32* %41, align 8
  %43 = icmp ne i32 %42, 8
  br i1 %43, label %44, label %45

44:                                               ; preds = %39, %34, %29
  store i32 0, i32* %5, align 4
  br label %91

45:                                               ; preds = %39
  store i32 1, i32* %5, align 4
  store i32 0, i32* %3, align 4
  %46 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %47 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %46, i32 0, i32 14
  %48 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %47, align 8
  store %struct.jpeg_component_info* %48, %struct.jpeg_component_info** %6, align 8
  br label %49

49:                                               ; preds = %67, %45
  %50 = load i32, i32* %3, align 4
  %51 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %52 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %51, i32 0, i32 12
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %50, %53
  br i1 %54, label %55, label %72

55:                                               ; preds = %49
  %56 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i32 0, i32 5
  %58 = load i32, i32* %57, align 4
  %59 = icmp sgt i32 %58, 1
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %62 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %61, i32 0, i32 6
  %63 = load i32, i32* %62, align 8
  %64 = icmp sgt i32 %63, 1
  br i1 %64, label %65, label %66

65:                                               ; preds = %60, %55
  store i32 0, i32* %5, align 4
  br label %66

66:                                               ; preds = %65, %60
  br label %67

67:                                               ; preds = %66
  %68 = load i32, i32* %3, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %3, align 4
  %70 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %71 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %70, i32 1
  store %struct.jpeg_component_info* %71, %struct.jpeg_component_info** %6, align 8
  br label %49

72:                                               ; preds = %49
  %73 = load i32, i32* %4, align 4
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %90

75:                                               ; preds = %72
  %76 = load i32, i32* %5, align 4
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %78, label %90

78:                                               ; preds = %75
  store i32 0, i32* %5, align 4
  %79 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %80 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %79, i32 0, i32 0
  %81 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %82 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %81, i32 0, i32 5
  store i32 74, i32* %82, align 8
  %83 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %84 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %83, i32 0, i32 0
  %85 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %84, align 8
  %86 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %85, i32 0, i32 1
  %87 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %86, align 8
  %88 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %89 = bitcast %struct.jpeg_compress_struct.168* %88 to %struct.jpeg_common_struct*
  call void %87(%struct.jpeg_common_struct* %89, i32 0)
  br label %90

90:                                               ; preds = %78, %75, %72
  br label %91

91:                                               ; preds = %90, %44
  %92 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %93 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %92, i32 0, i32 24
  %94 = load i32, i32* %93, align 4
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %91
  %97 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_sof(%struct.jpeg_compress_struct.168* %97, i32 201)
  br label %114

98:                                               ; preds = %91
  %99 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %100 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %99, i32 0, i32 37
  %101 = load i32, i32* %100, align 4
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %98
  %104 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_sof(%struct.jpeg_compress_struct.168* %104, i32 194)
  br label %113

105:                                              ; preds = %98
  %106 = load i32, i32* %5, align 4
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %105
  %109 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_sof(%struct.jpeg_compress_struct.168* %109, i32 192)
  br label %112

110:                                              ; preds = %105
  %111 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_sof(%struct.jpeg_compress_struct.168* %111, i32 193)
  br label %112

112:                                              ; preds = %110, %108
  br label %113

113:                                              ; preds = %112, %103
  br label %114

114:                                              ; preds = %113, %96
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_scan_header(%struct.jpeg_compress_struct.168* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.168*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %2, align 8
  %5 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %6 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %5, i32 0, i32 24
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_dac(%struct.jpeg_compress_struct.168* %10)
  br label %65

11:                                               ; preds = %1
  store i32 0, i32* %3, align 4
  br label %12

12:                                               ; preds = %61, %11
  %13 = load i32, i32* %3, align 4
  %14 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %14, i32 0, i32 41
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %13, %16
  br i1 %17, label %18, label %64

18:                                               ; preds = %12
  %19 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %19, i32 0, i32 42
  %21 = load i32, i32* %3, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %20, i64 0, i64 %22
  %24 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %23, align 8
  store %struct.jpeg_component_info* %24, %struct.jpeg_component_info** %4, align 8
  %25 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %25, i32 0, i32 37
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %51

29:                                               ; preds = %18
  %30 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %31 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %30, i32 0, i32 47
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %45

34:                                               ; preds = %29
  %35 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %36 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %35, i32 0, i32 49
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %34
  %40 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %41 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %42 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %41, i32 0, i32 5
  %43 = load i32, i32* %42, align 4
  call void @emit_dht(%struct.jpeg_compress_struct.168* %40, i32 %43, i32 0)
  br label %44

44:                                               ; preds = %39, %34
  br label %50

45:                                               ; preds = %29
  %46 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %47 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i32 0, i32 6
  %49 = load i32, i32* %48, align 8
  call void @emit_dht(%struct.jpeg_compress_struct.168* %46, i32 %49, i32 1)
  br label %50

50:                                               ; preds = %45, %44
  br label %60

51:                                               ; preds = %18
  %52 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %53 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %54 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %53, i32 0, i32 5
  %55 = load i32, i32* %54, align 4
  call void @emit_dht(%struct.jpeg_compress_struct.168* %52, i32 %55, i32 0)
  %56 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %57 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %58 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %57, i32 0, i32 6
  %59 = load i32, i32* %58, align 8
  call void @emit_dht(%struct.jpeg_compress_struct.168* %56, i32 %59, i32 1)
  br label %60

60:                                               ; preds = %51, %50
  br label %61

61:                                               ; preds = %60
  %62 = load i32, i32* %3, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %3, align 4
  br label %12

64:                                               ; preds = %12
  br label %65

65:                                               ; preds = %64, %9
  %66 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %67 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %66, i32 0, i32 29
  %68 = load i32, i32* %67, align 8
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  %71 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_dri(%struct.jpeg_compress_struct.168* %71)
  br label %72

72:                                               ; preds = %70, %65
  %73 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_sos(%struct.jpeg_compress_struct.168* %73)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_file_trailer(%struct.jpeg_compress_struct.168* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.168*, align 8
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %2, align 8
  %3 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_marker(%struct.jpeg_compress_struct.168* %3, i32 217)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_tables_only(%struct.jpeg_compress_struct.168* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.168*, align 8
  %3 = alloca i32, align 4
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %2, align 8
  %4 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_marker(%struct.jpeg_compress_struct.168* %4, i32 216)
  store i32 0, i32* %3, align 4
  br label %5

5:                                                ; preds = %21, %1
  %6 = load i32, i32* %3, align 4
  %7 = icmp slt i32 %6, 4
  br i1 %7, label %8, label %24

8:                                                ; preds = %5
  %9 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %10 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %9, i32 0, i32 15
  %11 = load i32, i32* %3, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %10, i64 0, i64 %12
  %14 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %13, align 8
  %15 = icmp ne %struct.JQUANT_TBL* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %8
  %17 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %18 = load i32, i32* %3, align 4
  %19 = call i32 @emit_dqt(%struct.jpeg_compress_struct.168* %17, i32 %18)
  br label %20

20:                                               ; preds = %16, %8
  br label %21

21:                                               ; preds = %20
  %22 = load i32, i32* %3, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %3, align 4
  br label %5

24:                                               ; preds = %5
  %25 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %25, i32 0, i32 24
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %60, label %29

29:                                               ; preds = %24
  store i32 0, i32* %3, align 4
  br label %30

30:                                               ; preds = %56, %29
  %31 = load i32, i32* %3, align 4
  %32 = icmp slt i32 %31, 4
  br i1 %32, label %33, label %59

33:                                               ; preds = %30
  %34 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %34, i32 0, i32 16
  %36 = load i32, i32* %3, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %35, i64 0, i64 %37
  %39 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %38, align 8
  %40 = icmp ne %struct.JHUFF_TBL* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %33
  %42 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %43 = load i32, i32* %3, align 4
  call void @emit_dht(%struct.jpeg_compress_struct.168* %42, i32 %43, i32 0)
  br label %44

44:                                               ; preds = %41, %33
  %45 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %46 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %45, i32 0, i32 17
  %47 = load i32, i32* %3, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %46, i64 0, i64 %48
  %50 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %49, align 8
  %51 = icmp ne %struct.JHUFF_TBL* %50, null
  br i1 %51, label %52, label %55

52:                                               ; preds = %44
  %53 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %54 = load i32, i32* %3, align 4
  call void @emit_dht(%struct.jpeg_compress_struct.168* %53, i32 %54, i32 1)
  br label %55

55:                                               ; preds = %52, %44
  br label %56

56:                                               ; preds = %55
  %57 = load i32, i32* %3, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %3, align 4
  br label %30

59:                                               ; preds = %30
  br label %60

60:                                               ; preds = %59, %24
  %61 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_marker(%struct.jpeg_compress_struct.168* %61, i32 217)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_marker(%struct.jpeg_compress_struct.168* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.168*, align 8
  %4 = alloca i32, align 4
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %5, i32 255)
  %6 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %7 = load i32, i32* %4, align 4
  call void @emit_byte(%struct.jpeg_compress_struct.168* %6, i32 %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @emit_dqt(%struct.jpeg_compress_struct.168* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.168*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.JQUANT_TBL*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %3, align 8
  store i32 %1, i32* %4, align 4
  %9 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %10 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %9, i32 0, i32 15
  %11 = load i32, i32* %4, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %10, i64 0, i64 %12
  %14 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %13, align 8
  store %struct.JQUANT_TBL* %14, %struct.JQUANT_TBL** %5, align 8
  %15 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %5, align 8
  %16 = icmp eq %struct.JQUANT_TBL* %15, null
  br i1 %16, label %17, label %36

17:                                               ; preds = %2
  %18 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %19 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %18, i32 0, i32 0
  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i32 0, i32 5
  store i32 51, i32* %21, align 8
  %22 = load i32, i32* %4, align 4
  %23 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %23, i32 0, i32 0
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i32 0, i32 6
  %27 = bitcast %union.anon* %26 to [8 x i32]*
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* %27, i64 0, i64 0
  store i32 %22, i32* %28, align 4
  %29 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %30 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %29, i32 0, i32 0
  %31 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %30, align 8
  %32 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %31, i32 0, i32 0
  %33 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %32, align 8
  %34 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %35 = bitcast %struct.jpeg_compress_struct.168* %34 to %struct.jpeg_common_struct*
  call void %33(%struct.jpeg_common_struct* %35)
  br label %36

36:                                               ; preds = %17, %2
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  br label %37

37:                                               ; preds = %51, %36
  %38 = load i32, i32* %7, align 4
  %39 = icmp slt i32 %38, 64
  br i1 %39, label %40, label %54

40:                                               ; preds = %37
  %41 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %5, align 8
  %42 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %41, i32 0, i32 0
  %43 = load i32, i32* %7, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [64 x i16], [64 x i16]* %42, i64 0, i64 %44
  %46 = load i16, i16* %45, align 2
  %47 = zext i16 %46 to i32
  %48 = icmp sgt i32 %47, 255
  br i1 %48, label %49, label %50

49:                                               ; preds = %40
  store i32 1, i32* %6, align 4
  br label %50

50:                                               ; preds = %49, %40
  br label %51

51:                                               ; preds = %50
  %52 = load i32, i32* %7, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %7, align 4
  br label %37

54:                                               ; preds = %37
  %55 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %5, align 8
  %56 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %101, label %59

59:                                               ; preds = %54
  %60 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  call void @emit_marker(%struct.jpeg_compress_struct.168* %60, i32 219)
  %61 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %62 = load i32, i32* %6, align 4
  %63 = icmp ne i32 %62, 0
  %64 = zext i1 %63 to i64
  %65 = select i1 %63, i32 131, i32 67
  call void @emit_2bytes(%struct.jpeg_compress_struct.168* %61, i32 %65)
  %66 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %67 = load i32, i32* %4, align 4
  %68 = load i32, i32* %6, align 4
  %69 = shl i32 %68, 4
  %70 = add nsw i32 %67, %69
  call void @emit_byte(%struct.jpeg_compress_struct.168* %66, i32 %70)
  store i32 0, i32* %7, align 4
  br label %71

71:                                               ; preds = %95, %59
  %72 = load i32, i32* %7, align 4
  %73 = icmp slt i32 %72, 64
  br i1 %73, label %74, label %98

74:                                               ; preds = %71
  %75 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %5, align 8
  %76 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %75, i32 0, i32 0
  %77 = load i32, i32* %7, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [64 x i16], [64 x i16]* %76, i64 0, i64 %81
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  store i32 %84, i32* %8, align 4
  %85 = load i32, i32* %6, align 4
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %74
  %88 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %89 = load i32, i32* %8, align 4
  %90 = lshr i32 %89, 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %88, i32 %90)
  br label %91

91:                                               ; preds = %87, %74
  %92 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %93 = load i32, i32* %8, align 4
  %94 = and i32 %93, 255
  call void @emit_byte(%struct.jpeg_compress_struct.168* %92, i32 %94)
  br label %95

95:                                               ; preds = %91
  %96 = load i32, i32* %7, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %7, align 4
  br label %71

98:                                               ; preds = %71
  %99 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %5, align 8
  %100 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %99, i32 0, i32 1
  store i32 1, i32* %100, align 4
  br label %101

101:                                              ; preds = %98, %54
  %102 = load i32, i32* %6, align 4
  ret i32 %102
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_dht(%struct.jpeg_compress_struct.168* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_compress_struct.168*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.JHUFF_TBL*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %10 = load i32, i32* %6, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %3
  %13 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %4, align 8
  %14 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %13, i32 0, i32 17
  %15 = load i32, i32* %5, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %14, i64 0, i64 %16
  %18 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %17, align 8
  store %struct.JHUFF_TBL* %18, %struct.JHUFF_TBL** %7, align 8
  %19 = load i32, i32* %5, align 4
  %20 = add nsw i32 %19, 16
  store i32 %20, i32* %5, align 4
  br label %28

21:                                               ; preds = %3
  %22 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %4, align 8
  %23 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %22, i32 0, i32 16
  %24 = load i32, i32* %5, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %23, i64 0, i64 %25
  %27 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %26, align 8
  store %struct.JHUFF_TBL* %27, %struct.JHUFF_TBL** %7, align 8
  br label %28

28:                                               ; preds = %21, %12
  %29 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %7, align 8
  %30 = icmp eq %struct.JHUFF_TBL* %29, null
  br i1 %30, label %31, label %50

31:                                               ; preds = %28
  %32 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %4, align 8
  %33 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %32, i32 0, i32 0
  %34 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %33, align 8
  %35 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %34, i32 0, i32 5
  store i32 49, i32* %35, align 8
  %36 = load i32, i32* %5, align 4
  %37 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %4, align 8
  %38 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %37, i32 0, i32 0
  %39 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %38, align 8
  %40 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i32 0, i32 6
  %41 = bitcast %union.anon* %40 to [8 x i32]*
  %42 = getelementptr inbounds [8 x i32], [8 x i32]* %41, i64 0, i64 0
  store i32 %36, i32* %42, align 4
  %43 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %4, align 8
  %44 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %43, i32 0, i32 0
  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i32 0, i32 0
  %47 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %46, align 8
  %48 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %4, align 8
  %49 = bitcast %struct.jpeg_compress_struct.168* %48 to %struct.jpeg_common_struct*
  call void %47(%struct.jpeg_common_struct* %49)
  br label %50

50:                                               ; preds = %31, %28
  %51 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %7, align 8
  %52 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %51, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %116, label %55

55:                                               ; preds = %50
  %56 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %4, align 8
  call void @emit_marker(%struct.jpeg_compress_struct.168* %56, i32 196)
  store i32 0, i32* %8, align 4
  store i32 1, i32* %9, align 4
  br label %57

57:                                               ; preds = %70, %55
  %58 = load i32, i32* %9, align 4
  %59 = icmp sle i32 %58, 16
  br i1 %59, label %60, label %73

60:                                               ; preds = %57
  %61 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %7, align 8
  %62 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %61, i32 0, i32 0
  %63 = load i32, i32* %9, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [17 x i8], [17 x i8]* %62, i64 0, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = load i32, i32* %8, align 4
  %69 = add nsw i32 %68, %67
  store i32 %69, i32* %8, align 4
  br label %70

70:                                               ; preds = %60
  %71 = load i32, i32* %9, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %9, align 4
  br label %57

73:                                               ; preds = %57
  %74 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %4, align 8
  %75 = load i32, i32* %8, align 4
  %76 = add nsw i32 %75, 2
  %77 = add nsw i32 %76, 1
  %78 = add nsw i32 %77, 16
  call void @emit_2bytes(%struct.jpeg_compress_struct.168* %74, i32 %78)
  %79 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %4, align 8
  %80 = load i32, i32* %5, align 4
  call void @emit_byte(%struct.jpeg_compress_struct.168* %79, i32 %80)
  store i32 1, i32* %9, align 4
  br label %81

81:                                               ; preds = %93, %73
  %82 = load i32, i32* %9, align 4
  %83 = icmp sle i32 %82, 16
  br i1 %83, label %84, label %96

84:                                               ; preds = %81
  %85 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %4, align 8
  %86 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %7, align 8
  %87 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %86, i32 0, i32 0
  %88 = load i32, i32* %9, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [17 x i8], [17 x i8]* %87, i64 0, i64 %89
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  call void @emit_byte(%struct.jpeg_compress_struct.168* %85, i32 %92)
  br label %93

93:                                               ; preds = %84
  %94 = load i32, i32* %9, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %9, align 4
  br label %81

96:                                               ; preds = %81
  store i32 0, i32* %9, align 4
  br label %97

97:                                               ; preds = %110, %96
  %98 = load i32, i32* %9, align 4
  %99 = load i32, i32* %8, align 4
  %100 = icmp slt i32 %98, %99
  br i1 %100, label %101, label %113

101:                                              ; preds = %97
  %102 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %4, align 8
  %103 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %7, align 8
  %104 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %103, i32 0, i32 1
  %105 = load i32, i32* %9, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [256 x i8], [256 x i8]* %104, i64 0, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  call void @emit_byte(%struct.jpeg_compress_struct.168* %102, i32 %109)
  br label %110

110:                                              ; preds = %101
  %111 = load i32, i32* %9, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %9, align 4
  br label %97

113:                                              ; preds = %97
  %114 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %7, align 8
  %115 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %114, i32 0, i32 2
  store i32 1, i32* %115, align 4
  br label %116

116:                                              ; preds = %113, %50
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_2bytes(%struct.jpeg_compress_struct.168* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.168*, align 8
  %4 = alloca i32, align 4
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = ashr i32 %6, 8
  %8 = and i32 %7, 255
  call void @emit_byte(%struct.jpeg_compress_struct.168* %5, i32 %8)
  %9 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %10 = load i32, i32* %4, align 4
  %11 = and i32 %10, 255
  call void @emit_byte(%struct.jpeg_compress_struct.168* %9, i32 %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_byte(%struct.jpeg_compress_struct.168* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.168*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.jpeg_destination_mgr.172*, align 8
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %6, i32 0, i32 5
  %8 = load %struct.jpeg_destination_mgr.172*, %struct.jpeg_destination_mgr.172** %7, align 8
  store %struct.jpeg_destination_mgr.172* %8, %struct.jpeg_destination_mgr.172** %5, align 8
  %9 = load i32, i32* %4, align 4
  %10 = trunc i32 %9 to i8
  %11 = load %struct.jpeg_destination_mgr.172*, %struct.jpeg_destination_mgr.172** %5, align 8
  %12 = getelementptr inbounds %struct.jpeg_destination_mgr.172, %struct.jpeg_destination_mgr.172* %11, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %14, i8** %12, align 8
  store i8 %10, i8* %13, align 1
  %15 = load %struct.jpeg_destination_mgr.172*, %struct.jpeg_destination_mgr.172** %5, align 8
  %16 = getelementptr inbounds %struct.jpeg_destination_mgr.172, %struct.jpeg_destination_mgr.172* %15, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, -1
  store i64 %18, i64* %16, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %40

20:                                               ; preds = %2
  %21 = load %struct.jpeg_destination_mgr.172*, %struct.jpeg_destination_mgr.172** %5, align 8
  %22 = getelementptr inbounds %struct.jpeg_destination_mgr.172, %struct.jpeg_destination_mgr.172* %21, i32 0, i32 3
  %23 = load i32 (%struct.jpeg_compress_struct.168*)*, i32 (%struct.jpeg_compress_struct.168*)** %22, align 8
  %24 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %25 = call i32 %23(%struct.jpeg_compress_struct.168* %24)
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %20
  %28 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %29 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %28, i32 0, i32 0
  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %29, align 8
  %31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i32 0, i32 5
  store i32 22, i32* %31, align 8
  %32 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %33 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %32, i32 0, i32 0
  %34 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %33, align 8
  %35 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %34, i32 0, i32 0
  %36 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %35, align 8
  %37 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %38 = bitcast %struct.jpeg_compress_struct.168* %37 to %struct.jpeg_common_struct*
  call void %36(%struct.jpeg_common_struct* %38)
  br label %39

39:                                               ; preds = %27, %20
  br label %40

40:                                               ; preds = %39, %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_dac(%struct.jpeg_compress_struct.168* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.168*, align 8
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_dri(%struct.jpeg_compress_struct.168* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.168*, align 8
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %2, align 8
  %3 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_marker(%struct.jpeg_compress_struct.168* %3, i32 221)
  %4 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_2bytes(%struct.jpeg_compress_struct.168* %4, i32 4)
  %5 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %6 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %7 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %6, i32 0, i32 29
  %8 = load i32, i32* %7, align 8
  call void @emit_2bytes(%struct.jpeg_compress_struct.168* %5, i32 %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_sos(%struct.jpeg_compress_struct.168* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.168*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %2, align 8
  %7 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_marker(%struct.jpeg_compress_struct.168* %7, i32 218)
  %8 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %9 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %10 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %9, i32 0, i32 41
  %11 = load i32, i32* %10, align 4
  %12 = mul nsw i32 2, %11
  %13 = add nsw i32 %12, 2
  %14 = add nsw i32 %13, 1
  %15 = add nsw i32 %14, 3
  call void @emit_2bytes(%struct.jpeg_compress_struct.168* %8, i32 %15)
  %16 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %17 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %17, i32 0, i32 41
  %19 = load i32, i32* %18, align 4
  call void @emit_byte(%struct.jpeg_compress_struct.168* %16, i32 %19)
  store i32 0, i32* %3, align 4
  br label %20

20:                                               ; preds = %72, %1
  %21 = load i32, i32* %3, align 4
  %22 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %23 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %22, i32 0, i32 41
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %21, %24
  br i1 %25, label %26, label %75

26:                                               ; preds = %20
  %27 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %28 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %27, i32 0, i32 42
  %29 = load i32, i32* %3, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %28, i64 0, i64 %30
  %32 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %31, align 8
  store %struct.jpeg_component_info* %32, %struct.jpeg_component_info** %6, align 8
  %33 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %34 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %35 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %33, i32 %36)
  %37 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %38 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %37, i32 0, i32 5
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %4, align 4
  %40 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %41 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %40, i32 0, i32 6
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %5, align 4
  %43 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %44 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %43, i32 0, i32 37
  %45 = load i32, i32* %44, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %66

47:                                               ; preds = %26
  %48 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %49 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %48, i32 0, i32 47
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  store i32 0, i32* %5, align 4
  %53 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %54 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %53, i32 0, i32 49
  %55 = load i32, i32* %54, align 4
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %52
  %58 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %59 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %58, i32 0, i32 24
  %60 = load i32, i32* %59, align 4
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %57
  store i32 0, i32* %4, align 4
  br label %63

63:                                               ; preds = %62, %57, %52
  br label %65

64:                                               ; preds = %47
  store i32 0, i32* %4, align 4
  br label %65

65:                                               ; preds = %64, %63
  br label %66

66:                                               ; preds = %65, %26
  %67 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %68 = load i32, i32* %4, align 4
  %69 = shl i32 %68, 4
  %70 = load i32, i32* %5, align 4
  %71 = add nsw i32 %69, %70
  call void @emit_byte(%struct.jpeg_compress_struct.168* %67, i32 %71)
  br label %72

72:                                               ; preds = %66
  %73 = load i32, i32* %3, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %3, align 4
  br label %20

75:                                               ; preds = %20
  %76 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %77 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %78 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %77, i32 0, i32 47
  %79 = load i32, i32* %78, align 4
  call void @emit_byte(%struct.jpeg_compress_struct.168* %76, i32 %79)
  %80 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %81 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %82 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %81, i32 0, i32 48
  %83 = load i32, i32* %82, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %80, i32 %83)
  %84 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %85 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %86 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %85, i32 0, i32 49
  %87 = load i32, i32* %86, align 4
  %88 = shl i32 %87, 4
  %89 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %90 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %89, i32 0, i32 50
  %91 = load i32, i32* %90, align 8
  %92 = add nsw i32 %88, %91
  call void @emit_byte(%struct.jpeg_compress_struct.168* %84, i32 %92)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_sof(%struct.jpeg_compress_struct.168* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.168*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %8 = load i32, i32* %4, align 4
  call void @emit_marker(%struct.jpeg_compress_struct.168* %7, i32 %8)
  %9 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %10 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %10, i32 0, i32 12
  %12 = load i32, i32* %11, align 4
  %13 = mul nsw i32 3, %12
  %14 = add nsw i32 %13, 2
  %15 = add nsw i32 %14, 5
  %16 = add nsw i32 %15, 1
  call void @emit_2bytes(%struct.jpeg_compress_struct.168* %9, i32 %16)
  %17 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %17, i32 0, i32 7
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = icmp sgt i64 %20, 65535
  br i1 %21, label %28, label %22

22:                                               ; preds = %2
  %23 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %23, i32 0, i32 6
  %25 = load i32, i32* %24, align 8
  %26 = zext i32 %25 to i64
  %27 = icmp sgt i64 %26, 65535
  br i1 %27, label %28, label %46

28:                                               ; preds = %22, %2
  %29 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %30 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %29, i32 0, i32 0
  %31 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %30, align 8
  %32 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %31, i32 0, i32 5
  store i32 40, i32* %32, align 8
  %33 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %34 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %33, i32 0, i32 0
  %35 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %34, align 8
  %36 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %35, i32 0, i32 6
  %37 = bitcast %union.anon* %36 to [8 x i32]*
  %38 = getelementptr inbounds [8 x i32], [8 x i32]* %37, i64 0, i64 0
  store i32 65535, i32* %38, align 4
  %39 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %40 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %39, i32 0, i32 0
  %41 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %41, i32 0, i32 0
  %43 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %42, align 8
  %44 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %45 = bitcast %struct.jpeg_compress_struct.168* %44 to %struct.jpeg_common_struct*
  call void %43(%struct.jpeg_common_struct* %45)
  br label %46

46:                                               ; preds = %28, %22
  %47 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %48 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %49 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %48, i32 0, i32 11
  %50 = load i32, i32* %49, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %47, i32 %50)
  %51 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %52 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %53 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %52, i32 0, i32 7
  %54 = load i32, i32* %53, align 4
  call void @emit_2bytes(%struct.jpeg_compress_struct.168* %51, i32 %54)
  %55 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %56 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %57 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %56, i32 0, i32 6
  %58 = load i32, i32* %57, align 8
  call void @emit_2bytes(%struct.jpeg_compress_struct.168* %55, i32 %58)
  %59 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %60 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %61 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %60, i32 0, i32 12
  %62 = load i32, i32* %61, align 4
  call void @emit_byte(%struct.jpeg_compress_struct.168* %59, i32 %62)
  store i32 0, i32* %5, align 4
  %63 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %64 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %63, i32 0, i32 14
  %65 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %64, align 8
  store %struct.jpeg_component_info* %65, %struct.jpeg_component_info** %6, align 8
  br label %66

66:                                               ; preds = %90, %46
  %67 = load i32, i32* %5, align 4
  %68 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %69 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %68, i32 0, i32 12
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %67, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %66
  %73 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %74 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %75 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %74, i32 0, i32 0
  %76 = load i32, i32* %75, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %73, i32 %76)
  %77 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %78 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %79 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %78, i32 0, i32 2
  %80 = load i32, i32* %79, align 8
  %81 = shl i32 %80, 4
  %82 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %83 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %82, i32 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = add nsw i32 %81, %84
  call void @emit_byte(%struct.jpeg_compress_struct.168* %77, i32 %85)
  %86 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %3, align 8
  %87 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %88 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %87, i32 0, i32 4
  %89 = load i32, i32* %88, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %86, i32 %89)
  br label %90

90:                                               ; preds = %72
  %91 = load i32, i32* %5, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %5, align 4
  %93 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %94 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %93, i32 1
  store %struct.jpeg_component_info* %94, %struct.jpeg_component_info** %6, align 8
  br label %66

95:                                               ; preds = %66
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_jfif_app0(%struct.jpeg_compress_struct.168* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.168*, align 8
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %2, align 8
  %3 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_marker(%struct.jpeg_compress_struct.168* %3, i32 224)
  %4 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_2bytes(%struct.jpeg_compress_struct.168* %4, i32 16)
  %5 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %5, i32 74)
  %6 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %6, i32 70)
  %7 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %7, i32 73)
  %8 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %8, i32 70)
  %9 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %9, i32 0)
  %10 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %10, i32 1)
  %11 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %11, i32 1)
  %12 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %13 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %13, i32 0, i32 32
  %15 = load i8, i8* %14, align 4
  %16 = zext i8 %15 to i32
  call void @emit_byte(%struct.jpeg_compress_struct.168* %12, i32 %16)
  %17 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %18 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %19 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %18, i32 0, i32 33
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  call void @emit_2bytes(%struct.jpeg_compress_struct.168* %17, i32 %21)
  %22 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %23 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %23, i32 0, i32 34
  %25 = load i16, i16* %24, align 8
  %26 = zext i16 %25 to i32
  call void @emit_2bytes(%struct.jpeg_compress_struct.168* %22, i32 %26)
  %27 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %27, i32 0)
  %28 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %28, i32 0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_adobe_app14(%struct.jpeg_compress_struct.168* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.168*, align 8
  store %struct.jpeg_compress_struct.168* %0, %struct.jpeg_compress_struct.168** %2, align 8
  %3 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_marker(%struct.jpeg_compress_struct.168* %3, i32 238)
  %4 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_2bytes(%struct.jpeg_compress_struct.168* %4, i32 14)
  %5 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %5, i32 65)
  %6 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %6, i32 100)
  %7 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %7, i32 111)
  %8 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %8, i32 98)
  %9 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %9, i32 101)
  %10 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_2bytes(%struct.jpeg_compress_struct.168* %10, i32 100)
  %11 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_2bytes(%struct.jpeg_compress_struct.168* %11, i32 0)
  %12 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_2bytes(%struct.jpeg_compress_struct.168* %12, i32 0)
  %13 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_compress_struct.168, %struct.jpeg_compress_struct.168* %13, i32 0, i32 13
  %15 = load i32, i32* %14, align 8
  switch i32 %15, label %20 [
    i32 3, label %16
    i32 5, label %18
  ]

16:                                               ; preds = %1
  %17 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %17, i32 1)
  br label %22

18:                                               ; preds = %1
  %19 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %19, i32 2)
  br label %22

20:                                               ; preds = %1
  %21 = load %struct.jpeg_compress_struct.168*, %struct.jpeg_compress_struct.168** %2, align 8
  call void @emit_byte(%struct.jpeg_compress_struct.168* %21, i32 0)
  br label %22

22:                                               ; preds = %20, %18, %16
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_c_master_control(%struct.jpeg_compress_struct.190* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.190*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.my_comp_master*, align 8
  store %struct.jpeg_compress_struct.190* %0, %struct.jpeg_compress_struct.190** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %6, i32 0, i32 1
  %8 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %7, align 8
  %9 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %8, i32 0, i32 0
  %10 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %9, align 8
  %11 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %3, align 8
  %12 = bitcast %struct.jpeg_compress_struct.190* %11 to %struct.jpeg_common_struct*
  %13 = call i8* %10(%struct.jpeg_common_struct* %12, i32 1, i64 48)
  %14 = bitcast i8* %13 to %struct.my_comp_master*
  store %struct.my_comp_master* %14, %struct.my_comp_master** %5, align 8
  %15 = load %struct.my_comp_master*, %struct.my_comp_master** %5, align 8
  %16 = bitcast %struct.my_comp_master* %15 to %struct.jpeg_comp_master.199*
  %17 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %3, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %17, i32 0, i32 51
  store %struct.jpeg_comp_master.199* %16, %struct.jpeg_comp_master.199** %18, align 8
  %19 = load %struct.my_comp_master*, %struct.my_comp_master** %5, align 8
  %20 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %19, i32 0, i32 0
  %21 = getelementptr inbounds %struct.jpeg_comp_master.199, %struct.jpeg_comp_master.199* %20, i32 0, i32 0
  store void (%struct.jpeg_compress_struct.190*)* @prepare_for_pass, void (%struct.jpeg_compress_struct.190*)** %21, align 8
  %22 = load %struct.my_comp_master*, %struct.my_comp_master** %5, align 8
  %23 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %22, i32 0, i32 0
  %24 = getelementptr inbounds %struct.jpeg_comp_master.199, %struct.jpeg_comp_master.199* %23, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.190*)* @pass_startup, void (%struct.jpeg_compress_struct.190*)** %24, align 8
  %25 = load %struct.my_comp_master*, %struct.my_comp_master** %5, align 8
  %26 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %25, i32 0, i32 0
  %27 = getelementptr inbounds %struct.jpeg_comp_master.199, %struct.jpeg_comp_master.199* %26, i32 0, i32 2
  store void (%struct.jpeg_compress_struct.190*)* @finish_pass_master, void (%struct.jpeg_compress_struct.190*)** %27, align 8
  %28 = load %struct.my_comp_master*, %struct.my_comp_master** %5, align 8
  %29 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %28, i32 0, i32 0
  %30 = getelementptr inbounds %struct.jpeg_comp_master.199, %struct.jpeg_comp_master.199* %29, i32 0, i32 4
  store i32 0, i32* %30, align 4
  %31 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %3, align 8
  call void @initial_setup(%struct.jpeg_compress_struct.190* %31)
  %32 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %3, align 8
  %33 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %32, i32 0, i32 22
  %34 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %33, align 8
  %35 = icmp ne %struct.jpeg_scan_info* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %2
  %37 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %3, align 8
  call void @validate_script(%struct.jpeg_compress_struct.190* %37)
  br label %43

38:                                               ; preds = %2
  %39 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %3, align 8
  %40 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %39, i32 0, i32 37
  store i32 0, i32* %40, align 4
  %41 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %3, align 8
  %42 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %41, i32 0, i32 21
  store i32 1, i32* %42, align 8
  br label %43

43:                                               ; preds = %38, %36
  %44 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %3, align 8
  %45 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %44, i32 0, i32 37
  %46 = load i32, i32* %45, align 4
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %3, align 8
  %50 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %49, i32 0, i32 25
  store i32 1, i32* %50, align 8
  br label %51

51:                                               ; preds = %48, %43
  %52 = load i32, i32* %4, align 4
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %51
  %55 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %3, align 8
  %56 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %55, i32 0, i32 25
  %57 = load i32, i32* %56, align 8
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = load %struct.my_comp_master*, %struct.my_comp_master** %5, align 8
  %61 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %60, i32 0, i32 1
  store i32 1, i32* %61, align 8
  br label %65

62:                                               ; preds = %54
  %63 = load %struct.my_comp_master*, %struct.my_comp_master** %5, align 8
  %64 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %63, i32 0, i32 1
  store i32 2, i32* %64, align 8
  br label %65

65:                                               ; preds = %62, %59
  br label %69

66:                                               ; preds = %51
  %67 = load %struct.my_comp_master*, %struct.my_comp_master** %5, align 8
  %68 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %67, i32 0, i32 1
  store i32 0, i32* %68, align 8
  br label %69

69:                                               ; preds = %66, %65
  %70 = load %struct.my_comp_master*, %struct.my_comp_master** %5, align 8
  %71 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %70, i32 0, i32 4
  store i32 0, i32* %71, align 4
  %72 = load %struct.my_comp_master*, %struct.my_comp_master** %5, align 8
  %73 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %72, i32 0, i32 2
  store i32 0, i32* %73, align 4
  %74 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %3, align 8
  %75 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %74, i32 0, i32 25
  %76 = load i32, i32* %75, align 8
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %78, label %85

78:                                               ; preds = %69
  %79 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %3, align 8
  %80 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %79, i32 0, i32 21
  %81 = load i32, i32* %80, align 8
  %82 = mul nsw i32 %81, 2
  %83 = load %struct.my_comp_master*, %struct.my_comp_master** %5, align 8
  %84 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %83, i32 0, i32 3
  store i32 %82, i32* %84, align 8
  br label %91

85:                                               ; preds = %69
  %86 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %3, align 8
  %87 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %86, i32 0, i32 21
  %88 = load i32, i32* %87, align 8
  %89 = load %struct.my_comp_master*, %struct.my_comp_master** %5, align 8
  %90 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %89, i32 0, i32 3
  store i32 %88, i32* %90, align 8
  br label %91

91:                                               ; preds = %85, %78
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @prepare_for_pass(%struct.jpeg_compress_struct.190* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.190*, align 8
  %3 = alloca %struct.my_comp_master*, align 8
  store %struct.jpeg_compress_struct.190* %0, %struct.jpeg_compress_struct.190** %2, align 8
  %4 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %4, i32 0, i32 51
  %6 = load %struct.jpeg_comp_master.199*, %struct.jpeg_comp_master.199** %5, align 8
  %7 = bitcast %struct.jpeg_comp_master.199* %6 to %struct.my_comp_master*
  store %struct.my_comp_master* %7, %struct.my_comp_master** %3, align 8
  %8 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %9 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %169 [
    i32 0, label %11
    i32 1, label %85
    i32 2, label %126
  ]

11:                                               ; preds = %1
  %12 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void @select_scan_parameters(%struct.jpeg_compress_struct.190* %12)
  %13 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void @per_scan_setup(%struct.jpeg_compress_struct.190* %13)
  %14 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %14, i32 0, i32 23
  %16 = load i32, i32* %15, align 8
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %37, label %18

18:                                               ; preds = %11
  %19 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %19, i32 0, i32 56
  %21 = load %struct.jpeg_color_converter.204*, %struct.jpeg_color_converter.204** %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_color_converter.204, %struct.jpeg_color_converter.204* %21, i32 0, i32 0
  %23 = load void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*)** %22, align 8
  %24 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void %23(%struct.jpeg_compress_struct.190* %24)
  %25 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %25, i32 0, i32 57
  %27 = load %struct.jpeg_downsampler.205*, %struct.jpeg_downsampler.205** %26, align 8
  %28 = getelementptr inbounds %struct.jpeg_downsampler.205, %struct.jpeg_downsampler.205* %27, i32 0, i32 0
  %29 = load void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*)** %28, align 8
  %30 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void %29(%struct.jpeg_compress_struct.190* %30)
  %31 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %32 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %31, i32 0, i32 53
  %33 = load %struct.jpeg_c_prep_controller.201*, %struct.jpeg_c_prep_controller.201** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_c_prep_controller.201, %struct.jpeg_c_prep_controller.201* %33, i32 0, i32 0
  %35 = load void (%struct.jpeg_compress_struct.190*, i32)*, void (%struct.jpeg_compress_struct.190*, i32)** %34, align 8
  %36 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void %35(%struct.jpeg_compress_struct.190* %36, i32 0)
  br label %37

37:                                               ; preds = %18, %11
  %38 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %39 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %38, i32 0, i32 58
  %40 = load %struct.jpeg_forward_dct.206*, %struct.jpeg_forward_dct.206** %39, align 8
  %41 = getelementptr inbounds %struct.jpeg_forward_dct.206, %struct.jpeg_forward_dct.206* %40, i32 0, i32 0
  %42 = load void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*)** %41, align 8
  %43 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void %42(%struct.jpeg_compress_struct.190* %43)
  %44 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %45 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %44, i32 0, i32 59
  %46 = load %struct.jpeg_entropy_encoder.207*, %struct.jpeg_entropy_encoder.207** %45, align 8
  %47 = getelementptr inbounds %struct.jpeg_entropy_encoder.207, %struct.jpeg_entropy_encoder.207* %46, i32 0, i32 0
  %48 = bitcast {}** %47 to void (%struct.jpeg_compress_struct.190*, i32)**
  %49 = load void (%struct.jpeg_compress_struct.190*, i32)*, void (%struct.jpeg_compress_struct.190*, i32)** %48, align 8
  %50 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %51 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %52 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %51, i32 0, i32 25
  %53 = load i32, i32* %52, align 8
  call void %49(%struct.jpeg_compress_struct.190* %50, i32 %53)
  %54 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %55 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %54, i32 0, i32 54
  %56 = load %struct.jpeg_c_coef_controller.202*, %struct.jpeg_c_coef_controller.202** %55, align 8
  %57 = getelementptr inbounds %struct.jpeg_c_coef_controller.202, %struct.jpeg_c_coef_controller.202* %56, i32 0, i32 0
  %58 = load void (%struct.jpeg_compress_struct.190*, i32)*, void (%struct.jpeg_compress_struct.190*, i32)** %57, align 8
  %59 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %60 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %61 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %60, i32 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = icmp sgt i32 %62, 1
  %64 = zext i1 %63 to i64
  %65 = select i1 %63, i32 3, i32 0
  call void %58(%struct.jpeg_compress_struct.190* %59, i32 %65)
  %66 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %67 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %66, i32 0, i32 52
  %68 = load %struct.jpeg_c_main_controller.200*, %struct.jpeg_c_main_controller.200** %67, align 8
  %69 = getelementptr inbounds %struct.jpeg_c_main_controller.200, %struct.jpeg_c_main_controller.200* %68, i32 0, i32 0
  %70 = load void (%struct.jpeg_compress_struct.190*, i32)*, void (%struct.jpeg_compress_struct.190*, i32)** %69, align 8
  %71 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void %70(%struct.jpeg_compress_struct.190* %71, i32 0)
  %72 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %73 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %72, i32 0, i32 25
  %74 = load i32, i32* %73, align 8
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %37
  %77 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %78 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %77, i32 0, i32 0
  %79 = getelementptr inbounds %struct.jpeg_comp_master.199, %struct.jpeg_comp_master.199* %78, i32 0, i32 3
  store i32 0, i32* %79, align 8
  br label %84

80:                                               ; preds = %37
  %81 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %82 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %81, i32 0, i32 0
  %83 = getelementptr inbounds %struct.jpeg_comp_master.199, %struct.jpeg_comp_master.199* %82, i32 0, i32 3
  store i32 1, i32* %83, align 8
  br label %84

84:                                               ; preds = %80, %76
  br label %181

85:                                               ; preds = %1
  %86 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void @select_scan_parameters(%struct.jpeg_compress_struct.190* %86)
  %87 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void @per_scan_setup(%struct.jpeg_compress_struct.190* %87)
  %88 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %89 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %88, i32 0, i32 47
  %90 = load i32, i32* %89, align 4
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %102, label %92

92:                                               ; preds = %85
  %93 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %94 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %93, i32 0, i32 49
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %102, label %97

97:                                               ; preds = %92
  %98 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %99 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %98, i32 0, i32 24
  %100 = load i32, i32* %99, align 4
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %102, label %119

102:                                              ; preds = %97, %92, %85
  %103 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %104 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %103, i32 0, i32 59
  %105 = load %struct.jpeg_entropy_encoder.207*, %struct.jpeg_entropy_encoder.207** %104, align 8
  %106 = getelementptr inbounds %struct.jpeg_entropy_encoder.207, %struct.jpeg_entropy_encoder.207* %105, i32 0, i32 0
  %107 = bitcast {}** %106 to void (%struct.jpeg_compress_struct.190*, i32)**
  %108 = load void (%struct.jpeg_compress_struct.190*, i32)*, void (%struct.jpeg_compress_struct.190*, i32)** %107, align 8
  %109 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void %108(%struct.jpeg_compress_struct.190* %109, i32 1)
  %110 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %111 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %110, i32 0, i32 54
  %112 = load %struct.jpeg_c_coef_controller.202*, %struct.jpeg_c_coef_controller.202** %111, align 8
  %113 = getelementptr inbounds %struct.jpeg_c_coef_controller.202, %struct.jpeg_c_coef_controller.202* %112, i32 0, i32 0
  %114 = load void (%struct.jpeg_compress_struct.190*, i32)*, void (%struct.jpeg_compress_struct.190*, i32)** %113, align 8
  %115 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void %114(%struct.jpeg_compress_struct.190* %115, i32 2)
  %116 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %117 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %116, i32 0, i32 0
  %118 = getelementptr inbounds %struct.jpeg_comp_master.199, %struct.jpeg_comp_master.199* %117, i32 0, i32 3
  store i32 0, i32* %118, align 8
  br label %181

119:                                              ; preds = %97
  %120 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %121 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %120, i32 0, i32 1
  store i32 2, i32* %121, align 8
  %122 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %123 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %122, i32 0, i32 2
  %124 = load i32, i32* %123, align 4
  %125 = add nsw i32 %124, 1
  store i32 %125, i32* %123, align 4
  br label %126

126:                                              ; preds = %119, %1
  %127 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %128 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %127, i32 0, i32 25
  %129 = load i32, i32* %128, align 8
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void @select_scan_parameters(%struct.jpeg_compress_struct.190* %132)
  %133 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void @per_scan_setup(%struct.jpeg_compress_struct.190* %133)
  br label %134

134:                                              ; preds = %131, %126
  %135 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %136 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %135, i32 0, i32 59
  %137 = load %struct.jpeg_entropy_encoder.207*, %struct.jpeg_entropy_encoder.207** %136, align 8
  %138 = getelementptr inbounds %struct.jpeg_entropy_encoder.207, %struct.jpeg_entropy_encoder.207* %137, i32 0, i32 0
  %139 = bitcast {}** %138 to void (%struct.jpeg_compress_struct.190*, i32)**
  %140 = load void (%struct.jpeg_compress_struct.190*, i32)*, void (%struct.jpeg_compress_struct.190*, i32)** %139, align 8
  %141 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void %140(%struct.jpeg_compress_struct.190* %141, i32 0)
  %142 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %143 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %142, i32 0, i32 54
  %144 = load %struct.jpeg_c_coef_controller.202*, %struct.jpeg_c_coef_controller.202** %143, align 8
  %145 = getelementptr inbounds %struct.jpeg_c_coef_controller.202, %struct.jpeg_c_coef_controller.202* %144, i32 0, i32 0
  %146 = load void (%struct.jpeg_compress_struct.190*, i32)*, void (%struct.jpeg_compress_struct.190*, i32)** %145, align 8
  %147 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void %146(%struct.jpeg_compress_struct.190* %147, i32 2)
  %148 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %149 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %148, i32 0, i32 4
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %159

152:                                              ; preds = %134
  %153 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %154 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %153, i32 0, i32 55
  %155 = load %struct.jpeg_marker_writer.203*, %struct.jpeg_marker_writer.203** %154, align 8
  %156 = getelementptr inbounds %struct.jpeg_marker_writer.203, %struct.jpeg_marker_writer.203* %155, i32 0, i32 2
  %157 = load void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*)** %156, align 8
  %158 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void %157(%struct.jpeg_compress_struct.190* %158)
  br label %159

159:                                              ; preds = %152, %134
  %160 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %161 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %160, i32 0, i32 55
  %162 = load %struct.jpeg_marker_writer.203*, %struct.jpeg_marker_writer.203** %161, align 8
  %163 = getelementptr inbounds %struct.jpeg_marker_writer.203, %struct.jpeg_marker_writer.203* %162, i32 0, i32 3
  %164 = load void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*)** %163, align 8
  %165 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void %164(%struct.jpeg_compress_struct.190* %165)
  %166 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %167 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %166, i32 0, i32 0
  %168 = getelementptr inbounds %struct.jpeg_comp_master.199, %struct.jpeg_comp_master.199* %167, i32 0, i32 3
  store i32 0, i32* %168, align 8
  br label %181

169:                                              ; preds = %1
  %170 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %171 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %170, i32 0, i32 0
  %172 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %171, align 8
  %173 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %172, i32 0, i32 5
  store i32 47, i32* %173, align 8
  %174 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %175 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %174, i32 0, i32 0
  %176 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %175, align 8
  %177 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %176, i32 0, i32 0
  %178 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %177, align 8
  %179 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %180 = bitcast %struct.jpeg_compress_struct.190* %179 to %struct.jpeg_common_struct*
  call void %178(%struct.jpeg_common_struct* %180)
  br label %181

181:                                              ; preds = %169, %159, %102, %84
  %182 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %183 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %182, i32 0, i32 2
  %184 = load i32, i32* %183, align 4
  %185 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %186 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %185, i32 0, i32 3
  %187 = load i32, i32* %186, align 8
  %188 = sub nsw i32 %187, 1
  %189 = icmp eq i32 %184, %188
  %190 = zext i1 %189 to i32
  %191 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %192 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %191, i32 0, i32 0
  %193 = getelementptr inbounds %struct.jpeg_comp_master.199, %struct.jpeg_comp_master.199* %192, i32 0, i32 4
  store i32 %190, i32* %193, align 4
  %194 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %195 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %194, i32 0, i32 2
  %196 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %195, align 8
  %197 = icmp ne %struct.jpeg_progress_mgr* %196, null
  br i1 %197, label %198, label %213

198:                                              ; preds = %181
  %199 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %200 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %199, i32 0, i32 2
  %201 = load i32, i32* %200, align 4
  %202 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %203 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %202, i32 0, i32 2
  %204 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %203, align 8
  %205 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %204, i32 0, i32 3
  store i32 %201, i32* %205, align 8
  %206 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %207 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %206, i32 0, i32 3
  %208 = load i32, i32* %207, align 8
  %209 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %210 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %209, i32 0, i32 2
  %211 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %210, align 8
  %212 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %211, i32 0, i32 4
  store i32 %208, i32* %212, align 4
  br label %213

213:                                              ; preds = %198, %181
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @pass_startup(%struct.jpeg_compress_struct.190* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.190*, align 8
  store %struct.jpeg_compress_struct.190* %0, %struct.jpeg_compress_struct.190** %2, align 8
  %3 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %3, i32 0, i32 51
  %5 = load %struct.jpeg_comp_master.199*, %struct.jpeg_comp_master.199** %4, align 8
  %6 = getelementptr inbounds %struct.jpeg_comp_master.199, %struct.jpeg_comp_master.199* %5, i32 0, i32 3
  store i32 0, i32* %6, align 8
  %7 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %7, i32 0, i32 55
  %9 = load %struct.jpeg_marker_writer.203*, %struct.jpeg_marker_writer.203** %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_marker_writer.203, %struct.jpeg_marker_writer.203* %9, i32 0, i32 2
  %11 = load void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*)** %10, align 8
  %12 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void %11(%struct.jpeg_compress_struct.190* %12)
  %13 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %13, i32 0, i32 55
  %15 = load %struct.jpeg_marker_writer.203*, %struct.jpeg_marker_writer.203** %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_marker_writer.203, %struct.jpeg_marker_writer.203* %15, i32 0, i32 3
  %17 = load void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*)** %16, align 8
  %18 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void %17(%struct.jpeg_compress_struct.190* %18)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_pass_master(%struct.jpeg_compress_struct.190* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.190*, align 8
  %3 = alloca %struct.my_comp_master*, align 8
  store %struct.jpeg_compress_struct.190* %0, %struct.jpeg_compress_struct.190** %2, align 8
  %4 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %4, i32 0, i32 51
  %6 = load %struct.jpeg_comp_master.199*, %struct.jpeg_comp_master.199** %5, align 8
  %7 = bitcast %struct.jpeg_comp_master.199* %6 to %struct.my_comp_master*
  store %struct.my_comp_master* %7, %struct.my_comp_master** %3, align 8
  %8 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %8, i32 0, i32 59
  %10 = load %struct.jpeg_entropy_encoder.207*, %struct.jpeg_entropy_encoder.207** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_entropy_encoder.207, %struct.jpeg_entropy_encoder.207* %10, i32 0, i32 2
  %12 = load void (%struct.jpeg_compress_struct.190*)*, void (%struct.jpeg_compress_struct.190*)** %11, align 8
  %13 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  call void %12(%struct.jpeg_compress_struct.190* %13)
  %14 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %15 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %46 [
    i32 0, label %17
    i32 1, label %30
    i32 2, label %33
  ]

17:                                               ; preds = %1
  %18 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %19 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %18, i32 0, i32 1
  store i32 2, i32* %19, align 8
  %20 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %20, i32 0, i32 25
  %22 = load i32, i32* %21, align 8
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %17
  %25 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %26 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %25, i32 0, i32 4
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

29:                                               ; preds = %24, %17
  br label %46

30:                                               ; preds = %1
  %31 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %32 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %31, i32 0, i32 1
  store i32 2, i32* %32, align 8
  br label %46

33:                                               ; preds = %1
  %34 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %34, i32 0, i32 25
  %36 = load i32, i32* %35, align 8
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %40 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %39, i32 0, i32 1
  store i32 1, i32* %40, align 8
  br label %41

41:                                               ; preds = %38, %33
  %42 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %43 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %42, i32 0, i32 4
  %44 = load i32, i32* %43, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %43, align 4
  br label %46

46:                                               ; preds = %41, %30, %29, %1
  %47 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %48 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %47, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %48, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @initial_setup(%struct.jpeg_compress_struct.190* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.190*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_component_info*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store %struct.jpeg_compress_struct.190* %0, %struct.jpeg_compress_struct.190** %2, align 8
  %7 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %7, i32 0, i32 7
  %9 = load i32, i32* %8, align 4
  %10 = icmp ule i32 %9, 0
  br i1 %10, label %26, label %11

11:                                               ; preds = %1
  %12 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %13 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %12, i32 0, i32 6
  %14 = load i32, i32* %13, align 8
  %15 = icmp ule i32 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %11
  %17 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %17, i32 0, i32 12
  %19 = load i32, i32* %18, align 4
  %20 = icmp sle i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %23 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %22, i32 0, i32 8
  %24 = load i32, i32* %23, align 8
  %25 = icmp sle i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21, %16, %11, %1
  %27 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %28 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %27, i32 0, i32 0
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i32 0, i32 5
  store i32 31, i32* %30, align 8
  %31 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %32 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %31, i32 0, i32 0
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i32 0, i32 0
  %35 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %34, align 8
  %36 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %37 = bitcast %struct.jpeg_compress_struct.190* %36 to %struct.jpeg_common_struct*
  call void %35(%struct.jpeg_common_struct* %37)
  br label %38

38:                                               ; preds = %26, %21
  %39 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %40 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %39, i32 0, i32 7
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = icmp sgt i64 %42, 65500
  br i1 %43, label %50, label %44

44:                                               ; preds = %38
  %45 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %46 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %45, i32 0, i32 6
  %47 = load i32, i32* %46, align 8
  %48 = zext i32 %47 to i64
  %49 = icmp sgt i64 %48, 65500
  br i1 %49, label %50, label %68

50:                                               ; preds = %44, %38
  %51 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %52 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %51, i32 0, i32 0
  %53 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %52, align 8
  %54 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %53, i32 0, i32 5
  store i32 40, i32* %54, align 8
  %55 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %56 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %55, i32 0, i32 0
  %57 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %56, align 8
  %58 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %57, i32 0, i32 6
  %59 = bitcast %union.anon* %58 to [8 x i32]*
  %60 = getelementptr inbounds [8 x i32], [8 x i32]* %59, i64 0, i64 0
  store i32 65500, i32* %60, align 4
  %61 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %62 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %61, i32 0, i32 0
  %63 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %62, align 8
  %64 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %63, i32 0, i32 0
  %65 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %64, align 8
  %66 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %67 = bitcast %struct.jpeg_compress_struct.190* %66 to %struct.jpeg_common_struct*
  call void %65(%struct.jpeg_common_struct* %67)
  br label %68

68:                                               ; preds = %50, %44
  %69 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %70 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %69, i32 0, i32 6
  %71 = load i32, i32* %70, align 8
  %72 = zext i32 %71 to i64
  %73 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %74 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %73, i32 0, i32 8
  %75 = load i32, i32* %74, align 8
  %76 = sext i32 %75 to i64
  %77 = mul nsw i64 %72, %76
  store i64 %77, i64* %5, align 8
  %78 = load i64, i64* %5, align 8
  %79 = trunc i64 %78 to i32
  store i32 %79, i32* %6, align 4
  %80 = load i32, i32* %6, align 4
  %81 = zext i32 %80 to i64
  %82 = load i64, i64* %5, align 8
  %83 = icmp ne i64 %81, %82
  br i1 %83, label %84, label %96

84:                                               ; preds = %68
  %85 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %86 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %85, i32 0, i32 0
  %87 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %86, align 8
  %88 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %87, i32 0, i32 5
  store i32 69, i32* %88, align 8
  %89 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %90 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %89, i32 0, i32 0
  %91 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %90, align 8
  %92 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %91, i32 0, i32 0
  %93 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %92, align 8
  %94 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %95 = bitcast %struct.jpeg_compress_struct.190* %94 to %struct.jpeg_common_struct*
  call void %93(%struct.jpeg_common_struct* %95)
  br label %96

96:                                               ; preds = %84, %68
  %97 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %98 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %97, i32 0, i32 11
  %99 = load i32, i32* %98, align 8
  %100 = icmp ne i32 %99, 8
  br i1 %100, label %101, label %122

101:                                              ; preds = %96
  %102 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %103 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %102, i32 0, i32 0
  %104 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %103, align 8
  %105 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %104, i32 0, i32 5
  store i32 13, i32* %105, align 8
  %106 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %107 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %106, i32 0, i32 11
  %108 = load i32, i32* %107, align 8
  %109 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %110 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %109, i32 0, i32 0
  %111 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %110, align 8
  %112 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %111, i32 0, i32 6
  %113 = bitcast %union.anon* %112 to [8 x i32]*
  %114 = getelementptr inbounds [8 x i32], [8 x i32]* %113, i64 0, i64 0
  store i32 %108, i32* %114, align 4
  %115 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %116 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %115, i32 0, i32 0
  %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %116, align 8
  %118 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %117, i32 0, i32 0
  %119 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %118, align 8
  %120 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %121 = bitcast %struct.jpeg_compress_struct.190* %120 to %struct.jpeg_common_struct*
  call void %119(%struct.jpeg_common_struct* %121)
  br label %122

122:                                              ; preds = %101, %96
  %123 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %124 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %123, i32 0, i32 12
  %125 = load i32, i32* %124, align 4
  %126 = icmp sgt i32 %125, 10
  br i1 %126, label %127, label %154

127:                                              ; preds = %122
  %128 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %129 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %128, i32 0, i32 0
  %130 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %129, align 8
  %131 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %130, i32 0, i32 5
  store i32 24, i32* %131, align 8
  %132 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %133 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %132, i32 0, i32 12
  %134 = load i32, i32* %133, align 4
  %135 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %136 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %135, i32 0, i32 0
  %137 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %136, align 8
  %138 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %137, i32 0, i32 6
  %139 = bitcast %union.anon* %138 to [8 x i32]*
  %140 = getelementptr inbounds [8 x i32], [8 x i32]* %139, i64 0, i64 0
  store i32 %134, i32* %140, align 4
  %141 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %142 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %141, i32 0, i32 0
  %143 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %142, align 8
  %144 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %143, i32 0, i32 6
  %145 = bitcast %union.anon* %144 to [8 x i32]*
  %146 = getelementptr inbounds [8 x i32], [8 x i32]* %145, i64 0, i64 1
  store i32 10, i32* %146, align 4
  %147 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %148 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %147, i32 0, i32 0
  %149 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %148, align 8
  %150 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %149, i32 0, i32 0
  %151 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %150, align 8
  %152 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %153 = bitcast %struct.jpeg_compress_struct.190* %152 to %struct.jpeg_common_struct*
  call void %151(%struct.jpeg_common_struct* %153)
  br label %154

154:                                              ; preds = %127, %122
  %155 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %156 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %155, i32 0, i32 38
  store i32 1, i32* %156, align 8
  %157 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %158 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %157, i32 0, i32 39
  store i32 1, i32* %158, align 4
  store i32 0, i32* %3, align 4
  %159 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %160 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %159, i32 0, i32 14
  %161 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %160, align 8
  store %struct.jpeg_component_info* %161, %struct.jpeg_component_info** %4, align 8
  br label %162

162:                                              ; preds = %239, %154
  %163 = load i32, i32* %3, align 4
  %164 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %165 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %164, i32 0, i32 12
  %166 = load i32, i32* %165, align 4
  %167 = icmp slt i32 %163, %166
  br i1 %167, label %168, label %244

168:                                              ; preds = %162
  %169 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %170 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %169, i32 0, i32 2
  %171 = load i32, i32* %170, align 8
  %172 = icmp sle i32 %171, 0
  br i1 %172, label %188, label %173

173:                                              ; preds = %168
  %174 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %175 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %174, i32 0, i32 2
  %176 = load i32, i32* %175, align 8
  %177 = icmp sgt i32 %176, 4
  br i1 %177, label %188, label %178

178:                                              ; preds = %173
  %179 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %180 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %179, i32 0, i32 3
  %181 = load i32, i32* %180, align 4
  %182 = icmp sle i32 %181, 0
  br i1 %182, label %188, label %183

183:                                              ; preds = %178
  %184 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %185 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %184, i32 0, i32 3
  %186 = load i32, i32* %185, align 4
  %187 = icmp sgt i32 %186, 4
  br i1 %187, label %188, label %200

188:                                              ; preds = %183, %178, %173, %168
  %189 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %190 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %189, i32 0, i32 0
  %191 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %190, align 8
  %192 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %191, i32 0, i32 5
  store i32 16, i32* %192, align 8
  %193 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %194 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %193, i32 0, i32 0
  %195 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %194, align 8
  %196 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %195, i32 0, i32 0
  %197 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %196, align 8
  %198 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %199 = bitcast %struct.jpeg_compress_struct.190* %198 to %struct.jpeg_common_struct*
  call void %197(%struct.jpeg_common_struct* %199)
  br label %200

200:                                              ; preds = %188, %183
  %201 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %202 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %201, i32 0, i32 38
  %203 = load i32, i32* %202, align 8
  %204 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %205 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %204, i32 0, i32 2
  %206 = load i32, i32* %205, align 8
  %207 = icmp sgt i32 %203, %206
  br i1 %207, label %208, label %212

208:                                              ; preds = %200
  %209 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %210 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %209, i32 0, i32 38
  %211 = load i32, i32* %210, align 8
  br label %216

212:                                              ; preds = %200
  %213 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %214 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %213, i32 0, i32 2
  %215 = load i32, i32* %214, align 8
  br label %216

216:                                              ; preds = %212, %208
  %217 = phi i32 [ %211, %208 ], [ %215, %212 ]
  %218 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %219 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %218, i32 0, i32 38
  store i32 %217, i32* %219, align 8
  %220 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %221 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %220, i32 0, i32 39
  %222 = load i32, i32* %221, align 4
  %223 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %224 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %223, i32 0, i32 3
  %225 = load i32, i32* %224, align 4
  %226 = icmp sgt i32 %222, %225
  br i1 %226, label %227, label %231

227:                                              ; preds = %216
  %228 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %229 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %228, i32 0, i32 39
  %230 = load i32, i32* %229, align 4
  br label %235

231:                                              ; preds = %216
  %232 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %233 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %232, i32 0, i32 3
  %234 = load i32, i32* %233, align 4
  br label %235

235:                                              ; preds = %231, %227
  %236 = phi i32 [ %230, %227 ], [ %234, %231 ]
  %237 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %238 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %237, i32 0, i32 39
  store i32 %236, i32* %238, align 4
  br label %239

239:                                              ; preds = %235
  %240 = load i32, i32* %3, align 4
  %241 = add nsw i32 %240, 1
  store i32 %241, i32* %3, align 4
  %242 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %243 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %242, i32 1
  store %struct.jpeg_component_info* %243, %struct.jpeg_component_info** %4, align 8
  br label %162

244:                                              ; preds = %162
  store i32 0, i32* %3, align 4
  %245 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %246 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %245, i32 0, i32 14
  %247 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %246, align 8
  store %struct.jpeg_component_info* %247, %struct.jpeg_component_info** %4, align 8
  br label %248

248:                                              ; preds = %332, %244
  %249 = load i32, i32* %3, align 4
  %250 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %251 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %250, i32 0, i32 12
  %252 = load i32, i32* %251, align 4
  %253 = icmp slt i32 %249, %252
  br i1 %253, label %254, label %337

254:                                              ; preds = %248
  %255 = load i32, i32* %3, align 4
  %256 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %257 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %256, i32 0, i32 1
  store i32 %255, i32* %257, align 4
  %258 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %259 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %258, i32 0, i32 9
  store i32 8, i32* %259, align 4
  %260 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %261 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %260, i32 0, i32 6
  %262 = load i32, i32* %261, align 8
  %263 = zext i32 %262 to i64
  %264 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %265 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %264, i32 0, i32 2
  %266 = load i32, i32* %265, align 8
  %267 = sext i32 %266 to i64
  %268 = mul nsw i64 %263, %267
  %269 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %270 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %269, i32 0, i32 38
  %271 = load i32, i32* %270, align 8
  %272 = mul nsw i32 %271, 8
  %273 = sext i32 %272 to i64
  %274 = call i64 @jdiv_round_up(i64 %268, i64 %273)
  %275 = trunc i64 %274 to i32
  %276 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %277 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %276, i32 0, i32 7
  store i32 %275, i32* %277, align 4
  %278 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %279 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %278, i32 0, i32 7
  %280 = load i32, i32* %279, align 4
  %281 = zext i32 %280 to i64
  %282 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %283 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %282, i32 0, i32 3
  %284 = load i32, i32* %283, align 4
  %285 = sext i32 %284 to i64
  %286 = mul nsw i64 %281, %285
  %287 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %288 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %287, i32 0, i32 39
  %289 = load i32, i32* %288, align 4
  %290 = mul nsw i32 %289, 8
  %291 = sext i32 %290 to i64
  %292 = call i64 @jdiv_round_up(i64 %286, i64 %291)
  %293 = trunc i64 %292 to i32
  %294 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %295 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %294, i32 0, i32 8
  store i32 %293, i32* %295, align 8
  %296 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %297 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %296, i32 0, i32 6
  %298 = load i32, i32* %297, align 8
  %299 = zext i32 %298 to i64
  %300 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %301 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %300, i32 0, i32 2
  %302 = load i32, i32* %301, align 8
  %303 = sext i32 %302 to i64
  %304 = mul nsw i64 %299, %303
  %305 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %306 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %305, i32 0, i32 38
  %307 = load i32, i32* %306, align 8
  %308 = sext i32 %307 to i64
  %309 = call i64 @jdiv_round_up(i64 %304, i64 %308)
  %310 = trunc i64 %309 to i32
  %311 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %312 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %311, i32 0, i32 10
  store i32 %310, i32* %312, align 8
  %313 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %314 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %313, i32 0, i32 7
  %315 = load i32, i32* %314, align 4
  %316 = zext i32 %315 to i64
  %317 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %318 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %317, i32 0, i32 3
  %319 = load i32, i32* %318, align 4
  %320 = sext i32 %319 to i64
  %321 = mul nsw i64 %316, %320
  %322 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %323 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %322, i32 0, i32 39
  %324 = load i32, i32* %323, align 4
  %325 = sext i32 %324 to i64
  %326 = call i64 @jdiv_round_up(i64 %321, i64 %325)
  %327 = trunc i64 %326 to i32
  %328 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %329 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %328, i32 0, i32 11
  store i32 %327, i32* %329, align 4
  %330 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %331 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %330, i32 0, i32 12
  store i32 1, i32* %331, align 8
  br label %332

332:                                              ; preds = %254
  %333 = load i32, i32* %3, align 4
  %334 = add nsw i32 %333, 1
  store i32 %334, i32* %3, align 4
  %335 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %336 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %335, i32 1
  store %struct.jpeg_component_info* %336, %struct.jpeg_component_info** %4, align 8
  br label %248

337:                                              ; preds = %248
  %338 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %339 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %338, i32 0, i32 7
  %340 = load i32, i32* %339, align 4
  %341 = zext i32 %340 to i64
  %342 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %343 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %342, i32 0, i32 39
  %344 = load i32, i32* %343, align 4
  %345 = mul nsw i32 %344, 8
  %346 = sext i32 %345 to i64
  %347 = call i64 @jdiv_round_up(i64 %341, i64 %346)
  %348 = trunc i64 %347 to i32
  %349 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %350 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %349, i32 0, i32 40
  store i32 %348, i32* %350, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @validate_script(%struct.jpeg_compress_struct.190* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.190*, align 8
  %3 = alloca %struct.jpeg_scan_info*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [10 x i32], align 16
  %14 = alloca i32*, align 8
  %15 = alloca [10 x [64 x i32]], align 16
  store %struct.jpeg_compress_struct.190* %0, %struct.jpeg_compress_struct.190** %2, align 8
  %16 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %17 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %16, i32 0, i32 21
  %18 = load i32, i32* %17, align 8
  %19 = icmp sle i32 %18, 0
  br i1 %19, label %20, label %38

20:                                               ; preds = %1
  %21 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %21, i32 0, i32 0
  %23 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %23, i32 0, i32 5
  store i32 17, i32* %24, align 8
  %25 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %25, i32 0, i32 0
  %27 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %26, align 8
  %28 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %27, i32 0, i32 6
  %29 = bitcast %union.anon* %28 to [8 x i32]*
  %30 = getelementptr inbounds [8 x i32], [8 x i32]* %29, i64 0, i64 0
  store i32 0, i32* %30, align 4
  %31 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %32 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %31, i32 0, i32 0
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i32 0, i32 0
  %35 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %34, align 8
  %36 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %37 = bitcast %struct.jpeg_compress_struct.190* %36 to %struct.jpeg_common_struct*
  call void %35(%struct.jpeg_common_struct* %37)
  br label %38

38:                                               ; preds = %20, %1
  %39 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %40 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %39, i32 0, i32 22
  %41 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %40, align 8
  store %struct.jpeg_scan_info* %41, %struct.jpeg_scan_info** %3, align 8
  %42 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %3, align 8
  %43 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %42, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %38
  %47 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %3, align 8
  %48 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %47, i32 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = icmp ne i32 %49, 63
  br i1 %50, label %51, label %77

51:                                               ; preds = %46, %38
  %52 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %53 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %52, i32 0, i32 37
  store i32 1, i32* %53, align 4
  %54 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %15, i64 0, i64 0
  %55 = getelementptr inbounds [64 x i32], [64 x i32]* %54, i64 0, i64 0
  store i32* %55, i32** %14, align 8
  store i32 0, i32* %6, align 4
  br label %56

56:                                               ; preds = %73, %51
  %57 = load i32, i32* %6, align 4
  %58 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %59 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %58, i32 0, i32 12
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %57, %60
  br i1 %61, label %62, label %76

62:                                               ; preds = %56
  store i32 0, i32* %7, align 4
  br label %63

63:                                               ; preds = %69, %62
  %64 = load i32, i32* %7, align 4
  %65 = icmp slt i32 %64, 64
  br i1 %65, label %66, label %72

66:                                               ; preds = %63
  %67 = load i32*, i32** %14, align 8
  %68 = getelementptr inbounds i32, i32* %67, i32 1
  store i32* %68, i32** %14, align 8
  store i32 -1, i32* %67, align 4
  br label %69

69:                                               ; preds = %66
  %70 = load i32, i32* %7, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %7, align 4
  br label %63

72:                                               ; preds = %63
  br label %73

73:                                               ; preds = %72
  %74 = load i32, i32* %6, align 4
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %6, align 4
  br label %56

76:                                               ; preds = %56
  br label %94

77:                                               ; preds = %46
  %78 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %79 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %78, i32 0, i32 37
  store i32 0, i32* %79, align 4
  store i32 0, i32* %6, align 4
  br label %80

80:                                               ; preds = %90, %77
  %81 = load i32, i32* %6, align 4
  %82 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %83 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %82, i32 0, i32 12
  %84 = load i32, i32* %83, align 4
  %85 = icmp slt i32 %81, %84
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = load i32, i32* %6, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [10 x i32], [10 x i32]* %13, i64 0, i64 %88
  store i32 0, i32* %89, align 4
  br label %90

90:                                               ; preds = %86
  %91 = load i32, i32* %6, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %6, align 4
  br label %80

93:                                               ; preds = %80
  br label %94

94:                                               ; preds = %93, %76
  store i32 1, i32* %4, align 4
  br label %95

95:                                               ; preds = %520, %94
  %96 = load i32, i32* %4, align 4
  %97 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %98 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %97, i32 0, i32 21
  %99 = load i32, i32* %98, align 8
  %100 = icmp sle i32 %96, %99
  br i1 %100, label %101, label %525

101:                                              ; preds = %95
  %102 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %3, align 8
  %103 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %102, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  store i32 %104, i32* %5, align 4
  %105 = load i32, i32* %5, align 4
  %106 = icmp sle i32 %105, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %101
  %108 = load i32, i32* %5, align 4
  %109 = icmp sgt i32 %108, 4
  br i1 %109, label %110, label %135

110:                                              ; preds = %107, %101
  %111 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %112 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %111, i32 0, i32 0
  %113 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %112, align 8
  %114 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %113, i32 0, i32 5
  store i32 24, i32* %114, align 8
  %115 = load i32, i32* %5, align 4
  %116 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %117 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %116, i32 0, i32 0
  %118 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %117, align 8
  %119 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %118, i32 0, i32 6
  %120 = bitcast %union.anon* %119 to [8 x i32]*
  %121 = getelementptr inbounds [8 x i32], [8 x i32]* %120, i64 0, i64 0
  store i32 %115, i32* %121, align 4
  %122 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %123 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %122, i32 0, i32 0
  %124 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %123, align 8
  %125 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %124, i32 0, i32 6
  %126 = bitcast %union.anon* %125 to [8 x i32]*
  %127 = getelementptr inbounds [8 x i32], [8 x i32]* %126, i64 0, i64 1
  store i32 4, i32* %127, align 4
  %128 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %129 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %128, i32 0, i32 0
  %130 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %129, align 8
  %131 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %130, i32 0, i32 0
  %132 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %131, align 8
  %133 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %134 = bitcast %struct.jpeg_compress_struct.190* %133 to %struct.jpeg_common_struct*
  call void %132(%struct.jpeg_common_struct* %134)
  br label %135

135:                                              ; preds = %110, %107
  store i32 0, i32* %6, align 4
  br label %136

136:                                              ; preds = %207, %135
  %137 = load i32, i32* %6, align 4
  %138 = load i32, i32* %5, align 4
  %139 = icmp slt i32 %137, %138
  br i1 %139, label %140, label %210

140:                                              ; preds = %136
  %141 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %3, align 8
  %142 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %141, i32 0, i32 1
  %143 = load i32, i32* %6, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [4 x i32], [4 x i32]* %142, i64 0, i64 %144
  %146 = load i32, i32* %145, align 4
  store i32 %146, i32* %8, align 4
  %147 = load i32, i32* %8, align 4
  %148 = icmp slt i32 %147, 0
  br i1 %148, label %155, label %149

149:                                              ; preds = %140
  %150 = load i32, i32* %8, align 4
  %151 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %152 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %151, i32 0, i32 12
  %153 = load i32, i32* %152, align 4
  %154 = icmp sge i32 %150, %153
  br i1 %154, label %155, label %174

155:                                              ; preds = %149, %140
  %156 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %157 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %156, i32 0, i32 0
  %158 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %157, align 8
  %159 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %158, i32 0, i32 5
  store i32 17, i32* %159, align 8
  %160 = load i32, i32* %4, align 4
  %161 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %162 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %161, i32 0, i32 0
  %163 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %162, align 8
  %164 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %163, i32 0, i32 6
  %165 = bitcast %union.anon* %164 to [8 x i32]*
  %166 = getelementptr inbounds [8 x i32], [8 x i32]* %165, i64 0, i64 0
  store i32 %160, i32* %166, align 4
  %167 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %168 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %167, i32 0, i32 0
  %169 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %168, align 8
  %170 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %169, i32 0, i32 0
  %171 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %170, align 8
  %172 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %173 = bitcast %struct.jpeg_compress_struct.190* %172 to %struct.jpeg_common_struct*
  call void %171(%struct.jpeg_common_struct* %173)
  br label %174

174:                                              ; preds = %155, %149
  %175 = load i32, i32* %6, align 4
  %176 = icmp sgt i32 %175, 0
  br i1 %176, label %177, label %206

177:                                              ; preds = %174
  %178 = load i32, i32* %8, align 4
  %179 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %3, align 8
  %180 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %179, i32 0, i32 1
  %181 = load i32, i32* %6, align 4
  %182 = sub nsw i32 %181, 1
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [4 x i32], [4 x i32]* %180, i64 0, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = icmp sle i32 %178, %185
  br i1 %186, label %187, label %206

187:                                              ; preds = %177
  %188 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %189 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %188, i32 0, i32 0
  %190 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %189, align 8
  %191 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %190, i32 0, i32 5
  store i32 17, i32* %191, align 8
  %192 = load i32, i32* %4, align 4
  %193 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %194 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %193, i32 0, i32 0
  %195 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %194, align 8
  %196 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %195, i32 0, i32 6
  %197 = bitcast %union.anon* %196 to [8 x i32]*
  %198 = getelementptr inbounds [8 x i32], [8 x i32]* %197, i64 0, i64 0
  store i32 %192, i32* %198, align 4
  %199 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %200 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %199, i32 0, i32 0
  %201 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %200, align 8
  %202 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %201, i32 0, i32 0
  %203 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %202, align 8
  %204 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %205 = bitcast %struct.jpeg_compress_struct.190* %204 to %struct.jpeg_common_struct*
  call void %203(%struct.jpeg_common_struct* %205)
  br label %206

206:                                              ; preds = %187, %177, %174
  br label %207

207:                                              ; preds = %206
  %208 = load i32, i32* %6, align 4
  %209 = add nsw i32 %208, 1
  store i32 %209, i32* %6, align 4
  br label %136

210:                                              ; preds = %136
  %211 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %3, align 8
  %212 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %211, i32 0, i32 2
  %213 = load i32, i32* %212, align 4
  store i32 %213, i32* %9, align 4
  %214 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %3, align 8
  %215 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %214, i32 0, i32 3
  %216 = load i32, i32* %215, align 4
  store i32 %216, i32* %10, align 4
  %217 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %3, align 8
  %218 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %217, i32 0, i32 4
  %219 = load i32, i32* %218, align 4
  store i32 %219, i32* %11, align 4
  %220 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %3, align 8
  %221 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %220, i32 0, i32 5
  %222 = load i32, i32* %221, align 4
  store i32 %222, i32* %12, align 4
  %223 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %224 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %223, i32 0, i32 37
  %225 = load i32, i32* %224, align 4
  %226 = icmp ne i32 %225, 0
  br i1 %226, label %227, label %444

227:                                              ; preds = %210
  %228 = load i32, i32* %9, align 4
  %229 = icmp slt i32 %228, 0
  br i1 %229, label %252, label %230

230:                                              ; preds = %227
  %231 = load i32, i32* %9, align 4
  %232 = icmp sge i32 %231, 64
  br i1 %232, label %252, label %233

233:                                              ; preds = %230
  %234 = load i32, i32* %10, align 4
  %235 = load i32, i32* %9, align 4
  %236 = icmp slt i32 %234, %235
  br i1 %236, label %252, label %237

237:                                              ; preds = %233
  %238 = load i32, i32* %10, align 4
  %239 = icmp sge i32 %238, 64
  br i1 %239, label %252, label %240

240:                                              ; preds = %237
  %241 = load i32, i32* %11, align 4
  %242 = icmp slt i32 %241, 0
  br i1 %242, label %252, label %243

243:                                              ; preds = %240
  %244 = load i32, i32* %11, align 4
  %245 = icmp sgt i32 %244, 13
  br i1 %245, label %252, label %246

246:                                              ; preds = %243
  %247 = load i32, i32* %12, align 4
  %248 = icmp slt i32 %247, 0
  br i1 %248, label %252, label %249

249:                                              ; preds = %246
  %250 = load i32, i32* %12, align 4
  %251 = icmp sgt i32 %250, 13
  br i1 %251, label %252, label %271

252:                                              ; preds = %249, %246, %243, %240, %237, %233, %230, %227
  %253 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %254 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %253, i32 0, i32 0
  %255 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %254, align 8
  %256 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %255, i32 0, i32 5
  store i32 15, i32* %256, align 8
  %257 = load i32, i32* %4, align 4
  %258 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %259 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %258, i32 0, i32 0
  %260 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %259, align 8
  %261 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %260, i32 0, i32 6
  %262 = bitcast %union.anon* %261 to [8 x i32]*
  %263 = getelementptr inbounds [8 x i32], [8 x i32]* %262, i64 0, i64 0
  store i32 %257, i32* %263, align 4
  %264 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %265 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %264, i32 0, i32 0
  %266 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %265, align 8
  %267 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %266, i32 0, i32 0
  %268 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %267, align 8
  %269 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %270 = bitcast %struct.jpeg_compress_struct.190* %269 to %struct.jpeg_common_struct*
  call void %268(%struct.jpeg_common_struct* %270)
  br label %271

271:                                              ; preds = %252, %249
  %272 = load i32, i32* %9, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %297

274:                                              ; preds = %271
  %275 = load i32, i32* %10, align 4
  %276 = icmp ne i32 %275, 0
  br i1 %276, label %277, label %296

277:                                              ; preds = %274
  %278 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %279 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %278, i32 0, i32 0
  %280 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %279, align 8
  %281 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %280, i32 0, i32 5
  store i32 15, i32* %281, align 8
  %282 = load i32, i32* %4, align 4
  %283 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %284 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %283, i32 0, i32 0
  %285 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %284, align 8
  %286 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %285, i32 0, i32 6
  %287 = bitcast %union.anon* %286 to [8 x i32]*
  %288 = getelementptr inbounds [8 x i32], [8 x i32]* %287, i64 0, i64 0
  store i32 %282, i32* %288, align 4
  %289 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %290 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %289, i32 0, i32 0
  %291 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %290, align 8
  %292 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %291, i32 0, i32 0
  %293 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %292, align 8
  %294 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %295 = bitcast %struct.jpeg_compress_struct.190* %294 to %struct.jpeg_common_struct*
  call void %293(%struct.jpeg_common_struct* %295)
  br label %296

296:                                              ; preds = %277, %274
  br label %320

297:                                              ; preds = %271
  %298 = load i32, i32* %5, align 4
  %299 = icmp ne i32 %298, 1
  br i1 %299, label %300, label %319

300:                                              ; preds = %297
  %301 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %302 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %301, i32 0, i32 0
  %303 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %302, align 8
  %304 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %303, i32 0, i32 5
  store i32 15, i32* %304, align 8
  %305 = load i32, i32* %4, align 4
  %306 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %307 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %306, i32 0, i32 0
  %308 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %307, align 8
  %309 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %308, i32 0, i32 6
  %310 = bitcast %union.anon* %309 to [8 x i32]*
  %311 = getelementptr inbounds [8 x i32], [8 x i32]* %310, i64 0, i64 0
  store i32 %305, i32* %311, align 4
  %312 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %313 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %312, i32 0, i32 0
  %314 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %313, align 8
  %315 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %314, i32 0, i32 0
  %316 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %315, align 8
  %317 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %318 = bitcast %struct.jpeg_compress_struct.190* %317 to %struct.jpeg_common_struct*
  call void %316(%struct.jpeg_common_struct* %318)
  br label %319

319:                                              ; preds = %300, %297
  br label %320

320:                                              ; preds = %319, %296
  store i32 0, i32* %6, align 4
  br label %321

321:                                              ; preds = %440, %320
  %322 = load i32, i32* %6, align 4
  %323 = load i32, i32* %5, align 4
  %324 = icmp slt i32 %322, %323
  br i1 %324, label %325, label %443

325:                                              ; preds = %321
  %326 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %3, align 8
  %327 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %326, i32 0, i32 1
  %328 = load i32, i32* %6, align 4
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds [4 x i32], [4 x i32]* %327, i64 0, i64 %329
  %331 = load i32, i32* %330, align 4
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %15, i64 0, i64 %332
  %334 = getelementptr inbounds [64 x i32], [64 x i32]* %333, i64 0, i64 0
  store i32* %334, i32** %14, align 8
  %335 = load i32, i32* %9, align 4
  %336 = icmp ne i32 %335, 0
  br i1 %336, label %337, label %361

337:                                              ; preds = %325
  %338 = load i32*, i32** %14, align 8
  %339 = getelementptr inbounds i32, i32* %338, i64 0
  %340 = load i32, i32* %339, align 4
  %341 = icmp slt i32 %340, 0
  br i1 %341, label %342, label %361

342:                                              ; preds = %337
  %343 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %344 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %343, i32 0, i32 0
  %345 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %344, align 8
  %346 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %345, i32 0, i32 5
  store i32 15, i32* %346, align 8
  %347 = load i32, i32* %4, align 4
  %348 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %349 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %348, i32 0, i32 0
  %350 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %349, align 8
  %351 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %350, i32 0, i32 6
  %352 = bitcast %union.anon* %351 to [8 x i32]*
  %353 = getelementptr inbounds [8 x i32], [8 x i32]* %352, i64 0, i64 0
  store i32 %347, i32* %353, align 4
  %354 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %355 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %354, i32 0, i32 0
  %356 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %355, align 8
  %357 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %356, i32 0, i32 0
  %358 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %357, align 8
  %359 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %360 = bitcast %struct.jpeg_compress_struct.190* %359 to %struct.jpeg_common_struct*
  call void %358(%struct.jpeg_common_struct* %360)
  br label %361

361:                                              ; preds = %342, %337, %325
  %362 = load i32, i32* %9, align 4
  store i32 %362, i32* %7, align 4
  br label %363

363:                                              ; preds = %436, %361
  %364 = load i32, i32* %7, align 4
  %365 = load i32, i32* %10, align 4
  %366 = icmp sle i32 %364, %365
  br i1 %366, label %367, label %439

367:                                              ; preds = %363
  %368 = load i32*, i32** %14, align 8
  %369 = load i32, i32* %7, align 4
  %370 = sext i32 %369 to i64
  %371 = getelementptr inbounds i32, i32* %368, i64 %370
  %372 = load i32, i32* %371, align 4
  %373 = icmp slt i32 %372, 0
  br i1 %373, label %374, label %397

374:                                              ; preds = %367
  %375 = load i32, i32* %11, align 4
  %376 = icmp ne i32 %375, 0
  br i1 %376, label %377, label %396

377:                                              ; preds = %374
  %378 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %379 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %378, i32 0, i32 0
  %380 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %379, align 8
  %381 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %380, i32 0, i32 5
  store i32 15, i32* %381, align 8
  %382 = load i32, i32* %4, align 4
  %383 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %384 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %383, i32 0, i32 0
  %385 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %384, align 8
  %386 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %385, i32 0, i32 6
  %387 = bitcast %union.anon* %386 to [8 x i32]*
  %388 = getelementptr inbounds [8 x i32], [8 x i32]* %387, i64 0, i64 0
  store i32 %382, i32* %388, align 4
  %389 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %390 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %389, i32 0, i32 0
  %391 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %390, align 8
  %392 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %391, i32 0, i32 0
  %393 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %392, align 8
  %394 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %395 = bitcast %struct.jpeg_compress_struct.190* %394 to %struct.jpeg_common_struct*
  call void %393(%struct.jpeg_common_struct* %395)
  br label %396

396:                                              ; preds = %377, %374
  br label %430

397:                                              ; preds = %367
  %398 = load i32, i32* %11, align 4
  %399 = load i32*, i32** %14, align 8
  %400 = load i32, i32* %7, align 4
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds i32, i32* %399, i64 %401
  %403 = load i32, i32* %402, align 4
  %404 = icmp ne i32 %398, %403
  br i1 %404, label %410, label %405

405:                                              ; preds = %397
  %406 = load i32, i32* %12, align 4
  %407 = load i32, i32* %11, align 4
  %408 = sub nsw i32 %407, 1
  %409 = icmp ne i32 %406, %408
  br i1 %409, label %410, label %429

410:                                              ; preds = %405, %397
  %411 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %412 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %411, i32 0, i32 0
  %413 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %412, align 8
  %414 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %413, i32 0, i32 5
  store i32 15, i32* %414, align 8
  %415 = load i32, i32* %4, align 4
  %416 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %417 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %416, i32 0, i32 0
  %418 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %417, align 8
  %419 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %418, i32 0, i32 6
  %420 = bitcast %union.anon* %419 to [8 x i32]*
  %421 = getelementptr inbounds [8 x i32], [8 x i32]* %420, i64 0, i64 0
  store i32 %415, i32* %421, align 4
  %422 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %423 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %422, i32 0, i32 0
  %424 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %423, align 8
  %425 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %424, i32 0, i32 0
  %426 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %425, align 8
  %427 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %428 = bitcast %struct.jpeg_compress_struct.190* %427 to %struct.jpeg_common_struct*
  call void %426(%struct.jpeg_common_struct* %428)
  br label %429

429:                                              ; preds = %410, %405
  br label %430

430:                                              ; preds = %429, %396
  %431 = load i32, i32* %12, align 4
  %432 = load i32*, i32** %14, align 8
  %433 = load i32, i32* %7, align 4
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds i32, i32* %432, i64 %434
  store i32 %431, i32* %435, align 4
  br label %436

436:                                              ; preds = %430
  %437 = load i32, i32* %7, align 4
  %438 = add nsw i32 %437, 1
  store i32 %438, i32* %7, align 4
  br label %363

439:                                              ; preds = %363
  br label %440

440:                                              ; preds = %439
  %441 = load i32, i32* %6, align 4
  %442 = add nsw i32 %441, 1
  store i32 %442, i32* %6, align 4
  br label %321

443:                                              ; preds = %321
  br label %519

444:                                              ; preds = %210
  %445 = load i32, i32* %9, align 4
  %446 = icmp ne i32 %445, 0
  br i1 %446, label %456, label %447

447:                                              ; preds = %444
  %448 = load i32, i32* %10, align 4
  %449 = icmp ne i32 %448, 63
  br i1 %449, label %456, label %450

450:                                              ; preds = %447
  %451 = load i32, i32* %11, align 4
  %452 = icmp ne i32 %451, 0
  br i1 %452, label %456, label %453

453:                                              ; preds = %450
  %454 = load i32, i32* %12, align 4
  %455 = icmp ne i32 %454, 0
  br i1 %455, label %456, label %475

456:                                              ; preds = %453, %450, %447, %444
  %457 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %458 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %457, i32 0, i32 0
  %459 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %458, align 8
  %460 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %459, i32 0, i32 5
  store i32 15, i32* %460, align 8
  %461 = load i32, i32* %4, align 4
  %462 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %463 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %462, i32 0, i32 0
  %464 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %463, align 8
  %465 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %464, i32 0, i32 6
  %466 = bitcast %union.anon* %465 to [8 x i32]*
  %467 = getelementptr inbounds [8 x i32], [8 x i32]* %466, i64 0, i64 0
  store i32 %461, i32* %467, align 4
  %468 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %469 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %468, i32 0, i32 0
  %470 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %469, align 8
  %471 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %470, i32 0, i32 0
  %472 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %471, align 8
  %473 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %474 = bitcast %struct.jpeg_compress_struct.190* %473 to %struct.jpeg_common_struct*
  call void %472(%struct.jpeg_common_struct* %474)
  br label %475

475:                                              ; preds = %456, %453
  store i32 0, i32* %6, align 4
  br label %476

476:                                              ; preds = %515, %475
  %477 = load i32, i32* %6, align 4
  %478 = load i32, i32* %5, align 4
  %479 = icmp slt i32 %477, %478
  br i1 %479, label %480, label %518

480:                                              ; preds = %476
  %481 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %3, align 8
  %482 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %481, i32 0, i32 1
  %483 = load i32, i32* %6, align 4
  %484 = sext i32 %483 to i64
  %485 = getelementptr inbounds [4 x i32], [4 x i32]* %482, i64 0, i64 %484
  %486 = load i32, i32* %485, align 4
  store i32 %486, i32* %8, align 4
  %487 = load i32, i32* %8, align 4
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds [10 x i32], [10 x i32]* %13, i64 0, i64 %488
  %490 = load i32, i32* %489, align 4
  %491 = icmp ne i32 %490, 0
  br i1 %491, label %492, label %511

492:                                              ; preds = %480
  %493 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %494 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %493, i32 0, i32 0
  %495 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %494, align 8
  %496 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %495, i32 0, i32 5
  store i32 17, i32* %496, align 8
  %497 = load i32, i32* %4, align 4
  %498 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %499 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %498, i32 0, i32 0
  %500 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %499, align 8
  %501 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %500, i32 0, i32 6
  %502 = bitcast %union.anon* %501 to [8 x i32]*
  %503 = getelementptr inbounds [8 x i32], [8 x i32]* %502, i64 0, i64 0
  store i32 %497, i32* %503, align 4
  %504 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %505 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %504, i32 0, i32 0
  %506 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %505, align 8
  %507 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %506, i32 0, i32 0
  %508 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %507, align 8
  %509 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %510 = bitcast %struct.jpeg_compress_struct.190* %509 to %struct.jpeg_common_struct*
  call void %508(%struct.jpeg_common_struct* %510)
  br label %511

511:                                              ; preds = %492, %480
  %512 = load i32, i32* %8, align 4
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds [10 x i32], [10 x i32]* %13, i64 0, i64 %513
  store i32 1, i32* %514, align 4
  br label %515

515:                                              ; preds = %511
  %516 = load i32, i32* %6, align 4
  %517 = add nsw i32 %516, 1
  store i32 %517, i32* %6, align 4
  br label %476

518:                                              ; preds = %476
  br label %519

519:                                              ; preds = %518, %443
  br label %520

520:                                              ; preds = %519
  %521 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %3, align 8
  %522 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %521, i32 1
  store %struct.jpeg_scan_info* %522, %struct.jpeg_scan_info** %3, align 8
  %523 = load i32, i32* %4, align 4
  %524 = add nsw i32 %523, 1
  store i32 %524, i32* %4, align 4
  br label %95

525:                                              ; preds = %95
  %526 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %527 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %526, i32 0, i32 37
  %528 = load i32, i32* %527, align 4
  %529 = icmp ne i32 %528, 0
  br i1 %529, label %530, label %561

530:                                              ; preds = %525
  store i32 0, i32* %6, align 4
  br label %531

531:                                              ; preds = %557, %530
  %532 = load i32, i32* %6, align 4
  %533 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %534 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %533, i32 0, i32 12
  %535 = load i32, i32* %534, align 4
  %536 = icmp slt i32 %532, %535
  br i1 %536, label %537, label %560

537:                                              ; preds = %531
  %538 = load i32, i32* %6, align 4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %15, i64 0, i64 %539
  %541 = getelementptr inbounds [64 x i32], [64 x i32]* %540, i64 0, i64 0
  %542 = load i32, i32* %541, align 16
  %543 = icmp slt i32 %542, 0
  br i1 %543, label %544, label %556

544:                                              ; preds = %537
  %545 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %546 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %545, i32 0, i32 0
  %547 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %546, align 8
  %548 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %547, i32 0, i32 5
  store i32 44, i32* %548, align 8
  %549 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %550 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %549, i32 0, i32 0
  %551 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %550, align 8
  %552 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %551, i32 0, i32 0
  %553 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %552, align 8
  %554 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %555 = bitcast %struct.jpeg_compress_struct.190* %554 to %struct.jpeg_common_struct*
  call void %553(%struct.jpeg_common_struct* %555)
  br label %556

556:                                              ; preds = %544, %537
  br label %557

557:                                              ; preds = %556
  %558 = load i32, i32* %6, align 4
  %559 = add nsw i32 %558, 1
  store i32 %559, i32* %6, align 4
  br label %531

560:                                              ; preds = %531
  br label %591

561:                                              ; preds = %525
  store i32 0, i32* %6, align 4
  br label %562

562:                                              ; preds = %587, %561
  %563 = load i32, i32* %6, align 4
  %564 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %565 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %564, i32 0, i32 12
  %566 = load i32, i32* %565, align 4
  %567 = icmp slt i32 %563, %566
  br i1 %567, label %568, label %590

568:                                              ; preds = %562
  %569 = load i32, i32* %6, align 4
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds [10 x i32], [10 x i32]* %13, i64 0, i64 %570
  %572 = load i32, i32* %571, align 4
  %573 = icmp ne i32 %572, 0
  br i1 %573, label %586, label %574

574:                                              ; preds = %568
  %575 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %576 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %575, i32 0, i32 0
  %577 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %576, align 8
  %578 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %577, i32 0, i32 5
  store i32 44, i32* %578, align 8
  %579 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %580 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %579, i32 0, i32 0
  %581 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %580, align 8
  %582 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %581, i32 0, i32 0
  %583 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %582, align 8
  %584 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %585 = bitcast %struct.jpeg_compress_struct.190* %584 to %struct.jpeg_common_struct*
  call void %583(%struct.jpeg_common_struct* %585)
  br label %586

586:                                              ; preds = %574, %568
  br label %587

587:                                              ; preds = %586
  %588 = load i32, i32* %6, align 4
  %589 = add nsw i32 %588, 1
  store i32 %589, i32* %6, align 4
  br label %562

590:                                              ; preds = %562
  br label %591

591:                                              ; preds = %590, %560
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @select_scan_parameters(%struct.jpeg_compress_struct.190* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.190*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.my_comp_master*, align 8
  %5 = alloca %struct.jpeg_scan_info*, align 8
  store %struct.jpeg_compress_struct.190* %0, %struct.jpeg_compress_struct.190** %2, align 8
  %6 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %7 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %6, i32 0, i32 22
  %8 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  %9 = icmp ne %struct.jpeg_scan_info* %8, null
  br i1 %9, label %10, label %75

10:                                               ; preds = %1
  %11 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %12 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %11, i32 0, i32 51
  %13 = load %struct.jpeg_comp_master.199*, %struct.jpeg_comp_master.199** %12, align 8
  %14 = bitcast %struct.jpeg_comp_master.199* %13 to %struct.my_comp_master*
  store %struct.my_comp_master* %14, %struct.my_comp_master** %4, align 8
  %15 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %15, i32 0, i32 22
  %17 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %16, align 8
  %18 = load %struct.my_comp_master*, %struct.my_comp_master** %4, align 8
  %19 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %18, i32 0, i32 4
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %17, i64 %21
  store %struct.jpeg_scan_info* %22, %struct.jpeg_scan_info** %5, align 8
  %23 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %24 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %27 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %26, i32 0, i32 41
  store i32 %25, i32* %27, align 4
  store i32 0, i32* %3, align 4
  br label %28

28:                                               ; preds = %51, %10
  %29 = load i32, i32* %3, align 4
  %30 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %31 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %29, %32
  br i1 %33, label %34, label %54

34:                                               ; preds = %28
  %35 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %36 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %35, i32 0, i32 14
  %37 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %36, align 8
  %38 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %39 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %38, i32 0, i32 1
  %40 = load i32, i32* %3, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [4 x i32], [4 x i32]* %39, i64 0, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %37, i64 %44
  %46 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %47 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %46, i32 0, i32 42
  %48 = load i32, i32* %3, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %47, i64 0, i64 %49
  store %struct.jpeg_component_info* %45, %struct.jpeg_component_info** %50, align 8
  br label %51

51:                                               ; preds = %34
  %52 = load i32, i32* %3, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %3, align 4
  br label %28

54:                                               ; preds = %28
  %55 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %56 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %59 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %58, i32 0, i32 47
  store i32 %57, i32* %59, align 4
  %60 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %61 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %60, i32 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %64 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %63, i32 0, i32 48
  store i32 %62, i32* %64, align 8
  %65 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %66 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %65, i32 0, i32 4
  %67 = load i32, i32* %66, align 4
  %68 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %69 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %68, i32 0, i32 49
  store i32 %67, i32* %69, align 4
  %70 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %71 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %70, i32 0, i32 5
  %72 = load i32, i32* %71, align 4
  %73 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %74 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %73, i32 0, i32 50
  store i32 %72, i32* %74, align 8
  br label %143

75:                                               ; preds = %1
  %76 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %77 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %76, i32 0, i32 12
  %78 = load i32, i32* %77, align 4
  %79 = icmp sgt i32 %78, 4
  br i1 %79, label %80, label %107

80:                                               ; preds = %75
  %81 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %82 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %81, i32 0, i32 0
  %83 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %82, align 8
  %84 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %83, i32 0, i32 5
  store i32 24, i32* %84, align 8
  %85 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %86 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %85, i32 0, i32 12
  %87 = load i32, i32* %86, align 4
  %88 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %89 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %88, i32 0, i32 0
  %90 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %89, align 8
  %91 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %90, i32 0, i32 6
  %92 = bitcast %union.anon* %91 to [8 x i32]*
  %93 = getelementptr inbounds [8 x i32], [8 x i32]* %92, i64 0, i64 0
  store i32 %87, i32* %93, align 4
  %94 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %95 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %94, i32 0, i32 0
  %96 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %95, align 8
  %97 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %96, i32 0, i32 6
  %98 = bitcast %union.anon* %97 to [8 x i32]*
  %99 = getelementptr inbounds [8 x i32], [8 x i32]* %98, i64 0, i64 1
  store i32 4, i32* %99, align 4
  %100 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %101 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %100, i32 0, i32 0
  %102 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %101, align 8
  %103 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %102, i32 0, i32 0
  %104 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %103, align 8
  %105 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %106 = bitcast %struct.jpeg_compress_struct.190* %105 to %struct.jpeg_common_struct*
  call void %104(%struct.jpeg_common_struct* %106)
  br label %107

107:                                              ; preds = %80, %75
  %108 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %109 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %108, i32 0, i32 12
  %110 = load i32, i32* %109, align 4
  %111 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %112 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %111, i32 0, i32 41
  store i32 %110, i32* %112, align 4
  store i32 0, i32* %3, align 4
  br label %113

113:                                              ; preds = %131, %107
  %114 = load i32, i32* %3, align 4
  %115 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %116 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %115, i32 0, i32 12
  %117 = load i32, i32* %116, align 4
  %118 = icmp slt i32 %114, %117
  br i1 %118, label %119, label %134

119:                                              ; preds = %113
  %120 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %121 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %120, i32 0, i32 14
  %122 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %121, align 8
  %123 = load i32, i32* %3, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %122, i64 %124
  %126 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %127 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %126, i32 0, i32 42
  %128 = load i32, i32* %3, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %127, i64 0, i64 %129
  store %struct.jpeg_component_info* %125, %struct.jpeg_component_info** %130, align 8
  br label %131

131:                                              ; preds = %119
  %132 = load i32, i32* %3, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %3, align 4
  br label %113

134:                                              ; preds = %113
  %135 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %136 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %135, i32 0, i32 47
  store i32 0, i32* %136, align 4
  %137 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %138 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %137, i32 0, i32 48
  store i32 63, i32* %138, align 8
  %139 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %140 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %139, i32 0, i32 49
  store i32 0, i32* %140, align 4
  %141 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %142 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %141, i32 0, i32 50
  store i32 0, i32* %142, align 8
  br label %143

143:                                              ; preds = %134, %54
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @per_scan_setup(%struct.jpeg_compress_struct.190* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.190*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca i64, align 8
  store %struct.jpeg_compress_struct.190* %0, %struct.jpeg_compress_struct.190** %2, align 8
  %8 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %8, i32 0, i32 41
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %59

12:                                               ; preds = %1
  %13 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %13, i32 0, i32 42
  %15 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %14, i64 0, i64 0
  %16 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %15, align 8
  store %struct.jpeg_component_info* %16, %struct.jpeg_component_info** %6, align 8
  %17 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %18 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %17, i32 0, i32 7
  %19 = load i32, i32* %18, align 4
  %20 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %20, i32 0, i32 43
  store i32 %19, i32* %21, align 8
  %22 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %23 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %22, i32 0, i32 8
  %24 = load i32, i32* %23, align 8
  %25 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %25, i32 0, i32 44
  store i32 %24, i32* %26, align 4
  %27 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %27, i32 0, i32 13
  store i32 1, i32* %28, align 4
  %29 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %30 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %29, i32 0, i32 14
  store i32 1, i32* %30, align 8
  %31 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %32 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %31, i32 0, i32 15
  store i32 1, i32* %32, align 4
  %33 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %34 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i32 0, i32 16
  store i32 8, i32* %34, align 8
  %35 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %36 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %35, i32 0, i32 17
  store i32 1, i32* %36, align 4
  %37 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %38 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %37, i32 0, i32 8
  %39 = load i32, i32* %38, align 8
  %40 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %41 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %40, i32 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = urem i32 %39, %42
  store i32 %43, i32* %5, align 4
  %44 = load i32, i32* %5, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %12
  %47 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i32 0, i32 3
  %49 = load i32, i32* %48, align 4
  store i32 %49, i32* %5, align 4
  br label %50

50:                                               ; preds = %46, %12
  %51 = load i32, i32* %5, align 4
  %52 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %52, i32 0, i32 18
  store i32 %51, i32* %53, align 8
  %54 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %55 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %54, i32 0, i32 45
  store i32 1, i32* %55, align 8
  %56 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %57 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %56, i32 0, i32 46
  %58 = getelementptr inbounds [10 x i32], [10 x i32]* %57, i64 0, i64 0
  store i32 0, i32* %58, align 4
  br label %238

59:                                               ; preds = %1
  %60 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %61 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %60, i32 0, i32 41
  %62 = load i32, i32* %61, align 4
  %63 = icmp sle i32 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %59
  %65 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %66 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %65, i32 0, i32 41
  %67 = load i32, i32* %66, align 4
  %68 = icmp sgt i32 %67, 4
  br i1 %68, label %69, label %96

69:                                               ; preds = %64, %59
  %70 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %71 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %70, i32 0, i32 0
  %72 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %71, align 8
  %73 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %72, i32 0, i32 5
  store i32 24, i32* %73, align 8
  %74 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %75 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %74, i32 0, i32 41
  %76 = load i32, i32* %75, align 4
  %77 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %78 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %77, i32 0, i32 0
  %79 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %78, align 8
  %80 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %79, i32 0, i32 6
  %81 = bitcast %union.anon* %80 to [8 x i32]*
  %82 = getelementptr inbounds [8 x i32], [8 x i32]* %81, i64 0, i64 0
  store i32 %76, i32* %82, align 4
  %83 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %84 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %83, i32 0, i32 0
  %85 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %84, align 8
  %86 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %85, i32 0, i32 6
  %87 = bitcast %union.anon* %86 to [8 x i32]*
  %88 = getelementptr inbounds [8 x i32], [8 x i32]* %87, i64 0, i64 1
  store i32 4, i32* %88, align 4
  %89 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %90 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %89, i32 0, i32 0
  %91 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %90, align 8
  %92 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %91, i32 0, i32 0
  %93 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %92, align 8
  %94 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %95 = bitcast %struct.jpeg_compress_struct.190* %94 to %struct.jpeg_common_struct*
  call void %93(%struct.jpeg_common_struct* %95)
  br label %96

96:                                               ; preds = %69, %64
  %97 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %98 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %97, i32 0, i32 6
  %99 = load i32, i32* %98, align 8
  %100 = zext i32 %99 to i64
  %101 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %102 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %101, i32 0, i32 38
  %103 = load i32, i32* %102, align 8
  %104 = mul nsw i32 %103, 8
  %105 = sext i32 %104 to i64
  %106 = call i64 @jdiv_round_up(i64 %100, i64 %105)
  %107 = trunc i64 %106 to i32
  %108 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %109 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %108, i32 0, i32 43
  store i32 %107, i32* %109, align 8
  %110 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %111 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %110, i32 0, i32 7
  %112 = load i32, i32* %111, align 4
  %113 = zext i32 %112 to i64
  %114 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %115 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %114, i32 0, i32 39
  %116 = load i32, i32* %115, align 4
  %117 = mul nsw i32 %116, 8
  %118 = sext i32 %117 to i64
  %119 = call i64 @jdiv_round_up(i64 %113, i64 %118)
  %120 = trunc i64 %119 to i32
  %121 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %122 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %121, i32 0, i32 44
  store i32 %120, i32* %122, align 4
  %123 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %124 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %123, i32 0, i32 45
  store i32 0, i32* %124, align 8
  store i32 0, i32* %3, align 4
  br label %125

125:                                              ; preds = %234, %96
  %126 = load i32, i32* %3, align 4
  %127 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %128 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %127, i32 0, i32 41
  %129 = load i32, i32* %128, align 4
  %130 = icmp slt i32 %126, %129
  br i1 %130, label %131, label %237

131:                                              ; preds = %125
  %132 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %133 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %132, i32 0, i32 42
  %134 = load i32, i32* %3, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %133, i64 0, i64 %135
  %137 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %136, align 8
  store %struct.jpeg_component_info* %137, %struct.jpeg_component_info** %6, align 8
  %138 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %139 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %138, i32 0, i32 2
  %140 = load i32, i32* %139, align 8
  %141 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %142 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %141, i32 0, i32 13
  store i32 %140, i32* %142, align 4
  %143 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %144 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %143, i32 0, i32 3
  %145 = load i32, i32* %144, align 4
  %146 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %147 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %146, i32 0, i32 14
  store i32 %145, i32* %147, align 8
  %148 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %149 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %148, i32 0, i32 13
  %150 = load i32, i32* %149, align 4
  %151 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %152 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %151, i32 0, i32 14
  %153 = load i32, i32* %152, align 8
  %154 = mul nsw i32 %150, %153
  %155 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %156 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %155, i32 0, i32 15
  store i32 %154, i32* %156, align 4
  %157 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %158 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %157, i32 0, i32 13
  %159 = load i32, i32* %158, align 4
  %160 = mul nsw i32 %159, 8
  %161 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %162 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %161, i32 0, i32 16
  store i32 %160, i32* %162, align 8
  %163 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %164 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %163, i32 0, i32 7
  %165 = load i32, i32* %164, align 4
  %166 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %167 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %166, i32 0, i32 13
  %168 = load i32, i32* %167, align 4
  %169 = urem i32 %165, %168
  store i32 %169, i32* %5, align 4
  %170 = load i32, i32* %5, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %176

172:                                              ; preds = %131
  %173 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %174 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %173, i32 0, i32 13
  %175 = load i32, i32* %174, align 4
  store i32 %175, i32* %5, align 4
  br label %176

176:                                              ; preds = %172, %131
  %177 = load i32, i32* %5, align 4
  %178 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %179 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %178, i32 0, i32 17
  store i32 %177, i32* %179, align 4
  %180 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %181 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %180, i32 0, i32 8
  %182 = load i32, i32* %181, align 8
  %183 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %184 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %183, i32 0, i32 14
  %185 = load i32, i32* %184, align 8
  %186 = urem i32 %182, %185
  store i32 %186, i32* %5, align 4
  %187 = load i32, i32* %5, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %193

189:                                              ; preds = %176
  %190 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %191 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %190, i32 0, i32 14
  %192 = load i32, i32* %191, align 8
  store i32 %192, i32* %5, align 4
  br label %193

193:                                              ; preds = %189, %176
  %194 = load i32, i32* %5, align 4
  %195 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %196 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %195, i32 0, i32 18
  store i32 %194, i32* %196, align 8
  %197 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %198 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %197, i32 0, i32 15
  %199 = load i32, i32* %198, align 4
  store i32 %199, i32* %4, align 4
  %200 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %201 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %200, i32 0, i32 45
  %202 = load i32, i32* %201, align 8
  %203 = load i32, i32* %4, align 4
  %204 = add nsw i32 %202, %203
  %205 = icmp sgt i32 %204, 10
  br i1 %205, label %206, label %218

206:                                              ; preds = %193
  %207 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %208 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %207, i32 0, i32 0
  %209 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %208, align 8
  %210 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %209, i32 0, i32 5
  store i32 11, i32* %210, align 8
  %211 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %212 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %211, i32 0, i32 0
  %213 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %212, align 8
  %214 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %213, i32 0, i32 0
  %215 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %214, align 8
  %216 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %217 = bitcast %struct.jpeg_compress_struct.190* %216 to %struct.jpeg_common_struct*
  call void %215(%struct.jpeg_common_struct* %217)
  br label %218

218:                                              ; preds = %206, %193
  br label %219

219:                                              ; preds = %223, %218
  %220 = load i32, i32* %4, align 4
  %221 = add nsw i32 %220, -1
  store i32 %221, i32* %4, align 4
  %222 = icmp sgt i32 %220, 0
  br i1 %222, label %223, label %233

223:                                              ; preds = %219
  %224 = load i32, i32* %3, align 4
  %225 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %226 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %225, i32 0, i32 46
  %227 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %228 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %227, i32 0, i32 45
  %229 = load i32, i32* %228, align 8
  %230 = add nsw i32 %229, 1
  store i32 %230, i32* %228, align 8
  %231 = sext i32 %229 to i64
  %232 = getelementptr inbounds [10 x i32], [10 x i32]* %226, i64 0, i64 %231
  store i32 %224, i32* %232, align 4
  br label %219

233:                                              ; preds = %219
  br label %234

234:                                              ; preds = %233
  %235 = load i32, i32* %3, align 4
  %236 = add nsw i32 %235, 1
  store i32 %236, i32* %3, align 4
  br label %125

237:                                              ; preds = %125
  br label %238

238:                                              ; preds = %237, %50
  %239 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %240 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %239, i32 0, i32 30
  %241 = load i32, i32* %240, align 4
  %242 = icmp sgt i32 %241, 0
  br i1 %242, label %243, label %263

243:                                              ; preds = %238
  %244 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %245 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %244, i32 0, i32 30
  %246 = load i32, i32* %245, align 4
  %247 = sext i32 %246 to i64
  %248 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %249 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %248, i32 0, i32 43
  %250 = load i32, i32* %249, align 8
  %251 = zext i32 %250 to i64
  %252 = mul nsw i64 %247, %251
  store i64 %252, i64* %7, align 8
  %253 = load i64, i64* %7, align 8
  %254 = icmp slt i64 %253, 65535
  br i1 %254, label %255, label %257

255:                                              ; preds = %243
  %256 = load i64, i64* %7, align 8
  br label %258

257:                                              ; preds = %243
  br label %258

258:                                              ; preds = %257, %255
  %259 = phi i64 [ %256, %255 ], [ 65535, %257 ]
  %260 = trunc i64 %259 to i32
  %261 = load %struct.jpeg_compress_struct.190*, %struct.jpeg_compress_struct.190** %2, align 8
  %262 = getelementptr inbounds %struct.jpeg_compress_struct.190, %struct.jpeg_compress_struct.190* %261, i32 0, i32 29
  store i32 %260, i32* %262, align 8
  br label %263

263:                                              ; preds = %258, %238
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_abort(%struct.jpeg_common_struct.212* %0) #0 {
  %2 = alloca %struct.jpeg_common_struct.212*, align 8
  %3 = alloca i32, align 4
  store %struct.jpeg_common_struct.212* %0, %struct.jpeg_common_struct.212** %2, align 8
  store i32 1, i32* %3, align 4
  br label %4

4:                                                ; preds = %15, %1
  %5 = load i32, i32* %3, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %18

7:                                                ; preds = %4
  %8 = load %struct.jpeg_common_struct.212*, %struct.jpeg_common_struct.212** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_common_struct.212, %struct.jpeg_common_struct.212* %8, i32 0, i32 1
  %10 = load %struct.jpeg_memory_mgr.214*, %struct.jpeg_memory_mgr.214** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_memory_mgr.214, %struct.jpeg_memory_mgr.214* %10, i32 0, i32 9
  %12 = load void (%struct.jpeg_common_struct.212*, i32)*, void (%struct.jpeg_common_struct.212*, i32)** %11, align 8
  %13 = load %struct.jpeg_common_struct.212*, %struct.jpeg_common_struct.212** %2, align 8
  %14 = load i32, i32* %3, align 4
  call void %12(%struct.jpeg_common_struct.212* %13, i32 %14)
  br label %15

15:                                               ; preds = %7
  %16 = load i32, i32* %3, align 4
  %17 = add nsw i32 %16, -1
  store i32 %17, i32* %3, align 4
  br label %4

18:                                               ; preds = %4
  %19 = load %struct.jpeg_common_struct.212*, %struct.jpeg_common_struct.212** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_common_struct.212, %struct.jpeg_common_struct.212* %19, i32 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = icmp ne i32 %21, 0
  %23 = zext i1 %22 to i64
  %24 = select i1 %22, i32 200, i32 100
  %25 = load %struct.jpeg_common_struct.212*, %struct.jpeg_common_struct.212** %2, align 8
  %26 = getelementptr inbounds %struct.jpeg_common_struct.212, %struct.jpeg_common_struct.212* %25, i32 0, i32 4
  store i32 %24, i32* %26, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_destroy(%struct.jpeg_common_struct.212* %0) #0 {
  %2 = alloca %struct.jpeg_common_struct.212*, align 8
  store %struct.jpeg_common_struct.212* %0, %struct.jpeg_common_struct.212** %2, align 8
  %3 = load %struct.jpeg_common_struct.212*, %struct.jpeg_common_struct.212** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_common_struct.212, %struct.jpeg_common_struct.212* %3, i32 0, i32 1
  %5 = load %struct.jpeg_memory_mgr.214*, %struct.jpeg_memory_mgr.214** %4, align 8
  %6 = icmp ne %struct.jpeg_memory_mgr.214* %5, null
  br i1 %6, label %7, label %15

7:                                                ; preds = %1
  %8 = load %struct.jpeg_common_struct.212*, %struct.jpeg_common_struct.212** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_common_struct.212, %struct.jpeg_common_struct.212* %8, i32 0, i32 1
  %10 = load %struct.jpeg_memory_mgr.214*, %struct.jpeg_memory_mgr.214** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_memory_mgr.214, %struct.jpeg_memory_mgr.214* %10, i32 0, i32 10
  %12 = bitcast {}** %11 to void (%struct.jpeg_common_struct.212*)**
  %13 = load void (%struct.jpeg_common_struct.212*)*, void (%struct.jpeg_common_struct.212*)** %12, align 8
  %14 = load %struct.jpeg_common_struct.212*, %struct.jpeg_common_struct.212** %2, align 8
  call void %13(%struct.jpeg_common_struct.212* %14)
  br label %15

15:                                               ; preds = %7, %1
  %16 = load %struct.jpeg_common_struct.212*, %struct.jpeg_common_struct.212** %2, align 8
  %17 = getelementptr inbounds %struct.jpeg_common_struct.212, %struct.jpeg_common_struct.212* %16, i32 0, i32 1
  store %struct.jpeg_memory_mgr.214* null, %struct.jpeg_memory_mgr.214** %17, align 8
  %18 = load %struct.jpeg_common_struct.212*, %struct.jpeg_common_struct.212** %2, align 8
  %19 = getelementptr inbounds %struct.jpeg_common_struct.212, %struct.jpeg_common_struct.212* %18, i32 0, i32 4
  store i32 0, i32* %19, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct.212* %0) #0 {
  %2 = alloca %struct.jpeg_common_struct.212*, align 8
  %3 = alloca %struct.JQUANT_TBL*, align 8
  store %struct.jpeg_common_struct.212* %0, %struct.jpeg_common_struct.212** %2, align 8
  %4 = load %struct.jpeg_common_struct.212*, %struct.jpeg_common_struct.212** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_common_struct.212, %struct.jpeg_common_struct.212* %4, i32 0, i32 1
  %6 = load %struct.jpeg_memory_mgr.214*, %struct.jpeg_memory_mgr.214** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_memory_mgr.214, %struct.jpeg_memory_mgr.214* %6, i32 0, i32 0
  %8 = load i8* (%struct.jpeg_common_struct.212*, i32, i64)*, i8* (%struct.jpeg_common_struct.212*, i32, i64)** %7, align 8
  %9 = load %struct.jpeg_common_struct.212*, %struct.jpeg_common_struct.212** %2, align 8
  %10 = call i8* %8(%struct.jpeg_common_struct.212* %9, i32 0, i64 132)
  %11 = bitcast i8* %10 to %struct.JQUANT_TBL*
  store %struct.JQUANT_TBL* %11, %struct.JQUANT_TBL** %3, align 8
  %12 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %3, align 8
  %13 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %12, i32 0, i32 1
  store i32 0, i32* %13, align 4
  %14 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %3, align 8
  ret %struct.JQUANT_TBL* %14
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct.212* %0) #0 {
  %2 = alloca %struct.jpeg_common_struct.212*, align 8
  %3 = alloca %struct.JHUFF_TBL*, align 8
  store %struct.jpeg_common_struct.212* %0, %struct.jpeg_common_struct.212** %2, align 8
  %4 = load %struct.jpeg_common_struct.212*, %struct.jpeg_common_struct.212** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_common_struct.212, %struct.jpeg_common_struct.212* %4, i32 0, i32 1
  %6 = load %struct.jpeg_memory_mgr.214*, %struct.jpeg_memory_mgr.214** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_memory_mgr.214, %struct.jpeg_memory_mgr.214* %6, i32 0, i32 0
  %8 = load i8* (%struct.jpeg_common_struct.212*, i32, i64)*, i8* (%struct.jpeg_common_struct.212*, i32, i64)** %7, align 8
  %9 = load %struct.jpeg_common_struct.212*, %struct.jpeg_common_struct.212** %2, align 8
  %10 = call i8* %8(%struct.jpeg_common_struct.212* %9, i32 0, i64 280)
  %11 = bitcast i8* %10 to %struct.JHUFF_TBL*
  store %struct.JHUFF_TBL* %11, %struct.JHUFF_TBL** %3, align 8
  %12 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %3, align 8
  %13 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %12, i32 0, i32 2
  store i32 0, i32* %13, align 4
  %14 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %3, align 8
  ret %struct.JHUFF_TBL* %14
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_add_quant_table(%struct.jpeg_compress_struct* %0, i32 %1, i32* %2, i32 %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_compress_struct*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.JQUANT_TBL**, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32* %2, i32** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %14 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %6, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %14, i32 0, i32 15
  %16 = load i32, i32* %7, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %15, i64 0, i64 %17
  store %struct.JQUANT_TBL** %18, %struct.JQUANT_TBL*** %11, align 8
  %19 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %6, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %19, i32 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %21, 100
  br i1 %22, label %23, label %44

23:                                               ; preds = %5
  %24 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %6, align 8
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %24, i32 0, i32 0
  %26 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i32 0, i32 5
  store i32 18, i32* %27, align 8
  %28 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %6, align 8
  %29 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %28, i32 0, i32 4
  %30 = load i32, i32* %29, align 4
  %31 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %6, align 8
  %32 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %31, i32 0, i32 0
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i32 0, i32 6
  %35 = bitcast %union.anon* %34 to [8 x i32]*
  %36 = getelementptr inbounds [8 x i32], [8 x i32]* %35, i64 0, i64 0
  store i32 %30, i32* %36, align 4
  %37 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %6, align 8
  %38 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %37, i32 0, i32 0
  %39 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %38, align 8
  %40 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i32 0, i32 0
  %41 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %40, align 8
  %42 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %6, align 8
  %43 = bitcast %struct.jpeg_compress_struct* %42 to %struct.jpeg_common_struct*
  call void %41(%struct.jpeg_common_struct* %43)
  br label %44

44:                                               ; preds = %23, %5
  %45 = load %struct.JQUANT_TBL**, %struct.JQUANT_TBL*** %11, align 8
  %46 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %45, align 8
  %47 = icmp eq %struct.JQUANT_TBL* %46, null
  br i1 %47, label %48, label %53

48:                                               ; preds = %44
  %49 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %6, align 8
  %50 = bitcast %struct.jpeg_compress_struct* %49 to %struct.jpeg_common_struct*
  %51 = call %struct.JQUANT_TBL* bitcast (%struct.JQUANT_TBL* (%struct.jpeg_common_struct.212*)* @jpeg_alloc_quant_table to %struct.JQUANT_TBL* (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %50)
  %52 = load %struct.JQUANT_TBL**, %struct.JQUANT_TBL*** %11, align 8
  store %struct.JQUANT_TBL* %51, %struct.JQUANT_TBL** %52, align 8
  br label %53

53:                                               ; preds = %48, %44
  store i32 0, i32* %12, align 4
  br label %54

54:                                               ; preds = %92, %53
  %55 = load i32, i32* %12, align 4
  %56 = icmp slt i32 %55, 64
  br i1 %56, label %57, label %95

57:                                               ; preds = %54
  %58 = load i32*, i32** %8, align 8
  %59 = load i32, i32* %12, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %58, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i64
  %64 = load i32, i32* %9, align 4
  %65 = sext i32 %64 to i64
  %66 = mul nsw i64 %63, %65
  %67 = add nsw i64 %66, 50
  %68 = sdiv i64 %67, 100
  store i64 %68, i64* %13, align 8
  %69 = load i64, i64* %13, align 8
  %70 = icmp sle i64 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %57
  store i64 1, i64* %13, align 8
  br label %72

72:                                               ; preds = %71, %57
  %73 = load i64, i64* %13, align 8
  %74 = icmp sgt i64 %73, 32767
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  store i64 32767, i64* %13, align 8
  br label %76

76:                                               ; preds = %75, %72
  %77 = load i32, i32* %10, align 4
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %76
  %80 = load i64, i64* %13, align 8
  %81 = icmp sgt i64 %80, 255
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  store i64 255, i64* %13, align 8
  br label %83

83:                                               ; preds = %82, %79, %76
  %84 = load i64, i64* %13, align 8
  %85 = trunc i64 %84 to i16
  %86 = load %struct.JQUANT_TBL**, %struct.JQUANT_TBL*** %11, align 8
  %87 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %86, align 8
  %88 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %87, i32 0, i32 0
  %89 = load i32, i32* %12, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [64 x i16], [64 x i16]* %88, i64 0, i64 %90
  store i16 %85, i16* %91, align 2
  br label %92

92:                                               ; preds = %83
  %93 = load i32, i32* %12, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %12, align 4
  br label %54

95:                                               ; preds = %54
  %96 = load %struct.JQUANT_TBL**, %struct.JQUANT_TBL*** %11, align 8
  %97 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %96, align 8
  %98 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %97, i32 0, i32 1
  store i32 0, i32* %98, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_set_linear_quality(%struct.jpeg_compress_struct* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_compress_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %8 = load i32, i32* %5, align 4
  %9 = load i32, i32* %6, align 4
  call void @jpeg_add_quant_table(%struct.jpeg_compress_struct* %7, i32 0, i32* getelementptr inbounds ([64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_luminance_quant_tbl, i64 0, i64 0), i32 %8, i32 %9)
  %10 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %11 = load i32, i32* %5, align 4
  %12 = load i32, i32* %6, align 4
  call void @jpeg_add_quant_table(%struct.jpeg_compress_struct* %10, i32 1, i32* getelementptr inbounds ([64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_chrominance_quant_tbl, i64 0, i64 0), i32 %11, i32 %12)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @jpeg_quality_scaling(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp sle i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4
  br label %6

6:                                                ; preds = %5, %1
  %7 = load i32, i32* %2, align 4
  %8 = icmp sgt i32 %7, 100
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  store i32 100, i32* %2, align 4
  br label %10

10:                                               ; preds = %9, %6
  %11 = load i32, i32* %2, align 4
  %12 = icmp slt i32 %11, 50
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = load i32, i32* %2, align 4
  %15 = sdiv i32 5000, %14
  store i32 %15, i32* %2, align 4
  br label %20

16:                                               ; preds = %10
  %17 = load i32, i32* %2, align 4
  %18 = mul nsw i32 %17, 2
  %19 = sub nsw i32 200, %18
  store i32 %19, i32* %2, align 4
  br label %20

20:                                               ; preds = %16, %13
  %21 = load i32, i32* %2, align 4
  ret i32 %21
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_set_quality(%struct.jpeg_compress_struct* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_compress_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load i32, i32* %5, align 4
  %8 = call i32 @jpeg_quality_scaling(i32 %7)
  store i32 %8, i32* %5, align 4
  %9 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %10 = load i32, i32* %5, align 4
  %11 = load i32, i32* %6, align 4
  call void @jpeg_set_linear_quality(%struct.jpeg_compress_struct* %9, i32 %10, i32 %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_set_defaults(%struct.jpeg_compress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct*, align 8
  %3 = alloca i32, align 4
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %2, align 8
  %4 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp ne i32 %6, 100
  br i1 %7, label %8, label %29

8:                                                ; preds = %1
  %9 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %9, i32 0, i32 0
  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %10, align 8
  %12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i32 0, i32 5
  store i32 18, i32* %12, align 8
  %13 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %13, i32 0, i32 4
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %16, i32 0, i32 0
  %18 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %17, align 8
  %19 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %18, i32 0, i32 6
  %20 = bitcast %union.anon* %19 to [8 x i32]*
  %21 = getelementptr inbounds [8 x i32], [8 x i32]* %20, i64 0, i64 0
  store i32 %15, i32* %21, align 4
  %22 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %22, i32 0, i32 0
  %24 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %25 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %24, i32 0, i32 0
  %26 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %25, align 8
  %27 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %28 = bitcast %struct.jpeg_compress_struct* %27 to %struct.jpeg_common_struct*
  call void %26(%struct.jpeg_common_struct* %28)
  br label %29

29:                                               ; preds = %8, %1
  %30 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %31 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %30, i32 0, i32 14
  %32 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %31, align 8
  %33 = icmp eq %struct.jpeg_component_info* %32, null
  br i1 %33, label %34, label %46

34:                                               ; preds = %29
  %35 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %36 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %35, i32 0, i32 1
  %37 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %37, i32 0, i32 0
  %39 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %38, align 8
  %40 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %41 = bitcast %struct.jpeg_compress_struct* %40 to %struct.jpeg_common_struct*
  %42 = call i8* %39(%struct.jpeg_common_struct* %41, i32 0, i64 960)
  %43 = bitcast i8* %42 to %struct.jpeg_component_info*
  %44 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %45 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %44, i32 0, i32 14
  store %struct.jpeg_component_info* %43, %struct.jpeg_component_info** %45, align 8
  br label %46

46:                                               ; preds = %34, %29
  %47 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %48 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %47, i32 0, i32 11
  store i32 8, i32* %48, align 8
  %49 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void @jpeg_set_quality(%struct.jpeg_compress_struct* %49, i32 75, i32 1)
  %50 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void @std_huff_tables(%struct.jpeg_compress_struct* %50)
  store i32 0, i32* %3, align 4
  br label %51

51:                                               ; preds = %70, %46
  %52 = load i32, i32* %3, align 4
  %53 = icmp slt i32 %52, 16
  br i1 %53, label %54, label %73

54:                                               ; preds = %51
  %55 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %56 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %55, i32 0, i32 18
  %57 = load i32, i32* %3, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [16 x i8], [16 x i8]* %56, i64 0, i64 %58
  store i8 0, i8* %59, align 1
  %60 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %61 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %60, i32 0, i32 19
  %62 = load i32, i32* %3, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [16 x i8], [16 x i8]* %61, i64 0, i64 %63
  store i8 1, i8* %64, align 1
  %65 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %66 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %65, i32 0, i32 20
  %67 = load i32, i32* %3, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [16 x i8], [16 x i8]* %66, i64 0, i64 %68
  store i8 5, i8* %69, align 1
  br label %70

70:                                               ; preds = %54
  %71 = load i32, i32* %3, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %3, align 4
  br label %51

73:                                               ; preds = %51
  %74 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %75 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %74, i32 0, i32 22
  store %struct.jpeg_scan_info* null, %struct.jpeg_scan_info** %75, align 8
  %76 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %77 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %76, i32 0, i32 21
  store i32 0, i32* %77, align 8
  %78 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %79 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %78, i32 0, i32 23
  store i32 0, i32* %79, align 8
  %80 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %81 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %80, i32 0, i32 24
  store i32 0, i32* %81, align 4
  %82 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %83 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %82, i32 0, i32 25
  store i32 0, i32* %83, align 8
  %84 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %85 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %84, i32 0, i32 11
  %86 = load i32, i32* %85, align 8
  %87 = icmp sgt i32 %86, 8
  br i1 %87, label %88, label %91

88:                                               ; preds = %73
  %89 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %90 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %89, i32 0, i32 25
  store i32 1, i32* %90, align 8
  br label %91

91:                                               ; preds = %88, %73
  %92 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %93 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %92, i32 0, i32 26
  store i32 0, i32* %93, align 4
  %94 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %95 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %94, i32 0, i32 27
  store i32 0, i32* %95, align 8
  %96 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %97 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %96, i32 0, i32 28
  store i32 0, i32* %97, align 4
  %98 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %99 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %98, i32 0, i32 29
  store i32 0, i32* %99, align 8
  %100 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %101 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %100, i32 0, i32 30
  store i32 0, i32* %101, align 4
  %102 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %103 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %102, i32 0, i32 32
  store i8 0, i8* %103, align 4
  %104 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %105 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %104, i32 0, i32 33
  store i16 1, i16* %105, align 2
  %106 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %107 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %106, i32 0, i32 34
  store i16 1, i16* %107, align 8
  %108 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void @jpeg_default_colorspace(%struct.jpeg_compress_struct* %108)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @std_huff_tables(%struct.jpeg_compress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %2, align 8
  %3 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %4 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %4, i32 0, i32 16
  %6 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %5, i64 0, i64 0
  call void @add_huff_table(%struct.jpeg_compress_struct* %3, %struct.JHUFF_TBL** %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @std_huff_tables.bits_dc_luminance, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @std_huff_tables.val_dc_luminance, i64 0, i64 0))
  %7 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %8 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %8, i32 0, i32 17
  %10 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %9, i64 0, i64 0
  call void @add_huff_table(%struct.jpeg_compress_struct* %7, %struct.JHUFF_TBL** %10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @std_huff_tables.bits_ac_luminance, i64 0, i64 0), i8* getelementptr inbounds ([162 x i8], [162 x i8]* @std_huff_tables.val_ac_luminance, i64 0, i64 0))
  %11 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %12 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %12, i32 0, i32 16
  %14 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %13, i64 0, i64 1
  call void @add_huff_table(%struct.jpeg_compress_struct* %11, %struct.JHUFF_TBL** %14, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @std_huff_tables.bits_dc_chrominance, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @std_huff_tables.val_dc_chrominance, i64 0, i64 0))
  %15 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %16 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %16, i32 0, i32 17
  %18 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %17, i64 0, i64 1
  call void @add_huff_table(%struct.jpeg_compress_struct* %15, %struct.JHUFF_TBL** %18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @std_huff_tables.bits_ac_chrominance, i64 0, i64 0), i8* getelementptr inbounds ([162 x i8], [162 x i8]* @std_huff_tables.val_ac_chrominance, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_default_colorspace(%struct.jpeg_compress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %2, align 8
  %3 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %3, i32 0, i32 9
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %18 [
    i32 1, label %6
    i32 2, label %8
    i32 3, label %10
    i32 4, label %12
    i32 5, label %14
    i32 0, label %16
  ]

6:                                                ; preds = %1
  %7 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void @jpeg_set_colorspace(%struct.jpeg_compress_struct* %7, i32 1)
  br label %30

8:                                                ; preds = %1
  %9 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void @jpeg_set_colorspace(%struct.jpeg_compress_struct* %9, i32 3)
  br label %30

10:                                               ; preds = %1
  %11 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void @jpeg_set_colorspace(%struct.jpeg_compress_struct* %11, i32 3)
  br label %30

12:                                               ; preds = %1
  %13 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void @jpeg_set_colorspace(%struct.jpeg_compress_struct* %13, i32 4)
  br label %30

14:                                               ; preds = %1
  %15 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void @jpeg_set_colorspace(%struct.jpeg_compress_struct* %15, i32 5)
  br label %30

16:                                               ; preds = %1
  %17 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  call void @jpeg_set_colorspace(%struct.jpeg_compress_struct* %17, i32 0)
  br label %30

18:                                               ; preds = %1
  %19 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %19, i32 0, i32 0
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i32 0, i32 5
  store i32 7, i32* %22, align 8
  %23 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %23, i32 0, i32 0
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i32 0, i32 0
  %27 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %26, align 8
  %28 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %29 = bitcast %struct.jpeg_compress_struct* %28 to %struct.jpeg_common_struct*
  call void %27(%struct.jpeg_common_struct* %29)
  br label %30

30:                                               ; preds = %18, %16, %14, %12, %10, %8, %6
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_set_colorspace(%struct.jpeg_compress_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.jpeg_component_info*, align 8
  %6 = alloca i32, align 4
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %7, i32 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = icmp ne i32 %9, 100
  br i1 %10, label %11, label %32

11:                                               ; preds = %2
  %12 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %12, i32 0, i32 0
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %13, align 8
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i32 0, i32 5
  store i32 18, i32* %15, align 8
  %16 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %16, i32 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %19, i32 0, i32 0
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i32 0, i32 6
  %23 = bitcast %union.anon* %22 to [8 x i32]*
  %24 = getelementptr inbounds [8 x i32], [8 x i32]* %23, i64 0, i64 0
  store i32 %18, i32* %24, align 4
  %25 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %25, i32 0, i32 0
  %27 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %26, align 8
  %28 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %27, i32 0, i32 0
  %29 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %28, align 8
  %30 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %31 = bitcast %struct.jpeg_compress_struct* %30 to %struct.jpeg_common_struct*
  call void %29(%struct.jpeg_common_struct* %31)
  br label %32

32:                                               ; preds = %11, %2
  %33 = load i32, i32* %4, align 4
  %34 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %34, i32 0, i32 13
  store i32 %33, i32* %35, align 8
  %36 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %37 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %36, i32 0, i32 31
  store i32 0, i32* %37, align 8
  %38 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %39 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %38, i32 0, i32 35
  store i32 0, i32* %39, align 4
  %40 = load i32, i32* %4, align 4
  switch i32 %40, label %379 [
    i32 1, label %41
    i32 2, label %62
    i32 3, label %115
    i32 4, label %168
    i32 5, label %237
    i32 0, label %306
  ]

41:                                               ; preds = %32
  %42 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %42, i32 0, i32 31
  store i32 1, i32* %43, align 8
  %44 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %45 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %44, i32 0, i32 12
  store i32 1, i32* %45, align 4
  %46 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %47 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %46, i32 0, i32 14
  %48 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %47, align 8
  %49 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %48, i64 0
  store %struct.jpeg_component_info* %49, %struct.jpeg_component_info** %5, align 8
  %50 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %51 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %50, i32 0, i32 0
  store i32 1, i32* %51, align 8
  %52 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %52, i32 0, i32 2
  store i32 1, i32* %53, align 8
  %54 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %55 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %54, i32 0, i32 3
  store i32 1, i32* %55, align 4
  %56 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i32 0, i32 4
  store i32 0, i32* %57, align 8
  %58 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %59 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %58, i32 0, i32 5
  store i32 0, i32* %59, align 4
  %60 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %61 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %60, i32 0, i32 6
  store i32 0, i32* %61, align 8
  br label %391

62:                                               ; preds = %32
  %63 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %64 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %63, i32 0, i32 35
  store i32 1, i32* %64, align 4
  %65 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %66 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %65, i32 0, i32 12
  store i32 3, i32* %66, align 4
  %67 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %68 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %67, i32 0, i32 14
  %69 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %68, align 8
  %70 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %69, i64 0
  store %struct.jpeg_component_info* %70, %struct.jpeg_component_info** %5, align 8
  %71 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %71, i32 0, i32 0
  store i32 82, i32* %72, align 8
  %73 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i32 0, i32 2
  store i32 1, i32* %74, align 8
  %75 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %76 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %75, i32 0, i32 3
  store i32 1, i32* %76, align 4
  %77 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %78 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %77, i32 0, i32 4
  store i32 0, i32* %78, align 8
  %79 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %80 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %79, i32 0, i32 5
  store i32 0, i32* %80, align 4
  %81 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %82 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %81, i32 0, i32 6
  store i32 0, i32* %82, align 8
  %83 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %84 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %83, i32 0, i32 14
  %85 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %84, align 8
  %86 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %85, i64 1
  store %struct.jpeg_component_info* %86, %struct.jpeg_component_info** %5, align 8
  %87 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %88 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %87, i32 0, i32 0
  store i32 71, i32* %88, align 8
  %89 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %90 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %89, i32 0, i32 2
  store i32 1, i32* %90, align 8
  %91 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %92 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %91, i32 0, i32 3
  store i32 1, i32* %92, align 4
  %93 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %94 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %93, i32 0, i32 4
  store i32 0, i32* %94, align 8
  %95 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %96 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %95, i32 0, i32 5
  store i32 0, i32* %96, align 4
  %97 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %98 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %97, i32 0, i32 6
  store i32 0, i32* %98, align 8
  %99 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %100 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %99, i32 0, i32 14
  %101 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %100, align 8
  %102 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %101, i64 2
  store %struct.jpeg_component_info* %102, %struct.jpeg_component_info** %5, align 8
  %103 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %104 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %103, i32 0, i32 0
  store i32 66, i32* %104, align 8
  %105 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %106 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %105, i32 0, i32 2
  store i32 1, i32* %106, align 8
  %107 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %108 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %107, i32 0, i32 3
  store i32 1, i32* %108, align 4
  %109 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %110 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %109, i32 0, i32 4
  store i32 0, i32* %110, align 8
  %111 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %112 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i32 0, i32 5
  store i32 0, i32* %112, align 4
  %113 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %114 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %113, i32 0, i32 6
  store i32 0, i32* %114, align 8
  br label %391

115:                                              ; preds = %32
  %116 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %117 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %116, i32 0, i32 31
  store i32 1, i32* %117, align 8
  %118 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %119 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %118, i32 0, i32 12
  store i32 3, i32* %119, align 4
  %120 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %121 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %120, i32 0, i32 14
  %122 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %121, align 8
  %123 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %122, i64 0
  store %struct.jpeg_component_info* %123, %struct.jpeg_component_info** %5, align 8
  %124 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %125 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %124, i32 0, i32 0
  store i32 1, i32* %125, align 8
  %126 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %127 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %126, i32 0, i32 2
  store i32 2, i32* %127, align 8
  %128 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %129 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %128, i32 0, i32 3
  store i32 2, i32* %129, align 4
  %130 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %131 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %130, i32 0, i32 4
  store i32 0, i32* %131, align 8
  %132 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %133 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %132, i32 0, i32 5
  store i32 0, i32* %133, align 4
  %134 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %135 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %134, i32 0, i32 6
  store i32 0, i32* %135, align 8
  %136 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %137 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %136, i32 0, i32 14
  %138 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %137, align 8
  %139 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %138, i64 1
  store %struct.jpeg_component_info* %139, %struct.jpeg_component_info** %5, align 8
  %140 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %141 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %140, i32 0, i32 0
  store i32 2, i32* %141, align 8
  %142 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %143 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %142, i32 0, i32 2
  store i32 1, i32* %143, align 8
  %144 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %145 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %144, i32 0, i32 3
  store i32 1, i32* %145, align 4
  %146 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %147 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %146, i32 0, i32 4
  store i32 1, i32* %147, align 8
  %148 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %149 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %148, i32 0, i32 5
  store i32 1, i32* %149, align 4
  %150 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %151 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %150, i32 0, i32 6
  store i32 1, i32* %151, align 8
  %152 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %153 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %152, i32 0, i32 14
  %154 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %153, align 8
  %155 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %154, i64 2
  store %struct.jpeg_component_info* %155, %struct.jpeg_component_info** %5, align 8
  %156 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %157 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %156, i32 0, i32 0
  store i32 3, i32* %157, align 8
  %158 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %159 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %158, i32 0, i32 2
  store i32 1, i32* %159, align 8
  %160 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %161 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %160, i32 0, i32 3
  store i32 1, i32* %161, align 4
  %162 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %163 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %162, i32 0, i32 4
  store i32 1, i32* %163, align 8
  %164 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %165 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %164, i32 0, i32 5
  store i32 1, i32* %165, align 4
  %166 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %167 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %166, i32 0, i32 6
  store i32 1, i32* %167, align 8
  br label %391

168:                                              ; preds = %32
  %169 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %170 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %169, i32 0, i32 35
  store i32 1, i32* %170, align 4
  %171 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %172 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %171, i32 0, i32 12
  store i32 4, i32* %172, align 4
  %173 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %174 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %173, i32 0, i32 14
  %175 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %174, align 8
  %176 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %175, i64 0
  store %struct.jpeg_component_info* %176, %struct.jpeg_component_info** %5, align 8
  %177 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %178 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %177, i32 0, i32 0
  store i32 67, i32* %178, align 8
  %179 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %180 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %179, i32 0, i32 2
  store i32 1, i32* %180, align 8
  %181 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %182 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %181, i32 0, i32 3
  store i32 1, i32* %182, align 4
  %183 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %184 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %183, i32 0, i32 4
  store i32 0, i32* %184, align 8
  %185 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %186 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %185, i32 0, i32 5
  store i32 0, i32* %186, align 4
  %187 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %188 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %187, i32 0, i32 6
  store i32 0, i32* %188, align 8
  %189 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %190 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %189, i32 0, i32 14
  %191 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %190, align 8
  %192 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %191, i64 1
  store %struct.jpeg_component_info* %192, %struct.jpeg_component_info** %5, align 8
  %193 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %194 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %193, i32 0, i32 0
  store i32 77, i32* %194, align 8
  %195 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %196 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %195, i32 0, i32 2
  store i32 1, i32* %196, align 8
  %197 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %198 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %197, i32 0, i32 3
  store i32 1, i32* %198, align 4
  %199 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %200 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %199, i32 0, i32 4
  store i32 0, i32* %200, align 8
  %201 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %202 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %201, i32 0, i32 5
  store i32 0, i32* %202, align 4
  %203 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %204 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %203, i32 0, i32 6
  store i32 0, i32* %204, align 8
  %205 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %206 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %205, i32 0, i32 14
  %207 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %206, align 8
  %208 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %207, i64 2
  store %struct.jpeg_component_info* %208, %struct.jpeg_component_info** %5, align 8
  %209 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %210 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %209, i32 0, i32 0
  store i32 89, i32* %210, align 8
  %211 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %212 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %211, i32 0, i32 2
  store i32 1, i32* %212, align 8
  %213 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %214 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %213, i32 0, i32 3
  store i32 1, i32* %214, align 4
  %215 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %216 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %215, i32 0, i32 4
  store i32 0, i32* %216, align 8
  %217 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %218 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %217, i32 0, i32 5
  store i32 0, i32* %218, align 4
  %219 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %220 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %219, i32 0, i32 6
  store i32 0, i32* %220, align 8
  %221 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %222 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %221, i32 0, i32 14
  %223 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %222, align 8
  %224 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %223, i64 3
  store %struct.jpeg_component_info* %224, %struct.jpeg_component_info** %5, align 8
  %225 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %226 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %225, i32 0, i32 0
  store i32 75, i32* %226, align 8
  %227 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %228 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %227, i32 0, i32 2
  store i32 1, i32* %228, align 8
  %229 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %230 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %229, i32 0, i32 3
  store i32 1, i32* %230, align 4
  %231 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %232 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %231, i32 0, i32 4
  store i32 0, i32* %232, align 8
  %233 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %234 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %233, i32 0, i32 5
  store i32 0, i32* %234, align 4
  %235 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %236 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %235, i32 0, i32 6
  store i32 0, i32* %236, align 8
  br label %391

237:                                              ; preds = %32
  %238 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %239 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %238, i32 0, i32 35
  store i32 1, i32* %239, align 4
  %240 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %241 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %240, i32 0, i32 12
  store i32 4, i32* %241, align 4
  %242 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %243 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %242, i32 0, i32 14
  %244 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %243, align 8
  %245 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %244, i64 0
  store %struct.jpeg_component_info* %245, %struct.jpeg_component_info** %5, align 8
  %246 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %247 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %246, i32 0, i32 0
  store i32 1, i32* %247, align 8
  %248 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %249 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %248, i32 0, i32 2
  store i32 2, i32* %249, align 8
  %250 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %251 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %250, i32 0, i32 3
  store i32 2, i32* %251, align 4
  %252 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %253 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %252, i32 0, i32 4
  store i32 0, i32* %253, align 8
  %254 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %255 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %254, i32 0, i32 5
  store i32 0, i32* %255, align 4
  %256 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %257 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %256, i32 0, i32 6
  store i32 0, i32* %257, align 8
  %258 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %259 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %258, i32 0, i32 14
  %260 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %259, align 8
  %261 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %260, i64 1
  store %struct.jpeg_component_info* %261, %struct.jpeg_component_info** %5, align 8
  %262 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %263 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %262, i32 0, i32 0
  store i32 2, i32* %263, align 8
  %264 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %265 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %264, i32 0, i32 2
  store i32 1, i32* %265, align 8
  %266 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %267 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %266, i32 0, i32 3
  store i32 1, i32* %267, align 4
  %268 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %269 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %268, i32 0, i32 4
  store i32 1, i32* %269, align 8
  %270 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %271 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %270, i32 0, i32 5
  store i32 1, i32* %271, align 4
  %272 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %273 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %272, i32 0, i32 6
  store i32 1, i32* %273, align 8
  %274 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %275 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %274, i32 0, i32 14
  %276 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %275, align 8
  %277 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %276, i64 2
  store %struct.jpeg_component_info* %277, %struct.jpeg_component_info** %5, align 8
  %278 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %279 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %278, i32 0, i32 0
  store i32 3, i32* %279, align 8
  %280 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %281 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %280, i32 0, i32 2
  store i32 1, i32* %281, align 8
  %282 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %283 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %282, i32 0, i32 3
  store i32 1, i32* %283, align 4
  %284 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %285 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %284, i32 0, i32 4
  store i32 1, i32* %285, align 8
  %286 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %287 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %286, i32 0, i32 5
  store i32 1, i32* %287, align 4
  %288 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %289 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %288, i32 0, i32 6
  store i32 1, i32* %289, align 8
  %290 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %291 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %290, i32 0, i32 14
  %292 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %291, align 8
  %293 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %292, i64 3
  store %struct.jpeg_component_info* %293, %struct.jpeg_component_info** %5, align 8
  %294 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %295 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %294, i32 0, i32 0
  store i32 4, i32* %295, align 8
  %296 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %297 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %296, i32 0, i32 2
  store i32 2, i32* %297, align 8
  %298 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %299 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %298, i32 0, i32 3
  store i32 2, i32* %299, align 4
  %300 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %301 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %300, i32 0, i32 4
  store i32 0, i32* %301, align 8
  %302 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %303 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %302, i32 0, i32 5
  store i32 0, i32* %303, align 4
  %304 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %305 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %304, i32 0, i32 6
  store i32 0, i32* %305, align 8
  br label %391

306:                                              ; preds = %32
  %307 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %308 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %307, i32 0, i32 8
  %309 = load i32, i32* %308, align 8
  %310 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %311 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %310, i32 0, i32 12
  store i32 %309, i32* %311, align 4
  %312 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %313 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %312, i32 0, i32 12
  %314 = load i32, i32* %313, align 4
  %315 = icmp slt i32 %314, 1
  br i1 %315, label %321, label %316

316:                                              ; preds = %306
  %317 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %318 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %317, i32 0, i32 12
  %319 = load i32, i32* %318, align 4
  %320 = icmp sgt i32 %319, 10
  br i1 %320, label %321, label %348

321:                                              ; preds = %316, %306
  %322 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %323 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %322, i32 0, i32 0
  %324 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %323, align 8
  %325 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %324, i32 0, i32 5
  store i32 24, i32* %325, align 8
  %326 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %327 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %326, i32 0, i32 12
  %328 = load i32, i32* %327, align 4
  %329 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %330 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %329, i32 0, i32 0
  %331 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %330, align 8
  %332 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %331, i32 0, i32 6
  %333 = bitcast %union.anon* %332 to [8 x i32]*
  %334 = getelementptr inbounds [8 x i32], [8 x i32]* %333, i64 0, i64 0
  store i32 %328, i32* %334, align 4
  %335 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %336 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %335, i32 0, i32 0
  %337 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %336, align 8
  %338 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %337, i32 0, i32 6
  %339 = bitcast %union.anon* %338 to [8 x i32]*
  %340 = getelementptr inbounds [8 x i32], [8 x i32]* %339, i64 0, i64 1
  store i32 10, i32* %340, align 4
  %341 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %342 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %341, i32 0, i32 0
  %343 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %342, align 8
  %344 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %343, i32 0, i32 0
  %345 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %344, align 8
  %346 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %347 = bitcast %struct.jpeg_compress_struct* %346 to %struct.jpeg_common_struct*
  call void %345(%struct.jpeg_common_struct* %347)
  br label %348

348:                                              ; preds = %321, %316
  store i32 0, i32* %6, align 4
  br label %349

349:                                              ; preds = %375, %348
  %350 = load i32, i32* %6, align 4
  %351 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %352 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %351, i32 0, i32 12
  %353 = load i32, i32* %352, align 4
  %354 = icmp slt i32 %350, %353
  br i1 %354, label %355, label %378

355:                                              ; preds = %349
  %356 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %357 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %356, i32 0, i32 14
  %358 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %357, align 8
  %359 = load i32, i32* %6, align 4
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %358, i64 %360
  store %struct.jpeg_component_info* %361, %struct.jpeg_component_info** %5, align 8
  %362 = load i32, i32* %6, align 4
  %363 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %364 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %363, i32 0, i32 0
  store i32 %362, i32* %364, align 8
  %365 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %366 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %365, i32 0, i32 2
  store i32 1, i32* %366, align 8
  %367 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %368 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %367, i32 0, i32 3
  store i32 1, i32* %368, align 4
  %369 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %370 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %369, i32 0, i32 4
  store i32 0, i32* %370, align 8
  %371 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %372 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %371, i32 0, i32 5
  store i32 0, i32* %372, align 4
  %373 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %374 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %373, i32 0, i32 6
  store i32 0, i32* %374, align 8
  br label %375

375:                                              ; preds = %355
  %376 = load i32, i32* %6, align 4
  %377 = add nsw i32 %376, 1
  store i32 %377, i32* %6, align 4
  br label %349

378:                                              ; preds = %349
  br label %391

379:                                              ; preds = %32
  %380 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %381 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %380, i32 0, i32 0
  %382 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %381, align 8
  %383 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %382, i32 0, i32 5
  store i32 8, i32* %383, align 8
  %384 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %385 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %384, i32 0, i32 0
  %386 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %385, align 8
  %387 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %386, i32 0, i32 0
  %388 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %387, align 8
  %389 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %390 = bitcast %struct.jpeg_compress_struct* %389 to %struct.jpeg_common_struct*
  call void %388(%struct.jpeg_common_struct* %390)
  br label %391

391:                                              ; preds = %379, %378, %237, %168, %115, %62, %41
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_huff_table(%struct.jpeg_compress_struct* %0, %struct.JHUFF_TBL** %1, i8* %2, i8* %3) #0 {
  %5 = alloca %struct.jpeg_compress_struct*, align 8
  %6 = alloca %struct.JHUFF_TBL**, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %5, align 8
  store %struct.JHUFF_TBL** %1, %struct.JHUFF_TBL*** %6, align 8
  store i8* %2, i8** %7, align 8
  store i8* %3, i8** %8, align 8
  %9 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %6, align 8
  %10 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %9, align 8
  %11 = icmp eq %struct.JHUFF_TBL* %10, null
  br i1 %11, label %12, label %17

12:                                               ; preds = %4
  %13 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %5, align 8
  %14 = bitcast %struct.jpeg_compress_struct* %13 to %struct.jpeg_common_struct*
  %15 = call %struct.JHUFF_TBL* bitcast (%struct.JHUFF_TBL* (%struct.jpeg_common_struct.212*)* @jpeg_alloc_huff_table to %struct.JHUFF_TBL* (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %14)
  %16 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %6, align 8
  store %struct.JHUFF_TBL* %15, %struct.JHUFF_TBL** %16, align 8
  br label %17

17:                                               ; preds = %12, %4
  %18 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %6, align 8
  %19 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %18, align 8
  %20 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %19, i32 0, i32 0
  %21 = getelementptr inbounds [17 x i8], [17 x i8]* %20, i64 0, i64 0
  %22 = load i8*, i8** %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 1 %22, i64 17, i1 false)
  %23 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %6, align 8
  %24 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %23, align 8
  %25 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %24, i32 0, i32 1
  %26 = getelementptr inbounds [256 x i8], [256 x i8]* %25, i64 0, i64 0
  %27 = load i8*, i8** %8, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %27, i64 256, i1 false)
  %28 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %6, align 8
  %29 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %28, align 8
  %30 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %29, i32 0, i32 2
  store i32 0, i32* %30, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_simple_progression(%struct.jpeg_compress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.jpeg_scan_info*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %2, align 8
  %6 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %6, i32 0, i32 12
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %3, align 4
  %9 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %9, i32 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %11, 100
  br i1 %12, label %13, label %34

13:                                               ; preds = %1
  %14 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %14, i32 0, i32 0
  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i32 0, i32 5
  store i32 18, i32* %17, align 8
  %18 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %18, i32 0, i32 4
  %20 = load i32, i32* %19, align 4
  %21 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %21, i32 0, i32 0
  %23 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %23, i32 0, i32 6
  %25 = bitcast %union.anon* %24 to [8 x i32]*
  %26 = getelementptr inbounds [8 x i32], [8 x i32]* %25, i64 0, i64 0
  store i32 %20, i32* %26, align 4
  %27 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %28 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %27, i32 0, i32 0
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i32 0, i32 0
  %31 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %30, align 8
  %32 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %33 = bitcast %struct.jpeg_compress_struct* %32 to %struct.jpeg_common_struct*
  call void %31(%struct.jpeg_common_struct* %33)
  br label %34

34:                                               ; preds = %13, %1
  %35 = load i32, i32* %3, align 4
  %36 = icmp eq i32 %35, 3
  br i1 %36, label %37, label %43

37:                                               ; preds = %34
  %38 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %39 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %38, i32 0, i32 13
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 3
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  store i32 10, i32* %4, align 4
  br label %54

43:                                               ; preds = %37, %34
  %44 = load i32, i32* %3, align 4
  %45 = icmp sgt i32 %44, 4
  br i1 %45, label %46, label %49

46:                                               ; preds = %43
  %47 = load i32, i32* %3, align 4
  %48 = mul nsw i32 6, %47
  store i32 %48, i32* %4, align 4
  br label %53

49:                                               ; preds = %43
  %50 = load i32, i32* %3, align 4
  %51 = mul nsw i32 4, %50
  %52 = add nsw i32 2, %51
  store i32 %52, i32* %4, align 4
  br label %53

53:                                               ; preds = %49, %46
  br label %54

54:                                               ; preds = %53, %42
  %55 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %56 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %55, i32 0, i32 1
  %57 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %56, align 8
  %58 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %57, i32 0, i32 0
  %59 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %58, align 8
  %60 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %61 = bitcast %struct.jpeg_compress_struct* %60 to %struct.jpeg_common_struct*
  %62 = load i32, i32* %4, align 4
  %63 = sext i32 %62 to i64
  %64 = mul i64 %63, 36
  %65 = call i8* %59(%struct.jpeg_common_struct* %61, i32 0, i64 %64)
  %66 = bitcast i8* %65 to %struct.jpeg_scan_info*
  store %struct.jpeg_scan_info* %66, %struct.jpeg_scan_info** %5, align 8
  %67 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %68 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %69 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %68, i32 0, i32 22
  store %struct.jpeg_scan_info* %67, %struct.jpeg_scan_info** %69, align 8
  %70 = load i32, i32* %4, align 4
  %71 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %72 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %71, i32 0, i32 21
  store i32 %70, i32* %72, align 8
  %73 = load i32, i32* %3, align 4
  %74 = icmp eq i32 %73, 3
  br i1 %74, label %75, label %103

75:                                               ; preds = %54
  %76 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %77 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %76, i32 0, i32 13
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 3
  br i1 %79, label %80, label %103

80:                                               ; preds = %75
  %81 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %82 = load i32, i32* %3, align 4
  %83 = call %struct.jpeg_scan_info* @fill_dc_scans(%struct.jpeg_scan_info* %81, i32 %82, i32 0, i32 1)
  store %struct.jpeg_scan_info* %83, %struct.jpeg_scan_info** %5, align 8
  %84 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %85 = call %struct.jpeg_scan_info* @fill_a_scan(%struct.jpeg_scan_info* %84, i32 0, i32 1, i32 5, i32 0, i32 2)
  store %struct.jpeg_scan_info* %85, %struct.jpeg_scan_info** %5, align 8
  %86 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %87 = call %struct.jpeg_scan_info* @fill_a_scan(%struct.jpeg_scan_info* %86, i32 2, i32 1, i32 63, i32 0, i32 1)
  store %struct.jpeg_scan_info* %87, %struct.jpeg_scan_info** %5, align 8
  %88 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %89 = call %struct.jpeg_scan_info* @fill_a_scan(%struct.jpeg_scan_info* %88, i32 1, i32 1, i32 63, i32 0, i32 1)
  store %struct.jpeg_scan_info* %89, %struct.jpeg_scan_info** %5, align 8
  %90 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %91 = call %struct.jpeg_scan_info* @fill_a_scan(%struct.jpeg_scan_info* %90, i32 0, i32 6, i32 63, i32 0, i32 2)
  store %struct.jpeg_scan_info* %91, %struct.jpeg_scan_info** %5, align 8
  %92 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %93 = call %struct.jpeg_scan_info* @fill_a_scan(%struct.jpeg_scan_info* %92, i32 0, i32 1, i32 63, i32 2, i32 1)
  store %struct.jpeg_scan_info* %93, %struct.jpeg_scan_info** %5, align 8
  %94 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %95 = load i32, i32* %3, align 4
  %96 = call %struct.jpeg_scan_info* @fill_dc_scans(%struct.jpeg_scan_info* %94, i32 %95, i32 1, i32 0)
  store %struct.jpeg_scan_info* %96, %struct.jpeg_scan_info** %5, align 8
  %97 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %98 = call %struct.jpeg_scan_info* @fill_a_scan(%struct.jpeg_scan_info* %97, i32 2, i32 1, i32 63, i32 1, i32 0)
  store %struct.jpeg_scan_info* %98, %struct.jpeg_scan_info** %5, align 8
  %99 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %100 = call %struct.jpeg_scan_info* @fill_a_scan(%struct.jpeg_scan_info* %99, i32 1, i32 1, i32 63, i32 1, i32 0)
  store %struct.jpeg_scan_info* %100, %struct.jpeg_scan_info** %5, align 8
  %101 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %102 = call %struct.jpeg_scan_info* @fill_a_scan(%struct.jpeg_scan_info* %101, i32 0, i32 1, i32 63, i32 1, i32 0)
  store %struct.jpeg_scan_info* %102, %struct.jpeg_scan_info** %5, align 8
  br label %122

103:                                              ; preds = %75, %54
  %104 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %105 = load i32, i32* %3, align 4
  %106 = call %struct.jpeg_scan_info* @fill_dc_scans(%struct.jpeg_scan_info* %104, i32 %105, i32 0, i32 1)
  store %struct.jpeg_scan_info* %106, %struct.jpeg_scan_info** %5, align 8
  %107 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %108 = load i32, i32* %3, align 4
  %109 = call %struct.jpeg_scan_info* @fill_scans(%struct.jpeg_scan_info* %107, i32 %108, i32 1, i32 5, i32 0, i32 2)
  store %struct.jpeg_scan_info* %109, %struct.jpeg_scan_info** %5, align 8
  %110 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %111 = load i32, i32* %3, align 4
  %112 = call %struct.jpeg_scan_info* @fill_scans(%struct.jpeg_scan_info* %110, i32 %111, i32 6, i32 63, i32 0, i32 2)
  store %struct.jpeg_scan_info* %112, %struct.jpeg_scan_info** %5, align 8
  %113 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %114 = load i32, i32* %3, align 4
  %115 = call %struct.jpeg_scan_info* @fill_scans(%struct.jpeg_scan_info* %113, i32 %114, i32 1, i32 63, i32 2, i32 1)
  store %struct.jpeg_scan_info* %115, %struct.jpeg_scan_info** %5, align 8
  %116 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %117 = load i32, i32* %3, align 4
  %118 = call %struct.jpeg_scan_info* @fill_dc_scans(%struct.jpeg_scan_info* %116, i32 %117, i32 1, i32 0)
  store %struct.jpeg_scan_info* %118, %struct.jpeg_scan_info** %5, align 8
  %119 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %120 = load i32, i32* %3, align 4
  %121 = call %struct.jpeg_scan_info* @fill_scans(%struct.jpeg_scan_info* %119, i32 %120, i32 1, i32 63, i32 1, i32 0)
  store %struct.jpeg_scan_info* %121, %struct.jpeg_scan_info** %5, align 8
  br label %122

122:                                              ; preds = %103, %80
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.jpeg_scan_info* @fill_dc_scans(%struct.jpeg_scan_info* %0, i32 %1, i32 %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_scan_info*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.jpeg_scan_info* %0, %struct.jpeg_scan_info** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %10 = load i32, i32* %6, align 4
  %11 = icmp sle i32 %10, 4
  br i1 %11, label %12, label %43

12:                                               ; preds = %4
  %13 = load i32, i32* %6, align 4
  %14 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %15 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %14, i32 0, i32 0
  store i32 %13, i32* %15, align 4
  store i32 0, i32* %9, align 4
  br label %16

16:                                               ; preds = %27, %12
  %17 = load i32, i32* %9, align 4
  %18 = load i32, i32* %6, align 4
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %20, label %30

20:                                               ; preds = %16
  %21 = load i32, i32* %9, align 4
  %22 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %23 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %22, i32 0, i32 1
  %24 = load i32, i32* %9, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [4 x i32], [4 x i32]* %23, i64 0, i64 %25
  store i32 %21, i32* %26, align 4
  br label %27

27:                                               ; preds = %20
  %28 = load i32, i32* %9, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %9, align 4
  br label %16

30:                                               ; preds = %16
  %31 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %32 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %31, i32 0, i32 3
  store i32 0, i32* %32, align 4
  %33 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %34 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %33, i32 0, i32 2
  store i32 0, i32* %34, align 4
  %35 = load i32, i32* %7, align 4
  %36 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %37 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %36, i32 0, i32 4
  store i32 %35, i32* %37, align 4
  %38 = load i32, i32* %8, align 4
  %39 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %40 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %39, i32 0, i32 5
  store i32 %38, i32* %40, align 4
  %41 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %42 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %41, i32 1
  store %struct.jpeg_scan_info* %42, %struct.jpeg_scan_info** %5, align 8
  br label %49

43:                                               ; preds = %4
  %44 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  %45 = load i32, i32* %6, align 4
  %46 = load i32, i32* %7, align 4
  %47 = load i32, i32* %8, align 4
  %48 = call %struct.jpeg_scan_info* @fill_scans(%struct.jpeg_scan_info* %44, i32 %45, i32 0, i32 0, i32 %46, i32 %47)
  store %struct.jpeg_scan_info* %48, %struct.jpeg_scan_info** %5, align 8
  br label %49

49:                                               ; preds = %43, %30
  %50 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %5, align 8
  ret %struct.jpeg_scan_info* %50
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.jpeg_scan_info* @fill_a_scan(%struct.jpeg_scan_info* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) #0 {
  %7 = alloca %struct.jpeg_scan_info*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.jpeg_scan_info* %0, %struct.jpeg_scan_info** %7, align 8
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  %13 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  %14 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %13, i32 0, i32 0
  store i32 1, i32* %14, align 4
  %15 = load i32, i32* %8, align 4
  %16 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  %17 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %16, i32 0, i32 1
  %18 = getelementptr inbounds [4 x i32], [4 x i32]* %17, i64 0, i64 0
  store i32 %15, i32* %18, align 4
  %19 = load i32, i32* %9, align 4
  %20 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  %21 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %20, i32 0, i32 2
  store i32 %19, i32* %21, align 4
  %22 = load i32, i32* %10, align 4
  %23 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  %24 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %23, i32 0, i32 3
  store i32 %22, i32* %24, align 4
  %25 = load i32, i32* %11, align 4
  %26 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  %27 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %26, i32 0, i32 4
  store i32 %25, i32* %27, align 4
  %28 = load i32, i32* %12, align 4
  %29 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  %30 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %29, i32 0, i32 5
  store i32 %28, i32* %30, align 4
  %31 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  %32 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %31, i32 1
  store %struct.jpeg_scan_info* %32, %struct.jpeg_scan_info** %7, align 8
  %33 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  ret %struct.jpeg_scan_info* %33
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.jpeg_scan_info* @fill_scans(%struct.jpeg_scan_info* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) #0 {
  %7 = alloca %struct.jpeg_scan_info*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %struct.jpeg_scan_info* %0, %struct.jpeg_scan_info** %7, align 8
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  store i32 0, i32* %13, align 4
  br label %14

14:                                               ; preds = %39, %6
  %15 = load i32, i32* %13, align 4
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %42

18:                                               ; preds = %14
  %19 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  %20 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %19, i32 0, i32 0
  store i32 1, i32* %20, align 4
  %21 = load i32, i32* %13, align 4
  %22 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  %23 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %22, i32 0, i32 1
  %24 = getelementptr inbounds [4 x i32], [4 x i32]* %23, i64 0, i64 0
  store i32 %21, i32* %24, align 4
  %25 = load i32, i32* %9, align 4
  %26 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  %27 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %26, i32 0, i32 2
  store i32 %25, i32* %27, align 4
  %28 = load i32, i32* %10, align 4
  %29 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  %30 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %29, i32 0, i32 3
  store i32 %28, i32* %30, align 4
  %31 = load i32, i32* %11, align 4
  %32 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  %33 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %32, i32 0, i32 4
  store i32 %31, i32* %33, align 4
  %34 = load i32, i32* %12, align 4
  %35 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  %36 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %35, i32 0, i32 5
  store i32 %34, i32* %36, align 4
  %37 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  %38 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %37, i32 1
  store %struct.jpeg_scan_info* %38, %struct.jpeg_scan_info** %7, align 8
  br label %39

39:                                               ; preds = %18
  %40 = load i32, i32* %13, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %13, align 4
  br label %14

42:                                               ; preds = %14
  %43 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %7, align 8
  ret %struct.jpeg_scan_info* %43
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_phuff_encoder(%struct.jpeg_compress_struct.58* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.58*, align 8
  %3 = alloca %struct.phuff_entropy_encoder*, align 8
  %4 = alloca i32, align 4
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %2, align 8
  %5 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %6 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %5, i32 0, i32 1
  %7 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %7, i32 0, i32 0
  %9 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %8, align 8
  %10 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %11 = bitcast %struct.jpeg_compress_struct.58* %10 to %struct.jpeg_common_struct*
  %12 = call i8* %9(%struct.jpeg_common_struct* %11, i32 1, i64 184)
  %13 = bitcast i8* %12 to %struct.phuff_entropy_encoder*
  store %struct.phuff_entropy_encoder* %13, %struct.phuff_entropy_encoder** %3, align 8
  %14 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %15 = bitcast %struct.phuff_entropy_encoder* %14 to %struct.jpeg_entropy_encoder.75*
  %16 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %17 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %16, i32 0, i32 59
  store %struct.jpeg_entropy_encoder.75* %15, %struct.jpeg_entropy_encoder.75** %17, align 8
  %18 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %19 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %18, i32 0, i32 0
  %20 = getelementptr inbounds %struct.jpeg_entropy_encoder.75, %struct.jpeg_entropy_encoder.75* %19, i32 0, i32 0
  store void (%struct.jpeg_compress_struct.58*, i32)* @start_pass_phuff, void (%struct.jpeg_compress_struct.58*, i32)** %20, align 8
  store i32 0, i32* %4, align 4
  br label %21

21:                                               ; preds = %35, %1
  %22 = load i32, i32* %4, align 4
  %23 = icmp slt i32 %22, 4
  br i1 %23, label %24, label %38

24:                                               ; preds = %21
  %25 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %26 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %25, i32 0, i32 14
  %27 = load i32, i32* %4, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [4 x %struct.c_derived_tbl*], [4 x %struct.c_derived_tbl*]* %26, i64 0, i64 %28
  store %struct.c_derived_tbl* null, %struct.c_derived_tbl** %29, align 8
  %30 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %31 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %30, i32 0, i32 15
  %32 = load i32, i32* %4, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [4 x i64*], [4 x i64*]* %31, i64 0, i64 %33
  store i64* null, i64** %34, align 8
  br label %35

35:                                               ; preds = %24
  %36 = load i32, i32* %4, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %4, align 4
  br label %21

38:                                               ; preds = %21
  %39 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %40 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %39, i32 0, i32 11
  store i8* null, i8** %40, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_phuff(%struct.jpeg_compress_struct.58* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.58*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.phuff_entropy_encoder*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %3, align 8
  store i32 %1, i32* %4, align 4
  %10 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %10, i32 0, i32 59
  %12 = load %struct.jpeg_entropy_encoder.75*, %struct.jpeg_entropy_encoder.75** %11, align 8
  %13 = bitcast %struct.jpeg_entropy_encoder.75* %12 to %struct.phuff_entropy_encoder*
  store %struct.phuff_entropy_encoder* %13, %struct.phuff_entropy_encoder** %5, align 8
  %14 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %15 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %16 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %15, i32 0, i32 6
  store %struct.jpeg_compress_struct.58* %14, %struct.jpeg_compress_struct.58** %16, align 8
  %17 = load i32, i32* %4, align 4
  %18 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %19 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %18, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  %20 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %20, i32 0, i32 47
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  %24 = zext i1 %23 to i32
  store i32 %24, i32* %6, align 4
  %25 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %25, i32 0, i32 49
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %2
  %30 = load i32, i32* %6, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %29
  %33 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %34 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %33, i32 0, i32 0
  %35 = getelementptr inbounds %struct.jpeg_entropy_encoder.75, %struct.jpeg_entropy_encoder.75* %34, i32 0, i32 1
  store i32 (%struct.jpeg_compress_struct.58*, [64 x i16]**)* @encode_mcu_DC_first, i32 (%struct.jpeg_compress_struct.58*, [64 x i16]**)** %35, align 8
  br label %40

36:                                               ; preds = %29
  %37 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %38 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %37, i32 0, i32 0
  %39 = getelementptr inbounds %struct.jpeg_entropy_encoder.75, %struct.jpeg_entropy_encoder.75* %38, i32 0, i32 1
  store i32 (%struct.jpeg_compress_struct.58*, [64 x i16]**)* @encode_mcu_AC_first, i32 (%struct.jpeg_compress_struct.58*, [64 x i16]**)** %39, align 8
  br label %40

40:                                               ; preds = %36, %32
  br label %69

41:                                               ; preds = %2
  %42 = load i32, i32* %6, align 4
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %48

44:                                               ; preds = %41
  %45 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %46 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %45, i32 0, i32 0
  %47 = getelementptr inbounds %struct.jpeg_entropy_encoder.75, %struct.jpeg_entropy_encoder.75* %46, i32 0, i32 1
  store i32 (%struct.jpeg_compress_struct.58*, [64 x i16]**)* @encode_mcu_DC_refine, i32 (%struct.jpeg_compress_struct.58*, [64 x i16]**)** %47, align 8
  br label %68

48:                                               ; preds = %41
  %49 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %50 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %49, i32 0, i32 0
  %51 = getelementptr inbounds %struct.jpeg_entropy_encoder.75, %struct.jpeg_entropy_encoder.75* %50, i32 0, i32 1
  store i32 (%struct.jpeg_compress_struct.58*, [64 x i16]**)* @encode_mcu_AC_refine, i32 (%struct.jpeg_compress_struct.58*, [64 x i16]**)** %51, align 8
  %52 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %53 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %52, i32 0, i32 11
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %56, label %67

56:                                               ; preds = %48
  %57 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %58 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %57, i32 0, i32 1
  %59 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %58, align 8
  %60 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %59, i32 0, i32 0
  %61 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %60, align 8
  %62 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %63 = bitcast %struct.jpeg_compress_struct.58* %62 to %struct.jpeg_common_struct*
  %64 = call i8* %61(%struct.jpeg_common_struct* %63, i32 1, i64 1000)
  %65 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %66 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %65, i32 0, i32 11
  store i8* %64, i8** %66, align 8
  br label %67

67:                                               ; preds = %56, %48
  br label %68

68:                                               ; preds = %67, %44
  br label %69

69:                                               ; preds = %68, %40
  %70 = load i32, i32* %4, align 4
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %72, label %77

72:                                               ; preds = %69
  %73 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %74 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %73, i32 0, i32 0
  %75 = getelementptr inbounds %struct.jpeg_entropy_encoder.75, %struct.jpeg_entropy_encoder.75* %74, i32 0, i32 2
  %76 = bitcast {}** %75 to void (%struct.jpeg_compress_struct.58*)**
  store void (%struct.jpeg_compress_struct.58*)* @finish_pass_gather_phuff, void (%struct.jpeg_compress_struct.58*)** %76, align 8
  br label %82

77:                                               ; preds = %69
  %78 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %79 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %78, i32 0, i32 0
  %80 = getelementptr inbounds %struct.jpeg_entropy_encoder.75, %struct.jpeg_entropy_encoder.75* %79, i32 0, i32 2
  %81 = bitcast {}** %80 to void (%struct.jpeg_compress_struct.58*)**
  store void (%struct.jpeg_compress_struct.58*)* @finish_pass_phuff, void (%struct.jpeg_compress_struct.58*)** %81, align 8
  br label %82

82:                                               ; preds = %77, %72
  store i32 0, i32* %7, align 4
  br label %83

83:                                               ; preds = %256, %82
  %84 = load i32, i32* %7, align 4
  %85 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %86 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %85, i32 0, i32 41
  %87 = load i32, i32* %86, align 4
  %88 = icmp slt i32 %84, %87
  br i1 %88, label %89, label %259

89:                                               ; preds = %83
  %90 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %91 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %90, i32 0, i32 42
  %92 = load i32, i32* %7, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %91, i64 0, i64 %93
  %95 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %94, align 8
  store %struct.jpeg_component_info* %95, %struct.jpeg_component_info** %9, align 8
  %96 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %97 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %96, i32 0, i32 7
  %98 = load i32, i32* %7, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds [4 x i32], [4 x i32]* %97, i64 0, i64 %99
  store i32 0, i32* %100, align 4
  %101 = load i32, i32* %6, align 4
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %149

103:                                              ; preds = %89
  %104 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %105 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %104, i32 0, i32 49
  %106 = load i32, i32* %105, align 4
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %103
  br label %256

109:                                              ; preds = %103
  %110 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8
  %111 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %110, i32 0, i32 5
  %112 = load i32, i32* %111, align 4
  store i32 %112, i32* %8, align 4
  %113 = load i32, i32* %8, align 4
  %114 = icmp slt i32 %113, 0
  br i1 %114, label %129, label %115

115:                                              ; preds = %109
  %116 = load i32, i32* %8, align 4
  %117 = icmp sge i32 %116, 4
  br i1 %117, label %129, label %118

118:                                              ; preds = %115
  %119 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %120 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %119, i32 0, i32 16
  %121 = load i32, i32* %8, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %120, i64 0, i64 %122
  %124 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %123, align 8
  %125 = icmp eq %struct.JHUFF_TBL* %124, null
  br i1 %125, label %126, label %148

126:                                              ; preds = %118
  %127 = load i32, i32* %4, align 4
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %148, label %129

129:                                              ; preds = %126, %115, %109
  %130 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %131 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %130, i32 0, i32 0
  %132 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %131, align 8
  %133 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %132, i32 0, i32 5
  store i32 49, i32* %133, align 8
  %134 = load i32, i32* %8, align 4
  %135 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %136 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %135, i32 0, i32 0
  %137 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %136, align 8
  %138 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %137, i32 0, i32 6
  %139 = bitcast %union.anon* %138 to [8 x i32]*
  %140 = getelementptr inbounds [8 x i32], [8 x i32]* %139, i64 0, i64 0
  store i32 %134, i32* %140, align 4
  %141 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %142 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %141, i32 0, i32 0
  %143 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %142, align 8
  %144 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %143, i32 0, i32 0
  %145 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %144, align 8
  %146 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %147 = bitcast %struct.jpeg_compress_struct.58* %146 to %struct.jpeg_common_struct*
  call void %145(%struct.jpeg_common_struct* %147)
  br label %148

148:                                              ; preds = %129, %126, %118
  br label %191

149:                                              ; preds = %89
  %150 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8
  %151 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %150, i32 0, i32 6
  %152 = load i32, i32* %151, align 8
  store i32 %152, i32* %8, align 4
  %153 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %154 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %153, i32 0, i32 8
  store i32 %152, i32* %154, align 8
  %155 = load i32, i32* %8, align 4
  %156 = icmp slt i32 %155, 0
  br i1 %156, label %171, label %157

157:                                              ; preds = %149
  %158 = load i32, i32* %8, align 4
  %159 = icmp sge i32 %158, 4
  br i1 %159, label %171, label %160

160:                                              ; preds = %157
  %161 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %162 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %161, i32 0, i32 17
  %163 = load i32, i32* %8, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %162, i64 0, i64 %164
  %166 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %165, align 8
  %167 = icmp eq %struct.JHUFF_TBL* %166, null
  br i1 %167, label %168, label %190

168:                                              ; preds = %160
  %169 = load i32, i32* %4, align 4
  %170 = icmp ne i32 %169, 0
  br i1 %170, label %190, label %171

171:                                              ; preds = %168, %157, %149
  %172 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %173 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %172, i32 0, i32 0
  %174 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %173, align 8
  %175 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %174, i32 0, i32 5
  store i32 49, i32* %175, align 8
  %176 = load i32, i32* %8, align 4
  %177 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %178 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %177, i32 0, i32 0
  %179 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %178, align 8
  %180 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %179, i32 0, i32 6
  %181 = bitcast %union.anon* %180 to [8 x i32]*
  %182 = getelementptr inbounds [8 x i32], [8 x i32]* %181, i64 0, i64 0
  store i32 %176, i32* %182, align 4
  %183 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %184 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %183, i32 0, i32 0
  %185 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %184, align 8
  %186 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %185, i32 0, i32 0
  %187 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %186, align 8
  %188 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %189 = bitcast %struct.jpeg_compress_struct.58* %188 to %struct.jpeg_common_struct*
  call void %187(%struct.jpeg_common_struct* %189)
  br label %190

190:                                              ; preds = %171, %168, %160
  br label %191

191:                                              ; preds = %190, %148
  %192 = load i32, i32* %4, align 4
  %193 = icmp ne i32 %192, 0
  br i1 %193, label %194, label %225

194:                                              ; preds = %191
  %195 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %196 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %195, i32 0, i32 15
  %197 = load i32, i32* %8, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [4 x i64*], [4 x i64*]* %196, i64 0, i64 %198
  %200 = load i64*, i64** %199, align 8
  %201 = icmp eq i64* %200, null
  br i1 %201, label %202, label %217

202:                                              ; preds = %194
  %203 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %204 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %203, i32 0, i32 1
  %205 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %204, align 8
  %206 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %205, i32 0, i32 0
  %207 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %206, align 8
  %208 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %209 = bitcast %struct.jpeg_compress_struct.58* %208 to %struct.jpeg_common_struct*
  %210 = call i8* %207(%struct.jpeg_common_struct* %209, i32 1, i64 2056)
  %211 = bitcast i8* %210 to i64*
  %212 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %213 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %212, i32 0, i32 15
  %214 = load i32, i32* %8, align 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds [4 x i64*], [4 x i64*]* %213, i64 0, i64 %215
  store i64* %211, i64** %216, align 8
  br label %217

217:                                              ; preds = %202, %194
  %218 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %219 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %218, i32 0, i32 15
  %220 = load i32, i32* %8, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [4 x i64*], [4 x i64*]* %219, i64 0, i64 %221
  %223 = load i64*, i64** %222, align 8
  %224 = bitcast i64* %223 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %224, i8 0, i64 2056, i1 false)
  br label %255

225:                                              ; preds = %191
  %226 = load i32, i32* %6, align 4
  %227 = icmp ne i32 %226, 0
  br i1 %227, label %228, label %241

228:                                              ; preds = %225
  %229 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %230 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %231 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %230, i32 0, i32 16
  %232 = load i32, i32* %8, align 4
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %231, i64 0, i64 %233
  %235 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %234, align 8
  %236 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %237 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %236, i32 0, i32 14
  %238 = load i32, i32* %8, align 4
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds [4 x %struct.c_derived_tbl*], [4 x %struct.c_derived_tbl*]* %237, i64 0, i64 %239
  call void bitcast (void (%struct.jpeg_compress_struct*, %struct.JHUFF_TBL*, %struct.c_derived_tbl**)* @jpeg_make_c_derived_tbl to void (%struct.jpeg_compress_struct.58*, %struct.JHUFF_TBL*, %struct.c_derived_tbl**)*)(%struct.jpeg_compress_struct.58* %229, %struct.JHUFF_TBL* %235, %struct.c_derived_tbl** %240)
  br label %254

241:                                              ; preds = %225
  %242 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %243 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %244 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %243, i32 0, i32 17
  %245 = load i32, i32* %8, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %244, i64 0, i64 %246
  %248 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %247, align 8
  %249 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %250 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %249, i32 0, i32 14
  %251 = load i32, i32* %8, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds [4 x %struct.c_derived_tbl*], [4 x %struct.c_derived_tbl*]* %250, i64 0, i64 %252
  call void bitcast (void (%struct.jpeg_compress_struct*, %struct.JHUFF_TBL*, %struct.c_derived_tbl**)* @jpeg_make_c_derived_tbl to void (%struct.jpeg_compress_struct.58*, %struct.JHUFF_TBL*, %struct.c_derived_tbl**)*)(%struct.jpeg_compress_struct.58* %242, %struct.JHUFF_TBL* %248, %struct.c_derived_tbl** %253)
  br label %254

254:                                              ; preds = %241, %228
  br label %255

255:                                              ; preds = %254, %217
  br label %256

256:                                              ; preds = %255, %108
  %257 = load i32, i32* %7, align 4
  %258 = add nsw i32 %257, 1
  store i32 %258, i32* %7, align 4
  br label %83

259:                                              ; preds = %83
  %260 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %261 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %260, i32 0, i32 9
  store i32 0, i32* %261, align 4
  %262 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %263 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %262, i32 0, i32 10
  store i32 0, i32* %263, align 8
  %264 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %265 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %264, i32 0, i32 4
  store i64 0, i64* %265, align 8
  %266 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %267 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %266, i32 0, i32 5
  store i32 0, i32* %267, align 8
  %268 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %269 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %268, i32 0, i32 29
  %270 = load i32, i32* %269, align 8
  %271 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %272 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %271, i32 0, i32 12
  store i32 %270, i32* %272, align 8
  %273 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %274 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %273, i32 0, i32 13
  store i32 0, i32* %274, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @encode_mcu_DC_first(%struct.jpeg_compress_struct.58* %0, [64 x i16]** %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.58*, align 8
  %4 = alloca [64 x i16]**, align 8
  %5 = alloca %struct.phuff_entropy_encoder*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [64 x i16]*, align 8
  %13 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %3, align 8
  store [64 x i16]** %1, [64 x i16]*** %4, align 8
  %14 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %14, i32 0, i32 59
  %16 = load %struct.jpeg_entropy_encoder.75*, %struct.jpeg_entropy_encoder.75** %15, align 8
  %17 = bitcast %struct.jpeg_entropy_encoder.75* %16 to %struct.phuff_entropy_encoder*
  store %struct.phuff_entropy_encoder* %17, %struct.phuff_entropy_encoder** %5, align 8
  %18 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %19 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %18, i32 0, i32 50
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %11, align 4
  %21 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %21, i32 0, i32 5
  %23 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %23, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %27 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %26, i32 0, i32 2
  store i8* %25, i8** %27, align 8
  %28 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %29 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %28, i32 0, i32 5
  %30 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %29, align 8
  %31 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %30, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %34 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %33, i32 0, i32 3
  store i64 %32, i64* %34, align 8
  %35 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %36 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %35, i32 0, i32 29
  %37 = load i32, i32* %36, align 8
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %50

39:                                               ; preds = %2
  %40 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %41 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %40, i32 0, i32 12
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %46 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %47 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %46, i32 0, i32 13
  %48 = load i32, i32* %47, align 4
  call void @emit_restart.20(%struct.phuff_entropy_encoder* %45, i32 %48)
  br label %49

49:                                               ; preds = %44, %39
  br label %50

50:                                               ; preds = %49, %2
  store i32 0, i32* %9, align 4
  br label %51

51:                                               ; preds = %125, %50
  %52 = load i32, i32* %9, align 4
  %53 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %54 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %53, i32 0, i32 45
  %55 = load i32, i32* %54, align 8
  %56 = icmp slt i32 %52, %55
  br i1 %56, label %57, label %128

57:                                               ; preds = %51
  %58 = load [64 x i16]**, [64 x i16]*** %4, align 8
  %59 = load i32, i32* %9, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [64 x i16]*, [64 x i16]** %58, i64 %60
  %62 = load [64 x i16]*, [64 x i16]** %61, align 8
  store [64 x i16]* %62, [64 x i16]** %12, align 8
  %63 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %64 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %63, i32 0, i32 46
  %65 = load i32, i32* %9, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [10 x i32], [10 x i32]* %64, i64 0, i64 %66
  %68 = load i32, i32* %67, align 4
  store i32 %68, i32* %10, align 4
  %69 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %70 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %69, i32 0, i32 42
  %71 = load i32, i32* %10, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %70, i64 0, i64 %72
  %74 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %73, align 8
  store %struct.jpeg_component_info* %74, %struct.jpeg_component_info** %13, align 8
  %75 = load [64 x i16]*, [64 x i16]** %12, align 8
  %76 = getelementptr inbounds [64 x i16], [64 x i16]* %75, i64 0, i64 0
  %77 = load i16, i16* %76, align 2
  %78 = sext i16 %77 to i32
  %79 = load i32, i32* %11, align 4
  %80 = ashr i32 %78, %79
  store i32 %80, i32* %7, align 4
  %81 = load i32, i32* %7, align 4
  %82 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %83 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %82, i32 0, i32 7
  %84 = load i32, i32* %10, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [4 x i32], [4 x i32]* %83, i64 0, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = sub nsw i32 %81, %87
  store i32 %88, i32* %6, align 4
  %89 = load i32, i32* %7, align 4
  %90 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %91 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %90, i32 0, i32 7
  %92 = load i32, i32* %10, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [4 x i32], [4 x i32]* %91, i64 0, i64 %93
  store i32 %89, i32* %94, align 4
  %95 = load i32, i32* %6, align 4
  store i32 %95, i32* %7, align 4
  %96 = load i32, i32* %6, align 4
  %97 = icmp slt i32 %96, 0
  br i1 %97, label %98, label %103

98:                                               ; preds = %57
  %99 = load i32, i32* %6, align 4
  %100 = sub nsw i32 0, %99
  store i32 %100, i32* %6, align 4
  %101 = load i32, i32* %7, align 4
  %102 = add nsw i32 %101, -1
  store i32 %102, i32* %7, align 4
  br label %103

103:                                              ; preds = %98, %57
  store i32 0, i32* %8, align 4
  br label %104

104:                                              ; preds = %107, %103
  %105 = load i32, i32* %6, align 4
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %112

107:                                              ; preds = %104
  %108 = load i32, i32* %8, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %8, align 4
  %110 = load i32, i32* %6, align 4
  %111 = ashr i32 %110, 1
  store i32 %111, i32* %6, align 4
  br label %104

112:                                              ; preds = %104
  %113 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %114 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %13, align 8
  %115 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %114, i32 0, i32 5
  %116 = load i32, i32* %115, align 4
  %117 = load i32, i32* %8, align 4
  call void @emit_symbol(%struct.phuff_entropy_encoder* %113, i32 %116, i32 %117)
  %118 = load i32, i32* %8, align 4
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %120, label %124

120:                                              ; preds = %112
  %121 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %122 = load i32, i32* %7, align 4
  %123 = load i32, i32* %8, align 4
  call void @emit_bits.18(%struct.phuff_entropy_encoder* %121, i32 %122, i32 %123)
  br label %124

124:                                              ; preds = %120, %112
  br label %125

125:                                              ; preds = %124
  %126 = load i32, i32* %9, align 4
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %9, align 4
  br label %51

128:                                              ; preds = %51
  %129 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %130 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %129, i32 0, i32 2
  %131 = load i8*, i8** %130, align 8
  %132 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %133 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %132, i32 0, i32 5
  %134 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %133, align 8
  %135 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %134, i32 0, i32 0
  store i8* %131, i8** %135, align 8
  %136 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %137 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %136, i32 0, i32 3
  %138 = load i64, i64* %137, align 8
  %139 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %140 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %139, i32 0, i32 5
  %141 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %140, align 8
  %142 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %141, i32 0, i32 1
  store i64 %138, i64* %142, align 8
  %143 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %144 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %143, i32 0, i32 29
  %145 = load i32, i32* %144, align 8
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %147, label %171

147:                                              ; preds = %128
  %148 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %149 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %148, i32 0, i32 12
  %150 = load i32, i32* %149, align 8
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %166

152:                                              ; preds = %147
  %153 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %154 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %153, i32 0, i32 29
  %155 = load i32, i32* %154, align 8
  %156 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %157 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %156, i32 0, i32 12
  store i32 %155, i32* %157, align 8
  %158 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %159 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %158, i32 0, i32 13
  %160 = load i32, i32* %159, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %159, align 4
  %162 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %163 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %162, i32 0, i32 13
  %164 = load i32, i32* %163, align 4
  %165 = and i32 %164, 7
  store i32 %165, i32* %163, align 4
  br label %166

166:                                              ; preds = %152, %147
  %167 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %168 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %167, i32 0, i32 12
  %169 = load i32, i32* %168, align 8
  %170 = add i32 %169, -1
  store i32 %170, i32* %168, align 8
  br label %171

171:                                              ; preds = %166, %128
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @encode_mcu_AC_first(%struct.jpeg_compress_struct.58* %0, [64 x i16]** %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.58*, align 8
  %4 = alloca [64 x i16]**, align 8
  %5 = alloca %struct.phuff_entropy_encoder*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [64 x i16]*, align 8
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %3, align 8
  store [64 x i16]** %1, [64 x i16]*** %4, align 8
  %14 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %14, i32 0, i32 59
  %16 = load %struct.jpeg_entropy_encoder.75*, %struct.jpeg_entropy_encoder.75** %15, align 8
  %17 = bitcast %struct.jpeg_entropy_encoder.75* %16 to %struct.phuff_entropy_encoder*
  store %struct.phuff_entropy_encoder* %17, %struct.phuff_entropy_encoder** %5, align 8
  %18 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %19 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %18, i32 0, i32 48
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %11, align 4
  %21 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %21, i32 0, i32 50
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %12, align 4
  %24 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %25 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %24, i32 0, i32 5
  %26 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %26, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %30 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %29, i32 0, i32 2
  store i8* %28, i8** %30, align 8
  %31 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %32 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %31, i32 0, i32 5
  %33 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %33, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %37 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %36, i32 0, i32 3
  store i64 %35, i64* %37, align 8
  %38 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %39 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %38, i32 0, i32 29
  %40 = load i32, i32* %39, align 8
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %53

42:                                               ; preds = %2
  %43 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %44 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %43, i32 0, i32 12
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %42
  %48 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %49 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %50 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %49, i32 0, i32 13
  %51 = load i32, i32* %50, align 4
  call void @emit_restart.20(%struct.phuff_entropy_encoder* %48, i32 %51)
  br label %52

52:                                               ; preds = %47, %42
  br label %53

53:                                               ; preds = %52, %2
  %54 = load [64 x i16]**, [64 x i16]*** %4, align 8
  %55 = getelementptr inbounds [64 x i16]*, [64 x i16]** %54, i64 0
  %56 = load [64 x i16]*, [64 x i16]** %55, align 8
  store [64 x i16]* %56, [64 x i16]** %13, align 8
  store i32 0, i32* %9, align 4
  %57 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %58 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %57, i32 0, i32 47
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %10, align 4
  br label %60

60:                                               ; preds = %138, %53
  %61 = load i32, i32* %10, align 4
  %62 = load i32, i32* %11, align 4
  %63 = icmp sle i32 %61, %62
  br i1 %63, label %64, label %141

64:                                               ; preds = %60
  %65 = load [64 x i16]*, [64 x i16]** %13, align 8
  %66 = load i32, i32* %10, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [64 x i16], [64 x i16]* %65, i64 0, i64 %70
  %72 = load i16, i16* %71, align 2
  %73 = sext i16 %72 to i32
  store i32 %73, i32* %6, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %64
  %76 = load i32, i32* %9, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %9, align 4
  br label %138

78:                                               ; preds = %64
  %79 = load i32, i32* %6, align 4
  %80 = icmp slt i32 %79, 0
  br i1 %80, label %81, label %89

81:                                               ; preds = %78
  %82 = load i32, i32* %6, align 4
  %83 = sub nsw i32 0, %82
  store i32 %83, i32* %6, align 4
  %84 = load i32, i32* %12, align 4
  %85 = load i32, i32* %6, align 4
  %86 = ashr i32 %85, %84
  store i32 %86, i32* %6, align 4
  %87 = load i32, i32* %6, align 4
  %88 = xor i32 %87, -1
  store i32 %88, i32* %7, align 4
  br label %94

89:                                               ; preds = %78
  %90 = load i32, i32* %12, align 4
  %91 = load i32, i32* %6, align 4
  %92 = ashr i32 %91, %90
  store i32 %92, i32* %6, align 4
  %93 = load i32, i32* %6, align 4
  store i32 %93, i32* %7, align 4
  br label %94

94:                                               ; preds = %89, %81
  %95 = load i32, i32* %6, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %94
  %98 = load i32, i32* %9, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %9, align 4
  br label %138

100:                                              ; preds = %94
  %101 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %102 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %101, i32 0, i32 9
  %103 = load i32, i32* %102, align 4
  %104 = icmp ugt i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %100
  %106 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  call void @emit_eobrun(%struct.phuff_entropy_encoder* %106)
  br label %107

107:                                              ; preds = %105, %100
  br label %108

108:                                              ; preds = %111, %107
  %109 = load i32, i32* %9, align 4
  %110 = icmp sgt i32 %109, 15
  br i1 %110, label %111, label %118

111:                                              ; preds = %108
  %112 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %113 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %114 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %113, i32 0, i32 8
  %115 = load i32, i32* %114, align 8
  call void @emit_symbol(%struct.phuff_entropy_encoder* %112, i32 %115, i32 240)
  %116 = load i32, i32* %9, align 4
  %117 = sub nsw i32 %116, 16
  store i32 %117, i32* %9, align 4
  br label %108

118:                                              ; preds = %108
  store i32 1, i32* %8, align 4
  br label %119

119:                                              ; preds = %123, %118
  %120 = load i32, i32* %6, align 4
  %121 = ashr i32 %120, 1
  store i32 %121, i32* %6, align 4
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %119
  %124 = load i32, i32* %8, align 4
  %125 = add nsw i32 %124, 1
  store i32 %125, i32* %8, align 4
  br label %119

126:                                              ; preds = %119
  %127 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %128 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %129 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %128, i32 0, i32 8
  %130 = load i32, i32* %129, align 8
  %131 = load i32, i32* %9, align 4
  %132 = shl i32 %131, 4
  %133 = load i32, i32* %8, align 4
  %134 = add nsw i32 %132, %133
  call void @emit_symbol(%struct.phuff_entropy_encoder* %127, i32 %130, i32 %134)
  %135 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %136 = load i32, i32* %7, align 4
  %137 = load i32, i32* %8, align 4
  call void @emit_bits.18(%struct.phuff_entropy_encoder* %135, i32 %136, i32 %137)
  store i32 0, i32* %9, align 4
  br label %138

138:                                              ; preds = %126, %97, %75
  %139 = load i32, i32* %10, align 4
  %140 = add nsw i32 %139, 1
  store i32 %140, i32* %10, align 4
  br label %60

141:                                              ; preds = %60
  %142 = load i32, i32* %9, align 4
  %143 = icmp sgt i32 %142, 0
  br i1 %143, label %144, label %156

144:                                              ; preds = %141
  %145 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %146 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %145, i32 0, i32 9
  %147 = load i32, i32* %146, align 4
  %148 = add i32 %147, 1
  store i32 %148, i32* %146, align 4
  %149 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %150 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %149, i32 0, i32 9
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 32767
  br i1 %152, label %153, label %155

153:                                              ; preds = %144
  %154 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  call void @emit_eobrun(%struct.phuff_entropy_encoder* %154)
  br label %155

155:                                              ; preds = %153, %144
  br label %156

156:                                              ; preds = %155, %141
  %157 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %158 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %157, i32 0, i32 2
  %159 = load i8*, i8** %158, align 8
  %160 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %161 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %160, i32 0, i32 5
  %162 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %161, align 8
  %163 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %162, i32 0, i32 0
  store i8* %159, i8** %163, align 8
  %164 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %165 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %164, i32 0, i32 3
  %166 = load i64, i64* %165, align 8
  %167 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %168 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %167, i32 0, i32 5
  %169 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %168, align 8
  %170 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %169, i32 0, i32 1
  store i64 %166, i64* %170, align 8
  %171 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %172 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %171, i32 0, i32 29
  %173 = load i32, i32* %172, align 8
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %175, label %199

175:                                              ; preds = %156
  %176 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %177 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %176, i32 0, i32 12
  %178 = load i32, i32* %177, align 8
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %194

180:                                              ; preds = %175
  %181 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %182 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %181, i32 0, i32 29
  %183 = load i32, i32* %182, align 8
  %184 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %185 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %184, i32 0, i32 12
  store i32 %183, i32* %185, align 8
  %186 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %187 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %186, i32 0, i32 13
  %188 = load i32, i32* %187, align 4
  %189 = add nsw i32 %188, 1
  store i32 %189, i32* %187, align 4
  %190 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %191 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %190, i32 0, i32 13
  %192 = load i32, i32* %191, align 4
  %193 = and i32 %192, 7
  store i32 %193, i32* %191, align 4
  br label %194

194:                                              ; preds = %180, %175
  %195 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %196 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %195, i32 0, i32 12
  %197 = load i32, i32* %196, align 8
  %198 = add i32 %197, -1
  store i32 %198, i32* %196, align 8
  br label %199

199:                                              ; preds = %194, %156
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @encode_mcu_DC_refine(%struct.jpeg_compress_struct.58* %0, [64 x i16]** %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.58*, align 8
  %4 = alloca [64 x i16]**, align 8
  %5 = alloca %struct.phuff_entropy_encoder*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [64 x i16]*, align 8
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %3, align 8
  store [64 x i16]** %1, [64 x i16]*** %4, align 8
  %10 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %10, i32 0, i32 59
  %12 = load %struct.jpeg_entropy_encoder.75*, %struct.jpeg_entropy_encoder.75** %11, align 8
  %13 = bitcast %struct.jpeg_entropy_encoder.75* %12 to %struct.phuff_entropy_encoder*
  store %struct.phuff_entropy_encoder* %13, %struct.phuff_entropy_encoder** %5, align 8
  %14 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %14, i32 0, i32 50
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %8, align 4
  %17 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %17, i32 0, i32 5
  %19 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %19, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %23 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %22, i32 0, i32 2
  store i8* %21, i8** %23, align 8
  %24 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %25 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %24, i32 0, i32 5
  %26 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %26, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %30 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %29, i32 0, i32 3
  store i64 %28, i64* %30, align 8
  %31 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %32 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %31, i32 0, i32 29
  %33 = load i32, i32* %32, align 8
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %46

35:                                               ; preds = %2
  %36 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %37 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %36, i32 0, i32 12
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %35
  %41 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %42 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %43 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %42, i32 0, i32 13
  %44 = load i32, i32* %43, align 4
  call void @emit_restart.20(%struct.phuff_entropy_encoder* %41, i32 %44)
  br label %45

45:                                               ; preds = %40, %35
  br label %46

46:                                               ; preds = %45, %2
  store i32 0, i32* %7, align 4
  br label %47

47:                                               ; preds = %67, %46
  %48 = load i32, i32* %7, align 4
  %49 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %50 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %49, i32 0, i32 45
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %48, %51
  br i1 %52, label %53, label %70

53:                                               ; preds = %47
  %54 = load [64 x i16]**, [64 x i16]*** %4, align 8
  %55 = load i32, i32* %7, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [64 x i16]*, [64 x i16]** %54, i64 %56
  %58 = load [64 x i16]*, [64 x i16]** %57, align 8
  store [64 x i16]* %58, [64 x i16]** %9, align 8
  %59 = load [64 x i16]*, [64 x i16]** %9, align 8
  %60 = getelementptr inbounds [64 x i16], [64 x i16]* %59, i64 0, i64 0
  %61 = load i16, i16* %60, align 2
  %62 = sext i16 %61 to i32
  store i32 %62, i32* %6, align 4
  %63 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %64 = load i32, i32* %6, align 4
  %65 = load i32, i32* %8, align 4
  %66 = ashr i32 %64, %65
  call void @emit_bits.18(%struct.phuff_entropy_encoder* %63, i32 %66, i32 1)
  br label %67

67:                                               ; preds = %53
  %68 = load i32, i32* %7, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %7, align 4
  br label %47

70:                                               ; preds = %47
  %71 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %72 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %71, i32 0, i32 2
  %73 = load i8*, i8** %72, align 8
  %74 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %75 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %74, i32 0, i32 5
  %76 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %75, align 8
  %77 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %76, i32 0, i32 0
  store i8* %73, i8** %77, align 8
  %78 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %79 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %78, i32 0, i32 3
  %80 = load i64, i64* %79, align 8
  %81 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %82 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %81, i32 0, i32 5
  %83 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %82, align 8
  %84 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %83, i32 0, i32 1
  store i64 %80, i64* %84, align 8
  %85 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %86 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %85, i32 0, i32 29
  %87 = load i32, i32* %86, align 8
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %113

89:                                               ; preds = %70
  %90 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %91 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %90, i32 0, i32 12
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %108

94:                                               ; preds = %89
  %95 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %96 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %95, i32 0, i32 29
  %97 = load i32, i32* %96, align 8
  %98 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %99 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %98, i32 0, i32 12
  store i32 %97, i32* %99, align 8
  %100 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %101 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %100, i32 0, i32 13
  %102 = load i32, i32* %101, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %101, align 4
  %104 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %105 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %104, i32 0, i32 13
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 7
  store i32 %107, i32* %105, align 4
  br label %108

108:                                              ; preds = %94, %89
  %109 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %110 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %109, i32 0, i32 12
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, -1
  store i32 %112, i32* %110, align 8
  br label %113

113:                                              ; preds = %108, %70
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @encode_mcu_AC_refine(%struct.jpeg_compress_struct.58* %0, [64 x i16]** %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.58*, align 8
  %4 = alloca [64 x i16]**, align 8
  %5 = alloca %struct.phuff_entropy_encoder*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca [64 x i16]*, align 8
  %15 = alloca [64 x i32], align 16
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %3, align 8
  store [64 x i16]** %1, [64 x i16]*** %4, align 8
  %16 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %16, i32 0, i32 59
  %18 = load %struct.jpeg_entropy_encoder.75*, %struct.jpeg_entropy_encoder.75** %17, align 8
  %19 = bitcast %struct.jpeg_entropy_encoder.75* %18 to %struct.phuff_entropy_encoder*
  store %struct.phuff_entropy_encoder* %19, %struct.phuff_entropy_encoder** %5, align 8
  %20 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %20, i32 0, i32 48
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %12, align 4
  %23 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %23, i32 0, i32 50
  %25 = load i32, i32* %24, align 8
  store i32 %25, i32* %13, align 4
  %26 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %27 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %26, i32 0, i32 5
  %28 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %28, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %32 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %31, i32 0, i32 2
  store i8* %30, i8** %32, align 8
  %33 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %34 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %33, i32 0, i32 5
  %35 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %34, align 8
  %36 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %35, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %39 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %38, i32 0, i32 3
  store i64 %37, i64* %39, align 8
  %40 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %41 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %40, i32 0, i32 29
  %42 = load i32, i32* %41, align 8
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %55

44:                                               ; preds = %2
  %45 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %46 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %45, i32 0, i32 12
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %51 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %52 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %51, i32 0, i32 13
  %53 = load i32, i32* %52, align 4
  call void @emit_restart.20(%struct.phuff_entropy_encoder* %50, i32 %53)
  br label %54

54:                                               ; preds = %49, %44
  br label %55

55:                                               ; preds = %54, %2
  %56 = load [64 x i16]**, [64 x i16]*** %4, align 8
  %57 = getelementptr inbounds [64 x i16]*, [64 x i16]** %56, i64 0
  %58 = load [64 x i16]*, [64 x i16]** %57, align 8
  store [64 x i16]* %58, [64 x i16]** %14, align 8
  store i32 0, i32* %9, align 4
  %59 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %60 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %59, i32 0, i32 47
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %8, align 4
  br label %62

62:                                               ; preds = %94, %55
  %63 = load i32, i32* %8, align 4
  %64 = load i32, i32* %12, align 4
  %65 = icmp sle i32 %63, %64
  br i1 %65, label %66, label %97

66:                                               ; preds = %62
  %67 = load [64 x i16]*, [64 x i16]** %14, align 8
  %68 = load i32, i32* %8, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [64 x i16], [64 x i16]* %67, i64 0, i64 %72
  %74 = load i16, i16* %73, align 2
  %75 = sext i16 %74 to i32
  store i32 %75, i32* %6, align 4
  %76 = load i32, i32* %6, align 4
  %77 = icmp slt i32 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %66
  %79 = load i32, i32* %6, align 4
  %80 = sub nsw i32 0, %79
  store i32 %80, i32* %6, align 4
  br label %81

81:                                               ; preds = %78, %66
  %82 = load i32, i32* %13, align 4
  %83 = load i32, i32* %6, align 4
  %84 = ashr i32 %83, %82
  store i32 %84, i32* %6, align 4
  %85 = load i32, i32* %6, align 4
  %86 = load i32, i32* %8, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [64 x i32], [64 x i32]* %15, i64 0, i64 %87
  store i32 %85, i32* %88, align 4
  %89 = load i32, i32* %6, align 4
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i32, i32* %8, align 4
  store i32 %92, i32* %9, align 4
  br label %93

93:                                               ; preds = %91, %81
  br label %94

94:                                               ; preds = %93
  %95 = load i32, i32* %8, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %8, align 4
  br label %62

97:                                               ; preds = %62
  store i32 0, i32* %7, align 4
  store i32 0, i32* %11, align 4
  %98 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %99 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %98, i32 0, i32 11
  %100 = load i8*, i8** %99, align 8
  %101 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %102 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %101, i32 0, i32 10
  %103 = load i32, i32* %102, align 8
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i8, i8* %100, i64 %104
  store i8* %105, i8** %10, align 8
  %106 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %107 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %106, i32 0, i32 47
  %108 = load i32, i32* %107, align 4
  store i32 %108, i32* %8, align 4
  br label %109

109:                                              ; preds = %187, %97
  %110 = load i32, i32* %8, align 4
  %111 = load i32, i32* %12, align 4
  %112 = icmp sle i32 %110, %111
  br i1 %112, label %113, label %190

113:                                              ; preds = %109
  %114 = load i32, i32* %8, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [64 x i32], [64 x i32]* %15, i64 0, i64 %115
  %117 = load i32, i32* %116, align 4
  store i32 %117, i32* %6, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %113
  %120 = load i32, i32* %7, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %7, align 4
  br label %187

122:                                              ; preds = %113
  br label %123

123:                                              ; preds = %132, %122
  %124 = load i32, i32* %7, align 4
  %125 = icmp sgt i32 %124, 15
  br i1 %125, label %126, label %130

126:                                              ; preds = %123
  %127 = load i32, i32* %8, align 4
  %128 = load i32, i32* %9, align 4
  %129 = icmp sle i32 %127, %128
  br label %130

130:                                              ; preds = %126, %123
  %131 = phi i1 [ false, %123 ], [ %129, %126 ]
  br i1 %131, label %132, label %146

132:                                              ; preds = %130
  %133 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  call void @emit_eobrun(%struct.phuff_entropy_encoder* %133)
  %134 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %135 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %136 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %135, i32 0, i32 8
  %137 = load i32, i32* %136, align 8
  call void @emit_symbol(%struct.phuff_entropy_encoder* %134, i32 %137, i32 240)
  %138 = load i32, i32* %7, align 4
  %139 = sub nsw i32 %138, 16
  store i32 %139, i32* %7, align 4
  %140 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %141 = load i8*, i8** %10, align 8
  %142 = load i32, i32* %11, align 4
  call void @emit_buffered_bits(%struct.phuff_entropy_encoder* %140, i8* %141, i32 %142)
  %143 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %144 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %143, i32 0, i32 11
  %145 = load i8*, i8** %144, align 8
  store i8* %145, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %123

146:                                              ; preds = %130
  %147 = load i32, i32* %6, align 4
  %148 = icmp sgt i32 %147, 1
  br i1 %148, label %149, label %158

149:                                              ; preds = %146
  %150 = load i32, i32* %6, align 4
  %151 = and i32 %150, 1
  %152 = trunc i32 %151 to i8
  %153 = load i8*, i8** %10, align 8
  %154 = load i32, i32* %11, align 4
  %155 = add i32 %154, 1
  store i32 %155, i32* %11, align 4
  %156 = zext i32 %154 to i64
  %157 = getelementptr inbounds i8, i8* %153, i64 %156
  store i8 %152, i8* %157, align 1
  br label %187

158:                                              ; preds = %146
  %159 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  call void @emit_eobrun(%struct.phuff_entropy_encoder* %159)
  %160 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %161 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %162 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %161, i32 0, i32 8
  %163 = load i32, i32* %162, align 8
  %164 = load i32, i32* %7, align 4
  %165 = shl i32 %164, 4
  %166 = add nsw i32 %165, 1
  call void @emit_symbol(%struct.phuff_entropy_encoder* %160, i32 %163, i32 %166)
  %167 = load [64 x i16]*, [64 x i16]** %14, align 8
  %168 = load i32, i32* %8, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %169
  %171 = load i32, i32* %170, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds [64 x i16], [64 x i16]* %167, i64 0, i64 %172
  %174 = load i16, i16* %173, align 2
  %175 = sext i16 %174 to i32
  %176 = icmp slt i32 %175, 0
  %177 = zext i1 %176 to i64
  %178 = select i1 %176, i32 0, i32 1
  store i32 %178, i32* %6, align 4
  %179 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %180 = load i32, i32* %6, align 4
  call void @emit_bits.18(%struct.phuff_entropy_encoder* %179, i32 %180, i32 1)
  %181 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %182 = load i8*, i8** %10, align 8
  %183 = load i32, i32* %11, align 4
  call void @emit_buffered_bits(%struct.phuff_entropy_encoder* %181, i8* %182, i32 %183)
  %184 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %185 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %184, i32 0, i32 11
  %186 = load i8*, i8** %185, align 8
  store i8* %186, i8** %10, align 8
  store i32 0, i32* %11, align 4
  store i32 0, i32* %7, align 4
  br label %187

187:                                              ; preds = %158, %149, %119
  %188 = load i32, i32* %8, align 4
  %189 = add nsw i32 %188, 1
  store i32 %189, i32* %8, align 4
  br label %109

190:                                              ; preds = %109
  %191 = load i32, i32* %7, align 4
  %192 = icmp sgt i32 %191, 0
  br i1 %192, label %196, label %193

193:                                              ; preds = %190
  %194 = load i32, i32* %11, align 4
  %195 = icmp ugt i32 %194, 0
  br i1 %195, label %196, label %218

196:                                              ; preds = %193, %190
  %197 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %198 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %197, i32 0, i32 9
  %199 = load i32, i32* %198, align 4
  %200 = add i32 %199, 1
  store i32 %200, i32* %198, align 4
  %201 = load i32, i32* %11, align 4
  %202 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %203 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %202, i32 0, i32 10
  %204 = load i32, i32* %203, align 8
  %205 = add i32 %204, %201
  store i32 %205, i32* %203, align 8
  %206 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %207 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %206, i32 0, i32 9
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %208, 32767
  br i1 %209, label %215, label %210

210:                                              ; preds = %196
  %211 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %212 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %211, i32 0, i32 10
  %213 = load i32, i32* %212, align 8
  %214 = icmp ugt i32 %213, 937
  br i1 %214, label %215, label %217

215:                                              ; preds = %210, %196
  %216 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  call void @emit_eobrun(%struct.phuff_entropy_encoder* %216)
  br label %217

217:                                              ; preds = %215, %210
  br label %218

218:                                              ; preds = %217, %193
  %219 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %220 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %219, i32 0, i32 2
  %221 = load i8*, i8** %220, align 8
  %222 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %223 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %222, i32 0, i32 5
  %224 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %223, align 8
  %225 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %224, i32 0, i32 0
  store i8* %221, i8** %225, align 8
  %226 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %227 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %226, i32 0, i32 3
  %228 = load i64, i64* %227, align 8
  %229 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %230 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %229, i32 0, i32 5
  %231 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %230, align 8
  %232 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %231, i32 0, i32 1
  store i64 %228, i64* %232, align 8
  %233 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %234 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %233, i32 0, i32 29
  %235 = load i32, i32* %234, align 8
  %236 = icmp ne i32 %235, 0
  br i1 %236, label %237, label %261

237:                                              ; preds = %218
  %238 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %239 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %238, i32 0, i32 12
  %240 = load i32, i32* %239, align 8
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %256

242:                                              ; preds = %237
  %243 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %3, align 8
  %244 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %243, i32 0, i32 29
  %245 = load i32, i32* %244, align 8
  %246 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %247 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %246, i32 0, i32 12
  store i32 %245, i32* %247, align 8
  %248 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %249 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %248, i32 0, i32 13
  %250 = load i32, i32* %249, align 4
  %251 = add nsw i32 %250, 1
  store i32 %251, i32* %249, align 4
  %252 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %253 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %252, i32 0, i32 13
  %254 = load i32, i32* %253, align 4
  %255 = and i32 %254, 7
  store i32 %255, i32* %253, align 4
  br label %256

256:                                              ; preds = %242, %237
  %257 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8
  %258 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %257, i32 0, i32 12
  %259 = load i32, i32* %258, align 8
  %260 = add i32 %259, -1
  store i32 %260, i32* %258, align 8
  br label %261

261:                                              ; preds = %256, %218
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_pass_gather_phuff(%struct.jpeg_compress_struct.58* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.58*, align 8
  %3 = alloca %struct.phuff_entropy_encoder*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.jpeg_component_info*, align 8
  %8 = alloca %struct.JHUFF_TBL**, align 8
  %9 = alloca [4 x i32], align 16
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %2, align 8
  %10 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %11 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %10, i32 0, i32 59
  %12 = load %struct.jpeg_entropy_encoder.75*, %struct.jpeg_entropy_encoder.75** %11, align 8
  %13 = bitcast %struct.jpeg_entropy_encoder.75* %12 to %struct.phuff_entropy_encoder*
  store %struct.phuff_entropy_encoder* %13, %struct.phuff_entropy_encoder** %3, align 8
  %14 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  call void @emit_eobrun(%struct.phuff_entropy_encoder* %14)
  %15 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %15, i32 0, i32 47
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  %19 = zext i1 %18 to i32
  store i32 %19, i32* %4, align 4
  %20 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 0
  %21 = bitcast i32* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %21, i8 0, i64 16, i1 false)
  store i32 0, i32* %5, align 4
  br label %22

22:                                               ; preds = %95, %1
  %23 = load i32, i32* %5, align 4
  %24 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %25 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %24, i32 0, i32 41
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %23, %26
  br i1 %27, label %28, label %98

28:                                               ; preds = %22
  %29 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %30 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %29, i32 0, i32 42
  %31 = load i32, i32* %5, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %30, i64 0, i64 %32
  %34 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %33, align 8
  store %struct.jpeg_component_info* %34, %struct.jpeg_component_info** %7, align 8
  %35 = load i32, i32* %4, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %47

37:                                               ; preds = %28
  %38 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %39 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %38, i32 0, i32 49
  %40 = load i32, i32* %39, align 4
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  br label %95

43:                                               ; preds = %37
  %44 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %45 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %44, i32 0, i32 5
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %6, align 4
  br label %51

47:                                               ; preds = %28
  %48 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %49 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %48, i32 0, i32 6
  %50 = load i32, i32* %49, align 8
  store i32 %50, i32* %6, align 4
  br label %51

51:                                               ; preds = %47, %43
  %52 = load i32, i32* %6, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %94, label %57

57:                                               ; preds = %51
  %58 = load i32, i32* %4, align 4
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %66

60:                                               ; preds = %57
  %61 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %62 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %61, i32 0, i32 16
  %63 = load i32, i32* %6, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %62, i64 0, i64 %64
  store %struct.JHUFF_TBL** %65, %struct.JHUFF_TBL*** %8, align 8
  br label %72

66:                                               ; preds = %57
  %67 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %68 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %67, i32 0, i32 17
  %69 = load i32, i32* %6, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %68, i64 0, i64 %70
  store %struct.JHUFF_TBL** %71, %struct.JHUFF_TBL*** %8, align 8
  br label %72

72:                                               ; preds = %66, %60
  %73 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %8, align 8
  %74 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %73, align 8
  %75 = icmp eq %struct.JHUFF_TBL* %74, null
  br i1 %75, label %76, label %81

76:                                               ; preds = %72
  %77 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %78 = bitcast %struct.jpeg_compress_struct.58* %77 to %struct.jpeg_common_struct*
  %79 = call %struct.JHUFF_TBL* bitcast (%struct.JHUFF_TBL* (%struct.jpeg_common_struct.212*)* @jpeg_alloc_huff_table to %struct.JHUFF_TBL* (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %78)
  %80 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %8, align 8
  store %struct.JHUFF_TBL* %79, %struct.JHUFF_TBL** %80, align 8
  br label %81

81:                                               ; preds = %76, %72
  %82 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %83 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %8, align 8
  %84 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %83, align 8
  %85 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %86 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %85, i32 0, i32 15
  %87 = load i32, i32* %6, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [4 x i64*], [4 x i64*]* %86, i64 0, i64 %88
  %90 = load i64*, i64** %89, align 8
  call void bitcast (void (%struct.jpeg_compress_struct*, %struct.JHUFF_TBL*, i64*)* @jpeg_gen_optimal_table to void (%struct.jpeg_compress_struct.58*, %struct.JHUFF_TBL*, i64*)*)(%struct.jpeg_compress_struct.58* %82, %struct.JHUFF_TBL* %84, i64* %90)
  %91 = load i32, i32* %6, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %92
  store i32 1, i32* %93, align 4
  br label %94

94:                                               ; preds = %81, %51
  br label %95

95:                                               ; preds = %94, %42
  %96 = load i32, i32* %5, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %5, align 4
  br label %22

98:                                               ; preds = %22
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_pass_phuff(%struct.jpeg_compress_struct.58* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.58*, align 8
  %3 = alloca %struct.phuff_entropy_encoder*, align 8
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %2, align 8
  %4 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %4, i32 0, i32 59
  %6 = load %struct.jpeg_entropy_encoder.75*, %struct.jpeg_entropy_encoder.75** %5, align 8
  %7 = bitcast %struct.jpeg_entropy_encoder.75* %6 to %struct.phuff_entropy_encoder*
  store %struct.phuff_entropy_encoder* %7, %struct.phuff_entropy_encoder** %3, align 8
  %8 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %8, i32 0, i32 5
  %10 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %10, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %14 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %13, i32 0, i32 2
  store i8* %12, i8** %14, align 8
  %15 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %15, i32 0, i32 5
  %17 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %17, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %21 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %20, i32 0, i32 3
  store i64 %19, i64* %21, align 8
  %22 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  call void @emit_eobrun(%struct.phuff_entropy_encoder* %22)
  %23 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  call void @flush_bits.17(%struct.phuff_entropy_encoder* %23)
  %24 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %25 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %24, i32 0, i32 2
  %26 = load i8*, i8** %25, align 8
  %27 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %28 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %27, i32 0, i32 5
  %29 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %29, i32 0, i32 0
  store i8* %26, i8** %30, align 8
  %31 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %32 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %31, i32 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %34, i32 0, i32 5
  %36 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %36, i32 0, i32 1
  store i64 %33, i64* %37, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_eobrun(%struct.phuff_entropy_encoder* %0) #0 {
  %2 = alloca %struct.phuff_entropy_encoder*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %struct.phuff_entropy_encoder* %0, %struct.phuff_entropy_encoder** %2, align 8
  %5 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %6 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i32 0, i32 9
  %7 = load i32, i32* %6, align 4
  %8 = icmp ugt i32 %7, 0
  br i1 %8, label %9, label %47

9:                                                ; preds = %1
  %10 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %11 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %10, i32 0, i32 9
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %13

13:                                               ; preds = %17, %9
  %14 = load i32, i32* %3, align 4
  %15 = ashr i32 %14, 1
  store i32 %15, i32* %3, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = load i32, i32* %4, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %4, align 4
  br label %13

20:                                               ; preds = %13
  %21 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %22 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %23 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %22, i32 0, i32 8
  %24 = load i32, i32* %23, align 8
  %25 = load i32, i32* %4, align 4
  %26 = shl i32 %25, 4
  call void @emit_symbol(%struct.phuff_entropy_encoder* %21, i32 %24, i32 %26)
  %27 = load i32, i32* %4, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %20
  %30 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %31 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %32 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %31, i32 0, i32 9
  %33 = load i32, i32* %32, align 4
  %34 = load i32, i32* %4, align 4
  call void @emit_bits.18(%struct.phuff_entropy_encoder* %30, i32 %33, i32 %34)
  br label %35

35:                                               ; preds = %29, %20
  %36 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %37 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %36, i32 0, i32 9
  store i32 0, i32* %37, align 4
  %38 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %39 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %40 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %39, i32 0, i32 11
  %41 = load i8*, i8** %40, align 8
  %42 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %43 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %42, i32 0, i32 10
  %44 = load i32, i32* %43, align 8
  call void @emit_buffered_bits(%struct.phuff_entropy_encoder* %38, i8* %41, i32 %44)
  %45 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %46 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %45, i32 0, i32 10
  store i32 0, i32* %46, align 8
  br label %47

47:                                               ; preds = %35, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @flush_bits.17(%struct.phuff_entropy_encoder* %0) #0 {
  %2 = alloca %struct.phuff_entropy_encoder*, align 8
  store %struct.phuff_entropy_encoder* %0, %struct.phuff_entropy_encoder** %2, align 8
  %3 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  call void @emit_bits.18(%struct.phuff_entropy_encoder* %3, i32 127, i32 7)
  %4 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %5 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %4, i32 0, i32 4
  store i64 0, i64* %5, align 8
  %6 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %7 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i32 0, i32 5
  store i32 0, i32* %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_bits.18(%struct.phuff_entropy_encoder* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.phuff_entropy_encoder*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.phuff_entropy_encoder* %0, %struct.phuff_entropy_encoder** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %10 = load i32, i32* %5, align 4
  %11 = zext i32 %10 to i64
  store i64 %11, i64* %7, align 8
  %12 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %13 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %12, i32 0, i32 5
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %8, align 4
  %15 = load i32, i32* %6, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %35

17:                                               ; preds = %3
  %18 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %19 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %18, i32 0, i32 6
  %20 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %20, i32 0, i32 0
  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %21, align 8
  %23 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i32 0, i32 5
  store i32 39, i32* %23, align 8
  %24 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %25 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %24, i32 0, i32 6
  %26 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %26, i32 0, i32 0
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i32 0, i32 0
  %30 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %29, align 8
  %31 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %32 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %31, i32 0, i32 6
  %33 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %32, align 8
  %34 = bitcast %struct.jpeg_compress_struct.58* %33 to %struct.jpeg_common_struct*
  call void %30(%struct.jpeg_common_struct* %34)
  br label %35

35:                                               ; preds = %17, %3
  %36 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %37 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  br label %110

41:                                               ; preds = %35
  %42 = load i32, i32* %6, align 4
  %43 = zext i32 %42 to i64
  %44 = shl i64 1, %43
  %45 = sub nsw i64 %44, 1
  %46 = load i64, i64* %7, align 8
  %47 = and i64 %46, %45
  store i64 %47, i64* %7, align 8
  %48 = load i32, i32* %6, align 4
  %49 = load i32, i32* %8, align 4
  %50 = add nsw i32 %49, %48
  store i32 %50, i32* %8, align 4
  %51 = load i32, i32* %8, align 4
  %52 = sub nsw i32 24, %51
  %53 = load i64, i64* %7, align 8
  %54 = zext i32 %52 to i64
  %55 = shl i64 %53, %54
  store i64 %55, i64* %7, align 8
  %56 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %57 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %56, i32 0, i32 4
  %58 = load i64, i64* %57, align 8
  %59 = load i64, i64* %7, align 8
  %60 = or i64 %59, %58
  store i64 %60, i64* %7, align 8
  br label %61

61:                                               ; preds = %98, %41
  %62 = load i32, i32* %8, align 4
  %63 = icmp sge i32 %62, 8
  br i1 %63, label %64, label %103

64:                                               ; preds = %61
  %65 = load i64, i64* %7, align 8
  %66 = ashr i64 %65, 16
  %67 = and i64 %66, 255
  %68 = trunc i64 %67 to i32
  store i32 %68, i32* %9, align 4
  %69 = load i32, i32* %9, align 4
  %70 = trunc i32 %69 to i8
  %71 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %72 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %71, i32 0, i32 2
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds i8, i8* %73, i32 1
  store i8* %74, i8** %72, align 8
  store i8 %70, i8* %73, align 1
  %75 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %76 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %75, i32 0, i32 3
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, -1
  store i64 %78, i64* %76, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %64
  %81 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  call void @dump_buffer.19(%struct.phuff_entropy_encoder* %81)
  br label %82

82:                                               ; preds = %80, %64
  %83 = load i32, i32* %9, align 4
  %84 = icmp eq i32 %83, 255
  br i1 %84, label %85, label %98

85:                                               ; preds = %82
  %86 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %87 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %86, i32 0, i32 2
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds i8, i8* %88, i32 1
  store i8* %89, i8** %87, align 8
  store i8 0, i8* %88, align 1
  %90 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %91 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %90, i32 0, i32 3
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, -1
  store i64 %93, i64* %91, align 8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %85
  %96 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  call void @dump_buffer.19(%struct.phuff_entropy_encoder* %96)
  br label %97

97:                                               ; preds = %95, %85
  br label %98

98:                                               ; preds = %97, %82
  %99 = load i64, i64* %7, align 8
  %100 = shl i64 %99, 8
  store i64 %100, i64* %7, align 8
  %101 = load i32, i32* %8, align 4
  %102 = sub nsw i32 %101, 8
  store i32 %102, i32* %8, align 4
  br label %61

103:                                              ; preds = %61
  %104 = load i64, i64* %7, align 8
  %105 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %106 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %105, i32 0, i32 4
  store i64 %104, i64* %106, align 8
  %107 = load i32, i32* %8, align 4
  %108 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %109 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %108, i32 0, i32 5
  store i32 %107, i32* %109, align 8
  br label %110

110:                                              ; preds = %103, %40
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @dump_buffer.19(%struct.phuff_entropy_encoder* %0) #0 {
  %2 = alloca %struct.phuff_entropy_encoder*, align 8
  %3 = alloca %struct.jpeg_destination_mgr.62*, align 8
  store %struct.phuff_entropy_encoder* %0, %struct.phuff_entropy_encoder** %2, align 8
  %4 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %5 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %4, i32 0, i32 6
  %6 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %6, i32 0, i32 5
  %8 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %7, align 8
  store %struct.jpeg_destination_mgr.62* %8, %struct.jpeg_destination_mgr.62** %3, align 8
  %9 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %3, align 8
  %10 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %9, i32 0, i32 3
  %11 = load i32 (%struct.jpeg_compress_struct.58*)*, i32 (%struct.jpeg_compress_struct.58*)** %10, align 8
  %12 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %13 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %12, i32 0, i32 6
  %14 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %13, align 8
  %15 = call i32 %11(%struct.jpeg_compress_struct.58* %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %35, label %17

17:                                               ; preds = %1
  %18 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %19 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %18, i32 0, i32 6
  %20 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %20, i32 0, i32 0
  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %21, align 8
  %23 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i32 0, i32 5
  store i32 22, i32* %23, align 8
  %24 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %25 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %24, i32 0, i32 6
  %26 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %26, i32 0, i32 0
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i32 0, i32 0
  %30 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %29, align 8
  %31 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %32 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %31, i32 0, i32 6
  %33 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %32, align 8
  %34 = bitcast %struct.jpeg_compress_struct.58* %33 to %struct.jpeg_common_struct*
  call void %30(%struct.jpeg_common_struct* %34)
  br label %35

35:                                               ; preds = %17, %1
  %36 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %3, align 8
  %37 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %36, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %40 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %39, i32 0, i32 2
  store i8* %38, i8** %40, align 8
  %41 = load %struct.jpeg_destination_mgr.62*, %struct.jpeg_destination_mgr.62** %3, align 8
  %42 = getelementptr inbounds %struct.jpeg_destination_mgr.62, %struct.jpeg_destination_mgr.62* %41, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %2, align 8
  %45 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %44, i32 0, i32 3
  store i64 %43, i64* %45, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_symbol(%struct.phuff_entropy_encoder* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.phuff_entropy_encoder*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.c_derived_tbl*, align 8
  store %struct.phuff_entropy_encoder* %0, %struct.phuff_entropy_encoder** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %9 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %3
  %13 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %14 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %13, i32 0, i32 15
  %15 = load i32, i32* %5, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [4 x i64*], [4 x i64*]* %14, i64 0, i64 %16
  %18 = load i64*, i64** %17, align 8
  %19 = load i32, i32* %6, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i64, i64* %18, i64 %20
  %22 = load i64, i64* %21, align 8
  %23 = add nsw i64 %22, 1
  store i64 %23, i64* %21, align 8
  br label %45

24:                                               ; preds = %3
  %25 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %26 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %25, i32 0, i32 14
  %27 = load i32, i32* %5, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [4 x %struct.c_derived_tbl*], [4 x %struct.c_derived_tbl*]* %26, i64 0, i64 %28
  %30 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %29, align 8
  store %struct.c_derived_tbl* %30, %struct.c_derived_tbl** %7, align 8
  %31 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %32 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %7, align 8
  %33 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %32, i32 0, i32 0
  %34 = load i32, i32* %6, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [256 x i32], [256 x i32]* %33, i64 0, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %7, align 8
  %39 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %38, i32 0, i32 1
  %40 = load i32, i32* %6, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [256 x i8], [256 x i8]* %39, i64 0, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i32
  call void @emit_bits.18(%struct.phuff_entropy_encoder* %31, i32 %37, i32 %44)
  br label %45

45:                                               ; preds = %24, %12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_buffered_bits(%struct.phuff_entropy_encoder* %0, i8* %1, i32 %2) #0 {
  %4 = alloca %struct.phuff_entropy_encoder*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %struct.phuff_entropy_encoder* %0, %struct.phuff_entropy_encoder** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %8 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  br label %25

12:                                               ; preds = %3
  br label %13

13:                                               ; preds = %16, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp ugt i32 %14, 0
  br i1 %15, label %16, label %25

16:                                               ; preds = %13
  %17 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8
  %18 = load i8*, i8** %5, align 8
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i32
  call void @emit_bits.18(%struct.phuff_entropy_encoder* %17, i32 %20, i32 1)
  %21 = load i8*, i8** %5, align 8
  %22 = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %22, i8** %5, align 8
  %23 = load i32, i32* %6, align 4
  %24 = add i32 %23, -1
  store i32 %24, i32* %6, align 4
  br label %13

25:                                               ; preds = %13, %11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_restart.20(%struct.phuff_entropy_encoder* %0, i32 %1) #0 {
  %3 = alloca %struct.phuff_entropy_encoder*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.phuff_entropy_encoder* %0, %struct.phuff_entropy_encoder** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  call void @emit_eobrun(%struct.phuff_entropy_encoder* %6)
  %7 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %8 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %40, label %11

11:                                               ; preds = %2
  %12 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  call void @flush_bits.17(%struct.phuff_entropy_encoder* %12)
  %13 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %14 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %13, i32 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %16, i8** %14, align 8
  store i8 -1, i8* %15, align 1
  %17 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %18 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %17, i32 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, -1
  store i64 %20, i64* %18, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %11
  %23 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  call void @dump_buffer.19(%struct.phuff_entropy_encoder* %23)
  br label %24

24:                                               ; preds = %22, %11
  %25 = load i32, i32* %4, align 4
  %26 = add nsw i32 208, %25
  %27 = trunc i32 %26 to i8
  %28 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %29 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %28, i32 0, i32 2
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %31, i8** %29, align 8
  store i8 %27, i8* %30, align 1
  %32 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %33 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %32, i32 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, -1
  store i64 %35, i64* %33, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %24
  %38 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  call void @dump_buffer.19(%struct.phuff_entropy_encoder* %38)
  br label %39

39:                                               ; preds = %37, %24
  br label %40

40:                                               ; preds = %39, %2
  %41 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %42 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %41, i32 0, i32 6
  %43 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %42, align 8
  %44 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %43, i32 0, i32 47
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %66

47:                                               ; preds = %40
  store i32 0, i32* %5, align 4
  br label %48

48:                                               ; preds = %62, %47
  %49 = load i32, i32* %5, align 4
  %50 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %51 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %50, i32 0, i32 6
  %52 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %51, align 8
  %53 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %52, i32 0, i32 41
  %54 = load i32, i32* %53, align 4
  %55 = icmp slt i32 %49, %54
  br i1 %55, label %56, label %65

56:                                               ; preds = %48
  %57 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %58 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %57, i32 0, i32 7
  %59 = load i32, i32* %5, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [4 x i32], [4 x i32]* %58, i64 0, i64 %60
  store i32 0, i32* %61, align 4
  br label %62

62:                                               ; preds = %56
  %63 = load i32, i32* %5, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %5, align 4
  br label %48

65:                                               ; preds = %48
  br label %71

66:                                               ; preds = %40
  %67 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %68 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %67, i32 0, i32 9
  store i32 0, i32* %68, align 4
  %69 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8
  %70 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %69, i32 0, i32 10
  store i32 0, i32* %70, align 8
  br label %71

71:                                               ; preds = %66, %65
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_c_prep_controller(%struct.jpeg_compress_struct.266* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.266*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.my_prep_controller*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_compress_struct.266* %0, %struct.jpeg_compress_struct.266** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load i32, i32* %4, align 4
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %2
  %11 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %12 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %11, i32 0, i32 0
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i32 0, i32 5
  store i32 4, i32* %14, align 8
  %15 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %15, i32 0, i32 0
  %17 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %17, i32 0, i32 0
  %19 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %18, align 8
  %20 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %21 = bitcast %struct.jpeg_compress_struct.266* %20 to %struct.jpeg_common_struct*
  call void %19(%struct.jpeg_common_struct* %21)
  br label %22

22:                                               ; preds = %10, %2
  %23 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %23, i32 0, i32 1
  %25 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %25, i32 0, i32 0
  %27 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %26, align 8
  %28 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %29 = bitcast %struct.jpeg_compress_struct.266* %28 to %struct.jpeg_common_struct*
  %30 = call i8* %27(%struct.jpeg_common_struct* %29, i32 1, i64 112)
  %31 = bitcast i8* %30 to %struct.my_prep_controller*
  store %struct.my_prep_controller* %31, %struct.my_prep_controller** %5, align 8
  %32 = load %struct.my_prep_controller*, %struct.my_prep_controller** %5, align 8
  %33 = bitcast %struct.my_prep_controller* %32 to %struct.jpeg_c_prep_controller.277*
  %34 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %34, i32 0, i32 53
  store %struct.jpeg_c_prep_controller.277* %33, %struct.jpeg_c_prep_controller.277** %35, align 8
  %36 = load %struct.my_prep_controller*, %struct.my_prep_controller** %5, align 8
  %37 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %36, i32 0, i32 0
  %38 = getelementptr inbounds %struct.jpeg_c_prep_controller.277, %struct.jpeg_c_prep_controller.277* %37, i32 0, i32 0
  store void (%struct.jpeg_compress_struct.266*, i32)* @start_pass_prep, void (%struct.jpeg_compress_struct.266*, i32)** %38, align 8
  %39 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %40 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %39, i32 0, i32 57
  %41 = load %struct.jpeg_downsampler.281*, %struct.jpeg_downsampler.281** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_downsampler.281, %struct.jpeg_downsampler.281* %41, i32 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %22
  %46 = load %struct.my_prep_controller*, %struct.my_prep_controller** %5, align 8
  %47 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %46, i32 0, i32 0
  %48 = getelementptr inbounds %struct.jpeg_c_prep_controller.277, %struct.jpeg_c_prep_controller.277* %47, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.266*, i8**, i32*, i32, i8***, i32*, i32)* @pre_process_context, void (%struct.jpeg_compress_struct.266*, i8**, i32*, i32, i8***, i32*, i32)** %48, align 8
  %49 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  call void @create_context_buffer(%struct.jpeg_compress_struct.266* %49)
  br label %102

50:                                               ; preds = %22
  %51 = load %struct.my_prep_controller*, %struct.my_prep_controller** %5, align 8
  %52 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %51, i32 0, i32 0
  %53 = getelementptr inbounds %struct.jpeg_c_prep_controller.277, %struct.jpeg_c_prep_controller.277* %52, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.266*, i8**, i32*, i32, i8***, i32*, i32)* @pre_process_data, void (%struct.jpeg_compress_struct.266*, i8**, i32*, i32, i8***, i32*, i32)** %53, align 8
  store i32 0, i32* %6, align 4
  %54 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %55 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %54, i32 0, i32 14
  %56 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %55, align 8
  store %struct.jpeg_component_info* %56, %struct.jpeg_component_info** %7, align 8
  br label %57

57:                                               ; preds = %96, %50
  %58 = load i32, i32* %6, align 4
  %59 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %60 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %59, i32 0, i32 12
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %58, %61
  br i1 %62, label %63, label %101

63:                                               ; preds = %57
  %64 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %65 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %64, i32 0, i32 1
  %66 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %65, align 8
  %67 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %66, i32 0, i32 2
  %68 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %67, align 8
  %69 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %70 = bitcast %struct.jpeg_compress_struct.266* %69 to %struct.jpeg_common_struct*
  %71 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %71, i32 0, i32 7
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i64
  %75 = mul nsw i64 %74, 8
  %76 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %77 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %76, i32 0, i32 38
  %78 = load i32, i32* %77, align 8
  %79 = sext i32 %78 to i64
  %80 = mul nsw i64 %75, %79
  %81 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %82 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %81, i32 0, i32 2
  %83 = load i32, i32* %82, align 8
  %84 = sext i32 %83 to i64
  %85 = sdiv i64 %80, %84
  %86 = trunc i64 %85 to i32
  %87 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %88 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %87, i32 0, i32 39
  %89 = load i32, i32* %88, align 4
  %90 = call i8** %68(%struct.jpeg_common_struct* %70, i32 1, i32 %86, i32 %89)
  %91 = load %struct.my_prep_controller*, %struct.my_prep_controller** %5, align 8
  %92 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %91, i32 0, i32 1
  %93 = load i32, i32* %6, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds [10 x i8**], [10 x i8**]* %92, i64 0, i64 %94
  store i8** %90, i8*** %95, align 8
  br label %96

96:                                               ; preds = %63
  %97 = load i32, i32* %6, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %6, align 4
  %99 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %100 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %99, i32 1
  store %struct.jpeg_component_info* %100, %struct.jpeg_component_info** %7, align 8
  br label %57

101:                                              ; preds = %57
  br label %102

102:                                              ; preds = %101, %45
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_prep(%struct.jpeg_compress_struct.266* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct.266*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.my_prep_controller*, align 8
  store %struct.jpeg_compress_struct.266* %0, %struct.jpeg_compress_struct.266** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %6, i32 0, i32 53
  %8 = load %struct.jpeg_c_prep_controller.277*, %struct.jpeg_c_prep_controller.277** %7, align 8
  %9 = bitcast %struct.jpeg_c_prep_controller.277* %8 to %struct.my_prep_controller*
  store %struct.my_prep_controller* %9, %struct.my_prep_controller** %5, align 8
  %10 = load i32, i32* %4, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %2
  %13 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %14 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %13, i32 0, i32 0
  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i32 0, i32 5
  store i32 4, i32* %16, align 8
  %17 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %17, i32 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i32 0, i32 0
  %21 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %20, align 8
  %22 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %23 = bitcast %struct.jpeg_compress_struct.266* %22 to %struct.jpeg_common_struct*
  call void %21(%struct.jpeg_common_struct* %23)
  br label %24

24:                                               ; preds = %12, %2
  %25 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %25, i32 0, i32 7
  %27 = load i32, i32* %26, align 4
  %28 = load %struct.my_prep_controller*, %struct.my_prep_controller** %5, align 8
  %29 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %28, i32 0, i32 2
  store i32 %27, i32* %29, align 8
  %30 = load %struct.my_prep_controller*, %struct.my_prep_controller** %5, align 8
  %31 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %30, i32 0, i32 3
  store i32 0, i32* %31, align 4
  %32 = load %struct.my_prep_controller*, %struct.my_prep_controller** %5, align 8
  %33 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %32, i32 0, i32 4
  store i32 0, i32* %33, align 8
  %34 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %3, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %34, i32 0, i32 39
  %36 = load i32, i32* %35, align 4
  %37 = mul nsw i32 2, %36
  %38 = load %struct.my_prep_controller*, %struct.my_prep_controller** %5, align 8
  %39 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %38, i32 0, i32 5
  store i32 %37, i32* %39, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @pre_process_context(%struct.jpeg_compress_struct.266* %0, i8** %1, i32* %2, i32 %3, i8*** %4, i32* %5, i32 %6) #0 {
  %8 = alloca %struct.jpeg_compress_struct.266*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8***, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.my_prep_controller*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %struct.jpeg_compress_struct.266* %0, %struct.jpeg_compress_struct.266** %8, align 8
  store i8** %1, i8*** %9, align 8
  store i32* %2, i32** %10, align 8
  store i32 %3, i32* %11, align 4
  store i8*** %4, i8**** %12, align 8
  store i32* %5, i32** %13, align 8
  store i32 %6, i32* %14, align 4
  %21 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %21, i32 0, i32 53
  %23 = load %struct.jpeg_c_prep_controller.277*, %struct.jpeg_c_prep_controller.277** %22, align 8
  %24 = bitcast %struct.jpeg_c_prep_controller.277* %23 to %struct.my_prep_controller*
  store %struct.my_prep_controller* %24, %struct.my_prep_controller** %15, align 8
  %25 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %25, i32 0, i32 39
  %27 = load i32, i32* %26, align 4
  %28 = mul nsw i32 %27, 3
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %248, %7
  %30 = load i32*, i32** %13, align 8
  %31 = load i32, i32* %30, align 4
  %32 = load i32, i32* %14, align 4
  %33 = icmp ult i32 %31, %32
  br i1 %33, label %34, label %249

34:                                               ; preds = %29
  %35 = load i32*, i32** %10, align 8
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* %11, align 4
  %38 = icmp ult i32 %36, %37
  br i1 %38, label %39, label %140

39:                                               ; preds = %34
  %40 = load i32, i32* %11, align 4
  %41 = load i32*, i32** %10, align 8
  %42 = load i32, i32* %41, align 4
  %43 = sub i32 %40, %42
  store i32 %43, i32* %19, align 4
  %44 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %45 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %44, i32 0, i32 5
  %46 = load i32, i32* %45, align 4
  %47 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %48 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %47, i32 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = sub nsw i32 %46, %49
  store i32 %50, i32* %16, align 4
  %51 = load i32, i32* %16, align 4
  %52 = load i32, i32* %19, align 4
  %53 = icmp ult i32 %51, %52
  br i1 %53, label %54, label %56

54:                                               ; preds = %39
  %55 = load i32, i32* %16, align 4
  br label %58

56:                                               ; preds = %39
  %57 = load i32, i32* %19, align 4
  br label %58

58:                                               ; preds = %56, %54
  %59 = phi i32 [ %55, %54 ], [ %57, %56 ]
  store i32 %59, i32* %16, align 4
  %60 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %61 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %60, i32 0, i32 56
  %62 = load %struct.jpeg_color_converter.280*, %struct.jpeg_color_converter.280** %61, align 8
  %63 = getelementptr inbounds %struct.jpeg_color_converter.280, %struct.jpeg_color_converter.280* %62, i32 0, i32 1
  %64 = load void (%struct.jpeg_compress_struct.266*, i8**, i8***, i32, i32)*, void (%struct.jpeg_compress_struct.266*, i8**, i8***, i32, i32)** %63, align 8
  %65 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %66 = load i8**, i8*** %9, align 8
  %67 = load i32*, i32** %10, align 8
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i8*, i8** %66, i64 %69
  %71 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %72 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %71, i32 0, i32 1
  %73 = getelementptr inbounds [10 x i8**], [10 x i8**]* %72, i64 0, i64 0
  %74 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %75 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %74, i32 0, i32 3
  %76 = load i32, i32* %75, align 4
  %77 = load i32, i32* %16, align 4
  call void %64(%struct.jpeg_compress_struct.266* %65, i8** %70, i8*** %73, i32 %76, i32 %77)
  %78 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %79 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %78, i32 0, i32 2
  %80 = load i32, i32* %79, align 8
  %81 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %82 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %81, i32 0, i32 7
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %80, %83
  br i1 %84, label %85, label %125

85:                                               ; preds = %58
  store i32 0, i32* %17, align 4
  br label %86

86:                                               ; preds = %121, %85
  %87 = load i32, i32* %17, align 4
  %88 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %89 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %88, i32 0, i32 12
  %90 = load i32, i32* %89, align 4
  %91 = icmp slt i32 %87, %90
  br i1 %91, label %92, label %124

92:                                               ; preds = %86
  store i32 1, i32* %20, align 4
  br label %93

93:                                               ; preds = %117, %92
  %94 = load i32, i32* %20, align 4
  %95 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %96 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %95, i32 0, i32 39
  %97 = load i32, i32* %96, align 4
  %98 = icmp sle i32 %94, %97
  br i1 %98, label %99, label %120

99:                                               ; preds = %93
  %100 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %101 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %100, i32 0, i32 1
  %102 = load i32, i32* %17, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds [10 x i8**], [10 x i8**]* %101, i64 0, i64 %103
  %105 = load i8**, i8*** %104, align 8
  %106 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %107 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %106, i32 0, i32 1
  %108 = load i32, i32* %17, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [10 x i8**], [10 x i8**]* %107, i64 0, i64 %109
  %111 = load i8**, i8*** %110, align 8
  %112 = load i32, i32* %20, align 4
  %113 = sub nsw i32 0, %112
  %114 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %115 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %114, i32 0, i32 6
  %116 = load i32, i32* %115, align 8
  call void @jcopy_sample_rows(i8** %105, i32 0, i8** %111, i32 %113, i32 1, i32 %116)
  br label %117

117:                                              ; preds = %99
  %118 = load i32, i32* %20, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %20, align 4
  br label %93

120:                                              ; preds = %93
  br label %121

121:                                              ; preds = %120
  %122 = load i32, i32* %17, align 4
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* %17, align 4
  br label %86

124:                                              ; preds = %86
  br label %125

125:                                              ; preds = %124, %58
  %126 = load i32, i32* %16, align 4
  %127 = load i32*, i32** %10, align 8
  %128 = load i32, i32* %127, align 4
  %129 = add i32 %128, %126
  store i32 %129, i32* %127, align 4
  %130 = load i32, i32* %16, align 4
  %131 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %132 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %131, i32 0, i32 3
  %133 = load i32, i32* %132, align 4
  %134 = add nsw i32 %133, %130
  store i32 %134, i32* %132, align 4
  %135 = load i32, i32* %16, align 4
  %136 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %137 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %136, i32 0, i32 2
  %138 = load i32, i32* %137, align 8
  %139 = sub i32 %138, %135
  store i32 %139, i32* %137, align 8
  br label %187

140:                                              ; preds = %34
  %141 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %142 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %141, i32 0, i32 2
  %143 = load i32, i32* %142, align 8
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %140
  br label %249

146:                                              ; preds = %140
  %147 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %148 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %147, i32 0, i32 3
  %149 = load i32, i32* %148, align 4
  %150 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %151 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %150, i32 0, i32 5
  %152 = load i32, i32* %151, align 4
  %153 = icmp slt i32 %149, %152
  br i1 %153, label %154, label %186

154:                                              ; preds = %146
  store i32 0, i32* %17, align 4
  br label %155

155:                                              ; preds = %177, %154
  %156 = load i32, i32* %17, align 4
  %157 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %158 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %157, i32 0, i32 12
  %159 = load i32, i32* %158, align 4
  %160 = icmp slt i32 %156, %159
  br i1 %160, label %161, label %180

161:                                              ; preds = %155
  %162 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %163 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %162, i32 0, i32 1
  %164 = load i32, i32* %17, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [10 x i8**], [10 x i8**]* %163, i64 0, i64 %165
  %167 = load i8**, i8*** %166, align 8
  %168 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %169 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %168, i32 0, i32 6
  %170 = load i32, i32* %169, align 8
  %171 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %172 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %171, i32 0, i32 3
  %173 = load i32, i32* %172, align 4
  %174 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %175 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %174, i32 0, i32 5
  %176 = load i32, i32* %175, align 4
  call void @expand_bottom_edge(i8** %167, i32 %170, i32 %173, i32 %176)
  br label %177

177:                                              ; preds = %161
  %178 = load i32, i32* %17, align 4
  %179 = add nsw i32 %178, 1
  store i32 %179, i32* %17, align 4
  br label %155

180:                                              ; preds = %155
  %181 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %182 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %181, i32 0, i32 5
  %183 = load i32, i32* %182, align 4
  %184 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %185 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %184, i32 0, i32 3
  store i32 %183, i32* %185, align 4
  br label %186

186:                                              ; preds = %180, %146
  br label %187

187:                                              ; preds = %186, %125
  %188 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %189 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %188, i32 0, i32 3
  %190 = load i32, i32* %189, align 4
  %191 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %192 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %191, i32 0, i32 5
  %193 = load i32, i32* %192, align 4
  %194 = icmp eq i32 %190, %193
  br i1 %194, label %195, label %248

195:                                              ; preds = %187
  %196 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %197 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %196, i32 0, i32 57
  %198 = load %struct.jpeg_downsampler.281*, %struct.jpeg_downsampler.281** %197, align 8
  %199 = getelementptr inbounds %struct.jpeg_downsampler.281, %struct.jpeg_downsampler.281* %198, i32 0, i32 1
  %200 = load void (%struct.jpeg_compress_struct.266*, i8***, i32, i8***, i32)*, void (%struct.jpeg_compress_struct.266*, i8***, i32, i8***, i32)** %199, align 8
  %201 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %202 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %203 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %202, i32 0, i32 1
  %204 = getelementptr inbounds [10 x i8**], [10 x i8**]* %203, i64 0, i64 0
  %205 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %206 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %205, i32 0, i32 4
  %207 = load i32, i32* %206, align 8
  %208 = load i8***, i8**** %12, align 8
  %209 = load i32*, i32** %13, align 8
  %210 = load i32, i32* %209, align 4
  call void %200(%struct.jpeg_compress_struct.266* %201, i8*** %204, i32 %207, i8*** %208, i32 %210)
  %211 = load i32*, i32** %13, align 8
  %212 = load i32, i32* %211, align 4
  %213 = add i32 %212, 1
  store i32 %213, i32* %211, align 4
  %214 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %215 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %214, i32 0, i32 39
  %216 = load i32, i32* %215, align 4
  %217 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %218 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %217, i32 0, i32 4
  %219 = load i32, i32* %218, align 8
  %220 = add nsw i32 %219, %216
  store i32 %220, i32* %218, align 8
  %221 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %222 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %221, i32 0, i32 4
  %223 = load i32, i32* %222, align 8
  %224 = load i32, i32* %18, align 4
  %225 = icmp sge i32 %223, %224
  br i1 %225, label %226, label %229

226:                                              ; preds = %195
  %227 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %228 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %227, i32 0, i32 4
  store i32 0, i32* %228, align 8
  br label %229

229:                                              ; preds = %226, %195
  %230 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %231 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %230, i32 0, i32 3
  %232 = load i32, i32* %231, align 4
  %233 = load i32, i32* %18, align 4
  %234 = icmp sge i32 %232, %233
  br i1 %234, label %235, label %238

235:                                              ; preds = %229
  %236 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %237 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %236, i32 0, i32 3
  store i32 0, i32* %237, align 4
  br label %238

238:                                              ; preds = %235, %229
  %239 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %240 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %239, i32 0, i32 3
  %241 = load i32, i32* %240, align 4
  %242 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %243 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %242, i32 0, i32 39
  %244 = load i32, i32* %243, align 4
  %245 = add nsw i32 %241, %244
  %246 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %247 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %246, i32 0, i32 5
  store i32 %245, i32* %247, align 4
  br label %248

248:                                              ; preds = %238, %187
  br label %29

249:                                              ; preds = %145, %29
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @create_context_buffer(%struct.jpeg_compress_struct.266* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.266*, align 8
  %3 = alloca %struct.my_prep_controller*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.jpeg_component_info*, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i8**, align 8
  store %struct.jpeg_compress_struct.266* %0, %struct.jpeg_compress_struct.266** %2, align 8
  %10 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %2, align 8
  %11 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %10, i32 0, i32 53
  %12 = load %struct.jpeg_c_prep_controller.277*, %struct.jpeg_c_prep_controller.277** %11, align 8
  %13 = bitcast %struct.jpeg_c_prep_controller.277* %12 to %struct.my_prep_controller*
  store %struct.my_prep_controller* %13, %struct.my_prep_controller** %3, align 8
  %14 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %2, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %14, i32 0, i32 39
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %4, align 4
  %17 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %17, i32 0, i32 1
  %19 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %19, i32 0, i32 0
  %21 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %20, align 8
  %22 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %2, align 8
  %23 = bitcast %struct.jpeg_compress_struct.266* %22 to %struct.jpeg_common_struct*
  %24 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %2, align 8
  %25 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %24, i32 0, i32 12
  %26 = load i32, i32* %25, align 4
  %27 = mul nsw i32 %26, 5
  %28 = load i32, i32* %4, align 4
  %29 = mul nsw i32 %27, %28
  %30 = sext i32 %29 to i64
  %31 = mul i64 %30, 8
  %32 = call i8* %21(%struct.jpeg_common_struct* %23, i32 1, i64 %31)
  %33 = bitcast i8* %32 to i8**
  store i8** %33, i8*** %9, align 8
  store i32 0, i32* %5, align 4
  %34 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %34, i32 0, i32 14
  %36 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %35, align 8
  store %struct.jpeg_component_info* %36, %struct.jpeg_component_info** %7, align 8
  br label %37

37:                                               ; preds = %128, %1
  %38 = load i32, i32* %5, align 4
  %39 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %2, align 8
  %40 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %39, i32 0, i32 12
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %38, %41
  br i1 %42, label %43, label %133

43:                                               ; preds = %37
  %44 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %2, align 8
  %45 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %44, i32 0, i32 1
  %46 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %45, align 8
  %47 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %46, i32 0, i32 2
  %48 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %47, align 8
  %49 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %2, align 8
  %50 = bitcast %struct.jpeg_compress_struct.266* %49 to %struct.jpeg_common_struct*
  %51 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %52 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %51, i32 0, i32 7
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = mul nsw i64 %54, 8
  %56 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %2, align 8
  %57 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %56, i32 0, i32 38
  %58 = load i32, i32* %57, align 8
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %55, %59
  %61 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %62 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %61, i32 0, i32 2
  %63 = load i32, i32* %62, align 8
  %64 = sext i32 %63 to i64
  %65 = sdiv i64 %60, %64
  %66 = trunc i64 %65 to i32
  %67 = load i32, i32* %4, align 4
  %68 = mul nsw i32 3, %67
  %69 = call i8** %48(%struct.jpeg_common_struct* %50, i32 1, i32 %66, i32 %68)
  store i8** %69, i8*** %8, align 8
  %70 = load i8**, i8*** %9, align 8
  %71 = load i32, i32* %4, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8*, i8** %70, i64 %72
  %74 = bitcast i8** %73 to i8*
  %75 = load i8**, i8*** %8, align 8
  %76 = bitcast i8** %75 to i8*
  %77 = load i32, i32* %4, align 4
  %78 = mul nsw i32 3, %77
  %79 = sext i32 %78 to i64
  %80 = mul i64 %79, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %74, i8* align 1 %76, i64 %80, i1 false)
  store i32 0, i32* %6, align 4
  br label %81

81:                                               ; preds = %110, %43
  %82 = load i32, i32* %6, align 4
  %83 = load i32, i32* %4, align 4
  %84 = icmp slt i32 %82, %83
  br i1 %84, label %85, label %113

85:                                               ; preds = %81
  %86 = load i8**, i8*** %8, align 8
  %87 = load i32, i32* %4, align 4
  %88 = mul nsw i32 2, %87
  %89 = load i32, i32* %6, align 4
  %90 = add nsw i32 %88, %89
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8*, i8** %86, i64 %91
  %93 = load i8*, i8** %92, align 8
  %94 = load i8**, i8*** %9, align 8
  %95 = load i32, i32* %6, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8*, i8** %94, i64 %96
  store i8* %93, i8** %97, align 8
  %98 = load i8**, i8*** %8, align 8
  %99 = load i32, i32* %6, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i8*, i8** %98, i64 %100
  %102 = load i8*, i8** %101, align 8
  %103 = load i8**, i8*** %9, align 8
  %104 = load i32, i32* %4, align 4
  %105 = mul nsw i32 4, %104
  %106 = load i32, i32* %6, align 4
  %107 = add nsw i32 %105, %106
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8*, i8** %103, i64 %108
  store i8* %102, i8** %109, align 8
  br label %110

110:                                              ; preds = %85
  %111 = load i32, i32* %6, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %6, align 4
  br label %81

113:                                              ; preds = %81
  %114 = load i8**, i8*** %9, align 8
  %115 = load i32, i32* %4, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i8*, i8** %114, i64 %116
  %118 = load %struct.my_prep_controller*, %struct.my_prep_controller** %3, align 8
  %119 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %118, i32 0, i32 1
  %120 = load i32, i32* %5, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds [10 x i8**], [10 x i8**]* %119, i64 0, i64 %121
  store i8** %117, i8*** %122, align 8
  %123 = load i32, i32* %4, align 4
  %124 = mul nsw i32 5, %123
  %125 = load i8**, i8*** %9, align 8
  %126 = sext i32 %124 to i64
  %127 = getelementptr inbounds i8*, i8** %125, i64 %126
  store i8** %127, i8*** %9, align 8
  br label %128

128:                                              ; preds = %113
  %129 = load i32, i32* %5, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %5, align 4
  %131 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %132 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %131, i32 1
  store %struct.jpeg_component_info* %132, %struct.jpeg_component_info** %7, align 8
  br label %37

133:                                              ; preds = %37
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @pre_process_data(%struct.jpeg_compress_struct.266* %0, i8** %1, i32* %2, i32 %3, i8*** %4, i32* %5, i32 %6) #0 {
  %8 = alloca %struct.jpeg_compress_struct.266*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8***, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.my_prep_controller*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_compress_struct.266* %0, %struct.jpeg_compress_struct.266** %8, align 8
  store i8** %1, i8*** %9, align 8
  store i32* %2, i32** %10, align 8
  store i32 %3, i32* %11, align 4
  store i8*** %4, i8**** %12, align 8
  store i32* %5, i32** %13, align 8
  store i32 %6, i32* %14, align 4
  %20 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %20, i32 0, i32 53
  %22 = load %struct.jpeg_c_prep_controller.277*, %struct.jpeg_c_prep_controller.277** %21, align 8
  %23 = bitcast %struct.jpeg_c_prep_controller.277* %22 to %struct.my_prep_controller*
  store %struct.my_prep_controller* %23, %struct.my_prep_controller** %15, align 8
  br label %24

24:                                               ; preds = %208, %7
  %25 = load i32*, i32** %10, align 8
  %26 = load i32, i32* %25, align 4
  %27 = load i32, i32* %11, align 4
  %28 = icmp ult i32 %26, %27
  br i1 %28, label %29, label %34

29:                                               ; preds = %24
  %30 = load i32*, i32** %13, align 8
  %31 = load i32, i32* %30, align 4
  %32 = load i32, i32* %14, align 4
  %33 = icmp ult i32 %31, %32
  br label %34

34:                                               ; preds = %29, %24
  %35 = phi i1 [ false, %24 ], [ %33, %29 ]
  br i1 %35, label %36, label %209

36:                                               ; preds = %34
  %37 = load i32, i32* %11, align 4
  %38 = load i32*, i32** %10, align 8
  %39 = load i32, i32* %38, align 4
  %40 = sub i32 %37, %39
  store i32 %40, i32* %18, align 4
  %41 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %42 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %41, i32 0, i32 39
  %43 = load i32, i32* %42, align 4
  %44 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %45 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %44, i32 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = sub nsw i32 %43, %46
  store i32 %47, i32* %16, align 4
  %48 = load i32, i32* %16, align 4
  %49 = load i32, i32* %18, align 4
  %50 = icmp ult i32 %48, %49
  br i1 %50, label %51, label %53

51:                                               ; preds = %36
  %52 = load i32, i32* %16, align 4
  br label %55

53:                                               ; preds = %36
  %54 = load i32, i32* %18, align 4
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i32 [ %52, %51 ], [ %54, %53 ]
  store i32 %56, i32* %16, align 4
  %57 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %58 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %57, i32 0, i32 56
  %59 = load %struct.jpeg_color_converter.280*, %struct.jpeg_color_converter.280** %58, align 8
  %60 = getelementptr inbounds %struct.jpeg_color_converter.280, %struct.jpeg_color_converter.280* %59, i32 0, i32 1
  %61 = load void (%struct.jpeg_compress_struct.266*, i8**, i8***, i32, i32)*, void (%struct.jpeg_compress_struct.266*, i8**, i8***, i32, i32)** %60, align 8
  %62 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %63 = load i8**, i8*** %9, align 8
  %64 = load i32*, i32** %10, align 8
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i8*, i8** %63, i64 %66
  %68 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %69 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %68, i32 0, i32 1
  %70 = getelementptr inbounds [10 x i8**], [10 x i8**]* %69, i64 0, i64 0
  %71 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %72 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %71, i32 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = load i32, i32* %16, align 4
  call void %61(%struct.jpeg_compress_struct.266* %62, i8** %67, i8*** %70, i32 %73, i32 %74)
  %75 = load i32, i32* %16, align 4
  %76 = load i32*, i32** %10, align 8
  %77 = load i32, i32* %76, align 4
  %78 = add i32 %77, %75
  store i32 %78, i32* %76, align 4
  %79 = load i32, i32* %16, align 4
  %80 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %81 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %80, i32 0, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = add nsw i32 %82, %79
  store i32 %83, i32* %81, align 4
  %84 = load i32, i32* %16, align 4
  %85 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %86 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %85, i32 0, i32 2
  %87 = load i32, i32* %86, align 8
  %88 = sub i32 %87, %84
  store i32 %88, i32* %86, align 8
  %89 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %90 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %89, i32 0, i32 2
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %133

93:                                               ; preds = %55
  %94 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %95 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %94, i32 0, i32 3
  %96 = load i32, i32* %95, align 4
  %97 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %98 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %97, i32 0, i32 39
  %99 = load i32, i32* %98, align 4
  %100 = icmp slt i32 %96, %99
  br i1 %100, label %101, label %133

101:                                              ; preds = %93
  store i32 0, i32* %17, align 4
  br label %102

102:                                              ; preds = %124, %101
  %103 = load i32, i32* %17, align 4
  %104 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %105 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %104, i32 0, i32 12
  %106 = load i32, i32* %105, align 4
  %107 = icmp slt i32 %103, %106
  br i1 %107, label %108, label %127

108:                                              ; preds = %102
  %109 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %110 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %109, i32 0, i32 1
  %111 = load i32, i32* %17, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [10 x i8**], [10 x i8**]* %110, i64 0, i64 %112
  %114 = load i8**, i8*** %113, align 8
  %115 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %116 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %115, i32 0, i32 6
  %117 = load i32, i32* %116, align 8
  %118 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %119 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %118, i32 0, i32 3
  %120 = load i32, i32* %119, align 4
  %121 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %122 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %121, i32 0, i32 39
  %123 = load i32, i32* %122, align 4
  call void @expand_bottom_edge(i8** %114, i32 %117, i32 %120, i32 %123)
  br label %124

124:                                              ; preds = %108
  %125 = load i32, i32* %17, align 4
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* %17, align 4
  br label %102

127:                                              ; preds = %102
  %128 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %129 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %128, i32 0, i32 39
  %130 = load i32, i32* %129, align 4
  %131 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %132 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %131, i32 0, i32 3
  store i32 %130, i32* %132, align 4
  br label %133

133:                                              ; preds = %127, %93, %55
  %134 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %135 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %134, i32 0, i32 3
  %136 = load i32, i32* %135, align 4
  %137 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %138 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %137, i32 0, i32 39
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %136, %139
  br i1 %140, label %141, label %159

141:                                              ; preds = %133
  %142 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %143 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %142, i32 0, i32 57
  %144 = load %struct.jpeg_downsampler.281*, %struct.jpeg_downsampler.281** %143, align 8
  %145 = getelementptr inbounds %struct.jpeg_downsampler.281, %struct.jpeg_downsampler.281* %144, i32 0, i32 1
  %146 = load void (%struct.jpeg_compress_struct.266*, i8***, i32, i8***, i32)*, void (%struct.jpeg_compress_struct.266*, i8***, i32, i8***, i32)** %145, align 8
  %147 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %148 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %149 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %148, i32 0, i32 1
  %150 = getelementptr inbounds [10 x i8**], [10 x i8**]* %149, i64 0, i64 0
  %151 = load i8***, i8**** %12, align 8
  %152 = load i32*, i32** %13, align 8
  %153 = load i32, i32* %152, align 4
  call void %146(%struct.jpeg_compress_struct.266* %147, i8*** %150, i32 0, i8*** %151, i32 %153)
  %154 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %155 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %154, i32 0, i32 3
  store i32 0, i32* %155, align 4
  %156 = load i32*, i32** %13, align 8
  %157 = load i32, i32* %156, align 4
  %158 = add i32 %157, 1
  store i32 %158, i32* %156, align 4
  br label %159

159:                                              ; preds = %141, %133
  %160 = load %struct.my_prep_controller*, %struct.my_prep_controller** %15, align 8
  %161 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %160, i32 0, i32 2
  %162 = load i32, i32* %161, align 8
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %208

164:                                              ; preds = %159
  %165 = load i32*, i32** %13, align 8
  %166 = load i32, i32* %165, align 4
  %167 = load i32, i32* %14, align 4
  %168 = icmp ult i32 %166, %167
  br i1 %168, label %169, label %208

169:                                              ; preds = %164
  store i32 0, i32* %17, align 4
  %170 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %171 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %170, i32 0, i32 14
  %172 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %171, align 8
  store %struct.jpeg_component_info* %172, %struct.jpeg_component_info** %19, align 8
  br label %173

173:                                              ; preds = %200, %169
  %174 = load i32, i32* %17, align 4
  %175 = load %struct.jpeg_compress_struct.266*, %struct.jpeg_compress_struct.266** %8, align 8
  %176 = getelementptr inbounds %struct.jpeg_compress_struct.266, %struct.jpeg_compress_struct.266* %175, i32 0, i32 12
  %177 = load i32, i32* %176, align 4
  %178 = icmp slt i32 %174, %177
  br i1 %178, label %179, label %205

179:                                              ; preds = %173
  %180 = load i8***, i8**** %12, align 8
  %181 = load i32, i32* %17, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds i8**, i8*** %180, i64 %182
  %184 = load i8**, i8*** %183, align 8
  %185 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %186 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %185, i32 0, i32 7
  %187 = load i32, i32* %186, align 4
  %188 = mul i32 %187, 8
  %189 = load i32*, i32** %13, align 8
  %190 = load i32, i32* %189, align 4
  %191 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %192 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %191, i32 0, i32 3
  %193 = load i32, i32* %192, align 4
  %194 = mul i32 %190, %193
  %195 = load i32, i32* %14, align 4
  %196 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %197 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %196, i32 0, i32 3
  %198 = load i32, i32* %197, align 4
  %199 = mul i32 %195, %198
  call void @expand_bottom_edge(i8** %184, i32 %188, i32 %194, i32 %199)
  br label %200

200:                                              ; preds = %179
  %201 = load i32, i32* %17, align 4
  %202 = add nsw i32 %201, 1
  store i32 %202, i32* %17, align 4
  %203 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %204 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %203, i32 1
  store %struct.jpeg_component_info* %204, %struct.jpeg_component_info** %19, align 8
  br label %173

205:                                              ; preds = %173
  %206 = load i32, i32* %14, align 4
  %207 = load i32*, i32** %13, align 8
  store i32 %206, i32* %207, align 4
  br label %209

208:                                              ; preds = %164, %159
  br label %24

209:                                              ; preds = %205, %34
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @expand_bottom_edge(i8** %0, i32 %1, i32 %2, i32 %3) #0 {
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8** %0, i8*** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %10 = load i32, i32* %7, align 4
  store i32 %10, i32* %9, align 4
  br label %11

11:                                               ; preds = %22, %4
  %12 = load i32, i32* %9, align 4
  %13 = load i32, i32* %8, align 4
  %14 = icmp slt i32 %12, %13
  br i1 %14, label %15, label %25

15:                                               ; preds = %11
  %16 = load i8**, i8*** %5, align 8
  %17 = load i32, i32* %7, align 4
  %18 = sub nsw i32 %17, 1
  %19 = load i8**, i8*** %5, align 8
  %20 = load i32, i32* %9, align 4
  %21 = load i32, i32* %6, align 4
  call void @jcopy_sample_rows(i8** %16, i32 %18, i8** %19, i32 %20, i32 1, i32 %21)
  br label %22

22:                                               ; preds = %15
  %23 = load i32, i32* %9, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %9, align 4
  br label %11

25:                                               ; preds = %11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_downsampler(%struct.jpeg_compress_struct.58* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.58*, align 8
  %3 = alloca %struct.my_downsampler*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.jpeg_component_info*, align 8
  %6 = alloca i32, align 4
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %2, align 8
  store i32 1, i32* %6, align 4
  %7 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %7, i32 0, i32 1
  %9 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %9, i32 0, i32 0
  %11 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %10, align 8
  %12 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %13 = bitcast %struct.jpeg_compress_struct.58* %12 to %struct.jpeg_common_struct*
  %14 = call i8* %11(%struct.jpeg_common_struct* %13, i32 1, i64 104)
  %15 = bitcast i8* %14 to %struct.my_downsampler*
  store %struct.my_downsampler* %15, %struct.my_downsampler** %3, align 8
  %16 = load %struct.my_downsampler*, %struct.my_downsampler** %3, align 8
  %17 = bitcast %struct.my_downsampler* %16 to %struct.jpeg_downsampler.73*
  %18 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %19 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %18, i32 0, i32 57
  store %struct.jpeg_downsampler.73* %17, %struct.jpeg_downsampler.73** %19, align 8
  %20 = load %struct.my_downsampler*, %struct.my_downsampler** %3, align 8
  %21 = getelementptr inbounds %struct.my_downsampler, %struct.my_downsampler* %20, i32 0, i32 0
  %22 = getelementptr inbounds %struct.jpeg_downsampler.73, %struct.jpeg_downsampler.73* %21, i32 0, i32 0
  %23 = bitcast {}** %22 to void (%struct.jpeg_compress_struct.58*)**
  store void (%struct.jpeg_compress_struct.58*)* @start_pass_downsample, void (%struct.jpeg_compress_struct.58*)** %23, align 8
  %24 = load %struct.my_downsampler*, %struct.my_downsampler** %3, align 8
  %25 = getelementptr inbounds %struct.my_downsampler, %struct.my_downsampler* %24, i32 0, i32 0
  %26 = getelementptr inbounds %struct.jpeg_downsampler.73, %struct.jpeg_downsampler.73* %25, i32 0, i32 1
  store void (%struct.jpeg_compress_struct.58*, i8***, i32, i8***, i32)* @sep_downsample, void (%struct.jpeg_compress_struct.58*, i8***, i32, i8***, i32)** %26, align 8
  %27 = load %struct.my_downsampler*, %struct.my_downsampler** %3, align 8
  %28 = getelementptr inbounds %struct.my_downsampler, %struct.my_downsampler* %27, i32 0, i32 0
  %29 = getelementptr inbounds %struct.jpeg_downsampler.73, %struct.jpeg_downsampler.73* %28, i32 0, i32 2
  store i32 0, i32* %29, align 8
  %30 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %31 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %30, i32 0, i32 26
  %32 = load i32, i32* %31, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %1
  %35 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %36 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %35, i32 0, i32 0
  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i32 0, i32 5
  store i32 23, i32* %38, align 8
  %39 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %40 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %39, i32 0, i32 0
  %41 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %41, i32 0, i32 0
  %43 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %42, align 8
  %44 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %45 = bitcast %struct.jpeg_compress_struct.58* %44 to %struct.jpeg_common_struct*
  call void %43(%struct.jpeg_common_struct* %45)
  br label %46

46:                                               ; preds = %34, %1
  store i32 0, i32* %4, align 4
  %47 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %48 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %47, i32 0, i32 14
  %49 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %48, align 8
  store %struct.jpeg_component_info* %49, %struct.jpeg_component_info** %5, align 8
  br label %50

50:                                               ; preds = %195, %46
  %51 = load i32, i32* %4, align 4
  %52 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %53 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %52, i32 0, i32 12
  %54 = load i32, i32* %53, align 4
  %55 = icmp slt i32 %51, %54
  br i1 %55, label %56, label %200

56:                                               ; preds = %50
  %57 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %58 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %57, i32 0, i32 2
  %59 = load i32, i32* %58, align 8
  %60 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %61 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %60, i32 0, i32 38
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %59, %62
  br i1 %63, label %64, label %93

64:                                               ; preds = %56
  %65 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %66 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %65, i32 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %69 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %68, i32 0, i32 39
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %67, %70
  br i1 %71, label %72, label %93

72:                                               ; preds = %64
  %73 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %74 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %73, i32 0, i32 27
  %75 = load i32, i32* %74, align 8
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %86

77:                                               ; preds = %72
  %78 = load %struct.my_downsampler*, %struct.my_downsampler** %3, align 8
  %79 = getelementptr inbounds %struct.my_downsampler, %struct.my_downsampler* %78, i32 0, i32 1
  %80 = load i32, i32* %4, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [10 x void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)*], [10 x void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)*]* %79, i64 0, i64 %81
  store void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)* @fullsize_smooth_downsample, void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)** %82, align 8
  %83 = load %struct.my_downsampler*, %struct.my_downsampler** %3, align 8
  %84 = getelementptr inbounds %struct.my_downsampler, %struct.my_downsampler* %83, i32 0, i32 0
  %85 = getelementptr inbounds %struct.jpeg_downsampler.73, %struct.jpeg_downsampler.73* %84, i32 0, i32 2
  store i32 1, i32* %85, align 8
  br label %92

86:                                               ; preds = %72
  %87 = load %struct.my_downsampler*, %struct.my_downsampler** %3, align 8
  %88 = getelementptr inbounds %struct.my_downsampler, %struct.my_downsampler* %87, i32 0, i32 1
  %89 = load i32, i32* %4, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [10 x void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)*], [10 x void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)*]* %88, i64 0, i64 %90
  store void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)* @fullsize_downsample, void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)** %91, align 8
  br label %92

92:                                               ; preds = %86, %77
  br label %194

93:                                               ; preds = %64, %56
  %94 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %95 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %94, i32 0, i32 2
  %96 = load i32, i32* %95, align 8
  %97 = mul nsw i32 %96, 2
  %98 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %99 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %98, i32 0, i32 38
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %97, %100
  br i1 %101, label %102, label %116

102:                                              ; preds = %93
  %103 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %104 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %103, i32 0, i32 3
  %105 = load i32, i32* %104, align 4
  %106 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %107 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %106, i32 0, i32 39
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %105, %108
  br i1 %109, label %110, label %116

110:                                              ; preds = %102
  store i32 0, i32* %6, align 4
  %111 = load %struct.my_downsampler*, %struct.my_downsampler** %3, align 8
  %112 = getelementptr inbounds %struct.my_downsampler, %struct.my_downsampler* %111, i32 0, i32 1
  %113 = load i32, i32* %4, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [10 x void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)*], [10 x void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)*]* %112, i64 0, i64 %114
  store void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)* @h2v1_downsample, void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)** %115, align 8
  br label %193

116:                                              ; preds = %102, %93
  %117 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %118 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %117, i32 0, i32 2
  %119 = load i32, i32* %118, align 8
  %120 = mul nsw i32 %119, 2
  %121 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %122 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %121, i32 0, i32 38
  %123 = load i32, i32* %122, align 8
  %124 = icmp eq i32 %120, %123
  br i1 %124, label %125, label %155

125:                                              ; preds = %116
  %126 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %127 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %126, i32 0, i32 3
  %128 = load i32, i32* %127, align 4
  %129 = mul nsw i32 %128, 2
  %130 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %131 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %130, i32 0, i32 39
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %129, %132
  br i1 %133, label %134, label %155

134:                                              ; preds = %125
  %135 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %136 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %135, i32 0, i32 27
  %137 = load i32, i32* %136, align 8
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %139, label %148

139:                                              ; preds = %134
  %140 = load %struct.my_downsampler*, %struct.my_downsampler** %3, align 8
  %141 = getelementptr inbounds %struct.my_downsampler, %struct.my_downsampler* %140, i32 0, i32 1
  %142 = load i32, i32* %4, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [10 x void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)*], [10 x void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)*]* %141, i64 0, i64 %143
  store void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)* @h2v2_smooth_downsample, void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)** %144, align 8
  %145 = load %struct.my_downsampler*, %struct.my_downsampler** %3, align 8
  %146 = getelementptr inbounds %struct.my_downsampler, %struct.my_downsampler* %145, i32 0, i32 0
  %147 = getelementptr inbounds %struct.jpeg_downsampler.73, %struct.jpeg_downsampler.73* %146, i32 0, i32 2
  store i32 1, i32* %147, align 8
  br label %154

148:                                              ; preds = %134
  %149 = load %struct.my_downsampler*, %struct.my_downsampler** %3, align 8
  %150 = getelementptr inbounds %struct.my_downsampler, %struct.my_downsampler* %149, i32 0, i32 1
  %151 = load i32, i32* %4, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [10 x void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)*], [10 x void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)*]* %150, i64 0, i64 %152
  store void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)* @h2v2_downsample, void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)** %153, align 8
  br label %154

154:                                              ; preds = %148, %139
  br label %192

155:                                              ; preds = %125, %116
  %156 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %157 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %156, i32 0, i32 38
  %158 = load i32, i32* %157, align 8
  %159 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %160 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %159, i32 0, i32 2
  %161 = load i32, i32* %160, align 8
  %162 = srem i32 %158, %161
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %179

164:                                              ; preds = %155
  %165 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %166 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %165, i32 0, i32 39
  %167 = load i32, i32* %166, align 4
  %168 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %169 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %168, i32 0, i32 3
  %170 = load i32, i32* %169, align 4
  %171 = srem i32 %167, %170
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %179

173:                                              ; preds = %164
  store i32 0, i32* %6, align 4
  %174 = load %struct.my_downsampler*, %struct.my_downsampler** %3, align 8
  %175 = getelementptr inbounds %struct.my_downsampler, %struct.my_downsampler* %174, i32 0, i32 1
  %176 = load i32, i32* %4, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds [10 x void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)*], [10 x void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)*]* %175, i64 0, i64 %177
  store void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)* @int_downsample, void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)** %178, align 8
  br label %191

179:                                              ; preds = %164, %155
  %180 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %181 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %180, i32 0, i32 0
  %182 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %181, align 8
  %183 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %182, i32 0, i32 5
  store i32 37, i32* %183, align 8
  %184 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %185 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %184, i32 0, i32 0
  %186 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %185, align 8
  %187 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %186, i32 0, i32 0
  %188 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %187, align 8
  %189 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %190 = bitcast %struct.jpeg_compress_struct.58* %189 to %struct.jpeg_common_struct*
  call void %188(%struct.jpeg_common_struct* %190)
  br label %191

191:                                              ; preds = %179, %173
  br label %192

192:                                              ; preds = %191, %154
  br label %193

193:                                              ; preds = %192, %110
  br label %194

194:                                              ; preds = %193, %92
  br label %195

195:                                              ; preds = %194
  %196 = load i32, i32* %4, align 4
  %197 = add nsw i32 %196, 1
  store i32 %197, i32* %4, align 4
  %198 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %199 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %198, i32 1
  store %struct.jpeg_component_info* %199, %struct.jpeg_component_info** %5, align 8
  br label %50

200:                                              ; preds = %50
  %201 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %202 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %201, i32 0, i32 27
  %203 = load i32, i32* %202, align 8
  %204 = icmp ne i32 %203, 0
  br i1 %204, label %205, label %220

205:                                              ; preds = %200
  %206 = load i32, i32* %6, align 4
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %220, label %208

208:                                              ; preds = %205
  %209 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %210 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %209, i32 0, i32 0
  %211 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %210, align 8
  %212 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %211, i32 0, i32 5
  store i32 98, i32* %212, align 8
  %213 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %214 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %213, i32 0, i32 0
  %215 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %214, align 8
  %216 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %215, i32 0, i32 1
  %217 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %216, align 8
  %218 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %2, align 8
  %219 = bitcast %struct.jpeg_compress_struct.58* %218 to %struct.jpeg_common_struct*
  call void %217(%struct.jpeg_common_struct* %219, i32 0)
  br label %220

220:                                              ; preds = %208, %205, %200
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_downsample(%struct.jpeg_compress_struct.58* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.58*, align 8
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @sep_downsample(%struct.jpeg_compress_struct.58* %0, i8*** %1, i32 %2, i8*** %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_compress_struct.58*, align 8
  %7 = alloca i8***, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8***, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.my_downsampler*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.jpeg_component_info*, align 8
  %14 = alloca i8**, align 8
  %15 = alloca i8**, align 8
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %6, align 8
  store i8*** %1, i8**** %7, align 8
  store i32 %2, i32* %8, align 4
  store i8*** %3, i8**** %9, align 8
  store i32 %4, i32* %10, align 4
  %16 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %6, align 8
  %17 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %16, i32 0, i32 57
  %18 = load %struct.jpeg_downsampler.73*, %struct.jpeg_downsampler.73** %17, align 8
  %19 = bitcast %struct.jpeg_downsampler.73* %18 to %struct.my_downsampler*
  store %struct.my_downsampler* %19, %struct.my_downsampler** %11, align 8
  store i32 0, i32* %12, align 4
  %20 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %6, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %20, i32 0, i32 14
  %22 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %21, align 8
  store %struct.jpeg_component_info* %22, %struct.jpeg_component_info** %13, align 8
  br label %23

23:                                               ; preds = %60, %5
  %24 = load i32, i32* %12, align 4
  %25 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %6, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %25, i32 0, i32 12
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %24, %27
  br i1 %28, label %29, label %65

29:                                               ; preds = %23
  %30 = load i8***, i8**** %7, align 8
  %31 = load i32, i32* %12, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8**, i8*** %30, i64 %32
  %34 = load i8**, i8*** %33, align 8
  %35 = load i32, i32* %8, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8*, i8** %34, i64 %36
  store i8** %37, i8*** %14, align 8
  %38 = load i8***, i8**** %9, align 8
  %39 = load i32, i32* %12, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8**, i8*** %38, i64 %40
  %42 = load i8**, i8*** %41, align 8
  %43 = load i32, i32* %10, align 4
  %44 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %13, align 8
  %45 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %44, i32 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = mul i32 %43, %46
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8*, i8** %42, i64 %48
  store i8** %49, i8*** %15, align 8
  %50 = load %struct.my_downsampler*, %struct.my_downsampler** %11, align 8
  %51 = getelementptr inbounds %struct.my_downsampler, %struct.my_downsampler* %50, i32 0, i32 1
  %52 = load i32, i32* %12, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [10 x void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)*], [10 x void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)*]* %51, i64 0, i64 %53
  %55 = load void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)*, void (%struct.jpeg_compress_struct.58*, %struct.jpeg_component_info*, i8**, i8**)** %54, align 8
  %56 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %6, align 8
  %57 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %13, align 8
  %58 = load i8**, i8*** %14, align 8
  %59 = load i8**, i8*** %15, align 8
  call void %55(%struct.jpeg_compress_struct.58* %56, %struct.jpeg_component_info* %57, i8** %58, i8** %59)
  br label %60

60:                                               ; preds = %29
  %61 = load i32, i32* %12, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %12, align 4
  %63 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %13, align 8
  %64 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %63, i32 1
  store %struct.jpeg_component_info* %64, %struct.jpeg_component_info** %13, align 8
  br label %23

65:                                               ; preds = %23
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @fullsize_smooth_downsample(%struct.jpeg_compress_struct.58* %0, %struct.jpeg_component_info* %1, i8** %2, i8** %3) #0 {
  %5 = alloca %struct.jpeg_compress_struct.58*, align 8
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %5, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i8** %3, i8*** %8, align 8
  %23 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %24 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %23, i32 0, i32 7
  %25 = load i32, i32* %24, align 4
  %26 = mul i32 %25, 8
  store i32 %26, i32* %11, align 4
  %27 = load i8**, i8*** %7, align 8
  %28 = getelementptr inbounds i8*, i8** %27, i64 -1
  %29 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %30 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %29, i32 0, i32 39
  %31 = load i32, i32* %30, align 4
  %32 = add nsw i32 %31, 2
  %33 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %34 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %33, i32 0, i32 6
  %35 = load i32, i32* %34, align 8
  %36 = load i32, i32* %11, align 4
  call void @expand_right_edge(i8** %28, i32 %32, i32 %35, i32 %36)
  %37 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %38 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %37, i32 0, i32 27
  %39 = load i32, i32* %38, align 8
  %40 = sext i32 %39 to i64
  %41 = mul nsw i64 %40, 512
  %42 = sub nsw i64 65536, %41
  store i64 %42, i64* %18, align 8
  %43 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %44 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %43, i32 0, i32 27
  %45 = load i32, i32* %44, align 8
  %46 = mul nsw i32 %45, 64
  %47 = sext i32 %46 to i64
  store i64 %47, i64* %19, align 8
  store i32 0, i32* %9, align 4
  br label %48

48:                                               ; preds = %212, %4
  %49 = load i32, i32* %9, align 4
  %50 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %51 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %50, i32 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %49, %52
  br i1 %53, label %54, label %215

54:                                               ; preds = %48
  %55 = load i8**, i8*** %8, align 8
  %56 = load i32, i32* %9, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8*, i8** %55, i64 %57
  %59 = load i8*, i8** %58, align 8
  store i8* %59, i8** %15, align 8
  %60 = load i8**, i8*** %7, align 8
  %61 = load i32, i32* %9, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8*, i8** %60, i64 %62
  %64 = load i8*, i8** %63, align 8
  store i8* %64, i8** %12, align 8
  %65 = load i8**, i8*** %7, align 8
  %66 = load i32, i32* %9, align 4
  %67 = sub nsw i32 %66, 1
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8*, i8** %65, i64 %68
  %70 = load i8*, i8** %69, align 8
  store i8* %70, i8** %13, align 8
  %71 = load i8**, i8*** %7, align 8
  %72 = load i32, i32* %9, align 4
  %73 = add nsw i32 %72, 1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8*, i8** %71, i64 %74
  %76 = load i8*, i8** %75, align 8
  store i8* %76, i8** %14, align 8
  %77 = load i8*, i8** %13, align 8
  %78 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %78, i8** %13, align 8
  %79 = load i8, i8* %77, align 1
  %80 = zext i8 %79 to i32
  %81 = load i8*, i8** %14, align 8
  %82 = getelementptr inbounds i8, i8* %81, i32 1
  store i8* %82, i8** %14, align 8
  %83 = load i8, i8* %81, align 1
  %84 = zext i8 %83 to i32
  %85 = add nsw i32 %80, %84
  %86 = load i8*, i8** %12, align 8
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = add nsw i32 %85, %88
  store i32 %89, i32* %20, align 4
  %90 = load i8*, i8** %12, align 8
  %91 = getelementptr inbounds i8, i8* %90, i32 1
  store i8* %91, i8** %12, align 8
  %92 = load i8, i8* %90, align 1
  %93 = zext i8 %92 to i32
  %94 = sext i32 %93 to i64
  store i64 %94, i64* %16, align 8
  %95 = load i8*, i8** %13, align 8
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = load i8*, i8** %14, align 8
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = add nsw i32 %97, %100
  %102 = load i8*, i8** %12, align 8
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = add nsw i32 %101, %104
  store i32 %105, i32* %22, align 4
  %106 = load i32, i32* %20, align 4
  %107 = sext i32 %106 to i64
  %108 = load i32, i32* %20, align 4
  %109 = sext i32 %108 to i64
  %110 = load i64, i64* %16, align 8
  %111 = sub nsw i64 %109, %110
  %112 = add nsw i64 %107, %111
  %113 = load i32, i32* %22, align 4
  %114 = sext i32 %113 to i64
  %115 = add nsw i64 %112, %114
  store i64 %115, i64* %17, align 8
  %116 = load i64, i64* %16, align 8
  %117 = load i64, i64* %18, align 8
  %118 = mul nsw i64 %116, %117
  %119 = load i64, i64* %17, align 8
  %120 = load i64, i64* %19, align 8
  %121 = mul nsw i64 %119, %120
  %122 = add nsw i64 %118, %121
  store i64 %122, i64* %16, align 8
  %123 = load i64, i64* %16, align 8
  %124 = add nsw i64 %123, 32768
  %125 = ashr i64 %124, 16
  %126 = trunc i64 %125 to i8
  %127 = load i8*, i8** %15, align 8
  %128 = getelementptr inbounds i8, i8* %127, i32 1
  store i8* %128, i8** %15, align 8
  store i8 %126, i8* %127, align 1
  %129 = load i32, i32* %20, align 4
  store i32 %129, i32* %21, align 4
  %130 = load i32, i32* %22, align 4
  store i32 %130, i32* %20, align 4
  %131 = load i32, i32* %11, align 4
  %132 = sub i32 %131, 2
  store i32 %132, i32* %10, align 4
  br label %133

133:                                              ; preds = %182, %54
  %134 = load i32, i32* %10, align 4
  %135 = icmp ugt i32 %134, 0
  br i1 %135, label %136, label %185

136:                                              ; preds = %133
  %137 = load i8*, i8** %12, align 8
  %138 = getelementptr inbounds i8, i8* %137, i32 1
  store i8* %138, i8** %12, align 8
  %139 = load i8, i8* %137, align 1
  %140 = zext i8 %139 to i32
  %141 = sext i32 %140 to i64
  store i64 %141, i64* %16, align 8
  %142 = load i8*, i8** %13, align 8
  %143 = getelementptr inbounds i8, i8* %142, i32 1
  store i8* %143, i8** %13, align 8
  %144 = load i8*, i8** %14, align 8
  %145 = getelementptr inbounds i8, i8* %144, i32 1
  store i8* %145, i8** %14, align 8
  %146 = load i8*, i8** %13, align 8
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i32
  %149 = load i8*, i8** %14, align 8
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  %152 = add nsw i32 %148, %151
  %153 = load i8*, i8** %12, align 8
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = add nsw i32 %152, %155
  store i32 %156, i32* %22, align 4
  %157 = load i32, i32* %21, align 4
  %158 = sext i32 %157 to i64
  %159 = load i32, i32* %20, align 4
  %160 = sext i32 %159 to i64
  %161 = load i64, i64* %16, align 8
  %162 = sub nsw i64 %160, %161
  %163 = add nsw i64 %158, %162
  %164 = load i32, i32* %22, align 4
  %165 = sext i32 %164 to i64
  %166 = add nsw i64 %163, %165
  store i64 %166, i64* %17, align 8
  %167 = load i64, i64* %16, align 8
  %168 = load i64, i64* %18, align 8
  %169 = mul nsw i64 %167, %168
  %170 = load i64, i64* %17, align 8
  %171 = load i64, i64* %19, align 8
  %172 = mul nsw i64 %170, %171
  %173 = add nsw i64 %169, %172
  store i64 %173, i64* %16, align 8
  %174 = load i64, i64* %16, align 8
  %175 = add nsw i64 %174, 32768
  %176 = ashr i64 %175, 16
  %177 = trunc i64 %176 to i8
  %178 = load i8*, i8** %15, align 8
  %179 = getelementptr inbounds i8, i8* %178, i32 1
  store i8* %179, i8** %15, align 8
  store i8 %177, i8* %178, align 1
  %180 = load i32, i32* %20, align 4
  store i32 %180, i32* %21, align 4
  %181 = load i32, i32* %22, align 4
  store i32 %181, i32* %20, align 4
  br label %182

182:                                              ; preds = %136
  %183 = load i32, i32* %10, align 4
  %184 = add i32 %183, -1
  store i32 %184, i32* %10, align 4
  br label %133

185:                                              ; preds = %133
  %186 = load i8*, i8** %12, align 8
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = sext i32 %188 to i64
  store i64 %189, i64* %16, align 8
  %190 = load i32, i32* %21, align 4
  %191 = sext i32 %190 to i64
  %192 = load i32, i32* %20, align 4
  %193 = sext i32 %192 to i64
  %194 = load i64, i64* %16, align 8
  %195 = sub nsw i64 %193, %194
  %196 = add nsw i64 %191, %195
  %197 = load i32, i32* %20, align 4
  %198 = sext i32 %197 to i64
  %199 = add nsw i64 %196, %198
  store i64 %199, i64* %17, align 8
  %200 = load i64, i64* %16, align 8
  %201 = load i64, i64* %18, align 8
  %202 = mul nsw i64 %200, %201
  %203 = load i64, i64* %17, align 8
  %204 = load i64, i64* %19, align 8
  %205 = mul nsw i64 %203, %204
  %206 = add nsw i64 %202, %205
  store i64 %206, i64* %16, align 8
  %207 = load i64, i64* %16, align 8
  %208 = add nsw i64 %207, 32768
  %209 = ashr i64 %208, 16
  %210 = trunc i64 %209 to i8
  %211 = load i8*, i8** %15, align 8
  store i8 %210, i8* %211, align 1
  br label %212

212:                                              ; preds = %185
  %213 = load i32, i32* %9, align 4
  %214 = add nsw i32 %213, 1
  store i32 %214, i32* %9, align 4
  br label %48

215:                                              ; preds = %48
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @fullsize_downsample(%struct.jpeg_compress_struct.58* %0, %struct.jpeg_component_info* %1, i8** %2, i8** %3) #0 {
  %5 = alloca %struct.jpeg_compress_struct.58*, align 8
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8**, align 8
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %5, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i8** %3, i8*** %8, align 8
  %9 = load i8**, i8*** %7, align 8
  %10 = load i8**, i8*** %8, align 8
  %11 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %12 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %11, i32 0, i32 39
  %13 = load i32, i32* %12, align 4
  %14 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %14, i32 0, i32 6
  %16 = load i32, i32* %15, align 8
  call void @jcopy_sample_rows(i8** %9, i32 0, i8** %10, i32 0, i32 %13, i32 %16)
  %17 = load i8**, i8*** %8, align 8
  %18 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %19 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %18, i32 0, i32 39
  %20 = load i32, i32* %19, align 4
  %21 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %21, i32 0, i32 6
  %23 = load i32, i32* %22, align 8
  %24 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %25 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %24, i32 0, i32 7
  %26 = load i32, i32* %25, align 4
  %27 = mul i32 %26, 8
  call void @expand_right_edge(i8** %17, i32 %20, i32 %23, i32 %27)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @h2v1_downsample(%struct.jpeg_compress_struct.58* %0, %struct.jpeg_component_info* %1, i8** %2, i8** %3) #0 {
  %5 = alloca %struct.jpeg_compress_struct.58*, align 8
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %5, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i8** %3, i8*** %8, align 8
  %15 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %16 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %15, i32 0, i32 7
  %17 = load i32, i32* %16, align 4
  %18 = mul i32 %17, 8
  store i32 %18, i32* %11, align 4
  %19 = load i8**, i8*** %7, align 8
  %20 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %20, i32 0, i32 39
  %22 = load i32, i32* %21, align 4
  %23 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %23, i32 0, i32 6
  %25 = load i32, i32* %24, align 8
  %26 = load i32, i32* %11, align 4
  %27 = mul i32 %26, 2
  call void @expand_right_edge(i8** %19, i32 %22, i32 %25, i32 %27)
  store i32 0, i32* %9, align 4
  br label %28

28:                                               ; preds = %72, %4
  %29 = load i32, i32* %9, align 4
  %30 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %31 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %30, i32 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %29, %32
  br i1 %33, label %34, label %75

34:                                               ; preds = %28
  %35 = load i8**, i8*** %8, align 8
  %36 = load i32, i32* %9, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8*, i8** %35, i64 %37
  %39 = load i8*, i8** %38, align 8
  store i8* %39, i8** %13, align 8
  %40 = load i8**, i8*** %7, align 8
  %41 = load i32, i32* %9, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8*, i8** %40, i64 %42
  %44 = load i8*, i8** %43, align 8
  store i8* %44, i8** %12, align 8
  store i32 0, i32* %14, align 4
  store i32 0, i32* %10, align 4
  br label %45

45:                                               ; preds = %68, %34
  %46 = load i32, i32* %10, align 4
  %47 = load i32, i32* %11, align 4
  %48 = icmp ult i32 %46, %47
  br i1 %48, label %49, label %71

49:                                               ; preds = %45
  %50 = load i8*, i8** %12, align 8
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = load i8*, i8** %12, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = add nsw i32 %52, %56
  %58 = load i32, i32* %14, align 4
  %59 = add nsw i32 %57, %58
  %60 = ashr i32 %59, 1
  %61 = trunc i32 %60 to i8
  %62 = load i8*, i8** %13, align 8
  %63 = getelementptr inbounds i8, i8* %62, i32 1
  store i8* %63, i8** %13, align 8
  store i8 %61, i8* %62, align 1
  %64 = load i32, i32* %14, align 4
  %65 = xor i32 %64, 1
  store i32 %65, i32* %14, align 4
  %66 = load i8*, i8** %12, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 2
  store i8* %67, i8** %12, align 8
  br label %68

68:                                               ; preds = %49
  %69 = load i32, i32* %10, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %10, align 4
  br label %45

71:                                               ; preds = %45
  br label %72

72:                                               ; preds = %71
  %73 = load i32, i32* %9, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %9, align 4
  br label %28

75:                                               ; preds = %28
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @h2v2_smooth_downsample(%struct.jpeg_compress_struct.58* %0, %struct.jpeg_component_info* %1, i8** %2, i8** %3) #0 {
  %5 = alloca %struct.jpeg_compress_struct.58*, align 8
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %5, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i8** %3, i8*** %8, align 8
  %22 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %23 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %22, i32 0, i32 7
  %24 = load i32, i32* %23, align 4
  %25 = mul i32 %24, 8
  store i32 %25, i32* %12, align 4
  %26 = load i8**, i8*** %7, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 -1
  %28 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %29 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %28, i32 0, i32 39
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, 2
  %32 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %33 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %32, i32 0, i32 6
  %34 = load i32, i32* %33, align 8
  %35 = load i32, i32* %12, align 4
  %36 = mul i32 %35, 2
  call void @expand_right_edge(i8** %27, i32 %31, i32 %34, i32 %36)
  %37 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %38 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %37, i32 0, i32 27
  %39 = load i32, i32* %38, align 8
  %40 = mul nsw i32 %39, 80
  %41 = sub nsw i32 16384, %40
  %42 = sext i32 %41 to i64
  store i64 %42, i64* %20, align 8
  %43 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %44 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %43, i32 0, i32 27
  %45 = load i32, i32* %44, align 8
  %46 = mul nsw i32 %45, 16
  %47 = sext i32 %46 to i64
  store i64 %47, i64* %21, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  br label %48

48:                                               ; preds = %388, %4
  %49 = load i32, i32* %10, align 4
  %50 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %51 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %50, i32 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %49, %52
  br i1 %53, label %54, label %391

54:                                               ; preds = %48
  %55 = load i8**, i8*** %8, align 8
  %56 = load i32, i32* %10, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8*, i8** %55, i64 %57
  %59 = load i8*, i8** %58, align 8
  store i8* %59, i8** %17, align 8
  %60 = load i8**, i8*** %7, align 8
  %61 = load i32, i32* %9, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8*, i8** %60, i64 %62
  %64 = load i8*, i8** %63, align 8
  store i8* %64, i8** %13, align 8
  %65 = load i8**, i8*** %7, align 8
  %66 = load i32, i32* %9, align 4
  %67 = add nsw i32 %66, 1
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8*, i8** %65, i64 %68
  %70 = load i8*, i8** %69, align 8
  store i8* %70, i8** %14, align 8
  %71 = load i8**, i8*** %7, align 8
  %72 = load i32, i32* %9, align 4
  %73 = sub nsw i32 %72, 1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8*, i8** %71, i64 %74
  %76 = load i8*, i8** %75, align 8
  store i8* %76, i8** %15, align 8
  %77 = load i8**, i8*** %7, align 8
  %78 = load i32, i32* %9, align 4
  %79 = add nsw i32 %78, 2
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i8*, i8** %77, i64 %80
  %82 = load i8*, i8** %81, align 8
  store i8* %82, i8** %16, align 8
  %83 = load i8*, i8** %13, align 8
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = load i8*, i8** %13, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 1
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = add nsw i32 %85, %89
  %91 = load i8*, i8** %14, align 8
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = add nsw i32 %90, %93
  %95 = load i8*, i8** %14, align 8
  %96 = getelementptr inbounds i8, i8* %95, i64 1
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = add nsw i32 %94, %98
  %100 = sext i32 %99 to i64
  store i64 %100, i64* %18, align 8
  %101 = load i8*, i8** %15, align 8
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = load i8*, i8** %15, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 1
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = add nsw i32 %103, %107
  %109 = load i8*, i8** %16, align 8
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = add nsw i32 %108, %111
  %113 = load i8*, i8** %16, align 8
  %114 = getelementptr inbounds i8, i8* %113, i64 1
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = add nsw i32 %112, %116
  %118 = load i8*, i8** %13, align 8
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = add nsw i32 %117, %120
  %122 = load i8*, i8** %13, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 2
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = add nsw i32 %121, %125
  %127 = load i8*, i8** %14, align 8
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = add nsw i32 %126, %129
  %131 = load i8*, i8** %14, align 8
  %132 = getelementptr inbounds i8, i8* %131, i64 2
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = add nsw i32 %130, %134
  %136 = sext i32 %135 to i64
  store i64 %136, i64* %19, align 8
  %137 = load i64, i64* %19, align 8
  %138 = load i64, i64* %19, align 8
  %139 = add nsw i64 %138, %137
  store i64 %139, i64* %19, align 8
  %140 = load i8*, i8** %15, align 8
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = load i8*, i8** %15, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 2
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = add nsw i32 %142, %146
  %148 = load i8*, i8** %16, align 8
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = add nsw i32 %147, %150
  %152 = load i8*, i8** %16, align 8
  %153 = getelementptr inbounds i8, i8* %152, i64 2
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = add nsw i32 %151, %155
  %157 = sext i32 %156 to i64
  %158 = load i64, i64* %19, align 8
  %159 = add nsw i64 %158, %157
  store i64 %159, i64* %19, align 8
  %160 = load i64, i64* %18, align 8
  %161 = load i64, i64* %20, align 8
  %162 = mul nsw i64 %160, %161
  %163 = load i64, i64* %19, align 8
  %164 = load i64, i64* %21, align 8
  %165 = mul nsw i64 %163, %164
  %166 = add nsw i64 %162, %165
  store i64 %166, i64* %18, align 8
  %167 = load i64, i64* %18, align 8
  %168 = add nsw i64 %167, 32768
  %169 = ashr i64 %168, 16
  %170 = trunc i64 %169 to i8
  %171 = load i8*, i8** %17, align 8
  %172 = getelementptr inbounds i8, i8* %171, i32 1
  store i8* %172, i8** %17, align 8
  store i8 %170, i8* %171, align 1
  %173 = load i8*, i8** %13, align 8
  %174 = getelementptr inbounds i8, i8* %173, i64 2
  store i8* %174, i8** %13, align 8
  %175 = load i8*, i8** %14, align 8
  %176 = getelementptr inbounds i8, i8* %175, i64 2
  store i8* %176, i8** %14, align 8
  %177 = load i8*, i8** %15, align 8
  %178 = getelementptr inbounds i8, i8* %177, i64 2
  store i8* %178, i8** %15, align 8
  %179 = load i8*, i8** %16, align 8
  %180 = getelementptr inbounds i8, i8* %179, i64 2
  store i8* %180, i8** %16, align 8
  %181 = load i32, i32* %12, align 4
  %182 = sub i32 %181, 2
  store i32 %182, i32* %11, align 4
  br label %183

183:                                              ; preds = %289, %54
  %184 = load i32, i32* %11, align 4
  %185 = icmp ugt i32 %184, 0
  br i1 %185, label %186, label %292

186:                                              ; preds = %183
  %187 = load i8*, i8** %13, align 8
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = load i8*, i8** %13, align 8
  %191 = getelementptr inbounds i8, i8* %190, i64 1
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = add nsw i32 %189, %193
  %195 = load i8*, i8** %14, align 8
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = add nsw i32 %194, %197
  %199 = load i8*, i8** %14, align 8
  %200 = getelementptr inbounds i8, i8* %199, i64 1
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i32
  %203 = add nsw i32 %198, %202
  %204 = sext i32 %203 to i64
  store i64 %204, i64* %18, align 8
  %205 = load i8*, i8** %15, align 8
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = load i8*, i8** %15, align 8
  %209 = getelementptr inbounds i8, i8* %208, i64 1
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = add nsw i32 %207, %211
  %213 = load i8*, i8** %16, align 8
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i32
  %216 = add nsw i32 %212, %215
  %217 = load i8*, i8** %16, align 8
  %218 = getelementptr inbounds i8, i8* %217, i64 1
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i32
  %221 = add nsw i32 %216, %220
  %222 = load i8*, i8** %13, align 8
  %223 = getelementptr inbounds i8, i8* %222, i64 -1
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = add nsw i32 %221, %225
  %227 = load i8*, i8** %13, align 8
  %228 = getelementptr inbounds i8, i8* %227, i64 2
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  %231 = add nsw i32 %226, %230
  %232 = load i8*, i8** %14, align 8
  %233 = getelementptr inbounds i8, i8* %232, i64 -1
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = add nsw i32 %231, %235
  %237 = load i8*, i8** %14, align 8
  %238 = getelementptr inbounds i8, i8* %237, i64 2
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i32
  %241 = add nsw i32 %236, %240
  %242 = sext i32 %241 to i64
  store i64 %242, i64* %19, align 8
  %243 = load i64, i64* %19, align 8
  %244 = load i64, i64* %19, align 8
  %245 = add nsw i64 %244, %243
  store i64 %245, i64* %19, align 8
  %246 = load i8*, i8** %15, align 8
  %247 = getelementptr inbounds i8, i8* %246, i64 -1
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = load i8*, i8** %15, align 8
  %251 = getelementptr inbounds i8, i8* %250, i64 2
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i32
  %254 = add nsw i32 %249, %253
  %255 = load i8*, i8** %16, align 8
  %256 = getelementptr inbounds i8, i8* %255, i64 -1
  %257 = load i8, i8* %256, align 1
  %258 = zext i8 %257 to i32
  %259 = add nsw i32 %254, %258
  %260 = load i8*, i8** %16, align 8
  %261 = getelementptr inbounds i8, i8* %260, i64 2
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i32
  %264 = add nsw i32 %259, %263
  %265 = sext i32 %264 to i64
  %266 = load i64, i64* %19, align 8
  %267 = add nsw i64 %266, %265
  store i64 %267, i64* %19, align 8
  %268 = load i64, i64* %18, align 8
  %269 = load i64, i64* %20, align 8
  %270 = mul nsw i64 %268, %269
  %271 = load i64, i64* %19, align 8
  %272 = load i64, i64* %21, align 8
  %273 = mul nsw i64 %271, %272
  %274 = add nsw i64 %270, %273
  store i64 %274, i64* %18, align 8
  %275 = load i64, i64* %18, align 8
  %276 = add nsw i64 %275, 32768
  %277 = ashr i64 %276, 16
  %278 = trunc i64 %277 to i8
  %279 = load i8*, i8** %17, align 8
  %280 = getelementptr inbounds i8, i8* %279, i32 1
  store i8* %280, i8** %17, align 8
  store i8 %278, i8* %279, align 1
  %281 = load i8*, i8** %13, align 8
  %282 = getelementptr inbounds i8, i8* %281, i64 2
  store i8* %282, i8** %13, align 8
  %283 = load i8*, i8** %14, align 8
  %284 = getelementptr inbounds i8, i8* %283, i64 2
  store i8* %284, i8** %14, align 8
  %285 = load i8*, i8** %15, align 8
  %286 = getelementptr inbounds i8, i8* %285, i64 2
  store i8* %286, i8** %15, align 8
  %287 = load i8*, i8** %16, align 8
  %288 = getelementptr inbounds i8, i8* %287, i64 2
  store i8* %288, i8** %16, align 8
  br label %289

289:                                              ; preds = %186
  %290 = load i32, i32* %11, align 4
  %291 = add i32 %290, -1
  store i32 %291, i32* %11, align 4
  br label %183

292:                                              ; preds = %183
  %293 = load i8*, i8** %13, align 8
  %294 = load i8, i8* %293, align 1
  %295 = zext i8 %294 to i32
  %296 = load i8*, i8** %13, align 8
  %297 = getelementptr inbounds i8, i8* %296, i64 1
  %298 = load i8, i8* %297, align 1
  %299 = zext i8 %298 to i32
  %300 = add nsw i32 %295, %299
  %301 = load i8*, i8** %14, align 8
  %302 = load i8, i8* %301, align 1
  %303 = zext i8 %302 to i32
  %304 = add nsw i32 %300, %303
  %305 = load i8*, i8** %14, align 8
  %306 = getelementptr inbounds i8, i8* %305, i64 1
  %307 = load i8, i8* %306, align 1
  %308 = zext i8 %307 to i32
  %309 = add nsw i32 %304, %308
  %310 = sext i32 %309 to i64
  store i64 %310, i64* %18, align 8
  %311 = load i8*, i8** %15, align 8
  %312 = load i8, i8* %311, align 1
  %313 = zext i8 %312 to i32
  %314 = load i8*, i8** %15, align 8
  %315 = getelementptr inbounds i8, i8* %314, i64 1
  %316 = load i8, i8* %315, align 1
  %317 = zext i8 %316 to i32
  %318 = add nsw i32 %313, %317
  %319 = load i8*, i8** %16, align 8
  %320 = load i8, i8* %319, align 1
  %321 = zext i8 %320 to i32
  %322 = add nsw i32 %318, %321
  %323 = load i8*, i8** %16, align 8
  %324 = getelementptr inbounds i8, i8* %323, i64 1
  %325 = load i8, i8* %324, align 1
  %326 = zext i8 %325 to i32
  %327 = add nsw i32 %322, %326
  %328 = load i8*, i8** %13, align 8
  %329 = getelementptr inbounds i8, i8* %328, i64 -1
  %330 = load i8, i8* %329, align 1
  %331 = zext i8 %330 to i32
  %332 = add nsw i32 %327, %331
  %333 = load i8*, i8** %13, align 8
  %334 = getelementptr inbounds i8, i8* %333, i64 1
  %335 = load i8, i8* %334, align 1
  %336 = zext i8 %335 to i32
  %337 = add nsw i32 %332, %336
  %338 = load i8*, i8** %14, align 8
  %339 = getelementptr inbounds i8, i8* %338, i64 -1
  %340 = load i8, i8* %339, align 1
  %341 = zext i8 %340 to i32
  %342 = add nsw i32 %337, %341
  %343 = load i8*, i8** %14, align 8
  %344 = getelementptr inbounds i8, i8* %343, i64 1
  %345 = load i8, i8* %344, align 1
  %346 = zext i8 %345 to i32
  %347 = add nsw i32 %342, %346
  %348 = sext i32 %347 to i64
  store i64 %348, i64* %19, align 8
  %349 = load i64, i64* %19, align 8
  %350 = load i64, i64* %19, align 8
  %351 = add nsw i64 %350, %349
  store i64 %351, i64* %19, align 8
  %352 = load i8*, i8** %15, align 8
  %353 = getelementptr inbounds i8, i8* %352, i64 -1
  %354 = load i8, i8* %353, align 1
  %355 = zext i8 %354 to i32
  %356 = load i8*, i8** %15, align 8
  %357 = getelementptr inbounds i8, i8* %356, i64 1
  %358 = load i8, i8* %357, align 1
  %359 = zext i8 %358 to i32
  %360 = add nsw i32 %355, %359
  %361 = load i8*, i8** %16, align 8
  %362 = getelementptr inbounds i8, i8* %361, i64 -1
  %363 = load i8, i8* %362, align 1
  %364 = zext i8 %363 to i32
  %365 = add nsw i32 %360, %364
  %366 = load i8*, i8** %16, align 8
  %367 = getelementptr inbounds i8, i8* %366, i64 1
  %368 = load i8, i8* %367, align 1
  %369 = zext i8 %368 to i32
  %370 = add nsw i32 %365, %369
  %371 = sext i32 %370 to i64
  %372 = load i64, i64* %19, align 8
  %373 = add nsw i64 %372, %371
  store i64 %373, i64* %19, align 8
  %374 = load i64, i64* %18, align 8
  %375 = load i64, i64* %20, align 8
  %376 = mul nsw i64 %374, %375
  %377 = load i64, i64* %19, align 8
  %378 = load i64, i64* %21, align 8
  %379 = mul nsw i64 %377, %378
  %380 = add nsw i64 %376, %379
  store i64 %380, i64* %18, align 8
  %381 = load i64, i64* %18, align 8
  %382 = add nsw i64 %381, 32768
  %383 = ashr i64 %382, 16
  %384 = trunc i64 %383 to i8
  %385 = load i8*, i8** %17, align 8
  store i8 %384, i8* %385, align 1
  %386 = load i32, i32* %9, align 4
  %387 = add nsw i32 %386, 2
  store i32 %387, i32* %9, align 4
  br label %388

388:                                              ; preds = %292
  %389 = load i32, i32* %10, align 4
  %390 = add nsw i32 %389, 1
  store i32 %390, i32* %10, align 4
  br label %48

391:                                              ; preds = %48
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @h2v2_downsample(%struct.jpeg_compress_struct.58* %0, %struct.jpeg_component_info* %1, i8** %2, i8** %3) #0 {
  %5 = alloca %struct.jpeg_compress_struct.58*, align 8
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %5, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i8** %3, i8*** %8, align 8
  %17 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %18 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %17, i32 0, i32 7
  %19 = load i32, i32* %18, align 4
  %20 = mul i32 %19, 8
  store i32 %20, i32* %12, align 4
  %21 = load i8**, i8*** %7, align 8
  %22 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %23 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %22, i32 0, i32 39
  %24 = load i32, i32* %23, align 4
  %25 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %25, i32 0, i32 6
  %27 = load i32, i32* %26, align 8
  %28 = load i32, i32* %12, align 4
  %29 = mul i32 %28, 2
  call void @expand_right_edge(i8** %21, i32 %24, i32 %27, i32 %29)
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  br label %30

30:                                               ; preds = %93, %4
  %31 = load i32, i32* %10, align 4
  %32 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %33 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %32, i32 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %31, %34
  br i1 %35, label %36, label %96

36:                                               ; preds = %30
  %37 = load i8**, i8*** %8, align 8
  %38 = load i32, i32* %10, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8*, i8** %37, i64 %39
  %41 = load i8*, i8** %40, align 8
  store i8* %41, i8** %15, align 8
  %42 = load i8**, i8*** %7, align 8
  %43 = load i32, i32* %9, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8*, i8** %42, i64 %44
  %46 = load i8*, i8** %45, align 8
  store i8* %46, i8** %13, align 8
  %47 = load i8**, i8*** %7, align 8
  %48 = load i32, i32* %9, align 4
  %49 = add nsw i32 %48, 1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8*, i8** %47, i64 %50
  %52 = load i8*, i8** %51, align 8
  store i8* %52, i8** %14, align 8
  store i32 1, i32* %16, align 4
  store i32 0, i32* %11, align 4
  br label %53

53:                                               ; preds = %87, %36
  %54 = load i32, i32* %11, align 4
  %55 = load i32, i32* %12, align 4
  %56 = icmp ult i32 %54, %55
  br i1 %56, label %57, label %90

57:                                               ; preds = %53
  %58 = load i8*, i8** %13, align 8
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = load i8*, i8** %13, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 1
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = add nsw i32 %60, %64
  %66 = load i8*, i8** %14, align 8
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = add nsw i32 %65, %68
  %70 = load i8*, i8** %14, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 1
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = add nsw i32 %69, %73
  %75 = load i32, i32* %16, align 4
  %76 = add nsw i32 %74, %75
  %77 = ashr i32 %76, 2
  %78 = trunc i32 %77 to i8
  %79 = load i8*, i8** %15, align 8
  %80 = getelementptr inbounds i8, i8* %79, i32 1
  store i8* %80, i8** %15, align 8
  store i8 %78, i8* %79, align 1
  %81 = load i32, i32* %16, align 4
  %82 = xor i32 %81, 3
  store i32 %82, i32* %16, align 4
  %83 = load i8*, i8** %13, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 2
  store i8* %84, i8** %13, align 8
  %85 = load i8*, i8** %14, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 2
  store i8* %86, i8** %14, align 8
  br label %87

87:                                               ; preds = %57
  %88 = load i32, i32* %11, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %11, align 4
  br label %53

90:                                               ; preds = %53
  %91 = load i32, i32* %9, align 4
  %92 = add nsw i32 %91, 2
  store i32 %92, i32* %9, align 4
  br label %93

93:                                               ; preds = %90
  %94 = load i32, i32* %10, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %10, align 4
  br label %30

96:                                               ; preds = %30
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @int_downsample(%struct.jpeg_compress_struct.58* %0, %struct.jpeg_component_info* %1, i8** %2, i8** %3) #0 {
  %5 = alloca %struct.jpeg_compress_struct.58*, align 8
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i64, align 8
  store %struct.jpeg_compress_struct.58* %0, %struct.jpeg_compress_struct.58** %5, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i8** %3, i8*** %8, align 8
  %23 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %24 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %23, i32 0, i32 7
  %25 = load i32, i32* %24, align 4
  %26 = mul i32 %25, 8
  store i32 %26, i32* %19, align 4
  %27 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %28 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %27, i32 0, i32 38
  %29 = load i32, i32* %28, align 8
  %30 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %31 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %30, i32 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = sdiv i32 %29, %32
  store i32 %33, i32* %11, align 4
  %34 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %34, i32 0, i32 39
  %36 = load i32, i32* %35, align 4
  %37 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %38 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %37, i32 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = sdiv i32 %36, %39
  store i32 %40, i32* %12, align 4
  %41 = load i32, i32* %11, align 4
  %42 = load i32, i32* %12, align 4
  %43 = mul nsw i32 %41, %42
  store i32 %43, i32* %13, align 4
  %44 = load i32, i32* %13, align 4
  %45 = sdiv i32 %44, 2
  store i32 %45, i32* %14, align 4
  %46 = load i8**, i8*** %7, align 8
  %47 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %48 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %47, i32 0, i32 39
  %49 = load i32, i32* %48, align 4
  %50 = load %struct.jpeg_compress_struct.58*, %struct.jpeg_compress_struct.58** %5, align 8
  %51 = getelementptr inbounds %struct.jpeg_compress_struct.58, %struct.jpeg_compress_struct.58* %50, i32 0, i32 6
  %52 = load i32, i32* %51, align 8
  %53 = load i32, i32* %19, align 4
  %54 = load i32, i32* %11, align 4
  %55 = mul i32 %53, %54
  call void @expand_right_edge(i8** %46, i32 %49, i32 %52, i32 %55)
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  br label %56

56:                                               ; preds = %128, %4
  %57 = load i32, i32* %10, align 4
  %58 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %59 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %58, i32 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %57, %60
  br i1 %61, label %62, label %131

62:                                               ; preds = %56
  %63 = load i8**, i8*** %8, align 8
  %64 = load i32, i32* %10, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8*, i8** %63, i64 %65
  %67 = load i8*, i8** %66, align 8
  store i8* %67, i8** %21, align 8
  store i32 0, i32* %17, align 4
  store i32 0, i32* %18, align 4
  br label %68

68:                                               ; preds = %118, %62
  %69 = load i32, i32* %17, align 4
  %70 = load i32, i32* %19, align 4
  %71 = icmp ult i32 %69, %70
  br i1 %71, label %72, label %124

72:                                               ; preds = %68
  store i64 0, i64* %22, align 8
  store i32 0, i32* %16, align 4
  br label %73

73:                                               ; preds = %104, %72
  %74 = load i32, i32* %16, align 4
  %75 = load i32, i32* %12, align 4
  %76 = icmp slt i32 %74, %75
  br i1 %76, label %77, label %107

77:                                               ; preds = %73
  %78 = load i8**, i8*** %7, align 8
  %79 = load i32, i32* %9, align 4
  %80 = load i32, i32* %16, align 4
  %81 = add nsw i32 %79, %80
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8*, i8** %78, i64 %82
  %84 = load i8*, i8** %83, align 8
  %85 = load i32, i32* %18, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %84, i64 %86
  store i8* %87, i8** %20, align 8
  store i32 0, i32* %15, align 4
  br label %88

88:                                               ; preds = %100, %77
  %89 = load i32, i32* %15, align 4
  %90 = load i32, i32* %11, align 4
  %91 = icmp slt i32 %89, %90
  br i1 %91, label %92, label %103

92:                                               ; preds = %88
  %93 = load i8*, i8** %20, align 8
  %94 = getelementptr inbounds i8, i8* %93, i32 1
  store i8* %94, i8** %20, align 8
  %95 = load i8, i8* %93, align 1
  %96 = zext i8 %95 to i32
  %97 = sext i32 %96 to i64
  %98 = load i64, i64* %22, align 8
  %99 = add nsw i64 %98, %97
  store i64 %99, i64* %22, align 8
  br label %100

100:                                              ; preds = %92
  %101 = load i32, i32* %15, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %15, align 4
  br label %88

103:                                              ; preds = %88
  br label %104

104:                                              ; preds = %103
  %105 = load i32, i32* %16, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %16, align 4
  br label %73

107:                                              ; preds = %73
  %108 = load i64, i64* %22, align 8
  %109 = load i32, i32* %14, align 4
  %110 = sext i32 %109 to i64
  %111 = add nsw i64 %108, %110
  %112 = load i32, i32* %13, align 4
  %113 = sext i32 %112 to i64
  %114 = sdiv i64 %111, %113
  %115 = trunc i64 %114 to i8
  %116 = load i8*, i8** %21, align 8
  %117 = getelementptr inbounds i8, i8* %116, i32 1
  store i8* %117, i8** %21, align 8
  store i8 %115, i8* %116, align 1
  br label %118

118:                                              ; preds = %107
  %119 = load i32, i32* %17, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %17, align 4
  %121 = load i32, i32* %11, align 4
  %122 = load i32, i32* %18, align 4
  %123 = add i32 %122, %121
  store i32 %123, i32* %18, align 4
  br label %68

124:                                              ; preds = %68
  %125 = load i32, i32* %12, align 4
  %126 = load i32, i32* %9, align 4
  %127 = add nsw i32 %126, %125
  store i32 %127, i32* %9, align 4
  br label %128

128:                                              ; preds = %124
  %129 = load i32, i32* %10, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %10, align 4
  br label %56

131:                                              ; preds = %56
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @expand_right_edge(i8** %0, i32 %1, i32 %2, i32 %3) #0 {
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i8** %0, i8*** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %14 = load i32, i32* %8, align 4
  %15 = load i32, i32* %7, align 4
  %16 = sub i32 %14, %15
  store i32 %16, i32* %13, align 4
  %17 = load i32, i32* %13, align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %52

19:                                               ; preds = %4
  store i32 0, i32* %12, align 4
  br label %20

20:                                               ; preds = %48, %19
  %21 = load i32, i32* %12, align 4
  %22 = load i32, i32* %6, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %24, label %51

24:                                               ; preds = %20
  %25 = load i8**, i8*** %5, align 8
  %26 = load i32, i32* %12, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8*, i8** %25, i64 %27
  %29 = load i8*, i8** %28, align 8
  %30 = load i32, i32* %7, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %29, i64 %31
  store i8* %32, i8** %9, align 8
  %33 = load i8*, i8** %9, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 -1
  %35 = load i8, i8* %34, align 1
  store i8 %35, i8* %10, align 1
  %36 = load i32, i32* %13, align 4
  store i32 %36, i32* %11, align 4
  br label %37

37:                                               ; preds = %44, %24
  %38 = load i32, i32* %11, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %37
  %41 = load i8, i8* %10, align 1
  %42 = load i8*, i8** %9, align 8
  %43 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %43, i8** %9, align 8
  store i8 %41, i8* %42, align 1
  br label %44

44:                                               ; preds = %40
  %45 = load i32, i32* %11, align 4
  %46 = add nsw i32 %45, -1
  store i32 %46, i32* %11, align 4
  br label %37

47:                                               ; preds = %37
  br label %48

48:                                               ; preds = %47
  %49 = load i32, i32* %12, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %12, align 4
  br label %20

51:                                               ; preds = %20
  br label %52

52:                                               ; preds = %51, %4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_write_coefficients(%struct.jpeg_compress_struct* %0, %struct.jvirt_barray_control** %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct*, align 8
  %4 = alloca %struct.jvirt_barray_control**, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %3, align 8
  store %struct.jvirt_barray_control** %1, %struct.jvirt_barray_control*** %4, align 8
  %5 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %5, i32 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 100
  br i1 %8, label %9, label %30

9:                                                ; preds = %2
  %10 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %10, i32 0, i32 0
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i32 0, i32 5
  store i32 18, i32* %13, align 8
  %14 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %14, i32 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %17, i32 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i32 0, i32 6
  %21 = bitcast %union.anon* %20 to [8 x i32]*
  %22 = getelementptr inbounds [8 x i32], [8 x i32]* %21, i64 0, i64 0
  store i32 %16, i32* %22, align 4
  %23 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %23, i32 0, i32 0
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i32 0, i32 0
  %27 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %26, align 8
  %28 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %29 = bitcast %struct.jpeg_compress_struct* %28 to %struct.jpeg_common_struct*
  call void %27(%struct.jpeg_common_struct* %29)
  br label %30

30:                                               ; preds = %9, %2
  %31 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  call void @jpeg_suppress_tables(%struct.jpeg_compress_struct* %31, i32 0)
  %32 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %33 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %32, i32 0, i32 0
  %34 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %33, align 8
  %35 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %34, i32 0, i32 4
  %36 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %35, align 8
  %37 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %38 = bitcast %struct.jpeg_compress_struct* %37 to %struct.jpeg_common_struct*
  call void %36(%struct.jpeg_common_struct* %38)
  %39 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %40 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %39, i32 0, i32 5
  %41 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %41, i32 0, i32 2
  %43 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %42, align 8
  %44 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  call void %43(%struct.jpeg_compress_struct* %44)
  %45 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %46 = load %struct.jvirt_barray_control**, %struct.jvirt_barray_control*** %4, align 8
  call void @transencode_master_selection(%struct.jpeg_compress_struct* %45, %struct.jvirt_barray_control** %46)
  %47 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %48 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %47, i32 0, i32 36
  store i32 0, i32* %48, align 8
  %49 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %50 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %49, i32 0, i32 4
  store i32 103, i32* %50, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @transencode_master_selection(%struct.jpeg_compress_struct* %0, %struct.jvirt_barray_control** %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct*, align 8
  %4 = alloca %struct.jvirt_barray_control**, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %3, align 8
  store %struct.jvirt_barray_control** %1, %struct.jvirt_barray_control*** %4, align 8
  %5 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %5, i32 0, i32 8
  store i32 1, i32* %6, align 8
  %7 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  call void bitcast (void (%struct.jpeg_compress_struct.190*, i32)* @jinit_c_master_control to void (%struct.jpeg_compress_struct*, i32)*)(%struct.jpeg_compress_struct* %7, i32 1)
  %8 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %8, i32 0, i32 24
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %2
  %13 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %13, i32 0, i32 0
  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i32 0, i32 5
  store i32 1, i32* %16, align 8
  %17 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %17, i32 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i32 0, i32 0
  %21 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %20, align 8
  %22 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %23 = bitcast %struct.jpeg_compress_struct* %22 to %struct.jpeg_common_struct*
  call void %21(%struct.jpeg_common_struct* %23)
  br label %34

24:                                               ; preds = %2
  %25 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %25, i32 0, i32 37
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  %30 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  call void bitcast (void (%struct.jpeg_compress_struct.58*)* @jinit_phuff_encoder to void (%struct.jpeg_compress_struct*)*)(%struct.jpeg_compress_struct* %30)
  br label %33

31:                                               ; preds = %24
  %32 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  call void @jinit_huff_encoder(%struct.jpeg_compress_struct* %32)
  br label %33

33:                                               ; preds = %31, %29
  br label %34

34:                                               ; preds = %33, %12
  %35 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %36 = load %struct.jvirt_barray_control**, %struct.jvirt_barray_control*** %4, align 8
  call void @transencode_coef_controller(%struct.jpeg_compress_struct* %35, %struct.jvirt_barray_control** %36)
  %37 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  call void bitcast (void (%struct.jpeg_compress_struct.168*)* @jinit_marker_writer to void (%struct.jpeg_compress_struct*)*)(%struct.jpeg_compress_struct* %37)
  %38 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %39 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %38, i32 0, i32 1
  %40 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %39, align 8
  %41 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %40, i32 0, i32 6
  %42 = bitcast {}** %41 to void (%struct.jpeg_common_struct*)**
  %43 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %42, align 8
  %44 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %45 = bitcast %struct.jpeg_compress_struct* %44 to %struct.jpeg_common_struct*
  call void %43(%struct.jpeg_common_struct* %45)
  %46 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %47 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %46, i32 0, i32 55
  %48 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %47, align 8
  %49 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %48, i32 0, i32 1
  %50 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %49, align 8
  %51 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  call void %50(%struct.jpeg_compress_struct* %51)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @transencode_coef_controller(%struct.jpeg_compress_struct* %0, %struct.jvirt_barray_control** %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct*, align 8
  %4 = alloca %struct.jvirt_barray_control**, align 8
  %5 = alloca %struct.my_coef_controller.345*, align 8
  %6 = alloca [64 x i16]*, align 8
  %7 = alloca i32, align 4
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %3, align 8
  store %struct.jvirt_barray_control** %1, %struct.jvirt_barray_control*** %4, align 8
  %8 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %8, i32 0, i32 1
  %10 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %10, i32 0, i32 0
  %12 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %11, align 8
  %13 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %14 = bitcast %struct.jpeg_compress_struct* %13 to %struct.jpeg_common_struct*
  %15 = call i8* %12(%struct.jpeg_common_struct* %14, i32 1, i64 120)
  %16 = bitcast i8* %15 to %struct.my_coef_controller.345*
  store %struct.my_coef_controller.345* %16, %struct.my_coef_controller.345** %5, align 8
  %17 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %5, align 8
  %18 = bitcast %struct.my_coef_controller.345* %17 to %struct.jpeg_c_coef_controller*
  %19 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %19, i32 0, i32 54
  store %struct.jpeg_c_coef_controller* %18, %struct.jpeg_c_coef_controller** %20, align 8
  %21 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %5, align 8
  %22 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %21, i32 0, i32 0
  %23 = getelementptr inbounds %struct.jpeg_c_coef_controller, %struct.jpeg_c_coef_controller* %22, i32 0, i32 0
  store void (%struct.jpeg_compress_struct*, i32)* @start_pass_coef.25, void (%struct.jpeg_compress_struct*, i32)** %23, align 8
  %24 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %5, align 8
  %25 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %24, i32 0, i32 0
  %26 = getelementptr inbounds %struct.jpeg_c_coef_controller, %struct.jpeg_c_coef_controller* %25, i32 0, i32 1
  store i32 (%struct.jpeg_compress_struct*, i8***)* @compress_output.26, i32 (%struct.jpeg_compress_struct*, i8***)** %26, align 8
  %27 = load %struct.jvirt_barray_control**, %struct.jvirt_barray_control*** %4, align 8
  %28 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %5, align 8
  %29 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %28, i32 0, i32 5
  store %struct.jvirt_barray_control** %27, %struct.jvirt_barray_control*** %29, align 8
  %30 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %31 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %30, i32 0, i32 1
  %32 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %31, align 8
  %33 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %32, i32 0, i32 1
  %34 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %33, align 8
  %35 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %36 = bitcast %struct.jpeg_compress_struct* %35 to %struct.jpeg_common_struct*
  %37 = call i8* %34(%struct.jpeg_common_struct* %36, i32 1, i64 1280)
  %38 = bitcast i8* %37 to [64 x i16]*
  store [64 x i16]* %38, [64 x i16]** %6, align 8
  %39 = load [64 x i16]*, [64 x i16]** %6, align 8
  %40 = bitcast [64 x i16]* %39 to i8*
  call void @jzero_far(i8* %40, i64 1280)
  store i32 0, i32* %7, align 4
  br label %41

41:                                               ; preds = %54, %2
  %42 = load i32, i32* %7, align 4
  %43 = icmp slt i32 %42, 10
  br i1 %43, label %44, label %57

44:                                               ; preds = %41
  %45 = load [64 x i16]*, [64 x i16]** %6, align 8
  %46 = load i32, i32* %7, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [64 x i16], [64 x i16]* %45, i64 %47
  %49 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %5, align 8
  %50 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %49, i32 0, i32 6
  %51 = load i32, i32* %7, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %50, i64 0, i64 %52
  store [64 x i16]* %48, [64 x i16]** %53, align 8
  br label %54

54:                                               ; preds = %44
  %55 = load i32, i32* %7, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %7, align 4
  br label %41

57:                                               ; preds = %41
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_coef.25(%struct.jpeg_compress_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.my_coef_controller.345*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %6, i32 0, i32 54
  %8 = load %struct.jpeg_c_coef_controller*, %struct.jpeg_c_coef_controller** %7, align 8
  %9 = bitcast %struct.jpeg_c_coef_controller* %8 to %struct.my_coef_controller.345*
  store %struct.my_coef_controller.345* %9, %struct.my_coef_controller.345** %5, align 8
  %10 = load i32, i32* %4, align 4
  %11 = icmp ne i32 %10, 2
  br i1 %11, label %12, label %24

12:                                               ; preds = %2
  %13 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %13, i32 0, i32 0
  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i32 0, i32 5
  store i32 4, i32* %16, align 8
  %17 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %17, i32 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i32 0, i32 0
  %21 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %20, align 8
  %22 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %23 = bitcast %struct.jpeg_compress_struct* %22 to %struct.jpeg_common_struct*
  call void %21(%struct.jpeg_common_struct* %23)
  br label %24

24:                                               ; preds = %12, %2
  %25 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %5, align 8
  %26 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %25, i32 0, i32 1
  store i32 0, i32* %26, align 8
  %27 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  call void @start_iMCU_row.27(%struct.jpeg_compress_struct* %27)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @compress_output.26(%struct.jpeg_compress_struct* %0, i8*** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_compress_struct*, align 8
  %5 = alloca i8***, align 8
  %6 = alloca %struct.my_coef_controller.345*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca [4 x [64 x i16]**], align 16
  %18 = alloca [10 x [64 x i16]*], align 16
  %19 = alloca [64 x i16]*, align 8
  %20 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %4, align 8
  store i8*** %1, i8**** %5, align 8
  %21 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %21, i32 0, i32 54
  %23 = load %struct.jpeg_c_coef_controller*, %struct.jpeg_c_coef_controller** %22, align 8
  %24 = bitcast %struct.jpeg_c_coef_controller* %23 to %struct.my_coef_controller.345*
  store %struct.my_coef_controller.345* %24, %struct.my_coef_controller.345** %6, align 8
  %25 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %25, i32 0, i32 43
  %27 = load i32, i32* %26, align 8
  %28 = sub i32 %27, 1
  store i32 %28, i32* %8, align 4
  %29 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %30 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %29, i32 0, i32 40
  %31 = load i32, i32* %30, align 8
  %32 = sub i32 %31, 1
  store i32 %32, i32* %9, align 4
  store i32 0, i32* %11, align 4
  br label %33

33:                                               ; preds = %76, %2
  %34 = load i32, i32* %11, align 4
  %35 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %36 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %35, i32 0, i32 41
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %34, %37
  br i1 %38, label %39, label %79

39:                                               ; preds = %33
  %40 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %41 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %40, i32 0, i32 42
  %42 = load i32, i32* %11, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %41, i64 0, i64 %43
  %45 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %44, align 8
  store %struct.jpeg_component_info* %45, %struct.jpeg_component_info** %20, align 8
  %46 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %47 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %46, i32 0, i32 1
  %48 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %47, align 8
  %49 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %48, i32 0, i32 8
  %50 = load [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)** %49, align 8
  %51 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %52 = bitcast %struct.jpeg_compress_struct* %51 to %struct.jpeg_common_struct*
  %53 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %6, align 8
  %54 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %53, i32 0, i32 5
  %55 = load %struct.jvirt_barray_control**, %struct.jvirt_barray_control*** %54, align 8
  %56 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %55, i64 %59
  %61 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %60, align 8
  %62 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %6, align 8
  %63 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %62, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %66 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %65, i32 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = mul i32 %64, %67
  %69 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %70 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %69, i32 0, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = call [64 x i16]** %50(%struct.jpeg_common_struct* %52, %struct.jvirt_barray_control* %61, i32 %68, i32 %71, i32 0)
  %73 = load i32, i32* %11, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [4 x [64 x i16]**], [4 x [64 x i16]**]* %17, i64 0, i64 %74
  store [64 x i16]** %72, [64 x i16]*** %75, align 8
  br label %76

76:                                               ; preds = %39
  %77 = load i32, i32* %11, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %11, align 4
  br label %33

79:                                               ; preds = %33
  %80 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %6, align 8
  %81 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %80, i32 0, i32 3
  %82 = load i32, i32* %81, align 8
  store i32 %82, i32* %14, align 4
  br label %83

83:                                               ; preds = %249, %79
  %84 = load i32, i32* %14, align 4
  %85 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %6, align 8
  %86 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %85, i32 0, i32 4
  %87 = load i32, i32* %86, align 4
  %88 = icmp slt i32 %84, %87
  br i1 %88, label %89, label %252

89:                                               ; preds = %83
  %90 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %6, align 8
  %91 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %90, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  store i32 %92, i32* %7, align 4
  br label %93

93:                                               ; preds = %243, %89
  %94 = load i32, i32* %7, align 4
  %95 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %96 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %95, i32 0, i32 43
  %97 = load i32, i32* %96, align 8
  %98 = icmp ult i32 %94, %97
  br i1 %98, label %99, label %246

99:                                               ; preds = %93
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  br label %100

100:                                              ; preds = %222, %99
  %101 = load i32, i32* %11, align 4
  %102 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %103 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %102, i32 0, i32 41
  %104 = load i32, i32* %103, align 4
  %105 = icmp slt i32 %101, %104
  br i1 %105, label %106, label %225

106:                                              ; preds = %100
  %107 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %108 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %107, i32 0, i32 42
  %109 = load i32, i32* %11, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %108, i64 0, i64 %110
  %112 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %111, align 8
  store %struct.jpeg_component_info* %112, %struct.jpeg_component_info** %20, align 8
  %113 = load i32, i32* %7, align 4
  %114 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %115 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %114, i32 0, i32 13
  %116 = load i32, i32* %115, align 4
  %117 = mul i32 %113, %116
  store i32 %117, i32* %16, align 4
  %118 = load i32, i32* %7, align 4
  %119 = load i32, i32* %8, align 4
  %120 = icmp ult i32 %118, %119
  br i1 %120, label %121, label %125

121:                                              ; preds = %106
  %122 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %123 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %122, i32 0, i32 13
  %124 = load i32, i32* %123, align 4
  br label %129

125:                                              ; preds = %106
  %126 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %127 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %126, i32 0, i32 17
  %128 = load i32, i32* %127, align 4
  br label %129

129:                                              ; preds = %125, %121
  %130 = phi i32 [ %124, %121 ], [ %128, %125 ]
  store i32 %130, i32* %15, align 4
  store i32 0, i32* %13, align 4
  br label %131

131:                                              ; preds = %218, %129
  %132 = load i32, i32* %13, align 4
  %133 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %134 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %133, i32 0, i32 14
  %135 = load i32, i32* %134, align 8
  %136 = icmp slt i32 %132, %135
  br i1 %136, label %137, label %221

137:                                              ; preds = %131
  %138 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %6, align 8
  %139 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %138, i32 0, i32 1
  %140 = load i32, i32* %139, align 8
  %141 = load i32, i32* %9, align 4
  %142 = icmp ult i32 %140, %141
  br i1 %142, label %151, label %143

143:                                              ; preds = %137
  %144 = load i32, i32* %13, align 4
  %145 = load i32, i32* %14, align 4
  %146 = add nsw i32 %144, %145
  %147 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %148 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %147, i32 0, i32 18
  %149 = load i32, i32* %148, align 8
  %150 = icmp slt i32 %146, %149
  br i1 %150, label %151, label %180

151:                                              ; preds = %143, %137
  %152 = load i32, i32* %11, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [4 x [64 x i16]**], [4 x [64 x i16]**]* %17, i64 0, i64 %153
  %155 = load [64 x i16]**, [64 x i16]*** %154, align 8
  %156 = load i32, i32* %13, align 4
  %157 = load i32, i32* %14, align 4
  %158 = add nsw i32 %156, %157
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [64 x i16]*, [64 x i16]** %155, i64 %159
  %161 = load [64 x i16]*, [64 x i16]** %160, align 8
  %162 = load i32, i32* %16, align 4
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds [64 x i16], [64 x i16]* %161, i64 %163
  store [64 x i16]* %164, [64 x i16]** %19, align 8
  store i32 0, i32* %12, align 4
  br label %165

165:                                              ; preds = %176, %151
  %166 = load i32, i32* %12, align 4
  %167 = load i32, i32* %15, align 4
  %168 = icmp slt i32 %166, %167
  br i1 %168, label %169, label %179

169:                                              ; preds = %165
  %170 = load [64 x i16]*, [64 x i16]** %19, align 8
  %171 = getelementptr inbounds [64 x i16], [64 x i16]* %170, i32 1
  store [64 x i16]* %171, [64 x i16]** %19, align 8
  %172 = load i32, i32* %10, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %10, align 4
  %174 = sext i32 %172 to i64
  %175 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %18, i64 0, i64 %174
  store [64 x i16]* %170, [64 x i16]** %175, align 8
  br label %176

176:                                              ; preds = %169
  %177 = load i32, i32* %12, align 4
  %178 = add nsw i32 %177, 1
  store i32 %178, i32* %12, align 4
  br label %165

179:                                              ; preds = %165
  br label %181

180:                                              ; preds = %143
  store i32 0, i32* %12, align 4
  br label %181

181:                                              ; preds = %180, %179
  br label %182

182:                                              ; preds = %214, %181
  %183 = load i32, i32* %12, align 4
  %184 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %185 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %184, i32 0, i32 13
  %186 = load i32, i32* %185, align 4
  %187 = icmp slt i32 %183, %186
  br i1 %187, label %188, label %217

188:                                              ; preds = %182
  %189 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %6, align 8
  %190 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %189, i32 0, i32 6
  %191 = load i32, i32* %10, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %190, i64 0, i64 %192
  %194 = load [64 x i16]*, [64 x i16]** %193, align 8
  %195 = load i32, i32* %10, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %18, i64 0, i64 %196
  store [64 x i16]* %194, [64 x i16]** %197, align 8
  %198 = load i32, i32* %10, align 4
  %199 = sub nsw i32 %198, 1
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %18, i64 0, i64 %200
  %202 = load [64 x i16]*, [64 x i16]** %201, align 8
  %203 = getelementptr inbounds [64 x i16], [64 x i16]* %202, i64 0
  %204 = getelementptr inbounds [64 x i16], [64 x i16]* %203, i64 0, i64 0
  %205 = load i16, i16* %204, align 2
  %206 = load i32, i32* %10, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %18, i64 0, i64 %207
  %209 = load [64 x i16]*, [64 x i16]** %208, align 8
  %210 = getelementptr inbounds [64 x i16], [64 x i16]* %209, i64 0
  %211 = getelementptr inbounds [64 x i16], [64 x i16]* %210, i64 0, i64 0
  store i16 %205, i16* %211, align 2
  %212 = load i32, i32* %10, align 4
  %213 = add nsw i32 %212, 1
  store i32 %213, i32* %10, align 4
  br label %214

214:                                              ; preds = %188
  %215 = load i32, i32* %12, align 4
  %216 = add nsw i32 %215, 1
  store i32 %216, i32* %12, align 4
  br label %182

217:                                              ; preds = %182
  br label %218

218:                                              ; preds = %217
  %219 = load i32, i32* %13, align 4
  %220 = add nsw i32 %219, 1
  store i32 %220, i32* %13, align 4
  br label %131

221:                                              ; preds = %131
  br label %222

222:                                              ; preds = %221
  %223 = load i32, i32* %11, align 4
  %224 = add nsw i32 %223, 1
  store i32 %224, i32* %11, align 4
  br label %100

225:                                              ; preds = %100
  %226 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %227 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %226, i32 0, i32 59
  %228 = load %struct.jpeg_entropy_encoder*, %struct.jpeg_entropy_encoder** %227, align 8
  %229 = getelementptr inbounds %struct.jpeg_entropy_encoder, %struct.jpeg_entropy_encoder* %228, i32 0, i32 1
  %230 = load i32 (%struct.jpeg_compress_struct*, [64 x i16]**)*, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)** %229, align 8
  %231 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %232 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %18, i64 0, i64 0
  %233 = call i32 %230(%struct.jpeg_compress_struct* %231, [64 x i16]** %232)
  %234 = icmp ne i32 %233, 0
  br i1 %234, label %242, label %235

235:                                              ; preds = %225
  %236 = load i32, i32* %14, align 4
  %237 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %6, align 8
  %238 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %237, i32 0, i32 3
  store i32 %236, i32* %238, align 8
  %239 = load i32, i32* %7, align 4
  %240 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %6, align 8
  %241 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %240, i32 0, i32 2
  store i32 %239, i32* %241, align 4
  store i32 0, i32* %3, align 4
  br label %258

242:                                              ; preds = %225
  br label %243

243:                                              ; preds = %242
  %244 = load i32, i32* %7, align 4
  %245 = add i32 %244, 1
  store i32 %245, i32* %7, align 4
  br label %93

246:                                              ; preds = %93
  %247 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %6, align 8
  %248 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %247, i32 0, i32 2
  store i32 0, i32* %248, align 4
  br label %249

249:                                              ; preds = %246
  %250 = load i32, i32* %14, align 4
  %251 = add nsw i32 %250, 1
  store i32 %251, i32* %14, align 4
  br label %83

252:                                              ; preds = %83
  %253 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %6, align 8
  %254 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %253, i32 0, i32 1
  %255 = load i32, i32* %254, align 8
  %256 = add i32 %255, 1
  store i32 %256, i32* %254, align 8
  %257 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  call void @start_iMCU_row.27(%struct.jpeg_compress_struct* %257)
  store i32 1, i32* %3, align 4
  br label %258

258:                                              ; preds = %252, %235
  %259 = load i32, i32* %3, align 4
  ret i32 %259
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_iMCU_row.27(%struct.jpeg_compress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct*, align 8
  %3 = alloca %struct.my_coef_controller.345*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %2, align 8
  %4 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %4, i32 0, i32 54
  %6 = load %struct.jpeg_c_coef_controller*, %struct.jpeg_c_coef_controller** %5, align 8
  %7 = bitcast %struct.jpeg_c_coef_controller* %6 to %struct.my_coef_controller.345*
  store %struct.my_coef_controller.345* %7, %struct.my_coef_controller.345** %3, align 8
  %8 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %8, i32 0, i32 41
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %3, align 8
  %14 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %13, i32 0, i32 4
  store i32 1, i32* %14, align 4
  br label %43

15:                                               ; preds = %1
  %16 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %3, align 8
  %17 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %19, i32 0, i32 40
  %21 = load i32, i32* %20, align 8
  %22 = sub i32 %21, 1
  %23 = icmp ult i32 %18, %22
  br i1 %23, label %24, label %33

24:                                               ; preds = %15
  %25 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %25, i32 0, i32 42
  %27 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %26, i64 0, i64 0
  %28 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i32 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %3, align 8
  %32 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %31, i32 0, i32 4
  store i32 %30, i32* %32, align 4
  br label %42

33:                                               ; preds = %15
  %34 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %34, i32 0, i32 42
  %36 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %35, i64 0, i64 0
  %37 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %37, i32 0, i32 18
  %39 = load i32, i32* %38, align 8
  %40 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %3, align 8
  %41 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %40, i32 0, i32 4
  store i32 %39, i32* %41, align 4
  br label %42

42:                                               ; preds = %33, %24
  br label %43

43:                                               ; preds = %42, %12
  %44 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %3, align 8
  %45 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %44, i32 0, i32 2
  store i32 0, i32* %45, align 4
  %46 = load %struct.my_coef_controller.345*, %struct.my_coef_controller.345** %3, align 8
  %47 = getelementptr inbounds %struct.my_coef_controller.345, %struct.my_coef_controller.345* %46, i32 0, i32 3
  store i32 0, i32* %47, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_copy_critical_parameters(%struct.jpeg_decompress_struct* %0, %struct.jpeg_compress_struct* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct.jpeg_compress_struct*, align 8
  %5 = alloca %struct.JQUANT_TBL**, align 8
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca %struct.jpeg_component_info*, align 8
  %8 = alloca %struct.JQUANT_TBL*, align 8
  %9 = alloca %struct.JQUANT_TBL*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store %struct.jpeg_compress_struct* %1, %struct.jpeg_compress_struct** %4, align 8
  %13 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %13, i32 0, i32 4
  %15 = load i32, i32* %14, align 4
  %16 = icmp ne i32 %15, 100
  br i1 %16, label %17, label %38

17:                                               ; preds = %2
  %18 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %18, i32 0, i32 0
  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i32 0, i32 5
  store i32 18, i32* %21, align 8
  %22 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %22, i32 0, i32 4
  %24 = load i32, i32* %23, align 4
  %25 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %25, i32 0, i32 0
  %27 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %26, align 8
  %28 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %27, i32 0, i32 6
  %29 = bitcast %union.anon* %28 to [8 x i32]*
  %30 = getelementptr inbounds [8 x i32], [8 x i32]* %29, i64 0, i64 0
  store i32 %24, i32* %30, align 4
  %31 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %32 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %31, i32 0, i32 0
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i32 0, i32 0
  %35 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %34, align 8
  %36 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %37 = bitcast %struct.jpeg_compress_struct* %36 to %struct.jpeg_common_struct*
  call void %35(%struct.jpeg_common_struct* %37)
  br label %38

38:                                               ; preds = %17, %2
  %39 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %39, i32 0, i32 6
  %41 = load i32, i32* %40, align 8
  %42 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %42, i32 0, i32 6
  store i32 %41, i32* %43, align 8
  %44 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %45 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %44, i32 0, i32 7
  %46 = load i32, i32* %45, align 4
  %47 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %48 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %47, i32 0, i32 7
  store i32 %46, i32* %48, align 4
  %49 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %49, i32 0, i32 8
  %51 = load i32, i32* %50, align 8
  %52 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %53 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %52, i32 0, i32 8
  store i32 %51, i32* %53, align 8
  %54 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %54, i32 0, i32 9
  %56 = load i32, i32* %55, align 4
  %57 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %58 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %57, i32 0, i32 9
  store i32 %56, i32* %58, align 4
  %59 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  call void @jpeg_set_defaults(%struct.jpeg_compress_struct* %59)
  %60 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %61 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %62 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %61, i32 0, i32 9
  %63 = load i32, i32* %62, align 4
  call void @jpeg_set_colorspace(%struct.jpeg_compress_struct* %60, i32 %63)
  %64 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %65 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %64, i32 0, i32 42
  %66 = load i32, i32* %65, align 8
  %67 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %68 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %67, i32 0, i32 11
  store i32 %66, i32* %68, align 8
  %69 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %70 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %69, i32 0, i32 56
  %71 = load i32, i32* %70, align 8
  %72 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %73 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %72, i32 0, i32 26
  store i32 %71, i32* %73, align 4
  store i32 0, i32* %10, align 4
  br label %74

74:                                               ; preds = %118, %38
  %75 = load i32, i32* %10, align 4
  %76 = icmp slt i32 %75, 4
  br i1 %76, label %77, label %121

77:                                               ; preds = %74
  %78 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %79 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %78, i32 0, i32 39
  %80 = load i32, i32* %10, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %79, i64 0, i64 %81
  %83 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %82, align 8
  %84 = icmp ne %struct.JQUANT_TBL* %83, null
  br i1 %84, label %85, label %117

85:                                               ; preds = %77
  %86 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %87 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %86, i32 0, i32 15
  %88 = load i32, i32* %10, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %87, i64 0, i64 %89
  store %struct.JQUANT_TBL** %90, %struct.JQUANT_TBL*** %5, align 8
  %91 = load %struct.JQUANT_TBL**, %struct.JQUANT_TBL*** %5, align 8
  %92 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %91, align 8
  %93 = icmp eq %struct.JQUANT_TBL* %92, null
  br i1 %93, label %94, label %99

94:                                               ; preds = %85
  %95 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %96 = bitcast %struct.jpeg_compress_struct* %95 to %struct.jpeg_common_struct*
  %97 = call %struct.JQUANT_TBL* bitcast (%struct.JQUANT_TBL* (%struct.jpeg_common_struct.212*)* @jpeg_alloc_quant_table to %struct.JQUANT_TBL* (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %96)
  %98 = load %struct.JQUANT_TBL**, %struct.JQUANT_TBL*** %5, align 8
  store %struct.JQUANT_TBL* %97, %struct.JQUANT_TBL** %98, align 8
  br label %99

99:                                               ; preds = %94, %85
  %100 = load %struct.JQUANT_TBL**, %struct.JQUANT_TBL*** %5, align 8
  %101 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %100, align 8
  %102 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %101, i32 0, i32 0
  %103 = getelementptr inbounds [64 x i16], [64 x i16]* %102, i64 0, i64 0
  %104 = bitcast i16* %103 to i8*
  %105 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %106 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %105, i32 0, i32 39
  %107 = load i32, i32* %10, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %106, i64 0, i64 %108
  %110 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %109, align 8
  %111 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %110, i32 0, i32 0
  %112 = getelementptr inbounds [64 x i16], [64 x i16]* %111, i64 0, i64 0
  %113 = bitcast i16* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %113, i64 128, i1 false)
  %114 = load %struct.JQUANT_TBL**, %struct.JQUANT_TBL*** %5, align 8
  %115 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %114, align 8
  %116 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %115, i32 0, i32 1
  store i32 0, i32* %116, align 4
  br label %117

117:                                              ; preds = %99, %77
  br label %118

118:                                              ; preds = %117
  %119 = load i32, i32* %10, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %10, align 4
  br label %74

121:                                              ; preds = %74
  %122 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %123 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %122, i32 0, i32 8
  %124 = load i32, i32* %123, align 8
  %125 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %126 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %125, i32 0, i32 12
  store i32 %124, i32* %126, align 4
  %127 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %128 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %127, i32 0, i32 12
  %129 = load i32, i32* %128, align 4
  %130 = icmp slt i32 %129, 1
  br i1 %130, label %136, label %131

131:                                              ; preds = %121
  %132 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %133 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %132, i32 0, i32 12
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %134, 10
  br i1 %135, label %136, label %163

136:                                              ; preds = %131, %121
  %137 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %138 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %137, i32 0, i32 0
  %139 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %138, align 8
  %140 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %139, i32 0, i32 5
  store i32 24, i32* %140, align 8
  %141 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %142 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %141, i32 0, i32 12
  %143 = load i32, i32* %142, align 4
  %144 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %145 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %144, i32 0, i32 0
  %146 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %145, align 8
  %147 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %146, i32 0, i32 6
  %148 = bitcast %union.anon* %147 to [8 x i32]*
  %149 = getelementptr inbounds [8 x i32], [8 x i32]* %148, i64 0, i64 0
  store i32 %143, i32* %149, align 4
  %150 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %151 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %150, i32 0, i32 0
  %152 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %151, align 8
  %153 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %152, i32 0, i32 6
  %154 = bitcast %union.anon* %153 to [8 x i32]*
  %155 = getelementptr inbounds [8 x i32], [8 x i32]* %154, i64 0, i64 1
  store i32 10, i32* %155, align 4
  %156 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %157 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %156, i32 0, i32 0
  %158 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %157, align 8
  %159 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %158, i32 0, i32 0
  %160 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %159, align 8
  %161 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %162 = bitcast %struct.jpeg_compress_struct* %161 to %struct.jpeg_common_struct*
  call void %160(%struct.jpeg_common_struct* %162)
  br label %163

163:                                              ; preds = %136, %131
  store i32 0, i32* %11, align 4
  %164 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %165 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %164, i32 0, i32 43
  %166 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %165, align 8
  store %struct.jpeg_component_info* %166, %struct.jpeg_component_info** %6, align 8
  %167 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %168 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %167, i32 0, i32 14
  %169 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %168, align 8
  store %struct.jpeg_component_info* %169, %struct.jpeg_component_info** %7, align 8
  br label %170

170:                                              ; preds = %289, %163
  %171 = load i32, i32* %11, align 4
  %172 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %173 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %172, i32 0, i32 12
  %174 = load i32, i32* %173, align 4
  %175 = icmp slt i32 %171, %174
  br i1 %175, label %176, label %296

176:                                              ; preds = %170
  %177 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %178 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %177, i32 0, i32 0
  %179 = load i32, i32* %178, align 8
  %180 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %181 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %180, i32 0, i32 0
  store i32 %179, i32* %181, align 8
  %182 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %183 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %182, i32 0, i32 2
  %184 = load i32, i32* %183, align 8
  %185 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %186 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %185, i32 0, i32 2
  store i32 %184, i32* %186, align 8
  %187 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %188 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %187, i32 0, i32 3
  %189 = load i32, i32* %188, align 4
  %190 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %191 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %190, i32 0, i32 3
  store i32 %189, i32* %191, align 4
  %192 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %193 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %192, i32 0, i32 4
  %194 = load i32, i32* %193, align 8
  %195 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %196 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %195, i32 0, i32 4
  store i32 %194, i32* %196, align 8
  %197 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %198 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %197, i32 0, i32 4
  %199 = load i32, i32* %198, align 8
  store i32 %199, i32* %10, align 4
  %200 = load i32, i32* %10, align 4
  %201 = icmp slt i32 %200, 0
  br i1 %201, label %213, label %202

202:                                              ; preds = %176
  %203 = load i32, i32* %10, align 4
  %204 = icmp sge i32 %203, 4
  br i1 %204, label %213, label %205

205:                                              ; preds = %202
  %206 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %207 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %206, i32 0, i32 39
  %208 = load i32, i32* %10, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %207, i64 0, i64 %209
  %211 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %210, align 8
  %212 = icmp eq %struct.JQUANT_TBL* %211, null
  br i1 %212, label %213, label %232

213:                                              ; preds = %205, %202, %176
  %214 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %215 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %214, i32 0, i32 0
  %216 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %215, align 8
  %217 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %216, i32 0, i32 5
  store i32 51, i32* %217, align 8
  %218 = load i32, i32* %10, align 4
  %219 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %220 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %219, i32 0, i32 0
  %221 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %220, align 8
  %222 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %221, i32 0, i32 6
  %223 = bitcast %union.anon* %222 to [8 x i32]*
  %224 = getelementptr inbounds [8 x i32], [8 x i32]* %223, i64 0, i64 0
  store i32 %218, i32* %224, align 4
  %225 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %226 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %225, i32 0, i32 0
  %227 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %226, align 8
  %228 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %227, i32 0, i32 0
  %229 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %228, align 8
  %230 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %231 = bitcast %struct.jpeg_compress_struct* %230 to %struct.jpeg_common_struct*
  call void %229(%struct.jpeg_common_struct* %231)
  br label %232

232:                                              ; preds = %213, %205
  %233 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %234 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %233, i32 0, i32 39
  %235 = load i32, i32* %10, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %234, i64 0, i64 %236
  %238 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %237, align 8
  store %struct.JQUANT_TBL* %238, %struct.JQUANT_TBL** %9, align 8
  %239 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %240 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %239, i32 0, i32 19
  %241 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %240, align 8
  store %struct.JQUANT_TBL* %241, %struct.JQUANT_TBL** %8, align 8
  %242 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %8, align 8
  %243 = icmp ne %struct.JQUANT_TBL* %242, null
  br i1 %243, label %244, label %288

244:                                              ; preds = %232
  store i32 0, i32* %12, align 4
  br label %245

245:                                              ; preds = %284, %244
  %246 = load i32, i32* %12, align 4
  %247 = icmp slt i32 %246, 64
  br i1 %247, label %248, label %287

248:                                              ; preds = %245
  %249 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %8, align 8
  %250 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %249, i32 0, i32 0
  %251 = load i32, i32* %12, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds [64 x i16], [64 x i16]* %250, i64 0, i64 %252
  %254 = load i16, i16* %253, align 2
  %255 = zext i16 %254 to i32
  %256 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %257 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %256, i32 0, i32 0
  %258 = load i32, i32* %12, align 4
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds [64 x i16], [64 x i16]* %257, i64 0, i64 %259
  %261 = load i16, i16* %260, align 2
  %262 = zext i16 %261 to i32
  %263 = icmp ne i32 %255, %262
  br i1 %263, label %264, label %283

264:                                              ; preds = %248
  %265 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %266 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %265, i32 0, i32 0
  %267 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %266, align 8
  %268 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %267, i32 0, i32 5
  store i32 43, i32* %268, align 8
  %269 = load i32, i32* %10, align 4
  %270 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %271 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %270, i32 0, i32 0
  %272 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %271, align 8
  %273 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %272, i32 0, i32 6
  %274 = bitcast %union.anon* %273 to [8 x i32]*
  %275 = getelementptr inbounds [8 x i32], [8 x i32]* %274, i64 0, i64 0
  store i32 %269, i32* %275, align 4
  %276 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %277 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %276, i32 0, i32 0
  %278 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %279 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %278, i32 0, i32 0
  %280 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %279, align 8
  %281 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %4, align 8
  %282 = bitcast %struct.jpeg_compress_struct* %281 to %struct.jpeg_common_struct*
  call void %280(%struct.jpeg_common_struct* %282)
  br label %283

283:                                              ; preds = %264, %248
  br label %284

284:                                              ; preds = %283
  %285 = load i32, i32* %12, align 4
  %286 = add nsw i32 %285, 1
  store i32 %286, i32* %12, align 4
  br label %245

287:                                              ; preds = %245
  br label %288

288:                                              ; preds = %287, %232
  br label %289

289:                                              ; preds = %288
  %290 = load i32, i32* %11, align 4
  %291 = add nsw i32 %290, 1
  store i32 %291, i32* %11, align 4
  %292 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %293 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %292, i32 1
  store %struct.jpeg_component_info* %293, %struct.jpeg_component_info** %6, align 8
  %294 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %295 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %294, i32 1
  store %struct.jpeg_component_info* %295, %struct.jpeg_component_info** %7, align 8
  br label %170

296:                                              ; preds = %170
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_CreateDecompress(%struct.jpeg_decompress_struct* %0, i32 %1, i64 %2) #0 {
  %4 = alloca %struct.jpeg_decompress_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.jpeg_error_mgr*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %4, align 8
  store i32 %1, i32* %5, align 4
  store i64 %2, i64* %6, align 8
  %9 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %9, i32 0, i32 1
  store %struct.jpeg_memory_mgr* null, %struct.jpeg_memory_mgr** %10, align 8
  %11 = load i32, i32* %5, align 4
  %12 = icmp ne i32 %11, 61
  br i1 %12, label %13, label %38

13:                                               ; preds = %3
  %14 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %14, i32 0, i32 0
  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i32 0, i32 5
  store i32 10, i32* %17, align 8
  %18 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %18, i32 0, i32 0
  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i32 0, i32 6
  %22 = bitcast %union.anon* %21 to [8 x i32]*
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %22, i64 0, i64 0
  store i32 61, i32* %23, align 4
  %24 = load i32, i32* %5, align 4
  %25 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %25, i32 0, i32 0
  %27 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %26, align 8
  %28 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %27, i32 0, i32 6
  %29 = bitcast %union.anon* %28 to [8 x i32]*
  %30 = getelementptr inbounds [8 x i32], [8 x i32]* %29, i64 0, i64 1
  store i32 %24, i32* %30, align 4
  %31 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %31, i32 0, i32 0
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i32 0, i32 0
  %35 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %34, align 8
  %36 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %37 = bitcast %struct.jpeg_decompress_struct* %36 to %struct.jpeg_common_struct*
  call void %35(%struct.jpeg_common_struct* %37)
  br label %38

38:                                               ; preds = %13, %3
  %39 = load i64, i64* %6, align 8
  %40 = icmp ne i64 %39, 616
  br i1 %40, label %41, label %67

41:                                               ; preds = %38
  %42 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %43 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %42, i32 0, i32 0
  %44 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %43, align 8
  %45 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %44, i32 0, i32 5
  store i32 19, i32* %45, align 8
  %46 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %46, i32 0, i32 0
  %48 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %47, align 8
  %49 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %48, i32 0, i32 6
  %50 = bitcast %union.anon* %49 to [8 x i32]*
  %51 = getelementptr inbounds [8 x i32], [8 x i32]* %50, i64 0, i64 0
  store i32 616, i32* %51, align 4
  %52 = load i64, i64* %6, align 8
  %53 = trunc i64 %52 to i32
  %54 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %54, i32 0, i32 0
  %56 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %57 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %56, i32 0, i32 6
  %58 = bitcast %union.anon* %57 to [8 x i32]*
  %59 = getelementptr inbounds [8 x i32], [8 x i32]* %58, i64 0, i64 1
  store i32 %53, i32* %59, align 4
  %60 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %61 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %60, i32 0, i32 0
  %62 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %61, align 8
  %63 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %62, i32 0, i32 0
  %64 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %63, align 8
  %65 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %66 = bitcast %struct.jpeg_decompress_struct* %65 to %struct.jpeg_common_struct*
  call void %64(%struct.jpeg_common_struct* %66)
  br label %67

67:                                               ; preds = %41, %38
  %68 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %69 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %68, i32 0, i32 0
  %70 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %69, align 8
  store %struct.jpeg_error_mgr* %70, %struct.jpeg_error_mgr** %8, align 8
  %71 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %72 = bitcast %struct.jpeg_decompress_struct* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %72, i8 0, i64 616, i1 false)
  %73 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %74 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %75 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %74, i32 0, i32 0
  store %struct.jpeg_error_mgr* %73, %struct.jpeg_error_mgr** %75, align 8
  %76 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %77 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %76, i32 0, i32 3
  store i32 1, i32* %77, align 8
  %78 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %79 = bitcast %struct.jpeg_decompress_struct* %78 to %struct.jpeg_common_struct*
  call void bitcast (void (%struct.jpeg_common_struct.855*)* @jinit_memory_mgr to void (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %79)
  %80 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %81 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %80, i32 0, i32 2
  store %struct.jpeg_progress_mgr* null, %struct.jpeg_progress_mgr** %81, align 8
  %82 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %83 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %82, i32 0, i32 5
  store %struct.jpeg_source_mgr* null, %struct.jpeg_source_mgr** %83, align 8
  store i32 0, i32* %7, align 4
  br label %84

84:                                               ; preds = %93, %67
  %85 = load i32, i32* %7, align 4
  %86 = icmp slt i32 %85, 4
  br i1 %86, label %87, label %96

87:                                               ; preds = %84
  %88 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %89 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %88, i32 0, i32 39
  %90 = load i32, i32* %7, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %89, i64 0, i64 %91
  store %struct.JQUANT_TBL* null, %struct.JQUANT_TBL** %92, align 8
  br label %93

93:                                               ; preds = %87
  %94 = load i32, i32* %7, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %7, align 4
  br label %84

96:                                               ; preds = %84
  store i32 0, i32* %7, align 4
  br label %97

97:                                               ; preds = %111, %96
  %98 = load i32, i32* %7, align 4
  %99 = icmp slt i32 %98, 4
  br i1 %99, label %100, label %114

100:                                              ; preds = %97
  %101 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %102 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %101, i32 0, i32 40
  %103 = load i32, i32* %7, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %102, i64 0, i64 %104
  store %struct.JHUFF_TBL* null, %struct.JHUFF_TBL** %105, align 8
  %106 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %107 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %106, i32 0, i32 41
  %108 = load i32, i32* %7, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %107, i64 0, i64 %109
  store %struct.JHUFF_TBL* null, %struct.JHUFF_TBL** %110, align 8
  br label %111

111:                                              ; preds = %100
  %112 = load i32, i32* %7, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %7, align 4
  br label %97

114:                                              ; preds = %97
  %115 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  call void bitcast (void (%struct.jpeg_decompress_struct.586*)* @jinit_marker_reader to void (%struct.jpeg_decompress_struct*)*)(%struct.jpeg_decompress_struct* %115)
  %116 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  call void bitcast (void (%struct.jpeg_decompress_struct.539*)* @jinit_input_controller to void (%struct.jpeg_decompress_struct*)*)(%struct.jpeg_decompress_struct* %116)
  %117 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %118 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %117, i32 0, i32 4
  store i32 200, i32* %118, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_destroy_decompress(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  %3 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %4 = bitcast %struct.jpeg_decompress_struct* %3 to %struct.jpeg_common_struct*
  call void bitcast (void (%struct.jpeg_common_struct.212*)* @jpeg_destroy to void (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_abort_decompress(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  %3 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %4 = bitcast %struct.jpeg_decompress_struct* %3 to %struct.jpeg_common_struct*
  call void bitcast (void (%struct.jpeg_common_struct.212*)* @jpeg_abort to void (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_set_marker_processor(%struct.jpeg_decompress_struct* %0, i32 %1, i32 (%struct.jpeg_decompress_struct*)* %2) #0 {
  %4 = alloca %struct.jpeg_decompress_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32 (%struct.jpeg_decompress_struct*)*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 (%struct.jpeg_decompress_struct*)* %2, i32 (%struct.jpeg_decompress_struct*)** %6, align 8
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 254
  br i1 %8, label %9, label %15

9:                                                ; preds = %3
  %10 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %6, align 8
  %11 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %11, i32 0, i32 78
  %13 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %13, i32 0, i32 3
  store i32 (%struct.jpeg_decompress_struct*)* %10, i32 (%struct.jpeg_decompress_struct*)** %14, align 8
  br label %51

15:                                               ; preds = %3
  %16 = load i32, i32* %5, align 4
  %17 = icmp sge i32 %16, 224
  br i1 %17, label %18, label %31

18:                                               ; preds = %15
  %19 = load i32, i32* %5, align 4
  %20 = icmp sle i32 %19, 239
  br i1 %20, label %21, label %31

21:                                               ; preds = %18
  %22 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %6, align 8
  %23 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %23, i32 0, i32 78
  %25 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %25, i32 0, i32 4
  %27 = load i32, i32* %5, align 4
  %28 = sub nsw i32 %27, 224
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [16 x i32 (%struct.jpeg_decompress_struct*)*], [16 x i32 (%struct.jpeg_decompress_struct*)*]* %26, i64 0, i64 %29
  store i32 (%struct.jpeg_decompress_struct*)* %22, i32 (%struct.jpeg_decompress_struct*)** %30, align 8
  br label %50

31:                                               ; preds = %18, %15
  %32 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %32, i32 0, i32 0
  %34 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %33, align 8
  %35 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %34, i32 0, i32 5
  store i32 67, i32* %35, align 8
  %36 = load i32, i32* %5, align 4
  %37 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %38 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %37, i32 0, i32 0
  %39 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %38, align 8
  %40 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i32 0, i32 6
  %41 = bitcast %union.anon* %40 to [8 x i32]*
  %42 = getelementptr inbounds [8 x i32], [8 x i32]* %41, i64 0, i64 0
  store i32 %36, i32* %42, align 4
  %43 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %43, i32 0, i32 0
  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i32 0, i32 0
  %47 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %46, align 8
  %48 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %49 = bitcast %struct.jpeg_decompress_struct* %48 to %struct.jpeg_common_struct*
  call void %47(%struct.jpeg_common_struct* %49)
  br label %50

50:                                               ; preds = %31, %21
  br label %51

51:                                               ; preds = %50, %9
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @jpeg_read_header(%struct.jpeg_decompress_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %6, i32 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = icmp ne i32 %8, 200
  br i1 %9, label %10, label %36

10:                                               ; preds = %2
  %11 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %11, i32 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = icmp ne i32 %13, 201
  br i1 %14, label %15, label %36

15:                                               ; preds = %10
  %16 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %16, i32 0, i32 0
  %18 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %17, align 8
  %19 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %18, i32 0, i32 5
  store i32 18, i32* %19, align 8
  %20 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %20, i32 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %23, i32 0, i32 0
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i32 0, i32 6
  %27 = bitcast %union.anon* %26 to [8 x i32]*
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* %27, i64 0, i64 0
  store i32 %22, i32* %28, align 4
  %29 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %29, i32 0, i32 0
  %31 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %30, align 8
  %32 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %31, i32 0, i32 0
  %33 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %32, align 8
  %34 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %35 = bitcast %struct.jpeg_decompress_struct* %34 to %struct.jpeg_common_struct*
  call void %33(%struct.jpeg_common_struct* %35)
  br label %36

36:                                               ; preds = %15, %10, %2
  %37 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %38 = call i32 @jpeg_consume_input(%struct.jpeg_decompress_struct* %37)
  store i32 %38, i32* %5, align 4
  %39 = load i32, i32* %5, align 4
  switch i32 %39, label %60 [
    i32 1, label %40
    i32 2, label %41
    i32 0, label %59
  ]

40:                                               ; preds = %36
  store i32 1, i32* %5, align 4
  br label %60

41:                                               ; preds = %36
  %42 = load i32, i32* %4, align 4
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %41
  %45 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %46 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %45, i32 0, i32 0
  %47 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %46, align 8
  %48 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %47, i32 0, i32 5
  store i32 50, i32* %48, align 8
  %49 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %49, i32 0, i32 0
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %50, align 8
  %52 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i32 0, i32 0
  %53 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %52, align 8
  %54 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %55 = bitcast %struct.jpeg_decompress_struct* %54 to %struct.jpeg_common_struct*
  call void %53(%struct.jpeg_common_struct* %55)
  br label %56

56:                                               ; preds = %44, %41
  %57 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %58 = bitcast %struct.jpeg_decompress_struct* %57 to %struct.jpeg_common_struct*
  call void bitcast (void (%struct.jpeg_common_struct.212*)* @jpeg_abort to void (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %58)
  store i32 2, i32* %5, align 4
  br label %60

59:                                               ; preds = %36
  br label %60

60:                                               ; preds = %59, %56, %40, %36
  %61 = load i32, i32* %5, align 4
  ret i32 %61
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @jpeg_consume_input(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  %3 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  store i32 0, i32* %3, align 4
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %46 [
    i32 200, label %7
    i32 201, label %22
    i32 202, label %37
    i32 203, label %38
    i32 204, label %38
    i32 205, label %38
    i32 206, label %38
    i32 207, label %38
    i32 208, label %38
    i32 210, label %38
  ]

7:                                                ; preds = %1
  %8 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %8, i32 0, i32 77
  %10 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %10, i32 0, i32 1
  %12 = load void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)** %11, align 8
  %13 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  call void %12(%struct.jpeg_decompress_struct* %13)
  %14 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %14, i32 0, i32 5
  %16 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %15, align 8
  %17 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %16, i32 0, i32 2
  %18 = load void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)** %17, align 8
  %19 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  call void %18(%struct.jpeg_decompress_struct* %19)
  %20 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %20, i32 0, i32 4
  store i32 201, i32* %21, align 4
  br label %22

22:                                               ; preds = %7, %1
  %23 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %23, i32 0, i32 77
  %25 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %25, i32 0, i32 0
  %27 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %26, align 8
  %28 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %29 = call i32 %27(%struct.jpeg_decompress_struct* %28)
  store i32 %29, i32* %3, align 4
  %30 = load i32, i32* %3, align 4
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %36

32:                                               ; preds = %22
  %33 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  call void @default_decompress_parms(%struct.jpeg_decompress_struct* %33)
  %34 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %34, i32 0, i32 4
  store i32 202, i32* %35, align 4
  br label %36

36:                                               ; preds = %32, %22
  br label %67

37:                                               ; preds = %1
  store i32 1, i32* %3, align 4
  br label %67

38:                                               ; preds = %1, %1, %1, %1, %1, %1, %1
  %39 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %39, i32 0, i32 77
  %41 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %41, i32 0, i32 0
  %43 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %42, align 8
  %44 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %45 = call i32 %43(%struct.jpeg_decompress_struct* %44)
  store i32 %45, i32* %3, align 4
  br label %67

46:                                               ; preds = %1
  %47 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %47, i32 0, i32 0
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i32 0, i32 5
  store i32 18, i32* %50, align 8
  %51 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %51, i32 0, i32 4
  %53 = load i32, i32* %52, align 4
  %54 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %54, i32 0, i32 0
  %56 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %57 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %56, i32 0, i32 6
  %58 = bitcast %union.anon* %57 to [8 x i32]*
  %59 = getelementptr inbounds [8 x i32], [8 x i32]* %58, i64 0, i64 0
  store i32 %53, i32* %59, align 4
  %60 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %61 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %60, i32 0, i32 0
  %62 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %61, align 8
  %63 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %62, i32 0, i32 0
  %64 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %63, align 8
  %65 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %66 = bitcast %struct.jpeg_decompress_struct* %65 to %struct.jpeg_common_struct*
  call void %64(%struct.jpeg_common_struct* %66)
  br label %67

67:                                               ; preds = %46, %38, %37, %36
  %68 = load i32, i32* %3, align 4
  ret i32 %68
}

; Function Attrs: noinline nounwind uwtable
define internal void @default_decompress_parms(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  %7 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %7, i32 0, i32 8
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %190 [
    i32 1, label %10
    i32 3, label %15
    i32 4, label %143
  ]

10:                                               ; preds = %1
  %11 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %11, i32 0, i32 9
  store i32 1, i32* %12, align 4
  %13 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %13, i32 0, i32 10
  store i32 1, i32* %14, align 8
  br label %195

15:                                               ; preds = %1
  %16 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %16, i32 0, i32 50
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %21, i32 0, i32 9
  store i32 3, i32* %22, align 4
  br label %140

23:                                               ; preds = %15
  %24 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %24, i32 0, i32 54
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %64

28:                                               ; preds = %23
  %29 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %29, i32 0, i32 55
  %31 = load i8, i8* %30, align 4
  %32 = zext i8 %31 to i32
  switch i32 %32, label %39 [
    i32 0, label %33
    i32 1, label %36
  ]

33:                                               ; preds = %28
  %34 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %34, i32 0, i32 9
  store i32 2, i32* %35, align 4
  br label %63

36:                                               ; preds = %28
  %37 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %38 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %37, i32 0, i32 9
  store i32 3, i32* %38, align 4
  br label %63

39:                                               ; preds = %28
  %40 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %40, i32 0, i32 0
  %42 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %41, align 8
  %43 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %42, i32 0, i32 5
  store i32 110, i32* %43, align 8
  %44 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %45 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %44, i32 0, i32 55
  %46 = load i8, i8* %45, align 4
  %47 = zext i8 %46 to i32
  %48 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %49 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %48, i32 0, i32 0
  %50 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %49, align 8
  %51 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %50, i32 0, i32 6
  %52 = bitcast %union.anon* %51 to [8 x i32]*
  %53 = getelementptr inbounds [8 x i32], [8 x i32]* %52, i64 0, i64 0
  store i32 %47, i32* %53, align 4
  %54 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %54, i32 0, i32 0
  %56 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %57 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %56, i32 0, i32 1
  %58 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %57, align 8
  %59 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %60 = bitcast %struct.jpeg_decompress_struct* %59 to %struct.jpeg_common_struct*
  call void %58(%struct.jpeg_common_struct* %60, i32 -1)
  %61 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %62 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %61, i32 0, i32 9
  store i32 3, i32* %62, align 4
  br label %63

63:                                               ; preds = %39, %36, %33
  br label %139

64:                                               ; preds = %23
  %65 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %66 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %65, i32 0, i32 43
  %67 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %66, align 8
  %68 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %67, i64 0
  %69 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %68, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %3, align 4
  %71 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %72 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %71, i32 0, i32 43
  %73 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %72, align 8
  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i64 1
  %75 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %74, i32 0, i32 0
  %76 = load i32, i32* %75, align 8
  store i32 %76, i32* %4, align 4
  %77 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %78 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %77, i32 0, i32 43
  %79 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %78, align 8
  %80 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %79, i64 2
  %81 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %80, i32 0, i32 0
  %82 = load i32, i32* %81, align 8
  store i32 %82, i32* %5, align 4
  %83 = load i32, i32* %3, align 4
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %94

85:                                               ; preds = %64
  %86 = load i32, i32* %4, align 4
  %87 = icmp eq i32 %86, 2
  br i1 %87, label %88, label %94

88:                                               ; preds = %85
  %89 = load i32, i32* %5, align 4
  %90 = icmp eq i32 %89, 3
  br i1 %90, label %91, label %94

91:                                               ; preds = %88
  %92 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %93 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %92, i32 0, i32 9
  store i32 3, i32* %93, align 4
  br label %138

94:                                               ; preds = %88, %85, %64
  %95 = load i32, i32* %3, align 4
  %96 = icmp eq i32 %95, 82
  br i1 %96, label %97, label %106

97:                                               ; preds = %94
  %98 = load i32, i32* %4, align 4
  %99 = icmp eq i32 %98, 71
  br i1 %99, label %100, label %106

100:                                              ; preds = %97
  %101 = load i32, i32* %5, align 4
  %102 = icmp eq i32 %101, 66
  br i1 %102, label %103, label %106

103:                                              ; preds = %100
  %104 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %105 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %104, i32 0, i32 9
  store i32 2, i32* %105, align 4
  br label %137

106:                                              ; preds = %100, %97, %94
  br label %107

107:                                              ; preds = %106
  %108 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %109 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %108, i32 0, i32 0
  %110 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %109, align 8
  %111 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %110, i32 0, i32 6
  %112 = bitcast %union.anon* %111 to [8 x i32]*
  %113 = getelementptr inbounds [8 x i32], [8 x i32]* %112, i64 0, i64 0
  store i32* %113, i32** %6, align 8
  %114 = load i32, i32* %3, align 4
  %115 = load i32*, i32** %6, align 8
  %116 = getelementptr inbounds i32, i32* %115, i64 0
  store i32 %114, i32* %116, align 4
  %117 = load i32, i32* %4, align 4
  %118 = load i32*, i32** %6, align 8
  %119 = getelementptr inbounds i32, i32* %118, i64 1
  store i32 %117, i32* %119, align 4
  %120 = load i32, i32* %5, align 4
  %121 = load i32*, i32** %6, align 8
  %122 = getelementptr inbounds i32, i32* %121, i64 2
  store i32 %120, i32* %122, align 4
  %123 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %124 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %123, i32 0, i32 0
  %125 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %124, align 8
  %126 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %125, i32 0, i32 5
  store i32 107, i32* %126, align 8
  %127 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %128 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %127, i32 0, i32 0
  %129 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %128, align 8
  %130 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %129, i32 0, i32 1
  %131 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %130, align 8
  %132 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %133 = bitcast %struct.jpeg_decompress_struct* %132 to %struct.jpeg_common_struct*
  call void %131(%struct.jpeg_common_struct* %133, i32 1)
  br label %134

134:                                              ; preds = %107
  %135 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %136 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %135, i32 0, i32 9
  store i32 3, i32* %136, align 4
  br label %137

137:                                              ; preds = %134, %103
  br label %138

138:                                              ; preds = %137, %91
  br label %139

139:                                              ; preds = %138, %63
  br label %140

140:                                              ; preds = %139, %20
  %141 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %142 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %141, i32 0, i32 10
  store i32 2, i32* %142, align 8
  br label %195

143:                                              ; preds = %1
  %144 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %145 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %144, i32 0, i32 54
  %146 = load i32, i32* %145, align 8
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %148, label %184

148:                                              ; preds = %143
  %149 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %150 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %149, i32 0, i32 55
  %151 = load i8, i8* %150, align 4
  %152 = zext i8 %151 to i32
  switch i32 %152, label %159 [
    i32 0, label %153
    i32 2, label %156
  ]

153:                                              ; preds = %148
  %154 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %155 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %154, i32 0, i32 9
  store i32 4, i32* %155, align 4
  br label %183

156:                                              ; preds = %148
  %157 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %158 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %157, i32 0, i32 9
  store i32 5, i32* %158, align 4
  br label %183

159:                                              ; preds = %148
  %160 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %161 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %160, i32 0, i32 0
  %162 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %161, align 8
  %163 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %162, i32 0, i32 5
  store i32 110, i32* %163, align 8
  %164 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %165 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %164, i32 0, i32 55
  %166 = load i8, i8* %165, align 4
  %167 = zext i8 %166 to i32
  %168 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %169 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %168, i32 0, i32 0
  %170 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %169, align 8
  %171 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %170, i32 0, i32 6
  %172 = bitcast %union.anon* %171 to [8 x i32]*
  %173 = getelementptr inbounds [8 x i32], [8 x i32]* %172, i64 0, i64 0
  store i32 %167, i32* %173, align 4
  %174 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %175 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %174, i32 0, i32 0
  %176 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %175, align 8
  %177 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %176, i32 0, i32 1
  %178 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %177, align 8
  %179 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %180 = bitcast %struct.jpeg_decompress_struct* %179 to %struct.jpeg_common_struct*
  call void %178(%struct.jpeg_common_struct* %180, i32 -1)
  %181 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %182 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %181, i32 0, i32 9
  store i32 5, i32* %182, align 4
  br label %183

183:                                              ; preds = %159, %156, %153
  br label %187

184:                                              ; preds = %143
  %185 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %186 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %185, i32 0, i32 9
  store i32 4, i32* %186, align 4
  br label %187

187:                                              ; preds = %184, %183
  %188 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %189 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %188, i32 0, i32 10
  store i32 4, i32* %189, align 8
  br label %195

190:                                              ; preds = %1
  %191 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %192 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %191, i32 0, i32 9
  store i32 0, i32* %192, align 4
  %193 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %194 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %193, i32 0, i32 10
  store i32 0, i32* %194, align 8
  br label %195

195:                                              ; preds = %190, %187, %140, %10
  %196 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %197 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %196, i32 0, i32 11
  store i32 1, i32* %197, align 4
  %198 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %199 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %198, i32 0, i32 12
  store i32 1, i32* %199, align 8
  %200 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %201 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %200, i32 0, i32 13
  store double 1.000000e+00, double* %201, align 8
  %202 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %203 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %202, i32 0, i32 14
  store i32 0, i32* %203, align 8
  %204 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %205 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %204, i32 0, i32 15
  store i32 0, i32* %205, align 4
  %206 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %207 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %206, i32 0, i32 16
  store i32 0, i32* %207, align 8
  %208 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %209 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %208, i32 0, i32 17
  store i32 1, i32* %209, align 4
  %210 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %211 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %210, i32 0, i32 18
  store i32 1, i32* %211, align 8
  %212 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %213 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %212, i32 0, i32 19
  store i32 0, i32* %213, align 4
  %214 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %215 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %214, i32 0, i32 20
  store i32 2, i32* %215, align 8
  %216 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %217 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %216, i32 0, i32 21
  store i32 1, i32* %217, align 4
  %218 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %219 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %218, i32 0, i32 22
  store i32 256, i32* %219, align 8
  %220 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %221 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %220, i32 0, i32 32
  store i8** null, i8*** %221, align 8
  %222 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %223 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %222, i32 0, i32 23
  store i32 0, i32* %223, align 4
  %224 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %225 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %224, i32 0, i32 24
  store i32 0, i32* %225, align 8
  %226 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %227 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %226, i32 0, i32 25
  store i32 0, i32* %227, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @jpeg_input_complete(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  %3 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %3, i32 0, i32 4
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, 200
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %8, i32 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 210
  br i1 %11, label %12, label %33

12:                                               ; preds = %7, %1
  %13 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %13, i32 0, i32 0
  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i32 0, i32 5
  store i32 18, i32* %16, align 8
  %17 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %17, i32 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %20, i32 0, i32 0
  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %21, align 8
  %23 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i32 0, i32 6
  %24 = bitcast %union.anon* %23 to [8 x i32]*
  %25 = getelementptr inbounds [8 x i32], [8 x i32]* %24, i64 0, i64 0
  store i32 %19, i32* %25, align 4
  %26 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %26, i32 0, i32 0
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i32 0, i32 0
  %30 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %29, align 8
  %31 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %32 = bitcast %struct.jpeg_decompress_struct* %31 to %struct.jpeg_common_struct*
  call void %30(%struct.jpeg_common_struct* %32)
  br label %33

33:                                               ; preds = %12, %7
  %34 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %34, i32 0, i32 77
  %36 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %36, i32 0, i32 5
  %38 = load i32, i32* %37, align 4
  ret i32 %38
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @jpeg_has_multiple_scans(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  %3 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %3, i32 0, i32 4
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, 202
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %8, i32 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 210
  br i1 %11, label %12, label %33

12:                                               ; preds = %7, %1
  %13 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %13, i32 0, i32 0
  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i32 0, i32 5
  store i32 18, i32* %16, align 8
  %17 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %17, i32 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %20, i32 0, i32 0
  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %21, align 8
  %23 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i32 0, i32 6
  %24 = bitcast %union.anon* %23 to [8 x i32]*
  %25 = getelementptr inbounds [8 x i32], [8 x i32]* %24, i64 0, i64 0
  store i32 %19, i32* %25, align 4
  %26 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %26, i32 0, i32 0
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i32 0, i32 0
  %30 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %29, align 8
  %31 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %32 = bitcast %struct.jpeg_decompress_struct* %31 to %struct.jpeg_common_struct*
  call void %30(%struct.jpeg_common_struct* %32)
  br label %33

33:                                               ; preds = %12, %7
  %34 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %34, i32 0, i32 77
  %36 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %36, i32 0, i32 4
  %38 = load i32, i32* %37, align 8
  ret i32 %38
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @jpeg_finish_decompress(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 205
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %9, i32 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 206
  br i1 %12, label %13, label %47

13:                                               ; preds = %8, %1
  %14 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %14, i32 0, i32 14
  %16 = load i32, i32* %15, align 8
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %47, label %18

18:                                               ; preds = %13
  %19 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %19, i32 0, i32 33
  %21 = load i32, i32* %20, align 8
  %22 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %22, i32 0, i32 27
  %24 = load i32, i32* %23, align 4
  %25 = icmp ult i32 %21, %24
  br i1 %25, label %26, label %38

26:                                               ; preds = %18
  %27 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %27, i32 0, i32 0
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i32 0, i32 5
  store i32 66, i32* %30, align 8
  %31 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %31, i32 0, i32 0
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i32 0, i32 0
  %35 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %34, align 8
  %36 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %37 = bitcast %struct.jpeg_decompress_struct* %36 to %struct.jpeg_common_struct*
  call void %35(%struct.jpeg_common_struct* %37)
  br label %38

38:                                               ; preds = %26, %18
  %39 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %39, i32 0, i32 73
  %41 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %41, i32 0, i32 1
  %43 = load void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)** %42, align 8
  %44 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  call void %43(%struct.jpeg_decompress_struct* %44)
  %45 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %46 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %45, i32 0, i32 4
  store i32 210, i32* %46, align 4
  br label %83

47:                                               ; preds = %13, %8
  %48 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %49 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %48, i32 0, i32 4
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 207
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %54 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %53, i32 0, i32 4
  store i32 210, i32* %54, align 4
  br label %82

55:                                               ; preds = %47
  %56 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %57 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %56, i32 0, i32 4
  %58 = load i32, i32* %57, align 4
  %59 = icmp ne i32 %58, 210
  br i1 %59, label %60, label %81

60:                                               ; preds = %55
  %61 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %62 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %61, i32 0, i32 0
  %63 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %62, align 8
  %64 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %63, i32 0, i32 5
  store i32 18, i32* %64, align 8
  %65 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %66 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %65, i32 0, i32 4
  %67 = load i32, i32* %66, align 4
  %68 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %69 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %68, i32 0, i32 0
  %70 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %69, align 8
  %71 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %70, i32 0, i32 6
  %72 = bitcast %union.anon* %71 to [8 x i32]*
  %73 = getelementptr inbounds [8 x i32], [8 x i32]* %72, i64 0, i64 0
  store i32 %67, i32* %73, align 4
  %74 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %75 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %74, i32 0, i32 0
  %76 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %75, align 8
  %77 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %76, i32 0, i32 0
  %78 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %77, align 8
  %79 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %80 = bitcast %struct.jpeg_decompress_struct* %79 to %struct.jpeg_common_struct*
  call void %78(%struct.jpeg_common_struct* %80)
  br label %81

81:                                               ; preds = %60, %55
  br label %82

82:                                               ; preds = %81, %52
  br label %83

83:                                               ; preds = %82, %38
  br label %84

84:                                               ; preds = %102, %83
  %85 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %86 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %85, i32 0, i32 77
  %87 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %86, align 8
  %88 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %87, i32 0, i32 5
  %89 = load i32, i32* %88, align 4
  %90 = icmp ne i32 %89, 0
  %91 = xor i1 %90, true
  br i1 %91, label %92, label %103

92:                                               ; preds = %84
  %93 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %94 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %93, i32 0, i32 77
  %95 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %94, align 8
  %96 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %95, i32 0, i32 0
  %97 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %96, align 8
  %98 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %99 = call i32 %97(%struct.jpeg_decompress_struct* %98)
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %92
  store i32 0, i32* %2, align 4
  br label %112

102:                                              ; preds = %92
  br label %84

103:                                              ; preds = %84
  %104 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %105 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %104, i32 0, i32 5
  %106 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %105, align 8
  %107 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %106, i32 0, i32 6
  %108 = load void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)** %107, align 8
  %109 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  call void %108(%struct.jpeg_decompress_struct* %109)
  %110 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %111 = bitcast %struct.jpeg_decompress_struct* %110 to %struct.jpeg_common_struct*
  call void bitcast (void (%struct.jpeg_common_struct.212*)* @jpeg_abort to void (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %111)
  store i32 1, i32* %2, align 4
  br label %112

112:                                              ; preds = %103, %101
  %113 = load i32, i32* %2, align 4
  ret i32 %113
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @jpeg_start_decompress(%struct.jpeg_decompress_struct.369* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.369*, align 8
  %4 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.369* %0, %struct.jpeg_decompress_struct.369** %3, align 8
  %5 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %5, i32 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 202
  br i1 %8, label %9, label %21

9:                                                ; preds = %1
  %10 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  call void bitcast (void (%struct.jpeg_decompress_struct.469*)* @jinit_master_decompress to void (%struct.jpeg_decompress_struct.369*)*)(%struct.jpeg_decompress_struct.369* %10)
  %11 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %11, i32 0, i32 14
  %13 = load i32, i32* %12, align 8
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  %16 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %16, i32 0, i32 4
  store i32 207, i32* %17, align 4
  store i32 1, i32* %2, align 4
  br label %138

18:                                               ; preds = %9
  %19 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %19, i32 0, i32 4
  store i32 203, i32* %20, align 4
  br label %21

21:                                               ; preds = %18, %1
  %22 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %22, i32 0, i32 4
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 203
  br i1 %25, label %26, label %108

26:                                               ; preds = %21
  %27 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %27, i32 0, i32 77
  %29 = load %struct.jpeg_input_controller.381*, %struct.jpeg_input_controller.381** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_input_controller.381, %struct.jpeg_input_controller.381* %29, i32 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %102

33:                                               ; preds = %26
  br label %34

34:                                               ; preds = %100, %33
  %35 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %35, i32 0, i32 2
  %37 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %36, align 8
  %38 = icmp ne %struct.jpeg_progress_mgr* %37, null
  br i1 %38, label %39, label %48

39:                                               ; preds = %34
  %40 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %40, i32 0, i32 2
  %42 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %41, align 8
  %43 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %42, i32 0, i32 0
  %44 = bitcast {}** %43 to void (%struct.jpeg_common_struct*)**
  %45 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %44, align 8
  %46 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %47 = bitcast %struct.jpeg_decompress_struct.369* %46 to %struct.jpeg_common_struct*
  call void %45(%struct.jpeg_common_struct* %47)
  br label %48

48:                                               ; preds = %39, %34
  %49 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %49, i32 0, i32 77
  %51 = load %struct.jpeg_input_controller.381*, %struct.jpeg_input_controller.381** %50, align 8
  %52 = getelementptr inbounds %struct.jpeg_input_controller.381, %struct.jpeg_input_controller.381* %51, i32 0, i32 0
  %53 = bitcast {}** %52 to i32 (%struct.jpeg_decompress_struct.369*)**
  %54 = load i32 (%struct.jpeg_decompress_struct.369*)*, i32 (%struct.jpeg_decompress_struct.369*)** %53, align 8
  %55 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %56 = call i32 %54(%struct.jpeg_decompress_struct.369* %55)
  store i32 %56, i32* %4, align 4
  %57 = load i32, i32* %4, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %48
  store i32 0, i32* %2, align 4
  br label %138

60:                                               ; preds = %48
  %61 = load i32, i32* %4, align 4
  %62 = icmp eq i32 %61, 2
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  br label %101

64:                                               ; preds = %60
  %65 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %66 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %65, i32 0, i32 2
  %67 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %66, align 8
  %68 = icmp ne %struct.jpeg_progress_mgr* %67, null
  br i1 %68, label %69, label %100

69:                                               ; preds = %64
  %70 = load i32, i32* %4, align 4
  %71 = icmp eq i32 %70, 3
  br i1 %71, label %75, label %72

72:                                               ; preds = %69
  %73 = load i32, i32* %4, align 4
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %100

75:                                               ; preds = %72, %69
  %76 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %77 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %76, i32 0, i32 2
  %78 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %77, align 8
  %79 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %78, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = add nsw i64 %80, 1
  store i64 %81, i64* %79, align 8
  %82 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %83 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %82, i32 0, i32 2
  %84 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %83, align 8
  %85 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %84, i32 0, i32 2
  %86 = load i64, i64* %85, align 8
  %87 = icmp sge i64 %81, %86
  br i1 %87, label %88, label %99

88:                                               ; preds = %75
  %89 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %90 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %89, i32 0, i32 60
  %91 = load i32, i32* %90, align 8
  %92 = zext i32 %91 to i64
  %93 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %94 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %93, i32 0, i32 2
  %95 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %94, align 8
  %96 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %95, i32 0, i32 2
  %97 = load i64, i64* %96, align 8
  %98 = add nsw i64 %97, %92
  store i64 %98, i64* %96, align 8
  br label %99

99:                                               ; preds = %88, %75
  br label %100

100:                                              ; preds = %99, %72, %64
  br label %34

101:                                              ; preds = %63
  br label %102

102:                                              ; preds = %101, %26
  %103 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %104 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %103, i32 0, i32 34
  %105 = load i32, i32* %104, align 4
  %106 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %107 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %106, i32 0, i32 36
  store i32 %105, i32* %107, align 4
  br label %135

108:                                              ; preds = %21
  %109 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %110 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %109, i32 0, i32 4
  %111 = load i32, i32* %110, align 4
  %112 = icmp ne i32 %111, 204
  br i1 %112, label %113, label %134

113:                                              ; preds = %108
  %114 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %115 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %114, i32 0, i32 0
  %116 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %115, align 8
  %117 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %116, i32 0, i32 5
  store i32 18, i32* %117, align 8
  %118 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %119 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %118, i32 0, i32 4
  %120 = load i32, i32* %119, align 4
  %121 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %122 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %121, i32 0, i32 0
  %123 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %122, align 8
  %124 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %123, i32 0, i32 6
  %125 = bitcast %union.anon* %124 to [8 x i32]*
  %126 = getelementptr inbounds [8 x i32], [8 x i32]* %125, i64 0, i64 0
  store i32 %120, i32* %126, align 4
  %127 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %128 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %127, i32 0, i32 0
  %129 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %128, align 8
  %130 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %129, i32 0, i32 0
  %131 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %130, align 8
  %132 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %133 = bitcast %struct.jpeg_decompress_struct.369* %132 to %struct.jpeg_common_struct*
  call void %131(%struct.jpeg_common_struct* %133)
  br label %134

134:                                              ; preds = %113, %108
  br label %135

135:                                              ; preds = %134, %102
  %136 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %137 = call i32 @output_pass_setup(%struct.jpeg_decompress_struct.369* %136)
  store i32 %137, i32* %2, align 4
  br label %138

138:                                              ; preds = %135, %59, %15
  %139 = load i32, i32* %2, align 4
  ret i32 %139
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @output_pass_setup(%struct.jpeg_decompress_struct.369* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.369*, align 8
  %4 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.369* %0, %struct.jpeg_decompress_struct.369** %3, align 8
  %5 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %5, i32 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 204
  br i1 %8, label %9, label %20

9:                                                ; preds = %1
  %10 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %10, i32 0, i32 73
  %12 = load %struct.jpeg_decomp_master.377*, %struct.jpeg_decomp_master.377** %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_decomp_master.377, %struct.jpeg_decomp_master.377* %12, i32 0, i32 0
  %14 = load void (%struct.jpeg_decompress_struct.369*)*, void (%struct.jpeg_decompress_struct.369*)** %13, align 8
  %15 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  call void %14(%struct.jpeg_decompress_struct.369* %15)
  %16 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %16, i32 0, i32 33
  store i32 0, i32* %17, align 8
  %18 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %18, i32 0, i32 4
  store i32 204, i32* %19, align 4
  br label %20

20:                                               ; preds = %9, %1
  br label %21

21:                                               ; preds = %86, %20
  %22 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %22, i32 0, i32 73
  %24 = load %struct.jpeg_decomp_master.377*, %struct.jpeg_decomp_master.377** %23, align 8
  %25 = getelementptr inbounds %struct.jpeg_decomp_master.377, %struct.jpeg_decomp_master.377* %24, i32 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %101

28:                                               ; preds = %21
  br label %29

29:                                               ; preds = %85, %28
  %30 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %30, i32 0, i32 33
  %32 = load i32, i32* %31, align 8
  %33 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %33, i32 0, i32 27
  %35 = load i32, i32* %34, align 4
  %36 = icmp ult i32 %32, %35
  br i1 %36, label %37, label %86

37:                                               ; preds = %29
  %38 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %39 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %38, i32 0, i32 2
  %40 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %39, align 8
  %41 = icmp ne %struct.jpeg_progress_mgr* %40, null
  br i1 %41, label %42, label %67

42:                                               ; preds = %37
  %43 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %43, i32 0, i32 33
  %45 = load i32, i32* %44, align 8
  %46 = zext i32 %45 to i64
  %47 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %47, i32 0, i32 2
  %49 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %49, i32 0, i32 1
  store i64 %46, i64* %50, align 8
  %51 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %51, i32 0, i32 27
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %56 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %55, i32 0, i32 2
  %57 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %56, align 8
  %58 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %57, i32 0, i32 2
  store i64 %54, i64* %58, align 8
  %59 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %59, i32 0, i32 2
  %61 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %60, align 8
  %62 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %61, i32 0, i32 0
  %63 = bitcast {}** %62 to void (%struct.jpeg_common_struct*)**
  %64 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %63, align 8
  %65 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %66 = bitcast %struct.jpeg_decompress_struct.369* %65 to %struct.jpeg_common_struct*
  call void %64(%struct.jpeg_common_struct* %66)
  br label %67

67:                                               ; preds = %42, %37
  %68 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %69 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %68, i32 0, i32 33
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %4, align 4
  %71 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %71, i32 0, i32 74
  %73 = load %struct.jpeg_d_main_controller.378*, %struct.jpeg_d_main_controller.378** %72, align 8
  %74 = getelementptr inbounds %struct.jpeg_d_main_controller.378, %struct.jpeg_d_main_controller.378* %73, i32 0, i32 1
  %75 = load void (%struct.jpeg_decompress_struct.369*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.369*, i8**, i32*, i32)** %74, align 8
  %76 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %77 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %78 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %77, i32 0, i32 33
  call void %75(%struct.jpeg_decompress_struct.369* %76, i8** null, i32* %78, i32 0)
  %79 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %80 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %79, i32 0, i32 33
  %81 = load i32, i32* %80, align 8
  %82 = load i32, i32* %4, align 4
  %83 = icmp eq i32 %81, %82
  br i1 %83, label %84, label %85

84:                                               ; preds = %67
  store i32 0, i32* %2, align 4
  br label %110

85:                                               ; preds = %67
  br label %29

86:                                               ; preds = %29
  %87 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %88 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %87, i32 0, i32 73
  %89 = load %struct.jpeg_decomp_master.377*, %struct.jpeg_decomp_master.377** %88, align 8
  %90 = getelementptr inbounds %struct.jpeg_decomp_master.377, %struct.jpeg_decomp_master.377* %89, i32 0, i32 1
  %91 = load void (%struct.jpeg_decompress_struct.369*)*, void (%struct.jpeg_decompress_struct.369*)** %90, align 8
  %92 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  call void %91(%struct.jpeg_decompress_struct.369* %92)
  %93 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %94 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %93, i32 0, i32 73
  %95 = load %struct.jpeg_decomp_master.377*, %struct.jpeg_decomp_master.377** %94, align 8
  %96 = getelementptr inbounds %struct.jpeg_decomp_master.377, %struct.jpeg_decomp_master.377* %95, i32 0, i32 0
  %97 = load void (%struct.jpeg_decompress_struct.369*)*, void (%struct.jpeg_decompress_struct.369*)** %96, align 8
  %98 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  call void %97(%struct.jpeg_decompress_struct.369* %98)
  %99 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %100 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %99, i32 0, i32 33
  store i32 0, i32* %100, align 8
  br label %21

101:                                              ; preds = %21
  %102 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %103 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %102, i32 0, i32 15
  %104 = load i32, i32* %103, align 4
  %105 = icmp ne i32 %104, 0
  %106 = zext i1 %105 to i64
  %107 = select i1 %105, i32 206, i32 205
  %108 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %109 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %108, i32 0, i32 4
  store i32 %107, i32* %109, align 4
  store i32 1, i32* %2, align 4
  br label %110

110:                                              ; preds = %101, %84
  %111 = load i32, i32* %2, align 4
  ret i32 %111
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @jpeg_read_scanlines(%struct.jpeg_decompress_struct.369* %0, i8** %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.jpeg_decompress_struct.369*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.369* %0, %struct.jpeg_decompress_struct.369** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i32 %2, i32* %7, align 4
  %9 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %9, i32 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %11, 205
  br i1 %12, label %13, label %34

13:                                               ; preds = %3
  %14 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %14, i32 0, i32 0
  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i32 0, i32 5
  store i32 18, i32* %17, align 8
  %18 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %18, i32 0, i32 4
  %20 = load i32, i32* %19, align 4
  %21 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %21, i32 0, i32 0
  %23 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %23, i32 0, i32 6
  %25 = bitcast %union.anon* %24 to [8 x i32]*
  %26 = getelementptr inbounds [8 x i32], [8 x i32]* %25, i64 0, i64 0
  store i32 %20, i32* %26, align 4
  %27 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %27, i32 0, i32 0
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i32 0, i32 0
  %31 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %30, align 8
  %32 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %33 = bitcast %struct.jpeg_decompress_struct.369* %32 to %struct.jpeg_common_struct*
  call void %31(%struct.jpeg_common_struct* %33)
  br label %34

34:                                               ; preds = %13, %3
  %35 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %35, i32 0, i32 33
  %37 = load i32, i32* %36, align 8
  %38 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %39 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %38, i32 0, i32 27
  %40 = load i32, i32* %39, align 4
  %41 = icmp uge i32 %37, %40
  br i1 %41, label %42, label %54

42:                                               ; preds = %34
  %43 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %43, i32 0, i32 0
  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i32 0, i32 5
  store i32 119, i32* %46, align 8
  %47 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %47, i32 0, i32 0
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i32 0, i32 1
  %51 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %50, align 8
  %52 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %53 = bitcast %struct.jpeg_decompress_struct.369* %52 to %struct.jpeg_common_struct*
  call void %51(%struct.jpeg_common_struct* %53, i32 -1)
  store i32 0, i32* %4, align 4
  br label %99

54:                                               ; preds = %34
  %55 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %56 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %55, i32 0, i32 2
  %57 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %56, align 8
  %58 = icmp ne %struct.jpeg_progress_mgr* %57, null
  br i1 %58, label %59, label %84

59:                                               ; preds = %54
  %60 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %61 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %60, i32 0, i32 33
  %62 = load i32, i32* %61, align 8
  %63 = zext i32 %62 to i64
  %64 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %65 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %64, i32 0, i32 2
  %66 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %65, align 8
  %67 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %66, i32 0, i32 1
  store i64 %63, i64* %67, align 8
  %68 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %69 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %68, i32 0, i32 27
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %73 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %72, i32 0, i32 2
  %74 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %73, align 8
  %75 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %74, i32 0, i32 2
  store i64 %71, i64* %75, align 8
  %76 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %77 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %76, i32 0, i32 2
  %78 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %77, align 8
  %79 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %78, i32 0, i32 0
  %80 = bitcast {}** %79 to void (%struct.jpeg_common_struct*)**
  %81 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %80, align 8
  %82 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %83 = bitcast %struct.jpeg_decompress_struct.369* %82 to %struct.jpeg_common_struct*
  call void %81(%struct.jpeg_common_struct* %83)
  br label %84

84:                                               ; preds = %59, %54
  store i32 0, i32* %8, align 4
  %85 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %86 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %85, i32 0, i32 74
  %87 = load %struct.jpeg_d_main_controller.378*, %struct.jpeg_d_main_controller.378** %86, align 8
  %88 = getelementptr inbounds %struct.jpeg_d_main_controller.378, %struct.jpeg_d_main_controller.378* %87, i32 0, i32 1
  %89 = load void (%struct.jpeg_decompress_struct.369*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.369*, i8**, i32*, i32)** %88, align 8
  %90 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %91 = load i8**, i8*** %6, align 8
  %92 = load i32, i32* %7, align 4
  call void %89(%struct.jpeg_decompress_struct.369* %90, i8** %91, i32* %8, i32 %92)
  %93 = load i32, i32* %8, align 4
  %94 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %95 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %94, i32 0, i32 33
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %93
  store i32 %97, i32* %95, align 8
  %98 = load i32, i32* %8, align 4
  store i32 %98, i32* %4, align 4
  br label %99

99:                                               ; preds = %84, %42
  %100 = load i32, i32* %4, align 4
  ret i32 %100
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @jpeg_read_raw_data(%struct.jpeg_decompress_struct.369* %0, i8*** %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.jpeg_decompress_struct.369*, align 8
  %6 = alloca i8***, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.369* %0, %struct.jpeg_decompress_struct.369** %5, align 8
  store i8*** %1, i8**** %6, align 8
  store i32 %2, i32* %7, align 4
  %9 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %9, i32 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %11, 206
  br i1 %12, label %13, label %34

13:                                               ; preds = %3
  %14 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %14, i32 0, i32 0
  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i32 0, i32 5
  store i32 18, i32* %17, align 8
  %18 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %18, i32 0, i32 4
  %20 = load i32, i32* %19, align 4
  %21 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %21, i32 0, i32 0
  %23 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %23, i32 0, i32 6
  %25 = bitcast %union.anon* %24 to [8 x i32]*
  %26 = getelementptr inbounds [8 x i32], [8 x i32]* %25, i64 0, i64 0
  store i32 %20, i32* %26, align 4
  %27 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %27, i32 0, i32 0
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i32 0, i32 0
  %31 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %30, align 8
  %32 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %33 = bitcast %struct.jpeg_decompress_struct.369* %32 to %struct.jpeg_common_struct*
  call void %31(%struct.jpeg_common_struct* %33)
  br label %34

34:                                               ; preds = %13, %3
  %35 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %35, i32 0, i32 33
  %37 = load i32, i32* %36, align 8
  %38 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %39 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %38, i32 0, i32 27
  %40 = load i32, i32* %39, align 4
  %41 = icmp uge i32 %37, %40
  br i1 %41, label %42, label %54

42:                                               ; preds = %34
  %43 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %43, i32 0, i32 0
  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i32 0, i32 5
  store i32 119, i32* %46, align 8
  %47 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %47, i32 0, i32 0
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i32 0, i32 1
  %51 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %50, align 8
  %52 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %53 = bitcast %struct.jpeg_decompress_struct.369* %52 to %struct.jpeg_common_struct*
  call void %51(%struct.jpeg_common_struct* %53, i32 -1)
  store i32 0, i32* %4, align 4
  br label %125

54:                                               ; preds = %34
  %55 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %56 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %55, i32 0, i32 2
  %57 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %56, align 8
  %58 = icmp ne %struct.jpeg_progress_mgr* %57, null
  br i1 %58, label %59, label %84

59:                                               ; preds = %54
  %60 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %61 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %60, i32 0, i32 33
  %62 = load i32, i32* %61, align 8
  %63 = zext i32 %62 to i64
  %64 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %65 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %64, i32 0, i32 2
  %66 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %65, align 8
  %67 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %66, i32 0, i32 1
  store i64 %63, i64* %67, align 8
  %68 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %69 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %68, i32 0, i32 27
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %73 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %72, i32 0, i32 2
  %74 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %73, align 8
  %75 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %74, i32 0, i32 2
  store i64 %71, i64* %75, align 8
  %76 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %77 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %76, i32 0, i32 2
  %78 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %77, align 8
  %79 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %78, i32 0, i32 0
  %80 = bitcast {}** %79 to void (%struct.jpeg_common_struct*)**
  %81 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %80, align 8
  %82 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %83 = bitcast %struct.jpeg_decompress_struct.369* %82 to %struct.jpeg_common_struct*
  call void %81(%struct.jpeg_common_struct* %83)
  br label %84

84:                                               ; preds = %59, %54
  %85 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %86 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %85, i32 0, i32 58
  %87 = load i32, i32* %86, align 8
  %88 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %89 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %88, i32 0, i32 59
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %87, %90
  store i32 %91, i32* %8, align 4
  %92 = load i32, i32* %7, align 4
  %93 = load i32, i32* %8, align 4
  %94 = icmp ult i32 %92, %93
  br i1 %94, label %95, label %107

95:                                               ; preds = %84
  %96 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %97 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %96, i32 0, i32 0
  %98 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %97, align 8
  %99 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %98, i32 0, i32 5
  store i32 21, i32* %99, align 8
  %100 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %101 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %100, i32 0, i32 0
  %102 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %101, align 8
  %103 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %102, i32 0, i32 0
  %104 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %103, align 8
  %105 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %106 = bitcast %struct.jpeg_decompress_struct.369* %105 to %struct.jpeg_common_struct*
  call void %104(%struct.jpeg_common_struct* %106)
  br label %107

107:                                              ; preds = %95, %84
  %108 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %109 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %108, i32 0, i32 75
  %110 = load %struct.jpeg_d_coef_controller.379*, %struct.jpeg_d_coef_controller.379** %109, align 8
  %111 = getelementptr inbounds %struct.jpeg_d_coef_controller.379, %struct.jpeg_d_coef_controller.379* %110, i32 0, i32 3
  %112 = load i32 (%struct.jpeg_decompress_struct.369*, i8***)*, i32 (%struct.jpeg_decompress_struct.369*, i8***)** %111, align 8
  %113 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %114 = load i8***, i8**** %6, align 8
  %115 = call i32 %112(%struct.jpeg_decompress_struct.369* %113, i8*** %114)
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %118, label %117

117:                                              ; preds = %107
  store i32 0, i32* %4, align 4
  br label %125

118:                                              ; preds = %107
  %119 = load i32, i32* %8, align 4
  %120 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %5, align 8
  %121 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %120, i32 0, i32 33
  %122 = load i32, i32* %121, align 8
  %123 = add i32 %122, %119
  store i32 %123, i32* %121, align 8
  %124 = load i32, i32* %8, align 4
  store i32 %124, i32* %4, align 4
  br label %125

125:                                              ; preds = %118, %117, %42
  %126 = load i32, i32* %4, align 4
  ret i32 %126
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @jpeg_start_output(%struct.jpeg_decompress_struct.369* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct.369*, align 8
  %4 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.369* %0, %struct.jpeg_decompress_struct.369** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %5, i32 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 207
  br i1 %8, label %9, label %35

9:                                                ; preds = %2
  %10 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %10, i32 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 204
  br i1 %13, label %14, label %35

14:                                               ; preds = %9
  %15 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %15, i32 0, i32 0
  %17 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %17, i32 0, i32 5
  store i32 18, i32* %18, align 8
  %19 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %19, i32 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %22, i32 0, i32 0
  %24 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %25 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %24, i32 0, i32 6
  %26 = bitcast %union.anon* %25 to [8 x i32]*
  %27 = getelementptr inbounds [8 x i32], [8 x i32]* %26, i64 0, i64 0
  store i32 %21, i32* %27, align 4
  %28 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %28, i32 0, i32 0
  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %29, align 8
  %31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i32 0, i32 0
  %32 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %31, align 8
  %33 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %34 = bitcast %struct.jpeg_decompress_struct.369* %33 to %struct.jpeg_common_struct*
  call void %32(%struct.jpeg_common_struct* %34)
  br label %35

35:                                               ; preds = %14, %9, %2
  %36 = load i32, i32* %4, align 4
  %37 = icmp sle i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  store i32 1, i32* %4, align 4
  br label %39

39:                                               ; preds = %38, %35
  %40 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %40, i32 0, i32 77
  %42 = load %struct.jpeg_input_controller.381*, %struct.jpeg_input_controller.381** %41, align 8
  %43 = getelementptr inbounds %struct.jpeg_input_controller.381, %struct.jpeg_input_controller.381* %42, i32 0, i32 5
  %44 = load i32, i32* %43, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %56

46:                                               ; preds = %39
  %47 = load i32, i32* %4, align 4
  %48 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %49 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %48, i32 0, i32 34
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %47, %50
  br i1 %51, label %52, label %56

52:                                               ; preds = %46
  %53 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %54 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %53, i32 0, i32 34
  %55 = load i32, i32* %54, align 4
  store i32 %55, i32* %4, align 4
  br label %56

56:                                               ; preds = %52, %46, %39
  %57 = load i32, i32* %4, align 4
  %58 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %59 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %58, i32 0, i32 36
  store i32 %57, i32* %59, align 4
  %60 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %61 = call i32 @output_pass_setup(%struct.jpeg_decompress_struct.369* %60)
  ret i32 %61
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @jpeg_finish_output(%struct.jpeg_decompress_struct.369* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.369*, align 8
  store %struct.jpeg_decompress_struct.369* %0, %struct.jpeg_decompress_struct.369** %3, align 8
  %4 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 205
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %9, i32 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 206
  br i1 %12, label %13, label %27

13:                                               ; preds = %8, %1
  %14 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %14, i32 0, i32 14
  %16 = load i32, i32* %15, align 8
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %27

18:                                               ; preds = %13
  %19 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %19, i32 0, i32 73
  %21 = load %struct.jpeg_decomp_master.377*, %struct.jpeg_decomp_master.377** %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_decomp_master.377, %struct.jpeg_decomp_master.377* %21, i32 0, i32 1
  %23 = load void (%struct.jpeg_decompress_struct.369*)*, void (%struct.jpeg_decompress_struct.369*)** %22, align 8
  %24 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  call void %23(%struct.jpeg_decompress_struct.369* %24)
  %25 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %25, i32 0, i32 4
  store i32 208, i32* %26, align 4
  br label %54

27:                                               ; preds = %13, %8
  %28 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %28, i32 0, i32 4
  %30 = load i32, i32* %29, align 4
  %31 = icmp ne i32 %30, 208
  br i1 %31, label %32, label %53

32:                                               ; preds = %27
  %33 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %33, i32 0, i32 0
  %35 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %34, align 8
  %36 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %35, i32 0, i32 5
  store i32 18, i32* %36, align 8
  %37 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %38 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %37, i32 0, i32 4
  %39 = load i32, i32* %38, align 4
  %40 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %40, i32 0, i32 0
  %42 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %41, align 8
  %43 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %42, i32 0, i32 6
  %44 = bitcast %union.anon* %43 to [8 x i32]*
  %45 = getelementptr inbounds [8 x i32], [8 x i32]* %44, i64 0, i64 0
  store i32 %39, i32* %45, align 4
  %46 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %46, i32 0, i32 0
  %48 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %47, align 8
  %49 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %48, i32 0, i32 0
  %50 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %49, align 8
  %51 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %52 = bitcast %struct.jpeg_decompress_struct.369* %51 to %struct.jpeg_common_struct*
  call void %50(%struct.jpeg_common_struct* %52)
  br label %53

53:                                               ; preds = %32, %27
  br label %54

54:                                               ; preds = %53, %18
  br label %55

55:                                               ; preds = %84, %54
  %56 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %57 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %56, i32 0, i32 34
  %58 = load i32, i32* %57, align 4
  %59 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %59, i32 0, i32 36
  %61 = load i32, i32* %60, align 4
  %62 = icmp sle i32 %58, %61
  br i1 %62, label %63, label %71

63:                                               ; preds = %55
  %64 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %65 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %64, i32 0, i32 77
  %66 = load %struct.jpeg_input_controller.381*, %struct.jpeg_input_controller.381** %65, align 8
  %67 = getelementptr inbounds %struct.jpeg_input_controller.381, %struct.jpeg_input_controller.381* %66, i32 0, i32 5
  %68 = load i32, i32* %67, align 4
  %69 = icmp ne i32 %68, 0
  %70 = xor i1 %69, true
  br label %71

71:                                               ; preds = %63, %55
  %72 = phi i1 [ false, %55 ], [ %70, %63 ]
  br i1 %72, label %73, label %85

73:                                               ; preds = %71
  %74 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %75 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %74, i32 0, i32 77
  %76 = load %struct.jpeg_input_controller.381*, %struct.jpeg_input_controller.381** %75, align 8
  %77 = getelementptr inbounds %struct.jpeg_input_controller.381, %struct.jpeg_input_controller.381* %76, i32 0, i32 0
  %78 = bitcast {}** %77 to i32 (%struct.jpeg_decompress_struct.369*)**
  %79 = load i32 (%struct.jpeg_decompress_struct.369*)*, i32 (%struct.jpeg_decompress_struct.369*)** %78, align 8
  %80 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %81 = call i32 %79(%struct.jpeg_decompress_struct.369* %80)
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %73
  store i32 0, i32* %2, align 4
  br label %88

84:                                               ; preds = %73
  br label %55

85:                                               ; preds = %71
  %86 = load %struct.jpeg_decompress_struct.369*, %struct.jpeg_decompress_struct.369** %3, align 8
  %87 = getelementptr inbounds %struct.jpeg_decompress_struct.369, %struct.jpeg_decompress_struct.369* %86, i32 0, i32 4
  store i32 207, i32* %87, align 4
  store i32 1, i32* %2, align 4
  br label %88

88:                                               ; preds = %85, %83
  %89 = load i32, i32* %2, align 4
  ret i32 %89
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_stdio_dest(%struct.jpeg_compress_struct* %0, %struct._IO_FILE* %1) #0 {
  %3 = alloca %struct.jpeg_compress_struct*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct.my_destination_mgr*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %3, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  %6 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %6, i32 0, i32 5
  %8 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %7, align 8
  %9 = icmp eq %struct.jpeg_destination_mgr* %8, null
  br i1 %9, label %10, label %22

10:                                               ; preds = %2
  %11 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %11, i32 0, i32 1
  %13 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %13, i32 0, i32 0
  %15 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %14, align 8
  %16 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %17 = bitcast %struct.jpeg_compress_struct* %16 to %struct.jpeg_common_struct*
  %18 = call i8* %15(%struct.jpeg_common_struct* %17, i32 0, i64 56)
  %19 = bitcast i8* %18 to %struct.jpeg_destination_mgr*
  %20 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %20, i32 0, i32 5
  store %struct.jpeg_destination_mgr* %19, %struct.jpeg_destination_mgr** %21, align 8
  br label %22

22:                                               ; preds = %10, %2
  %23 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %3, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %23, i32 0, i32 5
  %25 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %24, align 8
  %26 = bitcast %struct.jpeg_destination_mgr* %25 to %struct.my_destination_mgr*
  store %struct.my_destination_mgr* %26, %struct.my_destination_mgr** %5, align 8
  %27 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %5, align 8
  %28 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %27, i32 0, i32 0
  %29 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %28, i32 0, i32 2
  store void (%struct.jpeg_compress_struct*)* @init_destination, void (%struct.jpeg_compress_struct*)** %29, align 8
  %30 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %5, align 8
  %31 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %30, i32 0, i32 0
  %32 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %31, i32 0, i32 3
  store i32 (%struct.jpeg_compress_struct*)* @empty_output_buffer, i32 (%struct.jpeg_compress_struct*)** %32, align 8
  %33 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %5, align 8
  %34 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %33, i32 0, i32 0
  %35 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %34, i32 0, i32 4
  store void (%struct.jpeg_compress_struct*)* @term_destination, void (%struct.jpeg_compress_struct*)** %35, align 8
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %37 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %5, align 8
  %38 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %37, i32 0, i32 1
  store %struct._IO_FILE* %36, %struct._IO_FILE** %38, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_destination(%struct.jpeg_compress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct*, align 8
  %3 = alloca %struct.my_destination_mgr*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %2, align 8
  %4 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %4, i32 0, i32 5
  %6 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8
  %7 = bitcast %struct.jpeg_destination_mgr* %6 to %struct.my_destination_mgr*
  store %struct.my_destination_mgr* %7, %struct.my_destination_mgr** %3, align 8
  %8 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %8, i32 0, i32 1
  %10 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %10, i32 0, i32 0
  %12 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %11, align 8
  %13 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %14 = bitcast %struct.jpeg_compress_struct* %13 to %struct.jpeg_common_struct*
  %15 = call i8* %12(%struct.jpeg_common_struct* %14, i32 1, i64 4096)
  %16 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8
  %17 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %16, i32 0, i32 2
  store i8* %15, i8** %17, align 8
  %18 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8
  %19 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %18, i32 0, i32 2
  %20 = load i8*, i8** %19, align 8
  %21 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8
  %22 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %21, i32 0, i32 0
  %23 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %22, i32 0, i32 0
  store i8* %20, i8** %23, align 8
  %24 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8
  %25 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %24, i32 0, i32 0
  %26 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %25, i32 0, i32 1
  store i64 4096, i64* %26, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @empty_output_buffer(%struct.jpeg_compress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct*, align 8
  %3 = alloca %struct.my_destination_mgr*, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %2, align 8
  %4 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %4, i32 0, i32 5
  %6 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8
  %7 = bitcast %struct.jpeg_destination_mgr* %6 to %struct.my_destination_mgr*
  store %struct.my_destination_mgr* %7, %struct.my_destination_mgr** %3, align 8
  %8 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8
  %9 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %8, i32 0, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8
  %12 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %11, i32 0, i32 1
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %14 = call i64 @fwrite(i8* %10, i64 1, i64 4096, %struct._IO_FILE* %13)
  %15 = icmp ne i64 %14, 4096
  br i1 %15, label %16, label %28

16:                                               ; preds = %1
  %17 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %17, i32 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i32 0, i32 5
  store i32 36, i32* %20, align 8
  %21 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %21, i32 0, i32 0
  %23 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %23, i32 0, i32 0
  %25 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %24, align 8
  %26 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %27 = bitcast %struct.jpeg_compress_struct* %26 to %struct.jpeg_common_struct*
  call void %25(%struct.jpeg_common_struct* %27)
  br label %28

28:                                               ; preds = %16, %1
  %29 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8
  %30 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %29, i32 0, i32 2
  %31 = load i8*, i8** %30, align 8
  %32 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8
  %33 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %32, i32 0, i32 0
  %34 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %33, i32 0, i32 0
  store i8* %31, i8** %34, align 8
  %35 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8
  %36 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %35, i32 0, i32 0
  %37 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %36, i32 0, i32 1
  store i64 4096, i64* %37, align 8
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal void @term_destination(%struct.jpeg_compress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct*, align 8
  %3 = alloca %struct.my_destination_mgr*, align 8
  %4 = alloca i64, align 8
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %2, align 8
  %5 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %5, i32 0, i32 5
  %7 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %6, align 8
  %8 = bitcast %struct.jpeg_destination_mgr* %7 to %struct.my_destination_mgr*
  store %struct.my_destination_mgr* %8, %struct.my_destination_mgr** %3, align 8
  %9 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8
  %10 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %9, i32 0, i32 0
  %11 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %10, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 4096, %12
  store i64 %13, i64* %4, align 8
  %14 = load i64, i64* %4, align 8
  %15 = icmp ugt i64 %14, 0
  br i1 %15, label %16, label %40

16:                                               ; preds = %1
  %17 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8
  %18 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %17, i32 0, i32 2
  %19 = load i8*, i8** %18, align 8
  %20 = load i64, i64* %4, align 8
  %21 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8
  %22 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %21, i32 0, i32 1
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %22, align 8
  %24 = call i64 @fwrite(i8* %19, i64 1, i64 %20, %struct._IO_FILE* %23)
  %25 = load i64, i64* %4, align 8
  %26 = icmp ne i64 %24, %25
  br i1 %26, label %27, label %39

27:                                               ; preds = %16
  %28 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %29 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %28, i32 0, i32 0
  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %29, align 8
  %31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i32 0, i32 5
  store i32 36, i32* %31, align 8
  %32 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %33 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %32, i32 0, i32 0
  %34 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %33, align 8
  %35 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %34, i32 0, i32 0
  %36 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %35, align 8
  %37 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %38 = bitcast %struct.jpeg_compress_struct* %37 to %struct.jpeg_common_struct*
  call void %36(%struct.jpeg_common_struct* %38)
  br label %39

39:                                               ; preds = %27, %16
  br label %40

40:                                               ; preds = %39, %1
  %41 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8
  %42 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %41, i32 0, i32 1
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** %42, align 8
  %44 = call i32 @fflush(%struct._IO_FILE* %43)
  %45 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8
  %46 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %45, i32 0, i32 1
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %46, align 8
  %48 = call i32 @ferror(%struct._IO_FILE* %47) #10
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %40
  %51 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %52 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %51, i32 0, i32 0
  %53 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %52, align 8
  %54 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %53, i32 0, i32 5
  store i32 36, i32* %54, align 8
  %55 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %56 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %55, i32 0, i32 0
  %57 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %56, align 8
  %58 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %57, i32 0, i32 0
  %59 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %58, align 8
  %60 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %2, align 8
  %61 = bitcast %struct.jpeg_compress_struct* %60 to %struct.jpeg_common_struct*
  call void %59(%struct.jpeg_common_struct* %61)
  br label %62

62:                                               ; preds = %50, %40
  ret void
}

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #3

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @ferror(%struct._IO_FILE*) #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_stdio_src(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct.my_source_mgr*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  %6 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %6, i32 0, i32 5
  %8 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8
  %9 = icmp eq %struct.jpeg_source_mgr* %8, null
  br i1 %9, label %10, label %36

10:                                               ; preds = %2
  %11 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %11, i32 0, i32 1
  %13 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %13, i32 0, i32 0
  %15 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %14, align 8
  %16 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %17 = bitcast %struct.jpeg_decompress_struct* %16 to %struct.jpeg_common_struct*
  %18 = call i8* %15(%struct.jpeg_common_struct* %17, i32 0, i64 80)
  %19 = bitcast i8* %18 to %struct.jpeg_source_mgr*
  %20 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %20, i32 0, i32 5
  store %struct.jpeg_source_mgr* %19, %struct.jpeg_source_mgr** %21, align 8
  %22 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %22, i32 0, i32 5
  %24 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %23, align 8
  %25 = bitcast %struct.jpeg_source_mgr* %24 to %struct.my_source_mgr*
  store %struct.my_source_mgr* %25, %struct.my_source_mgr** %5, align 8
  %26 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %26, i32 0, i32 1
  %28 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %28, i32 0, i32 0
  %30 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %29, align 8
  %31 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %32 = bitcast %struct.jpeg_decompress_struct* %31 to %struct.jpeg_common_struct*
  %33 = call i8* %30(%struct.jpeg_common_struct* %32, i32 0, i64 4096)
  %34 = load %struct.my_source_mgr*, %struct.my_source_mgr** %5, align 8
  %35 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %34, i32 0, i32 2
  store i8* %33, i8** %35, align 8
  br label %36

36:                                               ; preds = %10, %2
  %37 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %38 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %37, i32 0, i32 5
  %39 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %38, align 8
  %40 = bitcast %struct.jpeg_source_mgr* %39 to %struct.my_source_mgr*
  store %struct.my_source_mgr* %40, %struct.my_source_mgr** %5, align 8
  %41 = load %struct.my_source_mgr*, %struct.my_source_mgr** %5, align 8
  %42 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %41, i32 0, i32 0
  %43 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %42, i32 0, i32 2
  store void (%struct.jpeg_decompress_struct*)* @init_source, void (%struct.jpeg_decompress_struct*)** %43, align 8
  %44 = load %struct.my_source_mgr*, %struct.my_source_mgr** %5, align 8
  %45 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %44, i32 0, i32 0
  %46 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %45, i32 0, i32 3
  store i32 (%struct.jpeg_decompress_struct*)* @fill_input_buffer, i32 (%struct.jpeg_decompress_struct*)** %46, align 8
  %47 = load %struct.my_source_mgr*, %struct.my_source_mgr** %5, align 8
  %48 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %47, i32 0, i32 0
  %49 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %48, i32 0, i32 4
  store void (%struct.jpeg_decompress_struct*, i64)* @skip_input_data, void (%struct.jpeg_decompress_struct*, i64)** %49, align 8
  %50 = load %struct.my_source_mgr*, %struct.my_source_mgr** %5, align 8
  %51 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %50, i32 0, i32 0
  %52 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %51, i32 0, i32 5
  store i32 (%struct.jpeg_decompress_struct*, i32)* bitcast (i32 (%struct.jpeg_decompress_struct.586*, i32)* @jpeg_resync_to_restart to i32 (%struct.jpeg_decompress_struct*, i32)*), i32 (%struct.jpeg_decompress_struct*, i32)** %52, align 8
  %53 = load %struct.my_source_mgr*, %struct.my_source_mgr** %5, align 8
  %54 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %53, i32 0, i32 0
  %55 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %54, i32 0, i32 6
  store void (%struct.jpeg_decompress_struct*)* @term_source, void (%struct.jpeg_decompress_struct*)** %55, align 8
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %57 = load %struct.my_source_mgr*, %struct.my_source_mgr** %5, align 8
  %58 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %57, i32 0, i32 1
  store %struct._IO_FILE* %56, %struct._IO_FILE** %58, align 8
  %59 = load %struct.my_source_mgr*, %struct.my_source_mgr** %5, align 8
  %60 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %59, i32 0, i32 0
  %61 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %60, i32 0, i32 1
  store i64 0, i64* %61, align 8
  %62 = load %struct.my_source_mgr*, %struct.my_source_mgr** %5, align 8
  %63 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %62, i32 0, i32 0
  %64 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %63, i32 0, i32 0
  store i8* null, i8** %64, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_source(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  %3 = alloca %struct.my_source_mgr*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i32 0, i32 5
  %6 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %5, align 8
  %7 = bitcast %struct.jpeg_source_mgr* %6 to %struct.my_source_mgr*
  store %struct.my_source_mgr* %7, %struct.my_source_mgr** %3, align 8
  %8 = load %struct.my_source_mgr*, %struct.my_source_mgr** %3, align 8
  %9 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %8, i32 0, i32 3
  store i32 1, i32* %9, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fill_input_buffer(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  %3 = alloca %struct.my_source_mgr*, align 8
  %4 = alloca i64, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  %5 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %5, i32 0, i32 5
  %7 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %8 = bitcast %struct.jpeg_source_mgr* %7 to %struct.my_source_mgr*
  store %struct.my_source_mgr* %8, %struct.my_source_mgr** %3, align 8
  %9 = load %struct.my_source_mgr*, %struct.my_source_mgr** %3, align 8
  %10 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %9, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = load %struct.my_source_mgr*, %struct.my_source_mgr** %3, align 8
  %13 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %12, i32 0, i32 1
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8
  %15 = call i64 @fread(i8* %11, i64 1, i64 4096, %struct._IO_FILE* %14)
  store i64 %15, i64* %4, align 8
  %16 = load i64, i64* %4, align 8
  %17 = icmp ule i64 %16, 0
  br i1 %17, label %18, label %55

18:                                               ; preds = %1
  %19 = load %struct.my_source_mgr*, %struct.my_source_mgr** %3, align 8
  %20 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %19, i32 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %24, i32 0, i32 0
  %26 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i32 0, i32 5
  store i32 41, i32* %27, align 8
  %28 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %28, i32 0, i32 0
  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %29, align 8
  %31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i32 0, i32 0
  %32 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %31, align 8
  %33 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %34 = bitcast %struct.jpeg_decompress_struct* %33 to %struct.jpeg_common_struct*
  call void %32(%struct.jpeg_common_struct* %34)
  br label %35

35:                                               ; preds = %23, %18
  %36 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %36, i32 0, i32 0
  %38 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %37, align 8
  %39 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %38, i32 0, i32 5
  store i32 116, i32* %39, align 8
  %40 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %40, i32 0, i32 0
  %42 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %41, align 8
  %43 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %42, i32 0, i32 1
  %44 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %43, align 8
  %45 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %46 = bitcast %struct.jpeg_decompress_struct* %45 to %struct.jpeg_common_struct*
  call void %44(%struct.jpeg_common_struct* %46, i32 -1)
  %47 = load %struct.my_source_mgr*, %struct.my_source_mgr** %3, align 8
  %48 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %47, i32 0, i32 2
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 0
  store i8 -1, i8* %50, align 1
  %51 = load %struct.my_source_mgr*, %struct.my_source_mgr** %3, align 8
  %52 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %51, i32 0, i32 2
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 1
  store i8 -39, i8* %54, align 1
  store i64 2, i64* %4, align 8
  br label %55

55:                                               ; preds = %35, %1
  %56 = load %struct.my_source_mgr*, %struct.my_source_mgr** %3, align 8
  %57 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %56, i32 0, i32 2
  %58 = load i8*, i8** %57, align 8
  %59 = load %struct.my_source_mgr*, %struct.my_source_mgr** %3, align 8
  %60 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %59, i32 0, i32 0
  %61 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %60, i32 0, i32 0
  store i8* %58, i8** %61, align 8
  %62 = load i64, i64* %4, align 8
  %63 = load %struct.my_source_mgr*, %struct.my_source_mgr** %3, align 8
  %64 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %63, i32 0, i32 0
  %65 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %64, i32 0, i32 1
  store i64 %62, i64* %65, align 8
  %66 = load %struct.my_source_mgr*, %struct.my_source_mgr** %3, align 8
  %67 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %66, i32 0, i32 3
  store i32 0, i32* %67, align 8
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal void @skip_input_data(%struct.jpeg_decompress_struct* %0, i64 %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.my_source_mgr*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %6, i32 0, i32 5
  %8 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8
  %9 = bitcast %struct.jpeg_source_mgr* %8 to %struct.my_source_mgr*
  store %struct.my_source_mgr* %9, %struct.my_source_mgr** %5, align 8
  %10 = load i64, i64* %4, align 8
  %11 = icmp sgt i64 %10, 0
  br i1 %11, label %12, label %42

12:                                               ; preds = %2
  br label %13

13:                                               ; preds = %20, %12
  %14 = load i64, i64* %4, align 8
  %15 = load %struct.my_source_mgr*, %struct.my_source_mgr** %5, align 8
  %16 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %15, i32 0, i32 0
  %17 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %16, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp sgt i64 %14, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %13
  %21 = load %struct.my_source_mgr*, %struct.my_source_mgr** %5, align 8
  %22 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %21, i32 0, i32 0
  %23 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %22, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %4, align 8
  %26 = sub nsw i64 %25, %24
  store i64 %26, i64* %4, align 8
  %27 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %28 = call i32 @fill_input_buffer(%struct.jpeg_decompress_struct* %27)
  br label %13

29:                                               ; preds = %13
  %30 = load i64, i64* %4, align 8
  %31 = load %struct.my_source_mgr*, %struct.my_source_mgr** %5, align 8
  %32 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %31, i32 0, i32 0
  %33 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %32, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 %30
  store i8* %35, i8** %33, align 8
  %36 = load i64, i64* %4, align 8
  %37 = load %struct.my_source_mgr*, %struct.my_source_mgr** %5, align 8
  %38 = getelementptr inbounds %struct.my_source_mgr, %struct.my_source_mgr* %37, i32 0, i32 0
  %39 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %38, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %36
  store i64 %41, i64* %39, align 8
  br label %42

42:                                               ; preds = %29, %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @term_source(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  ret void
}

declare dso_local i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_d_coef_controller(%struct.jpeg_decompress_struct.445* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct.445*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.my_coef_controller.468*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.jpeg_component_info*, align 8
  %9 = alloca [64 x i16]*, align 8
  %10 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.445* %0, %struct.jpeg_decompress_struct.445** %3, align 8
  store i32 %1, i32* %4, align 4
  %11 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %11, i32 0, i32 1
  %13 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %13, i32 0, i32 0
  %15 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %14, align 8
  %16 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %17 = bitcast %struct.jpeg_decompress_struct.445* %16 to %struct.jpeg_common_struct*
  %18 = call i8* %15(%struct.jpeg_common_struct* %17, i32 1, i64 224)
  %19 = bitcast i8* %18 to %struct.my_coef_controller.468*
  store %struct.my_coef_controller.468* %19, %struct.my_coef_controller.468** %5, align 8
  %20 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %5, align 8
  %21 = bitcast %struct.my_coef_controller.468* %20 to %struct.jpeg_d_coef_controller.455*
  %22 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %22, i32 0, i32 75
  store %struct.jpeg_d_coef_controller.455* %21, %struct.jpeg_d_coef_controller.455** %23, align 8
  %24 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %5, align 8
  %25 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %24, i32 0, i32 0
  %26 = getelementptr inbounds %struct.jpeg_d_coef_controller.455, %struct.jpeg_d_coef_controller.455* %25, i32 0, i32 0
  store void (%struct.jpeg_decompress_struct.445*)* @start_input_pass, void (%struct.jpeg_decompress_struct.445*)** %26, align 8
  %27 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %5, align 8
  %28 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %27, i32 0, i32 0
  %29 = getelementptr inbounds %struct.jpeg_d_coef_controller.455, %struct.jpeg_d_coef_controller.455* %28, i32 0, i32 2
  store void (%struct.jpeg_decompress_struct.445*)* @start_output_pass, void (%struct.jpeg_decompress_struct.445*)** %29, align 8
  %30 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %5, align 8
  %31 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %30, i32 0, i32 6
  store i32* null, i32** %31, align 8
  %32 = load i32, i32* %4, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %108

34:                                               ; preds = %2
  store i32 0, i32* %6, align 4
  %35 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %35, i32 0, i32 43
  %37 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %36, align 8
  store %struct.jpeg_component_info* %37, %struct.jpeg_component_info** %8, align 8
  br label %38

38:                                               ; preds = %90, %34
  %39 = load i32, i32* %6, align 4
  %40 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %40, i32 0, i32 8
  %42 = load i32, i32* %41, align 8
  %43 = icmp slt i32 %39, %42
  br i1 %43, label %44, label %95

44:                                               ; preds = %38
  %45 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  %46 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %45, i32 0, i32 3
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %7, align 4
  %48 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %49 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %48, i32 0, i32 44
  %50 = load i32, i32* %49, align 8
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %44
  %53 = load i32, i32* %7, align 4
  %54 = mul nsw i32 %53, 3
  store i32 %54, i32* %7, align 4
  br label %55

55:                                               ; preds = %52, %44
  %56 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %57 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %56, i32 0, i32 1
  %58 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %57, align 8
  %59 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %58, i32 0, i32 5
  %60 = load %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)** %59, align 8
  %61 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %62 = bitcast %struct.jpeg_decompress_struct.445* %61 to %struct.jpeg_common_struct*
  %63 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  %64 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %63, i32 0, i32 7
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  %68 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %67, i32 0, i32 2
  %69 = load i32, i32* %68, align 8
  %70 = sext i32 %69 to i64
  %71 = call i64 @jround_up(i64 %66, i64 %70)
  %72 = trunc i64 %71 to i32
  %73 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i32 0, i32 8
  %75 = load i32, i32* %74, align 8
  %76 = zext i32 %75 to i64
  %77 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  %78 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %77, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %80 = sext i32 %79 to i64
  %81 = call i64 @jround_up(i64 %76, i64 %80)
  %82 = trunc i64 %81 to i32
  %83 = load i32, i32* %7, align 4
  %84 = call %struct.jvirt_barray_control* %60(%struct.jpeg_common_struct* %62, i32 1, i32 1, i32 %72, i32 %82, i32 %83)
  %85 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %5, align 8
  %86 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %85, i32 0, i32 5
  %87 = load i32, i32* %6, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10 x %struct.jvirt_barray_control*]* %86, i64 0, i64 %88
  store %struct.jvirt_barray_control* %84, %struct.jvirt_barray_control** %89, align 8
  br label %90

90:                                               ; preds = %55
  %91 = load i32, i32* %6, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %6, align 4
  %93 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  %94 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %93, i32 1
  store %struct.jpeg_component_info* %94, %struct.jpeg_component_info** %8, align 8
  br label %38

95:                                               ; preds = %38
  %96 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %5, align 8
  %97 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %96, i32 0, i32 0
  %98 = getelementptr inbounds %struct.jpeg_d_coef_controller.455, %struct.jpeg_d_coef_controller.455* %97, i32 0, i32 1
  store i32 (%struct.jpeg_decompress_struct.445*)* @consume_data, i32 (%struct.jpeg_decompress_struct.445*)** %98, align 8
  %99 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %5, align 8
  %100 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %99, i32 0, i32 0
  %101 = getelementptr inbounds %struct.jpeg_d_coef_controller.455, %struct.jpeg_d_coef_controller.455* %100, i32 0, i32 3
  store i32 (%struct.jpeg_decompress_struct.445*, i8***)* @decompress_data, i32 (%struct.jpeg_decompress_struct.445*, i8***)** %101, align 8
  %102 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %5, align 8
  %103 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %102, i32 0, i32 5
  %104 = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10 x %struct.jvirt_barray_control*]* %103, i64 0, i64 0
  %105 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %5, align 8
  %106 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %105, i32 0, i32 0
  %107 = getelementptr inbounds %struct.jpeg_d_coef_controller.455, %struct.jpeg_d_coef_controller.455* %106, i32 0, i32 4
  store %struct.jvirt_barray_control** %104, %struct.jvirt_barray_control*** %107, align 8
  br label %144

108:                                              ; preds = %2
  %109 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %110 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %109, i32 0, i32 1
  %111 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %110, align 8
  %112 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %111, i32 0, i32 1
  %113 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %112, align 8
  %114 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %115 = bitcast %struct.jpeg_decompress_struct.445* %114 to %struct.jpeg_common_struct*
  %116 = call i8* %113(%struct.jpeg_common_struct* %115, i32 1, i64 1280)
  %117 = bitcast i8* %116 to [64 x i16]*
  store [64 x i16]* %117, [64 x i16]** %9, align 8
  store i32 0, i32* %10, align 4
  br label %118

118:                                              ; preds = %131, %108
  %119 = load i32, i32* %10, align 4
  %120 = icmp slt i32 %119, 10
  br i1 %120, label %121, label %134

121:                                              ; preds = %118
  %122 = load [64 x i16]*, [64 x i16]** %9, align 8
  %123 = load i32, i32* %10, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds [64 x i16], [64 x i16]* %122, i64 %124
  %126 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %5, align 8
  %127 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %126, i32 0, i32 4
  %128 = load i32, i32* %10, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %127, i64 0, i64 %129
  store [64 x i16]* %125, [64 x i16]** %130, align 8
  br label %131

131:                                              ; preds = %121
  %132 = load i32, i32* %10, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %10, align 4
  br label %118

134:                                              ; preds = %118
  %135 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %5, align 8
  %136 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %135, i32 0, i32 0
  %137 = getelementptr inbounds %struct.jpeg_d_coef_controller.455, %struct.jpeg_d_coef_controller.455* %136, i32 0, i32 1
  store i32 (%struct.jpeg_decompress_struct.445*)* @dummy_consume_data, i32 (%struct.jpeg_decompress_struct.445*)** %137, align 8
  %138 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %5, align 8
  %139 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %138, i32 0, i32 0
  %140 = getelementptr inbounds %struct.jpeg_d_coef_controller.455, %struct.jpeg_d_coef_controller.455* %139, i32 0, i32 3
  store i32 (%struct.jpeg_decompress_struct.445*, i8***)* @decompress_onepass, i32 (%struct.jpeg_decompress_struct.445*, i8***)** %140, align 8
  %141 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %5, align 8
  %142 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %141, i32 0, i32 0
  %143 = getelementptr inbounds %struct.jpeg_d_coef_controller.455, %struct.jpeg_d_coef_controller.455* %142, i32 0, i32 4
  store %struct.jvirt_barray_control** null, %struct.jvirt_barray_control*** %143, align 8
  br label %144

144:                                              ; preds = %134, %95
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_input_pass(%struct.jpeg_decompress_struct.445* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.445*, align 8
  store %struct.jpeg_decompress_struct.445* %0, %struct.jpeg_decompress_struct.445** %2, align 8
  %3 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %3, i32 0, i32 35
  store i32 0, i32* %4, align 8
  %5 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %2, align 8
  call void @start_iMCU_row.44(%struct.jpeg_decompress_struct.445* %5)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_output_pass(%struct.jpeg_decompress_struct.445* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.445*, align 8
  %3 = alloca %struct.my_coef_controller.468*, align 8
  store %struct.jpeg_decompress_struct.445* %0, %struct.jpeg_decompress_struct.445** %2, align 8
  %4 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %4, i32 0, i32 75
  %6 = load %struct.jpeg_d_coef_controller.455*, %struct.jpeg_d_coef_controller.455** %5, align 8
  %7 = bitcast %struct.jpeg_d_coef_controller.455* %6 to %struct.my_coef_controller.468*
  store %struct.my_coef_controller.468* %7, %struct.my_coef_controller.468** %3, align 8
  %8 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %3, align 8
  %9 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %8, i32 0, i32 0
  %10 = getelementptr inbounds %struct.jpeg_d_coef_controller.455, %struct.jpeg_d_coef_controller.455* %9, i32 0, i32 4
  %11 = load %struct.jvirt_barray_control**, %struct.jvirt_barray_control*** %10, align 8
  %12 = icmp ne %struct.jvirt_barray_control** %11, null
  br i1 %12, label %13, label %31

13:                                               ; preds = %1
  %14 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %2, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %14, i32 0, i32 18
  %16 = load i32, i32* %15, align 8
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %26

18:                                               ; preds = %13
  %19 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %2, align 8
  %20 = call i32 @smoothing_ok(%struct.jpeg_decompress_struct.445* %19)
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %18
  %23 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %3, align 8
  %24 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %23, i32 0, i32 0
  %25 = getelementptr inbounds %struct.jpeg_d_coef_controller.455, %struct.jpeg_d_coef_controller.455* %24, i32 0, i32 3
  store i32 (%struct.jpeg_decompress_struct.445*, i8***)* @decompress_smooth_data, i32 (%struct.jpeg_decompress_struct.445*, i8***)** %25, align 8
  br label %30

26:                                               ; preds = %18, %13
  %27 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %3, align 8
  %28 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %27, i32 0, i32 0
  %29 = getelementptr inbounds %struct.jpeg_d_coef_controller.455, %struct.jpeg_d_coef_controller.455* %28, i32 0, i32 3
  store i32 (%struct.jpeg_decompress_struct.445*, i8***)* @decompress_data, i32 (%struct.jpeg_decompress_struct.445*, i8***)** %29, align 8
  br label %30

30:                                               ; preds = %26, %22
  br label %31

31:                                               ; preds = %30, %1
  %32 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %2, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %32, i32 0, i32 37
  store i32 0, i32* %33, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @consume_data(%struct.jpeg_decompress_struct.445* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.445*, align 8
  %4 = alloca %struct.my_coef_controller.468*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [4 x [64 x i16]**], align 16
  %13 = alloca [64 x i16]*, align 8
  %14 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_decompress_struct.445* %0, %struct.jpeg_decompress_struct.445** %3, align 8
  %15 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %15, i32 0, i32 75
  %17 = load %struct.jpeg_d_coef_controller.455*, %struct.jpeg_d_coef_controller.455** %16, align 8
  %18 = bitcast %struct.jpeg_d_coef_controller.455* %17 to %struct.my_coef_controller.468*
  store %struct.my_coef_controller.468* %18, %struct.my_coef_controller.468** %4, align 8
  store i32 0, i32* %7, align 4
  br label %19

19:                                               ; preds = %61, %1
  %20 = load i32, i32* %7, align 4
  %21 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %21, i32 0, i32 62
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %20, %23
  br i1 %24, label %25, label %64

25:                                               ; preds = %19
  %26 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %26, i32 0, i32 63
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %27, i64 0, i64 %29
  %31 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %30, align 8
  store %struct.jpeg_component_info* %31, %struct.jpeg_component_info** %14, align 8
  %32 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %32, i32 0, i32 1
  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %33, align 8
  %35 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %34, i32 0, i32 8
  %36 = load [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)** %35, align 8
  %37 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %38 = bitcast %struct.jpeg_decompress_struct.445* %37 to %struct.jpeg_common_struct*
  %39 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %4, align 8
  %40 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %39, i32 0, i32 5
  %41 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %14, align 8
  %42 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10 x %struct.jvirt_barray_control*]* %40, i64 0, i64 %44
  %46 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %45, align 8
  %47 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %47, i32 0, i32 35
  %49 = load i32, i32* %48, align 8
  %50 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %14, align 8
  %51 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %50, i32 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = mul i32 %49, %52
  %54 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %14, align 8
  %55 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %54, i32 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = call [64 x i16]** %36(%struct.jpeg_common_struct* %38, %struct.jvirt_barray_control* %46, i32 %53, i32 %56, i32 1)
  %58 = load i32, i32* %7, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [4 x [64 x i16]**], [4 x [64 x i16]**]* %12, i64 0, i64 %59
  store [64 x i16]** %57, [64 x i16]*** %60, align 8
  br label %61

61:                                               ; preds = %25
  %62 = load i32, i32* %7, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %7, align 4
  br label %19

64:                                               ; preds = %19
  %65 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %4, align 8
  %66 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %65, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* %10, align 4
  br label %68

68:                                               ; preds = %175, %64
  %69 = load i32, i32* %10, align 4
  %70 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %4, align 8
  %71 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %70, i32 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = icmp slt i32 %69, %72
  br i1 %73, label %74, label %178

74:                                               ; preds = %68
  %75 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %4, align 8
  %76 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  store i32 %77, i32* %5, align 4
  br label %78

78:                                               ; preds = %169, %74
  %79 = load i32, i32* %5, align 4
  %80 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %81 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %80, i32 0, i32 64
  %82 = load i32, i32* %81, align 8
  %83 = icmp ult i32 %79, %82
  br i1 %83, label %84, label %172

84:                                               ; preds = %78
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  br label %85

85:                                               ; preds = %146, %84
  %86 = load i32, i32* %7, align 4
  %87 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %88 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %87, i32 0, i32 62
  %89 = load i32, i32* %88, align 8
  %90 = icmp slt i32 %86, %89
  br i1 %90, label %91, label %149

91:                                               ; preds = %85
  %92 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %93 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %92, i32 0, i32 63
  %94 = load i32, i32* %7, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %93, i64 0, i64 %95
  %97 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %96, align 8
  store %struct.jpeg_component_info* %97, %struct.jpeg_component_info** %14, align 8
  %98 = load i32, i32* %5, align 4
  %99 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %14, align 8
  %100 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %99, i32 0, i32 13
  %101 = load i32, i32* %100, align 4
  %102 = mul i32 %98, %101
  store i32 %102, i32* %11, align 4
  store i32 0, i32* %9, align 4
  br label %103

103:                                              ; preds = %142, %91
  %104 = load i32, i32* %9, align 4
  %105 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %14, align 8
  %106 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %105, i32 0, i32 14
  %107 = load i32, i32* %106, align 8
  %108 = icmp slt i32 %104, %107
  br i1 %108, label %109, label %145

109:                                              ; preds = %103
  %110 = load i32, i32* %7, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [4 x [64 x i16]**], [4 x [64 x i16]**]* %12, i64 0, i64 %111
  %113 = load [64 x i16]**, [64 x i16]*** %112, align 8
  %114 = load i32, i32* %9, align 4
  %115 = load i32, i32* %10, align 4
  %116 = add nsw i32 %114, %115
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [64 x i16]*, [64 x i16]** %113, i64 %117
  %119 = load [64 x i16]*, [64 x i16]** %118, align 8
  %120 = load i32, i32* %11, align 4
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds [64 x i16], [64 x i16]* %119, i64 %121
  store [64 x i16]* %122, [64 x i16]** %13, align 8
  store i32 0, i32* %8, align 4
  br label %123

123:                                              ; preds = %138, %109
  %124 = load i32, i32* %8, align 4
  %125 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %14, align 8
  %126 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %125, i32 0, i32 13
  %127 = load i32, i32* %126, align 4
  %128 = icmp slt i32 %124, %127
  br i1 %128, label %129, label %141

129:                                              ; preds = %123
  %130 = load [64 x i16]*, [64 x i16]** %13, align 8
  %131 = getelementptr inbounds [64 x i16], [64 x i16]* %130, i32 1
  store [64 x i16]* %131, [64 x i16]** %13, align 8
  %132 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %4, align 8
  %133 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %132, i32 0, i32 4
  %134 = load i32, i32* %6, align 4
  %135 = add nsw i32 %134, 1
  store i32 %135, i32* %6, align 4
  %136 = sext i32 %134 to i64
  %137 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %133, i64 0, i64 %136
  store [64 x i16]* %130, [64 x i16]** %137, align 8
  br label %138

138:                                              ; preds = %129
  %139 = load i32, i32* %8, align 4
  %140 = add nsw i32 %139, 1
  store i32 %140, i32* %8, align 4
  br label %123

141:                                              ; preds = %123
  br label %142

142:                                              ; preds = %141
  %143 = load i32, i32* %9, align 4
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %9, align 4
  br label %103

145:                                              ; preds = %103
  br label %146

146:                                              ; preds = %145
  %147 = load i32, i32* %7, align 4
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %7, align 4
  br label %85

149:                                              ; preds = %85
  %150 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %151 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %150, i32 0, i32 79
  %152 = load %struct.jpeg_entropy_decoder.459*, %struct.jpeg_entropy_decoder.459** %151, align 8
  %153 = getelementptr inbounds %struct.jpeg_entropy_decoder.459, %struct.jpeg_entropy_decoder.459* %152, i32 0, i32 1
  %154 = load i32 (%struct.jpeg_decompress_struct.445*, [64 x i16]**)*, i32 (%struct.jpeg_decompress_struct.445*, [64 x i16]**)** %153, align 8
  %155 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %156 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %4, align 8
  %157 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %156, i32 0, i32 4
  %158 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %157, i64 0, i64 0
  %159 = call i32 %154(%struct.jpeg_decompress_struct.445* %155, [64 x i16]** %158)
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %168, label %161

161:                                              ; preds = %149
  %162 = load i32, i32* %10, align 4
  %163 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %4, align 8
  %164 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %163, i32 0, i32 2
  store i32 %162, i32* %164, align 4
  %165 = load i32, i32* %5, align 4
  %166 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %4, align 8
  %167 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %166, i32 0, i32 1
  store i32 %165, i32* %167, align 8
  store i32 0, i32* %2, align 4
  br label %196

168:                                              ; preds = %149
  br label %169

169:                                              ; preds = %168
  %170 = load i32, i32* %5, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %5, align 4
  br label %78

172:                                              ; preds = %78
  %173 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %4, align 8
  %174 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %173, i32 0, i32 1
  store i32 0, i32* %174, align 8
  br label %175

175:                                              ; preds = %172
  %176 = load i32, i32* %10, align 4
  %177 = add nsw i32 %176, 1
  store i32 %177, i32* %10, align 4
  br label %68

178:                                              ; preds = %68
  %179 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %180 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %179, i32 0, i32 35
  %181 = load i32, i32* %180, align 8
  %182 = add i32 %181, 1
  store i32 %182, i32* %180, align 8
  %183 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %184 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %183, i32 0, i32 60
  %185 = load i32, i32* %184, align 8
  %186 = icmp ult i32 %182, %185
  br i1 %186, label %187, label %189

187:                                              ; preds = %178
  %188 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  call void @start_iMCU_row.44(%struct.jpeg_decompress_struct.445* %188)
  store i32 3, i32* %2, align 4
  br label %196

189:                                              ; preds = %178
  %190 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %191 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %190, i32 0, i32 77
  %192 = load %struct.jpeg_input_controller.457*, %struct.jpeg_input_controller.457** %191, align 8
  %193 = getelementptr inbounds %struct.jpeg_input_controller.457, %struct.jpeg_input_controller.457* %192, i32 0, i32 3
  %194 = load void (%struct.jpeg_decompress_struct.445*)*, void (%struct.jpeg_decompress_struct.445*)** %193, align 8
  %195 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  call void %194(%struct.jpeg_decompress_struct.445* %195)
  store i32 4, i32* %2, align 4
  br label %196

196:                                              ; preds = %189, %187, %161
  %197 = load i32, i32* %2, align 4
  ret i32 %197
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decompress_data(%struct.jpeg_decompress_struct.445* %0, i8*** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_decompress_struct.445*, align 8
  %5 = alloca i8***, align 8
  %6 = alloca %struct.my_coef_controller.468*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [64 x i16]**, align 8
  %13 = alloca [64 x i16]*, align 8
  %14 = alloca i8**, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.jpeg_component_info*, align 8
  %17 = alloca void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)*, align 8
  store %struct.jpeg_decompress_struct.445* %0, %struct.jpeg_decompress_struct.445** %4, align 8
  store i8*** %1, i8**** %5, align 8
  %18 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %18, i32 0, i32 75
  %20 = load %struct.jpeg_d_coef_controller.455*, %struct.jpeg_d_coef_controller.455** %19, align 8
  %21 = bitcast %struct.jpeg_d_coef_controller.455* %20 to %struct.my_coef_controller.468*
  store %struct.my_coef_controller.468* %21, %struct.my_coef_controller.468** %6, align 8
  %22 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %22, i32 0, i32 60
  %24 = load i32, i32* %23, align 8
  %25 = sub i32 %24, 1
  store i32 %25, i32* %7, align 4
  br label %26

26:                                               ; preds = %64, %2
  %27 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %27, i32 0, i32 34
  %29 = load i32, i32* %28, align 4
  %30 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %30, i32 0, i32 36
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %29, %32
  br i1 %33, label %52, label %34

34:                                               ; preds = %26
  %35 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %35, i32 0, i32 34
  %37 = load i32, i32* %36, align 4
  %38 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %39 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %38, i32 0, i32 36
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %37, %40
  br i1 %41, label %42, label %50

42:                                               ; preds = %34
  %43 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %43, i32 0, i32 35
  %45 = load i32, i32* %44, align 8
  %46 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %46, i32 0, i32 37
  %48 = load i32, i32* %47, align 8
  %49 = icmp ule i32 %45, %48
  br label %50

50:                                               ; preds = %42, %34
  %51 = phi i1 [ false, %34 ], [ %49, %42 ]
  br label %52

52:                                               ; preds = %50, %26
  %53 = phi i1 [ true, %26 ], [ %51, %50 ]
  br i1 %53, label %54, label %65

54:                                               ; preds = %52
  %55 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %56 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %55, i32 0, i32 77
  %57 = load %struct.jpeg_input_controller.457*, %struct.jpeg_input_controller.457** %56, align 8
  %58 = getelementptr inbounds %struct.jpeg_input_controller.457, %struct.jpeg_input_controller.457* %57, i32 0, i32 0
  %59 = load i32 (%struct.jpeg_decompress_struct.445*)*, i32 (%struct.jpeg_decompress_struct.445*)** %58, align 8
  %60 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %61 = call i32 %59(%struct.jpeg_decompress_struct.445* %60)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %54
  store i32 0, i32* %3, align 4
  br label %205

64:                                               ; preds = %54
  br label %26

65:                                               ; preds = %52
  store i32 0, i32* %9, align 4
  %66 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %67 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %66, i32 0, i32 43
  %68 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %67, align 8
  store %struct.jpeg_component_info* %68, %struct.jpeg_component_info** %16, align 8
  br label %69

69:                                               ; preds = %189, %65
  %70 = load i32, i32* %9, align 4
  %71 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %71, i32 0, i32 8
  %73 = load i32, i32* %72, align 8
  %74 = icmp slt i32 %70, %73
  br i1 %74, label %75, label %194

75:                                               ; preds = %69
  %76 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %77 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %76, i32 0, i32 12
  %78 = load i32, i32* %77, align 8
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %81, label %80

80:                                               ; preds = %75
  br label %189

81:                                               ; preds = %75
  %82 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %83 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %82, i32 0, i32 1
  %84 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %83, align 8
  %85 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %84, i32 0, i32 8
  %86 = load [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)** %85, align 8
  %87 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %88 = bitcast %struct.jpeg_decompress_struct.445* %87 to %struct.jpeg_common_struct*
  %89 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %6, align 8
  %90 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %89, i32 0, i32 5
  %91 = load i32, i32* %9, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10 x %struct.jvirt_barray_control*]* %90, i64 0, i64 %92
  %94 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %93, align 8
  %95 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %96 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %95, i32 0, i32 37
  %97 = load i32, i32* %96, align 8
  %98 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %99 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %98, i32 0, i32 3
  %100 = load i32, i32* %99, align 4
  %101 = mul i32 %97, %100
  %102 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %103 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %102, i32 0, i32 3
  %104 = load i32, i32* %103, align 4
  %105 = call [64 x i16]** %86(%struct.jpeg_common_struct* %88, %struct.jvirt_barray_control* %94, i32 %101, i32 %104, i32 0)
  store [64 x i16]** %105, [64 x i16]*** %12, align 8
  %106 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %107 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %106, i32 0, i32 37
  %108 = load i32, i32* %107, align 8
  %109 = load i32, i32* %7, align 4
  %110 = icmp ult i32 %108, %109
  br i1 %110, label %111, label %115

111:                                              ; preds = %81
  %112 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %113 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %112, i32 0, i32 3
  %114 = load i32, i32* %113, align 4
  store i32 %114, i32* %11, align 4
  br label %130

115:                                              ; preds = %81
  %116 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %117 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %116, i32 0, i32 8
  %118 = load i32, i32* %117, align 8
  %119 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %120 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %119, i32 0, i32 3
  %121 = load i32, i32* %120, align 4
  %122 = urem i32 %118, %121
  store i32 %122, i32* %11, align 4
  %123 = load i32, i32* %11, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %129

125:                                              ; preds = %115
  %126 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %127 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %126, i32 0, i32 3
  %128 = load i32, i32* %127, align 4
  store i32 %128, i32* %11, align 4
  br label %129

129:                                              ; preds = %125, %115
  br label %130

130:                                              ; preds = %129, %111
  %131 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %132 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %131, i32 0, i32 80
  %133 = load %struct.jpeg_inverse_dct.460*, %struct.jpeg_inverse_dct.460** %132, align 8
  %134 = getelementptr inbounds %struct.jpeg_inverse_dct.460, %struct.jpeg_inverse_dct.460* %133, i32 0, i32 1
  %135 = load i32, i32* %9, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds [10 x void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)*], [10 x void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)*]* %134, i64 0, i64 %136
  %138 = load void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)*, void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)** %137, align 8
  store void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)* %138, void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)** %17, align 8
  %139 = load i8***, i8**** %5, align 8
  %140 = load i32, i32* %9, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i8**, i8*** %139, i64 %141
  %143 = load i8**, i8*** %142, align 8
  store i8** %143, i8*** %14, align 8
  store i32 0, i32* %10, align 4
  br label %144

144:                                              ; preds = %185, %130
  %145 = load i32, i32* %10, align 4
  %146 = load i32, i32* %11, align 4
  %147 = icmp slt i32 %145, %146
  br i1 %147, label %148, label %188

148:                                              ; preds = %144
  %149 = load [64 x i16]**, [64 x i16]*** %12, align 8
  %150 = load i32, i32* %10, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [64 x i16]*, [64 x i16]** %149, i64 %151
  %153 = load [64 x i16]*, [64 x i16]** %152, align 8
  store [64 x i16]* %153, [64 x i16]** %13, align 8
  store i32 0, i32* %15, align 4
  store i32 0, i32* %8, align 4
  br label %154

154:                                              ; preds = %175, %148
  %155 = load i32, i32* %8, align 4
  %156 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %157 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %156, i32 0, i32 7
  %158 = load i32, i32* %157, align 4
  %159 = icmp ult i32 %155, %158
  br i1 %159, label %160, label %178

160:                                              ; preds = %154
  %161 = load void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)*, void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)** %17, align 8
  %162 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %163 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %164 = load [64 x i16]*, [64 x i16]** %13, align 8
  %165 = bitcast [64 x i16]* %164 to i16*
  %166 = load i8**, i8*** %14, align 8
  %167 = load i32, i32* %15, align 4
  call void %161(%struct.jpeg_decompress_struct.445* %162, %struct.jpeg_component_info* %163, i16* %165, i8** %166, i32 %167)
  %168 = load [64 x i16]*, [64 x i16]** %13, align 8
  %169 = getelementptr inbounds [64 x i16], [64 x i16]* %168, i32 1
  store [64 x i16]* %169, [64 x i16]** %13, align 8
  %170 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %171 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %170, i32 0, i32 9
  %172 = load i32, i32* %171, align 4
  %173 = load i32, i32* %15, align 4
  %174 = add i32 %173, %172
  store i32 %174, i32* %15, align 4
  br label %175

175:                                              ; preds = %160
  %176 = load i32, i32* %8, align 4
  %177 = add i32 %176, 1
  store i32 %177, i32* %8, align 4
  br label %154

178:                                              ; preds = %154
  %179 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %180 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %179, i32 0, i32 9
  %181 = load i32, i32* %180, align 4
  %182 = load i8**, i8*** %14, align 8
  %183 = sext i32 %181 to i64
  %184 = getelementptr inbounds i8*, i8** %182, i64 %183
  store i8** %184, i8*** %14, align 8
  br label %185

185:                                              ; preds = %178
  %186 = load i32, i32* %10, align 4
  %187 = add nsw i32 %186, 1
  store i32 %187, i32* %10, align 4
  br label %144

188:                                              ; preds = %144
  br label %189

189:                                              ; preds = %188, %80
  %190 = load i32, i32* %9, align 4
  %191 = add nsw i32 %190, 1
  store i32 %191, i32* %9, align 4
  %192 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %193 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %192, i32 1
  store %struct.jpeg_component_info* %193, %struct.jpeg_component_info** %16, align 8
  br label %69

194:                                              ; preds = %69
  %195 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %196 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %195, i32 0, i32 37
  %197 = load i32, i32* %196, align 8
  %198 = add i32 %197, 1
  store i32 %198, i32* %196, align 8
  %199 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %200 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %199, i32 0, i32 60
  %201 = load i32, i32* %200, align 8
  %202 = icmp ult i32 %198, %201
  br i1 %202, label %203, label %204

203:                                              ; preds = %194
  store i32 3, i32* %3, align 4
  br label %205

204:                                              ; preds = %194
  store i32 4, i32* %3, align 4
  br label %205

205:                                              ; preds = %204, %203, %63
  %206 = load i32, i32* %3, align 4
  ret i32 %206
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dummy_consume_data(%struct.jpeg_decompress_struct.445* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.445*, align 8
  store %struct.jpeg_decompress_struct.445* %0, %struct.jpeg_decompress_struct.445** %2, align 8
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decompress_onepass(%struct.jpeg_decompress_struct.445* %0, i8*** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_decompress_struct.445*, align 8
  %5 = alloca i8***, align 8
  %6 = alloca %struct.my_coef_controller.468*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8**, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %struct.jpeg_component_info*, align 8
  %20 = alloca void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)*, align 8
  store %struct.jpeg_decompress_struct.445* %0, %struct.jpeg_decompress_struct.445** %4, align 8
  store i8*** %1, i8**** %5, align 8
  %21 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %21, i32 0, i32 75
  %23 = load %struct.jpeg_d_coef_controller.455*, %struct.jpeg_d_coef_controller.455** %22, align 8
  %24 = bitcast %struct.jpeg_d_coef_controller.455* %23 to %struct.my_coef_controller.468*
  store %struct.my_coef_controller.468* %24, %struct.my_coef_controller.468** %6, align 8
  %25 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %25, i32 0, i32 64
  %27 = load i32, i32* %26, align 8
  %28 = sub i32 %27, 1
  store i32 %28, i32* %8, align 4
  %29 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %29, i32 0, i32 60
  %31 = load i32, i32* %30, align 8
  %32 = sub i32 %31, 1
  store i32 %32, i32* %9, align 4
  %33 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %6, align 8
  %34 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %33, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %14, align 4
  br label %36

36:                                               ; preds = %220, %2
  %37 = load i32, i32* %14, align 4
  %38 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %6, align 8
  %39 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %38, i32 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = icmp slt i32 %37, %40
  br i1 %41, label %42, label %223

42:                                               ; preds = %36
  %43 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %6, align 8
  %44 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  store i32 %45, i32* %7, align 4
  br label %46

46:                                               ; preds = %214, %42
  %47 = load i32, i32* %7, align 4
  %48 = load i32, i32* %8, align 4
  %49 = icmp ule i32 %47, %48
  br i1 %49, label %50, label %217

50:                                               ; preds = %46
  %51 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %6, align 8
  %52 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %51, i32 0, i32 4
  %53 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %52, i64 0, i64 0
  %54 = load [64 x i16]*, [64 x i16]** %53, align 8
  %55 = bitcast [64 x i16]* %54 to i8*
  %56 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %57 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %56, i32 0, i32 66
  %58 = load i32, i32* %57, align 8
  %59 = sext i32 %58 to i64
  %60 = mul i64 %59, 128
  call void @jzero_far(i8* %55, i64 %60)
  %61 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %62 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %61, i32 0, i32 79
  %63 = load %struct.jpeg_entropy_decoder.459*, %struct.jpeg_entropy_decoder.459** %62, align 8
  %64 = getelementptr inbounds %struct.jpeg_entropy_decoder.459, %struct.jpeg_entropy_decoder.459* %63, i32 0, i32 1
  %65 = load i32 (%struct.jpeg_decompress_struct.445*, [64 x i16]**)*, i32 (%struct.jpeg_decompress_struct.445*, [64 x i16]**)** %64, align 8
  %66 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %67 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %6, align 8
  %68 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %67, i32 0, i32 4
  %69 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %68, i64 0, i64 0
  %70 = call i32 %65(%struct.jpeg_decompress_struct.445* %66, [64 x i16]** %69)
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %79, label %72

72:                                               ; preds = %50
  %73 = load i32, i32* %14, align 4
  %74 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %6, align 8
  %75 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %74, i32 0, i32 2
  store i32 %73, i32* %75, align 4
  %76 = load i32, i32* %7, align 4
  %77 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %6, align 8
  %78 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %77, i32 0, i32 1
  store i32 %76, i32* %78, align 8
  store i32 0, i32* %3, align 4
  br label %245

79:                                               ; preds = %50
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  br label %80

80:                                               ; preds = %210, %79
  %81 = load i32, i32* %11, align 4
  %82 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %83 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %82, i32 0, i32 62
  %84 = load i32, i32* %83, align 8
  %85 = icmp slt i32 %81, %84
  br i1 %85, label %86, label %213

86:                                               ; preds = %80
  %87 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %88 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %87, i32 0, i32 63
  %89 = load i32, i32* %11, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %88, i64 0, i64 %90
  %92 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %91, align 8
  store %struct.jpeg_component_info* %92, %struct.jpeg_component_info** %19, align 8
  %93 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %94 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %93, i32 0, i32 12
  %95 = load i32, i32* %94, align 8
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %86
  %98 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %99 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %98, i32 0, i32 15
  %100 = load i32, i32* %99, align 4
  %101 = load i32, i32* %10, align 4
  %102 = add nsw i32 %101, %100
  store i32 %102, i32* %10, align 4
  br label %210

103:                                              ; preds = %86
  %104 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %105 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %104, i32 0, i32 80
  %106 = load %struct.jpeg_inverse_dct.460*, %struct.jpeg_inverse_dct.460** %105, align 8
  %107 = getelementptr inbounds %struct.jpeg_inverse_dct.460, %struct.jpeg_inverse_dct.460* %106, i32 0, i32 1
  %108 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %109 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %108, i32 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [10 x void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)*], [10 x void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)*]* %107, i64 0, i64 %111
  %113 = load void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)*, void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)** %112, align 8
  store void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)* %113, void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)** %20, align 8
  %114 = load i32, i32* %7, align 4
  %115 = load i32, i32* %8, align 4
  %116 = icmp ult i32 %114, %115
  br i1 %116, label %117, label %121

117:                                              ; preds = %103
  %118 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %119 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %118, i32 0, i32 13
  %120 = load i32, i32* %119, align 4
  br label %125

121:                                              ; preds = %103
  %122 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %123 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %122, i32 0, i32 17
  %124 = load i32, i32* %123, align 4
  br label %125

125:                                              ; preds = %121, %117
  %126 = phi i32 [ %120, %117 ], [ %124, %121 ]
  store i32 %126, i32* %15, align 4
  %127 = load i8***, i8**** %5, align 8
  %128 = load i32, i32* %11, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8**, i8*** %127, i64 %129
  %131 = load i8**, i8*** %130, align 8
  %132 = load i32, i32* %14, align 4
  %133 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %134 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %133, i32 0, i32 9
  %135 = load i32, i32* %134, align 4
  %136 = mul nsw i32 %132, %135
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i8*, i8** %131, i64 %137
  store i8** %138, i8*** %16, align 8
  %139 = load i32, i32* %7, align 4
  %140 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %141 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %140, i32 0, i32 16
  %142 = load i32, i32* %141, align 8
  %143 = mul i32 %139, %142
  store i32 %143, i32* %17, align 4
  store i32 0, i32* %13, align 4
  br label %144

144:                                              ; preds = %206, %125
  %145 = load i32, i32* %13, align 4
  %146 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %147 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %146, i32 0, i32 14
  %148 = load i32, i32* %147, align 8
  %149 = icmp slt i32 %145, %148
  br i1 %149, label %150, label %209

150:                                              ; preds = %144
  %151 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %152 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %151, i32 0, i32 35
  %153 = load i32, i32* %152, align 8
  %154 = load i32, i32* %9, align 4
  %155 = icmp ult i32 %153, %154
  br i1 %155, label %164, label %156

156:                                              ; preds = %150
  %157 = load i32, i32* %14, align 4
  %158 = load i32, i32* %13, align 4
  %159 = add nsw i32 %157, %158
  %160 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %161 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %160, i32 0, i32 18
  %162 = load i32, i32* %161, align 8
  %163 = icmp slt i32 %159, %162
  br i1 %163, label %164, label %194

164:                                              ; preds = %156, %150
  %165 = load i32, i32* %17, align 4
  store i32 %165, i32* %18, align 4
  store i32 0, i32* %12, align 4
  br label %166

166:                                              ; preds = %190, %164
  %167 = load i32, i32* %12, align 4
  %168 = load i32, i32* %15, align 4
  %169 = icmp slt i32 %167, %168
  br i1 %169, label %170, label %193

170:                                              ; preds = %166
  %171 = load void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)*, void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)** %20, align 8
  %172 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %173 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %174 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %6, align 8
  %175 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %174, i32 0, i32 4
  %176 = load i32, i32* %10, align 4
  %177 = load i32, i32* %12, align 4
  %178 = add nsw i32 %176, %177
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds [10 x [64 x i16]*], [10 x [64 x i16]*]* %175, i64 0, i64 %179
  %181 = load [64 x i16]*, [64 x i16]** %180, align 8
  %182 = bitcast [64 x i16]* %181 to i16*
  %183 = load i8**, i8*** %16, align 8
  %184 = load i32, i32* %18, align 4
  call void %171(%struct.jpeg_decompress_struct.445* %172, %struct.jpeg_component_info* %173, i16* %182, i8** %183, i32 %184)
  %185 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %186 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %185, i32 0, i32 9
  %187 = load i32, i32* %186, align 4
  %188 = load i32, i32* %18, align 4
  %189 = add i32 %188, %187
  store i32 %189, i32* %18, align 4
  br label %190

190:                                              ; preds = %170
  %191 = load i32, i32* %12, align 4
  %192 = add nsw i32 %191, 1
  store i32 %192, i32* %12, align 4
  br label %166

193:                                              ; preds = %166
  br label %194

194:                                              ; preds = %193, %156
  %195 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %196 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %195, i32 0, i32 13
  %197 = load i32, i32* %196, align 4
  %198 = load i32, i32* %10, align 4
  %199 = add nsw i32 %198, %197
  store i32 %199, i32* %10, align 4
  %200 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %201 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %200, i32 0, i32 9
  %202 = load i32, i32* %201, align 4
  %203 = load i8**, i8*** %16, align 8
  %204 = sext i32 %202 to i64
  %205 = getelementptr inbounds i8*, i8** %203, i64 %204
  store i8** %205, i8*** %16, align 8
  br label %206

206:                                              ; preds = %194
  %207 = load i32, i32* %13, align 4
  %208 = add nsw i32 %207, 1
  store i32 %208, i32* %13, align 4
  br label %144

209:                                              ; preds = %144
  br label %210

210:                                              ; preds = %209, %97
  %211 = load i32, i32* %11, align 4
  %212 = add nsw i32 %211, 1
  store i32 %212, i32* %11, align 4
  br label %80

213:                                              ; preds = %80
  br label %214

214:                                              ; preds = %213
  %215 = load i32, i32* %7, align 4
  %216 = add i32 %215, 1
  store i32 %216, i32* %7, align 4
  br label %46

217:                                              ; preds = %46
  %218 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %6, align 8
  %219 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %218, i32 0, i32 1
  store i32 0, i32* %219, align 8
  br label %220

220:                                              ; preds = %217
  %221 = load i32, i32* %14, align 4
  %222 = add nsw i32 %221, 1
  store i32 %222, i32* %14, align 4
  br label %36

223:                                              ; preds = %36
  %224 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %225 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %224, i32 0, i32 37
  %226 = load i32, i32* %225, align 8
  %227 = add i32 %226, 1
  store i32 %227, i32* %225, align 8
  %228 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %229 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %228, i32 0, i32 35
  %230 = load i32, i32* %229, align 8
  %231 = add i32 %230, 1
  store i32 %231, i32* %229, align 8
  %232 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %233 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %232, i32 0, i32 60
  %234 = load i32, i32* %233, align 8
  %235 = icmp ult i32 %231, %234
  br i1 %235, label %236, label %238

236:                                              ; preds = %223
  %237 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  call void @start_iMCU_row.44(%struct.jpeg_decompress_struct.445* %237)
  store i32 3, i32* %3, align 4
  br label %245

238:                                              ; preds = %223
  %239 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %240 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %239, i32 0, i32 77
  %241 = load %struct.jpeg_input_controller.457*, %struct.jpeg_input_controller.457** %240, align 8
  %242 = getelementptr inbounds %struct.jpeg_input_controller.457, %struct.jpeg_input_controller.457* %241, i32 0, i32 3
  %243 = load void (%struct.jpeg_decompress_struct.445*)*, void (%struct.jpeg_decompress_struct.445*)** %242, align 8
  %244 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  call void %243(%struct.jpeg_decompress_struct.445* %244)
  store i32 4, i32* %3, align 4
  br label %245

245:                                              ; preds = %238, %236, %72
  %246 = load i32, i32* %3, align 4
  ret i32 %246
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_iMCU_row.44(%struct.jpeg_decompress_struct.445* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.445*, align 8
  %3 = alloca %struct.my_coef_controller.468*, align 8
  store %struct.jpeg_decompress_struct.445* %0, %struct.jpeg_decompress_struct.445** %2, align 8
  %4 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %4, i32 0, i32 75
  %6 = load %struct.jpeg_d_coef_controller.455*, %struct.jpeg_d_coef_controller.455** %5, align 8
  %7 = bitcast %struct.jpeg_d_coef_controller.455* %6 to %struct.my_coef_controller.468*
  store %struct.my_coef_controller.468* %7, %struct.my_coef_controller.468** %3, align 8
  %8 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %8, i32 0, i32 62
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %3, align 8
  %14 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %13, i32 0, i32 3
  store i32 1, i32* %14, align 8
  br label %43

15:                                               ; preds = %1
  %16 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %2, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %16, i32 0, i32 35
  %18 = load i32, i32* %17, align 8
  %19 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %19, i32 0, i32 60
  %21 = load i32, i32* %20, align 8
  %22 = sub i32 %21, 1
  %23 = icmp ult i32 %18, %22
  br i1 %23, label %24, label %33

24:                                               ; preds = %15
  %25 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %2, align 8
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %25, i32 0, i32 63
  %27 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %26, i64 0, i64 0
  %28 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i32 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %3, align 8
  %32 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %31, i32 0, i32 3
  store i32 %30, i32* %32, align 8
  br label %42

33:                                               ; preds = %15
  %34 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %34, i32 0, i32 63
  %36 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %35, i64 0, i64 0
  %37 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %37, i32 0, i32 18
  %39 = load i32, i32* %38, align 8
  %40 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %3, align 8
  %41 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %40, i32 0, i32 3
  store i32 %39, i32* %41, align 8
  br label %42

42:                                               ; preds = %33, %24
  br label %43

43:                                               ; preds = %42, %12
  %44 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %3, align 8
  %45 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %44, i32 0, i32 1
  store i32 0, i32* %45, align 8
  %46 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %3, align 8
  %47 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %46, i32 0, i32 2
  store i32 0, i32* %47, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @smoothing_ok(%struct.jpeg_decompress_struct.445* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.445*, align 8
  %4 = alloca %struct.my_coef_controller.468*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.jpeg_component_info*, align 8
  %9 = alloca %struct.JQUANT_TBL*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  store %struct.jpeg_decompress_struct.445* %0, %struct.jpeg_decompress_struct.445** %3, align 8
  %12 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %12, i32 0, i32 75
  %14 = load %struct.jpeg_d_coef_controller.455*, %struct.jpeg_d_coef_controller.455** %13, align 8
  %15 = bitcast %struct.jpeg_d_coef_controller.455* %14 to %struct.my_coef_controller.468*
  store %struct.my_coef_controller.468* %15, %struct.my_coef_controller.468** %4, align 8
  store i32 0, i32* %5, align 4
  %16 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %16, i32 0, i32 44
  %18 = load i32, i32* %17, align 8
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %1
  %21 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %21, i32 0, i32 38
  %23 = load [64 x i32]*, [64 x i32]** %22, align 8
  %24 = icmp eq [64 x i32]* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %20, %1
  store i32 0, i32* %2, align 4
  br label %158

26:                                               ; preds = %20
  %27 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %4, align 8
  %28 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %27, i32 0, i32 6
  %29 = load i32*, i32** %28, align 8
  %30 = icmp eq i32* %29, null
  br i1 %30, label %31, label %48

31:                                               ; preds = %26
  %32 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %32, i32 0, i32 1
  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %33, align 8
  %35 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %34, i32 0, i32 0
  %36 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %35, align 8
  %37 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %38 = bitcast %struct.jpeg_decompress_struct.445* %37 to %struct.jpeg_common_struct*
  %39 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %39, i32 0, i32 8
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = mul i64 %42, 24
  %44 = call i8* %36(%struct.jpeg_common_struct* %38, i32 1, i64 %43)
  %45 = bitcast i8* %44 to i32*
  %46 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %4, align 8
  %47 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %46, i32 0, i32 6
  store i32* %45, i32** %47, align 8
  br label %48

48:                                               ; preds = %31, %26
  %49 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %4, align 8
  %50 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %49, i32 0, i32 6
  %51 = load i32*, i32** %50, align 8
  store i32* %51, i32** %11, align 8
  store i32 0, i32* %6, align 4
  %52 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %52, i32 0, i32 43
  %54 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %53, align 8
  store %struct.jpeg_component_info* %54, %struct.jpeg_component_info** %8, align 8
  br label %55

55:                                               ; preds = %151, %48
  %56 = load i32, i32* %6, align 4
  %57 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %58 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %57, i32 0, i32 8
  %59 = load i32, i32* %58, align 8
  %60 = icmp slt i32 %56, %59
  br i1 %60, label %61, label %156

61:                                               ; preds = %55
  %62 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  %63 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i32 0, i32 19
  %64 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %63, align 8
  store %struct.JQUANT_TBL* %64, %struct.JQUANT_TBL** %9, align 8
  %65 = icmp eq %struct.JQUANT_TBL* %64, null
  br i1 %65, label %66, label %67

66:                                               ; preds = %61
  store i32 0, i32* %2, align 4
  br label %158

67:                                               ; preds = %61
  %68 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %69 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %68, i32 0, i32 0
  %70 = getelementptr inbounds [64 x i16], [64 x i16]* %69, i64 0, i64 0
  %71 = load i16, i16* %70, align 4
  %72 = zext i16 %71 to i32
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %109, label %74

74:                                               ; preds = %67
  %75 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %76 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %75, i32 0, i32 0
  %77 = getelementptr inbounds [64 x i16], [64 x i16]* %76, i64 0, i64 1
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %109, label %81

81:                                               ; preds = %74
  %82 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %83 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %82, i32 0, i32 0
  %84 = getelementptr inbounds [64 x i16], [64 x i16]* %83, i64 0, i64 8
  %85 = load i16, i16* %84, align 4
  %86 = zext i16 %85 to i32
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %109, label %88

88:                                               ; preds = %81
  %89 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %90 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %89, i32 0, i32 0
  %91 = getelementptr inbounds [64 x i16], [64 x i16]* %90, i64 0, i64 16
  %92 = load i16, i16* %91, align 4
  %93 = zext i16 %92 to i32
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %109, label %95

95:                                               ; preds = %88
  %96 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %97 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %96, i32 0, i32 0
  %98 = getelementptr inbounds [64 x i16], [64 x i16]* %97, i64 0, i64 9
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %99 to i32
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %109, label %102

102:                                              ; preds = %95
  %103 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %104 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %103, i32 0, i32 0
  %105 = getelementptr inbounds [64 x i16], [64 x i16]* %104, i64 0, i64 2
  %106 = load i16, i16* %105, align 4
  %107 = zext i16 %106 to i32
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %102, %95, %88, %81, %74, %67
  store i32 0, i32* %2, align 4
  br label %158

110:                                              ; preds = %102
  %111 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %3, align 8
  %112 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %111, i32 0, i32 38
  %113 = load [64 x i32]*, [64 x i32]** %112, align 8
  %114 = load i32, i32* %6, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [64 x i32], [64 x i32]* %113, i64 %115
  %117 = getelementptr inbounds [64 x i32], [64 x i32]* %116, i64 0, i64 0
  store i32* %117, i32** %10, align 8
  %118 = load i32*, i32** %10, align 8
  %119 = getelementptr inbounds i32, i32* %118, i64 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp slt i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %110
  store i32 0, i32* %2, align 4
  br label %158

123:                                              ; preds = %110
  store i32 1, i32* %7, align 4
  br label %124

124:                                              ; preds = %145, %123
  %125 = load i32, i32* %7, align 4
  %126 = icmp sle i32 %125, 5
  br i1 %126, label %127, label %148

127:                                              ; preds = %124
  %128 = load i32*, i32** %10, align 8
  %129 = load i32, i32* %7, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i32, i32* %128, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = load i32*, i32** %11, align 8
  %134 = load i32, i32* %7, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i32, i32* %133, i64 %135
  store i32 %132, i32* %136, align 4
  %137 = load i32*, i32** %10, align 8
  %138 = load i32, i32* %7, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i32, i32* %137, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %127
  store i32 1, i32* %5, align 4
  br label %144

144:                                              ; preds = %143, %127
  br label %145

145:                                              ; preds = %144
  %146 = load i32, i32* %7, align 4
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* %7, align 4
  br label %124

148:                                              ; preds = %124
  %149 = load i32*, i32** %11, align 8
  %150 = getelementptr inbounds i32, i32* %149, i64 6
  store i32* %150, i32** %11, align 8
  br label %151

151:                                              ; preds = %148
  %152 = load i32, i32* %6, align 4
  %153 = add nsw i32 %152, 1
  store i32 %153, i32* %6, align 4
  %154 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  %155 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %154, i32 1
  store %struct.jpeg_component_info* %155, %struct.jpeg_component_info** %8, align 8
  br label %55

156:                                              ; preds = %55
  %157 = load i32, i32* %5, align 4
  store i32 %157, i32* %2, align 4
  br label %158

158:                                              ; preds = %156, %122, %109, %66, %25
  %159 = load i32, i32* %2, align 4
  ret i32 %159
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decompress_smooth_data(%struct.jpeg_decompress_struct.445* %0, i8*** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_decompress_struct.445*, align 8
  %5 = alloca i8***, align 8
  %6 = alloca %struct.my_coef_controller.468*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca [64 x i16]**, align 8
  %15 = alloca [64 x i16]*, align 8
  %16 = alloca [64 x i16]*, align 8
  %17 = alloca [64 x i16]*, align 8
  %18 = alloca i8**, align 8
  %19 = alloca i32, align 4
  %20 = alloca %struct.jpeg_component_info*, align 8
  %21 = alloca void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca [64 x i16], align 16
  %25 = alloca i32*, align 8
  %26 = alloca %struct.JQUANT_TBL*, align 8
  %27 = alloca i64, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.445* %0, %struct.jpeg_decompress_struct.445** %4, align 8
  store i8*** %1, i8**** %5, align 8
  %46 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %46, i32 0, i32 75
  %48 = load %struct.jpeg_d_coef_controller.455*, %struct.jpeg_d_coef_controller.455** %47, align 8
  %49 = bitcast %struct.jpeg_d_coef_controller.455* %48 to %struct.my_coef_controller.468*
  store %struct.my_coef_controller.468* %49, %struct.my_coef_controller.468** %6, align 8
  %50 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %51 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %50, i32 0, i32 60
  %52 = load i32, i32* %51, align 8
  %53 = sub i32 %52, 1
  store i32 %53, i32* %7, align 4
  br label %54

54:                                               ; preds = %108, %2
  %55 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %56 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %55, i32 0, i32 34
  %57 = load i32, i32* %56, align 4
  %58 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %59 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %58, i32 0, i32 36
  %60 = load i32, i32* %59, align 4
  %61 = icmp sle i32 %57, %60
  br i1 %61, label %62, label %70

62:                                               ; preds = %54
  %63 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %64 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %63, i32 0, i32 77
  %65 = load %struct.jpeg_input_controller.457*, %struct.jpeg_input_controller.457** %64, align 8
  %66 = getelementptr inbounds %struct.jpeg_input_controller.457, %struct.jpeg_input_controller.457* %65, i32 0, i32 5
  %67 = load i32, i32* %66, align 4
  %68 = icmp ne i32 %67, 0
  %69 = xor i1 %68, true
  br label %70

70:                                               ; preds = %62, %54
  %71 = phi i1 [ false, %54 ], [ %69, %62 ]
  br i1 %71, label %72, label %109

72:                                               ; preds = %70
  %73 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %74 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %73, i32 0, i32 34
  %75 = load i32, i32* %74, align 4
  %76 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %77 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %76, i32 0, i32 36
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %75, %78
  br i1 %79, label %80, label %98

80:                                               ; preds = %72
  %81 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %82 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %81, i32 0, i32 68
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  %85 = zext i1 %84 to i64
  %86 = select i1 %84, i32 1, i32 0
  store i32 %86, i32* %45, align 4
  %87 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %88 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %87, i32 0, i32 35
  %89 = load i32, i32* %88, align 8
  %90 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %91 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %90, i32 0, i32 37
  %92 = load i32, i32* %91, align 8
  %93 = load i32, i32* %45, align 4
  %94 = add i32 %92, %93
  %95 = icmp ugt i32 %89, %94
  br i1 %95, label %96, label %97

96:                                               ; preds = %80
  br label %109

97:                                               ; preds = %80
  br label %98

98:                                               ; preds = %97, %72
  %99 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %100 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %99, i32 0, i32 77
  %101 = load %struct.jpeg_input_controller.457*, %struct.jpeg_input_controller.457** %100, align 8
  %102 = getelementptr inbounds %struct.jpeg_input_controller.457, %struct.jpeg_input_controller.457* %101, i32 0, i32 0
  %103 = load i32 (%struct.jpeg_decompress_struct.445*)*, i32 (%struct.jpeg_decompress_struct.445*)** %102, align 8
  %104 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %105 = call i32 %103(%struct.jpeg_decompress_struct.445* %104)
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %98
  store i32 0, i32* %3, align 4
  br label %755

108:                                              ; preds = %98
  br label %54

109:                                              ; preds = %96, %70
  store i32 0, i32* %10, align 4
  %110 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %111 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %110, i32 0, i32 43
  %112 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %111, align 8
  store %struct.jpeg_component_info* %112, %struct.jpeg_component_info** %20, align 8
  br label %113

113:                                              ; preds = %739, %109
  %114 = load i32, i32* %10, align 4
  %115 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %116 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %115, i32 0, i32 8
  %117 = load i32, i32* %116, align 8
  %118 = icmp slt i32 %114, %117
  br i1 %118, label %119, label %744

119:                                              ; preds = %113
  %120 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %121 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %120, i32 0, i32 12
  %122 = load i32, i32* %121, align 8
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %125, label %124

124:                                              ; preds = %119
  br label %739

125:                                              ; preds = %119
  %126 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %127 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %126, i32 0, i32 37
  %128 = load i32, i32* %127, align 8
  %129 = load i32, i32* %7, align 4
  %130 = icmp ult i32 %128, %129
  br i1 %130, label %131, label %137

131:                                              ; preds = %125
  %132 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %133 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %132, i32 0, i32 3
  %134 = load i32, i32* %133, align 4
  store i32 %134, i32* %12, align 4
  %135 = load i32, i32* %12, align 4
  %136 = mul nsw i32 %135, 2
  store i32 %136, i32* %13, align 4
  store i32 0, i32* %23, align 4
  br label %153

137:                                              ; preds = %125
  %138 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %139 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %138, i32 0, i32 8
  %140 = load i32, i32* %139, align 8
  %141 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %142 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %141, i32 0, i32 3
  %143 = load i32, i32* %142, align 4
  %144 = urem i32 %140, %143
  store i32 %144, i32* %12, align 4
  %145 = load i32, i32* %12, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %151

147:                                              ; preds = %137
  %148 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %149 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %148, i32 0, i32 3
  %150 = load i32, i32* %149, align 4
  store i32 %150, i32* %12, align 4
  br label %151

151:                                              ; preds = %147, %137
  %152 = load i32, i32* %12, align 4
  store i32 %152, i32* %13, align 4
  store i32 1, i32* %23, align 4
  br label %153

153:                                              ; preds = %151, %131
  %154 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %155 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %154, i32 0, i32 37
  %156 = load i32, i32* %155, align 8
  %157 = icmp ugt i32 %156, 0
  br i1 %157, label %158, label %193

158:                                              ; preds = %153
  %159 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %160 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %159, i32 0, i32 3
  %161 = load i32, i32* %160, align 4
  %162 = load i32, i32* %13, align 4
  %163 = add nsw i32 %162, %161
  store i32 %163, i32* %13, align 4
  %164 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %165 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %164, i32 0, i32 1
  %166 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %165, align 8
  %167 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %166, i32 0, i32 8
  %168 = load [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)** %167, align 8
  %169 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %170 = bitcast %struct.jpeg_decompress_struct.445* %169 to %struct.jpeg_common_struct*
  %171 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %6, align 8
  %172 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %171, i32 0, i32 5
  %173 = load i32, i32* %10, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10 x %struct.jvirt_barray_control*]* %172, i64 0, i64 %174
  %176 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %175, align 8
  %177 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %178 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %177, i32 0, i32 37
  %179 = load i32, i32* %178, align 8
  %180 = sub i32 %179, 1
  %181 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %182 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %181, i32 0, i32 3
  %183 = load i32, i32* %182, align 4
  %184 = mul i32 %180, %183
  %185 = load i32, i32* %13, align 4
  %186 = call [64 x i16]** %168(%struct.jpeg_common_struct* %170, %struct.jvirt_barray_control* %176, i32 %184, i32 %185, i32 0)
  store [64 x i16]** %186, [64 x i16]*** %14, align 8
  %187 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %188 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %187, i32 0, i32 3
  %189 = load i32, i32* %188, align 4
  %190 = load [64 x i16]**, [64 x i16]*** %14, align 8
  %191 = sext i32 %189 to i64
  %192 = getelementptr inbounds [64 x i16]*, [64 x i16]** %190, i64 %191
  store [64 x i16]** %192, [64 x i16]*** %14, align 8
  store i32 0, i32* %22, align 4
  br label %209

193:                                              ; preds = %153
  %194 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %195 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %194, i32 0, i32 1
  %196 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %195, align 8
  %197 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %196, i32 0, i32 8
  %198 = load [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)** %197, align 8
  %199 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %200 = bitcast %struct.jpeg_decompress_struct.445* %199 to %struct.jpeg_common_struct*
  %201 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %6, align 8
  %202 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %201, i32 0, i32 5
  %203 = load i32, i32* %10, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10 x %struct.jvirt_barray_control*]* %202, i64 0, i64 %204
  %206 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %205, align 8
  %207 = load i32, i32* %13, align 4
  %208 = call [64 x i16]** %198(%struct.jpeg_common_struct* %200, %struct.jvirt_barray_control* %206, i32 0, i32 %207, i32 0)
  store [64 x i16]** %208, [64 x i16]*** %14, align 8
  store i32 1, i32* %22, align 4
  br label %209

209:                                              ; preds = %193, %158
  %210 = load %struct.my_coef_controller.468*, %struct.my_coef_controller.468** %6, align 8
  %211 = getelementptr inbounds %struct.my_coef_controller.468, %struct.my_coef_controller.468* %210, i32 0, i32 6
  %212 = load i32*, i32** %211, align 8
  %213 = load i32, i32* %10, align 4
  %214 = mul nsw i32 %213, 6
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds i32, i32* %212, i64 %215
  store i32* %216, i32** %25, align 8
  %217 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %218 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %217, i32 0, i32 19
  %219 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %218, align 8
  store %struct.JQUANT_TBL* %219, %struct.JQUANT_TBL** %26, align 8
  %220 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %26, align 8
  %221 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %220, i32 0, i32 0
  %222 = getelementptr inbounds [64 x i16], [64 x i16]* %221, i64 0, i64 0
  %223 = load i16, i16* %222, align 4
  %224 = zext i16 %223 to i64
  store i64 %224, i64* %27, align 8
  %225 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %26, align 8
  %226 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %225, i32 0, i32 0
  %227 = getelementptr inbounds [64 x i16], [64 x i16]* %226, i64 0, i64 1
  %228 = load i16, i16* %227, align 2
  %229 = zext i16 %228 to i64
  store i64 %229, i64* %28, align 8
  %230 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %26, align 8
  %231 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %230, i32 0, i32 0
  %232 = getelementptr inbounds [64 x i16], [64 x i16]* %231, i64 0, i64 8
  %233 = load i16, i16* %232, align 4
  %234 = zext i16 %233 to i64
  store i64 %234, i64* %30, align 8
  %235 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %26, align 8
  %236 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %235, i32 0, i32 0
  %237 = getelementptr inbounds [64 x i16], [64 x i16]* %236, i64 0, i64 16
  %238 = load i16, i16* %237, align 4
  %239 = zext i16 %238 to i64
  store i64 %239, i64* %32, align 8
  %240 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %26, align 8
  %241 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %240, i32 0, i32 0
  %242 = getelementptr inbounds [64 x i16], [64 x i16]* %241, i64 0, i64 9
  %243 = load i16, i16* %242, align 2
  %244 = zext i16 %243 to i64
  store i64 %244, i64* %31, align 8
  %245 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %26, align 8
  %246 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %245, i32 0, i32 0
  %247 = getelementptr inbounds [64 x i16], [64 x i16]* %246, i64 0, i64 2
  %248 = load i16, i16* %247, align 4
  %249 = zext i16 %248 to i64
  store i64 %249, i64* %29, align 8
  %250 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %251 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %250, i32 0, i32 80
  %252 = load %struct.jpeg_inverse_dct.460*, %struct.jpeg_inverse_dct.460** %251, align 8
  %253 = getelementptr inbounds %struct.jpeg_inverse_dct.460, %struct.jpeg_inverse_dct.460* %252, i32 0, i32 1
  %254 = load i32, i32* %10, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds [10 x void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)*], [10 x void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)*]* %253, i64 0, i64 %255
  %257 = load void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)*, void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)** %256, align 8
  store void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)* %257, void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)** %21, align 8
  %258 = load i8***, i8**** %5, align 8
  %259 = load i32, i32* %10, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds i8**, i8*** %258, i64 %260
  %262 = load i8**, i8*** %261, align 8
  store i8** %262, i8*** %18, align 8
  store i32 0, i32* %11, align 4
  br label %263

263:                                              ; preds = %735, %209
  %264 = load i32, i32* %11, align 4
  %265 = load i32, i32* %12, align 4
  %266 = icmp slt i32 %264, %265
  br i1 %266, label %267, label %738

267:                                              ; preds = %263
  %268 = load [64 x i16]**, [64 x i16]*** %14, align 8
  %269 = load i32, i32* %11, align 4
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds [64 x i16]*, [64 x i16]** %268, i64 %270
  %272 = load [64 x i16]*, [64 x i16]** %271, align 8
  store [64 x i16]* %272, [64 x i16]** %15, align 8
  %273 = load i32, i32* %22, align 4
  %274 = icmp ne i32 %273, 0
  br i1 %274, label %275, label %280

275:                                              ; preds = %267
  %276 = load i32, i32* %11, align 4
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %280

278:                                              ; preds = %275
  %279 = load [64 x i16]*, [64 x i16]** %15, align 8
  store [64 x i16]* %279, [64 x i16]** %16, align 8
  br label %287

280:                                              ; preds = %275, %267
  %281 = load [64 x i16]**, [64 x i16]*** %14, align 8
  %282 = load i32, i32* %11, align 4
  %283 = sub nsw i32 %282, 1
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds [64 x i16]*, [64 x i16]** %281, i64 %284
  %286 = load [64 x i16]*, [64 x i16]** %285, align 8
  store [64 x i16]* %286, [64 x i16]** %16, align 8
  br label %287

287:                                              ; preds = %280, %278
  %288 = load i32, i32* %23, align 4
  %289 = icmp ne i32 %288, 0
  br i1 %289, label %290, label %297

290:                                              ; preds = %287
  %291 = load i32, i32* %11, align 4
  %292 = load i32, i32* %12, align 4
  %293 = sub nsw i32 %292, 1
  %294 = icmp eq i32 %291, %293
  br i1 %294, label %295, label %297

295:                                              ; preds = %290
  %296 = load [64 x i16]*, [64 x i16]** %15, align 8
  store [64 x i16]* %296, [64 x i16]** %17, align 8
  br label %304

297:                                              ; preds = %290, %287
  %298 = load [64 x i16]**, [64 x i16]*** %14, align 8
  %299 = load i32, i32* %11, align 4
  %300 = add nsw i32 %299, 1
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds [64 x i16]*, [64 x i16]** %298, i64 %301
  %303 = load [64 x i16]*, [64 x i16]** %302, align 8
  store [64 x i16]* %303, [64 x i16]** %17, align 8
  br label %304

304:                                              ; preds = %297, %295
  %305 = load [64 x i16]*, [64 x i16]** %16, align 8
  %306 = getelementptr inbounds [64 x i16], [64 x i16]* %305, i64 0
  %307 = getelementptr inbounds [64 x i16], [64 x i16]* %306, i64 0, i64 0
  %308 = load i16, i16* %307, align 2
  %309 = sext i16 %308 to i32
  store i32 %309, i32* %36, align 4
  store i32 %309, i32* %35, align 4
  store i32 %309, i32* %34, align 4
  %310 = load [64 x i16]*, [64 x i16]** %15, align 8
  %311 = getelementptr inbounds [64 x i16], [64 x i16]* %310, i64 0
  %312 = getelementptr inbounds [64 x i16], [64 x i16]* %311, i64 0, i64 0
  %313 = load i16, i16* %312, align 2
  %314 = sext i16 %313 to i32
  store i32 %314, i32* %39, align 4
  store i32 %314, i32* %38, align 4
  store i32 %314, i32* %37, align 4
  %315 = load [64 x i16]*, [64 x i16]** %17, align 8
  %316 = getelementptr inbounds [64 x i16], [64 x i16]* %315, i64 0
  %317 = getelementptr inbounds [64 x i16], [64 x i16]* %316, i64 0, i64 0
  %318 = load i16, i16* %317, align 2
  %319 = sext i16 %318 to i32
  store i32 %319, i32* %42, align 4
  store i32 %319, i32* %41, align 4
  store i32 %319, i32* %40, align 4
  store i32 0, i32* %19, align 4
  %320 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %321 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %320, i32 0, i32 7
  %322 = load i32, i32* %321, align 4
  %323 = sub i32 %322, 1
  store i32 %323, i32* %9, align 4
  store i32 0, i32* %8, align 4
  br label %324

324:                                              ; preds = %725, %304
  %325 = load i32, i32* %8, align 4
  %326 = load i32, i32* %9, align 4
  %327 = icmp ule i32 %325, %326
  br i1 %327, label %328, label %728

328:                                              ; preds = %324
  %329 = load [64 x i16]*, [64 x i16]** %15, align 8
  %330 = getelementptr inbounds [64 x i16], [64 x i16]* %24, i64 0, i64 0
  %331 = bitcast i16* %330 to [64 x i16]*
  call void @jcopy_block_row([64 x i16]* %329, [64 x i16]* %331, i32 1)
  %332 = load i32, i32* %8, align 4
  %333 = load i32, i32* %9, align 4
  %334 = icmp ult i32 %332, %333
  br i1 %334, label %335, label %351

335:                                              ; preds = %328
  %336 = load [64 x i16]*, [64 x i16]** %16, align 8
  %337 = getelementptr inbounds [64 x i16], [64 x i16]* %336, i64 1
  %338 = getelementptr inbounds [64 x i16], [64 x i16]* %337, i64 0, i64 0
  %339 = load i16, i16* %338, align 2
  %340 = sext i16 %339 to i32
  store i32 %340, i32* %36, align 4
  %341 = load [64 x i16]*, [64 x i16]** %15, align 8
  %342 = getelementptr inbounds [64 x i16], [64 x i16]* %341, i64 1
  %343 = getelementptr inbounds [64 x i16], [64 x i16]* %342, i64 0, i64 0
  %344 = load i16, i16* %343, align 2
  %345 = sext i16 %344 to i32
  store i32 %345, i32* %39, align 4
  %346 = load [64 x i16]*, [64 x i16]** %17, align 8
  %347 = getelementptr inbounds [64 x i16], [64 x i16]* %346, i64 1
  %348 = getelementptr inbounds [64 x i16], [64 x i16]* %347, i64 0, i64 0
  %349 = load i16, i16* %348, align 2
  %350 = sext i16 %349 to i32
  store i32 %350, i32* %42, align 4
  br label %351

351:                                              ; preds = %335, %328
  %352 = load i32*, i32** %25, align 8
  %353 = getelementptr inbounds i32, i32* %352, i64 1
  %354 = load i32, i32* %353, align 4
  store i32 %354, i32* %43, align 4
  %355 = icmp ne i32 %354, 0
  br i1 %355, label %356, label %419

356:                                              ; preds = %351
  %357 = getelementptr inbounds [64 x i16], [64 x i16]* %24, i64 0, i64 1
  %358 = load i16, i16* %357, align 2
  %359 = sext i16 %358 to i32
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %361, label %419

361:                                              ; preds = %356
  %362 = load i64, i64* %27, align 8
  %363 = mul nsw i64 36, %362
  %364 = load i32, i32* %37, align 4
  %365 = load i32, i32* %39, align 4
  %366 = sub nsw i32 %364, %365
  %367 = sext i32 %366 to i64
  %368 = mul nsw i64 %363, %367
  store i64 %368, i64* %33, align 8
  %369 = load i64, i64* %33, align 8
  %370 = icmp sge i64 %369, 0
  br i1 %370, label %371, label %392

371:                                              ; preds = %361
  %372 = load i64, i64* %28, align 8
  %373 = shl i64 %372, 7
  %374 = load i64, i64* %33, align 8
  %375 = add nsw i64 %373, %374
  %376 = load i64, i64* %28, align 8
  %377 = shl i64 %376, 8
  %378 = sdiv i64 %375, %377
  %379 = trunc i64 %378 to i32
  store i32 %379, i32* %44, align 4
  %380 = load i32, i32* %43, align 4
  %381 = icmp sgt i32 %380, 0
  br i1 %381, label %382, label %391

382:                                              ; preds = %371
  %383 = load i32, i32* %44, align 4
  %384 = load i32, i32* %43, align 4
  %385 = shl i32 1, %384
  %386 = icmp sge i32 %383, %385
  br i1 %386, label %387, label %391

387:                                              ; preds = %382
  %388 = load i32, i32* %43, align 4
  %389 = shl i32 1, %388
  %390 = sub nsw i32 %389, 1
  store i32 %390, i32* %44, align 4
  br label %391

391:                                              ; preds = %387, %382, %371
  br label %415

392:                                              ; preds = %361
  %393 = load i64, i64* %28, align 8
  %394 = shl i64 %393, 7
  %395 = load i64, i64* %33, align 8
  %396 = sub nsw i64 %394, %395
  %397 = load i64, i64* %28, align 8
  %398 = shl i64 %397, 8
  %399 = sdiv i64 %396, %398
  %400 = trunc i64 %399 to i32
  store i32 %400, i32* %44, align 4
  %401 = load i32, i32* %43, align 4
  %402 = icmp sgt i32 %401, 0
  br i1 %402, label %403, label %412

403:                                              ; preds = %392
  %404 = load i32, i32* %44, align 4
  %405 = load i32, i32* %43, align 4
  %406 = shl i32 1, %405
  %407 = icmp sge i32 %404, %406
  br i1 %407, label %408, label %412

408:                                              ; preds = %403
  %409 = load i32, i32* %43, align 4
  %410 = shl i32 1, %409
  %411 = sub nsw i32 %410, 1
  store i32 %411, i32* %44, align 4
  br label %412

412:                                              ; preds = %408, %403, %392
  %413 = load i32, i32* %44, align 4
  %414 = sub nsw i32 0, %413
  store i32 %414, i32* %44, align 4
  br label %415

415:                                              ; preds = %412, %391
  %416 = load i32, i32* %44, align 4
  %417 = trunc i32 %416 to i16
  %418 = getelementptr inbounds [64 x i16], [64 x i16]* %24, i64 0, i64 1
  store i16 %417, i16* %418, align 2
  br label %419

419:                                              ; preds = %415, %356, %351
  %420 = load i32*, i32** %25, align 8
  %421 = getelementptr inbounds i32, i32* %420, i64 2
  %422 = load i32, i32* %421, align 4
  store i32 %422, i32* %43, align 4
  %423 = icmp ne i32 %422, 0
  br i1 %423, label %424, label %487

424:                                              ; preds = %419
  %425 = getelementptr inbounds [64 x i16], [64 x i16]* %24, i64 0, i64 8
  %426 = load i16, i16* %425, align 16
  %427 = sext i16 %426 to i32
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %487

429:                                              ; preds = %424
  %430 = load i64, i64* %27, align 8
  %431 = mul nsw i64 36, %430
  %432 = load i32, i32* %35, align 4
  %433 = load i32, i32* %41, align 4
  %434 = sub nsw i32 %432, %433
  %435 = sext i32 %434 to i64
  %436 = mul nsw i64 %431, %435
  store i64 %436, i64* %33, align 8
  %437 = load i64, i64* %33, align 8
  %438 = icmp sge i64 %437, 0
  br i1 %438, label %439, label %460

439:                                              ; preds = %429
  %440 = load i64, i64* %30, align 8
  %441 = shl i64 %440, 7
  %442 = load i64, i64* %33, align 8
  %443 = add nsw i64 %441, %442
  %444 = load i64, i64* %30, align 8
  %445 = shl i64 %444, 8
  %446 = sdiv i64 %443, %445
  %447 = trunc i64 %446 to i32
  store i32 %447, i32* %44, align 4
  %448 = load i32, i32* %43, align 4
  %449 = icmp sgt i32 %448, 0
  br i1 %449, label %450, label %459

450:                                              ; preds = %439
  %451 = load i32, i32* %44, align 4
  %452 = load i32, i32* %43, align 4
  %453 = shl i32 1, %452
  %454 = icmp sge i32 %451, %453
  br i1 %454, label %455, label %459

455:                                              ; preds = %450
  %456 = load i32, i32* %43, align 4
  %457 = shl i32 1, %456
  %458 = sub nsw i32 %457, 1
  store i32 %458, i32* %44, align 4
  br label %459

459:                                              ; preds = %455, %450, %439
  br label %483

460:                                              ; preds = %429
  %461 = load i64, i64* %30, align 8
  %462 = shl i64 %461, 7
  %463 = load i64, i64* %33, align 8
  %464 = sub nsw i64 %462, %463
  %465 = load i64, i64* %30, align 8
  %466 = shl i64 %465, 8
  %467 = sdiv i64 %464, %466
  %468 = trunc i64 %467 to i32
  store i32 %468, i32* %44, align 4
  %469 = load i32, i32* %43, align 4
  %470 = icmp sgt i32 %469, 0
  br i1 %470, label %471, label %480

471:                                              ; preds = %460
  %472 = load i32, i32* %44, align 4
  %473 = load i32, i32* %43, align 4
  %474 = shl i32 1, %473
  %475 = icmp sge i32 %472, %474
  br i1 %475, label %476, label %480

476:                                              ; preds = %471
  %477 = load i32, i32* %43, align 4
  %478 = shl i32 1, %477
  %479 = sub nsw i32 %478, 1
  store i32 %479, i32* %44, align 4
  br label %480

480:                                              ; preds = %476, %471, %460
  %481 = load i32, i32* %44, align 4
  %482 = sub nsw i32 0, %481
  store i32 %482, i32* %44, align 4
  br label %483

483:                                              ; preds = %480, %459
  %484 = load i32, i32* %44, align 4
  %485 = trunc i32 %484 to i16
  %486 = getelementptr inbounds [64 x i16], [64 x i16]* %24, i64 0, i64 8
  store i16 %485, i16* %486, align 16
  br label %487

487:                                              ; preds = %483, %424, %419
  %488 = load i32*, i32** %25, align 8
  %489 = getelementptr inbounds i32, i32* %488, i64 3
  %490 = load i32, i32* %489, align 4
  store i32 %490, i32* %43, align 4
  %491 = icmp ne i32 %490, 0
  br i1 %491, label %492, label %558

492:                                              ; preds = %487
  %493 = getelementptr inbounds [64 x i16], [64 x i16]* %24, i64 0, i64 16
  %494 = load i16, i16* %493, align 16
  %495 = sext i16 %494 to i32
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %497, label %558

497:                                              ; preds = %492
  %498 = load i64, i64* %27, align 8
  %499 = mul nsw i64 9, %498
  %500 = load i32, i32* %35, align 4
  %501 = load i32, i32* %41, align 4
  %502 = add nsw i32 %500, %501
  %503 = load i32, i32* %38, align 4
  %504 = mul nsw i32 2, %503
  %505 = sub nsw i32 %502, %504
  %506 = sext i32 %505 to i64
  %507 = mul nsw i64 %499, %506
  store i64 %507, i64* %33, align 8
  %508 = load i64, i64* %33, align 8
  %509 = icmp sge i64 %508, 0
  br i1 %509, label %510, label %531

510:                                              ; preds = %497
  %511 = load i64, i64* %32, align 8
  %512 = shl i64 %511, 7
  %513 = load i64, i64* %33, align 8
  %514 = add nsw i64 %512, %513
  %515 = load i64, i64* %32, align 8
  %516 = shl i64 %515, 8
  %517 = sdiv i64 %514, %516
  %518 = trunc i64 %517 to i32
  store i32 %518, i32* %44, align 4
  %519 = load i32, i32* %43, align 4
  %520 = icmp sgt i32 %519, 0
  br i1 %520, label %521, label %530

521:                                              ; preds = %510
  %522 = load i32, i32* %44, align 4
  %523 = load i32, i32* %43, align 4
  %524 = shl i32 1, %523
  %525 = icmp sge i32 %522, %524
  br i1 %525, label %526, label %530

526:                                              ; preds = %521
  %527 = load i32, i32* %43, align 4
  %528 = shl i32 1, %527
  %529 = sub nsw i32 %528, 1
  store i32 %529, i32* %44, align 4
  br label %530

530:                                              ; preds = %526, %521, %510
  br label %554

531:                                              ; preds = %497
  %532 = load i64, i64* %32, align 8
  %533 = shl i64 %532, 7
  %534 = load i64, i64* %33, align 8
  %535 = sub nsw i64 %533, %534
  %536 = load i64, i64* %32, align 8
  %537 = shl i64 %536, 8
  %538 = sdiv i64 %535, %537
  %539 = trunc i64 %538 to i32
  store i32 %539, i32* %44, align 4
  %540 = load i32, i32* %43, align 4
  %541 = icmp sgt i32 %540, 0
  br i1 %541, label %542, label %551

542:                                              ; preds = %531
  %543 = load i32, i32* %44, align 4
  %544 = load i32, i32* %43, align 4
  %545 = shl i32 1, %544
  %546 = icmp sge i32 %543, %545
  br i1 %546, label %547, label %551

547:                                              ; preds = %542
  %548 = load i32, i32* %43, align 4
  %549 = shl i32 1, %548
  %550 = sub nsw i32 %549, 1
  store i32 %550, i32* %44, align 4
  br label %551

551:                                              ; preds = %547, %542, %531
  %552 = load i32, i32* %44, align 4
  %553 = sub nsw i32 0, %552
  store i32 %553, i32* %44, align 4
  br label %554

554:                                              ; preds = %551, %530
  %555 = load i32, i32* %44, align 4
  %556 = trunc i32 %555 to i16
  %557 = getelementptr inbounds [64 x i16], [64 x i16]* %24, i64 0, i64 16
  store i16 %556, i16* %557, align 16
  br label %558

558:                                              ; preds = %554, %492, %487
  %559 = load i32*, i32** %25, align 8
  %560 = getelementptr inbounds i32, i32* %559, i64 4
  %561 = load i32, i32* %560, align 4
  store i32 %561, i32* %43, align 4
  %562 = icmp ne i32 %561, 0
  br i1 %562, label %563, label %630

563:                                              ; preds = %558
  %564 = getelementptr inbounds [64 x i16], [64 x i16]* %24, i64 0, i64 9
  %565 = load i16, i16* %564, align 2
  %566 = sext i16 %565 to i32
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %568, label %630

568:                                              ; preds = %563
  %569 = load i64, i64* %27, align 8
  %570 = mul nsw i64 5, %569
  %571 = load i32, i32* %34, align 4
  %572 = load i32, i32* %36, align 4
  %573 = sub nsw i32 %571, %572
  %574 = load i32, i32* %40, align 4
  %575 = sub nsw i32 %573, %574
  %576 = load i32, i32* %42, align 4
  %577 = add nsw i32 %575, %576
  %578 = sext i32 %577 to i64
  %579 = mul nsw i64 %570, %578
  store i64 %579, i64* %33, align 8
  %580 = load i64, i64* %33, align 8
  %581 = icmp sge i64 %580, 0
  br i1 %581, label %582, label %603

582:                                              ; preds = %568
  %583 = load i64, i64* %31, align 8
  %584 = shl i64 %583, 7
  %585 = load i64, i64* %33, align 8
  %586 = add nsw i64 %584, %585
  %587 = load i64, i64* %31, align 8
  %588 = shl i64 %587, 8
  %589 = sdiv i64 %586, %588
  %590 = trunc i64 %589 to i32
  store i32 %590, i32* %44, align 4
  %591 = load i32, i32* %43, align 4
  %592 = icmp sgt i32 %591, 0
  br i1 %592, label %593, label %602

593:                                              ; preds = %582
  %594 = load i32, i32* %44, align 4
  %595 = load i32, i32* %43, align 4
  %596 = shl i32 1, %595
  %597 = icmp sge i32 %594, %596
  br i1 %597, label %598, label %602

598:                                              ; preds = %593
  %599 = load i32, i32* %43, align 4
  %600 = shl i32 1, %599
  %601 = sub nsw i32 %600, 1
  store i32 %601, i32* %44, align 4
  br label %602

602:                                              ; preds = %598, %593, %582
  br label %626

603:                                              ; preds = %568
  %604 = load i64, i64* %31, align 8
  %605 = shl i64 %604, 7
  %606 = load i64, i64* %33, align 8
  %607 = sub nsw i64 %605, %606
  %608 = load i64, i64* %31, align 8
  %609 = shl i64 %608, 8
  %610 = sdiv i64 %607, %609
  %611 = trunc i64 %610 to i32
  store i32 %611, i32* %44, align 4
  %612 = load i32, i32* %43, align 4
  %613 = icmp sgt i32 %612, 0
  br i1 %613, label %614, label %623

614:                                              ; preds = %603
  %615 = load i32, i32* %44, align 4
  %616 = load i32, i32* %43, align 4
  %617 = shl i32 1, %616
  %618 = icmp sge i32 %615, %617
  br i1 %618, label %619, label %623

619:                                              ; preds = %614
  %620 = load i32, i32* %43, align 4
  %621 = shl i32 1, %620
  %622 = sub nsw i32 %621, 1
  store i32 %622, i32* %44, align 4
  br label %623

623:                                              ; preds = %619, %614, %603
  %624 = load i32, i32* %44, align 4
  %625 = sub nsw i32 0, %624
  store i32 %625, i32* %44, align 4
  br label %626

626:                                              ; preds = %623, %602
  %627 = load i32, i32* %44, align 4
  %628 = trunc i32 %627 to i16
  %629 = getelementptr inbounds [64 x i16], [64 x i16]* %24, i64 0, i64 9
  store i16 %628, i16* %629, align 2
  br label %630

630:                                              ; preds = %626, %563, %558
  %631 = load i32*, i32** %25, align 8
  %632 = getelementptr inbounds i32, i32* %631, i64 5
  %633 = load i32, i32* %632, align 4
  store i32 %633, i32* %43, align 4
  %634 = icmp ne i32 %633, 0
  br i1 %634, label %635, label %701

635:                                              ; preds = %630
  %636 = getelementptr inbounds [64 x i16], [64 x i16]* %24, i64 0, i64 2
  %637 = load i16, i16* %636, align 4
  %638 = sext i16 %637 to i32
  %639 = icmp eq i32 %638, 0
  br i1 %639, label %640, label %701

640:                                              ; preds = %635
  %641 = load i64, i64* %27, align 8
  %642 = mul nsw i64 9, %641
  %643 = load i32, i32* %37, align 4
  %644 = load i32, i32* %39, align 4
  %645 = add nsw i32 %643, %644
  %646 = load i32, i32* %38, align 4
  %647 = mul nsw i32 2, %646
  %648 = sub nsw i32 %645, %647
  %649 = sext i32 %648 to i64
  %650 = mul nsw i64 %642, %649
  store i64 %650, i64* %33, align 8
  %651 = load i64, i64* %33, align 8
  %652 = icmp sge i64 %651, 0
  br i1 %652, label %653, label %674

653:                                              ; preds = %640
  %654 = load i64, i64* %29, align 8
  %655 = shl i64 %654, 7
  %656 = load i64, i64* %33, align 8
  %657 = add nsw i64 %655, %656
  %658 = load i64, i64* %29, align 8
  %659 = shl i64 %658, 8
  %660 = sdiv i64 %657, %659
  %661 = trunc i64 %660 to i32
  store i32 %661, i32* %44, align 4
  %662 = load i32, i32* %43, align 4
  %663 = icmp sgt i32 %662, 0
  br i1 %663, label %664, label %673

664:                                              ; preds = %653
  %665 = load i32, i32* %44, align 4
  %666 = load i32, i32* %43, align 4
  %667 = shl i32 1, %666
  %668 = icmp sge i32 %665, %667
  br i1 %668, label %669, label %673

669:                                              ; preds = %664
  %670 = load i32, i32* %43, align 4
  %671 = shl i32 1, %670
  %672 = sub nsw i32 %671, 1
  store i32 %672, i32* %44, align 4
  br label %673

673:                                              ; preds = %669, %664, %653
  br label %697

674:                                              ; preds = %640
  %675 = load i64, i64* %29, align 8
  %676 = shl i64 %675, 7
  %677 = load i64, i64* %33, align 8
  %678 = sub nsw i64 %676, %677
  %679 = load i64, i64* %29, align 8
  %680 = shl i64 %679, 8
  %681 = sdiv i64 %678, %680
  %682 = trunc i64 %681 to i32
  store i32 %682, i32* %44, align 4
  %683 = load i32, i32* %43, align 4
  %684 = icmp sgt i32 %683, 0
  br i1 %684, label %685, label %694

685:                                              ; preds = %674
  %686 = load i32, i32* %44, align 4
  %687 = load i32, i32* %43, align 4
  %688 = shl i32 1, %687
  %689 = icmp sge i32 %686, %688
  br i1 %689, label %690, label %694

690:                                              ; preds = %685
  %691 = load i32, i32* %43, align 4
  %692 = shl i32 1, %691
  %693 = sub nsw i32 %692, 1
  store i32 %693, i32* %44, align 4
  br label %694

694:                                              ; preds = %690, %685, %674
  %695 = load i32, i32* %44, align 4
  %696 = sub nsw i32 0, %695
  store i32 %696, i32* %44, align 4
  br label %697

697:                                              ; preds = %694, %673
  %698 = load i32, i32* %44, align 4
  %699 = trunc i32 %698 to i16
  %700 = getelementptr inbounds [64 x i16], [64 x i16]* %24, i64 0, i64 2
  store i16 %699, i16* %700, align 4
  br label %701

701:                                              ; preds = %697, %635, %630
  %702 = load void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)*, void (%struct.jpeg_decompress_struct.445*, %struct.jpeg_component_info*, i16*, i8**, i32)** %21, align 8
  %703 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %704 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %705 = getelementptr inbounds [64 x i16], [64 x i16]* %24, i64 0, i64 0
  %706 = load i8**, i8*** %18, align 8
  %707 = load i32, i32* %19, align 4
  call void %702(%struct.jpeg_decompress_struct.445* %703, %struct.jpeg_component_info* %704, i16* %705, i8** %706, i32 %707)
  %708 = load i32, i32* %35, align 4
  store i32 %708, i32* %34, align 4
  %709 = load i32, i32* %36, align 4
  store i32 %709, i32* %35, align 4
  %710 = load i32, i32* %38, align 4
  store i32 %710, i32* %37, align 4
  %711 = load i32, i32* %39, align 4
  store i32 %711, i32* %38, align 4
  %712 = load i32, i32* %41, align 4
  store i32 %712, i32* %40, align 4
  %713 = load i32, i32* %42, align 4
  store i32 %713, i32* %41, align 4
  %714 = load [64 x i16]*, [64 x i16]** %15, align 8
  %715 = getelementptr inbounds [64 x i16], [64 x i16]* %714, i32 1
  store [64 x i16]* %715, [64 x i16]** %15, align 8
  %716 = load [64 x i16]*, [64 x i16]** %16, align 8
  %717 = getelementptr inbounds [64 x i16], [64 x i16]* %716, i32 1
  store [64 x i16]* %717, [64 x i16]** %16, align 8
  %718 = load [64 x i16]*, [64 x i16]** %17, align 8
  %719 = getelementptr inbounds [64 x i16], [64 x i16]* %718, i32 1
  store [64 x i16]* %719, [64 x i16]** %17, align 8
  %720 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %721 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %720, i32 0, i32 9
  %722 = load i32, i32* %721, align 4
  %723 = load i32, i32* %19, align 4
  %724 = add i32 %723, %722
  store i32 %724, i32* %19, align 4
  br label %725

725:                                              ; preds = %701
  %726 = load i32, i32* %8, align 4
  %727 = add i32 %726, 1
  store i32 %727, i32* %8, align 4
  br label %324

728:                                              ; preds = %324
  %729 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %730 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %729, i32 0, i32 9
  %731 = load i32, i32* %730, align 4
  %732 = load i8**, i8*** %18, align 8
  %733 = sext i32 %731 to i64
  %734 = getelementptr inbounds i8*, i8** %732, i64 %733
  store i8** %734, i8*** %18, align 8
  br label %735

735:                                              ; preds = %728
  %736 = load i32, i32* %11, align 4
  %737 = add nsw i32 %736, 1
  store i32 %737, i32* %11, align 4
  br label %263

738:                                              ; preds = %263
  br label %739

739:                                              ; preds = %738, %124
  %740 = load i32, i32* %10, align 4
  %741 = add nsw i32 %740, 1
  store i32 %741, i32* %10, align 4
  %742 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  %743 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %742, i32 1
  store %struct.jpeg_component_info* %743, %struct.jpeg_component_info** %20, align 8
  br label %113

744:                                              ; preds = %113
  %745 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %746 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %745, i32 0, i32 37
  %747 = load i32, i32* %746, align 8
  %748 = add i32 %747, 1
  store i32 %748, i32* %746, align 8
  %749 = load %struct.jpeg_decompress_struct.445*, %struct.jpeg_decompress_struct.445** %4, align 8
  %750 = getelementptr inbounds %struct.jpeg_decompress_struct.445, %struct.jpeg_decompress_struct.445* %749, i32 0, i32 60
  %751 = load i32, i32* %750, align 8
  %752 = icmp ult i32 %748, %751
  br i1 %752, label %753, label %754

753:                                              ; preds = %744
  store i32 3, i32* %3, align 4
  br label %755

754:                                              ; preds = %744
  store i32 4, i32* %3, align 4
  br label %755

755:                                              ; preds = %754, %753, %107
  %756 = load i32, i32* %3, align 4
  ret i32 %756
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_color_deconverter(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_color_deconverter*, align 8
  %4 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %5 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %5, i32 0, i32 1
  %7 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %7, i32 0, i32 0
  %9 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %8, align 8
  %10 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %11 = bitcast %struct.jpeg_decompress_struct.469* %10 to %struct.jpeg_common_struct*
  %12 = call i8* %9(%struct.jpeg_common_struct* %11, i32 1, i64 48)
  %13 = bitcast i8* %12 to %struct.my_color_deconverter*
  store %struct.my_color_deconverter* %13, %struct.my_color_deconverter** %3, align 8
  %14 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %3, align 8
  %15 = bitcast %struct.my_color_deconverter* %14 to %struct.jpeg_color_deconverter.486*
  %16 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %16, i32 0, i32 82
  store %struct.jpeg_color_deconverter.486* %15, %struct.jpeg_color_deconverter.486** %17, align 8
  %18 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %3, align 8
  %19 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %18, i32 0, i32 0
  %20 = getelementptr inbounds %struct.jpeg_color_deconverter.486, %struct.jpeg_color_deconverter.486* %19, i32 0, i32 0
  %21 = bitcast {}** %20 to void (%struct.jpeg_decompress_struct.469*)**
  store void (%struct.jpeg_decompress_struct.469*)* @start_pass_dcolor, void (%struct.jpeg_decompress_struct.469*)** %21, align 8
  %22 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %22, i32 0, i32 9
  %24 = load i32, i32* %23, align 4
  switch i32 %24, label %79 [
    i32 1, label %25
    i32 2, label %43
    i32 3, label %43
    i32 4, label %61
    i32 5, label %61
  ]

25:                                               ; preds = %1
  %26 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %26, i32 0, i32 8
  %28 = load i32, i32* %27, align 8
  %29 = icmp ne i32 %28, 1
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %31, i32 0, i32 0
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i32 0, i32 5
  store i32 8, i32* %34, align 8
  %35 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %35, i32 0, i32 0
  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i32 0, i32 0
  %39 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %38, align 8
  %40 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %41 = bitcast %struct.jpeg_decompress_struct.469* %40 to %struct.jpeg_common_struct*
  call void %39(%struct.jpeg_common_struct* %41)
  br label %42

42:                                               ; preds = %30, %25
  br label %97

43:                                               ; preds = %1, %1
  %44 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %45 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %44, i32 0, i32 8
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 3
  br i1 %47, label %48, label %60

48:                                               ; preds = %43
  %49 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %49, i32 0, i32 0
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %50, align 8
  %52 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i32 0, i32 5
  store i32 8, i32* %52, align 8
  %53 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %54 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %53, i32 0, i32 0
  %55 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %54, align 8
  %56 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %55, i32 0, i32 0
  %57 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %56, align 8
  %58 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %59 = bitcast %struct.jpeg_decompress_struct.469* %58 to %struct.jpeg_common_struct*
  call void %57(%struct.jpeg_common_struct* %59)
  br label %60

60:                                               ; preds = %48, %43
  br label %97

61:                                               ; preds = %1, %1
  %62 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %62, i32 0, i32 8
  %64 = load i32, i32* %63, align 8
  %65 = icmp ne i32 %64, 4
  br i1 %65, label %66, label %78

66:                                               ; preds = %61
  %67 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %68 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %67, i32 0, i32 0
  %69 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %68, align 8
  %70 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %69, i32 0, i32 5
  store i32 8, i32* %70, align 8
  %71 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %71, i32 0, i32 0
  %73 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %72, align 8
  %74 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %73, i32 0, i32 0
  %75 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %74, align 8
  %76 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %77 = bitcast %struct.jpeg_decompress_struct.469* %76 to %struct.jpeg_common_struct*
  call void %75(%struct.jpeg_common_struct* %77)
  br label %78

78:                                               ; preds = %66, %61
  br label %97

79:                                               ; preds = %1
  %80 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %81 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %80, i32 0, i32 8
  %82 = load i32, i32* %81, align 8
  %83 = icmp slt i32 %82, 1
  br i1 %83, label %84, label %96

84:                                               ; preds = %79
  %85 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %86 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %85, i32 0, i32 0
  %87 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %86, align 8
  %88 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %87, i32 0, i32 5
  store i32 8, i32* %88, align 8
  %89 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %90 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %89, i32 0, i32 0
  %91 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %90, align 8
  %92 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %91, i32 0, i32 0
  %93 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %92, align 8
  %94 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %95 = bitcast %struct.jpeg_decompress_struct.469* %94 to %struct.jpeg_common_struct*
  call void %93(%struct.jpeg_common_struct* %95)
  br label %96

96:                                               ; preds = %84, %79
  br label %97

97:                                               ; preds = %96, %78, %60, %42
  %98 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %99 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %98, i32 0, i32 10
  %100 = load i32, i32* %99, align 8
  switch i32 %100, label %218 [
    i32 1, label %101
    i32 2, label %148
    i32 4, label %183
  ]

101:                                              ; preds = %97
  %102 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %103 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %102, i32 0, i32 28
  store i32 1, i32* %103, align 8
  %104 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %105 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %104, i32 0, i32 9
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %113, label %108

108:                                              ; preds = %101
  %109 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %110 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %109, i32 0, i32 9
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 3
  br i1 %112, label %113, label %135

113:                                              ; preds = %108, %101
  %114 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %3, align 8
  %115 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %114, i32 0, i32 0
  %116 = getelementptr inbounds %struct.jpeg_color_deconverter.486, %struct.jpeg_color_deconverter.486* %115, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**, i32)* @grayscale_convert.45, void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**, i32)** %116, align 8
  store i32 1, i32* %4, align 4
  br label %117

117:                                              ; preds = %131, %113
  %118 = load i32, i32* %4, align 4
  %119 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %120 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %119, i32 0, i32 8
  %121 = load i32, i32* %120, align 8
  %122 = icmp slt i32 %118, %121
  br i1 %122, label %123, label %134

123:                                              ; preds = %117
  %124 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %125 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %124, i32 0, i32 43
  %126 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %125, align 8
  %127 = load i32, i32* %4, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %126, i64 %128
  %130 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %129, i32 0, i32 12
  store i32 0, i32* %130, align 8
  br label %131

131:                                              ; preds = %123
  %132 = load i32, i32* %4, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %4, align 4
  br label %117

134:                                              ; preds = %117
  br label %147

135:                                              ; preds = %108
  %136 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %137 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %136, i32 0, i32 0
  %138 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %137, align 8
  %139 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %138, i32 0, i32 5
  store i32 25, i32* %139, align 8
  %140 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %141 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %140, i32 0, i32 0
  %142 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %141, align 8
  %143 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %142, i32 0, i32 0
  %144 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %143, align 8
  %145 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %146 = bitcast %struct.jpeg_decompress_struct.469* %145 to %struct.jpeg_common_struct*
  call void %144(%struct.jpeg_common_struct* %146)
  br label %147

147:                                              ; preds = %135, %134
  br label %248

148:                                              ; preds = %97
  %149 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %150 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %149, i32 0, i32 28
  store i32 3, i32* %150, align 8
  %151 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %152 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %151, i32 0, i32 9
  %153 = load i32, i32* %152, align 4
  %154 = icmp eq i32 %153, 3
  br i1 %154, label %155, label %160

155:                                              ; preds = %148
  %156 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %3, align 8
  %157 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %156, i32 0, i32 0
  %158 = getelementptr inbounds %struct.jpeg_color_deconverter.486, %struct.jpeg_color_deconverter.486* %157, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**, i32)* @ycc_rgb_convert, void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**, i32)** %158, align 8
  %159 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void @build_ycc_rgb_table(%struct.jpeg_decompress_struct.469* %159)
  br label %182

160:                                              ; preds = %148
  %161 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %162 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %161, i32 0, i32 9
  %163 = load i32, i32* %162, align 4
  %164 = icmp eq i32 %163, 2
  br i1 %164, label %165, label %169

165:                                              ; preds = %160
  %166 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %3, align 8
  %167 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %166, i32 0, i32 0
  %168 = getelementptr inbounds %struct.jpeg_color_deconverter.486, %struct.jpeg_color_deconverter.486* %167, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**, i32)* @null_convert.46, void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**, i32)** %168, align 8
  br label %181

169:                                              ; preds = %160
  %170 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %171 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %170, i32 0, i32 0
  %172 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %171, align 8
  %173 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %172, i32 0, i32 5
  store i32 25, i32* %173, align 8
  %174 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %175 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %174, i32 0, i32 0
  %176 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %175, align 8
  %177 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %176, i32 0, i32 0
  %178 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %177, align 8
  %179 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %180 = bitcast %struct.jpeg_decompress_struct.469* %179 to %struct.jpeg_common_struct*
  call void %178(%struct.jpeg_common_struct* %180)
  br label %181

181:                                              ; preds = %169, %165
  br label %182

182:                                              ; preds = %181, %155
  br label %248

183:                                              ; preds = %97
  %184 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %185 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %184, i32 0, i32 28
  store i32 4, i32* %185, align 8
  %186 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %187 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %186, i32 0, i32 9
  %188 = load i32, i32* %187, align 4
  %189 = icmp eq i32 %188, 5
  br i1 %189, label %190, label %195

190:                                              ; preds = %183
  %191 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %3, align 8
  %192 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %191, i32 0, i32 0
  %193 = getelementptr inbounds %struct.jpeg_color_deconverter.486, %struct.jpeg_color_deconverter.486* %192, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**, i32)* @ycck_cmyk_convert, void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**, i32)** %193, align 8
  %194 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void @build_ycc_rgb_table(%struct.jpeg_decompress_struct.469* %194)
  br label %217

195:                                              ; preds = %183
  %196 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %197 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %196, i32 0, i32 9
  %198 = load i32, i32* %197, align 4
  %199 = icmp eq i32 %198, 4
  br i1 %199, label %200, label %204

200:                                              ; preds = %195
  %201 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %3, align 8
  %202 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %201, i32 0, i32 0
  %203 = getelementptr inbounds %struct.jpeg_color_deconverter.486, %struct.jpeg_color_deconverter.486* %202, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**, i32)* @null_convert.46, void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**, i32)** %203, align 8
  br label %216

204:                                              ; preds = %195
  %205 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %206 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %205, i32 0, i32 0
  %207 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %206, align 8
  %208 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %207, i32 0, i32 5
  store i32 25, i32* %208, align 8
  %209 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %210 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %209, i32 0, i32 0
  %211 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %210, align 8
  %212 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %211, i32 0, i32 0
  %213 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %212, align 8
  %214 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %215 = bitcast %struct.jpeg_decompress_struct.469* %214 to %struct.jpeg_common_struct*
  call void %213(%struct.jpeg_common_struct* %215)
  br label %216

216:                                              ; preds = %204, %200
  br label %217

217:                                              ; preds = %216, %190
  br label %248

218:                                              ; preds = %97
  %219 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %220 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %219, i32 0, i32 10
  %221 = load i32, i32* %220, align 8
  %222 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %223 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %222, i32 0, i32 9
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %221, %224
  br i1 %225, label %226, label %235

226:                                              ; preds = %218
  %227 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %228 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %227, i32 0, i32 8
  %229 = load i32, i32* %228, align 8
  %230 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %231 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %230, i32 0, i32 28
  store i32 %229, i32* %231, align 8
  %232 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %3, align 8
  %233 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %232, i32 0, i32 0
  %234 = getelementptr inbounds %struct.jpeg_color_deconverter.486, %struct.jpeg_color_deconverter.486* %233, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**, i32)* @null_convert.46, void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**, i32)** %234, align 8
  br label %247

235:                                              ; preds = %218
  %236 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %237 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %236, i32 0, i32 0
  %238 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %237, align 8
  %239 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %238, i32 0, i32 5
  store i32 25, i32* %239, align 8
  %240 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %241 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %240, i32 0, i32 0
  %242 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %241, align 8
  %243 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %242, i32 0, i32 0
  %244 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %243, align 8
  %245 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %246 = bitcast %struct.jpeg_decompress_struct.469* %245 to %struct.jpeg_common_struct*
  call void %244(%struct.jpeg_common_struct* %246)
  br label %247

247:                                              ; preds = %235, %226
  br label %248

248:                                              ; preds = %247, %217, %182, %147
  %249 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %250 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %249, i32 0, i32 19
  %251 = load i32, i32* %250, align 4
  %252 = icmp ne i32 %251, 0
  br i1 %252, label %253, label %256

253:                                              ; preds = %248
  %254 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %255 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %254, i32 0, i32 29
  store i32 1, i32* %255, align 4
  br label %262

256:                                              ; preds = %248
  %257 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %258 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %257, i32 0, i32 28
  %259 = load i32, i32* %258, align 8
  %260 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %261 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %260, i32 0, i32 29
  store i32 %259, i32* %261, align 4
  br label %262

262:                                              ; preds = %256, %253
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_dcolor(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @grayscale_convert.45(%struct.jpeg_decompress_struct.469* %0, i8*** %1, i32 %2, i8** %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %7 = alloca i8***, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %6, align 8
  store i8*** %1, i8**** %7, align 8
  store i32 %2, i32* %8, align 4
  store i8** %3, i8*** %9, align 8
  store i32 %4, i32* %10, align 4
  %11 = load i8***, i8**** %7, align 8
  %12 = getelementptr inbounds i8**, i8*** %11, i64 0
  %13 = load i8**, i8*** %12, align 8
  %14 = load i32, i32* %8, align 4
  %15 = load i8**, i8*** %9, align 8
  %16 = load i32, i32* %10, align 4
  %17 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %6, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %17, i32 0, i32 26
  %19 = load i32, i32* %18, align 8
  call void @jcopy_sample_rows(i8** %13, i32 %14, i8** %15, i32 0, i32 %16, i32 %19)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @ycc_rgb_convert(%struct.jpeg_decompress_struct.469* %0, i8*** %1, i32 %2, i8** %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %7 = alloca i8***, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.my_color_deconverter*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i32*, align 8
  %23 = alloca i32*, align 8
  %24 = alloca i64*, align 8
  %25 = alloca i64*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %6, align 8
  store i8*** %1, i8**** %7, align 8
  store i32 %2, i32* %8, align 4
  store i8** %3, i8*** %9, align 8
  store i32 %4, i32* %10, align 4
  %26 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %6, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %26, i32 0, i32 82
  %28 = load %struct.jpeg_color_deconverter.486*, %struct.jpeg_color_deconverter.486** %27, align 8
  %29 = bitcast %struct.jpeg_color_deconverter.486* %28 to %struct.my_color_deconverter*
  store %struct.my_color_deconverter* %29, %struct.my_color_deconverter** %11, align 8
  %30 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %6, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %30, i32 0, i32 26
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %20, align 4
  %33 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %6, align 8
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %33, i32 0, i32 61
  %35 = load i8*, i8** %34, align 8
  store i8* %35, i8** %21, align 8
  %36 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %11, align 8
  %37 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %36, i32 0, i32 1
  %38 = load i32*, i32** %37, align 8
  store i32* %38, i32** %22, align 8
  %39 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %11, align 8
  %40 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %39, i32 0, i32 2
  %41 = load i32*, i32** %40, align 8
  store i32* %41, i32** %23, align 8
  %42 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %11, align 8
  %43 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %42, i32 0, i32 3
  %44 = load i64*, i64** %43, align 8
  store i64* %44, i64** %24, align 8
  %45 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %11, align 8
  %46 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %45, i32 0, i32 4
  %47 = load i64*, i64** %46, align 8
  store i64* %47, i64** %25, align 8
  br label %48

48:                                               ; preds = %154, %5
  %49 = load i32, i32* %10, align 4
  %50 = add nsw i32 %49, -1
  store i32 %50, i32* %10, align 4
  %51 = icmp sge i32 %50, 0
  br i1 %51, label %52, label %155

52:                                               ; preds = %48
  %53 = load i8***, i8**** %7, align 8
  %54 = getelementptr inbounds i8**, i8*** %53, i64 0
  %55 = load i8**, i8*** %54, align 8
  %56 = load i32, i32* %8, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i8*, i8** %55, i64 %57
  %59 = load i8*, i8** %58, align 8
  store i8* %59, i8** %16, align 8
  %60 = load i8***, i8**** %7, align 8
  %61 = getelementptr inbounds i8**, i8*** %60, i64 1
  %62 = load i8**, i8*** %61, align 8
  %63 = load i32, i32* %8, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds i8*, i8** %62, i64 %64
  %66 = load i8*, i8** %65, align 8
  store i8* %66, i8** %17, align 8
  %67 = load i8***, i8**** %7, align 8
  %68 = getelementptr inbounds i8**, i8*** %67, i64 2
  %69 = load i8**, i8*** %68, align 8
  %70 = load i32, i32* %8, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i8*, i8** %69, i64 %71
  %73 = load i8*, i8** %72, align 8
  store i8* %73, i8** %18, align 8
  %74 = load i32, i32* %8, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %8, align 4
  %76 = load i8**, i8*** %9, align 8
  %77 = getelementptr inbounds i8*, i8** %76, i32 1
  store i8** %77, i8*** %9, align 8
  %78 = load i8*, i8** %76, align 8
  store i8* %78, i8** %15, align 8
  store i32 0, i32* %19, align 4
  br label %79

79:                                               ; preds = %151, %52
  %80 = load i32, i32* %19, align 4
  %81 = load i32, i32* %20, align 4
  %82 = icmp ult i32 %80, %81
  br i1 %82, label %83, label %154

83:                                               ; preds = %79
  %84 = load i8*, i8** %16, align 8
  %85 = load i32, i32* %19, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %84, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  store i32 %89, i32* %12, align 4
  %90 = load i8*, i8** %17, align 8
  %91 = load i32, i32* %19, align 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %90, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  store i32 %95, i32* %13, align 4
  %96 = load i8*, i8** %18, align 8
  %97 = load i32, i32* %19, align 4
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %96, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  store i32 %101, i32* %14, align 4
  %102 = load i8*, i8** %21, align 8
  %103 = load i32, i32* %12, align 4
  %104 = load i32*, i32** %22, align 8
  %105 = load i32, i32* %14, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i32, i32* %104, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = add nsw i32 %103, %108
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i8, i8* %102, i64 %110
  %112 = load i8, i8* %111, align 1
  %113 = load i8*, i8** %15, align 8
  %114 = getelementptr inbounds i8, i8* %113, i64 0
  store i8 %112, i8* %114, align 1
  %115 = load i8*, i8** %21, align 8
  %116 = load i32, i32* %12, align 4
  %117 = load i64*, i64** %25, align 8
  %118 = load i32, i32* %13, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i64, i64* %117, i64 %119
  %121 = load i64, i64* %120, align 8
  %122 = load i64*, i64** %24, align 8
  %123 = load i32, i32* %14, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i64, i64* %122, i64 %124
  %126 = load i64, i64* %125, align 8
  %127 = add nsw i64 %121, %126
  %128 = ashr i64 %127, 16
  %129 = trunc i64 %128 to i32
  %130 = add nsw i32 %116, %129
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i8, i8* %115, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = load i8*, i8** %15, align 8
  %135 = getelementptr inbounds i8, i8* %134, i64 1
  store i8 %133, i8* %135, align 1
  %136 = load i8*, i8** %21, align 8
  %137 = load i32, i32* %12, align 4
  %138 = load i32*, i32** %23, align 8
  %139 = load i32, i32* %13, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i32, i32* %138, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = add nsw i32 %137, %142
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds i8, i8* %136, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = load i8*, i8** %15, align 8
  %148 = getelementptr inbounds i8, i8* %147, i64 2
  store i8 %146, i8* %148, align 1
  %149 = load i8*, i8** %15, align 8
  %150 = getelementptr inbounds i8, i8* %149, i64 3
  store i8* %150, i8** %15, align 8
  br label %151

151:                                              ; preds = %83
  %152 = load i32, i32* %19, align 4
  %153 = add i32 %152, 1
  store i32 %153, i32* %19, align 4
  br label %79

154:                                              ; preds = %79
  br label %48

155:                                              ; preds = %48
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @build_ycc_rgb_table(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_color_deconverter*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %6 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %6, i32 0, i32 82
  %8 = load %struct.jpeg_color_deconverter.486*, %struct.jpeg_color_deconverter.486** %7, align 8
  %9 = bitcast %struct.jpeg_color_deconverter.486* %8 to %struct.my_color_deconverter*
  store %struct.my_color_deconverter* %9, %struct.my_color_deconverter** %3, align 8
  %10 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %10, i32 0, i32 1
  %12 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %12, i32 0, i32 0
  %14 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %13, align 8
  %15 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %16 = bitcast %struct.jpeg_decompress_struct.469* %15 to %struct.jpeg_common_struct*
  %17 = call i8* %14(%struct.jpeg_common_struct* %16, i32 1, i64 1024)
  %18 = bitcast i8* %17 to i32*
  %19 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %3, align 8
  %20 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %19, i32 0, i32 1
  store i32* %18, i32** %20, align 8
  %21 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %21, i32 0, i32 1
  %23 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %23, i32 0, i32 0
  %25 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %24, align 8
  %26 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %27 = bitcast %struct.jpeg_decompress_struct.469* %26 to %struct.jpeg_common_struct*
  %28 = call i8* %25(%struct.jpeg_common_struct* %27, i32 1, i64 1024)
  %29 = bitcast i8* %28 to i32*
  %30 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %3, align 8
  %31 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %30, i32 0, i32 2
  store i32* %29, i32** %31, align 8
  %32 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %32, i32 0, i32 1
  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %33, align 8
  %35 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %34, i32 0, i32 0
  %36 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %35, align 8
  %37 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %38 = bitcast %struct.jpeg_decompress_struct.469* %37 to %struct.jpeg_common_struct*
  %39 = call i8* %36(%struct.jpeg_common_struct* %38, i32 1, i64 2048)
  %40 = bitcast i8* %39 to i64*
  %41 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %3, align 8
  %42 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %41, i32 0, i32 3
  store i64* %40, i64** %42, align 8
  %43 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %43, i32 0, i32 1
  %45 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %45, i32 0, i32 0
  %47 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %46, align 8
  %48 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %49 = bitcast %struct.jpeg_decompress_struct.469* %48 to %struct.jpeg_common_struct*
  %50 = call i8* %47(%struct.jpeg_common_struct* %49, i32 1, i64 2048)
  %51 = bitcast i8* %50 to i64*
  %52 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %3, align 8
  %53 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %52, i32 0, i32 4
  store i64* %51, i64** %53, align 8
  store i32 0, i32* %4, align 4
  store i64 -128, i64* %5, align 8
  br label %54

54:                                               ; preds = %97, %1
  %55 = load i32, i32* %4, align 4
  %56 = icmp sle i32 %55, 255
  br i1 %56, label %57, label %102

57:                                               ; preds = %54
  %58 = load i64, i64* %5, align 8
  %59 = mul nsw i64 91881, %58
  %60 = add nsw i64 %59, 32768
  %61 = ashr i64 %60, 16
  %62 = trunc i64 %61 to i32
  %63 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %3, align 8
  %64 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %63, i32 0, i32 1
  %65 = load i32*, i32** %64, align 8
  %66 = load i32, i32* %4, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %65, i64 %67
  store i32 %62, i32* %68, align 4
  %69 = load i64, i64* %5, align 8
  %70 = mul nsw i64 116130, %69
  %71 = add nsw i64 %70, 32768
  %72 = ashr i64 %71, 16
  %73 = trunc i64 %72 to i32
  %74 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %3, align 8
  %75 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %74, i32 0, i32 2
  %76 = load i32*, i32** %75, align 8
  %77 = load i32, i32* %4, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i32, i32* %76, i64 %78
  store i32 %73, i32* %79, align 4
  %80 = load i64, i64* %5, align 8
  %81 = mul nsw i64 -46802, %80
  %82 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %3, align 8
  %83 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %82, i32 0, i32 3
  %84 = load i64*, i64** %83, align 8
  %85 = load i32, i32* %4, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i64, i64* %84, i64 %86
  store i64 %81, i64* %87, align 8
  %88 = load i64, i64* %5, align 8
  %89 = mul nsw i64 -22554, %88
  %90 = add nsw i64 %89, 32768
  %91 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %3, align 8
  %92 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %91, i32 0, i32 4
  %93 = load i64*, i64** %92, align 8
  %94 = load i32, i32* %4, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i64, i64* %93, i64 %95
  store i64 %90, i64* %96, align 8
  br label %97

97:                                               ; preds = %57
  %98 = load i32, i32* %4, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %4, align 4
  %100 = load i64, i64* %5, align 8
  %101 = add nsw i64 %100, 1
  store i64 %101, i64* %5, align 8
  br label %54

102:                                              ; preds = %54
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @null_convert.46(%struct.jpeg_decompress_struct.469* %0, i8*** %1, i32 %2, i8** %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %7 = alloca i8***, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %6, align 8
  store i8*** %1, i8**** %7, align 8
  store i32 %2, i32* %8, align 4
  store i8** %3, i8*** %9, align 8
  store i32 %4, i32* %10, align 4
  %17 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %6, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %17, i32 0, i32 8
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %14, align 4
  %20 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %6, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %20, i32 0, i32 26
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %15, align 4
  br label %23

23:                                               ; preds = %68, %5
  %24 = load i32, i32* %10, align 4
  %25 = add nsw i32 %24, -1
  store i32 %25, i32* %10, align 4
  %26 = icmp sge i32 %25, 0
  br i1 %26, label %27, label %73

27:                                               ; preds = %23
  store i32 0, i32* %16, align 4
  br label %28

28:                                               ; preds = %65, %27
  %29 = load i32, i32* %16, align 4
  %30 = load i32, i32* %14, align 4
  %31 = icmp slt i32 %29, %30
  br i1 %31, label %32, label %68

32:                                               ; preds = %28
  %33 = load i8***, i8**** %7, align 8
  %34 = load i32, i32* %16, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8**, i8*** %33, i64 %35
  %37 = load i8**, i8*** %36, align 8
  %38 = load i32, i32* %8, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8*, i8** %37, i64 %39
  %41 = load i8*, i8** %40, align 8
  store i8* %41, i8** %11, align 8
  %42 = load i8**, i8*** %9, align 8
  %43 = getelementptr inbounds i8*, i8** %42, i64 0
  %44 = load i8*, i8** %43, align 8
  %45 = load i32, i32* %16, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  store i8* %47, i8** %12, align 8
  %48 = load i32, i32* %15, align 4
  store i32 %48, i32* %13, align 4
  br label %49

49:                                               ; preds = %61, %32
  %50 = load i32, i32* %13, align 4
  %51 = icmp ugt i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %49
  %53 = load i8*, i8** %11, align 8
  %54 = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %54, i8** %11, align 8
  %55 = load i8, i8* %53, align 1
  %56 = load i8*, i8** %12, align 8
  store i8 %55, i8* %56, align 1
  %57 = load i32, i32* %14, align 4
  %58 = load i8*, i8** %12, align 8
  %59 = sext i32 %57 to i64
  %60 = getelementptr inbounds i8, i8* %58, i64 %59
  store i8* %60, i8** %12, align 8
  br label %61

61:                                               ; preds = %52
  %62 = load i32, i32* %13, align 4
  %63 = add i32 %62, -1
  store i32 %63, i32* %13, align 4
  br label %49

64:                                               ; preds = %49
  br label %65

65:                                               ; preds = %64
  %66 = load i32, i32* %16, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %16, align 4
  br label %28

68:                                               ; preds = %28
  %69 = load i32, i32* %8, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %8, align 4
  %71 = load i8**, i8*** %9, align 8
  %72 = getelementptr inbounds i8*, i8** %71, i32 1
  store i8** %72, i8*** %9, align 8
  br label %23

73:                                               ; preds = %23
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @ycck_cmyk_convert(%struct.jpeg_decompress_struct.469* %0, i8*** %1, i32 %2, i8** %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %7 = alloca i8***, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.my_color_deconverter*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i32*, align 8
  %24 = alloca i32*, align 8
  %25 = alloca i64*, align 8
  %26 = alloca i64*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %6, align 8
  store i8*** %1, i8**** %7, align 8
  store i32 %2, i32* %8, align 4
  store i8** %3, i8*** %9, align 8
  store i32 %4, i32* %10, align 4
  %27 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %6, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %27, i32 0, i32 82
  %29 = load %struct.jpeg_color_deconverter.486*, %struct.jpeg_color_deconverter.486** %28, align 8
  %30 = bitcast %struct.jpeg_color_deconverter.486* %29 to %struct.my_color_deconverter*
  store %struct.my_color_deconverter* %30, %struct.my_color_deconverter** %11, align 8
  %31 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %6, align 8
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %31, i32 0, i32 26
  %33 = load i32, i32* %32, align 8
  store i32 %33, i32* %21, align 4
  %34 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %6, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %34, i32 0, i32 61
  %36 = load i8*, i8** %35, align 8
  store i8* %36, i8** %22, align 8
  %37 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %11, align 8
  %38 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %37, i32 0, i32 1
  %39 = load i32*, i32** %38, align 8
  store i32* %39, i32** %23, align 8
  %40 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %11, align 8
  %41 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %40, i32 0, i32 2
  %42 = load i32*, i32** %41, align 8
  store i32* %42, i32** %24, align 8
  %43 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %11, align 8
  %44 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %43, i32 0, i32 3
  %45 = load i64*, i64** %44, align 8
  store i64* %45, i64** %25, align 8
  %46 = load %struct.my_color_deconverter*, %struct.my_color_deconverter** %11, align 8
  %47 = getelementptr inbounds %struct.my_color_deconverter, %struct.my_color_deconverter* %46, i32 0, i32 4
  %48 = load i64*, i64** %47, align 8
  store i64* %48, i64** %26, align 8
  br label %49

49:                                               ; preds = %172, %5
  %50 = load i32, i32* %10, align 4
  %51 = add nsw i32 %50, -1
  store i32 %51, i32* %10, align 4
  %52 = icmp sge i32 %51, 0
  br i1 %52, label %53, label %173

53:                                               ; preds = %49
  %54 = load i8***, i8**** %7, align 8
  %55 = getelementptr inbounds i8**, i8*** %54, i64 0
  %56 = load i8**, i8*** %55, align 8
  %57 = load i32, i32* %8, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i8*, i8** %56, i64 %58
  %60 = load i8*, i8** %59, align 8
  store i8* %60, i8** %16, align 8
  %61 = load i8***, i8**** %7, align 8
  %62 = getelementptr inbounds i8**, i8*** %61, i64 1
  %63 = load i8**, i8*** %62, align 8
  %64 = load i32, i32* %8, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i8*, i8** %63, i64 %65
  %67 = load i8*, i8** %66, align 8
  store i8* %67, i8** %17, align 8
  %68 = load i8***, i8**** %7, align 8
  %69 = getelementptr inbounds i8**, i8*** %68, i64 2
  %70 = load i8**, i8*** %69, align 8
  %71 = load i32, i32* %8, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8*, i8** %70, i64 %72
  %74 = load i8*, i8** %73, align 8
  store i8* %74, i8** %18, align 8
  %75 = load i8***, i8**** %7, align 8
  %76 = getelementptr inbounds i8**, i8*** %75, i64 3
  %77 = load i8**, i8*** %76, align 8
  %78 = load i32, i32* %8, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i8*, i8** %77, i64 %79
  %81 = load i8*, i8** %80, align 8
  store i8* %81, i8** %19, align 8
  %82 = load i32, i32* %8, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %8, align 4
  %84 = load i8**, i8*** %9, align 8
  %85 = getelementptr inbounds i8*, i8** %84, i32 1
  store i8** %85, i8*** %9, align 8
  %86 = load i8*, i8** %84, align 8
  store i8* %86, i8** %15, align 8
  store i32 0, i32* %20, align 4
  br label %87

87:                                               ; preds = %169, %53
  %88 = load i32, i32* %20, align 4
  %89 = load i32, i32* %21, align 4
  %90 = icmp ult i32 %88, %89
  br i1 %90, label %91, label %172

91:                                               ; preds = %87
  %92 = load i8*, i8** %16, align 8
  %93 = load i32, i32* %20, align 4
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %92, i64 %94
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  store i32 %97, i32* %12, align 4
  %98 = load i8*, i8** %17, align 8
  %99 = load i32, i32* %20, align 4
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds i8, i8* %98, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  store i32 %103, i32* %13, align 4
  %104 = load i8*, i8** %18, align 8
  %105 = load i32, i32* %20, align 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i8, i8* %104, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  store i32 %109, i32* %14, align 4
  %110 = load i8*, i8** %22, align 8
  %111 = load i32, i32* %12, align 4
  %112 = load i32*, i32** %23, align 8
  %113 = load i32, i32* %14, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %112, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = add nsw i32 %111, %116
  %118 = sub nsw i32 255, %117
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8, i8* %110, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = load i8*, i8** %15, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 0
  store i8 %121, i8* %123, align 1
  %124 = load i8*, i8** %22, align 8
  %125 = load i32, i32* %12, align 4
  %126 = load i64*, i64** %26, align 8
  %127 = load i32, i32* %13, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i64, i64* %126, i64 %128
  %130 = load i64, i64* %129, align 8
  %131 = load i64*, i64** %25, align 8
  %132 = load i32, i32* %14, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i64, i64* %131, i64 %133
  %135 = load i64, i64* %134, align 8
  %136 = add nsw i64 %130, %135
  %137 = ashr i64 %136, 16
  %138 = trunc i64 %137 to i32
  %139 = add nsw i32 %125, %138
  %140 = sub nsw i32 255, %139
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i8, i8* %124, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = load i8*, i8** %15, align 8
  %145 = getelementptr inbounds i8, i8* %144, i64 1
  store i8 %143, i8* %145, align 1
  %146 = load i8*, i8** %22, align 8
  %147 = load i32, i32* %12, align 4
  %148 = load i32*, i32** %24, align 8
  %149 = load i32, i32* %13, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i32, i32* %148, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = add nsw i32 %147, %152
  %154 = sub nsw i32 255, %153
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i8, i8* %146, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = load i8*, i8** %15, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 2
  store i8 %157, i8* %159, align 1
  %160 = load i8*, i8** %19, align 8
  %161 = load i32, i32* %20, align 4
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds i8, i8* %160, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = load i8*, i8** %15, align 8
  %166 = getelementptr inbounds i8, i8* %165, i64 3
  store i8 %164, i8* %166, align 1
  %167 = load i8*, i8** %15, align 8
  %168 = getelementptr inbounds i8, i8* %167, i64 4
  store i8* %168, i8** %15, align 8
  br label %169

169:                                              ; preds = %91
  %170 = load i32, i32* %20, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %20, align 4
  br label %87

172:                                              ; preds = %87
  br label %49

173:                                              ; preds = %49
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_inverse_dct(%struct.jpeg_decompress_struct.492* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.492*, align 8
  %3 = alloca %struct.my_idct_controller*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_decompress_struct.492* %0, %struct.jpeg_decompress_struct.492** %2, align 8
  %6 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct.492, %struct.jpeg_decompress_struct.492* %6, i32 0, i32 1
  %8 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %7, align 8
  %9 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %8, i32 0, i32 0
  %10 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %9, align 8
  %11 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %12 = bitcast %struct.jpeg_decompress_struct.492* %11 to %struct.jpeg_common_struct*
  %13 = call i8* %10(%struct.jpeg_common_struct* %12, i32 1, i64 128)
  %14 = bitcast i8* %13 to %struct.my_idct_controller*
  store %struct.my_idct_controller* %14, %struct.my_idct_controller** %3, align 8
  %15 = load %struct.my_idct_controller*, %struct.my_idct_controller** %3, align 8
  %16 = bitcast %struct.my_idct_controller* %15 to %struct.jpeg_inverse_dct.507*
  %17 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct.492, %struct.jpeg_decompress_struct.492* %17, i32 0, i32 80
  store %struct.jpeg_inverse_dct.507* %16, %struct.jpeg_inverse_dct.507** %18, align 8
  %19 = load %struct.my_idct_controller*, %struct.my_idct_controller** %3, align 8
  %20 = getelementptr inbounds %struct.my_idct_controller, %struct.my_idct_controller* %19, i32 0, i32 0
  %21 = getelementptr inbounds %struct.jpeg_inverse_dct.507, %struct.jpeg_inverse_dct.507* %20, i32 0, i32 0
  %22 = bitcast {}** %21 to void (%struct.jpeg_decompress_struct.492*)**
  store void (%struct.jpeg_decompress_struct.492*)* @start_pass, void (%struct.jpeg_decompress_struct.492*)** %22, align 8
  store i32 0, i32* %4, align 4
  %23 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct.492, %struct.jpeg_decompress_struct.492* %23, i32 0, i32 43
  %25 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %24, align 8
  store %struct.jpeg_component_info* %25, %struct.jpeg_component_info** %5, align 8
  br label %26

26:                                               ; preds = %51, %1
  %27 = load i32, i32* %4, align 4
  %28 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct.492, %struct.jpeg_decompress_struct.492* %28, i32 0, i32 8
  %30 = load i32, i32* %29, align 8
  %31 = icmp slt i32 %27, %30
  br i1 %31, label %32, label %56

32:                                               ; preds = %26
  %33 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct.492, %struct.jpeg_decompress_struct.492* %33, i32 0, i32 1
  %35 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %34, align 8
  %36 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %35, i32 0, i32 0
  %37 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %36, align 8
  %38 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %39 = bitcast %struct.jpeg_decompress_struct.492* %38 to %struct.jpeg_common_struct*
  %40 = call i8* %37(%struct.jpeg_common_struct* %39, i32 1, i64 256)
  %41 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %42 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %41, i32 0, i32 20
  store i8* %40, i8** %42, align 8
  %43 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %44 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %43, i32 0, i32 20
  %45 = load i8*, i8** %44, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %45, i8 0, i64 256, i1 false)
  %46 = load %struct.my_idct_controller*, %struct.my_idct_controller** %3, align 8
  %47 = getelementptr inbounds %struct.my_idct_controller, %struct.my_idct_controller* %46, i32 0, i32 1
  %48 = load i32, i32* %4, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [10 x i32], [10 x i32]* %47, i64 0, i64 %49
  store i32 -1, i32* %50, align 4
  br label %51

51:                                               ; preds = %32
  %52 = load i32, i32* %4, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %4, align 4
  %54 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %55 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %54, i32 1
  store %struct.jpeg_component_info* %55, %struct.jpeg_component_info** %5, align 8
  br label %26

56:                                               ; preds = %26
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass(%struct.jpeg_decompress_struct.492* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.492*, align 8
  %3 = alloca %struct.my_idct_controller*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca i32, align 4
  %8 = alloca void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)*, align 8
  %9 = alloca %struct.JQUANT_TBL*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca float*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.492* %0, %struct.jpeg_decompress_struct.492** %2, align 8
  %15 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.492, %struct.jpeg_decompress_struct.492* %15, i32 0, i32 80
  %17 = load %struct.jpeg_inverse_dct.507*, %struct.jpeg_inverse_dct.507** %16, align 8
  %18 = bitcast %struct.jpeg_inverse_dct.507* %17 to %struct.my_idct_controller*
  store %struct.my_idct_controller* %18, %struct.my_idct_controller** %3, align 8
  store i32 0, i32* %7, align 4
  store void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)* null, void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)** %8, align 8
  store i32 0, i32* %4, align 4
  %19 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.492, %struct.jpeg_decompress_struct.492* %19, i32 0, i32 43
  %21 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  store %struct.jpeg_component_info* %21, %struct.jpeg_component_info** %6, align 8
  br label %22

22:                                               ; preds = %228, %1
  %23 = load i32, i32* %4, align 4
  %24 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct.492, %struct.jpeg_decompress_struct.492* %24, i32 0, i32 8
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %23, %26
  br i1 %27, label %28, label %233

28:                                               ; preds = %22
  %29 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %30 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %29, i32 0, i32 9
  %31 = load i32, i32* %30, align 4
  switch i32 %31, label %55 [
    i32 1, label %32
    i32 2, label %33
    i32 4, label %34
    i32 8, label %35
  ]

32:                                               ; preds = %28
  store void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)* bitcast (void (%struct.jpeg_decompress_struct.832*, %struct.jpeg_component_info*, i16*, i8**, i32)* @jpeg_idct_1x1 to void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)*), void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)** %8, align 8
  store i32 0, i32* %7, align 4
  br label %76

33:                                               ; preds = %28
  store void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)* bitcast (void (%struct.jpeg_decompress_struct.832*, %struct.jpeg_component_info*, i16*, i8**, i32)* @jpeg_idct_2x2 to void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)*), void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)** %8, align 8
  store i32 0, i32* %7, align 4
  br label %76

34:                                               ; preds = %28
  store void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)* bitcast (void (%struct.jpeg_decompress_struct.832*, %struct.jpeg_component_info*, i16*, i8**, i32)* @jpeg_idct_4x4 to void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)*), void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)** %8, align 8
  store i32 0, i32* %7, align 4
  br label %76

35:                                               ; preds = %28
  %36 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct.492, %struct.jpeg_decompress_struct.492* %36, i32 0, i32 16
  %38 = load i32, i32* %37, align 8
  switch i32 %38, label %42 [
    i32 0, label %39
    i32 1, label %40
    i32 2, label %41
  ]

39:                                               ; preds = %35
  store void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)* bitcast (void (%struct.jpeg_decompress_struct.809*, %struct.jpeg_component_info*, i16*, i8**, i32)* @jpeg_idct_islow to void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)*), void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)** %8, align 8
  store i32 0, i32* %7, align 4
  br label %54

40:                                               ; preds = %35
  store void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)* bitcast (void (%struct.jpeg_decompress_struct.786*, %struct.jpeg_component_info*, i16*, i8**, i32)* @jpeg_idct_ifast to void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)*), void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)** %8, align 8
  store i32 1, i32* %7, align 4
  br label %54

41:                                               ; preds = %35
  store void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)* bitcast (void (%struct.jpeg_decompress_struct.763*, %struct.jpeg_component_info*, i16*, i8**, i32)* @jpeg_idct_float to void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)*), void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)** %8, align 8
  store i32 2, i32* %7, align 4
  br label %54

42:                                               ; preds = %35
  %43 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct.492, %struct.jpeg_decompress_struct.492* %43, i32 0, i32 0
  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i32 0, i32 5
  store i32 47, i32* %46, align 8
  %47 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct.492, %struct.jpeg_decompress_struct.492* %47, i32 0, i32 0
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i32 0, i32 0
  %51 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %50, align 8
  %52 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %53 = bitcast %struct.jpeg_decompress_struct.492* %52 to %struct.jpeg_common_struct*
  call void %51(%struct.jpeg_common_struct* %53)
  br label %54

54:                                               ; preds = %42, %41, %40, %39
  br label %76

55:                                               ; preds = %28
  %56 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %57 = getelementptr inbounds %struct.jpeg_decompress_struct.492, %struct.jpeg_decompress_struct.492* %56, i32 0, i32 0
  %58 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %57, align 8
  %59 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %58, i32 0, i32 5
  store i32 6, i32* %59, align 8
  %60 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %61 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %60, i32 0, i32 9
  %62 = load i32, i32* %61, align 4
  %63 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %64 = getelementptr inbounds %struct.jpeg_decompress_struct.492, %struct.jpeg_decompress_struct.492* %63, i32 0, i32 0
  %65 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %64, align 8
  %66 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %65, i32 0, i32 6
  %67 = bitcast %union.anon* %66 to [8 x i32]*
  %68 = getelementptr inbounds [8 x i32], [8 x i32]* %67, i64 0, i64 0
  store i32 %62, i32* %68, align 4
  %69 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %70 = getelementptr inbounds %struct.jpeg_decompress_struct.492, %struct.jpeg_decompress_struct.492* %69, i32 0, i32 0
  %71 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %70, align 8
  %72 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %71, i32 0, i32 0
  %73 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %72, align 8
  %74 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %75 = bitcast %struct.jpeg_decompress_struct.492* %74 to %struct.jpeg_common_struct*
  call void %73(%struct.jpeg_common_struct* %75)
  br label %76

76:                                               ; preds = %55, %54, %34, %33, %32
  %77 = load void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)*, void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)** %8, align 8
  %78 = load %struct.my_idct_controller*, %struct.my_idct_controller** %3, align 8
  %79 = getelementptr inbounds %struct.my_idct_controller, %struct.my_idct_controller* %78, i32 0, i32 0
  %80 = getelementptr inbounds %struct.jpeg_inverse_dct.507, %struct.jpeg_inverse_dct.507* %79, i32 0, i32 1
  %81 = load i32, i32* %4, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [10 x void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)*], [10 x void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)*]* %80, i64 0, i64 %82
  store void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)* %77, void (%struct.jpeg_decompress_struct.492*, %struct.jpeg_component_info*, i16*, i8**, i32)** %83, align 8
  %84 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %85 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %84, i32 0, i32 12
  %86 = load i32, i32* %85, align 8
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %88, label %97

88:                                               ; preds = %76
  %89 = load %struct.my_idct_controller*, %struct.my_idct_controller** %3, align 8
  %90 = getelementptr inbounds %struct.my_idct_controller, %struct.my_idct_controller* %89, i32 0, i32 1
  %91 = load i32, i32* %4, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [10 x i32], [10 x i32]* %90, i64 0, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = load i32, i32* %7, align 4
  %96 = icmp eq i32 %94, %95
  br i1 %96, label %97, label %98

97:                                               ; preds = %88, %76
  br label %228

98:                                               ; preds = %88
  %99 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %100 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %99, i32 0, i32 19
  %101 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %100, align 8
  store %struct.JQUANT_TBL* %101, %struct.JQUANT_TBL** %9, align 8
  %102 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %103 = icmp eq %struct.JQUANT_TBL* %102, null
  br i1 %103, label %104, label %105

104:                                              ; preds = %98
  br label %228

105:                                              ; preds = %98
  %106 = load i32, i32* %7, align 4
  %107 = load %struct.my_idct_controller*, %struct.my_idct_controller** %3, align 8
  %108 = getelementptr inbounds %struct.my_idct_controller, %struct.my_idct_controller* %107, i32 0, i32 1
  %109 = load i32, i32* %4, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [10 x i32], [10 x i32]* %108, i64 0, i64 %110
  store i32 %106, i32* %111, align 4
  %112 = load i32, i32* %7, align 4
  switch i32 %112, label %215 [
    i32 0, label %113
    i32 1, label %137
    i32 2, label %170
  ]

113:                                              ; preds = %105
  %114 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %115 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %114, i32 0, i32 20
  %116 = load i8*, i8** %115, align 8
  %117 = bitcast i8* %116 to i32*
  store i32* %117, i32** %10, align 8
  store i32 0, i32* %5, align 4
  br label %118

118:                                              ; preds = %133, %113
  %119 = load i32, i32* %5, align 4
  %120 = icmp slt i32 %119, 64
  br i1 %120, label %121, label %136

121:                                              ; preds = %118
  %122 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %123 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %122, i32 0, i32 0
  %124 = load i32, i32* %5, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [64 x i16], [64 x i16]* %123, i64 0, i64 %125
  %127 = load i16, i16* %126, align 2
  %128 = zext i16 %127 to i32
  %129 = load i32*, i32** %10, align 8
  %130 = load i32, i32* %5, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i32, i32* %129, i64 %131
  store i32 %128, i32* %132, align 4
  br label %133

133:                                              ; preds = %121
  %134 = load i32, i32* %5, align 4
  %135 = add nsw i32 %134, 1
  store i32 %135, i32* %5, align 4
  br label %118

136:                                              ; preds = %118
  br label %227

137:                                              ; preds = %105
  %138 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %139 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %138, i32 0, i32 20
  %140 = load i8*, i8** %139, align 8
  %141 = bitcast i8* %140 to i32*
  store i32* %141, i32** %11, align 8
  store i32 0, i32* %5, align 4
  br label %142

142:                                              ; preds = %166, %137
  %143 = load i32, i32* %5, align 4
  %144 = icmp slt i32 %143, 64
  br i1 %144, label %145, label %169

145:                                              ; preds = %142
  %146 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %147 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %146, i32 0, i32 0
  %148 = load i32, i32* %5, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [64 x i16], [64 x i16]* %147, i64 0, i64 %149
  %151 = load i16, i16* %150, align 2
  %152 = zext i16 %151 to i64
  %153 = load i32, i32* %5, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds [64 x i16], [64 x i16]* @start_pass.aanscales, i64 0, i64 %154
  %156 = load i16, i16* %155, align 2
  %157 = sext i16 %156 to i64
  %158 = mul nsw i64 %152, %157
  %159 = add nsw i64 %158, 2048
  %160 = ashr i64 %159, 12
  %161 = trunc i64 %160 to i32
  %162 = load i32*, i32** %11, align 8
  %163 = load i32, i32* %5, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i32, i32* %162, i64 %164
  store i32 %161, i32* %165, align 4
  br label %166

166:                                              ; preds = %145
  %167 = load i32, i32* %5, align 4
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %5, align 4
  br label %142

169:                                              ; preds = %142
  br label %227

170:                                              ; preds = %105
  %171 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %172 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %171, i32 0, i32 20
  %173 = load i8*, i8** %172, align 8
  %174 = bitcast i8* %173 to float*
  store float* %174, float** %12, align 8
  store i32 0, i32* %5, align 4
  store i32 0, i32* %13, align 4
  br label %175

175:                                              ; preds = %211, %170
  %176 = load i32, i32* %13, align 4
  %177 = icmp slt i32 %176, 8
  br i1 %177, label %178, label %214

178:                                              ; preds = %175
  store i32 0, i32* %14, align 4
  br label %179

179:                                              ; preds = %207, %178
  %180 = load i32, i32* %14, align 4
  %181 = icmp slt i32 %180, 8
  br i1 %181, label %182, label %210

182:                                              ; preds = %179
  %183 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %184 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %183, i32 0, i32 0
  %185 = load i32, i32* %5, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [64 x i16], [64 x i16]* %184, i64 0, i64 %186
  %188 = load i16, i16* %187, align 2
  %189 = uitofp i16 %188 to double
  %190 = load i32, i32* %13, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds [8 x double], [8 x double]* @start_pass.aanscalefactor, i64 0, i64 %191
  %193 = load double, double* %192, align 8
  %194 = fmul double %189, %193
  %195 = load i32, i32* %14, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds [8 x double], [8 x double]* @start_pass.aanscalefactor, i64 0, i64 %196
  %198 = load double, double* %197, align 8
  %199 = fmul double %194, %198
  %200 = fptrunc double %199 to float
  %201 = load float*, float** %12, align 8
  %202 = load i32, i32* %5, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds float, float* %201, i64 %203
  store float %200, float* %204, align 4
  %205 = load i32, i32* %5, align 4
  %206 = add nsw i32 %205, 1
  store i32 %206, i32* %5, align 4
  br label %207

207:                                              ; preds = %182
  %208 = load i32, i32* %14, align 4
  %209 = add nsw i32 %208, 1
  store i32 %209, i32* %14, align 4
  br label %179

210:                                              ; preds = %179
  br label %211

211:                                              ; preds = %210
  %212 = load i32, i32* %13, align 4
  %213 = add nsw i32 %212, 1
  store i32 %213, i32* %13, align 4
  br label %175

214:                                              ; preds = %175
  br label %227

215:                                              ; preds = %105
  %216 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %217 = getelementptr inbounds %struct.jpeg_decompress_struct.492, %struct.jpeg_decompress_struct.492* %216, i32 0, i32 0
  %218 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %217, align 8
  %219 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %218, i32 0, i32 5
  store i32 47, i32* %219, align 8
  %220 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %221 = getelementptr inbounds %struct.jpeg_decompress_struct.492, %struct.jpeg_decompress_struct.492* %220, i32 0, i32 0
  %222 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %221, align 8
  %223 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %222, i32 0, i32 0
  %224 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %223, align 8
  %225 = load %struct.jpeg_decompress_struct.492*, %struct.jpeg_decompress_struct.492** %2, align 8
  %226 = bitcast %struct.jpeg_decompress_struct.492* %225 to %struct.jpeg_common_struct*
  call void %224(%struct.jpeg_common_struct* %226)
  br label %227

227:                                              ; preds = %215, %214, %169, %136
  br label %228

228:                                              ; preds = %227, %104, %97
  %229 = load i32, i32* %4, align 4
  %230 = add nsw i32 %229, 1
  store i32 %230, i32* %4, align 4
  %231 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %232 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %231, i32 1
  store %struct.jpeg_component_info* %232, %struct.jpeg_component_info** %6, align 8
  br label %22

233:                                              ; preds = %22
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_make_d_derived_tbl(%struct.jpeg_decompress_struct* %0, %struct.JHUFF_TBL* %1, %struct.d_derived_tbl** %2) #0 {
  %4 = alloca %struct.jpeg_decompress_struct*, align 8
  %5 = alloca %struct.JHUFF_TBL*, align 8
  %6 = alloca %struct.d_derived_tbl**, align 8
  %7 = alloca %struct.d_derived_tbl*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca [257 x i8], align 16
  %15 = alloca [257 x i32], align 16
  %16 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %4, align 8
  store %struct.JHUFF_TBL* %1, %struct.JHUFF_TBL** %5, align 8
  store %struct.d_derived_tbl** %2, %struct.d_derived_tbl*** %6, align 8
  %17 = load %struct.d_derived_tbl**, %struct.d_derived_tbl*** %6, align 8
  %18 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %17, align 8
  %19 = icmp eq %struct.d_derived_tbl* %18, null
  br i1 %19, label %20, label %31

20:                                               ; preds = %3
  %21 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %21, i32 0, i32 1
  %23 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %23, i32 0, i32 0
  %25 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %24, align 8
  %26 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %27 = bitcast %struct.jpeg_decompress_struct* %26 to %struct.jpeg_common_struct*
  %28 = call i8* %25(%struct.jpeg_common_struct* %27, i32 1, i64 1640)
  %29 = bitcast i8* %28 to %struct.d_derived_tbl*
  %30 = load %struct.d_derived_tbl**, %struct.d_derived_tbl*** %6, align 8
  store %struct.d_derived_tbl* %29, %struct.d_derived_tbl** %30, align 8
  br label %31

31:                                               ; preds = %20, %3
  %32 = load %struct.d_derived_tbl**, %struct.d_derived_tbl*** %6, align 8
  %33 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %32, align 8
  store %struct.d_derived_tbl* %33, %struct.d_derived_tbl** %7, align 8
  %34 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %5, align 8
  %35 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %7, align 8
  %36 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %35, i32 0, i32 3
  store %struct.JHUFF_TBL* %34, %struct.JHUFF_TBL** %36, align 8
  store i32 0, i32* %8, align 4
  store i32 1, i32* %10, align 4
  br label %37

37:                                               ; preds = %62, %31
  %38 = load i32, i32* %10, align 4
  %39 = icmp sle i32 %38, 16
  br i1 %39, label %40, label %65

40:                                               ; preds = %37
  store i32 1, i32* %9, align 4
  br label %41

41:                                               ; preds = %58, %40
  %42 = load i32, i32* %9, align 4
  %43 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %5, align 8
  %44 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %43, i32 0, i32 0
  %45 = load i32, i32* %10, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [17 x i8], [17 x i8]* %44, i64 0, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = icmp sle i32 %42, %49
  br i1 %50, label %51, label %61

51:                                               ; preds = %41
  %52 = load i32, i32* %10, align 4
  %53 = trunc i32 %52 to i8
  %54 = load i32, i32* %8, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %8, align 4
  %56 = sext i32 %54 to i64
  %57 = getelementptr inbounds [257 x i8], [257 x i8]* %14, i64 0, i64 %56
  store i8 %53, i8* %57, align 1
  br label %58

58:                                               ; preds = %51
  %59 = load i32, i32* %9, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %9, align 4
  br label %41

61:                                               ; preds = %41
  br label %62

62:                                               ; preds = %61
  %63 = load i32, i32* %10, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %10, align 4
  br label %37

65:                                               ; preds = %37
  %66 = load i32, i32* %8, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [257 x i8], [257 x i8]* %14, i64 0, i64 %67
  store i8 0, i8* %68, align 1
  store i32 0, i32* %16, align 4
  %69 = getelementptr inbounds [257 x i8], [257 x i8]* %14, i64 0, i64 0
  %70 = load i8, i8* %69, align 16
  %71 = sext i8 %70 to i32
  store i32 %71, i32* %11, align 4
  store i32 0, i32* %8, align 4
  br label %72

72:                                               ; preds = %95, %65
  %73 = load i32, i32* %8, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [257 x i8], [257 x i8]* %14, i64 0, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = icmp ne i8 %76, 0
  br i1 %77, label %78, label %100

78:                                               ; preds = %72
  br label %79

79:                                               ; preds = %87, %78
  %80 = load i32, i32* %8, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [257 x i8], [257 x i8]* %14, i64 0, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = sext i8 %83 to i32
  %85 = load i32, i32* %11, align 4
  %86 = icmp eq i32 %84, %85
  br i1 %86, label %87, label %95

87:                                               ; preds = %79
  %88 = load i32, i32* %16, align 4
  %89 = load i32, i32* %8, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %8, align 4
  %91 = sext i32 %89 to i64
  %92 = getelementptr inbounds [257 x i32], [257 x i32]* %15, i64 0, i64 %91
  store i32 %88, i32* %92, align 4
  %93 = load i32, i32* %16, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %16, align 4
  br label %79

95:                                               ; preds = %79
  %96 = load i32, i32* %16, align 4
  %97 = shl i32 %96, 1
  store i32 %97, i32* %16, align 4
  %98 = load i32, i32* %11, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %11, align 4
  br label %72

100:                                              ; preds = %72
  store i32 0, i32* %8, align 4
  store i32 1, i32* %10, align 4
  br label %101

101:                                              ; preds = %156, %100
  %102 = load i32, i32* %10, align 4
  %103 = icmp sle i32 %102, 16
  br i1 %103, label %104, label %159

104:                                              ; preds = %101
  %105 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %5, align 8
  %106 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %105, i32 0, i32 0
  %107 = load i32, i32* %10, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [17 x i8], [17 x i8]* %106, i64 0, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = icmp ne i8 %110, 0
  br i1 %111, label %112, label %149

112:                                              ; preds = %104
  %113 = load i32, i32* %8, align 4
  %114 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %7, align 8
  %115 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %114, i32 0, i32 2
  %116 = load i32, i32* %10, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [17 x i32], [17 x i32]* %115, i64 0, i64 %117
  store i32 %113, i32* %118, align 4
  %119 = load i32, i32* %8, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds [257 x i32], [257 x i32]* %15, i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i64
  %124 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %7, align 8
  %125 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %124, i32 0, i32 0
  %126 = load i32, i32* %10, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [17 x i64], [17 x i64]* %125, i64 0, i64 %127
  store i64 %123, i64* %128, align 8
  %129 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %5, align 8
  %130 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %129, i32 0, i32 0
  %131 = load i32, i32* %10, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds [17 x i8], [17 x i8]* %130, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = load i32, i32* %8, align 4
  %137 = add nsw i32 %136, %135
  store i32 %137, i32* %8, align 4
  %138 = load i32, i32* %8, align 4
  %139 = sub nsw i32 %138, 1
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds [257 x i32], [257 x i32]* %15, i64 0, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %142 to i64
  %144 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %7, align 8
  %145 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %144, i32 0, i32 1
  %146 = load i32, i32* %10, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [18 x i64], [18 x i64]* %145, i64 0, i64 %147
  store i64 %143, i64* %148, align 8
  br label %155

149:                                              ; preds = %104
  %150 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %7, align 8
  %151 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %150, i32 0, i32 1
  %152 = load i32, i32* %10, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [18 x i64], [18 x i64]* %151, i64 0, i64 %153
  store i64 -1, i64* %154, align 8
  br label %155

155:                                              ; preds = %149, %112
  br label %156

156:                                              ; preds = %155
  %157 = load i32, i32* %10, align 4
  %158 = add nsw i32 %157, 1
  store i32 %158, i32* %10, align 4
  br label %101

159:                                              ; preds = %101
  %160 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %7, align 8
  %161 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %160, i32 0, i32 1
  %162 = getelementptr inbounds [18 x i64], [18 x i64]* %161, i64 0, i64 17
  store i64 1048575, i64* %162, align 8
  %163 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %7, align 8
  %164 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %163, i32 0, i32 4
  %165 = getelementptr inbounds [256 x i32], [256 x i32]* %164, i64 0, i64 0
  %166 = bitcast i32* %165 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 1024, i1 false)
  store i32 0, i32* %8, align 4
  store i32 1, i32* %10, align 4
  br label %167

167:                                              ; preds = %225, %159
  %168 = load i32, i32* %10, align 4
  %169 = icmp sle i32 %168, 8
  br i1 %169, label %170, label %228

170:                                              ; preds = %167
  store i32 1, i32* %9, align 4
  br label %171

171:                                              ; preds = %219, %170
  %172 = load i32, i32* %9, align 4
  %173 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %5, align 8
  %174 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %173, i32 0, i32 0
  %175 = load i32, i32* %10, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [17 x i8], [17 x i8]* %174, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = icmp sle i32 %172, %179
  br i1 %180, label %181, label %224

181:                                              ; preds = %171
  %182 = load i32, i32* %8, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [257 x i32], [257 x i32]* %15, i64 0, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = load i32, i32* %10, align 4
  %187 = sub nsw i32 8, %186
  %188 = shl i32 %185, %187
  store i32 %188, i32* %12, align 4
  %189 = load i32, i32* %10, align 4
  %190 = sub nsw i32 8, %189
  %191 = shl i32 1, %190
  store i32 %191, i32* %13, align 4
  br label %192

192:                                              ; preds = %215, %181
  %193 = load i32, i32* %13, align 4
  %194 = icmp sgt i32 %193, 0
  br i1 %194, label %195, label %218

195:                                              ; preds = %192
  %196 = load i32, i32* %10, align 4
  %197 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %7, align 8
  %198 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %197, i32 0, i32 4
  %199 = load i32, i32* %12, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds [256 x i32], [256 x i32]* %198, i64 0, i64 %200
  store i32 %196, i32* %201, align 4
  %202 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %5, align 8
  %203 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %202, i32 0, i32 1
  %204 = load i32, i32* %8, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [256 x i8], [256 x i8]* %203, i64 0, i64 %205
  %207 = load i8, i8* %206, align 1
  %208 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %7, align 8
  %209 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %208, i32 0, i32 5
  %210 = load i32, i32* %12, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds [256 x i8], [256 x i8]* %209, i64 0, i64 %211
  store i8 %207, i8* %212, align 1
  %213 = load i32, i32* %12, align 4
  %214 = add nsw i32 %213, 1
  store i32 %214, i32* %12, align 4
  br label %215

215:                                              ; preds = %195
  %216 = load i32, i32* %13, align 4
  %217 = add nsw i32 %216, -1
  store i32 %217, i32* %13, align 4
  br label %192

218:                                              ; preds = %192
  br label %219

219:                                              ; preds = %218
  %220 = load i32, i32* %9, align 4
  %221 = add nsw i32 %220, 1
  store i32 %221, i32* %9, align 4
  %222 = load i32, i32* %8, align 4
  %223 = add nsw i32 %222, 1
  store i32 %223, i32* %8, align 4
  br label %171

224:                                              ; preds = %171
  br label %225

225:                                              ; preds = %224
  %226 = load i32, i32* %10, align 4
  %227 = add nsw i32 %226, 1
  store i32 %227, i32* %10, align 4
  br label %167

228:                                              ; preds = %167
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @jpeg_fill_bit_buffer(%struct.bitread_working_state* %0, i64 %1, i32 %2, i32 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.bitread_working_state*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  store %struct.bitread_working_state* %0, %struct.bitread_working_state** %6, align 8
  store i64 %1, i64* %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %13 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %14 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  store i8* %15, i8** %10, align 8
  %16 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %17 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %16, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %11, align 8
  br label %19

19:                                               ; preds = %154, %4
  %20 = load i32, i32* %8, align 4
  %21 = icmp slt i32 %20, 25
  br i1 %21, label %22, label %162

22:                                               ; preds = %19
  %23 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %24 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %23, i32 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %22
  br label %120

28:                                               ; preds = %22
  %29 = load i64, i64* %11, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %60

31:                                               ; preds = %28
  %32 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %33 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %32, i32 0, i32 5
  %34 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %33, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %34, i32 0, i32 5
  %36 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %36, i32 0, i32 3
  %38 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %37, align 8
  %39 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %40 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %39, i32 0, i32 5
  %41 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %40, align 8
  %42 = call i32 %38(%struct.jpeg_decompress_struct* %41)
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %31
  store i32 0, i32* %5, align 4
  br label %175

45:                                               ; preds = %31
  %46 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %47 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %46, i32 0, i32 5
  %48 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %47, align 8
  %49 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %48, i32 0, i32 5
  %50 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %49, align 8
  %51 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %50, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  store i8* %52, i8** %10, align 8
  %53 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %54 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %53, i32 0, i32 5
  %55 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %54, align 8
  %56 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %55, i32 0, i32 5
  %57 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %56, align 8
  %58 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %57, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %11, align 8
  br label %60

60:                                               ; preds = %45, %28
  %61 = load i64, i64* %11, align 8
  %62 = add i64 %61, -1
  store i64 %62, i64* %11, align 8
  %63 = load i8*, i8** %10, align 8
  %64 = getelementptr inbounds i8, i8* %63, i32 1
  store i8* %64, i8** %10, align 8
  %65 = load i8, i8* %63, align 1
  %66 = zext i8 %65 to i32
  store i32 %66, i32* %12, align 4
  %67 = load i32, i32* %12, align 4
  %68 = icmp eq i32 %67, 255
  br i1 %68, label %69, label %154

69:                                               ; preds = %60
  br label %70

70:                                               ; preds = %109, %69
  %71 = load i64, i64* %11, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %102

73:                                               ; preds = %70
  %74 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %75 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %74, i32 0, i32 5
  %76 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %75, align 8
  %77 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %76, i32 0, i32 5
  %78 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %77, align 8
  %79 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %78, i32 0, i32 3
  %80 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %79, align 8
  %81 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %82 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %81, i32 0, i32 5
  %83 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %82, align 8
  %84 = call i32 %80(%struct.jpeg_decompress_struct* %83)
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %87, label %86

86:                                               ; preds = %73
  store i32 0, i32* %5, align 4
  br label %175

87:                                               ; preds = %73
  %88 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %89 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %88, i32 0, i32 5
  %90 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %89, align 8
  %91 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %90, i32 0, i32 5
  %92 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %91, align 8
  %93 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %92, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  store i8* %94, i8** %10, align 8
  %95 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %96 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %95, i32 0, i32 5
  %97 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %96, align 8
  %98 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %97, i32 0, i32 5
  %99 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %98, align 8
  %100 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %99, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %11, align 8
  br label %102

102:                                              ; preds = %87, %70
  %103 = load i64, i64* %11, align 8
  %104 = add i64 %103, -1
  store i64 %104, i64* %11, align 8
  %105 = load i8*, i8** %10, align 8
  %106 = getelementptr inbounds i8, i8* %105, i32 1
  store i8* %106, i8** %10, align 8
  %107 = load i8, i8* %105, align 1
  %108 = zext i8 %107 to i32
  store i32 %108, i32* %12, align 4
  br label %109

109:                                              ; preds = %102
  %110 = load i32, i32* %12, align 4
  %111 = icmp eq i32 %110, 255
  br i1 %111, label %70, label %112

112:                                              ; preds = %109
  %113 = load i32, i32* %12, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  store i32 255, i32* %12, align 4
  br label %153

116:                                              ; preds = %112
  %117 = load i32, i32* %12, align 4
  %118 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %119 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %118, i32 0, i32 2
  store i32 %117, i32* %119, align 8
  br label %120

120:                                              ; preds = %116, %27
  %121 = load i32, i32* %8, align 4
  %122 = load i32, i32* %9, align 4
  %123 = icmp sge i32 %121, %122
  br i1 %123, label %124, label %125

124:                                              ; preds = %120
  br label %162

125:                                              ; preds = %120
  %126 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %127 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %126, i32 0, i32 6
  %128 = load i32*, i32** %127, align 8
  %129 = load i32, i32* %128, align 4
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %152, label %131

131:                                              ; preds = %125
  %132 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %133 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %132, i32 0, i32 5
  %134 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %133, align 8
  %135 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %134, i32 0, i32 0
  %136 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %135, align 8
  %137 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %136, i32 0, i32 5
  store i32 113, i32* %137, align 8
  %138 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %139 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %138, i32 0, i32 5
  %140 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %139, align 8
  %141 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %140, i32 0, i32 0
  %142 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %141, align 8
  %143 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %142, i32 0, i32 1
  %144 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %143, align 8
  %145 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %146 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %145, i32 0, i32 5
  %147 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %146, align 8
  %148 = bitcast %struct.jpeg_decompress_struct* %147 to %struct.jpeg_common_struct*
  call void %144(%struct.jpeg_common_struct* %148, i32 -1)
  %149 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %150 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %149, i32 0, i32 6
  %151 = load i32*, i32** %150, align 8
  store i32 1, i32* %151, align 4
  br label %152

152:                                              ; preds = %131, %125
  store i32 0, i32* %12, align 4
  br label %153

153:                                              ; preds = %152, %115
  br label %154

154:                                              ; preds = %153, %60
  %155 = load i64, i64* %7, align 8
  %156 = shl i64 %155, 8
  %157 = load i32, i32* %12, align 4
  %158 = sext i32 %157 to i64
  %159 = or i64 %156, %158
  store i64 %159, i64* %7, align 8
  %160 = load i32, i32* %8, align 4
  %161 = add nsw i32 %160, 8
  store i32 %161, i32* %8, align 4
  br label %19

162:                                              ; preds = %124, %19
  %163 = load i8*, i8** %10, align 8
  %164 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %165 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %164, i32 0, i32 0
  store i8* %163, i8** %165, align 8
  %166 = load i64, i64* %11, align 8
  %167 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %168 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %167, i32 0, i32 1
  store i64 %166, i64* %168, align 8
  %169 = load i64, i64* %7, align 8
  %170 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %171 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %170, i32 0, i32 3
  store i64 %169, i64* %171, align 8
  %172 = load i32, i32* %8, align 4
  %173 = load %struct.bitread_working_state*, %struct.bitread_working_state** %6, align 8
  %174 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %173, i32 0, i32 4
  store i32 %172, i32* %174, align 8
  store i32 1, i32* %5, align 4
  br label %175

175:                                              ; preds = %162, %86, %44
  %176 = load i32, i32* %5, align 4
  ret i32 %176
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @jpeg_huff_decode(%struct.bitread_working_state* %0, i64 %1, i32 %2, %struct.d_derived_tbl* %3, i32 %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.bitread_working_state*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.d_derived_tbl*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  store %struct.bitread_working_state* %0, %struct.bitread_working_state** %7, align 8
  store i64 %1, i64* %8, align 8
  store i32 %2, i32* %9, align 4
  store %struct.d_derived_tbl* %3, %struct.d_derived_tbl** %10, align 8
  store i32 %4, i32* %11, align 4
  %14 = load i32, i32* %11, align 4
  store i32 %14, i32* %12, align 4
  %15 = load i32, i32* %9, align 4
  %16 = load i32, i32* %12, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %33

18:                                               ; preds = %5
  %19 = load %struct.bitread_working_state*, %struct.bitread_working_state** %7, align 8
  %20 = load i64, i64* %8, align 8
  %21 = load i32, i32* %9, align 4
  %22 = load i32, i32* %12, align 4
  %23 = call i32 @jpeg_fill_bit_buffer(%struct.bitread_working_state* %19, i64 %20, i32 %21, i32 %22)
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %18
  store i32 -1, i32* %6, align 4
  br label %139

26:                                               ; preds = %18
  %27 = load %struct.bitread_working_state*, %struct.bitread_working_state** %7, align 8
  %28 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %27, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %8, align 8
  %30 = load %struct.bitread_working_state*, %struct.bitread_working_state** %7, align 8
  %31 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %30, i32 0, i32 4
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %9, align 4
  br label %33

33:                                               ; preds = %26, %5
  %34 = load i64, i64* %8, align 8
  %35 = load i32, i32* %12, align 4
  %36 = load i32, i32* %9, align 4
  %37 = sub nsw i32 %36, %35
  store i32 %37, i32* %9, align 4
  %38 = zext i32 %37 to i64
  %39 = ashr i64 %34, %38
  %40 = trunc i64 %39 to i32
  %41 = load i32, i32* %12, align 4
  %42 = shl i32 1, %41
  %43 = sub nsw i32 %42, 1
  %44 = and i32 %40, %43
  %45 = sext i32 %44 to i64
  store i64 %45, i64* %13, align 8
  br label %46

46:                                               ; preds = %74, %33
  %47 = load i64, i64* %13, align 8
  %48 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %10, align 8
  %49 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %48, i32 0, i32 1
  %50 = load i32, i32* %12, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [18 x i64], [18 x i64]* %49, i64 0, i64 %51
  %53 = load i64, i64* %52, align 8
  %54 = icmp sgt i64 %47, %53
  br i1 %54, label %55, label %87

55:                                               ; preds = %46
  %56 = load i64, i64* %13, align 8
  %57 = shl i64 %56, 1
  store i64 %57, i64* %13, align 8
  %58 = load i32, i32* %9, align 4
  %59 = icmp slt i32 %58, 1
  br i1 %59, label %60, label %74

60:                                               ; preds = %55
  %61 = load %struct.bitread_working_state*, %struct.bitread_working_state** %7, align 8
  %62 = load i64, i64* %8, align 8
  %63 = load i32, i32* %9, align 4
  %64 = call i32 @jpeg_fill_bit_buffer(%struct.bitread_working_state* %61, i64 %62, i32 %63, i32 1)
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %60
  store i32 -1, i32* %6, align 4
  br label %139

67:                                               ; preds = %60
  %68 = load %struct.bitread_working_state*, %struct.bitread_working_state** %7, align 8
  %69 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %68, i32 0, i32 3
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %8, align 8
  %71 = load %struct.bitread_working_state*, %struct.bitread_working_state** %7, align 8
  %72 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %71, i32 0, i32 4
  %73 = load i32, i32* %72, align 8
  store i32 %73, i32* %9, align 4
  br label %74

74:                                               ; preds = %67, %55
  %75 = load i64, i64* %8, align 8
  %76 = load i32, i32* %9, align 4
  %77 = sub nsw i32 %76, 1
  store i32 %77, i32* %9, align 4
  %78 = zext i32 %77 to i64
  %79 = ashr i64 %75, %78
  %80 = trunc i64 %79 to i32
  %81 = and i32 %80, 1
  %82 = sext i32 %81 to i64
  %83 = load i64, i64* %13, align 8
  %84 = or i64 %83, %82
  store i64 %84, i64* %13, align 8
  %85 = load i32, i32* %12, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %12, align 4
  br label %46

87:                                               ; preds = %46
  %88 = load i64, i64* %8, align 8
  %89 = load %struct.bitread_working_state*, %struct.bitread_working_state** %7, align 8
  %90 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %89, i32 0, i32 3
  store i64 %88, i64* %90, align 8
  %91 = load i32, i32* %9, align 4
  %92 = load %struct.bitread_working_state*, %struct.bitread_working_state** %7, align 8
  %93 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %92, i32 0, i32 4
  store i32 %91, i32* %93, align 8
  %94 = load i32, i32* %12, align 4
  %95 = icmp sgt i32 %94, 16
  br i1 %95, label %96, label %114

96:                                               ; preds = %87
  %97 = load %struct.bitread_working_state*, %struct.bitread_working_state** %7, align 8
  %98 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %97, i32 0, i32 5
  %99 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %98, align 8
  %100 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %99, i32 0, i32 0
  %101 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %100, align 8
  %102 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %101, i32 0, i32 5
  store i32 114, i32* %102, align 8
  %103 = load %struct.bitread_working_state*, %struct.bitread_working_state** %7, align 8
  %104 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %103, i32 0, i32 5
  %105 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %104, align 8
  %106 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %105, i32 0, i32 0
  %107 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %106, align 8
  %108 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %107, i32 0, i32 1
  %109 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %108, align 8
  %110 = load %struct.bitread_working_state*, %struct.bitread_working_state** %7, align 8
  %111 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %110, i32 0, i32 5
  %112 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %111, align 8
  %113 = bitcast %struct.jpeg_decompress_struct* %112 to %struct.jpeg_common_struct*
  call void %109(%struct.jpeg_common_struct* %113, i32 -1)
  store i32 0, i32* %6, align 4
  br label %139

114:                                              ; preds = %87
  %115 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %10, align 8
  %116 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %115, i32 0, i32 3
  %117 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %116, align 8
  %118 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %117, i32 0, i32 1
  %119 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %10, align 8
  %120 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %119, i32 0, i32 2
  %121 = load i32, i32* %12, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds [17 x i32], [17 x i32]* %120, i64 0, i64 %122
  %124 = load i32, i32* %123, align 4
  %125 = load i64, i64* %13, align 8
  %126 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %10, align 8
  %127 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %126, i32 0, i32 0
  %128 = load i32, i32* %12, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [17 x i64], [17 x i64]* %127, i64 0, i64 %129
  %131 = load i64, i64* %130, align 8
  %132 = sub nsw i64 %125, %131
  %133 = trunc i64 %132 to i32
  %134 = add nsw i32 %124, %133
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [256 x i8], [256 x i8]* %118, i64 0, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  store i32 %138, i32* %6, align 4
  br label %139

139:                                              ; preds = %114, %96, %66, %25
  %140 = load i32, i32* %6, align 4
  ret i32 %140
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_huff_decoder(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  %3 = alloca %struct.huff_entropy_decoder*, align 8
  %4 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  %5 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %5, i32 0, i32 1
  %7 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %7, i32 0, i32 0
  %9 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %8, align 8
  %10 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %11 = bitcast %struct.jpeg_decompress_struct* %10 to %struct.jpeg_common_struct*
  %12 = call i8* %9(%struct.jpeg_common_struct* %11, i32 1, i64 120)
  %13 = bitcast i8* %12 to %struct.huff_entropy_decoder*
  store %struct.huff_entropy_decoder* %13, %struct.huff_entropy_decoder** %3, align 8
  %14 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %3, align 8
  %15 = bitcast %struct.huff_entropy_decoder* %14 to %struct.jpeg_entropy_decoder*
  %16 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %16, i32 0, i32 79
  store %struct.jpeg_entropy_decoder* %15, %struct.jpeg_entropy_decoder** %17, align 8
  %18 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %3, align 8
  %19 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %18, i32 0, i32 0
  %20 = getelementptr inbounds %struct.jpeg_entropy_decoder, %struct.jpeg_entropy_decoder* %19, i32 0, i32 0
  store void (%struct.jpeg_decompress_struct*)* @start_pass_huff_decoder, void (%struct.jpeg_decompress_struct*)** %20, align 8
  %21 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %3, align 8
  %22 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %21, i32 0, i32 0
  %23 = getelementptr inbounds %struct.jpeg_entropy_decoder, %struct.jpeg_entropy_decoder* %22, i32 0, i32 1
  store i32 (%struct.jpeg_decompress_struct*, [64 x i16]**)* @decode_mcu, i32 (%struct.jpeg_decompress_struct*, [64 x i16]**)** %23, align 8
  store i32 0, i32* %4, align 4
  br label %24

24:                                               ; preds = %38, %1
  %25 = load i32, i32* %4, align 4
  %26 = icmp slt i32 %25, 4
  br i1 %26, label %27, label %41

27:                                               ; preds = %24
  %28 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %3, align 8
  %29 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %28, i32 0, i32 5
  %30 = load i32, i32* %4, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [4 x %struct.d_derived_tbl*], [4 x %struct.d_derived_tbl*]* %29, i64 0, i64 %31
  store %struct.d_derived_tbl* null, %struct.d_derived_tbl** %32, align 8
  %33 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %3, align 8
  %34 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %33, i32 0, i32 4
  %35 = load i32, i32* %4, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [4 x %struct.d_derived_tbl*], [4 x %struct.d_derived_tbl*]* %34, i64 0, i64 %36
  store %struct.d_derived_tbl* null, %struct.d_derived_tbl** %37, align 8
  br label %38

38:                                               ; preds = %27
  %39 = load i32, i32* %4, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %4, align 4
  br label %24

41:                                               ; preds = %24
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_huff_decoder(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  %3 = alloca %struct.huff_entropy_decoder*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  %8 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %8, i32 0, i32 79
  %10 = load %struct.jpeg_entropy_decoder*, %struct.jpeg_entropy_decoder** %9, align 8
  %11 = bitcast %struct.jpeg_entropy_decoder* %10 to %struct.huff_entropy_decoder*
  store %struct.huff_entropy_decoder* %11, %struct.huff_entropy_decoder** %3, align 8
  %12 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %12, i32 0, i32 68
  %14 = load i32, i32* %13, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %31, label %16

16:                                               ; preds = %1
  %17 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %17, i32 0, i32 69
  %19 = load i32, i32* %18, align 8
  %20 = icmp ne i32 %19, 63
  br i1 %20, label %31, label %21

21:                                               ; preds = %16
  %22 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %22, i32 0, i32 70
  %24 = load i32, i32* %23, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %27, i32 0, i32 71
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26, %21, %16, %1
  %32 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %32, i32 0, i32 0
  %34 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %33, align 8
  %35 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %34, i32 0, i32 5
  store i32 118, i32* %35, align 8
  %36 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %36, i32 0, i32 0
  %38 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %37, align 8
  %39 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %38, i32 0, i32 1
  %40 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %39, align 8
  %41 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %42 = bitcast %struct.jpeg_decompress_struct* %41 to %struct.jpeg_common_struct*
  call void %40(%struct.jpeg_common_struct* %42, i32 -1)
  br label %43

43:                                               ; preds = %31, %26
  store i32 0, i32* %4, align 4
  br label %44

44:                                               ; preds = %159, %43
  %45 = load i32, i32* %4, align 4
  %46 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %46, i32 0, i32 62
  %48 = load i32, i32* %47, align 8
  %49 = icmp slt i32 %45, %48
  br i1 %49, label %50, label %162

50:                                               ; preds = %44
  %51 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %51, i32 0, i32 63
  %53 = load i32, i32* %4, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %52, i64 0, i64 %54
  %56 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %55, align 8
  store %struct.jpeg_component_info* %56, %struct.jpeg_component_info** %7, align 8
  %57 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %58 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %57, i32 0, i32 5
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %5, align 4
  %60 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %61 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %60, i32 0, i32 6
  %62 = load i32, i32* %61, align 8
  store i32 %62, i32* %6, align 4
  %63 = load i32, i32* %5, align 4
  %64 = icmp slt i32 %63, 0
  br i1 %64, label %76, label %65

65:                                               ; preds = %50
  %66 = load i32, i32* %5, align 4
  %67 = icmp sge i32 %66, 4
  br i1 %67, label %76, label %68

68:                                               ; preds = %65
  %69 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %70 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %69, i32 0, i32 40
  %71 = load i32, i32* %5, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %70, i64 0, i64 %72
  %74 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %73, align 8
  %75 = icmp eq %struct.JHUFF_TBL* %74, null
  br i1 %75, label %76, label %95

76:                                               ; preds = %68, %65, %50
  %77 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %78 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %77, i32 0, i32 0
  %79 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %78, align 8
  %80 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %79, i32 0, i32 5
  store i32 49, i32* %80, align 8
  %81 = load i32, i32* %5, align 4
  %82 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %83 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %82, i32 0, i32 0
  %84 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %83, align 8
  %85 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %84, i32 0, i32 6
  %86 = bitcast %union.anon* %85 to [8 x i32]*
  %87 = getelementptr inbounds [8 x i32], [8 x i32]* %86, i64 0, i64 0
  store i32 %81, i32* %87, align 4
  %88 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %89 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %88, i32 0, i32 0
  %90 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %89, align 8
  %91 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %90, i32 0, i32 0
  %92 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %91, align 8
  %93 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %94 = bitcast %struct.jpeg_decompress_struct* %93 to %struct.jpeg_common_struct*
  call void %92(%struct.jpeg_common_struct* %94)
  br label %95

95:                                               ; preds = %76, %68
  %96 = load i32, i32* %6, align 4
  %97 = icmp slt i32 %96, 0
  br i1 %97, label %109, label %98

98:                                               ; preds = %95
  %99 = load i32, i32* %6, align 4
  %100 = icmp sge i32 %99, 4
  br i1 %100, label %109, label %101

101:                                              ; preds = %98
  %102 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %103 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %102, i32 0, i32 41
  %104 = load i32, i32* %6, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %103, i64 0, i64 %105
  %107 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %106, align 8
  %108 = icmp eq %struct.JHUFF_TBL* %107, null
  br i1 %108, label %109, label %128

109:                                              ; preds = %101, %98, %95
  %110 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %111 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %110, i32 0, i32 0
  %112 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %111, align 8
  %113 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %112, i32 0, i32 5
  store i32 49, i32* %113, align 8
  %114 = load i32, i32* %6, align 4
  %115 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %116 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %115, i32 0, i32 0
  %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %116, align 8
  %118 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %117, i32 0, i32 6
  %119 = bitcast %union.anon* %118 to [8 x i32]*
  %120 = getelementptr inbounds [8 x i32], [8 x i32]* %119, i64 0, i64 0
  store i32 %114, i32* %120, align 4
  %121 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %122 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %121, i32 0, i32 0
  %123 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %122, align 8
  %124 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %123, i32 0, i32 0
  %125 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %124, align 8
  %126 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %127 = bitcast %struct.jpeg_decompress_struct* %126 to %struct.jpeg_common_struct*
  call void %125(%struct.jpeg_common_struct* %127)
  br label %128

128:                                              ; preds = %109, %101
  %129 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %130 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %131 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %130, i32 0, i32 40
  %132 = load i32, i32* %5, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %131, i64 0, i64 %133
  %135 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %134, align 8
  %136 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %3, align 8
  %137 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %136, i32 0, i32 4
  %138 = load i32, i32* %5, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [4 x %struct.d_derived_tbl*], [4 x %struct.d_derived_tbl*]* %137, i64 0, i64 %139
  call void @jpeg_make_d_derived_tbl(%struct.jpeg_decompress_struct* %129, %struct.JHUFF_TBL* %135, %struct.d_derived_tbl** %140)
  %141 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %142 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %143 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %142, i32 0, i32 41
  %144 = load i32, i32* %6, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %143, i64 0, i64 %145
  %147 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %146, align 8
  %148 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %3, align 8
  %149 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %148, i32 0, i32 5
  %150 = load i32, i32* %6, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [4 x %struct.d_derived_tbl*], [4 x %struct.d_derived_tbl*]* %149, i64 0, i64 %151
  call void @jpeg_make_d_derived_tbl(%struct.jpeg_decompress_struct* %141, %struct.JHUFF_TBL* %147, %struct.d_derived_tbl** %152)
  %153 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %3, align 8
  %154 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %153, i32 0, i32 2
  %155 = getelementptr inbounds %struct.savable_state.538, %struct.savable_state.538* %154, i32 0, i32 0
  %156 = load i32, i32* %4, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [4 x i32], [4 x i32]* %155, i64 0, i64 %157
  store i32 0, i32* %158, align 4
  br label %159

159:                                              ; preds = %128
  %160 = load i32, i32* %4, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %4, align 4
  br label %44

162:                                              ; preds = %44
  %163 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %3, align 8
  %164 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %163, i32 0, i32 1
  %165 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %164, i32 0, i32 1
  store i32 0, i32* %165, align 8
  %166 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %3, align 8
  %167 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %166, i32 0, i32 1
  %168 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %167, i32 0, i32 0
  store i64 0, i64* %168, align 8
  %169 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %3, align 8
  %170 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %169, i32 0, i32 1
  %171 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %170, i32 0, i32 2
  store i32 0, i32* %171, align 4
  %172 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %173 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %172, i32 0, i32 49
  %174 = load i32, i32* %173, align 8
  %175 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %3, align 8
  %176 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %175, i32 0, i32 3
  store i32 %174, i32* %176, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decode_mcu(%struct.jpeg_decompress_struct* %0, [64 x i16]** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_decompress_struct*, align 8
  %5 = alloca [64 x i16]**, align 8
  %6 = alloca %struct.huff_entropy_decoder*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [64 x i16]*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.bitread_working_state, align 8
  %16 = alloca %struct.savable_state.538, align 4
  %17 = alloca %struct.d_derived_tbl*, align 8
  %18 = alloca %struct.d_derived_tbl*, align 8
  %19 = alloca %struct.jpeg_component_info*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %4, align 8
  store [64 x i16]** %1, [64 x i16]*** %5, align 8
  %26 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %26, i32 0, i32 79
  %28 = load %struct.jpeg_entropy_decoder*, %struct.jpeg_entropy_decoder** %27, align 8
  %29 = bitcast %struct.jpeg_entropy_decoder* %28 to %struct.huff_entropy_decoder*
  store %struct.huff_entropy_decoder* %29, %struct.huff_entropy_decoder** %6, align 8
  %30 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %30, i32 0, i32 49
  %32 = load i32, i32* %31, align 8
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %2
  %35 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %6, align 8
  %36 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %35, i32 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %34
  %40 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %41 = call i32 @process_restart(%struct.jpeg_decompress_struct* %40)
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  store i32 0, i32* %3, align 4
  br label %533

44:                                               ; preds = %39
  br label %45

45:                                               ; preds = %44, %34
  br label %46

46:                                               ; preds = %45, %2
  %47 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %48 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 5
  store %struct.jpeg_decompress_struct* %47, %struct.jpeg_decompress_struct** %48, align 8
  %49 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %49, i32 0, i32 5
  %51 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %50, align 8
  %52 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %51, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 0
  store i8* %53, i8** %54, align 8
  %55 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %56 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %55, i32 0, i32 5
  %57 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %56, align 8
  %58 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %57, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 1
  store i64 %59, i64* %60, align 8
  %61 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %62 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %61, i32 0, i32 72
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 2
  store i32 %63, i32* %64, align 8
  %65 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %6, align 8
  %66 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %65, i32 0, i32 1
  %67 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %66, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %13, align 8
  %69 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %6, align 8
  %70 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %69, i32 0, i32 1
  %71 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  store i32 %72, i32* %14, align 4
  %73 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %6, align 8
  %74 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %73, i32 0, i32 1
  %75 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %74, i32 0, i32 2
  %76 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 6
  store i32* %75, i32** %76, align 8
  %77 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %6, align 8
  %78 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %77, i32 0, i32 2
  %79 = bitcast %struct.savable_state.538* %16 to i8*
  %80 = bitcast %struct.savable_state.538* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 8 %80, i64 16, i1 false)
  store i32 0, i32* %10, align 4
  br label %81

81:                                               ; preds = %497, %46
  %82 = load i32, i32* %10, align 4
  %83 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %84 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %83, i32 0, i32 66
  %85 = load i32, i32* %84, align 8
  %86 = icmp slt i32 %82, %85
  br i1 %86, label %87, label %500

87:                                               ; preds = %81
  %88 = load [64 x i16]**, [64 x i16]*** %5, align 8
  %89 = load i32, i32* %10, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [64 x i16]*, [64 x i16]** %88, i64 %90
  %92 = load [64 x i16]*, [64 x i16]** %91, align 8
  store [64 x i16]* %92, [64 x i16]** %12, align 8
  %93 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %94 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %93, i32 0, i32 67
  %95 = load i32, i32* %10, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [10 x i32], [10 x i32]* %94, i64 0, i64 %96
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %11, align 4
  %99 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %100 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %99, i32 0, i32 63
  %101 = load i32, i32* %11, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %100, i64 0, i64 %102
  %104 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %103, align 8
  store %struct.jpeg_component_info* %104, %struct.jpeg_component_info** %19, align 8
  %105 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %6, align 8
  %106 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %105, i32 0, i32 4
  %107 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %108 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %107, i32 0, i32 5
  %109 = load i32, i32* %108, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [4 x %struct.d_derived_tbl*], [4 x %struct.d_derived_tbl*]* %106, i64 0, i64 %110
  %112 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %111, align 8
  store %struct.d_derived_tbl* %112, %struct.d_derived_tbl** %17, align 8
  %113 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %6, align 8
  %114 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %113, i32 0, i32 5
  %115 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %116 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %115, i32 0, i32 6
  %117 = load i32, i32* %116, align 8
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [4 x %struct.d_derived_tbl*], [4 x %struct.d_derived_tbl*]* %114, i64 0, i64 %118
  %120 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %119, align 8
  store %struct.d_derived_tbl* %120, %struct.d_derived_tbl** %18, align 8
  %121 = load i32, i32* %14, align 4
  %122 = icmp slt i32 %121, 8
  br i1 %122, label %123, label %138

123:                                              ; preds = %87
  %124 = load i64, i64* %13, align 8
  %125 = load i32, i32* %14, align 4
  %126 = call i32 @jpeg_fill_bit_buffer(%struct.bitread_working_state* %15, i64 %124, i32 %125, i32 0)
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %129, label %128

128:                                              ; preds = %123
  store i32 0, i32* %3, align 4
  br label %533

129:                                              ; preds = %123
  %130 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 3
  %131 = load i64, i64* %130, align 8
  store i64 %131, i64* %13, align 8
  %132 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 4
  %133 = load i32, i32* %132, align 8
  store i32 %133, i32* %14, align 4
  %134 = load i32, i32* %14, align 4
  %135 = icmp slt i32 %134, 8
  br i1 %135, label %136, label %137

136:                                              ; preds = %129
  store i32 1, i32* %20, align 4
  br label %165

137:                                              ; preds = %129
  br label %138

138:                                              ; preds = %137, %87
  %139 = load i64, i64* %13, align 8
  %140 = load i32, i32* %14, align 4
  %141 = sub nsw i32 %140, 8
  %142 = zext i32 %141 to i64
  %143 = ashr i64 %139, %142
  %144 = trunc i64 %143 to i32
  %145 = and i32 %144, 255
  store i32 %145, i32* %21, align 4
  %146 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %17, align 8
  %147 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %146, i32 0, i32 4
  %148 = load i32, i32* %21, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [256 x i32], [256 x i32]* %147, i64 0, i64 %149
  %151 = load i32, i32* %150, align 4
  store i32 %151, i32* %20, align 4
  %152 = icmp ne i32 %151, 0
  br i1 %152, label %153, label %164

153:                                              ; preds = %138
  %154 = load i32, i32* %20, align 4
  %155 = load i32, i32* %14, align 4
  %156 = sub nsw i32 %155, %154
  store i32 %156, i32* %14, align 4
  %157 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %17, align 8
  %158 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %157, i32 0, i32 5
  %159 = load i32, i32* %21, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* %158, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  store i32 %163, i32* %7, align 4
  br label %178

164:                                              ; preds = %138
  store i32 9, i32* %20, align 4
  br label %165

165:                                              ; preds = %164, %136
  %166 = load i64, i64* %13, align 8
  %167 = load i32, i32* %14, align 4
  %168 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %17, align 8
  %169 = load i32, i32* %20, align 4
  %170 = call i32 @jpeg_huff_decode(%struct.bitread_working_state* %15, i64 %166, i32 %167, %struct.d_derived_tbl* %168, i32 %169)
  store i32 %170, i32* %7, align 4
  %171 = icmp slt i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %165
  store i32 0, i32* %3, align 4
  br label %533

173:                                              ; preds = %165
  %174 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 3
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %13, align 8
  %176 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 4
  %177 = load i32, i32* %176, align 8
  store i32 %177, i32* %14, align 4
  br label %178

178:                                              ; preds = %173, %153
  %179 = load i32, i32* %7, align 4
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %181, label %226

181:                                              ; preds = %178
  %182 = load i32, i32* %14, align 4
  %183 = load i32, i32* %7, align 4
  %184 = icmp slt i32 %182, %183
  br i1 %184, label %185, label %197

185:                                              ; preds = %181
  %186 = load i64, i64* %13, align 8
  %187 = load i32, i32* %14, align 4
  %188 = load i32, i32* %7, align 4
  %189 = call i32 @jpeg_fill_bit_buffer(%struct.bitread_working_state* %15, i64 %186, i32 %187, i32 %188)
  %190 = icmp ne i32 %189, 0
  br i1 %190, label %192, label %191

191:                                              ; preds = %185
  store i32 0, i32* %3, align 4
  br label %533

192:                                              ; preds = %185
  %193 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 3
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %13, align 8
  %195 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 4
  %196 = load i32, i32* %195, align 8
  store i32 %196, i32* %14, align 4
  br label %197

197:                                              ; preds = %192, %181
  %198 = load i64, i64* %13, align 8
  %199 = load i32, i32* %7, align 4
  %200 = load i32, i32* %14, align 4
  %201 = sub nsw i32 %200, %199
  store i32 %201, i32* %14, align 4
  %202 = zext i32 %201 to i64
  %203 = ashr i64 %198, %202
  %204 = trunc i64 %203 to i32
  %205 = load i32, i32* %7, align 4
  %206 = shl i32 1, %205
  %207 = sub nsw i32 %206, 1
  %208 = and i32 %204, %207
  store i32 %208, i32* %9, align 4
  %209 = load i32, i32* %9, align 4
  %210 = load i32, i32* %7, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds [16 x i32], [16 x i32]* @extend_test, i64 0, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = icmp slt i32 %209, %213
  br i1 %214, label %215, label %222

215:                                              ; preds = %197
  %216 = load i32, i32* %9, align 4
  %217 = load i32, i32* %7, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [16 x i32], [16 x i32]* @extend_offset, i64 0, i64 %218
  %220 = load i32, i32* %219, align 4
  %221 = add nsw i32 %216, %220
  br label %224

222:                                              ; preds = %197
  %223 = load i32, i32* %9, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %221, %215 ], [ %223, %222 ]
  store i32 %225, i32* %7, align 4
  br label %226

226:                                              ; preds = %224, %178
  %227 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %228 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %227, i32 0, i32 12
  %229 = load i32, i32* %228, align 8
  %230 = icmp ne i32 %229, 0
  br i1 %230, label %232, label %231

231:                                              ; preds = %226
  br label %392

232:                                              ; preds = %226
  %233 = getelementptr inbounds %struct.savable_state.538, %struct.savable_state.538* %16, i32 0, i32 0
  %234 = load i32, i32* %11, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds [4 x i32], [4 x i32]* %233, i64 0, i64 %235
  %237 = load i32, i32* %236, align 4
  %238 = load i32, i32* %7, align 4
  %239 = add nsw i32 %238, %237
  store i32 %239, i32* %7, align 4
  %240 = load i32, i32* %7, align 4
  %241 = getelementptr inbounds %struct.savable_state.538, %struct.savable_state.538* %16, i32 0, i32 0
  %242 = load i32, i32* %11, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds [4 x i32], [4 x i32]* %241, i64 0, i64 %243
  store i32 %240, i32* %244, align 4
  %245 = load i32, i32* %7, align 4
  %246 = trunc i32 %245 to i16
  %247 = load [64 x i16]*, [64 x i16]** %12, align 8
  %248 = getelementptr inbounds [64 x i16], [64 x i16]* %247, i64 0, i64 0
  store i16 %246, i16* %248, align 2
  %249 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  %250 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %249, i32 0, i32 9
  %251 = load i32, i32* %250, align 4
  %252 = icmp sgt i32 %251, 1
  br i1 %252, label %253, label %391

253:                                              ; preds = %232
  store i32 1, i32* %8, align 4
  br label %254

254:                                              ; preds = %387, %253
  %255 = load i32, i32* %8, align 4
  %256 = icmp slt i32 %255, 64
  br i1 %256, label %257, label %390

257:                                              ; preds = %254
  %258 = load i32, i32* %14, align 4
  %259 = icmp slt i32 %258, 8
  br i1 %259, label %260, label %275

260:                                              ; preds = %257
  %261 = load i64, i64* %13, align 8
  %262 = load i32, i32* %14, align 4
  %263 = call i32 @jpeg_fill_bit_buffer(%struct.bitread_working_state* %15, i64 %261, i32 %262, i32 0)
  %264 = icmp ne i32 %263, 0
  br i1 %264, label %266, label %265

265:                                              ; preds = %260
  store i32 0, i32* %3, align 4
  br label %533

266:                                              ; preds = %260
  %267 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 3
  %268 = load i64, i64* %267, align 8
  store i64 %268, i64* %13, align 8
  %269 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 4
  %270 = load i32, i32* %269, align 8
  store i32 %270, i32* %14, align 4
  %271 = load i32, i32* %14, align 4
  %272 = icmp slt i32 %271, 8
  br i1 %272, label %273, label %274

273:                                              ; preds = %266
  store i32 1, i32* %22, align 4
  br label %302

274:                                              ; preds = %266
  br label %275

275:                                              ; preds = %274, %257
  %276 = load i64, i64* %13, align 8
  %277 = load i32, i32* %14, align 4
  %278 = sub nsw i32 %277, 8
  %279 = zext i32 %278 to i64
  %280 = ashr i64 %276, %279
  %281 = trunc i64 %280 to i32
  %282 = and i32 %281, 255
  store i32 %282, i32* %23, align 4
  %283 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %18, align 8
  %284 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %283, i32 0, i32 4
  %285 = load i32, i32* %23, align 4
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds [256 x i32], [256 x i32]* %284, i64 0, i64 %286
  %288 = load i32, i32* %287, align 4
  store i32 %288, i32* %22, align 4
  %289 = icmp ne i32 %288, 0
  br i1 %289, label %290, label %301

290:                                              ; preds = %275
  %291 = load i32, i32* %22, align 4
  %292 = load i32, i32* %14, align 4
  %293 = sub nsw i32 %292, %291
  store i32 %293, i32* %14, align 4
  %294 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %18, align 8
  %295 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %294, i32 0, i32 5
  %296 = load i32, i32* %23, align 4
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds [256 x i8], [256 x i8]* %295, i64 0, i64 %297
  %299 = load i8, i8* %298, align 1
  %300 = zext i8 %299 to i32
  store i32 %300, i32* %7, align 4
  br label %315

301:                                              ; preds = %275
  store i32 9, i32* %22, align 4
  br label %302

302:                                              ; preds = %301, %273
  %303 = load i64, i64* %13, align 8
  %304 = load i32, i32* %14, align 4
  %305 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %18, align 8
  %306 = load i32, i32* %22, align 4
  %307 = call i32 @jpeg_huff_decode(%struct.bitread_working_state* %15, i64 %303, i32 %304, %struct.d_derived_tbl* %305, i32 %306)
  store i32 %307, i32* %7, align 4
  %308 = icmp slt i32 %307, 0
  br i1 %308, label %309, label %310

309:                                              ; preds = %302
  store i32 0, i32* %3, align 4
  br label %533

310:                                              ; preds = %302
  %311 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 3
  %312 = load i64, i64* %311, align 8
  store i64 %312, i64* %13, align 8
  %313 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 4
  %314 = load i32, i32* %313, align 8
  store i32 %314, i32* %14, align 4
  br label %315

315:                                              ; preds = %310, %290
  %316 = load i32, i32* %7, align 4
  %317 = ashr i32 %316, 4
  store i32 %317, i32* %9, align 4
  %318 = load i32, i32* %7, align 4
  %319 = and i32 %318, 15
  store i32 %319, i32* %7, align 4
  %320 = load i32, i32* %7, align 4
  %321 = icmp ne i32 %320, 0
  br i1 %321, label %322, label %379

322:                                              ; preds = %315
  %323 = load i32, i32* %9, align 4
  %324 = load i32, i32* %8, align 4
  %325 = add nsw i32 %324, %323
  store i32 %325, i32* %8, align 4
  %326 = load i32, i32* %14, align 4
  %327 = load i32, i32* %7, align 4
  %328 = icmp slt i32 %326, %327
  br i1 %328, label %329, label %341

329:                                              ; preds = %322
  %330 = load i64, i64* %13, align 8
  %331 = load i32, i32* %14, align 4
  %332 = load i32, i32* %7, align 4
  %333 = call i32 @jpeg_fill_bit_buffer(%struct.bitread_working_state* %15, i64 %330, i32 %331, i32 %332)
  %334 = icmp ne i32 %333, 0
  br i1 %334, label %336, label %335

335:                                              ; preds = %329
  store i32 0, i32* %3, align 4
  br label %533

336:                                              ; preds = %329
  %337 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 3
  %338 = load i64, i64* %337, align 8
  store i64 %338, i64* %13, align 8
  %339 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 4
  %340 = load i32, i32* %339, align 8
  store i32 %340, i32* %14, align 4
  br label %341

341:                                              ; preds = %336, %322
  %342 = load i64, i64* %13, align 8
  %343 = load i32, i32* %7, align 4
  %344 = load i32, i32* %14, align 4
  %345 = sub nsw i32 %344, %343
  store i32 %345, i32* %14, align 4
  %346 = zext i32 %345 to i64
  %347 = ashr i64 %342, %346
  %348 = trunc i64 %347 to i32
  %349 = load i32, i32* %7, align 4
  %350 = shl i32 1, %349
  %351 = sub nsw i32 %350, 1
  %352 = and i32 %348, %351
  store i32 %352, i32* %9, align 4
  %353 = load i32, i32* %9, align 4
  %354 = load i32, i32* %7, align 4
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds [16 x i32], [16 x i32]* @extend_test, i64 0, i64 %355
  %357 = load i32, i32* %356, align 4
  %358 = icmp slt i32 %353, %357
  br i1 %358, label %359, label %366

359:                                              ; preds = %341
  %360 = load i32, i32* %9, align 4
  %361 = load i32, i32* %7, align 4
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds [16 x i32], [16 x i32]* @extend_offset, i64 0, i64 %362
  %364 = load i32, i32* %363, align 4
  %365 = add nsw i32 %360, %364
  br label %368

366:                                              ; preds = %341
  %367 = load i32, i32* %9, align 4
  br label %368

368:                                              ; preds = %366, %359
  %369 = phi i32 [ %365, %359 ], [ %367, %366 ]
  store i32 %369, i32* %7, align 4
  %370 = load i32, i32* %7, align 4
  %371 = trunc i32 %370 to i16
  %372 = load [64 x i16]*, [64 x i16]** %12, align 8
  %373 = load i32, i32* %8, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %374
  %376 = load i32, i32* %375, align 4
  %377 = sext i32 %376 to i64
  %378 = getelementptr inbounds [64 x i16], [64 x i16]* %372, i64 0, i64 %377
  store i16 %371, i16* %378, align 2
  br label %386

379:                                              ; preds = %315
  %380 = load i32, i32* %9, align 4
  %381 = icmp ne i32 %380, 15
  br i1 %381, label %382, label %383

382:                                              ; preds = %379
  br label %390

383:                                              ; preds = %379
  %384 = load i32, i32* %8, align 4
  %385 = add nsw i32 %384, 15
  store i32 %385, i32* %8, align 4
  br label %386

386:                                              ; preds = %383, %368
  br label %387

387:                                              ; preds = %386
  %388 = load i32, i32* %8, align 4
  %389 = add nsw i32 %388, 1
  store i32 %389, i32* %8, align 4
  br label %254

390:                                              ; preds = %382, %254
  br label %496

391:                                              ; preds = %232
  br label %392

392:                                              ; preds = %391, %231
  store i32 1, i32* %8, align 4
  br label %393

393:                                              ; preds = %492, %392
  %394 = load i32, i32* %8, align 4
  %395 = icmp slt i32 %394, 64
  br i1 %395, label %396, label %495

396:                                              ; preds = %393
  %397 = load i32, i32* %14, align 4
  %398 = icmp slt i32 %397, 8
  br i1 %398, label %399, label %414

399:                                              ; preds = %396
  %400 = load i64, i64* %13, align 8
  %401 = load i32, i32* %14, align 4
  %402 = call i32 @jpeg_fill_bit_buffer(%struct.bitread_working_state* %15, i64 %400, i32 %401, i32 0)
  %403 = icmp ne i32 %402, 0
  br i1 %403, label %405, label %404

404:                                              ; preds = %399
  store i32 0, i32* %3, align 4
  br label %533

405:                                              ; preds = %399
  %406 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 3
  %407 = load i64, i64* %406, align 8
  store i64 %407, i64* %13, align 8
  %408 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 4
  %409 = load i32, i32* %408, align 8
  store i32 %409, i32* %14, align 4
  %410 = load i32, i32* %14, align 4
  %411 = icmp slt i32 %410, 8
  br i1 %411, label %412, label %413

412:                                              ; preds = %405
  store i32 1, i32* %24, align 4
  br label %441

413:                                              ; preds = %405
  br label %414

414:                                              ; preds = %413, %396
  %415 = load i64, i64* %13, align 8
  %416 = load i32, i32* %14, align 4
  %417 = sub nsw i32 %416, 8
  %418 = zext i32 %417 to i64
  %419 = ashr i64 %415, %418
  %420 = trunc i64 %419 to i32
  %421 = and i32 %420, 255
  store i32 %421, i32* %25, align 4
  %422 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %18, align 8
  %423 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %422, i32 0, i32 4
  %424 = load i32, i32* %25, align 4
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds [256 x i32], [256 x i32]* %423, i64 0, i64 %425
  %427 = load i32, i32* %426, align 4
  store i32 %427, i32* %24, align 4
  %428 = icmp ne i32 %427, 0
  br i1 %428, label %429, label %440

429:                                              ; preds = %414
  %430 = load i32, i32* %24, align 4
  %431 = load i32, i32* %14, align 4
  %432 = sub nsw i32 %431, %430
  store i32 %432, i32* %14, align 4
  %433 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %18, align 8
  %434 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %433, i32 0, i32 5
  %435 = load i32, i32* %25, align 4
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds [256 x i8], [256 x i8]* %434, i64 0, i64 %436
  %438 = load i8, i8* %437, align 1
  %439 = zext i8 %438 to i32
  store i32 %439, i32* %7, align 4
  br label %454

440:                                              ; preds = %414
  store i32 9, i32* %24, align 4
  br label %441

441:                                              ; preds = %440, %412
  %442 = load i64, i64* %13, align 8
  %443 = load i32, i32* %14, align 4
  %444 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %18, align 8
  %445 = load i32, i32* %24, align 4
  %446 = call i32 @jpeg_huff_decode(%struct.bitread_working_state* %15, i64 %442, i32 %443, %struct.d_derived_tbl* %444, i32 %445)
  store i32 %446, i32* %7, align 4
  %447 = icmp slt i32 %446, 0
  br i1 %447, label %448, label %449

448:                                              ; preds = %441
  store i32 0, i32* %3, align 4
  br label %533

449:                                              ; preds = %441
  %450 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 3
  %451 = load i64, i64* %450, align 8
  store i64 %451, i64* %13, align 8
  %452 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 4
  %453 = load i32, i32* %452, align 8
  store i32 %453, i32* %14, align 4
  br label %454

454:                                              ; preds = %449, %429
  %455 = load i32, i32* %7, align 4
  %456 = ashr i32 %455, 4
  store i32 %456, i32* %9, align 4
  %457 = load i32, i32* %7, align 4
  %458 = and i32 %457, 15
  store i32 %458, i32* %7, align 4
  %459 = load i32, i32* %7, align 4
  %460 = icmp ne i32 %459, 0
  br i1 %460, label %461, label %484

461:                                              ; preds = %454
  %462 = load i32, i32* %9, align 4
  %463 = load i32, i32* %8, align 4
  %464 = add nsw i32 %463, %462
  store i32 %464, i32* %8, align 4
  %465 = load i32, i32* %14, align 4
  %466 = load i32, i32* %7, align 4
  %467 = icmp slt i32 %465, %466
  br i1 %467, label %468, label %480

468:                                              ; preds = %461
  %469 = load i64, i64* %13, align 8
  %470 = load i32, i32* %14, align 4
  %471 = load i32, i32* %7, align 4
  %472 = call i32 @jpeg_fill_bit_buffer(%struct.bitread_working_state* %15, i64 %469, i32 %470, i32 %471)
  %473 = icmp ne i32 %472, 0
  br i1 %473, label %475, label %474

474:                                              ; preds = %468
  store i32 0, i32* %3, align 4
  br label %533

475:                                              ; preds = %468
  %476 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 3
  %477 = load i64, i64* %476, align 8
  store i64 %477, i64* %13, align 8
  %478 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 4
  %479 = load i32, i32* %478, align 8
  store i32 %479, i32* %14, align 4
  br label %480

480:                                              ; preds = %475, %461
  %481 = load i32, i32* %7, align 4
  %482 = load i32, i32* %14, align 4
  %483 = sub nsw i32 %482, %481
  store i32 %483, i32* %14, align 4
  br label %491

484:                                              ; preds = %454
  %485 = load i32, i32* %9, align 4
  %486 = icmp ne i32 %485, 15
  br i1 %486, label %487, label %488

487:                                              ; preds = %484
  br label %495

488:                                              ; preds = %484
  %489 = load i32, i32* %8, align 4
  %490 = add nsw i32 %489, 15
  store i32 %490, i32* %8, align 4
  br label %491

491:                                              ; preds = %488, %480
  br label %492

492:                                              ; preds = %491
  %493 = load i32, i32* %8, align 4
  %494 = add nsw i32 %493, 1
  store i32 %494, i32* %8, align 4
  br label %393

495:                                              ; preds = %487, %393
  br label %496

496:                                              ; preds = %495, %390
  br label %497

497:                                              ; preds = %496
  %498 = load i32, i32* %10, align 4
  %499 = add nsw i32 %498, 1
  store i32 %499, i32* %10, align 4
  br label %81

500:                                              ; preds = %81
  %501 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 0
  %502 = load i8*, i8** %501, align 8
  %503 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %504 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %503, i32 0, i32 5
  %505 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %504, align 8
  %506 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %505, i32 0, i32 0
  store i8* %502, i8** %506, align 8
  %507 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 1
  %508 = load i64, i64* %507, align 8
  %509 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %510 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %509, i32 0, i32 5
  %511 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %510, align 8
  %512 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %511, i32 0, i32 1
  store i64 %508, i64* %512, align 8
  %513 = getelementptr inbounds %struct.bitread_working_state, %struct.bitread_working_state* %15, i32 0, i32 2
  %514 = load i32, i32* %513, align 8
  %515 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %516 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %515, i32 0, i32 72
  store i32 %514, i32* %516, align 4
  %517 = load i64, i64* %13, align 8
  %518 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %6, align 8
  %519 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %518, i32 0, i32 1
  %520 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %519, i32 0, i32 0
  store i64 %517, i64* %520, align 8
  %521 = load i32, i32* %14, align 4
  %522 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %6, align 8
  %523 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %522, i32 0, i32 1
  %524 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %523, i32 0, i32 1
  store i32 %521, i32* %524, align 8
  %525 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %6, align 8
  %526 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %525, i32 0, i32 2
  %527 = bitcast %struct.savable_state.538* %526 to i8*
  %528 = bitcast %struct.savable_state.538* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %527, i8* align 4 %528, i64 16, i1 false)
  %529 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %6, align 8
  %530 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %529, i32 0, i32 3
  %531 = load i32, i32* %530, align 8
  %532 = add i32 %531, -1
  store i32 %532, i32* %530, align 8
  store i32 1, i32* %3, align 4
  br label %533

533:                                              ; preds = %500, %474, %448, %404, %335, %309, %265, %191, %172, %128, %43
  %534 = load i32, i32* %3, align 4
  ret i32 %534
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @process_restart(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct.huff_entropy_decoder*, align 8
  %5 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  %6 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %6, i32 0, i32 79
  %8 = load %struct.jpeg_entropy_decoder*, %struct.jpeg_entropy_decoder** %7, align 8
  %9 = bitcast %struct.jpeg_entropy_decoder* %8 to %struct.huff_entropy_decoder*
  store %struct.huff_entropy_decoder* %9, %struct.huff_entropy_decoder** %4, align 8
  %10 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %4, align 8
  %11 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = sdiv i32 %13, 8
  %15 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %15, i32 0, i32 78
  %17 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %17, i32 0, i32 8
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, %14
  store i32 %20, i32* %18, align 4
  %21 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %4, align 8
  %22 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %21, i32 0, i32 1
  %23 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %22, i32 0, i32 1
  store i32 0, i32* %23, align 8
  %24 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %24, i32 0, i32 78
  %26 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %26, i32 0, i32 2
  %28 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %27, align 8
  %29 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %30 = call i32 %28(%struct.jpeg_decompress_struct* %29)
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  br label %59

33:                                               ; preds = %1
  store i32 0, i32* %5, align 4
  br label %34

34:                                               ; preds = %47, %33
  %35 = load i32, i32* %5, align 4
  %36 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %36, i32 0, i32 62
  %38 = load i32, i32* %37, align 8
  %39 = icmp slt i32 %35, %38
  br i1 %39, label %40, label %50

40:                                               ; preds = %34
  %41 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %4, align 8
  %42 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %41, i32 0, i32 2
  %43 = getelementptr inbounds %struct.savable_state.538, %struct.savable_state.538* %42, i32 0, i32 0
  %44 = load i32, i32* %5, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [4 x i32], [4 x i32]* %43, i64 0, i64 %45
  store i32 0, i32* %46, align 4
  br label %47

47:                                               ; preds = %40
  %48 = load i32, i32* %5, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %5, align 4
  br label %34

50:                                               ; preds = %34
  %51 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %51, i32 0, i32 49
  %53 = load i32, i32* %52, align 8
  %54 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %4, align 8
  %55 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %54, i32 0, i32 3
  store i32 %53, i32* %55, align 8
  %56 = load %struct.huff_entropy_decoder*, %struct.huff_entropy_decoder** %4, align 8
  %57 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %56, i32 0, i32 1
  %58 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %57, i32 0, i32 2
  store i32 0, i32* %58, align 4
  store i32 1, i32* %2, align 4
  br label %59

59:                                               ; preds = %50, %32
  %60 = load i32, i32* %2, align 4
  ret i32 %60
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_input_controller(%struct.jpeg_decompress_struct.539* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.539*, align 8
  %3 = alloca %struct.my_input_controller*, align 8
  store %struct.jpeg_decompress_struct.539* %0, %struct.jpeg_decompress_struct.539** %2, align 8
  %4 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %4, i32 0, i32 1
  %6 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %6, i32 0, i32 0
  %8 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %7, align 8
  %9 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %10 = bitcast %struct.jpeg_decompress_struct.539* %9 to %struct.jpeg_common_struct*
  %11 = call i8* %8(%struct.jpeg_common_struct* %10, i32 0, i64 48)
  %12 = bitcast i8* %11 to %struct.my_input_controller*
  store %struct.my_input_controller* %12, %struct.my_input_controller** %3, align 8
  %13 = load %struct.my_input_controller*, %struct.my_input_controller** %3, align 8
  %14 = bitcast %struct.my_input_controller* %13 to %struct.jpeg_input_controller.551*
  %15 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %15, i32 0, i32 77
  store %struct.jpeg_input_controller.551* %14, %struct.jpeg_input_controller.551** %16, align 8
  %17 = load %struct.my_input_controller*, %struct.my_input_controller** %3, align 8
  %18 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %17, i32 0, i32 0
  %19 = getelementptr inbounds %struct.jpeg_input_controller.551, %struct.jpeg_input_controller.551* %18, i32 0, i32 0
  store i32 (%struct.jpeg_decompress_struct.539*)* @consume_markers, i32 (%struct.jpeg_decompress_struct.539*)** %19, align 8
  %20 = load %struct.my_input_controller*, %struct.my_input_controller** %3, align 8
  %21 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %20, i32 0, i32 0
  %22 = getelementptr inbounds %struct.jpeg_input_controller.551, %struct.jpeg_input_controller.551* %21, i32 0, i32 1
  %23 = bitcast {}** %22 to void (%struct.jpeg_decompress_struct.539*)**
  store void (%struct.jpeg_decompress_struct.539*)* @reset_input_controller, void (%struct.jpeg_decompress_struct.539*)** %23, align 8
  %24 = load %struct.my_input_controller*, %struct.my_input_controller** %3, align 8
  %25 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %24, i32 0, i32 0
  %26 = getelementptr inbounds %struct.jpeg_input_controller.551, %struct.jpeg_input_controller.551* %25, i32 0, i32 2
  %27 = bitcast {}** %26 to void (%struct.jpeg_decompress_struct.539*)**
  store void (%struct.jpeg_decompress_struct.539*)* @start_input_pass.49, void (%struct.jpeg_decompress_struct.539*)** %27, align 8
  %28 = load %struct.my_input_controller*, %struct.my_input_controller** %3, align 8
  %29 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %28, i32 0, i32 0
  %30 = getelementptr inbounds %struct.jpeg_input_controller.551, %struct.jpeg_input_controller.551* %29, i32 0, i32 3
  %31 = bitcast {}** %30 to void (%struct.jpeg_decompress_struct.539*)**
  store void (%struct.jpeg_decompress_struct.539*)* @finish_input_pass, void (%struct.jpeg_decompress_struct.539*)** %31, align 8
  %32 = load %struct.my_input_controller*, %struct.my_input_controller** %3, align 8
  %33 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %32, i32 0, i32 0
  %34 = getelementptr inbounds %struct.jpeg_input_controller.551, %struct.jpeg_input_controller.551* %33, i32 0, i32 4
  store i32 0, i32* %34, align 8
  %35 = load %struct.my_input_controller*, %struct.my_input_controller** %3, align 8
  %36 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %35, i32 0, i32 0
  %37 = getelementptr inbounds %struct.jpeg_input_controller.551, %struct.jpeg_input_controller.551* %36, i32 0, i32 5
  store i32 0, i32* %37, align 4
  %38 = load %struct.my_input_controller*, %struct.my_input_controller** %3, align 8
  %39 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %38, i32 0, i32 1
  store i32 1, i32* %39, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @consume_markers(%struct.jpeg_decompress_struct.539* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.539*, align 8
  %4 = alloca %struct.my_input_controller*, align 8
  %5 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.539* %0, %struct.jpeg_decompress_struct.539** %3, align 8
  %6 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %6, i32 0, i32 77
  %8 = load %struct.jpeg_input_controller.551*, %struct.jpeg_input_controller.551** %7, align 8
  %9 = bitcast %struct.jpeg_input_controller.551* %8 to %struct.my_input_controller*
  store %struct.my_input_controller* %9, %struct.my_input_controller** %4, align 8
  %10 = load %struct.my_input_controller*, %struct.my_input_controller** %4, align 8
  %11 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %10, i32 0, i32 0
  %12 = getelementptr inbounds %struct.jpeg_input_controller.551, %struct.jpeg_input_controller.551* %11, i32 0, i32 5
  %13 = load i32, i32* %12, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %1
  store i32 2, i32* %2, align 4
  br label %102

16:                                               ; preds = %1
  %17 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %3, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %17, i32 0, i32 78
  %19 = load %struct.jpeg_marker_reader.552*, %struct.jpeg_marker_reader.552** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_marker_reader.552, %struct.jpeg_marker_reader.552* %19, i32 0, i32 1
  %21 = load i32 (%struct.jpeg_decompress_struct.539*)*, i32 (%struct.jpeg_decompress_struct.539*)** %20, align 8
  %22 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %3, align 8
  %23 = call i32 %21(%struct.jpeg_decompress_struct.539* %22)
  store i32 %23, i32* %5, align 4
  %24 = load i32, i32* %5, align 4
  switch i32 %24, label %100 [
    i32 1, label %25
    i32 2, label %55
    i32 0, label %99
  ]

25:                                               ; preds = %16
  %26 = load %struct.my_input_controller*, %struct.my_input_controller** %4, align 8
  %27 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %26, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %25
  %31 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %3, align 8
  call void @initial_setup.51(%struct.jpeg_decompress_struct.539* %31)
  %32 = load %struct.my_input_controller*, %struct.my_input_controller** %4, align 8
  %33 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %32, i32 0, i32 1
  store i32 0, i32* %33, align 8
  br label %54

34:                                               ; preds = %25
  %35 = load %struct.my_input_controller*, %struct.my_input_controller** %4, align 8
  %36 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %35, i32 0, i32 0
  %37 = getelementptr inbounds %struct.jpeg_input_controller.551, %struct.jpeg_input_controller.551* %36, i32 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %34
  %41 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %3, align 8
  %42 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %41, i32 0, i32 0
  %43 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %42, align 8
  %44 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %43, i32 0, i32 5
  store i32 34, i32* %44, align 8
  %45 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %3, align 8
  %46 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %45, i32 0, i32 0
  %47 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %46, align 8
  %48 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %47, i32 0, i32 0
  %49 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %48, align 8
  %50 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %3, align 8
  %51 = bitcast %struct.jpeg_decompress_struct.539* %50 to %struct.jpeg_common_struct*
  call void %49(%struct.jpeg_common_struct* %51)
  br label %52

52:                                               ; preds = %40, %34
  %53 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %3, align 8
  call void @start_input_pass.49(%struct.jpeg_decompress_struct.539* %53)
  br label %54

54:                                               ; preds = %52, %30
  br label %100

55:                                               ; preds = %16
  %56 = load %struct.my_input_controller*, %struct.my_input_controller** %4, align 8
  %57 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %56, i32 0, i32 0
  %58 = getelementptr inbounds %struct.jpeg_input_controller.551, %struct.jpeg_input_controller.551* %57, i32 0, i32 5
  store i32 1, i32* %58, align 4
  %59 = load %struct.my_input_controller*, %struct.my_input_controller** %4, align 8
  %60 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %83

63:                                               ; preds = %55
  %64 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %3, align 8
  %65 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %64, i32 0, i32 78
  %66 = load %struct.jpeg_marker_reader.552*, %struct.jpeg_marker_reader.552** %65, align 8
  %67 = getelementptr inbounds %struct.jpeg_marker_reader.552, %struct.jpeg_marker_reader.552* %66, i32 0, i32 6
  %68 = load i32, i32* %67, align 4
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %63
  %71 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %3, align 8
  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %71, i32 0, i32 0
  %73 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %72, align 8
  %74 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %73, i32 0, i32 5
  store i32 58, i32* %74, align 8
  %75 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %3, align 8
  %76 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %75, i32 0, i32 0
  %77 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %76, align 8
  %78 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %77, i32 0, i32 0
  %79 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %78, align 8
  %80 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %3, align 8
  %81 = bitcast %struct.jpeg_decompress_struct.539* %80 to %struct.jpeg_common_struct*
  call void %79(%struct.jpeg_common_struct* %81)
  br label %82

82:                                               ; preds = %70, %63
  br label %98

83:                                               ; preds = %55
  %84 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %3, align 8
  %85 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %84, i32 0, i32 36
  %86 = load i32, i32* %85, align 4
  %87 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %3, align 8
  %88 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %87, i32 0, i32 34
  %89 = load i32, i32* %88, align 4
  %90 = icmp sgt i32 %86, %89
  br i1 %90, label %91, label %97

91:                                               ; preds = %83
  %92 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %3, align 8
  %93 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %92, i32 0, i32 34
  %94 = load i32, i32* %93, align 4
  %95 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %3, align 8
  %96 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %95, i32 0, i32 36
  store i32 %94, i32* %96, align 4
  br label %97

97:                                               ; preds = %91, %83
  br label %98

98:                                               ; preds = %97, %82
  br label %100

99:                                               ; preds = %16
  br label %100

100:                                              ; preds = %99, %98, %54, %16
  %101 = load i32, i32* %5, align 4
  store i32 %101, i32* %2, align 4
  br label %102

102:                                              ; preds = %100, %15
  %103 = load i32, i32* %2, align 4
  ret i32 %103
}

; Function Attrs: noinline nounwind uwtable
define internal void @reset_input_controller(%struct.jpeg_decompress_struct.539* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.539*, align 8
  %3 = alloca %struct.my_input_controller*, align 8
  store %struct.jpeg_decompress_struct.539* %0, %struct.jpeg_decompress_struct.539** %2, align 8
  %4 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %4, i32 0, i32 77
  %6 = load %struct.jpeg_input_controller.551*, %struct.jpeg_input_controller.551** %5, align 8
  %7 = bitcast %struct.jpeg_input_controller.551* %6 to %struct.my_input_controller*
  store %struct.my_input_controller* %7, %struct.my_input_controller** %3, align 8
  %8 = load %struct.my_input_controller*, %struct.my_input_controller** %3, align 8
  %9 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %8, i32 0, i32 0
  %10 = getelementptr inbounds %struct.jpeg_input_controller.551, %struct.jpeg_input_controller.551* %9, i32 0, i32 0
  store i32 (%struct.jpeg_decompress_struct.539*)* @consume_markers, i32 (%struct.jpeg_decompress_struct.539*)** %10, align 8
  %11 = load %struct.my_input_controller*, %struct.my_input_controller** %3, align 8
  %12 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %11, i32 0, i32 0
  %13 = getelementptr inbounds %struct.jpeg_input_controller.551, %struct.jpeg_input_controller.551* %12, i32 0, i32 4
  store i32 0, i32* %13, align 8
  %14 = load %struct.my_input_controller*, %struct.my_input_controller** %3, align 8
  %15 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %14, i32 0, i32 0
  %16 = getelementptr inbounds %struct.jpeg_input_controller.551, %struct.jpeg_input_controller.551* %15, i32 0, i32 5
  store i32 0, i32* %16, align 4
  %17 = load %struct.my_input_controller*, %struct.my_input_controller** %3, align 8
  %18 = getelementptr inbounds %struct.my_input_controller, %struct.my_input_controller* %17, i32 0, i32 1
  store i32 1, i32* %18, align 8
  %19 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %19, i32 0, i32 0
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i32 0, i32 4
  %23 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %22, align 8
  %24 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %25 = bitcast %struct.jpeg_decompress_struct.539* %24 to %struct.jpeg_common_struct*
  call void %23(%struct.jpeg_common_struct* %25)
  %26 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %26, i32 0, i32 78
  %28 = load %struct.jpeg_marker_reader.552*, %struct.jpeg_marker_reader.552** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_marker_reader.552, %struct.jpeg_marker_reader.552* %28, i32 0, i32 0
  %30 = bitcast {}** %29 to void (%struct.jpeg_decompress_struct.539*)**
  %31 = load void (%struct.jpeg_decompress_struct.539*)*, void (%struct.jpeg_decompress_struct.539*)** %30, align 8
  %32 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  call void %31(%struct.jpeg_decompress_struct.539* %32)
  %33 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %33, i32 0, i32 38
  store [64 x i32]* null, [64 x i32]** %34, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_input_pass.49(%struct.jpeg_decompress_struct.539* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.539*, align 8
  store %struct.jpeg_decompress_struct.539* %0, %struct.jpeg_decompress_struct.539** %2, align 8
  %3 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  call void @per_scan_setup.50(%struct.jpeg_decompress_struct.539* %3)
  %4 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  call void @latch_quant_tables(%struct.jpeg_decompress_struct.539* %4)
  %5 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %5, i32 0, i32 79
  %7 = load %struct.jpeg_entropy_decoder.553*, %struct.jpeg_entropy_decoder.553** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_entropy_decoder.553, %struct.jpeg_entropy_decoder.553* %7, i32 0, i32 0
  %9 = bitcast {}** %8 to void (%struct.jpeg_decompress_struct.539*)**
  %10 = load void (%struct.jpeg_decompress_struct.539*)*, void (%struct.jpeg_decompress_struct.539*)** %9, align 8
  %11 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  call void %10(%struct.jpeg_decompress_struct.539* %11)
  %12 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %12, i32 0, i32 75
  %14 = load %struct.jpeg_d_coef_controller.549*, %struct.jpeg_d_coef_controller.549** %13, align 8
  %15 = getelementptr inbounds %struct.jpeg_d_coef_controller.549, %struct.jpeg_d_coef_controller.549* %14, i32 0, i32 0
  %16 = bitcast {}** %15 to void (%struct.jpeg_decompress_struct.539*)**
  %17 = load void (%struct.jpeg_decompress_struct.539*)*, void (%struct.jpeg_decompress_struct.539*)** %16, align 8
  %18 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  call void %17(%struct.jpeg_decompress_struct.539* %18)
  %19 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %19, i32 0, i32 75
  %21 = load %struct.jpeg_d_coef_controller.549*, %struct.jpeg_d_coef_controller.549** %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_d_coef_controller.549, %struct.jpeg_d_coef_controller.549* %21, i32 0, i32 1
  %23 = load i32 (%struct.jpeg_decompress_struct.539*)*, i32 (%struct.jpeg_decompress_struct.539*)** %22, align 8
  %24 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %24, i32 0, i32 77
  %26 = load %struct.jpeg_input_controller.551*, %struct.jpeg_input_controller.551** %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_input_controller.551, %struct.jpeg_input_controller.551* %26, i32 0, i32 0
  store i32 (%struct.jpeg_decompress_struct.539*)* %23, i32 (%struct.jpeg_decompress_struct.539*)** %27, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_input_pass(%struct.jpeg_decompress_struct.539* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.539*, align 8
  store %struct.jpeg_decompress_struct.539* %0, %struct.jpeg_decompress_struct.539** %2, align 8
  %3 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %3, i32 0, i32 77
  %5 = load %struct.jpeg_input_controller.551*, %struct.jpeg_input_controller.551** %4, align 8
  %6 = getelementptr inbounds %struct.jpeg_input_controller.551, %struct.jpeg_input_controller.551* %5, i32 0, i32 0
  store i32 (%struct.jpeg_decompress_struct.539*)* @consume_markers, i32 (%struct.jpeg_decompress_struct.539*)** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @per_scan_setup.50(%struct.jpeg_decompress_struct.539* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.539*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_decompress_struct.539* %0, %struct.jpeg_decompress_struct.539** %2, align 8
  %7 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %7, i32 0, i32 62
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %61

11:                                               ; preds = %1
  %12 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %12, i32 0, i32 63
  %14 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %13, i64 0, i64 0
  %15 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %14, align 8
  store %struct.jpeg_component_info* %15, %struct.jpeg_component_info** %6, align 8
  %16 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %17 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i32 0, i32 7
  %18 = load i32, i32* %17, align 4
  %19 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %19, i32 0, i32 64
  store i32 %18, i32* %20, align 8
  %21 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %22 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %21, i32 0, i32 8
  %23 = load i32, i32* %22, align 8
  %24 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %24, i32 0, i32 65
  store i32 %23, i32* %25, align 4
  %26 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %27 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %26, i32 0, i32 13
  store i32 1, i32* %27, align 4
  %28 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i32 0, i32 14
  store i32 1, i32* %29, align 8
  %30 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %31 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %30, i32 0, i32 15
  store i32 1, i32* %31, align 4
  %32 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %33 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %32, i32 0, i32 9
  %34 = load i32, i32* %33, align 4
  %35 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %36 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %35, i32 0, i32 16
  store i32 %34, i32* %36, align 8
  %37 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %38 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %37, i32 0, i32 17
  store i32 1, i32* %38, align 4
  %39 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %40 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %39, i32 0, i32 8
  %41 = load i32, i32* %40, align 8
  %42 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %43 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %42, i32 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = urem i32 %41, %44
  store i32 %45, i32* %5, align 4
  %46 = load i32, i32* %5, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %11
  %49 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %50 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %49, i32 0, i32 3
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %5, align 4
  br label %52

52:                                               ; preds = %48, %11
  %53 = load i32, i32* %5, align 4
  %54 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %55 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %54, i32 0, i32 18
  store i32 %53, i32* %55, align 8
  %56 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %57 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %56, i32 0, i32 66
  store i32 1, i32* %57, align 8
  %58 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %59 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %58, i32 0, i32 67
  %60 = getelementptr inbounds [10 x i32], [10 x i32]* %59, i64 0, i64 0
  store i32 0, i32* %60, align 4
  br label %243

61:                                               ; preds = %1
  %62 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %62, i32 0, i32 62
  %64 = load i32, i32* %63, align 8
  %65 = icmp sle i32 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %61
  %67 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %68 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %67, i32 0, i32 62
  %69 = load i32, i32* %68, align 8
  %70 = icmp sgt i32 %69, 4
  br i1 %70, label %71, label %98

71:                                               ; preds = %66, %61
  %72 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %73 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %72, i32 0, i32 0
  %74 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %73, align 8
  %75 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %74, i32 0, i32 5
  store i32 24, i32* %75, align 8
  %76 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %77 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %76, i32 0, i32 62
  %78 = load i32, i32* %77, align 8
  %79 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %80 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %79, i32 0, i32 0
  %81 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %82 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %81, i32 0, i32 6
  %83 = bitcast %union.anon* %82 to [8 x i32]*
  %84 = getelementptr inbounds [8 x i32], [8 x i32]* %83, i64 0, i64 0
  store i32 %78, i32* %84, align 4
  %85 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %86 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %85, i32 0, i32 0
  %87 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %86, align 8
  %88 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %87, i32 0, i32 6
  %89 = bitcast %union.anon* %88 to [8 x i32]*
  %90 = getelementptr inbounds [8 x i32], [8 x i32]* %89, i64 0, i64 1
  store i32 4, i32* %90, align 4
  %91 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %92 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %91, i32 0, i32 0
  %93 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %92, align 8
  %94 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %93, i32 0, i32 0
  %95 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %94, align 8
  %96 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %97 = bitcast %struct.jpeg_decompress_struct.539* %96 to %struct.jpeg_common_struct*
  call void %95(%struct.jpeg_common_struct* %97)
  br label %98

98:                                               ; preds = %71, %66
  %99 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %100 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %99, i32 0, i32 6
  %101 = load i32, i32* %100, align 8
  %102 = zext i32 %101 to i64
  %103 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %104 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %103, i32 0, i32 57
  %105 = load i32, i32* %104, align 4
  %106 = mul nsw i32 %105, 8
  %107 = sext i32 %106 to i64
  %108 = call i64 @jdiv_round_up(i64 %102, i64 %107)
  %109 = trunc i64 %108 to i32
  %110 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %111 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %110, i32 0, i32 64
  store i32 %109, i32* %111, align 8
  %112 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %113 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %112, i32 0, i32 7
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i64
  %116 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %117 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %116, i32 0, i32 58
  %118 = load i32, i32* %117, align 8
  %119 = mul nsw i32 %118, 8
  %120 = sext i32 %119 to i64
  %121 = call i64 @jdiv_round_up(i64 %115, i64 %120)
  %122 = trunc i64 %121 to i32
  %123 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %124 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %123, i32 0, i32 65
  store i32 %122, i32* %124, align 4
  %125 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %126 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %125, i32 0, i32 66
  store i32 0, i32* %126, align 8
  store i32 0, i32* %3, align 4
  br label %127

127:                                              ; preds = %239, %98
  %128 = load i32, i32* %3, align 4
  %129 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %130 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %129, i32 0, i32 62
  %131 = load i32, i32* %130, align 8
  %132 = icmp slt i32 %128, %131
  br i1 %132, label %133, label %242

133:                                              ; preds = %127
  %134 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %135 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %134, i32 0, i32 63
  %136 = load i32, i32* %3, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %135, i64 0, i64 %137
  %139 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %138, align 8
  store %struct.jpeg_component_info* %139, %struct.jpeg_component_info** %6, align 8
  %140 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %141 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %140, i32 0, i32 2
  %142 = load i32, i32* %141, align 8
  %143 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %144 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %143, i32 0, i32 13
  store i32 %142, i32* %144, align 4
  %145 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %146 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %145, i32 0, i32 3
  %147 = load i32, i32* %146, align 4
  %148 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %149 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %148, i32 0, i32 14
  store i32 %147, i32* %149, align 8
  %150 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %151 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %150, i32 0, i32 13
  %152 = load i32, i32* %151, align 4
  %153 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %154 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %153, i32 0, i32 14
  %155 = load i32, i32* %154, align 8
  %156 = mul nsw i32 %152, %155
  %157 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %158 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %157, i32 0, i32 15
  store i32 %156, i32* %158, align 4
  %159 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %160 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %159, i32 0, i32 13
  %161 = load i32, i32* %160, align 4
  %162 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %163 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %162, i32 0, i32 9
  %164 = load i32, i32* %163, align 4
  %165 = mul nsw i32 %161, %164
  %166 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %167 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %166, i32 0, i32 16
  store i32 %165, i32* %167, align 8
  %168 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %169 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %168, i32 0, i32 7
  %170 = load i32, i32* %169, align 4
  %171 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %172 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %171, i32 0, i32 13
  %173 = load i32, i32* %172, align 4
  %174 = urem i32 %170, %173
  store i32 %174, i32* %5, align 4
  %175 = load i32, i32* %5, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %181

177:                                              ; preds = %133
  %178 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %179 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %178, i32 0, i32 13
  %180 = load i32, i32* %179, align 4
  store i32 %180, i32* %5, align 4
  br label %181

181:                                              ; preds = %177, %133
  %182 = load i32, i32* %5, align 4
  %183 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %184 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %183, i32 0, i32 17
  store i32 %182, i32* %184, align 4
  %185 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %186 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %185, i32 0, i32 8
  %187 = load i32, i32* %186, align 8
  %188 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %189 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %188, i32 0, i32 14
  %190 = load i32, i32* %189, align 8
  %191 = urem i32 %187, %190
  store i32 %191, i32* %5, align 4
  %192 = load i32, i32* %5, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %198

194:                                              ; preds = %181
  %195 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %196 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %195, i32 0, i32 14
  %197 = load i32, i32* %196, align 8
  store i32 %197, i32* %5, align 4
  br label %198

198:                                              ; preds = %194, %181
  %199 = load i32, i32* %5, align 4
  %200 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %201 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %200, i32 0, i32 18
  store i32 %199, i32* %201, align 8
  %202 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %203 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %202, i32 0, i32 15
  %204 = load i32, i32* %203, align 4
  store i32 %204, i32* %4, align 4
  %205 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %206 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %205, i32 0, i32 66
  %207 = load i32, i32* %206, align 8
  %208 = load i32, i32* %4, align 4
  %209 = add nsw i32 %207, %208
  %210 = icmp sgt i32 %209, 10
  br i1 %210, label %211, label %223

211:                                              ; preds = %198
  %212 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %213 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %212, i32 0, i32 0
  %214 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %213, align 8
  %215 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %214, i32 0, i32 5
  store i32 11, i32* %215, align 8
  %216 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %217 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %216, i32 0, i32 0
  %218 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %217, align 8
  %219 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %218, i32 0, i32 0
  %220 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %219, align 8
  %221 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %222 = bitcast %struct.jpeg_decompress_struct.539* %221 to %struct.jpeg_common_struct*
  call void %220(%struct.jpeg_common_struct* %222)
  br label %223

223:                                              ; preds = %211, %198
  br label %224

224:                                              ; preds = %228, %223
  %225 = load i32, i32* %4, align 4
  %226 = add nsw i32 %225, -1
  store i32 %226, i32* %4, align 4
  %227 = icmp sgt i32 %225, 0
  br i1 %227, label %228, label %238

228:                                              ; preds = %224
  %229 = load i32, i32* %3, align 4
  %230 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %231 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %230, i32 0, i32 67
  %232 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %233 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %232, i32 0, i32 66
  %234 = load i32, i32* %233, align 8
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %233, align 8
  %236 = sext i32 %234 to i64
  %237 = getelementptr inbounds [10 x i32], [10 x i32]* %231, i64 0, i64 %236
  store i32 %229, i32* %237, align 4
  br label %224

238:                                              ; preds = %224
  br label %239

239:                                              ; preds = %238
  %240 = load i32, i32* %3, align 4
  %241 = add nsw i32 %240, 1
  store i32 %241, i32* %3, align 4
  br label %127

242:                                              ; preds = %127
  br label %243

243:                                              ; preds = %242, %52
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @latch_quant_tables(%struct.jpeg_decompress_struct.539* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.539*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.jpeg_component_info*, align 8
  %6 = alloca %struct.JQUANT_TBL*, align 8
  store %struct.jpeg_decompress_struct.539* %0, %struct.jpeg_decompress_struct.539** %2, align 8
  store i32 0, i32* %3, align 4
  br label %7

7:                                                ; preds = %83, %1
  %8 = load i32, i32* %3, align 4
  %9 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %9, i32 0, i32 62
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %8, %11
  br i1 %12, label %13, label %86

13:                                               ; preds = %7
  %14 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %14, i32 0, i32 63
  %16 = load i32, i32* %3, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %15, i64 0, i64 %17
  %19 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8
  store %struct.jpeg_component_info* %19, %struct.jpeg_component_info** %5, align 8
  %20 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %21 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %20, i32 0, i32 19
  %22 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %21, align 8
  %23 = icmp ne %struct.JQUANT_TBL* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %13
  br label %83

25:                                               ; preds = %13
  %26 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %27 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %26, i32 0, i32 4
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %4, align 4
  %29 = load i32, i32* %4, align 4
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %25
  %32 = load i32, i32* %4, align 4
  %33 = icmp sge i32 %32, 4
  br i1 %33, label %42, label %34

34:                                               ; preds = %31
  %35 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %35, i32 0, i32 39
  %37 = load i32, i32* %4, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %36, i64 0, i64 %38
  %40 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %39, align 8
  %41 = icmp eq %struct.JQUANT_TBL* %40, null
  br i1 %41, label %42, label %61

42:                                               ; preds = %34, %31, %25
  %43 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %43, i32 0, i32 0
  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i32 0, i32 5
  store i32 51, i32* %46, align 8
  %47 = load i32, i32* %4, align 4
  %48 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %49 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %48, i32 0, i32 0
  %50 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %49, align 8
  %51 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %50, i32 0, i32 6
  %52 = bitcast %union.anon* %51 to [8 x i32]*
  %53 = getelementptr inbounds [8 x i32], [8 x i32]* %52, i64 0, i64 0
  store i32 %47, i32* %53, align 4
  %54 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %54, i32 0, i32 0
  %56 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %57 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %56, i32 0, i32 0
  %58 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %57, align 8
  %59 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %60 = bitcast %struct.jpeg_decompress_struct.539* %59 to %struct.jpeg_common_struct*
  call void %58(%struct.jpeg_common_struct* %60)
  br label %61

61:                                               ; preds = %42, %34
  %62 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %62, i32 0, i32 1
  %64 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %63, align 8
  %65 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %64, i32 0, i32 0
  %66 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %65, align 8
  %67 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %68 = bitcast %struct.jpeg_decompress_struct.539* %67 to %struct.jpeg_common_struct*
  %69 = call i8* %66(%struct.jpeg_common_struct* %68, i32 1, i64 132)
  %70 = bitcast i8* %69 to %struct.JQUANT_TBL*
  store %struct.JQUANT_TBL* %70, %struct.JQUANT_TBL** %6, align 8
  %71 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %6, align 8
  %72 = bitcast %struct.JQUANT_TBL* %71 to i8*
  %73 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %74 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %73, i32 0, i32 39
  %75 = load i32, i32* %4, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %74, i64 0, i64 %76
  %78 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %77, align 8
  %79 = bitcast %struct.JQUANT_TBL* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %79, i64 132, i1 false)
  %80 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %6, align 8
  %81 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %82 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %81, i32 0, i32 19
  store %struct.JQUANT_TBL* %80, %struct.JQUANT_TBL** %82, align 8
  br label %83

83:                                               ; preds = %61, %24
  %84 = load i32, i32* %3, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %3, align 4
  br label %7

86:                                               ; preds = %7
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @initial_setup.51(%struct.jpeg_decompress_struct.539* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.539*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_decompress_struct.539* %0, %struct.jpeg_decompress_struct.539** %2, align 8
  %5 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %5, i32 0, i32 7
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = icmp sgt i64 %8, 65500
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %11, i32 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = icmp sgt i64 %14, 65500
  br i1 %15, label %16, label %34

16:                                               ; preds = %10, %1
  %17 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %17, i32 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i32 0, i32 5
  store i32 40, i32* %20, align 8
  %21 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %21, i32 0, i32 0
  %23 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %23, i32 0, i32 6
  %25 = bitcast %union.anon* %24 to [8 x i32]*
  %26 = getelementptr inbounds [8 x i32], [8 x i32]* %25, i64 0, i64 0
  store i32 65500, i32* %26, align 4
  %27 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %27, i32 0, i32 0
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i32 0, i32 0
  %31 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %30, align 8
  %32 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %33 = bitcast %struct.jpeg_decompress_struct.539* %32 to %struct.jpeg_common_struct*
  call void %31(%struct.jpeg_common_struct* %33)
  br label %34

34:                                               ; preds = %16, %10
  %35 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %35, i32 0, i32 42
  %37 = load i32, i32* %36, align 8
  %38 = icmp ne i32 %37, 8
  br i1 %38, label %39, label %60

39:                                               ; preds = %34
  %40 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %40, i32 0, i32 0
  %42 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %41, align 8
  %43 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %42, i32 0, i32 5
  store i32 13, i32* %43, align 8
  %44 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %45 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %44, i32 0, i32 42
  %46 = load i32, i32* %45, align 8
  %47 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %47, i32 0, i32 0
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i32 0, i32 6
  %51 = bitcast %union.anon* %50 to [8 x i32]*
  %52 = getelementptr inbounds [8 x i32], [8 x i32]* %51, i64 0, i64 0
  store i32 %46, i32* %52, align 4
  %53 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %54 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %53, i32 0, i32 0
  %55 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %54, align 8
  %56 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %55, i32 0, i32 0
  %57 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %56, align 8
  %58 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %59 = bitcast %struct.jpeg_decompress_struct.539* %58 to %struct.jpeg_common_struct*
  call void %57(%struct.jpeg_common_struct* %59)
  br label %60

60:                                               ; preds = %39, %34
  %61 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %62 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %61, i32 0, i32 8
  %63 = load i32, i32* %62, align 8
  %64 = icmp sgt i32 %63, 10
  br i1 %64, label %65, label %92

65:                                               ; preds = %60
  %66 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %67 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %66, i32 0, i32 0
  %68 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %67, align 8
  %69 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %68, i32 0, i32 5
  store i32 24, i32* %69, align 8
  %70 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %71 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %70, i32 0, i32 8
  %72 = load i32, i32* %71, align 8
  %73 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %74 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %73, i32 0, i32 0
  %75 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %74, align 8
  %76 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %75, i32 0, i32 6
  %77 = bitcast %union.anon* %76 to [8 x i32]*
  %78 = getelementptr inbounds [8 x i32], [8 x i32]* %77, i64 0, i64 0
  store i32 %72, i32* %78, align 4
  %79 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %80 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %79, i32 0, i32 0
  %81 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %82 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %81, i32 0, i32 6
  %83 = bitcast %union.anon* %82 to [8 x i32]*
  %84 = getelementptr inbounds [8 x i32], [8 x i32]* %83, i64 0, i64 1
  store i32 10, i32* %84, align 4
  %85 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %86 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %85, i32 0, i32 0
  %87 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %86, align 8
  %88 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %87, i32 0, i32 0
  %89 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %88, align 8
  %90 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %91 = bitcast %struct.jpeg_decompress_struct.539* %90 to %struct.jpeg_common_struct*
  call void %89(%struct.jpeg_common_struct* %91)
  br label %92

92:                                               ; preds = %65, %60
  %93 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %94 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %93, i32 0, i32 57
  store i32 1, i32* %94, align 4
  %95 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %96 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %95, i32 0, i32 58
  store i32 1, i32* %96, align 8
  store i32 0, i32* %3, align 4
  %97 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %98 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %97, i32 0, i32 43
  %99 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %98, align 8
  store %struct.jpeg_component_info* %99, %struct.jpeg_component_info** %4, align 8
  br label %100

100:                                              ; preds = %177, %92
  %101 = load i32, i32* %3, align 4
  %102 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %103 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %102, i32 0, i32 8
  %104 = load i32, i32* %103, align 8
  %105 = icmp slt i32 %101, %104
  br i1 %105, label %106, label %182

106:                                              ; preds = %100
  %107 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %108 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %107, i32 0, i32 2
  %109 = load i32, i32* %108, align 8
  %110 = icmp sle i32 %109, 0
  br i1 %110, label %126, label %111

111:                                              ; preds = %106
  %112 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %113 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %112, i32 0, i32 2
  %114 = load i32, i32* %113, align 8
  %115 = icmp sgt i32 %114, 4
  br i1 %115, label %126, label %116

116:                                              ; preds = %111
  %117 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %118 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %117, i32 0, i32 3
  %119 = load i32, i32* %118, align 4
  %120 = icmp sle i32 %119, 0
  br i1 %120, label %126, label %121

121:                                              ; preds = %116
  %122 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %123 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %122, i32 0, i32 3
  %124 = load i32, i32* %123, align 4
  %125 = icmp sgt i32 %124, 4
  br i1 %125, label %126, label %138

126:                                              ; preds = %121, %116, %111, %106
  %127 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %128 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %127, i32 0, i32 0
  %129 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %128, align 8
  %130 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %129, i32 0, i32 5
  store i32 16, i32* %130, align 8
  %131 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %132 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %131, i32 0, i32 0
  %133 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %132, align 8
  %134 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %133, i32 0, i32 0
  %135 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %134, align 8
  %136 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %137 = bitcast %struct.jpeg_decompress_struct.539* %136 to %struct.jpeg_common_struct*
  call void %135(%struct.jpeg_common_struct* %137)
  br label %138

138:                                              ; preds = %126, %121
  %139 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %140 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %139, i32 0, i32 57
  %141 = load i32, i32* %140, align 4
  %142 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %143 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %142, i32 0, i32 2
  %144 = load i32, i32* %143, align 8
  %145 = icmp sgt i32 %141, %144
  br i1 %145, label %146, label %150

146:                                              ; preds = %138
  %147 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %148 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %147, i32 0, i32 57
  %149 = load i32, i32* %148, align 4
  br label %154

150:                                              ; preds = %138
  %151 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %152 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %151, i32 0, i32 2
  %153 = load i32, i32* %152, align 8
  br label %154

154:                                              ; preds = %150, %146
  %155 = phi i32 [ %149, %146 ], [ %153, %150 ]
  %156 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %157 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %156, i32 0, i32 57
  store i32 %155, i32* %157, align 4
  %158 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %159 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %158, i32 0, i32 58
  %160 = load i32, i32* %159, align 8
  %161 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %162 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %161, i32 0, i32 3
  %163 = load i32, i32* %162, align 4
  %164 = icmp sgt i32 %160, %163
  br i1 %164, label %165, label %169

165:                                              ; preds = %154
  %166 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %167 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %166, i32 0, i32 58
  %168 = load i32, i32* %167, align 8
  br label %173

169:                                              ; preds = %154
  %170 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %171 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %170, i32 0, i32 3
  %172 = load i32, i32* %171, align 4
  br label %173

173:                                              ; preds = %169, %165
  %174 = phi i32 [ %168, %165 ], [ %172, %169 ]
  %175 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %176 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %175, i32 0, i32 58
  store i32 %174, i32* %176, align 8
  br label %177

177:                                              ; preds = %173
  %178 = load i32, i32* %3, align 4
  %179 = add nsw i32 %178, 1
  store i32 %179, i32* %3, align 4
  %180 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %181 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %180, i32 1
  store %struct.jpeg_component_info* %181, %struct.jpeg_component_info** %4, align 8
  br label %100

182:                                              ; preds = %100
  %183 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %184 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %183, i32 0, i32 59
  store i32 8, i32* %184, align 4
  store i32 0, i32* %3, align 4
  %185 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %186 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %185, i32 0, i32 43
  %187 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %186, align 8
  store %struct.jpeg_component_info* %187, %struct.jpeg_component_info** %4, align 8
  br label %188

188:                                              ; preds = %271, %182
  %189 = load i32, i32* %3, align 4
  %190 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %191 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %190, i32 0, i32 8
  %192 = load i32, i32* %191, align 8
  %193 = icmp slt i32 %189, %192
  br i1 %193, label %194, label %276

194:                                              ; preds = %188
  %195 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %196 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %195, i32 0, i32 9
  store i32 8, i32* %196, align 4
  %197 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %198 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %197, i32 0, i32 6
  %199 = load i32, i32* %198, align 8
  %200 = zext i32 %199 to i64
  %201 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %202 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %201, i32 0, i32 2
  %203 = load i32, i32* %202, align 8
  %204 = sext i32 %203 to i64
  %205 = mul nsw i64 %200, %204
  %206 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %207 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %206, i32 0, i32 57
  %208 = load i32, i32* %207, align 4
  %209 = mul nsw i32 %208, 8
  %210 = sext i32 %209 to i64
  %211 = call i64 @jdiv_round_up(i64 %205, i64 %210)
  %212 = trunc i64 %211 to i32
  %213 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %214 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %213, i32 0, i32 7
  store i32 %212, i32* %214, align 4
  %215 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %216 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %215, i32 0, i32 7
  %217 = load i32, i32* %216, align 4
  %218 = zext i32 %217 to i64
  %219 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %220 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %219, i32 0, i32 3
  %221 = load i32, i32* %220, align 4
  %222 = sext i32 %221 to i64
  %223 = mul nsw i64 %218, %222
  %224 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %225 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %224, i32 0, i32 58
  %226 = load i32, i32* %225, align 8
  %227 = mul nsw i32 %226, 8
  %228 = sext i32 %227 to i64
  %229 = call i64 @jdiv_round_up(i64 %223, i64 %228)
  %230 = trunc i64 %229 to i32
  %231 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %232 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %231, i32 0, i32 8
  store i32 %230, i32* %232, align 8
  %233 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %234 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %233, i32 0, i32 6
  %235 = load i32, i32* %234, align 8
  %236 = zext i32 %235 to i64
  %237 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %238 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %237, i32 0, i32 2
  %239 = load i32, i32* %238, align 8
  %240 = sext i32 %239 to i64
  %241 = mul nsw i64 %236, %240
  %242 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %243 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %242, i32 0, i32 57
  %244 = load i32, i32* %243, align 4
  %245 = sext i32 %244 to i64
  %246 = call i64 @jdiv_round_up(i64 %241, i64 %245)
  %247 = trunc i64 %246 to i32
  %248 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %249 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %248, i32 0, i32 10
  store i32 %247, i32* %249, align 8
  %250 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %251 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %250, i32 0, i32 7
  %252 = load i32, i32* %251, align 4
  %253 = zext i32 %252 to i64
  %254 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %255 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %254, i32 0, i32 3
  %256 = load i32, i32* %255, align 4
  %257 = sext i32 %256 to i64
  %258 = mul nsw i64 %253, %257
  %259 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %260 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %259, i32 0, i32 58
  %261 = load i32, i32* %260, align 8
  %262 = sext i32 %261 to i64
  %263 = call i64 @jdiv_round_up(i64 %258, i64 %262)
  %264 = trunc i64 %263 to i32
  %265 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %266 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %265, i32 0, i32 11
  store i32 %264, i32* %266, align 4
  %267 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %268 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %267, i32 0, i32 12
  store i32 1, i32* %268, align 8
  %269 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %270 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %269, i32 0, i32 19
  store %struct.JQUANT_TBL* null, %struct.JQUANT_TBL** %270, align 8
  br label %271

271:                                              ; preds = %194
  %272 = load i32, i32* %3, align 4
  %273 = add nsw i32 %272, 1
  store i32 %273, i32* %3, align 4
  %274 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %275 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %274, i32 1
  store %struct.jpeg_component_info* %275, %struct.jpeg_component_info** %4, align 8
  br label %188

276:                                              ; preds = %188
  %277 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %278 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %277, i32 0, i32 7
  %279 = load i32, i32* %278, align 4
  %280 = zext i32 %279 to i64
  %281 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %282 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %281, i32 0, i32 58
  %283 = load i32, i32* %282, align 8
  %284 = mul nsw i32 %283, 8
  %285 = sext i32 %284 to i64
  %286 = call i64 @jdiv_round_up(i64 %280, i64 %285)
  %287 = trunc i64 %286 to i32
  %288 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %289 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %288, i32 0, i32 60
  store i32 %287, i32* %289, align 8
  %290 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %291 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %290, i32 0, i32 62
  %292 = load i32, i32* %291, align 8
  %293 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %294 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %293, i32 0, i32 8
  %295 = load i32, i32* %294, align 8
  %296 = icmp slt i32 %292, %295
  br i1 %296, label %302, label %297

297:                                              ; preds = %276
  %298 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %299 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %298, i32 0, i32 44
  %300 = load i32, i32* %299, align 8
  %301 = icmp ne i32 %300, 0
  br i1 %301, label %302, label %307

302:                                              ; preds = %297, %276
  %303 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %304 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %303, i32 0, i32 77
  %305 = load %struct.jpeg_input_controller.551*, %struct.jpeg_input_controller.551** %304, align 8
  %306 = getelementptr inbounds %struct.jpeg_input_controller.551, %struct.jpeg_input_controller.551* %305, i32 0, i32 4
  store i32 1, i32* %306, align 8
  br label %312

307:                                              ; preds = %297
  %308 = load %struct.jpeg_decompress_struct.539*, %struct.jpeg_decompress_struct.539** %2, align 8
  %309 = getelementptr inbounds %struct.jpeg_decompress_struct.539, %struct.jpeg_decompress_struct.539* %308, i32 0, i32 77
  %310 = load %struct.jpeg_input_controller.551*, %struct.jpeg_input_controller.551** %309, align 8
  %311 = getelementptr inbounds %struct.jpeg_input_controller.551, %struct.jpeg_input_controller.551* %310, i32 0, i32 4
  store i32 0, i32* %311, align 8
  br label %312

312:                                              ; preds = %307, %302
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_d_main_controller(%struct.jpeg_decompress_struct.562* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct.562*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.my_main_controller.585*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_decompress_struct.562* %0, %struct.jpeg_decompress_struct.562** %3, align 8
  store i32 %1, i32* %4, align 4
  %10 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %10, i32 0, i32 1
  %12 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %12, i32 0, i32 0
  %14 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %13, align 8
  %15 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %16 = bitcast %struct.jpeg_decompress_struct.562* %15 to %struct.jpeg_common_struct*
  %17 = call i8* %14(%struct.jpeg_common_struct* %16, i32 1, i64 136)
  %18 = bitcast i8* %17 to %struct.my_main_controller.585*
  store %struct.my_main_controller.585* %18, %struct.my_main_controller.585** %5, align 8
  %19 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %5, align 8
  %20 = bitcast %struct.my_main_controller.585* %19 to %struct.jpeg_d_main_controller.571*
  %21 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %21, i32 0, i32 74
  store %struct.jpeg_d_main_controller.571* %20, %struct.jpeg_d_main_controller.571** %22, align 8
  %23 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %5, align 8
  %24 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %23, i32 0, i32 0
  %25 = getelementptr inbounds %struct.jpeg_d_main_controller.571, %struct.jpeg_d_main_controller.571* %24, i32 0, i32 0
  store void (%struct.jpeg_decompress_struct.562*, i32)* @start_pass_main.52, void (%struct.jpeg_decompress_struct.562*, i32)** %25, align 8
  %26 = load i32, i32* %4, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %40

28:                                               ; preds = %2
  %29 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %29, i32 0, i32 0
  %31 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %30, align 8
  %32 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %31, i32 0, i32 5
  store i32 4, i32* %32, align 8
  %33 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %33, i32 0, i32 0
  %35 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %34, align 8
  %36 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %35, i32 0, i32 0
  %37 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %36, align 8
  %38 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %39 = bitcast %struct.jpeg_decompress_struct.562* %38 to %struct.jpeg_common_struct*
  call void %37(%struct.jpeg_common_struct* %39)
  br label %40

40:                                               ; preds = %28, %2
  %41 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %42 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %41, i32 0, i32 81
  %43 = load %struct.jpeg_upsampler.578*, %struct.jpeg_upsampler.578** %42, align 8
  %44 = getelementptr inbounds %struct.jpeg_upsampler.578, %struct.jpeg_upsampler.578* %43, i32 0, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %70

47:                                               ; preds = %40
  %48 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %49 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %48, i32 0, i32 59
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 2
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %54 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %53, i32 0, i32 0
  %55 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %54, align 8
  %56 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %55, i32 0, i32 5
  store i32 46, i32* %56, align 8
  %57 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %58 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %57, i32 0, i32 0
  %59 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %58, align 8
  %60 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %59, i32 0, i32 0
  %61 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %60, align 8
  %62 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %63 = bitcast %struct.jpeg_decompress_struct.562* %62 to %struct.jpeg_common_struct*
  call void %61(%struct.jpeg_common_struct* %63)
  br label %64

64:                                               ; preds = %52, %47
  %65 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  call void @alloc_funny_pointers(%struct.jpeg_decompress_struct.562* %65)
  %66 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %67 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %66, i32 0, i32 59
  %68 = load i32, i32* %67, align 4
  %69 = add nsw i32 %68, 2
  store i32 %69, i32* %8, align 4
  br label %74

70:                                               ; preds = %40
  %71 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %71, i32 0, i32 59
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %8, align 4
  br label %74

74:                                               ; preds = %70, %64
  store i32 0, i32* %6, align 4
  %75 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %76 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %75, i32 0, i32 43
  %77 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %76, align 8
  store %struct.jpeg_component_info* %77, %struct.jpeg_component_info** %9, align 8
  br label %78

78:                                               ; preds = %119, %74
  %79 = load i32, i32* %6, align 4
  %80 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %81 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %80, i32 0, i32 8
  %82 = load i32, i32* %81, align 8
  %83 = icmp slt i32 %79, %82
  br i1 %83, label %84, label %124

84:                                               ; preds = %78
  %85 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8
  %86 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %85, i32 0, i32 3
  %87 = load i32, i32* %86, align 4
  %88 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8
  %89 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %88, i32 0, i32 9
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %87, %90
  %92 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %93 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %92, i32 0, i32 59
  %94 = load i32, i32* %93, align 4
  %95 = sdiv i32 %91, %94
  store i32 %95, i32* %7, align 4
  %96 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %97 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %96, i32 0, i32 1
  %98 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %97, align 8
  %99 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %98, i32 0, i32 2
  %100 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %99, align 8
  %101 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %102 = bitcast %struct.jpeg_decompress_struct.562* %101 to %struct.jpeg_common_struct*
  %103 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8
  %104 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %103, i32 0, i32 7
  %105 = load i32, i32* %104, align 4
  %106 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8
  %107 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %106, i32 0, i32 9
  %108 = load i32, i32* %107, align 4
  %109 = mul i32 %105, %108
  %110 = load i32, i32* %7, align 4
  %111 = load i32, i32* %8, align 4
  %112 = mul nsw i32 %110, %111
  %113 = call i8** %100(%struct.jpeg_common_struct* %102, i32 1, i32 %109, i32 %112)
  %114 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %5, align 8
  %115 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %114, i32 0, i32 1
  %116 = load i32, i32* %6, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [10 x i8**], [10 x i8**]* %115, i64 0, i64 %117
  store i8** %113, i8*** %118, align 8
  br label %119

119:                                              ; preds = %84
  %120 = load i32, i32* %6, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %6, align 4
  %122 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8
  %123 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %122, i32 1
  store %struct.jpeg_component_info* %123, %struct.jpeg_component_info** %9, align 8
  br label %78

124:                                              ; preds = %78
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_main.52(%struct.jpeg_decompress_struct.562* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct.562*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.my_main_controller.585*, align 8
  store %struct.jpeg_decompress_struct.562* %0, %struct.jpeg_decompress_struct.562** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %6, i32 0, i32 74
  %8 = load %struct.jpeg_d_main_controller.571*, %struct.jpeg_d_main_controller.571** %7, align 8
  %9 = bitcast %struct.jpeg_d_main_controller.571* %8 to %struct.my_main_controller.585*
  store %struct.my_main_controller.585* %9, %struct.my_main_controller.585** %5, align 8
  %10 = load i32, i32* %4, align 4
  switch i32 %10, label %42 [
    i32 0, label %11
    i32 2, label %38
  ]

11:                                               ; preds = %2
  %12 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %12, i32 0, i32 81
  %14 = load %struct.jpeg_upsampler.578*, %struct.jpeg_upsampler.578** %13, align 8
  %15 = getelementptr inbounds %struct.jpeg_upsampler.578, %struct.jpeg_upsampler.578* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %29

18:                                               ; preds = %11
  %19 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %5, align 8
  %20 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %19, i32 0, i32 0
  %21 = getelementptr inbounds %struct.jpeg_d_main_controller.571, %struct.jpeg_d_main_controller.571* %20, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.562*, i8**, i32*, i32)* @process_data_context_main, void (%struct.jpeg_decompress_struct.562*, i8**, i32*, i32)** %21, align 8
  %22 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  call void @make_funny_pointers(%struct.jpeg_decompress_struct.562* %22)
  %23 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %5, align 8
  %24 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %23, i32 0, i32 5
  store i32 0, i32* %24, align 8
  %25 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %5, align 8
  %26 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %25, i32 0, i32 6
  store i32 0, i32* %26, align 4
  %27 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %5, align 8
  %28 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %27, i32 0, i32 8
  store i32 0, i32* %28, align 4
  br label %33

29:                                               ; preds = %11
  %30 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %5, align 8
  %31 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %30, i32 0, i32 0
  %32 = getelementptr inbounds %struct.jpeg_d_main_controller.571, %struct.jpeg_d_main_controller.571* %31, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.562*, i8**, i32*, i32)* @process_data_simple_main.53, void (%struct.jpeg_decompress_struct.562*, i8**, i32*, i32)** %32, align 8
  br label %33

33:                                               ; preds = %29, %18
  %34 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %5, align 8
  %35 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %34, i32 0, i32 2
  store i32 0, i32* %35, align 8
  %36 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %5, align 8
  %37 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %36, i32 0, i32 3
  store i32 0, i32* %37, align 4
  br label %54

38:                                               ; preds = %2
  %39 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %5, align 8
  %40 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %39, i32 0, i32 0
  %41 = getelementptr inbounds %struct.jpeg_d_main_controller.571, %struct.jpeg_d_main_controller.571* %40, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.562*, i8**, i32*, i32)* @process_data_crank_post, void (%struct.jpeg_decompress_struct.562*, i8**, i32*, i32)** %41, align 8
  br label %54

42:                                               ; preds = %2
  %43 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %43, i32 0, i32 0
  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i32 0, i32 5
  store i32 4, i32* %46, align 8
  %47 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %47, i32 0, i32 0
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i32 0, i32 0
  %51 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %50, align 8
  %52 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %3, align 8
  %53 = bitcast %struct.jpeg_decompress_struct.562* %52 to %struct.jpeg_common_struct*
  call void %51(%struct.jpeg_common_struct* %53)
  br label %54

54:                                               ; preds = %42, %38, %33
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @alloc_funny_pointers(%struct.jpeg_decompress_struct.562* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.562*, align 8
  %3 = alloca %struct.my_main_controller.585*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.jpeg_component_info*, align 8
  %8 = alloca i8**, align 8
  store %struct.jpeg_decompress_struct.562* %0, %struct.jpeg_decompress_struct.562** %2, align 8
  %9 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %9, i32 0, i32 74
  %11 = load %struct.jpeg_d_main_controller.571*, %struct.jpeg_d_main_controller.571** %10, align 8
  %12 = bitcast %struct.jpeg_d_main_controller.571* %11 to %struct.my_main_controller.585*
  store %struct.my_main_controller.585* %12, %struct.my_main_controller.585** %3, align 8
  %13 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %13, i32 0, i32 59
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %6, align 4
  %16 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %16, i32 0, i32 1
  %18 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %17, align 8
  %19 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %18, i32 0, i32 0
  %20 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %19, align 8
  %21 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %22 = bitcast %struct.jpeg_decompress_struct.562* %21 to %struct.jpeg_common_struct*
  %23 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %23, i32 0, i32 8
  %25 = load i32, i32* %24, align 8
  %26 = mul nsw i32 %25, 2
  %27 = sext i32 %26 to i64
  %28 = mul i64 %27, 8
  %29 = call i8* %20(%struct.jpeg_common_struct* %22, i32 1, i64 %28)
  %30 = bitcast i8* %29 to i8***
  %31 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %3, align 8
  %32 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %31, i32 0, i32 4
  %33 = getelementptr inbounds [2 x i8***], [2 x i8***]* %32, i64 0, i64 0
  store i8*** %30, i8**** %33, align 8
  %34 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %3, align 8
  %35 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %34, i32 0, i32 4
  %36 = getelementptr inbounds [2 x i8***], [2 x i8***]* %35, i64 0, i64 0
  %37 = load i8***, i8**** %36, align 8
  %38 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %39 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %38, i32 0, i32 8
  %40 = load i32, i32* %39, align 8
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8**, i8*** %37, i64 %41
  %43 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %3, align 8
  %44 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %43, i32 0, i32 4
  %45 = getelementptr inbounds [2 x i8***], [2 x i8***]* %44, i64 0, i64 1
  store i8*** %42, i8**** %45, align 8
  store i32 0, i32* %4, align 4
  %46 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %46, i32 0, i32 43
  %48 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %47, align 8
  store %struct.jpeg_component_info* %48, %struct.jpeg_component_info** %7, align 8
  br label %49

49:                                               ; preds = %110, %1
  %50 = load i32, i32* %4, align 4
  %51 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %51, i32 0, i32 8
  %53 = load i32, i32* %52, align 8
  %54 = icmp slt i32 %50, %53
  br i1 %54, label %55, label %115

55:                                               ; preds = %49
  %56 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i32 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %60 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %59, i32 0, i32 9
  %61 = load i32, i32* %60, align 4
  %62 = mul nsw i32 %58, %61
  %63 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %64 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %63, i32 0, i32 59
  %65 = load i32, i32* %64, align 4
  %66 = sdiv i32 %62, %65
  store i32 %66, i32* %5, align 4
  %67 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %68 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %67, i32 0, i32 1
  %69 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %68, align 8
  %70 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %69, i32 0, i32 0
  %71 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %70, align 8
  %72 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %73 = bitcast %struct.jpeg_decompress_struct.562* %72 to %struct.jpeg_common_struct*
  %74 = load i32, i32* %5, align 4
  %75 = load i32, i32* %6, align 4
  %76 = add nsw i32 %75, 4
  %77 = mul nsw i32 %74, %76
  %78 = mul nsw i32 2, %77
  %79 = sext i32 %78 to i64
  %80 = mul i64 %79, 8
  %81 = call i8* %71(%struct.jpeg_common_struct* %73, i32 1, i64 %80)
  %82 = bitcast i8* %81 to i8**
  store i8** %82, i8*** %8, align 8
  %83 = load i32, i32* %5, align 4
  %84 = load i8**, i8*** %8, align 8
  %85 = sext i32 %83 to i64
  %86 = getelementptr inbounds i8*, i8** %84, i64 %85
  store i8** %86, i8*** %8, align 8
  %87 = load i8**, i8*** %8, align 8
  %88 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %3, align 8
  %89 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %88, i32 0, i32 4
  %90 = getelementptr inbounds [2 x i8***], [2 x i8***]* %89, i64 0, i64 0
  %91 = load i8***, i8**** %90, align 8
  %92 = load i32, i32* %4, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8**, i8*** %91, i64 %93
  store i8** %87, i8*** %94, align 8
  %95 = load i32, i32* %5, align 4
  %96 = load i32, i32* %6, align 4
  %97 = add nsw i32 %96, 4
  %98 = mul nsw i32 %95, %97
  %99 = load i8**, i8*** %8, align 8
  %100 = sext i32 %98 to i64
  %101 = getelementptr inbounds i8*, i8** %99, i64 %100
  store i8** %101, i8*** %8, align 8
  %102 = load i8**, i8*** %8, align 8
  %103 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %3, align 8
  %104 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %103, i32 0, i32 4
  %105 = getelementptr inbounds [2 x i8***], [2 x i8***]* %104, i64 0, i64 1
  %106 = load i8***, i8**** %105, align 8
  %107 = load i32, i32* %4, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8**, i8*** %106, i64 %108
  store i8** %102, i8*** %109, align 8
  br label %110

110:                                              ; preds = %55
  %111 = load i32, i32* %4, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %4, align 4
  %113 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %114 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %113, i32 1
  store %struct.jpeg_component_info* %114, %struct.jpeg_component_info** %7, align 8
  br label %49

115:                                              ; preds = %49
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @process_data_context_main(%struct.jpeg_decompress_struct.562* %0, i8** %1, i32* %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.562*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.my_main_controller.585*, align 8
  store %struct.jpeg_decompress_struct.562* %0, %struct.jpeg_decompress_struct.562** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32 %3, i32* %8, align 4
  %10 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %10, i32 0, i32 74
  %12 = load %struct.jpeg_d_main_controller.571*, %struct.jpeg_d_main_controller.571** %11, align 8
  %13 = bitcast %struct.jpeg_d_main_controller.571* %12 to %struct.my_main_controller.585*
  store %struct.my_main_controller.585* %13, %struct.my_main_controller.585** %9, align 8
  %14 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %15 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %43, label %18

18:                                               ; preds = %4
  %19 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %19, i32 0, i32 75
  %21 = load %struct.jpeg_d_coef_controller.572*, %struct.jpeg_d_coef_controller.572** %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_d_coef_controller.572, %struct.jpeg_d_coef_controller.572* %21, i32 0, i32 3
  %23 = load i32 (%struct.jpeg_decompress_struct.562*, i8***)*, i32 (%struct.jpeg_decompress_struct.562*, i8***)** %22, align 8
  %24 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %25 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %26 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %25, i32 0, i32 4
  %27 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %28 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %27, i32 0, i32 5
  %29 = load i32, i32* %28, align 8
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [2 x i8***], [2 x i8***]* %26, i64 0, i64 %30
  %32 = load i8***, i8**** %31, align 8
  %33 = call i32 %23(%struct.jpeg_decompress_struct.562* %24, i8*** %32)
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %18
  br label %167

36:                                               ; preds = %18
  %37 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %38 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %37, i32 0, i32 2
  store i32 1, i32* %38, align 8
  %39 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %40 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %39, i32 0, i32 8
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %40, align 4
  br label %43

43:                                               ; preds = %36, %4
  %44 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %45 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %44, i32 0, i32 6
  %46 = load i32, i32* %45, align 4
  switch i32 %46, label %167 [
    i32 2, label %47
    i32 0, label %87
    i32 1, label %108
  ]

47:                                               ; preds = %43
  %48 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %49 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %48, i32 0, i32 76
  %50 = load %struct.jpeg_d_post_controller.573*, %struct.jpeg_d_post_controller.573** %49, align 8
  %51 = getelementptr inbounds %struct.jpeg_d_post_controller.573, %struct.jpeg_d_post_controller.573* %50, i32 0, i32 1
  %52 = load void (%struct.jpeg_decompress_struct.562*, i8***, i32*, i32, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.562*, i8***, i32*, i32, i8**, i32*, i32)** %51, align 8
  %53 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %54 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %55 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %54, i32 0, i32 4
  %56 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %57 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %56, i32 0, i32 5
  %58 = load i32, i32* %57, align 8
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [2 x i8***], [2 x i8***]* %55, i64 0, i64 %59
  %61 = load i8***, i8**** %60, align 8
  %62 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %63 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %62, i32 0, i32 3
  %64 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %65 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %64, i32 0, i32 7
  %66 = load i32, i32* %65, align 8
  %67 = load i8**, i8*** %6, align 8
  %68 = load i32*, i32** %7, align 8
  %69 = load i32, i32* %8, align 4
  call void %52(%struct.jpeg_decompress_struct.562* %53, i8*** %61, i32* %63, i32 %66, i8** %67, i32* %68, i32 %69)
  %70 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %71 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %70, i32 0, i32 3
  %72 = load i32, i32* %71, align 4
  %73 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %74 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %73, i32 0, i32 7
  %75 = load i32, i32* %74, align 8
  %76 = icmp ult i32 %72, %75
  br i1 %76, label %77, label %78

77:                                               ; preds = %47
  br label %167

78:                                               ; preds = %47
  %79 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %80 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %79, i32 0, i32 6
  store i32 0, i32* %80, align 4
  %81 = load i32*, i32** %7, align 8
  %82 = load i32, i32* %81, align 4
  %83 = load i32, i32* %8, align 4
  %84 = icmp uge i32 %82, %83
  br i1 %84, label %85, label %86

85:                                               ; preds = %78
  br label %167

86:                                               ; preds = %78
  br label %87

87:                                               ; preds = %86, %43
  %88 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %89 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %88, i32 0, i32 3
  store i32 0, i32* %89, align 4
  %90 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %91 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %90, i32 0, i32 59
  %92 = load i32, i32* %91, align 4
  %93 = sub nsw i32 %92, 1
  %94 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %95 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %94, i32 0, i32 7
  store i32 %93, i32* %95, align 8
  %96 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %97 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %96, i32 0, i32 8
  %98 = load i32, i32* %97, align 4
  %99 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %100 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %99, i32 0, i32 60
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %98, %101
  br i1 %102, label %103, label %105

103:                                              ; preds = %87
  %104 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  call void @set_bottom_pointers(%struct.jpeg_decompress_struct.562* %104)
  br label %105

105:                                              ; preds = %103, %87
  %106 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %107 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %106, i32 0, i32 6
  store i32 1, i32* %107, align 4
  br label %108

108:                                              ; preds = %105, %43
  %109 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %110 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %109, i32 0, i32 76
  %111 = load %struct.jpeg_d_post_controller.573*, %struct.jpeg_d_post_controller.573** %110, align 8
  %112 = getelementptr inbounds %struct.jpeg_d_post_controller.573, %struct.jpeg_d_post_controller.573* %111, i32 0, i32 1
  %113 = load void (%struct.jpeg_decompress_struct.562*, i8***, i32*, i32, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.562*, i8***, i32*, i32, i8**, i32*, i32)** %112, align 8
  %114 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %115 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %116 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %115, i32 0, i32 4
  %117 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %118 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %117, i32 0, i32 5
  %119 = load i32, i32* %118, align 8
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds [2 x i8***], [2 x i8***]* %116, i64 0, i64 %120
  %122 = load i8***, i8**** %121, align 8
  %123 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %124 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %123, i32 0, i32 3
  %125 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %126 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %125, i32 0, i32 7
  %127 = load i32, i32* %126, align 8
  %128 = load i8**, i8*** %6, align 8
  %129 = load i32*, i32** %7, align 8
  %130 = load i32, i32* %8, align 4
  call void %113(%struct.jpeg_decompress_struct.562* %114, i8*** %122, i32* %124, i32 %127, i8** %128, i32* %129, i32 %130)
  %131 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %132 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %131, i32 0, i32 3
  %133 = load i32, i32* %132, align 4
  %134 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %135 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %134, i32 0, i32 7
  %136 = load i32, i32* %135, align 8
  %137 = icmp ult i32 %133, %136
  br i1 %137, label %138, label %139

138:                                              ; preds = %108
  br label %167

139:                                              ; preds = %108
  %140 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %141 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %140, i32 0, i32 8
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, 1
  br i1 %143, label %144, label %146

144:                                              ; preds = %139
  %145 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  call void @set_wraparound_pointers(%struct.jpeg_decompress_struct.562* %145)
  br label %146

146:                                              ; preds = %144, %139
  %147 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %148 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %147, i32 0, i32 5
  %149 = load i32, i32* %148, align 8
  %150 = xor i32 %149, 1
  store i32 %150, i32* %148, align 8
  %151 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %152 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %151, i32 0, i32 2
  store i32 0, i32* %152, align 8
  %153 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %154 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %153, i32 0, i32 59
  %155 = load i32, i32* %154, align 4
  %156 = add nsw i32 %155, 1
  %157 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %158 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %157, i32 0, i32 3
  store i32 %156, i32* %158, align 4
  %159 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %160 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %159, i32 0, i32 59
  %161 = load i32, i32* %160, align 4
  %162 = add nsw i32 %161, 2
  %163 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %164 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %163, i32 0, i32 7
  store i32 %162, i32* %164, align 8
  %165 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %166 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %165, i32 0, i32 6
  store i32 2, i32* %166, align 4
  br label %167

167:                                              ; preds = %146, %138, %85, %77, %43, %35
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @make_funny_pointers(%struct.jpeg_decompress_struct.562* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.562*, align 8
  %3 = alloca %struct.my_main_controller.585*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.jpeg_component_info*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8**, align 8
  store %struct.jpeg_decompress_struct.562* %0, %struct.jpeg_decompress_struct.562** %2, align 8
  %12 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %12, i32 0, i32 74
  %14 = load %struct.jpeg_d_main_controller.571*, %struct.jpeg_d_main_controller.571** %13, align 8
  %15 = bitcast %struct.jpeg_d_main_controller.571* %14 to %struct.my_main_controller.585*
  store %struct.my_main_controller.585* %15, %struct.my_main_controller.585** %3, align 8
  %16 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %16, i32 0, i32 59
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %7, align 4
  store i32 0, i32* %4, align 4
  %19 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %19, i32 0, i32 43
  %21 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %20, align 8
  store %struct.jpeg_component_info* %21, %struct.jpeg_component_info** %8, align 8
  br label %22

22:                                               ; preds = %151, %1
  %23 = load i32, i32* %4, align 4
  %24 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %24, i32 0, i32 8
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %23, %26
  br i1 %27, label %28, label %156

28:                                               ; preds = %22
  %29 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  %30 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %29, i32 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  %33 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %32, i32 0, i32 9
  %34 = load i32, i32* %33, align 4
  %35 = mul nsw i32 %31, %34
  %36 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %36, i32 0, i32 59
  %38 = load i32, i32* %37, align 4
  %39 = sdiv i32 %35, %38
  store i32 %39, i32* %6, align 4
  %40 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %3, align 8
  %41 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %40, i32 0, i32 4
  %42 = getelementptr inbounds [2 x i8***], [2 x i8***]* %41, i64 0, i64 0
  %43 = load i8***, i8**** %42, align 8
  %44 = load i32, i32* %4, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8**, i8*** %43, i64 %45
  %47 = load i8**, i8*** %46, align 8
  store i8** %47, i8*** %10, align 8
  %48 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %3, align 8
  %49 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %48, i32 0, i32 4
  %50 = getelementptr inbounds [2 x i8***], [2 x i8***]* %49, i64 0, i64 1
  %51 = load i8***, i8**** %50, align 8
  %52 = load i32, i32* %4, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8**, i8*** %51, i64 %53
  %55 = load i8**, i8*** %54, align 8
  store i8** %55, i8*** %11, align 8
  %56 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %3, align 8
  %57 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %56, i32 0, i32 1
  %58 = load i32, i32* %4, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [10 x i8**], [10 x i8**]* %57, i64 0, i64 %59
  %61 = load i8**, i8*** %60, align 8
  store i8** %61, i8*** %9, align 8
  store i32 0, i32* %5, align 4
  br label %62

62:                                               ; preds = %83, %28
  %63 = load i32, i32* %5, align 4
  %64 = load i32, i32* %6, align 4
  %65 = load i32, i32* %7, align 4
  %66 = add nsw i32 %65, 2
  %67 = mul nsw i32 %64, %66
  %68 = icmp slt i32 %63, %67
  br i1 %68, label %69, label %86

69:                                               ; preds = %62
  %70 = load i8**, i8*** %9, align 8
  %71 = load i32, i32* %5, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8*, i8** %70, i64 %72
  %74 = load i8*, i8** %73, align 8
  %75 = load i8**, i8*** %11, align 8
  %76 = load i32, i32* %5, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i8*, i8** %75, i64 %77
  store i8* %74, i8** %78, align 8
  %79 = load i8**, i8*** %10, align 8
  %80 = load i32, i32* %5, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i8*, i8** %79, i64 %81
  store i8* %74, i8** %82, align 8
  br label %83

83:                                               ; preds = %69
  %84 = load i32, i32* %5, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %5, align 4
  br label %62

86:                                               ; preds = %62
  store i32 0, i32* %5, align 4
  br label %87

87:                                               ; preds = %129, %86
  %88 = load i32, i32* %5, align 4
  %89 = load i32, i32* %6, align 4
  %90 = mul nsw i32 %89, 2
  %91 = icmp slt i32 %88, %90
  br i1 %91, label %92, label %132

92:                                               ; preds = %87
  %93 = load i8**, i8*** %9, align 8
  %94 = load i32, i32* %6, align 4
  %95 = load i32, i32* %7, align 4
  %96 = mul nsw i32 %94, %95
  %97 = load i32, i32* %5, align 4
  %98 = add nsw i32 %96, %97
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8*, i8** %93, i64 %99
  %101 = load i8*, i8** %100, align 8
  %102 = load i8**, i8*** %11, align 8
  %103 = load i32, i32* %6, align 4
  %104 = load i32, i32* %7, align 4
  %105 = sub nsw i32 %104, 2
  %106 = mul nsw i32 %103, %105
  %107 = load i32, i32* %5, align 4
  %108 = add nsw i32 %106, %107
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8*, i8** %102, i64 %109
  store i8* %101, i8** %110, align 8
  %111 = load i8**, i8*** %9, align 8
  %112 = load i32, i32* %6, align 4
  %113 = load i32, i32* %7, align 4
  %114 = sub nsw i32 %113, 2
  %115 = mul nsw i32 %112, %114
  %116 = load i32, i32* %5, align 4
  %117 = add nsw i32 %115, %116
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i8*, i8** %111, i64 %118
  %120 = load i8*, i8** %119, align 8
  %121 = load i8**, i8*** %11, align 8
  %122 = load i32, i32* %6, align 4
  %123 = load i32, i32* %7, align 4
  %124 = mul nsw i32 %122, %123
  %125 = load i32, i32* %5, align 4
  %126 = add nsw i32 %124, %125
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i8*, i8** %121, i64 %127
  store i8* %120, i8** %128, align 8
  br label %129

129:                                              ; preds = %92
  %130 = load i32, i32* %5, align 4
  %131 = add nsw i32 %130, 1
  store i32 %131, i32* %5, align 4
  br label %87

132:                                              ; preds = %87
  store i32 0, i32* %5, align 4
  br label %133

133:                                              ; preds = %147, %132
  %134 = load i32, i32* %5, align 4
  %135 = load i32, i32* %6, align 4
  %136 = icmp slt i32 %134, %135
  br i1 %136, label %137, label %150

137:                                              ; preds = %133
  %138 = load i8**, i8*** %10, align 8
  %139 = getelementptr inbounds i8*, i8** %138, i64 0
  %140 = load i8*, i8** %139, align 8
  %141 = load i8**, i8*** %10, align 8
  %142 = load i32, i32* %5, align 4
  %143 = load i32, i32* %6, align 4
  %144 = sub nsw i32 %142, %143
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i8*, i8** %141, i64 %145
  store i8* %140, i8** %146, align 8
  br label %147

147:                                              ; preds = %137
  %148 = load i32, i32* %5, align 4
  %149 = add nsw i32 %148, 1
  store i32 %149, i32* %5, align 4
  br label %133

150:                                              ; preds = %133
  br label %151

151:                                              ; preds = %150
  %152 = load i32, i32* %4, align 4
  %153 = add nsw i32 %152, 1
  store i32 %153, i32* %4, align 4
  %154 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  %155 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %154, i32 1
  store %struct.jpeg_component_info* %155, %struct.jpeg_component_info** %8, align 8
  br label %22

156:                                              ; preds = %22
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @process_data_simple_main.53(%struct.jpeg_decompress_struct.562* %0, i8** %1, i32* %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.562*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.my_main_controller.585*, align 8
  %10 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.562* %0, %struct.jpeg_decompress_struct.562** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32 %3, i32* %8, align 4
  %11 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %11, i32 0, i32 74
  %13 = load %struct.jpeg_d_main_controller.571*, %struct.jpeg_d_main_controller.571** %12, align 8
  %14 = bitcast %struct.jpeg_d_main_controller.571* %13 to %struct.my_main_controller.585*
  store %struct.my_main_controller.585* %14, %struct.my_main_controller.585** %9, align 8
  %15 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %16 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %15, i32 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %35, label %19

19:                                               ; preds = %4
  %20 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %20, i32 0, i32 75
  %22 = load %struct.jpeg_d_coef_controller.572*, %struct.jpeg_d_coef_controller.572** %21, align 8
  %23 = getelementptr inbounds %struct.jpeg_d_coef_controller.572, %struct.jpeg_d_coef_controller.572* %22, i32 0, i32 3
  %24 = load i32 (%struct.jpeg_decompress_struct.562*, i8***)*, i32 (%struct.jpeg_decompress_struct.562*, i8***)** %23, align 8
  %25 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %26 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %27 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %26, i32 0, i32 1
  %28 = getelementptr inbounds [10 x i8**], [10 x i8**]* %27, i64 0, i64 0
  %29 = call i32 %24(%struct.jpeg_decompress_struct.562* %25, i8*** %28)
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %19
  br label %64

32:                                               ; preds = %19
  %33 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %34 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %33, i32 0, i32 2
  store i32 1, i32* %34, align 8
  br label %35

35:                                               ; preds = %32, %4
  %36 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %36, i32 0, i32 59
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %10, align 4
  %39 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %39, i32 0, i32 76
  %41 = load %struct.jpeg_d_post_controller.573*, %struct.jpeg_d_post_controller.573** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_d_post_controller.573, %struct.jpeg_d_post_controller.573* %41, i32 0, i32 1
  %43 = load void (%struct.jpeg_decompress_struct.562*, i8***, i32*, i32, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.562*, i8***, i32*, i32, i8**, i32*, i32)** %42, align 8
  %44 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %45 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %46 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %45, i32 0, i32 1
  %47 = getelementptr inbounds [10 x i8**], [10 x i8**]* %46, i64 0, i64 0
  %48 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %49 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %48, i32 0, i32 3
  %50 = load i32, i32* %10, align 4
  %51 = load i8**, i8*** %6, align 8
  %52 = load i32*, i32** %7, align 8
  %53 = load i32, i32* %8, align 4
  call void %43(%struct.jpeg_decompress_struct.562* %44, i8*** %47, i32* %49, i32 %50, i8** %51, i32* %52, i32 %53)
  %54 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %55 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %54, i32 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = load i32, i32* %10, align 4
  %58 = icmp uge i32 %56, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %35
  %60 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %61 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %60, i32 0, i32 2
  store i32 0, i32* %61, align 8
  %62 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %9, align 8
  %63 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %62, i32 0, i32 3
  store i32 0, i32* %63, align 4
  br label %64

64:                                               ; preds = %59, %35, %31
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @process_data_crank_post(%struct.jpeg_decompress_struct.562* %0, i8** %1, i32* %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.562*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.562* %0, %struct.jpeg_decompress_struct.562** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %9, i32 0, i32 76
  %11 = load %struct.jpeg_d_post_controller.573*, %struct.jpeg_d_post_controller.573** %10, align 8
  %12 = getelementptr inbounds %struct.jpeg_d_post_controller.573, %struct.jpeg_d_post_controller.573* %11, i32 0, i32 1
  %13 = load void (%struct.jpeg_decompress_struct.562*, i8***, i32*, i32, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.562*, i8***, i32*, i32, i8**, i32*, i32)** %12, align 8
  %14 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %5, align 8
  %15 = load i8**, i8*** %6, align 8
  %16 = load i32*, i32** %7, align 8
  %17 = load i32, i32* %8, align 4
  call void %13(%struct.jpeg_decompress_struct.562* %14, i8*** null, i32* null, i32 0, i8** %15, i32* %16, i32 %17)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @set_bottom_pointers(%struct.jpeg_decompress_struct.562* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.562*, align 8
  %3 = alloca %struct.my_main_controller.585*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.jpeg_component_info*, align 8
  %10 = alloca i8**, align 8
  store %struct.jpeg_decompress_struct.562* %0, %struct.jpeg_decompress_struct.562** %2, align 8
  %11 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %11, i32 0, i32 74
  %13 = load %struct.jpeg_d_main_controller.571*, %struct.jpeg_d_main_controller.571** %12, align 8
  %14 = bitcast %struct.jpeg_d_main_controller.571* %13 to %struct.my_main_controller.585*
  store %struct.my_main_controller.585* %14, %struct.my_main_controller.585** %3, align 8
  store i32 0, i32* %4, align 4
  %15 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %15, i32 0, i32 43
  %17 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  store %struct.jpeg_component_info* %17, %struct.jpeg_component_info** %9, align 8
  br label %18

18:                                               ; preds = %92, %1
  %19 = load i32, i32* %4, align 4
  %20 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %20, i32 0, i32 8
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %19, %22
  br i1 %23, label %24, label %97

24:                                               ; preds = %18
  %25 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8
  %26 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i32 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8
  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i32 0, i32 9
  %30 = load i32, i32* %29, align 4
  %31 = mul nsw i32 %27, %30
  store i32 %31, i32* %7, align 4
  %32 = load i32, i32* %7, align 4
  %33 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %33, i32 0, i32 59
  %35 = load i32, i32* %34, align 4
  %36 = sdiv i32 %32, %35
  store i32 %36, i32* %6, align 4
  %37 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8
  %38 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %37, i32 0, i32 11
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* %7, align 4
  %41 = urem i32 %39, %40
  store i32 %41, i32* %8, align 4
  %42 = load i32, i32* %8, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %24
  %45 = load i32, i32* %7, align 4
  store i32 %45, i32* %8, align 4
  br label %46

46:                                               ; preds = %44, %24
  %47 = load i32, i32* %4, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %57

49:                                               ; preds = %46
  %50 = load i32, i32* %8, align 4
  %51 = sub nsw i32 %50, 1
  %52 = load i32, i32* %6, align 4
  %53 = sdiv i32 %51, %52
  %54 = add nsw i32 %53, 1
  %55 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %3, align 8
  %56 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %55, i32 0, i32 7
  store i32 %54, i32* %56, align 8
  br label %57

57:                                               ; preds = %49, %46
  %58 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %3, align 8
  %59 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %58, i32 0, i32 4
  %60 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %3, align 8
  %61 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %60, i32 0, i32 5
  %62 = load i32, i32* %61, align 8
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [2 x i8***], [2 x i8***]* %59, i64 0, i64 %63
  %65 = load i8***, i8**** %64, align 8
  %66 = load i32, i32* %4, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8**, i8*** %65, i64 %67
  %69 = load i8**, i8*** %68, align 8
  store i8** %69, i8*** %10, align 8
  store i32 0, i32* %5, align 4
  br label %70

70:                                               ; preds = %88, %57
  %71 = load i32, i32* %5, align 4
  %72 = load i32, i32* %6, align 4
  %73 = mul nsw i32 %72, 2
  %74 = icmp slt i32 %71, %73
  br i1 %74, label %75, label %91

75:                                               ; preds = %70
  %76 = load i8**, i8*** %10, align 8
  %77 = load i32, i32* %8, align 4
  %78 = sub nsw i32 %77, 1
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8*, i8** %76, i64 %79
  %81 = load i8*, i8** %80, align 8
  %82 = load i8**, i8*** %10, align 8
  %83 = load i32, i32* %8, align 4
  %84 = load i32, i32* %5, align 4
  %85 = add nsw i32 %83, %84
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8*, i8** %82, i64 %86
  store i8* %81, i8** %87, align 8
  br label %88

88:                                               ; preds = %75
  %89 = load i32, i32* %5, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %5, align 4
  br label %70

91:                                               ; preds = %70
  br label %92

92:                                               ; preds = %91
  %93 = load i32, i32* %4, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %4, align 4
  %95 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8
  %96 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %95, i32 1
  store %struct.jpeg_component_info* %96, %struct.jpeg_component_info** %9, align 8
  br label %18

97:                                               ; preds = %18
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @set_wraparound_pointers(%struct.jpeg_decompress_struct.562* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.562*, align 8
  %3 = alloca %struct.my_main_controller.585*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.jpeg_component_info*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i8**, align 8
  store %struct.jpeg_decompress_struct.562* %0, %struct.jpeg_decompress_struct.562** %2, align 8
  %11 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %11, i32 0, i32 74
  %13 = load %struct.jpeg_d_main_controller.571*, %struct.jpeg_d_main_controller.571** %12, align 8
  %14 = bitcast %struct.jpeg_d_main_controller.571* %13 to %struct.my_main_controller.585*
  store %struct.my_main_controller.585* %14, %struct.my_main_controller.585** %3, align 8
  %15 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %15, i32 0, i32 59
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %7, align 4
  store i32 0, i32* %4, align 4
  %18 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %18, i32 0, i32 43
  %20 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8
  store %struct.jpeg_component_info* %20, %struct.jpeg_component_info** %8, align 8
  br label %21

21:                                               ; preds = %124, %1
  %22 = load i32, i32* %4, align 4
  %23 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %23, i32 0, i32 8
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %22, %25
  br i1 %26, label %27, label %129

27:                                               ; preds = %21
  %28 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i32 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  %32 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %31, i32 0, i32 9
  %33 = load i32, i32* %32, align 4
  %34 = mul nsw i32 %30, %33
  %35 = load %struct.jpeg_decompress_struct.562*, %struct.jpeg_decompress_struct.562** %2, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct.562, %struct.jpeg_decompress_struct.562* %35, i32 0, i32 59
  %37 = load i32, i32* %36, align 4
  %38 = sdiv i32 %34, %37
  store i32 %38, i32* %6, align 4
  %39 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %3, align 8
  %40 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %39, i32 0, i32 4
  %41 = getelementptr inbounds [2 x i8***], [2 x i8***]* %40, i64 0, i64 0
  %42 = load i8***, i8**** %41, align 8
  %43 = load i32, i32* %4, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8**, i8*** %42, i64 %44
  %46 = load i8**, i8*** %45, align 8
  store i8** %46, i8*** %9, align 8
  %47 = load %struct.my_main_controller.585*, %struct.my_main_controller.585** %3, align 8
  %48 = getelementptr inbounds %struct.my_main_controller.585, %struct.my_main_controller.585* %47, i32 0, i32 4
  %49 = getelementptr inbounds [2 x i8***], [2 x i8***]* %48, i64 0, i64 1
  %50 = load i8***, i8**** %49, align 8
  %51 = load i32, i32* %4, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8**, i8*** %50, i64 %52
  %54 = load i8**, i8*** %53, align 8
  store i8** %54, i8*** %10, align 8
  store i32 0, i32* %5, align 4
  br label %55

55:                                               ; preds = %120, %27
  %56 = load i32, i32* %5, align 4
  %57 = load i32, i32* %6, align 4
  %58 = icmp slt i32 %56, %57
  br i1 %58, label %59, label %123

59:                                               ; preds = %55
  %60 = load i8**, i8*** %9, align 8
  %61 = load i32, i32* %6, align 4
  %62 = load i32, i32* %7, align 4
  %63 = add nsw i32 %62, 1
  %64 = mul nsw i32 %61, %63
  %65 = load i32, i32* %5, align 4
  %66 = add nsw i32 %64, %65
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8*, i8** %60, i64 %67
  %69 = load i8*, i8** %68, align 8
  %70 = load i8**, i8*** %9, align 8
  %71 = load i32, i32* %5, align 4
  %72 = load i32, i32* %6, align 4
  %73 = sub nsw i32 %71, %72
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8*, i8** %70, i64 %74
  store i8* %69, i8** %75, align 8
  %76 = load i8**, i8*** %10, align 8
  %77 = load i32, i32* %6, align 4
  %78 = load i32, i32* %7, align 4
  %79 = add nsw i32 %78, 1
  %80 = mul nsw i32 %77, %79
  %81 = load i32, i32* %5, align 4
  %82 = add nsw i32 %80, %81
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8*, i8** %76, i64 %83
  %85 = load i8*, i8** %84, align 8
  %86 = load i8**, i8*** %10, align 8
  %87 = load i32, i32* %5, align 4
  %88 = load i32, i32* %6, align 4
  %89 = sub nsw i32 %87, %88
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8*, i8** %86, i64 %90
  store i8* %85, i8** %91, align 8
  %92 = load i8**, i8*** %9, align 8
  %93 = load i32, i32* %5, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i8*, i8** %92, i64 %94
  %96 = load i8*, i8** %95, align 8
  %97 = load i8**, i8*** %9, align 8
  %98 = load i32, i32* %6, align 4
  %99 = load i32, i32* %7, align 4
  %100 = add nsw i32 %99, 2
  %101 = mul nsw i32 %98, %100
  %102 = load i32, i32* %5, align 4
  %103 = add nsw i32 %101, %102
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i8*, i8** %97, i64 %104
  store i8* %96, i8** %105, align 8
  %106 = load i8**, i8*** %10, align 8
  %107 = load i32, i32* %5, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8*, i8** %106, i64 %108
  %110 = load i8*, i8** %109, align 8
  %111 = load i8**, i8*** %10, align 8
  %112 = load i32, i32* %6, align 4
  %113 = load i32, i32* %7, align 4
  %114 = add nsw i32 %113, 2
  %115 = mul nsw i32 %112, %114
  %116 = load i32, i32* %5, align 4
  %117 = add nsw i32 %115, %116
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i8*, i8** %111, i64 %118
  store i8* %110, i8** %119, align 8
  br label %120

120:                                              ; preds = %59
  %121 = load i32, i32* %5, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %5, align 4
  br label %55

123:                                              ; preds = %55
  br label %124

124:                                              ; preds = %123
  %125 = load i32, i32* %4, align 4
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* %4, align 4
  %127 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %8, align 8
  %128 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %127, i32 1
  store %struct.jpeg_component_info* %128, %struct.jpeg_component_info** %8, align 8
  br label %21

129:                                              ; preds = %21
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @jpeg_resync_to_restart(%struct.jpeg_decompress_struct.586* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_decompress_struct.586*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %4, align 8
  store i32 %1, i32* %5, align 4
  %8 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %4, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %8, i32 0, i32 72
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %6, align 4
  store i32 1, i32* %7, align 4
  %11 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %4, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %11, i32 0, i32 0
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i32 0, i32 5
  store i32 117, i32* %14, align 8
  %15 = load i32, i32* %6, align 4
  %16 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %4, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %16, i32 0, i32 0
  %18 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %17, align 8
  %19 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %18, i32 0, i32 6
  %20 = bitcast %union.anon* %19 to [8 x i32]*
  %21 = getelementptr inbounds [8 x i32], [8 x i32]* %20, i64 0, i64 0
  store i32 %15, i32* %21, align 4
  %22 = load i32, i32* %5, align 4
  %23 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %4, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %23, i32 0, i32 0
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i32 0, i32 6
  %27 = bitcast %union.anon* %26 to [8 x i32]*
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* %27, i64 0, i64 1
  store i32 %22, i32* %28, align 4
  %29 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %4, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %29, i32 0, i32 0
  %31 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %30, align 8
  %32 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %31, i32 0, i32 1
  %33 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %32, align 8
  %34 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %4, align 8
  %35 = bitcast %struct.jpeg_decompress_struct.586* %34 to %struct.jpeg_common_struct*
  call void %33(%struct.jpeg_common_struct* %35, i32 -1)
  br label %36

36:                                               ; preds = %121, %2
  %37 = load i32, i32* %6, align 4
  %38 = icmp slt i32 %37, 192
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  store i32 2, i32* %7, align 4
  br label %81

40:                                               ; preds = %36
  %41 = load i32, i32* %6, align 4
  %42 = icmp slt i32 %41, 208
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = load i32, i32* %6, align 4
  %45 = icmp sgt i32 %44, 215
  br i1 %45, label %46, label %47

46:                                               ; preds = %43, %40
  store i32 3, i32* %7, align 4
  br label %80

47:                                               ; preds = %43
  %48 = load i32, i32* %6, align 4
  %49 = load i32, i32* %5, align 4
  %50 = add nsw i32 %49, 1
  %51 = and i32 %50, 7
  %52 = add nsw i32 208, %51
  %53 = icmp eq i32 %48, %52
  br i1 %53, label %61, label %54

54:                                               ; preds = %47
  %55 = load i32, i32* %6, align 4
  %56 = load i32, i32* %5, align 4
  %57 = add nsw i32 %56, 2
  %58 = and i32 %57, 7
  %59 = add nsw i32 208, %58
  %60 = icmp eq i32 %55, %59
  br i1 %60, label %61, label %62

61:                                               ; preds = %54, %47
  store i32 3, i32* %7, align 4
  br label %79

62:                                               ; preds = %54
  %63 = load i32, i32* %6, align 4
  %64 = load i32, i32* %5, align 4
  %65 = sub nsw i32 %64, 1
  %66 = and i32 %65, 7
  %67 = add nsw i32 208, %66
  %68 = icmp eq i32 %63, %67
  br i1 %68, label %76, label %69

69:                                               ; preds = %62
  %70 = load i32, i32* %6, align 4
  %71 = load i32, i32* %5, align 4
  %72 = sub nsw i32 %71, 2
  %73 = and i32 %72, 7
  %74 = add nsw i32 208, %73
  %75 = icmp eq i32 %70, %74
  br i1 %75, label %76, label %77

76:                                               ; preds = %69, %62
  store i32 2, i32* %7, align 4
  br label %78

77:                                               ; preds = %69
  store i32 1, i32* %7, align 4
  br label %78

78:                                               ; preds = %77, %76
  br label %79

79:                                               ; preds = %78, %61
  br label %80

80:                                               ; preds = %79, %46
  br label %81

81:                                               ; preds = %80, %39
  %82 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %4, align 8
  %83 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %82, i32 0, i32 0
  %84 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %83, align 8
  %85 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %84, i32 0, i32 5
  store i32 96, i32* %85, align 8
  %86 = load i32, i32* %6, align 4
  %87 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %4, align 8
  %88 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %87, i32 0, i32 0
  %89 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %88, align 8
  %90 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %89, i32 0, i32 6
  %91 = bitcast %union.anon* %90 to [8 x i32]*
  %92 = getelementptr inbounds [8 x i32], [8 x i32]* %91, i64 0, i64 0
  store i32 %86, i32* %92, align 4
  %93 = load i32, i32* %7, align 4
  %94 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %4, align 8
  %95 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %94, i32 0, i32 0
  %96 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %95, align 8
  %97 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %96, i32 0, i32 6
  %98 = bitcast %union.anon* %97 to [8 x i32]*
  %99 = getelementptr inbounds [8 x i32], [8 x i32]* %98, i64 0, i64 1
  store i32 %93, i32* %99, align 4
  %100 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %4, align 8
  %101 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %100, i32 0, i32 0
  %102 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %101, align 8
  %103 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %102, i32 0, i32 1
  %104 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %103, align 8
  %105 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %4, align 8
  %106 = bitcast %struct.jpeg_decompress_struct.586* %105 to %struct.jpeg_common_struct*
  call void %104(%struct.jpeg_common_struct* %106, i32 4)
  %107 = load i32, i32* %7, align 4
  switch i32 %107, label %121 [
    i32 1, label %108
    i32 2, label %111
    i32 3, label %120
  ]

108:                                              ; preds = %81
  %109 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %4, align 8
  %110 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %109, i32 0, i32 72
  store i32 0, i32* %110, align 4
  store i32 1, i32* %3, align 4
  br label %122

111:                                              ; preds = %81
  %112 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %4, align 8
  %113 = call i32 @next_marker(%struct.jpeg_decompress_struct.586* %112)
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %111
  store i32 0, i32* %3, align 4
  br label %122

116:                                              ; preds = %111
  %117 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %4, align 8
  %118 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %117, i32 0, i32 72
  %119 = load i32, i32* %118, align 4
  store i32 %119, i32* %6, align 4
  br label %121

120:                                              ; preds = %81
  store i32 1, i32* %3, align 4
  br label %122

121:                                              ; preds = %116, %81
  br label %36

122:                                              ; preds = %120, %115, %108
  %123 = load i32, i32* %3, align 4
  ret i32 %123
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @next_marker(%struct.jpeg_decompress_struct.586* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.586*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.jpeg_source_mgr.590*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %3, align 8
  %8 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %8, i32 0, i32 5
  %10 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %9, align 8
  store %struct.jpeg_source_mgr.590* %10, %struct.jpeg_source_mgr.590** %5, align 8
  %11 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %12 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %11, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  store i8* %13, i8** %6, align 8
  %14 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %15 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %14, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %7, align 8
  br label %17

17:                                               ; preds = %121, %1
  br label %18

18:                                               ; preds = %17
  %19 = load i64, i64* %7, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %36

21:                                               ; preds = %18
  %22 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %23 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %22, i32 0, i32 3
  %24 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %23, align 8
  %25 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %26 = call i32 %24(%struct.jpeg_decompress_struct.586* %25)
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %21
  store i32 0, i32* %2, align 4
  br label %185

29:                                               ; preds = %21
  %30 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %31 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %30, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  store i8* %32, i8** %6, align 8
  %33 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %34 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %33, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %7, align 8
  br label %36

36:                                               ; preds = %29, %18
  %37 = load i64, i64* %7, align 8
  %38 = add i64 %37, -1
  store i64 %38, i64* %7, align 8
  %39 = load i8*, i8** %6, align 8
  %40 = getelementptr inbounds i8, i8* %39, i32 1
  store i8* %40, i8** %6, align 8
  %41 = load i8, i8* %39, align 1
  %42 = zext i8 %41 to i32
  store i32 %42, i32* %4, align 4
  br label %43

43:                                               ; preds = %36
  br label %44

44:                                               ; preds = %85, %43
  %45 = load i32, i32* %4, align 4
  %46 = icmp ne i32 %45, 255
  br i1 %46, label %47, label %86

47:                                               ; preds = %44
  %48 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %49 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %48, i32 0, i32 78
  %50 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %49, align 8
  %51 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %50, i32 0, i32 8
  %52 = load i32, i32* %51, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %51, align 4
  %54 = load i8*, i8** %6, align 8
  %55 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %56 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %55, i32 0, i32 0
  store i8* %54, i8** %56, align 8
  %57 = load i64, i64* %7, align 8
  %58 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %59 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %58, i32 0, i32 1
  store i64 %57, i64* %59, align 8
  br label %60

60:                                               ; preds = %47
  %61 = load i64, i64* %7, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %78

63:                                               ; preds = %60
  %64 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %65 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %64, i32 0, i32 3
  %66 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %65, align 8
  %67 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %68 = call i32 %66(%struct.jpeg_decompress_struct.586* %67)
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %63
  store i32 0, i32* %2, align 4
  br label %185

71:                                               ; preds = %63
  %72 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %73 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %72, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  store i8* %74, i8** %6, align 8
  %75 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %76 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %75, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %7, align 8
  br label %78

78:                                               ; preds = %71, %60
  %79 = load i64, i64* %7, align 8
  %80 = add i64 %79, -1
  store i64 %80, i64* %7, align 8
  %81 = load i8*, i8** %6, align 8
  %82 = getelementptr inbounds i8, i8* %81, i32 1
  store i8* %82, i8** %6, align 8
  %83 = load i8, i8* %81, align 1
  %84 = zext i8 %83 to i32
  store i32 %84, i32* %4, align 4
  br label %85

85:                                               ; preds = %78
  br label %44

86:                                               ; preds = %44
  br label %87

87:                                               ; preds = %114, %86
  br label %88

88:                                               ; preds = %87
  %89 = load i64, i64* %7, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %106

91:                                               ; preds = %88
  %92 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %93 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %92, i32 0, i32 3
  %94 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %93, align 8
  %95 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %96 = call i32 %94(%struct.jpeg_decompress_struct.586* %95)
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %99, label %98

98:                                               ; preds = %91
  store i32 0, i32* %2, align 4
  br label %185

99:                                               ; preds = %91
  %100 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %101 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %100, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  store i8* %102, i8** %6, align 8
  %103 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %104 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %103, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  store i64 %105, i64* %7, align 8
  br label %106

106:                                              ; preds = %99, %88
  %107 = load i64, i64* %7, align 8
  %108 = add i64 %107, -1
  store i64 %108, i64* %7, align 8
  %109 = load i8*, i8** %6, align 8
  %110 = getelementptr inbounds i8, i8* %109, i32 1
  store i8* %110, i8** %6, align 8
  %111 = load i8, i8* %109, align 1
  %112 = zext i8 %111 to i32
  store i32 %112, i32* %4, align 4
  br label %113

113:                                              ; preds = %106
  br label %114

114:                                              ; preds = %113
  %115 = load i32, i32* %4, align 4
  %116 = icmp eq i32 %115, 255
  br i1 %116, label %87, label %117

117:                                              ; preds = %114
  %118 = load i32, i32* %4, align 4
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  br label %134

121:                                              ; preds = %117
  %122 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %123 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %122, i32 0, i32 78
  %124 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %123, align 8
  %125 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %124, i32 0, i32 8
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, 2
  store i32 %127, i32* %125, align 4
  %128 = load i8*, i8** %6, align 8
  %129 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %130 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %129, i32 0, i32 0
  store i8* %128, i8** %130, align 8
  %131 = load i64, i64* %7, align 8
  %132 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %133 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %132, i32 0, i32 1
  store i64 %131, i64* %133, align 8
  br label %17

134:                                              ; preds = %120
  %135 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %136 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %135, i32 0, i32 78
  %137 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %136, align 8
  %138 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %137, i32 0, i32 8
  %139 = load i32, i32* %138, align 4
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %141, label %175

141:                                              ; preds = %134
  %142 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %143 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %142, i32 0, i32 0
  %144 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %143, align 8
  %145 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %144, i32 0, i32 5
  store i32 112, i32* %145, align 8
  %146 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %147 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %146, i32 0, i32 78
  %148 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %147, align 8
  %149 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %148, i32 0, i32 8
  %150 = load i32, i32* %149, align 4
  %151 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %152 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %151, i32 0, i32 0
  %153 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %152, align 8
  %154 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %153, i32 0, i32 6
  %155 = bitcast %union.anon* %154 to [8 x i32]*
  %156 = getelementptr inbounds [8 x i32], [8 x i32]* %155, i64 0, i64 0
  store i32 %150, i32* %156, align 4
  %157 = load i32, i32* %4, align 4
  %158 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %159 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %158, i32 0, i32 0
  %160 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %159, align 8
  %161 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %160, i32 0, i32 6
  %162 = bitcast %union.anon* %161 to [8 x i32]*
  %163 = getelementptr inbounds [8 x i32], [8 x i32]* %162, i64 0, i64 1
  store i32 %157, i32* %163, align 4
  %164 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %165 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %164, i32 0, i32 0
  %166 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %165, align 8
  %167 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %166, i32 0, i32 1
  %168 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %167, align 8
  %169 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %170 = bitcast %struct.jpeg_decompress_struct.586* %169 to %struct.jpeg_common_struct*
  call void %168(%struct.jpeg_common_struct* %170, i32 -1)
  %171 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %172 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %171, i32 0, i32 78
  %173 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %172, align 8
  %174 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %173, i32 0, i32 8
  store i32 0, i32* %174, align 4
  br label %175

175:                                              ; preds = %141, %134
  %176 = load i32, i32* %4, align 4
  %177 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %178 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %177, i32 0, i32 72
  store i32 %176, i32* %178, align 4
  %179 = load i8*, i8** %6, align 8
  %180 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %181 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %180, i32 0, i32 0
  store i8* %179, i8** %181, align 8
  %182 = load i64, i64* %7, align 8
  %183 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %184 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %183, i32 0, i32 1
  store i64 %182, i64* %184, align 8
  store i32 1, i32* %2, align 4
  br label %185

185:                                              ; preds = %175, %98, %70, %28
  %186 = load i32, i32* %2, align 4
  ret i32 %186
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_marker_reader(%struct.jpeg_decompress_struct.586* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.586*, align 8
  %3 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %2, align 8
  %4 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %4, i32 0, i32 1
  %6 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %6, i32 0, i32 0
  %8 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %7, align 8
  %9 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %10 = bitcast %struct.jpeg_decompress_struct.586* %9 to %struct.jpeg_common_struct*
  %11 = call i8* %8(%struct.jpeg_common_struct* %10, i32 0, i64 176)
  %12 = bitcast i8* %11 to %struct.jpeg_marker_reader.599*
  %13 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %13, i32 0, i32 78
  store %struct.jpeg_marker_reader.599* %12, %struct.jpeg_marker_reader.599** %14, align 8
  %15 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %15, i32 0, i32 78
  %17 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %17, i32 0, i32 0
  store void (%struct.jpeg_decompress_struct.586*)* @reset_marker_reader, void (%struct.jpeg_decompress_struct.586*)** %18, align 8
  %19 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %19, i32 0, i32 78
  %21 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %21, i32 0, i32 1
  store i32 (%struct.jpeg_decompress_struct.586*)* @read_markers, i32 (%struct.jpeg_decompress_struct.586*)** %22, align 8
  %23 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %23, i32 0, i32 78
  %25 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %25, i32 0, i32 2
  store i32 (%struct.jpeg_decompress_struct.586*)* @read_restart_marker, i32 (%struct.jpeg_decompress_struct.586*)** %26, align 8
  %27 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %27, i32 0, i32 78
  %29 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %29, i32 0, i32 3
  store i32 (%struct.jpeg_decompress_struct.586*)* @skip_variable, i32 (%struct.jpeg_decompress_struct.586*)** %30, align 8
  store i32 0, i32* %3, align 4
  br label %31

31:                                               ; preds = %42, %1
  %32 = load i32, i32* %3, align 4
  %33 = icmp slt i32 %32, 16
  br i1 %33, label %34, label %45

34:                                               ; preds = %31
  %35 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %35, i32 0, i32 78
  %37 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %37, i32 0, i32 4
  %39 = load i32, i32* %3, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [16 x i32 (%struct.jpeg_decompress_struct.586*)*], [16 x i32 (%struct.jpeg_decompress_struct.586*)*]* %38, i64 0, i64 %40
  store i32 (%struct.jpeg_decompress_struct.586*)* @skip_variable, i32 (%struct.jpeg_decompress_struct.586*)** %41, align 8
  br label %42

42:                                               ; preds = %34
  %43 = load i32, i32* %3, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %3, align 4
  br label %31

45:                                               ; preds = %31
  %46 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %46, i32 0, i32 78
  %48 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %47, align 8
  %49 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %48, i32 0, i32 4
  %50 = getelementptr inbounds [16 x i32 (%struct.jpeg_decompress_struct.586*)*], [16 x i32 (%struct.jpeg_decompress_struct.586*)*]* %49, i64 0, i64 0
  store i32 (%struct.jpeg_decompress_struct.586*)* @get_app0, i32 (%struct.jpeg_decompress_struct.586*)** %50, align 8
  %51 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %51, i32 0, i32 78
  %53 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %52, align 8
  %54 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %53, i32 0, i32 4
  %55 = getelementptr inbounds [16 x i32 (%struct.jpeg_decompress_struct.586*)*], [16 x i32 (%struct.jpeg_decompress_struct.586*)*]* %54, i64 0, i64 14
  store i32 (%struct.jpeg_decompress_struct.586*)* @get_app14, i32 (%struct.jpeg_decompress_struct.586*)** %55, align 8
  %56 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  call void @reset_marker_reader(%struct.jpeg_decompress_struct.586* %56)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @reset_marker_reader(%struct.jpeg_decompress_struct.586* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.586*, align 8
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %2, align 8
  %3 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %3, i32 0, i32 43
  store %struct.jpeg_component_info* null, %struct.jpeg_component_info** %4, align 8
  %5 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %5, i32 0, i32 34
  store i32 0, i32* %6, align 4
  %7 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %7, i32 0, i32 72
  store i32 0, i32* %8, align 4
  %9 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %9, i32 0, i32 78
  %11 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %10, align 8
  %12 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %11, i32 0, i32 5
  store i32 0, i32* %12, align 8
  %13 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %13, i32 0, i32 78
  %15 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %15, i32 0, i32 6
  store i32 0, i32* %16, align 4
  %17 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %17, i32 0, i32 78
  %19 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %19, i32 0, i32 8
  store i32 0, i32* %20, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @read_markers(%struct.jpeg_decompress_struct.586* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.586*, align 8
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %3, align 8
  br label %4

4:                                                ; preds = %206, %1
  %5 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %5, i32 0, i32 72
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %29

9:                                                ; preds = %4
  %10 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %10, i32 0, i32 78
  %12 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %12, i32 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %9
  %17 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %18 = call i32 @first_marker(%struct.jpeg_decompress_struct.586* %17)
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  store i32 0, i32* %2, align 4
  br label %209

21:                                               ; preds = %16
  br label %28

22:                                               ; preds = %9
  %23 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %24 = call i32 @next_marker(%struct.jpeg_decompress_struct.586* %23)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  store i32 0, i32* %2, align 4
  br label %209

27:                                               ; preds = %22
  br label %28

28:                                               ; preds = %27, %21
  br label %29

29:                                               ; preds = %28, %4
  %30 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %30, i32 0, i32 72
  %32 = load i32, i32* %31, align 4
  switch i32 %32, label %185 [
    i32 216, label %33
    i32 192, label %39
    i32 193, label %39
    i32 194, label %45
    i32 201, label %51
    i32 202, label %57
    i32 195, label %63
    i32 197, label %63
    i32 198, label %63
    i32 199, label %63
    i32 200, label %63
    i32 203, label %63
    i32 205, label %63
    i32 206, label %63
    i32 207, label %63
    i32 218, label %84
    i32 217, label %92
    i32 204, label %106
    i32 196, label %112
    i32 219, label %118
    i32 221, label %124
    i32 224, label %130
    i32 225, label %130
    i32 226, label %130
    i32 227, label %130
    i32 228, label %130
    i32 229, label %130
    i32 230, label %130
    i32 231, label %130
    i32 232, label %130
    i32 233, label %130
    i32 234, label %130
    i32 235, label %130
    i32 236, label %130
    i32 237, label %130
    i32 238, label %130
    i32 239, label %130
    i32 254, label %147
    i32 208, label %158
    i32 209, label %158
    i32 210, label %158
    i32 211, label %158
    i32 212, label %158
    i32 213, label %158
    i32 214, label %158
    i32 215, label %158
    i32 1, label %158
    i32 220, label %179
  ]

33:                                               ; preds = %29
  %34 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %35 = call i32 @get_soi(%struct.jpeg_decompress_struct.586* %34)
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  store i32 0, i32* %2, align 4
  br label %209

38:                                               ; preds = %33
  br label %206

39:                                               ; preds = %29, %29
  %40 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %41 = call i32 @get_sof(%struct.jpeg_decompress_struct.586* %40, i32 0, i32 0)
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  store i32 0, i32* %2, align 4
  br label %209

44:                                               ; preds = %39
  br label %206

45:                                               ; preds = %29
  %46 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %47 = call i32 @get_sof(%struct.jpeg_decompress_struct.586* %46, i32 1, i32 0)
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %45
  store i32 0, i32* %2, align 4
  br label %209

50:                                               ; preds = %45
  br label %206

51:                                               ; preds = %29
  %52 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %53 = call i32 @get_sof(%struct.jpeg_decompress_struct.586* %52, i32 0, i32 1)
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %51
  store i32 0, i32* %2, align 4
  br label %209

56:                                               ; preds = %51
  br label %206

57:                                               ; preds = %29
  %58 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %59 = call i32 @get_sof(%struct.jpeg_decompress_struct.586* %58, i32 1, i32 1)
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %57
  store i32 0, i32* %2, align 4
  br label %209

62:                                               ; preds = %57
  br label %206

63:                                               ; preds = %29, %29, %29, %29, %29, %29, %29, %29, %29
  %64 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %65 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %64, i32 0, i32 0
  %66 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %65, align 8
  %67 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %66, i32 0, i32 5
  store i32 59, i32* %67, align 8
  %68 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %69 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %68, i32 0, i32 72
  %70 = load i32, i32* %69, align 4
  %71 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %71, i32 0, i32 0
  %73 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %72, align 8
  %74 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %73, i32 0, i32 6
  %75 = bitcast %union.anon* %74 to [8 x i32]*
  %76 = getelementptr inbounds [8 x i32], [8 x i32]* %75, i64 0, i64 0
  store i32 %70, i32* %76, align 4
  %77 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %78 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %77, i32 0, i32 0
  %79 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %78, align 8
  %80 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %79, i32 0, i32 0
  %81 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %80, align 8
  %82 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %83 = bitcast %struct.jpeg_decompress_struct.586* %82 to %struct.jpeg_common_struct*
  call void %81(%struct.jpeg_common_struct* %83)
  br label %206

84:                                               ; preds = %29
  %85 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %86 = call i32 @get_sos(%struct.jpeg_decompress_struct.586* %85)
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  store i32 0, i32* %2, align 4
  br label %209

89:                                               ; preds = %84
  %90 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %91 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %90, i32 0, i32 72
  store i32 0, i32* %91, align 4
  store i32 1, i32* %2, align 4
  br label %209

92:                                               ; preds = %29
  %93 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %94 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %93, i32 0, i32 0
  %95 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %94, align 8
  %96 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %95, i32 0, i32 5
  store i32 84, i32* %96, align 8
  %97 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %98 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %97, i32 0, i32 0
  %99 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %98, align 8
  %100 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %99, i32 0, i32 1
  %101 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %100, align 8
  %102 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %103 = bitcast %struct.jpeg_decompress_struct.586* %102 to %struct.jpeg_common_struct*
  call void %101(%struct.jpeg_common_struct* %103, i32 1)
  %104 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %105 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %104, i32 0, i32 72
  store i32 0, i32* %105, align 4
  store i32 2, i32* %2, align 4
  br label %209

106:                                              ; preds = %29
  %107 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %108 = call i32 @get_dac(%struct.jpeg_decompress_struct.586* %107)
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %111, label %110

110:                                              ; preds = %106
  store i32 0, i32* %2, align 4
  br label %209

111:                                              ; preds = %106
  br label %206

112:                                              ; preds = %29
  %113 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %114 = call i32 @get_dht(%struct.jpeg_decompress_struct.586* %113)
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %117, label %116

116:                                              ; preds = %112
  store i32 0, i32* %2, align 4
  br label %209

117:                                              ; preds = %112
  br label %206

118:                                              ; preds = %29
  %119 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %120 = call i32 @get_dqt(%struct.jpeg_decompress_struct.586* %119)
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %123, label %122

122:                                              ; preds = %118
  store i32 0, i32* %2, align 4
  br label %209

123:                                              ; preds = %118
  br label %206

124:                                              ; preds = %29
  %125 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %126 = call i32 @get_dri(%struct.jpeg_decompress_struct.586* %125)
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %129, label %128

128:                                              ; preds = %124
  store i32 0, i32* %2, align 4
  br label %209

129:                                              ; preds = %124
  br label %206

130:                                              ; preds = %29, %29, %29, %29, %29, %29, %29, %29, %29, %29, %29, %29, %29, %29, %29, %29
  %131 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %132 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %131, i32 0, i32 78
  %133 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %132, align 8
  %134 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %133, i32 0, i32 4
  %135 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %136 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %135, i32 0, i32 72
  %137 = load i32, i32* %136, align 4
  %138 = sub nsw i32 %137, 224
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [16 x i32 (%struct.jpeg_decompress_struct.586*)*], [16 x i32 (%struct.jpeg_decompress_struct.586*)*]* %134, i64 0, i64 %139
  %141 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %140, align 8
  %142 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %143 = call i32 %141(%struct.jpeg_decompress_struct.586* %142)
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %146, label %145

145:                                              ; preds = %130
  store i32 0, i32* %2, align 4
  br label %209

146:                                              ; preds = %130
  br label %206

147:                                              ; preds = %29
  %148 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %149 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %148, i32 0, i32 78
  %150 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %149, align 8
  %151 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %150, i32 0, i32 3
  %152 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %151, align 8
  %153 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %154 = call i32 %152(%struct.jpeg_decompress_struct.586* %153)
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %157, label %156

156:                                              ; preds = %147
  store i32 0, i32* %2, align 4
  br label %209

157:                                              ; preds = %147
  br label %206

158:                                              ; preds = %29, %29, %29, %29, %29, %29, %29, %29, %29
  %159 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %160 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %159, i32 0, i32 0
  %161 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %160, align 8
  %162 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %161, i32 0, i32 5
  store i32 91, i32* %162, align 8
  %163 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %164 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %163, i32 0, i32 72
  %165 = load i32, i32* %164, align 4
  %166 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %167 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %166, i32 0, i32 0
  %168 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %167, align 8
  %169 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %168, i32 0, i32 6
  %170 = bitcast %union.anon* %169 to [8 x i32]*
  %171 = getelementptr inbounds [8 x i32], [8 x i32]* %170, i64 0, i64 0
  store i32 %165, i32* %171, align 4
  %172 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %173 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %172, i32 0, i32 0
  %174 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %173, align 8
  %175 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %174, i32 0, i32 1
  %176 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %175, align 8
  %177 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %178 = bitcast %struct.jpeg_decompress_struct.586* %177 to %struct.jpeg_common_struct*
  call void %176(%struct.jpeg_common_struct* %178, i32 1)
  br label %206

179:                                              ; preds = %29
  %180 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %181 = call i32 @skip_variable(%struct.jpeg_decompress_struct.586* %180)
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %184, label %183

183:                                              ; preds = %179
  store i32 0, i32* %2, align 4
  br label %209

184:                                              ; preds = %179
  br label %206

185:                                              ; preds = %29
  %186 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %187 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %186, i32 0, i32 0
  %188 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %187, align 8
  %189 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %188, i32 0, i32 5
  store i32 67, i32* %189, align 8
  %190 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %191 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %190, i32 0, i32 72
  %192 = load i32, i32* %191, align 4
  %193 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %194 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %193, i32 0, i32 0
  %195 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %194, align 8
  %196 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %195, i32 0, i32 6
  %197 = bitcast %union.anon* %196 to [8 x i32]*
  %198 = getelementptr inbounds [8 x i32], [8 x i32]* %197, i64 0, i64 0
  store i32 %192, i32* %198, align 4
  %199 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %200 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %199, i32 0, i32 0
  %201 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %200, align 8
  %202 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %201, i32 0, i32 0
  %203 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %202, align 8
  %204 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %205 = bitcast %struct.jpeg_decompress_struct.586* %204 to %struct.jpeg_common_struct*
  call void %203(%struct.jpeg_common_struct* %205)
  br label %206

206:                                              ; preds = %185, %184, %158, %157, %146, %129, %123, %117, %111, %63, %62, %56, %50, %44, %38
  %207 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %208 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %207, i32 0, i32 72
  store i32 0, i32* %208, align 4
  br label %4

209:                                              ; preds = %183, %156, %145, %128, %122, %116, %110, %92, %89, %88, %61, %55, %49, %43, %37, %26, %20
  %210 = load i32, i32* %2, align 4
  ret i32 %210
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @read_restart_marker(%struct.jpeg_decompress_struct.586* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.586*, align 8
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %3, align 8
  %4 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %4, i32 0, i32 72
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %10 = call i32 @next_marker(%struct.jpeg_decompress_struct.586* %9)
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  store i32 0, i32* %2, align 4
  br label %79

13:                                               ; preds = %8
  br label %14

14:                                               ; preds = %13, %1
  %15 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %15, i32 0, i32 72
  %17 = load i32, i32* %16, align 4
  %18 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %18, i32 0, i32 78
  %20 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %20, i32 0, i32 7
  %22 = load i32, i32* %21, align 8
  %23 = add nsw i32 208, %22
  %24 = icmp eq i32 %17, %23
  br i1 %24, label %25, label %50

25:                                               ; preds = %14
  %26 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %26, i32 0, i32 0
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i32 0, i32 5
  store i32 97, i32* %29, align 8
  %30 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %30, i32 0, i32 78
  %32 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %31, align 8
  %33 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %32, i32 0, i32 7
  %34 = load i32, i32* %33, align 8
  %35 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %35, i32 0, i32 0
  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i32 0, i32 6
  %39 = bitcast %union.anon* %38 to [8 x i32]*
  %40 = getelementptr inbounds [8 x i32], [8 x i32]* %39, i64 0, i64 0
  store i32 %34, i32* %40, align 4
  %41 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %42 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %41, i32 0, i32 0
  %43 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %42, align 8
  %44 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %43, i32 0, i32 1
  %45 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %44, align 8
  %46 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %47 = bitcast %struct.jpeg_decompress_struct.586* %46 to %struct.jpeg_common_struct*
  call void %45(%struct.jpeg_common_struct* %47, i32 3)
  %48 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %49 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %48, i32 0, i32 72
  store i32 0, i32* %49, align 4
  br label %67

50:                                               ; preds = %14
  %51 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %51, i32 0, i32 5
  %53 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %52, align 8
  %54 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %53, i32 0, i32 5
  %55 = bitcast {}** %54 to i32 (%struct.jpeg_decompress_struct.586*, i32)**
  %56 = load i32 (%struct.jpeg_decompress_struct.586*, i32)*, i32 (%struct.jpeg_decompress_struct.586*, i32)** %55, align 8
  %57 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %58 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %59 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %58, i32 0, i32 78
  %60 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %59, align 8
  %61 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %60, i32 0, i32 7
  %62 = load i32, i32* %61, align 8
  %63 = call i32 %56(%struct.jpeg_decompress_struct.586* %57, i32 %62)
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %50
  store i32 0, i32* %2, align 4
  br label %79

66:                                               ; preds = %50
  br label %67

67:                                               ; preds = %66, %25
  %68 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %69 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %68, i32 0, i32 78
  %70 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %69, align 8
  %71 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %70, i32 0, i32 7
  %72 = load i32, i32* %71, align 8
  %73 = add nsw i32 %72, 1
  %74 = and i32 %73, 7
  %75 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %76 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %75, i32 0, i32 78
  %77 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %76, align 8
  %78 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %77, i32 0, i32 7
  store i32 %74, i32* %78, align 8
  store i32 1, i32* %2, align 4
  br label %79

79:                                               ; preds = %67, %65, %12
  %80 = load i32, i32* %2, align 4
  ret i32 %80
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @skip_variable(%struct.jpeg_decompress_struct.586* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.586*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.jpeg_source_mgr.590*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %3, align 8
  %8 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %8, i32 0, i32 5
  %10 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %9, align 8
  store %struct.jpeg_source_mgr.590* %10, %struct.jpeg_source_mgr.590** %5, align 8
  %11 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %12 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %11, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  store i8* %13, i8** %6, align 8
  %14 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %15 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %14, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %7, align 8
  br label %17

17:                                               ; preds = %1
  %18 = load i64, i64* %7, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %35

20:                                               ; preds = %17
  %21 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %22 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %21, i32 0, i32 3
  %23 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %22, align 8
  %24 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %25 = call i32 %23(%struct.jpeg_decompress_struct.586* %24)
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %20
  store i32 0, i32* %2, align 4
  br label %113

28:                                               ; preds = %20
  %29 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %30 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %29, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  store i8* %31, i8** %6, align 8
  %32 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %33 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %32, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %7, align 8
  br label %35

35:                                               ; preds = %28, %17
  %36 = load i64, i64* %7, align 8
  %37 = add i64 %36, -1
  store i64 %37, i64* %7, align 8
  %38 = load i8*, i8** %6, align 8
  %39 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %39, i8** %6, align 8
  %40 = load i8, i8* %38, align 1
  %41 = zext i8 %40 to i32
  %42 = shl i32 %41, 8
  %43 = zext i32 %42 to i64
  store i64 %43, i64* %4, align 8
  %44 = load i64, i64* %7, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %61

46:                                               ; preds = %35
  %47 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %48 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %47, i32 0, i32 3
  %49 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %48, align 8
  %50 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %51 = call i32 %49(%struct.jpeg_decompress_struct.586* %50)
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %46
  store i32 0, i32* %2, align 4
  br label %113

54:                                               ; preds = %46
  %55 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %56 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %55, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  store i8* %57, i8** %6, align 8
  %58 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %59 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %58, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %7, align 8
  br label %61

61:                                               ; preds = %54, %35
  %62 = load i64, i64* %7, align 8
  %63 = add i64 %62, -1
  store i64 %63, i64* %7, align 8
  %64 = load i8*, i8** %6, align 8
  %65 = getelementptr inbounds i8, i8* %64, i32 1
  store i8* %65, i8** %6, align 8
  %66 = load i8, i8* %64, align 1
  %67 = zext i8 %66 to i64
  %68 = load i64, i64* %4, align 8
  %69 = add nsw i64 %68, %67
  store i64 %69, i64* %4, align 8
  br label %70

70:                                               ; preds = %61
  %71 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %71, i32 0, i32 0
  %73 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %72, align 8
  %74 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %73, i32 0, i32 5
  store i32 90, i32* %74, align 8
  %75 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %76 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %75, i32 0, i32 72
  %77 = load i32, i32* %76, align 4
  %78 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %79 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %78, i32 0, i32 0
  %80 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %79, align 8
  %81 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %80, i32 0, i32 6
  %82 = bitcast %union.anon* %81 to [8 x i32]*
  %83 = getelementptr inbounds [8 x i32], [8 x i32]* %82, i64 0, i64 0
  store i32 %77, i32* %83, align 4
  %84 = load i64, i64* %4, align 8
  %85 = trunc i64 %84 to i32
  %86 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %87 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %86, i32 0, i32 0
  %88 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %87, align 8
  %89 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %88, i32 0, i32 6
  %90 = bitcast %union.anon* %89 to [8 x i32]*
  %91 = getelementptr inbounds [8 x i32], [8 x i32]* %90, i64 0, i64 1
  store i32 %85, i32* %91, align 4
  %92 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %93 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %92, i32 0, i32 0
  %94 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %93, align 8
  %95 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %94, i32 0, i32 1
  %96 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %95, align 8
  %97 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %98 = bitcast %struct.jpeg_decompress_struct.586* %97 to %struct.jpeg_common_struct*
  call void %96(%struct.jpeg_common_struct* %98, i32 1)
  %99 = load i8*, i8** %6, align 8
  %100 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %101 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %100, i32 0, i32 0
  store i8* %99, i8** %101, align 8
  %102 = load i64, i64* %7, align 8
  %103 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %5, align 8
  %104 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %103, i32 0, i32 1
  store i64 %102, i64* %104, align 8
  %105 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %106 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %105, i32 0, i32 5
  %107 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %106, align 8
  %108 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %107, i32 0, i32 4
  %109 = load void (%struct.jpeg_decompress_struct.586*, i64)*, void (%struct.jpeg_decompress_struct.586*, i64)** %108, align 8
  %110 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %111 = load i64, i64* %4, align 8
  %112 = sub nsw i64 %111, 2
  call void %109(%struct.jpeg_decompress_struct.586* %110, i64 %112)
  store i32 1, i32* %2, align 4
  br label %113

113:                                              ; preds = %70, %53, %27
  %114 = load i32, i32* %2, align 4
  ret i32 %114
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_app0(%struct.jpeg_decompress_struct.586* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.586*, align 8
  %4 = alloca i64, align 8
  %5 = alloca [14 x i8], align 1
  %6 = alloca i32, align 4
  %7 = alloca %struct.jpeg_source_mgr.590*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32*, align 8
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %3, align 8
  %11 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %11, i32 0, i32 5
  %13 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  store %struct.jpeg_source_mgr.590* %13, %struct.jpeg_source_mgr.590** %7, align 8
  %14 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %15 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %14, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  store i8* %16, i8** %8, align 8
  %17 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %18 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %17, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %9, align 8
  br label %20

20:                                               ; preds = %1
  %21 = load i64, i64* %9, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %38

23:                                               ; preds = %20
  %24 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %25 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %24, i32 0, i32 3
  %26 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %25, align 8
  %27 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %28 = call i32 %26(%struct.jpeg_decompress_struct.586* %27)
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %23
  store i32 0, i32* %2, align 4
  br label %408

31:                                               ; preds = %23
  %32 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %33 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %32, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  store i8* %34, i8** %8, align 8
  %35 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %36 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %35, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %9, align 8
  br label %38

38:                                               ; preds = %31, %20
  %39 = load i64, i64* %9, align 8
  %40 = add i64 %39, -1
  store i64 %40, i64* %9, align 8
  %41 = load i8*, i8** %8, align 8
  %42 = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %42, i8** %8, align 8
  %43 = load i8, i8* %41, align 1
  %44 = zext i8 %43 to i32
  %45 = shl i32 %44, 8
  %46 = zext i32 %45 to i64
  store i64 %46, i64* %4, align 8
  %47 = load i64, i64* %9, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %64

49:                                               ; preds = %38
  %50 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %51 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %50, i32 0, i32 3
  %52 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %51, align 8
  %53 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %54 = call i32 %52(%struct.jpeg_decompress_struct.586* %53)
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %49
  store i32 0, i32* %2, align 4
  br label %408

57:                                               ; preds = %49
  %58 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %59 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %58, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  store i8* %60, i8** %8, align 8
  %61 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %62 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %61, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %9, align 8
  br label %64

64:                                               ; preds = %57, %38
  %65 = load i64, i64* %9, align 8
  %66 = add i64 %65, -1
  store i64 %66, i64* %9, align 8
  %67 = load i8*, i8** %8, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %68, i8** %8, align 8
  %69 = load i8, i8* %67, align 1
  %70 = zext i8 %69 to i64
  %71 = load i64, i64* %4, align 8
  %72 = add nsw i64 %71, %70
  store i64 %72, i64* %4, align 8
  br label %73

73:                                               ; preds = %64
  %74 = load i64, i64* %4, align 8
  %75 = sub nsw i64 %74, 2
  store i64 %75, i64* %4, align 8
  %76 = load i64, i64* %4, align 8
  %77 = icmp sge i64 %76, 14
  br i1 %77, label %78, label %370

78:                                               ; preds = %73
  store i32 0, i32* %6, align 4
  br label %79

79:                                               ; preds = %111, %78
  %80 = load i32, i32* %6, align 4
  %81 = icmp slt i32 %80, 14
  br i1 %81, label %82, label %114

82:                                               ; preds = %79
  br label %83

83:                                               ; preds = %82
  %84 = load i64, i64* %9, align 8
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %101

86:                                               ; preds = %83
  %87 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %88 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %87, i32 0, i32 3
  %89 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %88, align 8
  %90 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %91 = call i32 %89(%struct.jpeg_decompress_struct.586* %90)
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %86
  store i32 0, i32* %2, align 4
  br label %408

94:                                               ; preds = %86
  %95 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %96 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %95, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  store i8* %97, i8** %8, align 8
  %98 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %99 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %98, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %9, align 8
  br label %101

101:                                              ; preds = %94, %83
  %102 = load i64, i64* %9, align 8
  %103 = add i64 %102, -1
  store i64 %103, i64* %9, align 8
  %104 = load i8*, i8** %8, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %105, i8** %8, align 8
  %106 = load i8, i8* %104, align 1
  %107 = load i32, i32* %6, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 %108
  store i8 %106, i8* %109, align 1
  br label %110

110:                                              ; preds = %101
  br label %111

111:                                              ; preds = %110
  %112 = load i32, i32* %6, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %6, align 4
  br label %79

114:                                              ; preds = %79
  %115 = load i64, i64* %4, align 8
  %116 = sub nsw i64 %115, 14
  store i64 %116, i64* %4, align 8
  %117 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 0
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = icmp eq i32 %119, 74
  br i1 %120, label %121, label %348

121:                                              ; preds = %114
  %122 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 1
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = icmp eq i32 %124, 70
  br i1 %125, label %126, label %348

126:                                              ; preds = %121
  %127 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 2
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = icmp eq i32 %129, 73
  br i1 %130, label %131, label %348

131:                                              ; preds = %126
  %132 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 3
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = icmp eq i32 %134, 70
  br i1 %135, label %136, label %348

136:                                              ; preds = %131
  %137 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 4
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %348

141:                                              ; preds = %136
  %142 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 5
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = icmp ne i32 %144, 1
  br i1 %145, label %146, label %176

146:                                              ; preds = %141
  %147 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %148 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %147, i32 0, i32 0
  %149 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %148, align 8
  %150 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %149, i32 0, i32 5
  store i32 115, i32* %150, align 8
  %151 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 5
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  %154 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %155 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %154, i32 0, i32 0
  %156 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %155, align 8
  %157 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %156, i32 0, i32 6
  %158 = bitcast %union.anon* %157 to [8 x i32]*
  %159 = getelementptr inbounds [8 x i32], [8 x i32]* %158, i64 0, i64 0
  store i32 %153, i32* %159, align 4
  %160 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 6
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  %163 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %164 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %163, i32 0, i32 0
  %165 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %164, align 8
  %166 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %165, i32 0, i32 6
  %167 = bitcast %union.anon* %166 to [8 x i32]*
  %168 = getelementptr inbounds [8 x i32], [8 x i32]* %167, i64 0, i64 1
  store i32 %162, i32* %168, align 4
  %169 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %170 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %169, i32 0, i32 0
  %171 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %170, align 8
  %172 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %171, i32 0, i32 1
  %173 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %172, align 8
  %174 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %175 = bitcast %struct.jpeg_decompress_struct.586* %174 to %struct.jpeg_common_struct*
  call void %173(%struct.jpeg_common_struct* %175, i32 -1)
  br label %212

176:                                              ; preds = %141
  %177 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 6
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = icmp sgt i32 %179, 2
  br i1 %180, label %181, label %211

181:                                              ; preds = %176
  %182 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %183 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %182, i32 0, i32 0
  %184 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %183, align 8
  %185 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %184, i32 0, i32 5
  store i32 88, i32* %185, align 8
  %186 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 5
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %190 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %189, i32 0, i32 0
  %191 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %190, align 8
  %192 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %191, i32 0, i32 6
  %193 = bitcast %union.anon* %192 to [8 x i32]*
  %194 = getelementptr inbounds [8 x i32], [8 x i32]* %193, i64 0, i64 0
  store i32 %188, i32* %194, align 4
  %195 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 6
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %199 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %198, i32 0, i32 0
  %200 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %199, align 8
  %201 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %200, i32 0, i32 6
  %202 = bitcast %union.anon* %201 to [8 x i32]*
  %203 = getelementptr inbounds [8 x i32], [8 x i32]* %202, i64 0, i64 1
  store i32 %197, i32* %203, align 4
  %204 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %205 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %204, i32 0, i32 0
  %206 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %205, align 8
  %207 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %206, i32 0, i32 1
  %208 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %207, align 8
  %209 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %210 = bitcast %struct.jpeg_decompress_struct.586* %209 to %struct.jpeg_common_struct*
  call void %208(%struct.jpeg_common_struct* %210, i32 1)
  br label %211

211:                                              ; preds = %181, %176
  br label %212

212:                                              ; preds = %211, %146
  %213 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %214 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %213, i32 0, i32 50
  store i32 1, i32* %214, align 4
  %215 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 7
  %216 = load i8, i8* %215, align 1
  %217 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %218 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %217, i32 0, i32 51
  store i8 %216, i8* %218, align 8
  %219 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 8
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = shl i32 %221, 8
  %223 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 9
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = add nsw i32 %222, %225
  %227 = trunc i32 %226 to i16
  %228 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %229 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %228, i32 0, i32 52
  store i16 %227, i16* %229, align 2
  %230 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 10
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i32
  %233 = shl i32 %232, 8
  %234 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 11
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i32
  %237 = add nsw i32 %233, %236
  %238 = trunc i32 %237 to i16
  %239 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %240 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %239, i32 0, i32 53
  store i16 %238, i16* %240, align 4
  br label %241

241:                                              ; preds = %212
  %242 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %243 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %242, i32 0, i32 0
  %244 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %243, align 8
  %245 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %244, i32 0, i32 6
  %246 = bitcast %union.anon* %245 to [8 x i32]*
  %247 = getelementptr inbounds [8 x i32], [8 x i32]* %246, i64 0, i64 0
  store i32* %247, i32** %10, align 8
  %248 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %249 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %248, i32 0, i32 52
  %250 = load i16, i16* %249, align 2
  %251 = zext i16 %250 to i32
  %252 = load i32*, i32** %10, align 8
  %253 = getelementptr inbounds i32, i32* %252, i64 0
  store i32 %251, i32* %253, align 4
  %254 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %255 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %254, i32 0, i32 53
  %256 = load i16, i16* %255, align 4
  %257 = zext i16 %256 to i32
  %258 = load i32*, i32** %10, align 8
  %259 = getelementptr inbounds i32, i32* %258, i64 1
  store i32 %257, i32* %259, align 4
  %260 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %261 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %260, i32 0, i32 51
  %262 = load i8, i8* %261, align 8
  %263 = zext i8 %262 to i32
  %264 = load i32*, i32** %10, align 8
  %265 = getelementptr inbounds i32, i32* %264, i64 2
  store i32 %263, i32* %265, align 4
  %266 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %267 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %266, i32 0, i32 0
  %268 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %267, align 8
  %269 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %268, i32 0, i32 5
  store i32 86, i32* %269, align 8
  %270 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %271 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %270, i32 0, i32 0
  %272 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %271, align 8
  %273 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %272, i32 0, i32 1
  %274 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %273, align 8
  %275 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %276 = bitcast %struct.jpeg_decompress_struct.586* %275 to %struct.jpeg_common_struct*
  call void %274(%struct.jpeg_common_struct* %276, i32 1)
  br label %277

277:                                              ; preds = %241
  %278 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 12
  %279 = load i8, i8* %278, align 1
  %280 = zext i8 %279 to i32
  %281 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 13
  %282 = load i8, i8* %281, align 1
  %283 = zext i8 %282 to i32
  %284 = or i32 %280, %283
  %285 = icmp ne i32 %284, 0
  br i1 %285, label %286, label %316

286:                                              ; preds = %277
  %287 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %288 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %287, i32 0, i32 0
  %289 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %288, align 8
  %290 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %289, i32 0, i32 5
  store i32 89, i32* %290, align 8
  %291 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 12
  %292 = load i8, i8* %291, align 1
  %293 = zext i8 %292 to i32
  %294 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %295 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %294, i32 0, i32 0
  %296 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %295, align 8
  %297 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %296, i32 0, i32 6
  %298 = bitcast %union.anon* %297 to [8 x i32]*
  %299 = getelementptr inbounds [8 x i32], [8 x i32]* %298, i64 0, i64 0
  store i32 %293, i32* %299, align 4
  %300 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 13
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i32
  %303 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %304 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %303, i32 0, i32 0
  %305 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %304, align 8
  %306 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %305, i32 0, i32 6
  %307 = bitcast %union.anon* %306 to [8 x i32]*
  %308 = getelementptr inbounds [8 x i32], [8 x i32]* %307, i64 0, i64 1
  store i32 %302, i32* %308, align 4
  %309 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %310 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %309, i32 0, i32 0
  %311 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %310, align 8
  %312 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %311, i32 0, i32 1
  %313 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %312, align 8
  %314 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %315 = bitcast %struct.jpeg_decompress_struct.586* %314 to %struct.jpeg_common_struct*
  call void %313(%struct.jpeg_common_struct* %315, i32 1)
  br label %316

316:                                              ; preds = %286, %277
  %317 = load i64, i64* %4, align 8
  %318 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 12
  %319 = load i8, i8* %318, align 1
  %320 = zext i8 %319 to i64
  %321 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 13
  %322 = load i8, i8* %321, align 1
  %323 = zext i8 %322 to i64
  %324 = mul nsw i64 %320, %323
  %325 = mul nsw i64 %324, 3
  %326 = icmp ne i64 %317, %325
  br i1 %326, label %327, label %347

327:                                              ; preds = %316
  %328 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %329 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %328, i32 0, i32 0
  %330 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %329, align 8
  %331 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %330, i32 0, i32 5
  store i32 87, i32* %331, align 8
  %332 = load i64, i64* %4, align 8
  %333 = trunc i64 %332 to i32
  %334 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %335 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %334, i32 0, i32 0
  %336 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %335, align 8
  %337 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %336, i32 0, i32 6
  %338 = bitcast %union.anon* %337 to [8 x i32]*
  %339 = getelementptr inbounds [8 x i32], [8 x i32]* %338, i64 0, i64 0
  store i32 %333, i32* %339, align 4
  %340 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %341 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %340, i32 0, i32 0
  %342 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %341, align 8
  %343 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %342, i32 0, i32 1
  %344 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %343, align 8
  %345 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %346 = bitcast %struct.jpeg_decompress_struct.586* %345 to %struct.jpeg_common_struct*
  call void %344(%struct.jpeg_common_struct* %346, i32 1)
  br label %347

347:                                              ; preds = %327, %316
  br label %369

348:                                              ; preds = %136, %131, %126, %121, %114
  %349 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %350 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %349, i32 0, i32 0
  %351 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %350, align 8
  %352 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %351, i32 0, i32 5
  store i32 76, i32* %352, align 8
  %353 = load i64, i64* %4, align 8
  %354 = trunc i64 %353 to i32
  %355 = add nsw i32 %354, 14
  %356 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %357 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %356, i32 0, i32 0
  %358 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %357, align 8
  %359 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %358, i32 0, i32 6
  %360 = bitcast %union.anon* %359 to [8 x i32]*
  %361 = getelementptr inbounds [8 x i32], [8 x i32]* %360, i64 0, i64 0
  store i32 %355, i32* %361, align 4
  %362 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %363 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %362, i32 0, i32 0
  %364 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %363, align 8
  %365 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %364, i32 0, i32 1
  %366 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %365, align 8
  %367 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %368 = bitcast %struct.jpeg_decompress_struct.586* %367 to %struct.jpeg_common_struct*
  call void %366(%struct.jpeg_common_struct* %368, i32 1)
  br label %369

369:                                              ; preds = %348, %347
  br label %390

370:                                              ; preds = %73
  %371 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %372 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %371, i32 0, i32 0
  %373 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %372, align 8
  %374 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %373, i32 0, i32 5
  store i32 76, i32* %374, align 8
  %375 = load i64, i64* %4, align 8
  %376 = trunc i64 %375 to i32
  %377 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %378 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %377, i32 0, i32 0
  %379 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %378, align 8
  %380 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %379, i32 0, i32 6
  %381 = bitcast %union.anon* %380 to [8 x i32]*
  %382 = getelementptr inbounds [8 x i32], [8 x i32]* %381, i64 0, i64 0
  store i32 %376, i32* %382, align 4
  %383 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %384 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %383, i32 0, i32 0
  %385 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %384, align 8
  %386 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %385, i32 0, i32 1
  %387 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %386, align 8
  %388 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %389 = bitcast %struct.jpeg_decompress_struct.586* %388 to %struct.jpeg_common_struct*
  call void %387(%struct.jpeg_common_struct* %389, i32 1)
  br label %390

390:                                              ; preds = %370, %369
  %391 = load i8*, i8** %8, align 8
  %392 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %393 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %392, i32 0, i32 0
  store i8* %391, i8** %393, align 8
  %394 = load i64, i64* %9, align 8
  %395 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %396 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %395, i32 0, i32 1
  store i64 %394, i64* %396, align 8
  %397 = load i64, i64* %4, align 8
  %398 = icmp sgt i64 %397, 0
  br i1 %398, label %399, label %407

399:                                              ; preds = %390
  %400 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %401 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %400, i32 0, i32 5
  %402 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %401, align 8
  %403 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %402, i32 0, i32 4
  %404 = load void (%struct.jpeg_decompress_struct.586*, i64)*, void (%struct.jpeg_decompress_struct.586*, i64)** %403, align 8
  %405 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %406 = load i64, i64* %4, align 8
  call void %404(%struct.jpeg_decompress_struct.586* %405, i64 %406)
  br label %407

407:                                              ; preds = %399, %390
  store i32 1, i32* %2, align 4
  br label %408

408:                                              ; preds = %407, %93, %56, %30
  %409 = load i32, i32* %2, align 4
  ret i32 %409
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_app14(%struct.jpeg_decompress_struct.586* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.586*, align 8
  %4 = alloca i64, align 8
  %5 = alloca [12 x i8], align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.jpeg_source_mgr.590*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %3, align 8
  %15 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %15, i32 0, i32 5
  %17 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %16, align 8
  store %struct.jpeg_source_mgr.590* %17, %struct.jpeg_source_mgr.590** %11, align 8
  %18 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %19 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %18, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  store i8* %20, i8** %12, align 8
  %21 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %22 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %21, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %13, align 8
  br label %24

24:                                               ; preds = %1
  %25 = load i64, i64* %13, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %42

27:                                               ; preds = %24
  %28 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %29 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %28, i32 0, i32 3
  %30 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %29, align 8
  %31 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %32 = call i32 %30(%struct.jpeg_decompress_struct.586* %31)
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %27
  store i32 0, i32* %2, align 4
  br label %270

35:                                               ; preds = %27
  %36 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %37 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %36, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  store i8* %38, i8** %12, align 8
  %39 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %40 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %39, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %13, align 8
  br label %42

42:                                               ; preds = %35, %24
  %43 = load i64, i64* %13, align 8
  %44 = add i64 %43, -1
  store i64 %44, i64* %13, align 8
  %45 = load i8*, i8** %12, align 8
  %46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %46, i8** %12, align 8
  %47 = load i8, i8* %45, align 1
  %48 = zext i8 %47 to i32
  %49 = shl i32 %48, 8
  %50 = zext i32 %49 to i64
  store i64 %50, i64* %4, align 8
  %51 = load i64, i64* %13, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %68

53:                                               ; preds = %42
  %54 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %55 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %54, i32 0, i32 3
  %56 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %55, align 8
  %57 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %58 = call i32 %56(%struct.jpeg_decompress_struct.586* %57)
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %53
  store i32 0, i32* %2, align 4
  br label %270

61:                                               ; preds = %53
  %62 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %63 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %62, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  store i8* %64, i8** %12, align 8
  %65 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %66 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %65, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %13, align 8
  br label %68

68:                                               ; preds = %61, %42
  %69 = load i64, i64* %13, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %13, align 8
  %71 = load i8*, i8** %12, align 8
  %72 = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %72, i8** %12, align 8
  %73 = load i8, i8* %71, align 1
  %74 = zext i8 %73 to i64
  %75 = load i64, i64* %4, align 8
  %76 = add nsw i64 %75, %74
  store i64 %76, i64* %4, align 8
  br label %77

77:                                               ; preds = %68
  %78 = load i64, i64* %4, align 8
  %79 = sub nsw i64 %78, 2
  store i64 %79, i64* %4, align 8
  %80 = load i64, i64* %4, align 8
  %81 = icmp sge i64 %80, 12
  br i1 %81, label %82, label %232

82:                                               ; preds = %77
  store i32 0, i32* %6, align 4
  br label %83

83:                                               ; preds = %115, %82
  %84 = load i32, i32* %6, align 4
  %85 = icmp slt i32 %84, 12
  br i1 %85, label %86, label %118

86:                                               ; preds = %83
  br label %87

87:                                               ; preds = %86
  %88 = load i64, i64* %13, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %105

90:                                               ; preds = %87
  %91 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %92 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %91, i32 0, i32 3
  %93 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %92, align 8
  %94 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %95 = call i32 %93(%struct.jpeg_decompress_struct.586* %94)
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %98, label %97

97:                                               ; preds = %90
  store i32 0, i32* %2, align 4
  br label %270

98:                                               ; preds = %90
  %99 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %100 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %99, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  store i8* %101, i8** %12, align 8
  %102 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %103 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %102, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %13, align 8
  br label %105

105:                                              ; preds = %98, %87
  %106 = load i64, i64* %13, align 8
  %107 = add i64 %106, -1
  store i64 %107, i64* %13, align 8
  %108 = load i8*, i8** %12, align 8
  %109 = getelementptr inbounds i8, i8* %108, i32 1
  store i8* %109, i8** %12, align 8
  %110 = load i8, i8* %108, align 1
  %111 = load i32, i32* %6, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 %112
  store i8 %110, i8* %113, align 1
  br label %114

114:                                              ; preds = %105
  br label %115

115:                                              ; preds = %114
  %116 = load i32, i32* %6, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %6, align 4
  br label %83

118:                                              ; preds = %83
  %119 = load i64, i64* %4, align 8
  %120 = sub nsw i64 %119, 12
  store i64 %120, i64* %4, align 8
  %121 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 0
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = icmp eq i32 %123, 65
  br i1 %124, label %125, label %210

125:                                              ; preds = %118
  %126 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 1
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = icmp eq i32 %128, 100
  br i1 %129, label %130, label %210

130:                                              ; preds = %125
  %131 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 2
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = icmp eq i32 %133, 111
  br i1 %134, label %135, label %210

135:                                              ; preds = %130
  %136 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 3
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = icmp eq i32 %138, 98
  br i1 %139, label %140, label %210

140:                                              ; preds = %135
  %141 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 4
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = icmp eq i32 %143, 101
  br i1 %144, label %145, label %210

145:                                              ; preds = %140
  %146 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 5
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i32
  %149 = shl i32 %148, 8
  %150 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  %153 = add nsw i32 %149, %152
  store i32 %153, i32* %7, align 4
  %154 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 7
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  %157 = shl i32 %156, 8
  %158 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 8
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = add nsw i32 %157, %160
  store i32 %161, i32* %8, align 4
  %162 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 9
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = shl i32 %164, 8
  %166 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 10
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i32
  %169 = add nsw i32 %165, %168
  store i32 %169, i32* %9, align 4
  %170 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 11
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  store i32 %172, i32* %10, align 4
  br label %173

173:                                              ; preds = %145
  %174 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %175 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %174, i32 0, i32 0
  %176 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %175, align 8
  %177 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %176, i32 0, i32 6
  %178 = bitcast %union.anon* %177 to [8 x i32]*
  %179 = getelementptr inbounds [8 x i32], [8 x i32]* %178, i64 0, i64 0
  store i32* %179, i32** %14, align 8
  %180 = load i32, i32* %7, align 4
  %181 = load i32*, i32** %14, align 8
  %182 = getelementptr inbounds i32, i32* %181, i64 0
  store i32 %180, i32* %182, align 4
  %183 = load i32, i32* %8, align 4
  %184 = load i32*, i32** %14, align 8
  %185 = getelementptr inbounds i32, i32* %184, i64 1
  store i32 %183, i32* %185, align 4
  %186 = load i32, i32* %9, align 4
  %187 = load i32*, i32** %14, align 8
  %188 = getelementptr inbounds i32, i32* %187, i64 2
  store i32 %186, i32* %188, align 4
  %189 = load i32, i32* %10, align 4
  %190 = load i32*, i32** %14, align 8
  %191 = getelementptr inbounds i32, i32* %190, i64 3
  store i32 %189, i32* %191, align 4
  %192 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %193 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %192, i32 0, i32 0
  %194 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %193, align 8
  %195 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %194, i32 0, i32 5
  store i32 75, i32* %195, align 8
  %196 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %197 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %196, i32 0, i32 0
  %198 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %197, align 8
  %199 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %198, i32 0, i32 1
  %200 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %199, align 8
  %201 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %202 = bitcast %struct.jpeg_decompress_struct.586* %201 to %struct.jpeg_common_struct*
  call void %200(%struct.jpeg_common_struct* %202, i32 1)
  br label %203

203:                                              ; preds = %173
  %204 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %205 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %204, i32 0, i32 54
  store i32 1, i32* %205, align 8
  %206 = load i32, i32* %10, align 4
  %207 = trunc i32 %206 to i8
  %208 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %209 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %208, i32 0, i32 55
  store i8 %207, i8* %209, align 4
  br label %231

210:                                              ; preds = %140, %135, %130, %125, %118
  %211 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %212 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %211, i32 0, i32 0
  %213 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %212, align 8
  %214 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %213, i32 0, i32 5
  store i32 77, i32* %214, align 8
  %215 = load i64, i64* %4, align 8
  %216 = trunc i64 %215 to i32
  %217 = add nsw i32 %216, 12
  %218 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %219 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %218, i32 0, i32 0
  %220 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %219, align 8
  %221 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %220, i32 0, i32 6
  %222 = bitcast %union.anon* %221 to [8 x i32]*
  %223 = getelementptr inbounds [8 x i32], [8 x i32]* %222, i64 0, i64 0
  store i32 %217, i32* %223, align 4
  %224 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %225 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %224, i32 0, i32 0
  %226 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %225, align 8
  %227 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %226, i32 0, i32 1
  %228 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %227, align 8
  %229 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %230 = bitcast %struct.jpeg_decompress_struct.586* %229 to %struct.jpeg_common_struct*
  call void %228(%struct.jpeg_common_struct* %230, i32 1)
  br label %231

231:                                              ; preds = %210, %203
  br label %252

232:                                              ; preds = %77
  %233 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %234 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %233, i32 0, i32 0
  %235 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %234, align 8
  %236 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %235, i32 0, i32 5
  store i32 77, i32* %236, align 8
  %237 = load i64, i64* %4, align 8
  %238 = trunc i64 %237 to i32
  %239 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %240 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %239, i32 0, i32 0
  %241 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %240, align 8
  %242 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %241, i32 0, i32 6
  %243 = bitcast %union.anon* %242 to [8 x i32]*
  %244 = getelementptr inbounds [8 x i32], [8 x i32]* %243, i64 0, i64 0
  store i32 %238, i32* %244, align 4
  %245 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %246 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %245, i32 0, i32 0
  %247 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %246, align 8
  %248 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %247, i32 0, i32 1
  %249 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %248, align 8
  %250 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %251 = bitcast %struct.jpeg_decompress_struct.586* %250 to %struct.jpeg_common_struct*
  call void %249(%struct.jpeg_common_struct* %251, i32 1)
  br label %252

252:                                              ; preds = %232, %231
  %253 = load i8*, i8** %12, align 8
  %254 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %255 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %254, i32 0, i32 0
  store i8* %253, i8** %255, align 8
  %256 = load i64, i64* %13, align 8
  %257 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %258 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %257, i32 0, i32 1
  store i64 %256, i64* %258, align 8
  %259 = load i64, i64* %4, align 8
  %260 = icmp sgt i64 %259, 0
  br i1 %260, label %261, label %269

261:                                              ; preds = %252
  %262 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %263 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %262, i32 0, i32 5
  %264 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %263, align 8
  %265 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %264, i32 0, i32 4
  %266 = load void (%struct.jpeg_decompress_struct.586*, i64)*, void (%struct.jpeg_decompress_struct.586*, i64)** %265, align 8
  %267 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %268 = load i64, i64* %4, align 8
  call void %266(%struct.jpeg_decompress_struct.586* %267, i64 %268)
  br label %269

269:                                              ; preds = %261, %252
  store i32 1, i32* %2, align 4
  br label %270

270:                                              ; preds = %269, %97, %60, %34
  %271 = load i32, i32* %2, align 4
  ret i32 %271
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @first_marker(%struct.jpeg_decompress_struct.586* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.586*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.jpeg_source_mgr.590*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %3, align 8
  %9 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %9, i32 0, i32 5
  %11 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  store %struct.jpeg_source_mgr.590* %11, %struct.jpeg_source_mgr.590** %6, align 8
  %12 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %13 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %12, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  store i8* %14, i8** %7, align 8
  %15 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %16 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %15, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %1
  %19 = load i64, i64* %8, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %36

21:                                               ; preds = %18
  %22 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %23 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %22, i32 0, i32 3
  %24 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %23, align 8
  %25 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %26 = call i32 %24(%struct.jpeg_decompress_struct.586* %25)
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %21
  store i32 0, i32* %2, align 4
  br label %111

29:                                               ; preds = %21
  %30 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %31 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %30, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  store i8* %32, i8** %7, align 8
  %33 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %34 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %33, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %8, align 8
  br label %36

36:                                               ; preds = %29, %18
  %37 = load i64, i64* %8, align 8
  %38 = add i64 %37, -1
  store i64 %38, i64* %8, align 8
  %39 = load i8*, i8** %7, align 8
  %40 = getelementptr inbounds i8, i8* %39, i32 1
  store i8* %40, i8** %7, align 8
  %41 = load i8, i8* %39, align 1
  %42 = zext i8 %41 to i32
  store i32 %42, i32* %4, align 4
  br label %43

43:                                               ; preds = %36
  br label %44

44:                                               ; preds = %43
  %45 = load i64, i64* %8, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %62

47:                                               ; preds = %44
  %48 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %49 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %48, i32 0, i32 3
  %50 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %49, align 8
  %51 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %52 = call i32 %50(%struct.jpeg_decompress_struct.586* %51)
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %47
  store i32 0, i32* %2, align 4
  br label %111

55:                                               ; preds = %47
  %56 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %57 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %56, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  store i8* %58, i8** %7, align 8
  %59 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %60 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %59, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %8, align 8
  br label %62

62:                                               ; preds = %55, %44
  %63 = load i64, i64* %8, align 8
  %64 = add i64 %63, -1
  store i64 %64, i64* %8, align 8
  %65 = load i8*, i8** %7, align 8
  %66 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %66, i8** %7, align 8
  %67 = load i8, i8* %65, align 1
  %68 = zext i8 %67 to i32
  store i32 %68, i32* %5, align 4
  br label %69

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4
  %71 = icmp ne i32 %70, 255
  br i1 %71, label %75, label %72

72:                                               ; preds = %69
  %73 = load i32, i32* %5, align 4
  %74 = icmp ne i32 %73, 216
  br i1 %74, label %75, label %101

75:                                               ; preds = %72, %69
  %76 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %77 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %76, i32 0, i32 0
  %78 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %77, align 8
  %79 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %78, i32 0, i32 5
  store i32 52, i32* %79, align 8
  %80 = load i32, i32* %4, align 4
  %81 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %82 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %81, i32 0, i32 0
  %83 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %82, align 8
  %84 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %83, i32 0, i32 6
  %85 = bitcast %union.anon* %84 to [8 x i32]*
  %86 = getelementptr inbounds [8 x i32], [8 x i32]* %85, i64 0, i64 0
  store i32 %80, i32* %86, align 4
  %87 = load i32, i32* %5, align 4
  %88 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %89 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %88, i32 0, i32 0
  %90 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %89, align 8
  %91 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %90, i32 0, i32 6
  %92 = bitcast %union.anon* %91 to [8 x i32]*
  %93 = getelementptr inbounds [8 x i32], [8 x i32]* %92, i64 0, i64 1
  store i32 %87, i32* %93, align 4
  %94 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %95 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %94, i32 0, i32 0
  %96 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %95, align 8
  %97 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %96, i32 0, i32 0
  %98 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %97, align 8
  %99 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %100 = bitcast %struct.jpeg_decompress_struct.586* %99 to %struct.jpeg_common_struct*
  call void %98(%struct.jpeg_common_struct* %100)
  br label %101

101:                                              ; preds = %75, %72
  %102 = load i32, i32* %5, align 4
  %103 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %104 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %103, i32 0, i32 72
  store i32 %102, i32* %104, align 4
  %105 = load i8*, i8** %7, align 8
  %106 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %107 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %106, i32 0, i32 0
  store i8* %105, i8** %107, align 8
  %108 = load i64, i64* %8, align 8
  %109 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %110 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %109, i32 0, i32 1
  store i64 %108, i64* %110, align 8
  store i32 1, i32* %2, align 4
  br label %111

111:                                              ; preds = %101, %54, %28
  %112 = load i32, i32* %2, align 4
  ret i32 %112
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_soi(%struct.jpeg_decompress_struct.586* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.586*, align 8
  %3 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %2, align 8
  %4 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %4, i32 0, i32 0
  %6 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %6, i32 0, i32 5
  store i32 101, i32* %7, align 8
  %8 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %8, i32 0, i32 0
  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i32 0, i32 1
  %12 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %11, align 8
  %13 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %14 = bitcast %struct.jpeg_decompress_struct.586* %13 to %struct.jpeg_common_struct*
  call void %12(%struct.jpeg_common_struct* %14, i32 1)
  %15 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %15, i32 0, i32 78
  %17 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %17, i32 0, i32 5
  %19 = load i32, i32* %18, align 8
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %1
  %22 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %22, i32 0, i32 0
  %24 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %25 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %24, i32 0, i32 5
  store i32 60, i32* %25, align 8
  %26 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %26, i32 0, i32 0
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i32 0, i32 0
  %30 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %29, align 8
  %31 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %32 = bitcast %struct.jpeg_decompress_struct.586* %31 to %struct.jpeg_common_struct*
  call void %30(%struct.jpeg_common_struct* %32)
  br label %33

33:                                               ; preds = %21, %1
  store i32 0, i32* %3, align 4
  br label %34

34:                                               ; preds = %53, %33
  %35 = load i32, i32* %3, align 4
  %36 = icmp slt i32 %35, 16
  br i1 %36, label %37, label %56

37:                                               ; preds = %34
  %38 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %39 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %38, i32 0, i32 46
  %40 = load i32, i32* %3, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [16 x i8], [16 x i8]* %39, i64 0, i64 %41
  store i8 0, i8* %42, align 1
  %43 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %43, i32 0, i32 47
  %45 = load i32, i32* %3, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [16 x i8], [16 x i8]* %44, i64 0, i64 %46
  store i8 1, i8* %47, align 1
  %48 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %49 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %48, i32 0, i32 48
  %50 = load i32, i32* %3, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [16 x i8], [16 x i8]* %49, i64 0, i64 %51
  store i8 5, i8* %52, align 1
  br label %53

53:                                               ; preds = %37
  %54 = load i32, i32* %3, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %3, align 4
  br label %34

56:                                               ; preds = %34
  %57 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %58 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %57, i32 0, i32 49
  store i32 0, i32* %58, align 8
  %59 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %59, i32 0, i32 9
  store i32 0, i32* %60, align 4
  %61 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %62 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %61, i32 0, i32 56
  store i32 0, i32* %62, align 8
  %63 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %64 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %63, i32 0, i32 50
  store i32 0, i32* %64, align 4
  %65 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %66 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %65, i32 0, i32 51
  store i8 0, i8* %66, align 8
  %67 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %68 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %67, i32 0, i32 52
  store i16 1, i16* %68, align 2
  %69 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %70 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %69, i32 0, i32 53
  store i16 1, i16* %70, align 4
  %71 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %71, i32 0, i32 54
  store i32 0, i32* %72, align 8
  %73 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %74 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %73, i32 0, i32 55
  store i8 0, i8* %74, align 4
  %75 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %2, align 8
  %76 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %75, i32 0, i32 78
  %77 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %76, align 8
  %78 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %77, i32 0, i32 5
  store i32 1, i32* %78, align 8
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_sof(%struct.jpeg_decompress_struct.586* %0, i32 %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.jpeg_decompress_struct.586*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.jpeg_component_info*, align 8
  %12 = alloca %struct.jpeg_source_mgr.590*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %17 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %17, i32 0, i32 5
  %19 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %18, align 8
  store %struct.jpeg_source_mgr.590* %19, %struct.jpeg_source_mgr.590** %12, align 8
  %20 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %21 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  store i8* %22, i8** %13, align 8
  %23 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %24 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %23, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %14, align 8
  %26 = load i32, i32* %6, align 4
  %27 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %27, i32 0, i32 44
  store i32 %26, i32* %28, align 8
  %29 = load i32, i32* %7, align 4
  %30 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %30, i32 0, i32 45
  store i32 %29, i32* %31, align 4
  br label %32

32:                                               ; preds = %3
  %33 = load i64, i64* %14, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %50

35:                                               ; preds = %32
  %36 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %37 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %36, i32 0, i32 3
  %38 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %37, align 8
  %39 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %40 = call i32 %38(%struct.jpeg_decompress_struct.586* %39)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %35
  store i32 0, i32* %4, align 4
  br label %544

43:                                               ; preds = %35
  %44 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %45 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %44, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  store i8* %46, i8** %13, align 8
  %47 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %48 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %47, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %14, align 8
  br label %50

50:                                               ; preds = %43, %32
  %51 = load i64, i64* %14, align 8
  %52 = add i64 %51, -1
  store i64 %52, i64* %14, align 8
  %53 = load i8*, i8** %13, align 8
  %54 = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %54, i8** %13, align 8
  %55 = load i8, i8* %53, align 1
  %56 = zext i8 %55 to i32
  %57 = shl i32 %56, 8
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %8, align 8
  %59 = load i64, i64* %14, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %76

61:                                               ; preds = %50
  %62 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %63 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %62, i32 0, i32 3
  %64 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %63, align 8
  %65 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %66 = call i32 %64(%struct.jpeg_decompress_struct.586* %65)
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %61
  store i32 0, i32* %4, align 4
  br label %544

69:                                               ; preds = %61
  %70 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %71 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %70, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  store i8* %72, i8** %13, align 8
  %73 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %74 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %73, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %14, align 8
  br label %76

76:                                               ; preds = %69, %50
  %77 = load i64, i64* %14, align 8
  %78 = add i64 %77, -1
  store i64 %78, i64* %14, align 8
  %79 = load i8*, i8** %13, align 8
  %80 = getelementptr inbounds i8, i8* %79, i32 1
  store i8* %80, i8** %13, align 8
  %81 = load i8, i8* %79, align 1
  %82 = zext i8 %81 to i64
  %83 = load i64, i64* %8, align 8
  %84 = add nsw i64 %83, %82
  store i64 %84, i64* %8, align 8
  br label %85

85:                                               ; preds = %76
  br label %86

86:                                               ; preds = %85
  %87 = load i64, i64* %14, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %104

89:                                               ; preds = %86
  %90 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %91 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %90, i32 0, i32 3
  %92 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %91, align 8
  %93 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %94 = call i32 %92(%struct.jpeg_decompress_struct.586* %93)
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %97, label %96

96:                                               ; preds = %89
  store i32 0, i32* %4, align 4
  br label %544

97:                                               ; preds = %89
  %98 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %99 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %98, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  store i8* %100, i8** %13, align 8
  %101 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %102 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %101, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  store i64 %103, i64* %14, align 8
  br label %104

104:                                              ; preds = %97, %86
  %105 = load i64, i64* %14, align 8
  %106 = add i64 %105, -1
  store i64 %106, i64* %14, align 8
  %107 = load i8*, i8** %13, align 8
  %108 = getelementptr inbounds i8, i8* %107, i32 1
  store i8* %108, i8** %13, align 8
  %109 = load i8, i8* %107, align 1
  %110 = zext i8 %109 to i32
  %111 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %112 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %111, i32 0, i32 42
  store i32 %110, i32* %112, align 8
  br label %113

113:                                              ; preds = %104
  br label %114

114:                                              ; preds = %113
  %115 = load i64, i64* %14, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %132

117:                                              ; preds = %114
  %118 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %119 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %118, i32 0, i32 3
  %120 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %119, align 8
  %121 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %122 = call i32 %120(%struct.jpeg_decompress_struct.586* %121)
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %125, label %124

124:                                              ; preds = %117
  store i32 0, i32* %4, align 4
  br label %544

125:                                              ; preds = %117
  %126 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %127 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %126, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  store i8* %128, i8** %13, align 8
  %129 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %130 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %129, i32 0, i32 1
  %131 = load i64, i64* %130, align 8
  store i64 %131, i64* %14, align 8
  br label %132

132:                                              ; preds = %125, %114
  %133 = load i64, i64* %14, align 8
  %134 = add i64 %133, -1
  store i64 %134, i64* %14, align 8
  %135 = load i8*, i8** %13, align 8
  %136 = getelementptr inbounds i8, i8* %135, i32 1
  store i8* %136, i8** %13, align 8
  %137 = load i8, i8* %135, align 1
  %138 = zext i8 %137 to i32
  %139 = shl i32 %138, 8
  %140 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %141 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %140, i32 0, i32 7
  store i32 %139, i32* %141, align 4
  %142 = load i64, i64* %14, align 8
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %159

144:                                              ; preds = %132
  %145 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %146 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %145, i32 0, i32 3
  %147 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %146, align 8
  %148 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %149 = call i32 %147(%struct.jpeg_decompress_struct.586* %148)
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %152, label %151

151:                                              ; preds = %144
  store i32 0, i32* %4, align 4
  br label %544

152:                                              ; preds = %144
  %153 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %154 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %153, i32 0, i32 0
  %155 = load i8*, i8** %154, align 8
  store i8* %155, i8** %13, align 8
  %156 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %157 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %156, i32 0, i32 1
  %158 = load i64, i64* %157, align 8
  store i64 %158, i64* %14, align 8
  br label %159

159:                                              ; preds = %152, %132
  %160 = load i64, i64* %14, align 8
  %161 = add i64 %160, -1
  store i64 %161, i64* %14, align 8
  %162 = load i8*, i8** %13, align 8
  %163 = getelementptr inbounds i8, i8* %162, i32 1
  store i8* %163, i8** %13, align 8
  %164 = load i8, i8* %162, align 1
  %165 = zext i8 %164 to i32
  %166 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %167 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %166, i32 0, i32 7
  %168 = load i32, i32* %167, align 4
  %169 = add i32 %168, %165
  store i32 %169, i32* %167, align 4
  br label %170

170:                                              ; preds = %159
  br label %171

171:                                              ; preds = %170
  %172 = load i64, i64* %14, align 8
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %189

174:                                              ; preds = %171
  %175 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %176 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %175, i32 0, i32 3
  %177 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %176, align 8
  %178 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %179 = call i32 %177(%struct.jpeg_decompress_struct.586* %178)
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %182, label %181

181:                                              ; preds = %174
  store i32 0, i32* %4, align 4
  br label %544

182:                                              ; preds = %174
  %183 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %184 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %183, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  store i8* %185, i8** %13, align 8
  %186 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %187 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %186, i32 0, i32 1
  %188 = load i64, i64* %187, align 8
  store i64 %188, i64* %14, align 8
  br label %189

189:                                              ; preds = %182, %171
  %190 = load i64, i64* %14, align 8
  %191 = add i64 %190, -1
  store i64 %191, i64* %14, align 8
  %192 = load i8*, i8** %13, align 8
  %193 = getelementptr inbounds i8, i8* %192, i32 1
  store i8* %193, i8** %13, align 8
  %194 = load i8, i8* %192, align 1
  %195 = zext i8 %194 to i32
  %196 = shl i32 %195, 8
  %197 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %198 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %197, i32 0, i32 6
  store i32 %196, i32* %198, align 8
  %199 = load i64, i64* %14, align 8
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %216

201:                                              ; preds = %189
  %202 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %203 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %202, i32 0, i32 3
  %204 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %203, align 8
  %205 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %206 = call i32 %204(%struct.jpeg_decompress_struct.586* %205)
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %209, label %208

208:                                              ; preds = %201
  store i32 0, i32* %4, align 4
  br label %544

209:                                              ; preds = %201
  %210 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %211 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %210, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  store i8* %212, i8** %13, align 8
  %213 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %214 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %213, i32 0, i32 1
  %215 = load i64, i64* %214, align 8
  store i64 %215, i64* %14, align 8
  br label %216

216:                                              ; preds = %209, %189
  %217 = load i64, i64* %14, align 8
  %218 = add i64 %217, -1
  store i64 %218, i64* %14, align 8
  %219 = load i8*, i8** %13, align 8
  %220 = getelementptr inbounds i8, i8* %219, i32 1
  store i8* %220, i8** %13, align 8
  %221 = load i8, i8* %219, align 1
  %222 = zext i8 %221 to i32
  %223 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %224 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %223, i32 0, i32 6
  %225 = load i32, i32* %224, align 8
  %226 = add i32 %225, %222
  store i32 %226, i32* %224, align 8
  br label %227

227:                                              ; preds = %216
  br label %228

228:                                              ; preds = %227
  %229 = load i64, i64* %14, align 8
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %231, label %246

231:                                              ; preds = %228
  %232 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %233 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %232, i32 0, i32 3
  %234 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %233, align 8
  %235 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %236 = call i32 %234(%struct.jpeg_decompress_struct.586* %235)
  %237 = icmp ne i32 %236, 0
  br i1 %237, label %239, label %238

238:                                              ; preds = %231
  store i32 0, i32* %4, align 4
  br label %544

239:                                              ; preds = %231
  %240 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %241 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %240, i32 0, i32 0
  %242 = load i8*, i8** %241, align 8
  store i8* %242, i8** %13, align 8
  %243 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %244 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %243, i32 0, i32 1
  %245 = load i64, i64* %244, align 8
  store i64 %245, i64* %14, align 8
  br label %246

246:                                              ; preds = %239, %228
  %247 = load i64, i64* %14, align 8
  %248 = add i64 %247, -1
  store i64 %248, i64* %14, align 8
  %249 = load i8*, i8** %13, align 8
  %250 = getelementptr inbounds i8, i8* %249, i32 1
  store i8* %250, i8** %13, align 8
  %251 = load i8, i8* %249, align 1
  %252 = zext i8 %251 to i32
  %253 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %254 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %253, i32 0, i32 8
  store i32 %252, i32* %254, align 8
  br label %255

255:                                              ; preds = %246
  %256 = load i64, i64* %8, align 8
  %257 = sub nsw i64 %256, 8
  store i64 %257, i64* %8, align 8
  br label %258

258:                                              ; preds = %255
  %259 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %260 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %259, i32 0, i32 0
  %261 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %260, align 8
  %262 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %261, i32 0, i32 6
  %263 = bitcast %union.anon* %262 to [8 x i32]*
  %264 = getelementptr inbounds [8 x i32], [8 x i32]* %263, i64 0, i64 0
  store i32* %264, i32** %15, align 8
  %265 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %266 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %265, i32 0, i32 72
  %267 = load i32, i32* %266, align 4
  %268 = load i32*, i32** %15, align 8
  %269 = getelementptr inbounds i32, i32* %268, i64 0
  store i32 %267, i32* %269, align 4
  %270 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %271 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %270, i32 0, i32 6
  %272 = load i32, i32* %271, align 8
  %273 = load i32*, i32** %15, align 8
  %274 = getelementptr inbounds i32, i32* %273, i64 1
  store i32 %272, i32* %274, align 4
  %275 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %276 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %275, i32 0, i32 7
  %277 = load i32, i32* %276, align 4
  %278 = load i32*, i32** %15, align 8
  %279 = getelementptr inbounds i32, i32* %278, i64 2
  store i32 %277, i32* %279, align 4
  %280 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %281 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %280, i32 0, i32 8
  %282 = load i32, i32* %281, align 8
  %283 = load i32*, i32** %15, align 8
  %284 = getelementptr inbounds i32, i32* %283, i64 3
  store i32 %282, i32* %284, align 4
  %285 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %286 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %285, i32 0, i32 0
  %287 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %286, align 8
  %288 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %287, i32 0, i32 5
  store i32 99, i32* %288, align 8
  %289 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %290 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %289, i32 0, i32 0
  %291 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %290, align 8
  %292 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %291, i32 0, i32 1
  %293 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %292, align 8
  %294 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %295 = bitcast %struct.jpeg_decompress_struct.586* %294 to %struct.jpeg_common_struct*
  call void %293(%struct.jpeg_common_struct* %295, i32 1)
  br label %296

296:                                              ; preds = %258
  %297 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %298 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %297, i32 0, i32 78
  %299 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %298, align 8
  %300 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %299, i32 0, i32 6
  %301 = load i32, i32* %300, align 4
  %302 = icmp ne i32 %301, 0
  br i1 %302, label %303, label %315

303:                                              ; preds = %296
  %304 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %305 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %304, i32 0, i32 0
  %306 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %305, align 8
  %307 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %306, i32 0, i32 5
  store i32 57, i32* %307, align 8
  %308 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %309 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %308, i32 0, i32 0
  %310 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %309, align 8
  %311 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %310, i32 0, i32 0
  %312 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %311, align 8
  %313 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %314 = bitcast %struct.jpeg_decompress_struct.586* %313 to %struct.jpeg_common_struct*
  call void %312(%struct.jpeg_common_struct* %314)
  br label %315

315:                                              ; preds = %303, %296
  %316 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %317 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %316, i32 0, i32 7
  %318 = load i32, i32* %317, align 4
  %319 = icmp ule i32 %318, 0
  br i1 %319, label %330, label %320

320:                                              ; preds = %315
  %321 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %322 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %321, i32 0, i32 6
  %323 = load i32, i32* %322, align 8
  %324 = icmp ule i32 %323, 0
  br i1 %324, label %330, label %325

325:                                              ; preds = %320
  %326 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %327 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %326, i32 0, i32 8
  %328 = load i32, i32* %327, align 8
  %329 = icmp sle i32 %328, 0
  br i1 %329, label %330, label %342

330:                                              ; preds = %325, %320, %315
  %331 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %332 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %331, i32 0, i32 0
  %333 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %332, align 8
  %334 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %333, i32 0, i32 5
  store i32 31, i32* %334, align 8
  %335 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %336 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %335, i32 0, i32 0
  %337 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %336, align 8
  %338 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %337, i32 0, i32 0
  %339 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %338, align 8
  %340 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %341 = bitcast %struct.jpeg_decompress_struct.586* %340 to %struct.jpeg_common_struct*
  call void %339(%struct.jpeg_common_struct* %341)
  br label %342

342:                                              ; preds = %330, %325
  %343 = load i64, i64* %8, align 8
  %344 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %345 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %344, i32 0, i32 8
  %346 = load i32, i32* %345, align 8
  %347 = mul nsw i32 %346, 3
  %348 = sext i32 %347 to i64
  %349 = icmp ne i64 %343, %348
  br i1 %349, label %350, label %362

350:                                              ; preds = %342
  %351 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %352 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %351, i32 0, i32 0
  %353 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %352, align 8
  %354 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %353, i32 0, i32 5
  store i32 9, i32* %354, align 8
  %355 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %356 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %355, i32 0, i32 0
  %357 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %356, align 8
  %358 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %357, i32 0, i32 0
  %359 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %358, align 8
  %360 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %361 = bitcast %struct.jpeg_decompress_struct.586* %360 to %struct.jpeg_common_struct*
  call void %359(%struct.jpeg_common_struct* %361)
  br label %362

362:                                              ; preds = %350, %342
  %363 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %364 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %363, i32 0, i32 43
  %365 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %364, align 8
  %366 = icmp eq %struct.jpeg_component_info* %365, null
  br i1 %366, label %367, label %384

367:                                              ; preds = %362
  %368 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %369 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %368, i32 0, i32 1
  %370 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %369, align 8
  %371 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %370, i32 0, i32 0
  %372 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %371, align 8
  %373 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %374 = bitcast %struct.jpeg_decompress_struct.586* %373 to %struct.jpeg_common_struct*
  %375 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %376 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %375, i32 0, i32 8
  %377 = load i32, i32* %376, align 8
  %378 = sext i32 %377 to i64
  %379 = mul i64 %378, 96
  %380 = call i8* %372(%struct.jpeg_common_struct* %374, i32 1, i64 %379)
  %381 = bitcast i8* %380 to %struct.jpeg_component_info*
  %382 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %383 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %382, i32 0, i32 43
  store %struct.jpeg_component_info* %381, %struct.jpeg_component_info** %383, align 8
  br label %384

384:                                              ; preds = %367, %362
  store i32 0, i32* %10, align 4
  %385 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %386 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %385, i32 0, i32 43
  %387 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %386, align 8
  store %struct.jpeg_component_info* %387, %struct.jpeg_component_info** %11, align 8
  br label %388

388:                                              ; preds = %528, %384
  %389 = load i32, i32* %10, align 4
  %390 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %391 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %390, i32 0, i32 8
  %392 = load i32, i32* %391, align 8
  %393 = icmp slt i32 %389, %392
  br i1 %393, label %394, label %533

394:                                              ; preds = %388
  %395 = load i32, i32* %10, align 4
  %396 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %11, align 8
  %397 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %396, i32 0, i32 1
  store i32 %395, i32* %397, align 4
  br label %398

398:                                              ; preds = %394
  %399 = load i64, i64* %14, align 8
  %400 = icmp eq i64 %399, 0
  br i1 %400, label %401, label %416

401:                                              ; preds = %398
  %402 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %403 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %402, i32 0, i32 3
  %404 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %403, align 8
  %405 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %406 = call i32 %404(%struct.jpeg_decompress_struct.586* %405)
  %407 = icmp ne i32 %406, 0
  br i1 %407, label %409, label %408

408:                                              ; preds = %401
  store i32 0, i32* %4, align 4
  br label %544

409:                                              ; preds = %401
  %410 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %411 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %410, i32 0, i32 0
  %412 = load i8*, i8** %411, align 8
  store i8* %412, i8** %13, align 8
  %413 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %414 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %413, i32 0, i32 1
  %415 = load i64, i64* %414, align 8
  store i64 %415, i64* %14, align 8
  br label %416

416:                                              ; preds = %409, %398
  %417 = load i64, i64* %14, align 8
  %418 = add i64 %417, -1
  store i64 %418, i64* %14, align 8
  %419 = load i8*, i8** %13, align 8
  %420 = getelementptr inbounds i8, i8* %419, i32 1
  store i8* %420, i8** %13, align 8
  %421 = load i8, i8* %419, align 1
  %422 = zext i8 %421 to i32
  %423 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %11, align 8
  %424 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %423, i32 0, i32 0
  store i32 %422, i32* %424, align 8
  br label %425

425:                                              ; preds = %416
  br label %426

426:                                              ; preds = %425
  %427 = load i64, i64* %14, align 8
  %428 = icmp eq i64 %427, 0
  br i1 %428, label %429, label %444

429:                                              ; preds = %426
  %430 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %431 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %430, i32 0, i32 3
  %432 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %431, align 8
  %433 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %434 = call i32 %432(%struct.jpeg_decompress_struct.586* %433)
  %435 = icmp ne i32 %434, 0
  br i1 %435, label %437, label %436

436:                                              ; preds = %429
  store i32 0, i32* %4, align 4
  br label %544

437:                                              ; preds = %429
  %438 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %439 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %438, i32 0, i32 0
  %440 = load i8*, i8** %439, align 8
  store i8* %440, i8** %13, align 8
  %441 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %442 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %441, i32 0, i32 1
  %443 = load i64, i64* %442, align 8
  store i64 %443, i64* %14, align 8
  br label %444

444:                                              ; preds = %437, %426
  %445 = load i64, i64* %14, align 8
  %446 = add i64 %445, -1
  store i64 %446, i64* %14, align 8
  %447 = load i8*, i8** %13, align 8
  %448 = getelementptr inbounds i8, i8* %447, i32 1
  store i8* %448, i8** %13, align 8
  %449 = load i8, i8* %447, align 1
  %450 = zext i8 %449 to i32
  store i32 %450, i32* %9, align 4
  br label %451

451:                                              ; preds = %444
  %452 = load i32, i32* %9, align 4
  %453 = ashr i32 %452, 4
  %454 = and i32 %453, 15
  %455 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %11, align 8
  %456 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %455, i32 0, i32 2
  store i32 %454, i32* %456, align 8
  %457 = load i32, i32* %9, align 4
  %458 = and i32 %457, 15
  %459 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %11, align 8
  %460 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %459, i32 0, i32 3
  store i32 %458, i32* %460, align 4
  br label %461

461:                                              ; preds = %451
  %462 = load i64, i64* %14, align 8
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %464, label %479

464:                                              ; preds = %461
  %465 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %466 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %465, i32 0, i32 3
  %467 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %466, align 8
  %468 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %469 = call i32 %467(%struct.jpeg_decompress_struct.586* %468)
  %470 = icmp ne i32 %469, 0
  br i1 %470, label %472, label %471

471:                                              ; preds = %464
  store i32 0, i32* %4, align 4
  br label %544

472:                                              ; preds = %464
  %473 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %474 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %473, i32 0, i32 0
  %475 = load i8*, i8** %474, align 8
  store i8* %475, i8** %13, align 8
  %476 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %477 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %476, i32 0, i32 1
  %478 = load i64, i64* %477, align 8
  store i64 %478, i64* %14, align 8
  br label %479

479:                                              ; preds = %472, %461
  %480 = load i64, i64* %14, align 8
  %481 = add i64 %480, -1
  store i64 %481, i64* %14, align 8
  %482 = load i8*, i8** %13, align 8
  %483 = getelementptr inbounds i8, i8* %482, i32 1
  store i8* %483, i8** %13, align 8
  %484 = load i8, i8* %482, align 1
  %485 = zext i8 %484 to i32
  %486 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %11, align 8
  %487 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %486, i32 0, i32 4
  store i32 %485, i32* %487, align 8
  br label %488

488:                                              ; preds = %479
  br label %489

489:                                              ; preds = %488
  %490 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %491 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %490, i32 0, i32 0
  %492 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %491, align 8
  %493 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %492, i32 0, i32 6
  %494 = bitcast %union.anon* %493 to [8 x i32]*
  %495 = getelementptr inbounds [8 x i32], [8 x i32]* %494, i64 0, i64 0
  store i32* %495, i32** %16, align 8
  %496 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %11, align 8
  %497 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %496, i32 0, i32 0
  %498 = load i32, i32* %497, align 8
  %499 = load i32*, i32** %16, align 8
  %500 = getelementptr inbounds i32, i32* %499, i64 0
  store i32 %498, i32* %500, align 4
  %501 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %11, align 8
  %502 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %501, i32 0, i32 2
  %503 = load i32, i32* %502, align 8
  %504 = load i32*, i32** %16, align 8
  %505 = getelementptr inbounds i32, i32* %504, i64 1
  store i32 %503, i32* %505, align 4
  %506 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %11, align 8
  %507 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %506, i32 0, i32 3
  %508 = load i32, i32* %507, align 4
  %509 = load i32*, i32** %16, align 8
  %510 = getelementptr inbounds i32, i32* %509, i64 2
  store i32 %508, i32* %510, align 4
  %511 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %11, align 8
  %512 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %511, i32 0, i32 4
  %513 = load i32, i32* %512, align 8
  %514 = load i32*, i32** %16, align 8
  %515 = getelementptr inbounds i32, i32* %514, i64 3
  store i32 %513, i32* %515, align 4
  %516 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %517 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %516, i32 0, i32 0
  %518 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %517, align 8
  %519 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %518, i32 0, i32 5
  store i32 100, i32* %519, align 8
  %520 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %521 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %520, i32 0, i32 0
  %522 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %521, align 8
  %523 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %522, i32 0, i32 1
  %524 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %523, align 8
  %525 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %526 = bitcast %struct.jpeg_decompress_struct.586* %525 to %struct.jpeg_common_struct*
  call void %524(%struct.jpeg_common_struct* %526, i32 1)
  br label %527

527:                                              ; preds = %489
  br label %528

528:                                              ; preds = %527
  %529 = load i32, i32* %10, align 4
  %530 = add nsw i32 %529, 1
  store i32 %530, i32* %10, align 4
  %531 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %11, align 8
  %532 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %531, i32 1
  store %struct.jpeg_component_info* %532, %struct.jpeg_component_info** %11, align 8
  br label %388

533:                                              ; preds = %388
  %534 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %5, align 8
  %535 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %534, i32 0, i32 78
  %536 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %535, align 8
  %537 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %536, i32 0, i32 6
  store i32 1, i32* %537, align 4
  %538 = load i8*, i8** %13, align 8
  %539 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %540 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %539, i32 0, i32 0
  store i8* %538, i8** %540, align 8
  %541 = load i64, i64* %14, align 8
  %542 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %12, align 8
  %543 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %542, i32 0, i32 1
  store i64 %541, i64* %543, align 8
  store i32 1, i32* %4, align 4
  br label %544

544:                                              ; preds = %533, %471, %436, %408, %238, %208, %181, %151, %124, %96, %68, %42
  %545 = load i32, i32* %4, align 4
  ret i32 %545
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_sos(%struct.jpeg_decompress_struct.586* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.586*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.jpeg_component_info*, align 8
  %11 = alloca %struct.jpeg_source_mgr.590*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %3, align 8
  %16 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %16, i32 0, i32 5
  %18 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %17, align 8
  store %struct.jpeg_source_mgr.590* %18, %struct.jpeg_source_mgr.590** %11, align 8
  %19 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %20 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %19, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  store i8* %21, i8** %12, align 8
  %22 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %23 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %22, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %13, align 8
  %25 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %25, i32 0, i32 78
  %27 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %26, align 8
  %28 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %27, i32 0, i32 6
  %29 = load i32, i32* %28, align 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %43, label %31

31:                                               ; preds = %1
  %32 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %32, i32 0, i32 0
  %34 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %33, align 8
  %35 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %34, i32 0, i32 5
  store i32 61, i32* %35, align 8
  %36 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %36, i32 0, i32 0
  %38 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %37, align 8
  %39 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %38, i32 0, i32 0
  %40 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %39, align 8
  %41 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %42 = bitcast %struct.jpeg_decompress_struct.586* %41 to %struct.jpeg_common_struct*
  call void %40(%struct.jpeg_common_struct* %42)
  br label %43

43:                                               ; preds = %31, %1
  br label %44

44:                                               ; preds = %43
  %45 = load i64, i64* %13, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %62

47:                                               ; preds = %44
  %48 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %49 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %48, i32 0, i32 3
  %50 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %49, align 8
  %51 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %52 = call i32 %50(%struct.jpeg_decompress_struct.586* %51)
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %47
  store i32 0, i32* %2, align 4
  br label %466

55:                                               ; preds = %47
  %56 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %57 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %56, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  store i8* %58, i8** %12, align 8
  %59 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %60 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %59, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %13, align 8
  br label %62

62:                                               ; preds = %55, %44
  %63 = load i64, i64* %13, align 8
  %64 = add i64 %63, -1
  store i64 %64, i64* %13, align 8
  %65 = load i8*, i8** %12, align 8
  %66 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %66, i8** %12, align 8
  %67 = load i8, i8* %65, align 1
  %68 = zext i8 %67 to i32
  %69 = shl i32 %68, 8
  %70 = zext i32 %69 to i64
  store i64 %70, i64* %4, align 8
  %71 = load i64, i64* %13, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %88

73:                                               ; preds = %62
  %74 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %75 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %74, i32 0, i32 3
  %76 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %75, align 8
  %77 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %78 = call i32 %76(%struct.jpeg_decompress_struct.586* %77)
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %81, label %80

80:                                               ; preds = %73
  store i32 0, i32* %2, align 4
  br label %466

81:                                               ; preds = %73
  %82 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %83 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %82, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  store i8* %84, i8** %12, align 8
  %85 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %86 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %85, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %13, align 8
  br label %88

88:                                               ; preds = %81, %62
  %89 = load i64, i64* %13, align 8
  %90 = add i64 %89, -1
  store i64 %90, i64* %13, align 8
  %91 = load i8*, i8** %12, align 8
  %92 = getelementptr inbounds i8, i8* %91, i32 1
  store i8* %92, i8** %12, align 8
  %93 = load i8, i8* %91, align 1
  %94 = zext i8 %93 to i64
  %95 = load i64, i64* %4, align 8
  %96 = add nsw i64 %95, %94
  store i64 %96, i64* %4, align 8
  br label %97

97:                                               ; preds = %88
  br label %98

98:                                               ; preds = %97
  %99 = load i64, i64* %13, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %116

101:                                              ; preds = %98
  %102 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %103 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %102, i32 0, i32 3
  %104 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %103, align 8
  %105 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %106 = call i32 %104(%struct.jpeg_decompress_struct.586* %105)
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %109, label %108

108:                                              ; preds = %101
  store i32 0, i32* %2, align 4
  br label %466

109:                                              ; preds = %101
  %110 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %111 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %110, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  store i8* %112, i8** %12, align 8
  %113 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %114 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %113, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %13, align 8
  br label %116

116:                                              ; preds = %109, %98
  %117 = load i64, i64* %13, align 8
  %118 = add i64 %117, -1
  store i64 %118, i64* %13, align 8
  %119 = load i8*, i8** %12, align 8
  %120 = getelementptr inbounds i8, i8* %119, i32 1
  store i8* %120, i8** %12, align 8
  %121 = load i8, i8* %119, align 1
  %122 = zext i8 %121 to i32
  store i32 %122, i32* %7, align 4
  br label %123

123:                                              ; preds = %116
  %124 = load i64, i64* %4, align 8
  %125 = load i32, i32* %7, align 4
  %126 = mul nsw i32 %125, 2
  %127 = add nsw i32 %126, 6
  %128 = sext i32 %127 to i64
  %129 = icmp ne i64 %124, %128
  br i1 %129, label %136, label %130

130:                                              ; preds = %123
  %131 = load i32, i32* %7, align 4
  %132 = icmp slt i32 %131, 1
  br i1 %132, label %136, label %133

133:                                              ; preds = %130
  %134 = load i32, i32* %7, align 4
  %135 = icmp sgt i32 %134, 4
  br i1 %135, label %136, label %148

136:                                              ; preds = %133, %130, %123
  %137 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %138 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %137, i32 0, i32 0
  %139 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %138, align 8
  %140 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %139, i32 0, i32 5
  store i32 9, i32* %140, align 8
  %141 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %142 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %141, i32 0, i32 0
  %143 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %142, align 8
  %144 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %143, i32 0, i32 0
  %145 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %144, align 8
  %146 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %147 = bitcast %struct.jpeg_decompress_struct.586* %146 to %struct.jpeg_common_struct*
  call void %145(%struct.jpeg_common_struct* %147)
  br label %148

148:                                              ; preds = %136, %133
  %149 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %150 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %149, i32 0, i32 0
  %151 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %150, align 8
  %152 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %151, i32 0, i32 5
  store i32 102, i32* %152, align 8
  %153 = load i32, i32* %7, align 4
  %154 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %155 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %154, i32 0, i32 0
  %156 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %155, align 8
  %157 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %156, i32 0, i32 6
  %158 = bitcast %union.anon* %157 to [8 x i32]*
  %159 = getelementptr inbounds [8 x i32], [8 x i32]* %158, i64 0, i64 0
  store i32 %153, i32* %159, align 4
  %160 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %161 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %160, i32 0, i32 0
  %162 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %161, align 8
  %163 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %162, i32 0, i32 1
  %164 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %163, align 8
  %165 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %166 = bitcast %struct.jpeg_decompress_struct.586* %165 to %struct.jpeg_common_struct*
  call void %164(%struct.jpeg_common_struct* %166, i32 1)
  %167 = load i32, i32* %7, align 4
  %168 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %169 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %168, i32 0, i32 62
  store i32 %167, i32* %169, align 8
  store i32 0, i32* %5, align 4
  br label %170

170:                                              ; preds = %316, %148
  %171 = load i32, i32* %5, align 4
  %172 = load i32, i32* %7, align 4
  %173 = icmp slt i32 %171, %172
  br i1 %173, label %174, label %319

174:                                              ; preds = %170
  br label %175

175:                                              ; preds = %174
  %176 = load i64, i64* %13, align 8
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %193

178:                                              ; preds = %175
  %179 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %180 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %179, i32 0, i32 3
  %181 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %180, align 8
  %182 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %183 = call i32 %181(%struct.jpeg_decompress_struct.586* %182)
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %186, label %185

185:                                              ; preds = %178
  store i32 0, i32* %2, align 4
  br label %466

186:                                              ; preds = %178
  %187 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %188 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %187, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  store i8* %189, i8** %12, align 8
  %190 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %191 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %190, i32 0, i32 1
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %13, align 8
  br label %193

193:                                              ; preds = %186, %175
  %194 = load i64, i64* %13, align 8
  %195 = add i64 %194, -1
  store i64 %195, i64* %13, align 8
  %196 = load i8*, i8** %12, align 8
  %197 = getelementptr inbounds i8, i8* %196, i32 1
  store i8* %197, i8** %12, align 8
  %198 = load i8, i8* %196, align 1
  %199 = zext i8 %198 to i32
  store i32 %199, i32* %9, align 4
  br label %200

200:                                              ; preds = %193
  br label %201

201:                                              ; preds = %200
  %202 = load i64, i64* %13, align 8
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %219

204:                                              ; preds = %201
  %205 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %206 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %205, i32 0, i32 3
  %207 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %206, align 8
  %208 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %209 = call i32 %207(%struct.jpeg_decompress_struct.586* %208)
  %210 = icmp ne i32 %209, 0
  br i1 %210, label %212, label %211

211:                                              ; preds = %204
  store i32 0, i32* %2, align 4
  br label %466

212:                                              ; preds = %204
  %213 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %214 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %213, i32 0, i32 0
  %215 = load i8*, i8** %214, align 8
  store i8* %215, i8** %12, align 8
  %216 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %217 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %216, i32 0, i32 1
  %218 = load i64, i64* %217, align 8
  store i64 %218, i64* %13, align 8
  br label %219

219:                                              ; preds = %212, %201
  %220 = load i64, i64* %13, align 8
  %221 = add i64 %220, -1
  store i64 %221, i64* %13, align 8
  %222 = load i8*, i8** %12, align 8
  %223 = getelementptr inbounds i8, i8* %222, i32 1
  store i8* %223, i8** %12, align 8
  %224 = load i8, i8* %222, align 1
  %225 = zext i8 %224 to i32
  store i32 %225, i32* %8, align 4
  br label %226

226:                                              ; preds = %219
  store i32 0, i32* %6, align 4
  %227 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %228 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %227, i32 0, i32 43
  %229 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %228, align 8
  store %struct.jpeg_component_info* %229, %struct.jpeg_component_info** %10, align 8
  br label %230

230:                                              ; preds = %244, %226
  %231 = load i32, i32* %6, align 4
  %232 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %233 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %232, i32 0, i32 8
  %234 = load i32, i32* %233, align 8
  %235 = icmp slt i32 %231, %234
  br i1 %235, label %236, label %249

236:                                              ; preds = %230
  %237 = load i32, i32* %9, align 4
  %238 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %10, align 8
  %239 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %238, i32 0, i32 0
  %240 = load i32, i32* %239, align 8
  %241 = icmp eq i32 %237, %240
  br i1 %241, label %242, label %243

242:                                              ; preds = %236
  br label %268

243:                                              ; preds = %236
  br label %244

244:                                              ; preds = %243
  %245 = load i32, i32* %6, align 4
  %246 = add nsw i32 %245, 1
  store i32 %246, i32* %6, align 4
  %247 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %10, align 8
  %248 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %247, i32 1
  store %struct.jpeg_component_info* %248, %struct.jpeg_component_info** %10, align 8
  br label %230

249:                                              ; preds = %230
  %250 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %251 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %250, i32 0, i32 0
  %252 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %251, align 8
  %253 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %252, i32 0, i32 5
  store i32 5, i32* %253, align 8
  %254 = load i32, i32* %9, align 4
  %255 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %256 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %255, i32 0, i32 0
  %257 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %256, align 8
  %258 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %257, i32 0, i32 6
  %259 = bitcast %union.anon* %258 to [8 x i32]*
  %260 = getelementptr inbounds [8 x i32], [8 x i32]* %259, i64 0, i64 0
  store i32 %254, i32* %260, align 4
  %261 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %262 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %261, i32 0, i32 0
  %263 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %262, align 8
  %264 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %263, i32 0, i32 0
  %265 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %264, align 8
  %266 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %267 = bitcast %struct.jpeg_decompress_struct.586* %266 to %struct.jpeg_common_struct*
  call void %265(%struct.jpeg_common_struct* %267)
  br label %268

268:                                              ; preds = %249, %242
  %269 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %10, align 8
  %270 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %271 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %270, i32 0, i32 63
  %272 = load i32, i32* %5, align 4
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %271, i64 0, i64 %273
  store %struct.jpeg_component_info* %269, %struct.jpeg_component_info** %274, align 8
  %275 = load i32, i32* %8, align 4
  %276 = ashr i32 %275, 4
  %277 = and i32 %276, 15
  %278 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %10, align 8
  %279 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %278, i32 0, i32 5
  store i32 %277, i32* %279, align 4
  %280 = load i32, i32* %8, align 4
  %281 = and i32 %280, 15
  %282 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %10, align 8
  %283 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %282, i32 0, i32 6
  store i32 %281, i32* %283, align 8
  br label %284

284:                                              ; preds = %268
  %285 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %286 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %285, i32 0, i32 0
  %287 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %286, align 8
  %288 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %287, i32 0, i32 6
  %289 = bitcast %union.anon* %288 to [8 x i32]*
  %290 = getelementptr inbounds [8 x i32], [8 x i32]* %289, i64 0, i64 0
  store i32* %290, i32** %14, align 8
  %291 = load i32, i32* %9, align 4
  %292 = load i32*, i32** %14, align 8
  %293 = getelementptr inbounds i32, i32* %292, i64 0
  store i32 %291, i32* %293, align 4
  %294 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %10, align 8
  %295 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %294, i32 0, i32 5
  %296 = load i32, i32* %295, align 4
  %297 = load i32*, i32** %14, align 8
  %298 = getelementptr inbounds i32, i32* %297, i64 1
  store i32 %296, i32* %298, align 4
  %299 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %10, align 8
  %300 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %299, i32 0, i32 6
  %301 = load i32, i32* %300, align 8
  %302 = load i32*, i32** %14, align 8
  %303 = getelementptr inbounds i32, i32* %302, i64 2
  store i32 %301, i32* %303, align 4
  %304 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %305 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %304, i32 0, i32 0
  %306 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %305, align 8
  %307 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %306, i32 0, i32 5
  store i32 103, i32* %307, align 8
  %308 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %309 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %308, i32 0, i32 0
  %310 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %309, align 8
  %311 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %310, i32 0, i32 1
  %312 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %311, align 8
  %313 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %314 = bitcast %struct.jpeg_decompress_struct.586* %313 to %struct.jpeg_common_struct*
  call void %312(%struct.jpeg_common_struct* %314, i32 1)
  br label %315

315:                                              ; preds = %284
  br label %316

316:                                              ; preds = %315
  %317 = load i32, i32* %5, align 4
  %318 = add nsw i32 %317, 1
  store i32 %318, i32* %5, align 4
  br label %170

319:                                              ; preds = %170
  br label %320

320:                                              ; preds = %319
  %321 = load i64, i64* %13, align 8
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %323, label %338

323:                                              ; preds = %320
  %324 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %325 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %324, i32 0, i32 3
  %326 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %325, align 8
  %327 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %328 = call i32 %326(%struct.jpeg_decompress_struct.586* %327)
  %329 = icmp ne i32 %328, 0
  br i1 %329, label %331, label %330

330:                                              ; preds = %323
  store i32 0, i32* %2, align 4
  br label %466

331:                                              ; preds = %323
  %332 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %333 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %332, i32 0, i32 0
  %334 = load i8*, i8** %333, align 8
  store i8* %334, i8** %12, align 8
  %335 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %336 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %335, i32 0, i32 1
  %337 = load i64, i64* %336, align 8
  store i64 %337, i64* %13, align 8
  br label %338

338:                                              ; preds = %331, %320
  %339 = load i64, i64* %13, align 8
  %340 = add i64 %339, -1
  store i64 %340, i64* %13, align 8
  %341 = load i8*, i8** %12, align 8
  %342 = getelementptr inbounds i8, i8* %341, i32 1
  store i8* %342, i8** %12, align 8
  %343 = load i8, i8* %341, align 1
  %344 = zext i8 %343 to i32
  store i32 %344, i32* %8, align 4
  br label %345

345:                                              ; preds = %338
  %346 = load i32, i32* %8, align 4
  %347 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %348 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %347, i32 0, i32 68
  store i32 %346, i32* %348, align 4
  br label %349

349:                                              ; preds = %345
  %350 = load i64, i64* %13, align 8
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %367

352:                                              ; preds = %349
  %353 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %354 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %353, i32 0, i32 3
  %355 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %354, align 8
  %356 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %357 = call i32 %355(%struct.jpeg_decompress_struct.586* %356)
  %358 = icmp ne i32 %357, 0
  br i1 %358, label %360, label %359

359:                                              ; preds = %352
  store i32 0, i32* %2, align 4
  br label %466

360:                                              ; preds = %352
  %361 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %362 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %361, i32 0, i32 0
  %363 = load i8*, i8** %362, align 8
  store i8* %363, i8** %12, align 8
  %364 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %365 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %364, i32 0, i32 1
  %366 = load i64, i64* %365, align 8
  store i64 %366, i64* %13, align 8
  br label %367

367:                                              ; preds = %360, %349
  %368 = load i64, i64* %13, align 8
  %369 = add i64 %368, -1
  store i64 %369, i64* %13, align 8
  %370 = load i8*, i8** %12, align 8
  %371 = getelementptr inbounds i8, i8* %370, i32 1
  store i8* %371, i8** %12, align 8
  %372 = load i8, i8* %370, align 1
  %373 = zext i8 %372 to i32
  store i32 %373, i32* %8, align 4
  br label %374

374:                                              ; preds = %367
  %375 = load i32, i32* %8, align 4
  %376 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %377 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %376, i32 0, i32 69
  store i32 %375, i32* %377, align 8
  br label %378

378:                                              ; preds = %374
  %379 = load i64, i64* %13, align 8
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %381, label %396

381:                                              ; preds = %378
  %382 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %383 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %382, i32 0, i32 3
  %384 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %383, align 8
  %385 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %386 = call i32 %384(%struct.jpeg_decompress_struct.586* %385)
  %387 = icmp ne i32 %386, 0
  br i1 %387, label %389, label %388

388:                                              ; preds = %381
  store i32 0, i32* %2, align 4
  br label %466

389:                                              ; preds = %381
  %390 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %391 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %390, i32 0, i32 0
  %392 = load i8*, i8** %391, align 8
  store i8* %392, i8** %12, align 8
  %393 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %394 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %393, i32 0, i32 1
  %395 = load i64, i64* %394, align 8
  store i64 %395, i64* %13, align 8
  br label %396

396:                                              ; preds = %389, %378
  %397 = load i64, i64* %13, align 8
  %398 = add i64 %397, -1
  store i64 %398, i64* %13, align 8
  %399 = load i8*, i8** %12, align 8
  %400 = getelementptr inbounds i8, i8* %399, i32 1
  store i8* %400, i8** %12, align 8
  %401 = load i8, i8* %399, align 1
  %402 = zext i8 %401 to i32
  store i32 %402, i32* %8, align 4
  br label %403

403:                                              ; preds = %396
  %404 = load i32, i32* %8, align 4
  %405 = ashr i32 %404, 4
  %406 = and i32 %405, 15
  %407 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %408 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %407, i32 0, i32 70
  store i32 %406, i32* %408, align 4
  %409 = load i32, i32* %8, align 4
  %410 = and i32 %409, 15
  %411 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %412 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %411, i32 0, i32 71
  store i32 %410, i32* %412, align 8
  br label %413

413:                                              ; preds = %403
  %414 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %415 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %414, i32 0, i32 0
  %416 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %415, align 8
  %417 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %416, i32 0, i32 6
  %418 = bitcast %union.anon* %417 to [8 x i32]*
  %419 = getelementptr inbounds [8 x i32], [8 x i32]* %418, i64 0, i64 0
  store i32* %419, i32** %15, align 8
  %420 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %421 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %420, i32 0, i32 68
  %422 = load i32, i32* %421, align 4
  %423 = load i32*, i32** %15, align 8
  %424 = getelementptr inbounds i32, i32* %423, i64 0
  store i32 %422, i32* %424, align 4
  %425 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %426 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %425, i32 0, i32 69
  %427 = load i32, i32* %426, align 8
  %428 = load i32*, i32** %15, align 8
  %429 = getelementptr inbounds i32, i32* %428, i64 1
  store i32 %427, i32* %429, align 4
  %430 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %431 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %430, i32 0, i32 70
  %432 = load i32, i32* %431, align 4
  %433 = load i32*, i32** %15, align 8
  %434 = getelementptr inbounds i32, i32* %433, i64 2
  store i32 %432, i32* %434, align 4
  %435 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %436 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %435, i32 0, i32 71
  %437 = load i32, i32* %436, align 8
  %438 = load i32*, i32** %15, align 8
  %439 = getelementptr inbounds i32, i32* %438, i64 3
  store i32 %437, i32* %439, align 4
  %440 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %441 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %440, i32 0, i32 0
  %442 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %441, align 8
  %443 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %442, i32 0, i32 5
  store i32 104, i32* %443, align 8
  %444 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %445 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %444, i32 0, i32 0
  %446 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %445, align 8
  %447 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %446, i32 0, i32 1
  %448 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %447, align 8
  %449 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %450 = bitcast %struct.jpeg_decompress_struct.586* %449 to %struct.jpeg_common_struct*
  call void %448(%struct.jpeg_common_struct* %450, i32 1)
  br label %451

451:                                              ; preds = %413
  %452 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %453 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %452, i32 0, i32 78
  %454 = load %struct.jpeg_marker_reader.599*, %struct.jpeg_marker_reader.599** %453, align 8
  %455 = getelementptr inbounds %struct.jpeg_marker_reader.599, %struct.jpeg_marker_reader.599* %454, i32 0, i32 7
  store i32 0, i32* %455, align 8
  %456 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %457 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %456, i32 0, i32 34
  %458 = load i32, i32* %457, align 4
  %459 = add nsw i32 %458, 1
  store i32 %459, i32* %457, align 4
  %460 = load i8*, i8** %12, align 8
  %461 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %462 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %461, i32 0, i32 0
  store i8* %460, i8** %462, align 8
  %463 = load i64, i64* %13, align 8
  %464 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %465 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %464, i32 0, i32 1
  store i64 %463, i64* %465, align 8
  store i32 1, i32* %2, align 4
  br label %466

466:                                              ; preds = %451, %388, %359, %330, %211, %185, %108, %80, %54
  %467 = load i32, i32* %2, align 4
  ret i32 %467
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_dac(%struct.jpeg_decompress_struct.586* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.586*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.jpeg_source_mgr.590*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %3, align 8
  %10 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %10, i32 0, i32 5
  %12 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  store %struct.jpeg_source_mgr.590* %12, %struct.jpeg_source_mgr.590** %7, align 8
  %13 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %14 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  store i8* %15, i8** %8, align 8
  %16 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %17 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %16, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %9, align 8
  br label %19

19:                                               ; preds = %1
  %20 = load i64, i64* %9, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %37

22:                                               ; preds = %19
  %23 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %24 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %23, i32 0, i32 3
  %25 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %24, align 8
  %26 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %27 = call i32 %25(%struct.jpeg_decompress_struct.586* %26)
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  store i32 0, i32* %2, align 4
  br label %254

30:                                               ; preds = %22
  %31 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %32 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %31, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  store i8* %33, i8** %8, align 8
  %34 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %35 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %34, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %9, align 8
  br label %37

37:                                               ; preds = %30, %19
  %38 = load i64, i64* %9, align 8
  %39 = add i64 %38, -1
  store i64 %39, i64* %9, align 8
  %40 = load i8*, i8** %8, align 8
  %41 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %41, i8** %8, align 8
  %42 = load i8, i8* %40, align 1
  %43 = zext i8 %42 to i32
  %44 = shl i32 %43, 8
  %45 = zext i32 %44 to i64
  store i64 %45, i64* %4, align 8
  %46 = load i64, i64* %9, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %63

48:                                               ; preds = %37
  %49 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %50 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %49, i32 0, i32 3
  %51 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %50, align 8
  %52 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %53 = call i32 %51(%struct.jpeg_decompress_struct.586* %52)
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  store i32 0, i32* %2, align 4
  br label %254

56:                                               ; preds = %48
  %57 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %58 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %57, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  store i8* %59, i8** %8, align 8
  %60 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %61 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %60, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %9, align 8
  br label %63

63:                                               ; preds = %56, %37
  %64 = load i64, i64* %9, align 8
  %65 = add i64 %64, -1
  store i64 %65, i64* %9, align 8
  %66 = load i8*, i8** %8, align 8
  %67 = getelementptr inbounds i8, i8* %66, i32 1
  store i8* %67, i8** %8, align 8
  %68 = load i8, i8* %66, align 1
  %69 = zext i8 %68 to i64
  %70 = load i64, i64* %4, align 8
  %71 = add nsw i64 %70, %69
  store i64 %71, i64* %4, align 8
  br label %72

72:                                               ; preds = %63
  %73 = load i64, i64* %4, align 8
  %74 = sub nsw i64 %73, 2
  store i64 %74, i64* %4, align 8
  br label %75

75:                                               ; preds = %246, %72
  %76 = load i64, i64* %4, align 8
  %77 = icmp sgt i64 %76, 0
  br i1 %77, label %78, label %247

78:                                               ; preds = %75
  br label %79

79:                                               ; preds = %78
  %80 = load i64, i64* %9, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %97

82:                                               ; preds = %79
  %83 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %84 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %83, i32 0, i32 3
  %85 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %84, align 8
  %86 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %87 = call i32 %85(%struct.jpeg_decompress_struct.586* %86)
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %90, label %89

89:                                               ; preds = %82
  store i32 0, i32* %2, align 4
  br label %254

90:                                               ; preds = %82
  %91 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %92 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %91, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  store i8* %93, i8** %8, align 8
  %94 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %95 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %94, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %9, align 8
  br label %97

97:                                               ; preds = %90, %79
  %98 = load i64, i64* %9, align 8
  %99 = add i64 %98, -1
  store i64 %99, i64* %9, align 8
  %100 = load i8*, i8** %8, align 8
  %101 = getelementptr inbounds i8, i8* %100, i32 1
  store i8* %101, i8** %8, align 8
  %102 = load i8, i8* %100, align 1
  %103 = zext i8 %102 to i32
  store i32 %103, i32* %5, align 4
  br label %104

104:                                              ; preds = %97
  br label %105

105:                                              ; preds = %104
  %106 = load i64, i64* %9, align 8
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %123

108:                                              ; preds = %105
  %109 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %110 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %109, i32 0, i32 3
  %111 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %110, align 8
  %112 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %113 = call i32 %111(%struct.jpeg_decompress_struct.586* %112)
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %108
  store i32 0, i32* %2, align 4
  br label %254

116:                                              ; preds = %108
  %117 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %118 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %117, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  store i8* %119, i8** %8, align 8
  %120 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %121 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %120, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  store i64 %122, i64* %9, align 8
  br label %123

123:                                              ; preds = %116, %105
  %124 = load i64, i64* %9, align 8
  %125 = add i64 %124, -1
  store i64 %125, i64* %9, align 8
  %126 = load i8*, i8** %8, align 8
  %127 = getelementptr inbounds i8, i8* %126, i32 1
  store i8* %127, i8** %8, align 8
  %128 = load i8, i8* %126, align 1
  %129 = zext i8 %128 to i32
  store i32 %129, i32* %6, align 4
  br label %130

130:                                              ; preds = %123
  %131 = load i64, i64* %4, align 8
  %132 = sub nsw i64 %131, 2
  store i64 %132, i64* %4, align 8
  %133 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %134 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %133, i32 0, i32 0
  %135 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %134, align 8
  %136 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %135, i32 0, i32 5
  store i32 78, i32* %136, align 8
  %137 = load i32, i32* %5, align 4
  %138 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %139 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %138, i32 0, i32 0
  %140 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %139, align 8
  %141 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %140, i32 0, i32 6
  %142 = bitcast %union.anon* %141 to [8 x i32]*
  %143 = getelementptr inbounds [8 x i32], [8 x i32]* %142, i64 0, i64 0
  store i32 %137, i32* %143, align 4
  %144 = load i32, i32* %6, align 4
  %145 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %146 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %145, i32 0, i32 0
  %147 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %146, align 8
  %148 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %147, i32 0, i32 6
  %149 = bitcast %union.anon* %148 to [8 x i32]*
  %150 = getelementptr inbounds [8 x i32], [8 x i32]* %149, i64 0, i64 1
  store i32 %144, i32* %150, align 4
  %151 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %152 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %151, i32 0, i32 0
  %153 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %152, align 8
  %154 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %153, i32 0, i32 1
  %155 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %154, align 8
  %156 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %157 = bitcast %struct.jpeg_decompress_struct.586* %156 to %struct.jpeg_common_struct*
  call void %155(%struct.jpeg_common_struct* %157, i32 1)
  %158 = load i32, i32* %5, align 4
  %159 = icmp slt i32 %158, 0
  br i1 %159, label %163, label %160

160:                                              ; preds = %130
  %161 = load i32, i32* %5, align 4
  %162 = icmp sge i32 %161, 32
  br i1 %162, label %163, label %182

163:                                              ; preds = %160, %130
  %164 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %165 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %164, i32 0, i32 0
  %166 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %165, align 8
  %167 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %166, i32 0, i32 5
  store i32 26, i32* %167, align 8
  %168 = load i32, i32* %5, align 4
  %169 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %170 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %169, i32 0, i32 0
  %171 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %170, align 8
  %172 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %171, i32 0, i32 6
  %173 = bitcast %union.anon* %172 to [8 x i32]*
  %174 = getelementptr inbounds [8 x i32], [8 x i32]* %173, i64 0, i64 0
  store i32 %168, i32* %174, align 4
  %175 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %176 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %175, i32 0, i32 0
  %177 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %176, align 8
  %178 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %177, i32 0, i32 0
  %179 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %178, align 8
  %180 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %181 = bitcast %struct.jpeg_decompress_struct.586* %180 to %struct.jpeg_common_struct*
  call void %179(%struct.jpeg_common_struct* %181)
  br label %182

182:                                              ; preds = %163, %160
  %183 = load i32, i32* %5, align 4
  %184 = icmp sge i32 %183, 16
  br i1 %184, label %185, label %194

185:                                              ; preds = %182
  %186 = load i32, i32* %6, align 4
  %187 = trunc i32 %186 to i8
  %188 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %189 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %188, i32 0, i32 48
  %190 = load i32, i32* %5, align 4
  %191 = sub nsw i32 %190, 16
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds [16 x i8], [16 x i8]* %189, i64 0, i64 %192
  store i8 %187, i8* %193, align 1
  br label %246

194:                                              ; preds = %182
  %195 = load i32, i32* %6, align 4
  %196 = and i32 %195, 15
  %197 = trunc i32 %196 to i8
  %198 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %199 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %198, i32 0, i32 46
  %200 = load i32, i32* %5, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [16 x i8], [16 x i8]* %199, i64 0, i64 %201
  store i8 %197, i8* %202, align 1
  %203 = load i32, i32* %6, align 4
  %204 = ashr i32 %203, 4
  %205 = trunc i32 %204 to i8
  %206 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %207 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %206, i32 0, i32 47
  %208 = load i32, i32* %5, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds [16 x i8], [16 x i8]* %207, i64 0, i64 %209
  store i8 %205, i8* %210, align 1
  %211 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %212 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %211, i32 0, i32 46
  %213 = load i32, i32* %5, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [16 x i8], [16 x i8]* %212, i64 0, i64 %214
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i32
  %218 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %219 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %218, i32 0, i32 47
  %220 = load i32, i32* %5, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %219, i64 0, i64 %221
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i32
  %225 = icmp sgt i32 %217, %224
  br i1 %225, label %226, label %245

226:                                              ; preds = %194
  %227 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %228 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %227, i32 0, i32 0
  %229 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %228, align 8
  %230 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %229, i32 0, i32 5
  store i32 27, i32* %230, align 8
  %231 = load i32, i32* %6, align 4
  %232 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %233 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %232, i32 0, i32 0
  %234 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %233, align 8
  %235 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %234, i32 0, i32 6
  %236 = bitcast %union.anon* %235 to [8 x i32]*
  %237 = getelementptr inbounds [8 x i32], [8 x i32]* %236, i64 0, i64 0
  store i32 %231, i32* %237, align 4
  %238 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %239 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %238, i32 0, i32 0
  %240 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %239, align 8
  %241 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %240, i32 0, i32 0
  %242 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %241, align 8
  %243 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %244 = bitcast %struct.jpeg_decompress_struct.586* %243 to %struct.jpeg_common_struct*
  call void %242(%struct.jpeg_common_struct* %244)
  br label %245

245:                                              ; preds = %226, %194
  br label %246

246:                                              ; preds = %245, %185
  br label %75

247:                                              ; preds = %75
  %248 = load i8*, i8** %8, align 8
  %249 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %250 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %249, i32 0, i32 0
  store i8* %248, i8** %250, align 8
  %251 = load i64, i64* %9, align 8
  %252 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %7, align 8
  %253 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %252, i32 0, i32 1
  store i64 %251, i64* %253, align 8
  store i32 1, i32* %2, align 4
  br label %254

254:                                              ; preds = %247, %115, %89, %55, %29
  %255 = load i32, i32* %2, align 4
  ret i32 %255
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_dht(%struct.jpeg_decompress_struct.586* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.586*, align 8
  %4 = alloca i64, align 8
  %5 = alloca [17 x i8], align 16
  %6 = alloca [256 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.JHUFF_TBL**, align 8
  %11 = alloca %struct.jpeg_source_mgr.590*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %3, align 8
  %16 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %16, i32 0, i32 5
  %18 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %17, align 8
  store %struct.jpeg_source_mgr.590* %18, %struct.jpeg_source_mgr.590** %11, align 8
  %19 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %20 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %19, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  store i8* %21, i8** %12, align 8
  %22 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %23 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %22, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %13, align 8
  br label %25

25:                                               ; preds = %1
  %26 = load i64, i64* %13, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %43

28:                                               ; preds = %25
  %29 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %30 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %29, i32 0, i32 3
  %31 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %30, align 8
  %32 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %33 = call i32 %31(%struct.jpeg_decompress_struct.586* %32)
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %28
  store i32 0, i32* %2, align 4
  br label %423

36:                                               ; preds = %28
  %37 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %38 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %37, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  store i8* %39, i8** %12, align 8
  %40 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %41 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %40, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %13, align 8
  br label %43

43:                                               ; preds = %36, %25
  %44 = load i64, i64* %13, align 8
  %45 = add i64 %44, -1
  store i64 %45, i64* %13, align 8
  %46 = load i8*, i8** %12, align 8
  %47 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %47, i8** %12, align 8
  %48 = load i8, i8* %46, align 1
  %49 = zext i8 %48 to i32
  %50 = shl i32 %49, 8
  %51 = zext i32 %50 to i64
  store i64 %51, i64* %4, align 8
  %52 = load i64, i64* %13, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %69

54:                                               ; preds = %43
  %55 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %56 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %55, i32 0, i32 3
  %57 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %56, align 8
  %58 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %59 = call i32 %57(%struct.jpeg_decompress_struct.586* %58)
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %54
  store i32 0, i32* %2, align 4
  br label %423

62:                                               ; preds = %54
  %63 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %64 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %63, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  store i8* %65, i8** %12, align 8
  %66 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %67 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %66, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %13, align 8
  br label %69

69:                                               ; preds = %62, %43
  %70 = load i64, i64* %13, align 8
  %71 = add i64 %70, -1
  store i64 %71, i64* %13, align 8
  %72 = load i8*, i8** %12, align 8
  %73 = getelementptr inbounds i8, i8* %72, i32 1
  store i8* %73, i8** %12, align 8
  %74 = load i8, i8* %72, align 1
  %75 = zext i8 %74 to i64
  %76 = load i64, i64* %4, align 8
  %77 = add nsw i64 %76, %75
  store i64 %77, i64* %4, align 8
  br label %78

78:                                               ; preds = %69
  %79 = load i64, i64* %4, align 8
  %80 = sub nsw i64 %79, 2
  store i64 %80, i64* %4, align 8
  br label %81

81:                                               ; preds = %405, %78
  %82 = load i64, i64* %4, align 8
  %83 = icmp sgt i64 %82, 0
  br i1 %83, label %84, label %416

84:                                               ; preds = %81
  br label %85

85:                                               ; preds = %84
  %86 = load i64, i64* %13, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %103

88:                                               ; preds = %85
  %89 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %90 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %89, i32 0, i32 3
  %91 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %90, align 8
  %92 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %93 = call i32 %91(%struct.jpeg_decompress_struct.586* %92)
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %96, label %95

95:                                               ; preds = %88
  store i32 0, i32* %2, align 4
  br label %423

96:                                               ; preds = %88
  %97 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %98 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %97, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  store i8* %99, i8** %12, align 8
  %100 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %101 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %100, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %13, align 8
  br label %103

103:                                              ; preds = %96, %85
  %104 = load i64, i64* %13, align 8
  %105 = add i64 %104, -1
  store i64 %105, i64* %13, align 8
  %106 = load i8*, i8** %12, align 8
  %107 = getelementptr inbounds i8, i8* %106, i32 1
  store i8* %107, i8** %12, align 8
  %108 = load i8, i8* %106, align 1
  %109 = zext i8 %108 to i32
  store i32 %109, i32* %8, align 4
  br label %110

110:                                              ; preds = %103
  %111 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %112 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %111, i32 0, i32 0
  %113 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %112, align 8
  %114 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %113, i32 0, i32 5
  store i32 79, i32* %114, align 8
  %115 = load i32, i32* %8, align 4
  %116 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %117 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %116, i32 0, i32 0
  %118 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %117, align 8
  %119 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %118, i32 0, i32 6
  %120 = bitcast %union.anon* %119 to [8 x i32]*
  %121 = getelementptr inbounds [8 x i32], [8 x i32]* %120, i64 0, i64 0
  store i32 %115, i32* %121, align 4
  %122 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %123 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %122, i32 0, i32 0
  %124 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %123, align 8
  %125 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %124, i32 0, i32 1
  %126 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %125, align 8
  %127 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %128 = bitcast %struct.jpeg_decompress_struct.586* %127 to %struct.jpeg_common_struct*
  call void %126(%struct.jpeg_common_struct* %128, i32 1)
  %129 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 0
  store i8 0, i8* %129, align 16
  store i32 0, i32* %9, align 4
  store i32 1, i32* %7, align 4
  br label %130

130:                                              ; preds = %169, %110
  %131 = load i32, i32* %7, align 4
  %132 = icmp sle i32 %131, 16
  br i1 %132, label %133, label %172

133:                                              ; preds = %130
  br label %134

134:                                              ; preds = %133
  %135 = load i64, i64* %13, align 8
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %152

137:                                              ; preds = %134
  %138 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %139 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %138, i32 0, i32 3
  %140 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %139, align 8
  %141 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %142 = call i32 %140(%struct.jpeg_decompress_struct.586* %141)
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %145, label %144

144:                                              ; preds = %137
  store i32 0, i32* %2, align 4
  br label %423

145:                                              ; preds = %137
  %146 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %147 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %146, i32 0, i32 0
  %148 = load i8*, i8** %147, align 8
  store i8* %148, i8** %12, align 8
  %149 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %150 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %149, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %13, align 8
  br label %152

152:                                              ; preds = %145, %134
  %153 = load i64, i64* %13, align 8
  %154 = add i64 %153, -1
  store i64 %154, i64* %13, align 8
  %155 = load i8*, i8** %12, align 8
  %156 = getelementptr inbounds i8, i8* %155, i32 1
  store i8* %156, i8** %12, align 8
  %157 = load i8, i8* %155, align 1
  %158 = load i32, i32* %7, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 %159
  store i8 %157, i8* %160, align 1
  br label %161

161:                                              ; preds = %152
  %162 = load i32, i32* %7, align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 %163
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = load i32, i32* %9, align 4
  %168 = add nsw i32 %167, %166
  store i32 %168, i32* %9, align 4
  br label %169

169:                                              ; preds = %161
  %170 = load i32, i32* %7, align 4
  %171 = add nsw i32 %170, 1
  store i32 %171, i32* %7, align 4
  br label %130

172:                                              ; preds = %130
  %173 = load i64, i64* %4, align 8
  %174 = sub nsw i64 %173, 17
  store i64 %174, i64* %4, align 8
  br label %175

175:                                              ; preds = %172
  %176 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %177 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %176, i32 0, i32 0
  %178 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %177, align 8
  %179 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %178, i32 0, i32 6
  %180 = bitcast %union.anon* %179 to [8 x i32]*
  %181 = getelementptr inbounds [8 x i32], [8 x i32]* %180, i64 0, i64 0
  store i32* %181, i32** %14, align 8
  %182 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 1
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i32
  %185 = load i32*, i32** %14, align 8
  %186 = getelementptr inbounds i32, i32* %185, i64 0
  store i32 %184, i32* %186, align 4
  %187 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 2
  %188 = load i8, i8* %187, align 2
  %189 = zext i8 %188 to i32
  %190 = load i32*, i32** %14, align 8
  %191 = getelementptr inbounds i32, i32* %190, i64 1
  store i32 %189, i32* %191, align 4
  %192 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 3
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i32
  %195 = load i32*, i32** %14, align 8
  %196 = getelementptr inbounds i32, i32* %195, i64 2
  store i32 %194, i32* %196, align 4
  %197 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 4
  %198 = load i8, i8* %197, align 4
  %199 = zext i8 %198 to i32
  %200 = load i32*, i32** %14, align 8
  %201 = getelementptr inbounds i32, i32* %200, i64 3
  store i32 %199, i32* %201, align 4
  %202 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 5
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  %205 = load i32*, i32** %14, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 4
  store i32 %204, i32* %206, align 4
  %207 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 6
  %208 = load i8, i8* %207, align 2
  %209 = zext i8 %208 to i32
  %210 = load i32*, i32** %14, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 5
  store i32 %209, i32* %211, align 4
  %212 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 7
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = load i32*, i32** %14, align 8
  %216 = getelementptr inbounds i32, i32* %215, i64 6
  store i32 %214, i32* %216, align 4
  %217 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 8
  %218 = load i8, i8* %217, align 8
  %219 = zext i8 %218 to i32
  %220 = load i32*, i32** %14, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 7
  store i32 %219, i32* %221, align 4
  %222 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %223 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %222, i32 0, i32 0
  %224 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %223, align 8
  %225 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %224, i32 0, i32 5
  store i32 85, i32* %225, align 8
  %226 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %227 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %226, i32 0, i32 0
  %228 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %227, align 8
  %229 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %228, i32 0, i32 1
  %230 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %229, align 8
  %231 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %232 = bitcast %struct.jpeg_decompress_struct.586* %231 to %struct.jpeg_common_struct*
  call void %230(%struct.jpeg_common_struct* %232, i32 2)
  br label %233

233:                                              ; preds = %175
  br label %234

234:                                              ; preds = %233
  %235 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %236 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %235, i32 0, i32 0
  %237 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %236, align 8
  %238 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %237, i32 0, i32 6
  %239 = bitcast %union.anon* %238 to [8 x i32]*
  %240 = getelementptr inbounds [8 x i32], [8 x i32]* %239, i64 0, i64 0
  store i32* %240, i32** %15, align 8
  %241 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 9
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i32
  %244 = load i32*, i32** %15, align 8
  %245 = getelementptr inbounds i32, i32* %244, i64 0
  store i32 %243, i32* %245, align 4
  %246 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 10
  %247 = load i8, i8* %246, align 2
  %248 = zext i8 %247 to i32
  %249 = load i32*, i32** %15, align 8
  %250 = getelementptr inbounds i32, i32* %249, i64 1
  store i32 %248, i32* %250, align 4
  %251 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 11
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i32
  %254 = load i32*, i32** %15, align 8
  %255 = getelementptr inbounds i32, i32* %254, i64 2
  store i32 %253, i32* %255, align 4
  %256 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 12
  %257 = load i8, i8* %256, align 4
  %258 = zext i8 %257 to i32
  %259 = load i32*, i32** %15, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 3
  store i32 %258, i32* %260, align 4
  %261 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 13
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i32
  %264 = load i32*, i32** %15, align 8
  %265 = getelementptr inbounds i32, i32* %264, i64 4
  store i32 %263, i32* %265, align 4
  %266 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 14
  %267 = load i8, i8* %266, align 2
  %268 = zext i8 %267 to i32
  %269 = load i32*, i32** %15, align 8
  %270 = getelementptr inbounds i32, i32* %269, i64 5
  store i32 %268, i32* %270, align 4
  %271 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 15
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i32
  %274 = load i32*, i32** %15, align 8
  %275 = getelementptr inbounds i32, i32* %274, i64 6
  store i32 %273, i32* %275, align 4
  %276 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 16
  %277 = load i8, i8* %276, align 16
  %278 = zext i8 %277 to i32
  %279 = load i32*, i32** %15, align 8
  %280 = getelementptr inbounds i32, i32* %279, i64 7
  store i32 %278, i32* %280, align 4
  %281 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %282 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %281, i32 0, i32 0
  %283 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %282, align 8
  %284 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %283, i32 0, i32 5
  store i32 85, i32* %284, align 8
  %285 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %286 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %285, i32 0, i32 0
  %287 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %286, align 8
  %288 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %287, i32 0, i32 1
  %289 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %288, align 8
  %290 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %291 = bitcast %struct.jpeg_decompress_struct.586* %290 to %struct.jpeg_common_struct*
  call void %289(%struct.jpeg_common_struct* %291, i32 2)
  br label %292

292:                                              ; preds = %234
  %293 = load i32, i32* %9, align 4
  %294 = icmp sgt i32 %293, 256
  br i1 %294, label %300, label %295

295:                                              ; preds = %292
  %296 = load i32, i32* %9, align 4
  %297 = sext i32 %296 to i64
  %298 = load i64, i64* %4, align 8
  %299 = icmp sgt i64 %297, %298
  br i1 %299, label %300, label %312

300:                                              ; preds = %295, %292
  %301 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %302 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %301, i32 0, i32 0
  %303 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %302, align 8
  %304 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %303, i32 0, i32 5
  store i32 28, i32* %304, align 8
  %305 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %306 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %305, i32 0, i32 0
  %307 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %306, align 8
  %308 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %307, i32 0, i32 0
  %309 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %308, align 8
  %310 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %311 = bitcast %struct.jpeg_decompress_struct.586* %310 to %struct.jpeg_common_struct*
  call void %309(%struct.jpeg_common_struct* %311)
  br label %312

312:                                              ; preds = %300, %295
  store i32 0, i32* %7, align 4
  br label %313

313:                                              ; preds = %346, %312
  %314 = load i32, i32* %7, align 4
  %315 = load i32, i32* %9, align 4
  %316 = icmp slt i32 %314, %315
  br i1 %316, label %317, label %349

317:                                              ; preds = %313
  br label %318

318:                                              ; preds = %317
  %319 = load i64, i64* %13, align 8
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %336

321:                                              ; preds = %318
  %322 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %323 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %322, i32 0, i32 3
  %324 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %323, align 8
  %325 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %326 = call i32 %324(%struct.jpeg_decompress_struct.586* %325)
  %327 = icmp ne i32 %326, 0
  br i1 %327, label %329, label %328

328:                                              ; preds = %321
  store i32 0, i32* %2, align 4
  br label %423

329:                                              ; preds = %321
  %330 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %331 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %330, i32 0, i32 0
  %332 = load i8*, i8** %331, align 8
  store i8* %332, i8** %12, align 8
  %333 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %334 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %333, i32 0, i32 1
  %335 = load i64, i64* %334, align 8
  store i64 %335, i64* %13, align 8
  br label %336

336:                                              ; preds = %329, %318
  %337 = load i64, i64* %13, align 8
  %338 = add i64 %337, -1
  store i64 %338, i64* %13, align 8
  %339 = load i8*, i8** %12, align 8
  %340 = getelementptr inbounds i8, i8* %339, i32 1
  store i8* %340, i8** %12, align 8
  %341 = load i8, i8* %339, align 1
  %342 = load i32, i32* %7, align 4
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 %343
  store i8 %341, i8* %344, align 1
  br label %345

345:                                              ; preds = %336
  br label %346

346:                                              ; preds = %345
  %347 = load i32, i32* %7, align 4
  %348 = add nsw i32 %347, 1
  store i32 %348, i32* %7, align 4
  br label %313

349:                                              ; preds = %313
  %350 = load i32, i32* %9, align 4
  %351 = sext i32 %350 to i64
  %352 = load i64, i64* %4, align 8
  %353 = sub nsw i64 %352, %351
  store i64 %353, i64* %4, align 8
  %354 = load i32, i32* %8, align 4
  %355 = and i32 %354, 16
  %356 = icmp ne i32 %355, 0
  br i1 %356, label %357, label %365

357:                                              ; preds = %349
  %358 = load i32, i32* %8, align 4
  %359 = sub nsw i32 %358, 16
  store i32 %359, i32* %8, align 4
  %360 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %361 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %360, i32 0, i32 41
  %362 = load i32, i32* %8, align 4
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %361, i64 0, i64 %363
  store %struct.JHUFF_TBL** %364, %struct.JHUFF_TBL*** %10, align 8
  br label %371

365:                                              ; preds = %349
  %366 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %367 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %366, i32 0, i32 40
  %368 = load i32, i32* %8, align 4
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %367, i64 0, i64 %369
  store %struct.JHUFF_TBL** %370, %struct.JHUFF_TBL*** %10, align 8
  br label %371

371:                                              ; preds = %365, %357
  %372 = load i32, i32* %8, align 4
  %373 = icmp slt i32 %372, 0
  br i1 %373, label %377, label %374

374:                                              ; preds = %371
  %375 = load i32, i32* %8, align 4
  %376 = icmp sge i32 %375, 4
  br i1 %376, label %377, label %396

377:                                              ; preds = %374, %371
  %378 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %379 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %378, i32 0, i32 0
  %380 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %379, align 8
  %381 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %380, i32 0, i32 5
  store i32 29, i32* %381, align 8
  %382 = load i32, i32* %8, align 4
  %383 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %384 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %383, i32 0, i32 0
  %385 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %384, align 8
  %386 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %385, i32 0, i32 6
  %387 = bitcast %union.anon* %386 to [8 x i32]*
  %388 = getelementptr inbounds [8 x i32], [8 x i32]* %387, i64 0, i64 0
  store i32 %382, i32* %388, align 4
  %389 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %390 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %389, i32 0, i32 0
  %391 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %390, align 8
  %392 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %391, i32 0, i32 0
  %393 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %392, align 8
  %394 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %395 = bitcast %struct.jpeg_decompress_struct.586* %394 to %struct.jpeg_common_struct*
  call void %393(%struct.jpeg_common_struct* %395)
  br label %396

396:                                              ; preds = %377, %374
  %397 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %10, align 8
  %398 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %397, align 8
  %399 = icmp eq %struct.JHUFF_TBL* %398, null
  br i1 %399, label %400, label %405

400:                                              ; preds = %396
  %401 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %402 = bitcast %struct.jpeg_decompress_struct.586* %401 to %struct.jpeg_common_struct*
  %403 = call %struct.JHUFF_TBL* bitcast (%struct.JHUFF_TBL* (%struct.jpeg_common_struct.212*)* @jpeg_alloc_huff_table to %struct.JHUFF_TBL* (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %402)
  %404 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %10, align 8
  store %struct.JHUFF_TBL* %403, %struct.JHUFF_TBL** %404, align 8
  br label %405

405:                                              ; preds = %400, %396
  %406 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %10, align 8
  %407 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %406, align 8
  %408 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %407, i32 0, i32 0
  %409 = getelementptr inbounds [17 x i8], [17 x i8]* %408, i64 0, i64 0
  %410 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %409, i8* align 16 %410, i64 17, i1 false)
  %411 = load %struct.JHUFF_TBL**, %struct.JHUFF_TBL*** %10, align 8
  %412 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %411, align 8
  %413 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %412, i32 0, i32 1
  %414 = getelementptr inbounds [256 x i8], [256 x i8]* %413, i64 0, i64 0
  %415 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %414, i8* align 16 %415, i64 256, i1 false)
  br label %81

416:                                              ; preds = %81
  %417 = load i8*, i8** %12, align 8
  %418 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %419 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %418, i32 0, i32 0
  store i8* %417, i8** %419, align 8
  %420 = load i64, i64* %13, align 8
  %421 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %11, align 8
  %422 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %421, i32 0, i32 1
  store i64 %420, i64* %422, align 8
  store i32 1, i32* %2, align 4
  br label %423

423:                                              ; preds = %416, %328, %144, %95, %61, %35
  %424 = load i32, i32* %2, align 4
  ret i32 %424
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_dqt(%struct.jpeg_decompress_struct.586* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.586*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.JQUANT_TBL*, align 8
  %10 = alloca %struct.jpeg_source_mgr.590*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32*, align 8
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %3, align 8
  %14 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %14, i32 0, i32 5
  %16 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %15, align 8
  store %struct.jpeg_source_mgr.590* %16, %struct.jpeg_source_mgr.590** %10, align 8
  %17 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %18 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %17, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  store i8* %19, i8** %11, align 8
  %20 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %21 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %20, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %12, align 8
  br label %23

23:                                               ; preds = %1
  %24 = load i64, i64* %12, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %41

26:                                               ; preds = %23
  %27 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %28 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %27, i32 0, i32 3
  %29 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %28, align 8
  %30 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %31 = call i32 %29(%struct.jpeg_decompress_struct.586* %30)
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %26
  store i32 0, i32* %2, align 4
  br label %414

34:                                               ; preds = %26
  %35 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %36 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %35, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  store i8* %37, i8** %11, align 8
  %38 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %39 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %38, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %12, align 8
  br label %41

41:                                               ; preds = %34, %23
  %42 = load i64, i64* %12, align 8
  %43 = add i64 %42, -1
  store i64 %43, i64* %12, align 8
  %44 = load i8*, i8** %11, align 8
  %45 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %45, i8** %11, align 8
  %46 = load i8, i8* %44, align 1
  %47 = zext i8 %46 to i32
  %48 = shl i32 %47, 8
  %49 = zext i32 %48 to i64
  store i64 %49, i64* %4, align 8
  %50 = load i64, i64* %12, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %67

52:                                               ; preds = %41
  %53 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %54 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %53, i32 0, i32 3
  %55 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %54, align 8
  %56 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %57 = call i32 %55(%struct.jpeg_decompress_struct.586* %56)
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %52
  store i32 0, i32* %2, align 4
  br label %414

60:                                               ; preds = %52
  %61 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %62 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %61, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  store i8* %63, i8** %11, align 8
  %64 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %65 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %64, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %12, align 8
  br label %67

67:                                               ; preds = %60, %41
  %68 = load i64, i64* %12, align 8
  %69 = add i64 %68, -1
  store i64 %69, i64* %12, align 8
  %70 = load i8*, i8** %11, align 8
  %71 = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %71, i8** %11, align 8
  %72 = load i8, i8* %70, align 1
  %73 = zext i8 %72 to i64
  %74 = load i64, i64* %4, align 8
  %75 = add nsw i64 %74, %73
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %67
  %77 = load i64, i64* %4, align 8
  %78 = sub nsw i64 %77, 2
  store i64 %78, i64* %4, align 8
  br label %79

79:                                               ; preds = %406, %76
  %80 = load i64, i64* %4, align 8
  %81 = icmp sgt i64 %80, 0
  br i1 %81, label %82, label %407

82:                                               ; preds = %79
  br label %83

83:                                               ; preds = %82
  %84 = load i64, i64* %12, align 8
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %101

86:                                               ; preds = %83
  %87 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %88 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %87, i32 0, i32 3
  %89 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %88, align 8
  %90 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %91 = call i32 %89(%struct.jpeg_decompress_struct.586* %90)
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %86
  store i32 0, i32* %2, align 4
  br label %414

94:                                               ; preds = %86
  %95 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %96 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %95, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  store i8* %97, i8** %11, align 8
  %98 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %99 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %98, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %12, align 8
  br label %101

101:                                              ; preds = %94, %83
  %102 = load i64, i64* %12, align 8
  %103 = add i64 %102, -1
  store i64 %103, i64* %12, align 8
  %104 = load i8*, i8** %11, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %105, i8** %11, align 8
  %106 = load i8, i8* %104, align 1
  %107 = zext i8 %106 to i32
  store i32 %107, i32* %5, align 4
  br label %108

108:                                              ; preds = %101
  %109 = load i32, i32* %5, align 4
  %110 = ashr i32 %109, 4
  store i32 %110, i32* %7, align 4
  %111 = load i32, i32* %5, align 4
  %112 = and i32 %111, 15
  store i32 %112, i32* %5, align 4
  %113 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %114 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %113, i32 0, i32 0
  %115 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %114, align 8
  %116 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %115, i32 0, i32 5
  store i32 80, i32* %116, align 8
  %117 = load i32, i32* %5, align 4
  %118 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %119 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %118, i32 0, i32 0
  %120 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %119, align 8
  %121 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %120, i32 0, i32 6
  %122 = bitcast %union.anon* %121 to [8 x i32]*
  %123 = getelementptr inbounds [8 x i32], [8 x i32]* %122, i64 0, i64 0
  store i32 %117, i32* %123, align 4
  %124 = load i32, i32* %7, align 4
  %125 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %126 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %125, i32 0, i32 0
  %127 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %126, align 8
  %128 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %127, i32 0, i32 6
  %129 = bitcast %union.anon* %128 to [8 x i32]*
  %130 = getelementptr inbounds [8 x i32], [8 x i32]* %129, i64 0, i64 1
  store i32 %124, i32* %130, align 4
  %131 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %132 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %131, i32 0, i32 0
  %133 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %132, align 8
  %134 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %133, i32 0, i32 1
  %135 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %134, align 8
  %136 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %137 = bitcast %struct.jpeg_decompress_struct.586* %136 to %struct.jpeg_common_struct*
  call void %135(%struct.jpeg_common_struct* %137, i32 1)
  %138 = load i32, i32* %5, align 4
  %139 = icmp sge i32 %138, 4
  br i1 %139, label %140, label %159

140:                                              ; preds = %108
  %141 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %142 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %141, i32 0, i32 0
  %143 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %142, align 8
  %144 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %143, i32 0, i32 5
  store i32 30, i32* %144, align 8
  %145 = load i32, i32* %5, align 4
  %146 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %147 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %146, i32 0, i32 0
  %148 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %147, align 8
  %149 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %148, i32 0, i32 6
  %150 = bitcast %union.anon* %149 to [8 x i32]*
  %151 = getelementptr inbounds [8 x i32], [8 x i32]* %150, i64 0, i64 0
  store i32 %145, i32* %151, align 4
  %152 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %153 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %152, i32 0, i32 0
  %154 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %155 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i32 0, i32 0
  %156 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %155, align 8
  %157 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %158 = bitcast %struct.jpeg_decompress_struct.586* %157 to %struct.jpeg_common_struct*
  call void %156(%struct.jpeg_common_struct* %158)
  br label %159

159:                                              ; preds = %140, %108
  %160 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %161 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %160, i32 0, i32 39
  %162 = load i32, i32* %5, align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %161, i64 0, i64 %163
  %165 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %164, align 8
  %166 = icmp eq %struct.JQUANT_TBL* %165, null
  br i1 %166, label %167, label %176

167:                                              ; preds = %159
  %168 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %169 = bitcast %struct.jpeg_decompress_struct.586* %168 to %struct.jpeg_common_struct*
  %170 = call %struct.JQUANT_TBL* bitcast (%struct.JQUANT_TBL* (%struct.jpeg_common_struct.212*)* @jpeg_alloc_quant_table to %struct.JQUANT_TBL* (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %169)
  %171 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %172 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %171, i32 0, i32 39
  %173 = load i32, i32* %5, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %172, i64 0, i64 %174
  store %struct.JQUANT_TBL* %170, %struct.JQUANT_TBL** %175, align 8
  br label %176

176:                                              ; preds = %167, %159
  %177 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %178 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %177, i32 0, i32 39
  %179 = load i32, i32* %5, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [4 x %struct.JQUANT_TBL*], [4 x %struct.JQUANT_TBL*]* %178, i64 0, i64 %180
  %182 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %181, align 8
  store %struct.JQUANT_TBL* %182, %struct.JQUANT_TBL** %9, align 8
  store i32 0, i32* %6, align 4
  br label %183

183:                                              ; preds = %281, %176
  %184 = load i32, i32* %6, align 4
  %185 = icmp slt i32 %184, 64
  br i1 %185, label %186, label %284

186:                                              ; preds = %183
  %187 = load i32, i32* %7, align 4
  %188 = icmp ne i32 %187, 0
  br i1 %188, label %189, label %243

189:                                              ; preds = %186
  br label %190

190:                                              ; preds = %189
  %191 = load i64, i64* %12, align 8
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %208

193:                                              ; preds = %190
  %194 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %195 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %194, i32 0, i32 3
  %196 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %195, align 8
  %197 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %198 = call i32 %196(%struct.jpeg_decompress_struct.586* %197)
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %201, label %200

200:                                              ; preds = %193
  store i32 0, i32* %2, align 4
  br label %414

201:                                              ; preds = %193
  %202 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %203 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %202, i32 0, i32 0
  %204 = load i8*, i8** %203, align 8
  store i8* %204, i8** %11, align 8
  %205 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %206 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %205, i32 0, i32 1
  %207 = load i64, i64* %206, align 8
  store i64 %207, i64* %12, align 8
  br label %208

208:                                              ; preds = %201, %190
  %209 = load i64, i64* %12, align 8
  %210 = add i64 %209, -1
  store i64 %210, i64* %12, align 8
  %211 = load i8*, i8** %11, align 8
  %212 = getelementptr inbounds i8, i8* %211, i32 1
  store i8* %212, i8** %11, align 8
  %213 = load i8, i8* %211, align 1
  %214 = zext i8 %213 to i32
  %215 = shl i32 %214, 8
  store i32 %215, i32* %8, align 4
  %216 = load i64, i64* %12, align 8
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %218, label %233

218:                                              ; preds = %208
  %219 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %220 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %219, i32 0, i32 3
  %221 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %220, align 8
  %222 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %223 = call i32 %221(%struct.jpeg_decompress_struct.586* %222)
  %224 = icmp ne i32 %223, 0
  br i1 %224, label %226, label %225

225:                                              ; preds = %218
  store i32 0, i32* %2, align 4
  br label %414

226:                                              ; preds = %218
  %227 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %228 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %227, i32 0, i32 0
  %229 = load i8*, i8** %228, align 8
  store i8* %229, i8** %11, align 8
  %230 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %231 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %230, i32 0, i32 1
  %232 = load i64, i64* %231, align 8
  store i64 %232, i64* %12, align 8
  br label %233

233:                                              ; preds = %226, %208
  %234 = load i64, i64* %12, align 8
  %235 = add i64 %234, -1
  store i64 %235, i64* %12, align 8
  %236 = load i8*, i8** %11, align 8
  %237 = getelementptr inbounds i8, i8* %236, i32 1
  store i8* %237, i8** %11, align 8
  %238 = load i8, i8* %236, align 1
  %239 = zext i8 %238 to i32
  %240 = load i32, i32* %8, align 4
  %241 = add i32 %240, %239
  store i32 %241, i32* %8, align 4
  br label %242

242:                                              ; preds = %233
  br label %270

243:                                              ; preds = %186
  br label %244

244:                                              ; preds = %243
  %245 = load i64, i64* %12, align 8
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %247, label %262

247:                                              ; preds = %244
  %248 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %249 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %248, i32 0, i32 3
  %250 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %249, align 8
  %251 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %252 = call i32 %250(%struct.jpeg_decompress_struct.586* %251)
  %253 = icmp ne i32 %252, 0
  br i1 %253, label %255, label %254

254:                                              ; preds = %247
  store i32 0, i32* %2, align 4
  br label %414

255:                                              ; preds = %247
  %256 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %257 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %256, i32 0, i32 0
  %258 = load i8*, i8** %257, align 8
  store i8* %258, i8** %11, align 8
  %259 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %260 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %259, i32 0, i32 1
  %261 = load i64, i64* %260, align 8
  store i64 %261, i64* %12, align 8
  br label %262

262:                                              ; preds = %255, %244
  %263 = load i64, i64* %12, align 8
  %264 = add i64 %263, -1
  store i64 %264, i64* %12, align 8
  %265 = load i8*, i8** %11, align 8
  %266 = getelementptr inbounds i8, i8* %265, i32 1
  store i8* %266, i8** %11, align 8
  %267 = load i8, i8* %265, align 1
  %268 = zext i8 %267 to i32
  store i32 %268, i32* %8, align 4
  br label %269

269:                                              ; preds = %262
  br label %270

270:                                              ; preds = %269, %242
  %271 = load i32, i32* %8, align 4
  %272 = trunc i32 %271 to i16
  %273 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %274 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %273, i32 0, i32 0
  %275 = load i32, i32* %6, align 4
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %276
  %278 = load i32, i32* %277, align 4
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds [64 x i16], [64 x i16]* %274, i64 0, i64 %279
  store i16 %272, i16* %280, align 2
  br label %281

281:                                              ; preds = %270
  %282 = load i32, i32* %6, align 4
  %283 = add nsw i32 %282, 1
  store i32 %283, i32* %6, align 4
  br label %183

284:                                              ; preds = %183
  %285 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %286 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %285, i32 0, i32 0
  %287 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %286, align 8
  %288 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %287, i32 0, i32 7
  %289 = load i32, i32* %288, align 4
  %290 = icmp sge i32 %289, 2
  br i1 %290, label %291, label %398

291:                                              ; preds = %284
  store i32 0, i32* %6, align 4
  br label %292

292:                                              ; preds = %394, %291
  %293 = load i32, i32* %6, align 4
  %294 = icmp slt i32 %293, 64
  br i1 %294, label %295, label %397

295:                                              ; preds = %292
  br label %296

296:                                              ; preds = %295
  %297 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %298 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %297, i32 0, i32 0
  %299 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %298, align 8
  %300 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %299, i32 0, i32 6
  %301 = bitcast %union.anon* %300 to [8 x i32]*
  %302 = getelementptr inbounds [8 x i32], [8 x i32]* %301, i64 0, i64 0
  store i32* %302, i32** %13, align 8
  %303 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %304 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %303, i32 0, i32 0
  %305 = load i32, i32* %6, align 4
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds [64 x i16], [64 x i16]* %304, i64 0, i64 %306
  %308 = load i16, i16* %307, align 2
  %309 = zext i16 %308 to i32
  %310 = load i32*, i32** %13, align 8
  %311 = getelementptr inbounds i32, i32* %310, i64 0
  store i32 %309, i32* %311, align 4
  %312 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %313 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %312, i32 0, i32 0
  %314 = load i32, i32* %6, align 4
  %315 = add nsw i32 %314, 1
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds [64 x i16], [64 x i16]* %313, i64 0, i64 %316
  %318 = load i16, i16* %317, align 2
  %319 = zext i16 %318 to i32
  %320 = load i32*, i32** %13, align 8
  %321 = getelementptr inbounds i32, i32* %320, i64 1
  store i32 %319, i32* %321, align 4
  %322 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %323 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %322, i32 0, i32 0
  %324 = load i32, i32* %6, align 4
  %325 = add nsw i32 %324, 2
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds [64 x i16], [64 x i16]* %323, i64 0, i64 %326
  %328 = load i16, i16* %327, align 2
  %329 = zext i16 %328 to i32
  %330 = load i32*, i32** %13, align 8
  %331 = getelementptr inbounds i32, i32* %330, i64 2
  store i32 %329, i32* %331, align 4
  %332 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %333 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %332, i32 0, i32 0
  %334 = load i32, i32* %6, align 4
  %335 = add nsw i32 %334, 3
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds [64 x i16], [64 x i16]* %333, i64 0, i64 %336
  %338 = load i16, i16* %337, align 2
  %339 = zext i16 %338 to i32
  %340 = load i32*, i32** %13, align 8
  %341 = getelementptr inbounds i32, i32* %340, i64 3
  store i32 %339, i32* %341, align 4
  %342 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %343 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %342, i32 0, i32 0
  %344 = load i32, i32* %6, align 4
  %345 = add nsw i32 %344, 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds [64 x i16], [64 x i16]* %343, i64 0, i64 %346
  %348 = load i16, i16* %347, align 2
  %349 = zext i16 %348 to i32
  %350 = load i32*, i32** %13, align 8
  %351 = getelementptr inbounds i32, i32* %350, i64 4
  store i32 %349, i32* %351, align 4
  %352 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %353 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %352, i32 0, i32 0
  %354 = load i32, i32* %6, align 4
  %355 = add nsw i32 %354, 5
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds [64 x i16], [64 x i16]* %353, i64 0, i64 %356
  %358 = load i16, i16* %357, align 2
  %359 = zext i16 %358 to i32
  %360 = load i32*, i32** %13, align 8
  %361 = getelementptr inbounds i32, i32* %360, i64 5
  store i32 %359, i32* %361, align 4
  %362 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %363 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %362, i32 0, i32 0
  %364 = load i32, i32* %6, align 4
  %365 = add nsw i32 %364, 6
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds [64 x i16], [64 x i16]* %363, i64 0, i64 %366
  %368 = load i16, i16* %367, align 2
  %369 = zext i16 %368 to i32
  %370 = load i32*, i32** %13, align 8
  %371 = getelementptr inbounds i32, i32* %370, i64 6
  store i32 %369, i32* %371, align 4
  %372 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %373 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %372, i32 0, i32 0
  %374 = load i32, i32* %6, align 4
  %375 = add nsw i32 %374, 7
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds [64 x i16], [64 x i16]* %373, i64 0, i64 %376
  %378 = load i16, i16* %377, align 2
  %379 = zext i16 %378 to i32
  %380 = load i32*, i32** %13, align 8
  %381 = getelementptr inbounds i32, i32* %380, i64 7
  store i32 %379, i32* %381, align 4
  %382 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %383 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %382, i32 0, i32 0
  %384 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %383, align 8
  %385 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %384, i32 0, i32 5
  store i32 92, i32* %385, align 8
  %386 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %387 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %386, i32 0, i32 0
  %388 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %387, align 8
  %389 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %388, i32 0, i32 1
  %390 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %389, align 8
  %391 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %392 = bitcast %struct.jpeg_decompress_struct.586* %391 to %struct.jpeg_common_struct*
  call void %390(%struct.jpeg_common_struct* %392, i32 2)
  br label %393

393:                                              ; preds = %296
  br label %394

394:                                              ; preds = %393
  %395 = load i32, i32* %6, align 4
  %396 = add nsw i32 %395, 8
  store i32 %396, i32* %6, align 4
  br label %292

397:                                              ; preds = %292
  br label %398

398:                                              ; preds = %397, %284
  %399 = load i64, i64* %4, align 8
  %400 = sub nsw i64 %399, 65
  store i64 %400, i64* %4, align 8
  %401 = load i32, i32* %7, align 4
  %402 = icmp ne i32 %401, 0
  br i1 %402, label %403, label %406

403:                                              ; preds = %398
  %404 = load i64, i64* %4, align 8
  %405 = sub nsw i64 %404, 64
  store i64 %405, i64* %4, align 8
  br label %406

406:                                              ; preds = %403, %398
  br label %79

407:                                              ; preds = %79
  %408 = load i8*, i8** %11, align 8
  %409 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %410 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %409, i32 0, i32 0
  store i8* %408, i8** %410, align 8
  %411 = load i64, i64* %12, align 8
  %412 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  %413 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %412, i32 0, i32 1
  store i64 %411, i64* %413, align 8
  store i32 1, i32* %2, align 4
  br label %414

414:                                              ; preds = %407, %254, %225, %200, %93, %59, %33
  %415 = load i32, i32* %2, align 4
  ret i32 %415
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_dri(%struct.jpeg_decompress_struct.586* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.586*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.jpeg_source_mgr.590*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store %struct.jpeg_decompress_struct.586* %0, %struct.jpeg_decompress_struct.586** %3, align 8
  %9 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %9, i32 0, i32 5
  %11 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %10, align 8
  store %struct.jpeg_source_mgr.590* %11, %struct.jpeg_source_mgr.590** %6, align 8
  %12 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %13 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %12, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  store i8* %14, i8** %7, align 8
  %15 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %16 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %15, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %1
  %19 = load i64, i64* %8, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %36

21:                                               ; preds = %18
  %22 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %23 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %22, i32 0, i32 3
  %24 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %23, align 8
  %25 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %26 = call i32 %24(%struct.jpeg_decompress_struct.586* %25)
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %21
  store i32 0, i32* %2, align 4
  br label %167

29:                                               ; preds = %21
  %30 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %31 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %30, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  store i8* %32, i8** %7, align 8
  %33 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %34 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %33, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %8, align 8
  br label %36

36:                                               ; preds = %29, %18
  %37 = load i64, i64* %8, align 8
  %38 = add i64 %37, -1
  store i64 %38, i64* %8, align 8
  %39 = load i8*, i8** %7, align 8
  %40 = getelementptr inbounds i8, i8* %39, i32 1
  store i8* %40, i8** %7, align 8
  %41 = load i8, i8* %39, align 1
  %42 = zext i8 %41 to i32
  %43 = shl i32 %42, 8
  %44 = zext i32 %43 to i64
  store i64 %44, i64* %4, align 8
  %45 = load i64, i64* %8, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %62

47:                                               ; preds = %36
  %48 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %49 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %48, i32 0, i32 3
  %50 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %49, align 8
  %51 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %52 = call i32 %50(%struct.jpeg_decompress_struct.586* %51)
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %47
  store i32 0, i32* %2, align 4
  br label %167

55:                                               ; preds = %47
  %56 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %57 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %56, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  store i8* %58, i8** %7, align 8
  %59 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %60 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %59, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %8, align 8
  br label %62

62:                                               ; preds = %55, %36
  %63 = load i64, i64* %8, align 8
  %64 = add i64 %63, -1
  store i64 %64, i64* %8, align 8
  %65 = load i8*, i8** %7, align 8
  %66 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %66, i8** %7, align 8
  %67 = load i8, i8* %65, align 1
  %68 = zext i8 %67 to i64
  %69 = load i64, i64* %4, align 8
  %70 = add nsw i64 %69, %68
  store i64 %70, i64* %4, align 8
  br label %71

71:                                               ; preds = %62
  %72 = load i64, i64* %4, align 8
  %73 = icmp ne i64 %72, 4
  br i1 %73, label %74, label %86

74:                                               ; preds = %71
  %75 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %76 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %75, i32 0, i32 0
  %77 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %76, align 8
  %78 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %77, i32 0, i32 5
  store i32 9, i32* %78, align 8
  %79 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %80 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %79, i32 0, i32 0
  %81 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %82 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %81, i32 0, i32 0
  %83 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %82, align 8
  %84 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %85 = bitcast %struct.jpeg_decompress_struct.586* %84 to %struct.jpeg_common_struct*
  call void %83(%struct.jpeg_common_struct* %85)
  br label %86

86:                                               ; preds = %74, %71
  br label %87

87:                                               ; preds = %86
  %88 = load i64, i64* %8, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %105

90:                                               ; preds = %87
  %91 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %92 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %91, i32 0, i32 3
  %93 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %92, align 8
  %94 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %95 = call i32 %93(%struct.jpeg_decompress_struct.586* %94)
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %98, label %97

97:                                               ; preds = %90
  store i32 0, i32* %2, align 4
  br label %167

98:                                               ; preds = %90
  %99 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %100 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %99, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  store i8* %101, i8** %7, align 8
  %102 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %103 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %102, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %8, align 8
  br label %105

105:                                              ; preds = %98, %87
  %106 = load i64, i64* %8, align 8
  %107 = add i64 %106, -1
  store i64 %107, i64* %8, align 8
  %108 = load i8*, i8** %7, align 8
  %109 = getelementptr inbounds i8, i8* %108, i32 1
  store i8* %109, i8** %7, align 8
  %110 = load i8, i8* %108, align 1
  %111 = zext i8 %110 to i32
  %112 = shl i32 %111, 8
  store i32 %112, i32* %5, align 4
  %113 = load i64, i64* %8, align 8
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %130

115:                                              ; preds = %105
  %116 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %117 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %116, i32 0, i32 3
  %118 = load i32 (%struct.jpeg_decompress_struct.586*)*, i32 (%struct.jpeg_decompress_struct.586*)** %117, align 8
  %119 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %120 = call i32 %118(%struct.jpeg_decompress_struct.586* %119)
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %123, label %122

122:                                              ; preds = %115
  store i32 0, i32* %2, align 4
  br label %167

123:                                              ; preds = %115
  %124 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %125 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %124, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  store i8* %126, i8** %7, align 8
  %127 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %128 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %127, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  store i64 %129, i64* %8, align 8
  br label %130

130:                                              ; preds = %123, %105
  %131 = load i64, i64* %8, align 8
  %132 = add i64 %131, -1
  store i64 %132, i64* %8, align 8
  %133 = load i8*, i8** %7, align 8
  %134 = getelementptr inbounds i8, i8* %133, i32 1
  store i8* %134, i8** %7, align 8
  %135 = load i8, i8* %133, align 1
  %136 = zext i8 %135 to i32
  %137 = load i32, i32* %5, align 4
  %138 = add i32 %137, %136
  store i32 %138, i32* %5, align 4
  br label %139

139:                                              ; preds = %130
  %140 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %141 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %140, i32 0, i32 0
  %142 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %141, align 8
  %143 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %142, i32 0, i32 5
  store i32 81, i32* %143, align 8
  %144 = load i32, i32* %5, align 4
  %145 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %146 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %145, i32 0, i32 0
  %147 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %146, align 8
  %148 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %147, i32 0, i32 6
  %149 = bitcast %union.anon* %148 to [8 x i32]*
  %150 = getelementptr inbounds [8 x i32], [8 x i32]* %149, i64 0, i64 0
  store i32 %144, i32* %150, align 4
  %151 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %152 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %151, i32 0, i32 0
  %153 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %152, align 8
  %154 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %153, i32 0, i32 1
  %155 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %154, align 8
  %156 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %157 = bitcast %struct.jpeg_decompress_struct.586* %156 to %struct.jpeg_common_struct*
  call void %155(%struct.jpeg_common_struct* %157, i32 1)
  %158 = load i32, i32* %5, align 4
  %159 = load %struct.jpeg_decompress_struct.586*, %struct.jpeg_decompress_struct.586** %3, align 8
  %160 = getelementptr inbounds %struct.jpeg_decompress_struct.586, %struct.jpeg_decompress_struct.586* %159, i32 0, i32 49
  store i32 %158, i32* %160, align 8
  %161 = load i8*, i8** %7, align 8
  %162 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %163 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %162, i32 0, i32 0
  store i8* %161, i8** %163, align 8
  %164 = load i64, i64* %8, align 8
  %165 = load %struct.jpeg_source_mgr.590*, %struct.jpeg_source_mgr.590** %6, align 8
  %166 = getelementptr inbounds %struct.jpeg_source_mgr.590, %struct.jpeg_source_mgr.590* %165, i32 0, i32 1
  store i64 %164, i64* %166, align 8
  store i32 1, i32* %2, align 4
  br label %167

167:                                              ; preds = %139, %122, %97, %54, %28
  %168 = load i32, i32* %2, align 4
  ret i32 %168
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_calc_output_dimensions(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_component_info*, align 8
  %5 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %6 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %6, i32 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = icmp ne i32 %8, 202
  br i1 %9, label %10, label %31

10:                                               ; preds = %1
  %11 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %11, i32 0, i32 0
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i32 0, i32 5
  store i32 18, i32* %14, align 8
  %15 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %15, i32 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %18, i32 0, i32 0
  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i32 0, i32 6
  %22 = bitcast %union.anon* %21 to [8 x i32]*
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %22, i64 0, i64 0
  store i32 %17, i32* %23, align 4
  %24 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %24, i32 0, i32 0
  %26 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i32 0, i32 0
  %28 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %27, align 8
  %29 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %30 = bitcast %struct.jpeg_decompress_struct.469* %29 to %struct.jpeg_common_struct*
  call void %28(%struct.jpeg_common_struct* %30)
  br label %31

31:                                               ; preds = %10, %1
  %32 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %32, i32 0, i32 11
  %34 = load i32, i32* %33, align 4
  %35 = mul i32 %34, 8
  %36 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %36, i32 0, i32 12
  %38 = load i32, i32* %37, align 8
  %39 = icmp ule i32 %35, %38
  br i1 %39, label %40, label %59

40:                                               ; preds = %31
  %41 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %42 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %41, i32 0, i32 6
  %43 = load i32, i32* %42, align 8
  %44 = zext i32 %43 to i64
  %45 = call i64 @jdiv_round_up(i64 %44, i64 8)
  %46 = trunc i64 %45 to i32
  %47 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %47, i32 0, i32 26
  store i32 %46, i32* %48, align 8
  %49 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %49, i32 0, i32 7
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = call i64 @jdiv_round_up(i64 %52, i64 8)
  %54 = trunc i64 %53 to i32
  %55 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %56 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %55, i32 0, i32 27
  store i32 %54, i32* %56, align 4
  %57 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %58 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %57, i32 0, i32 59
  store i32 1, i32* %58, align 4
  br label %130

59:                                               ; preds = %31
  %60 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %61 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %60, i32 0, i32 11
  %62 = load i32, i32* %61, align 4
  %63 = mul i32 %62, 4
  %64 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %65 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %64, i32 0, i32 12
  %66 = load i32, i32* %65, align 8
  %67 = icmp ule i32 %63, %66
  br i1 %67, label %68, label %87

68:                                               ; preds = %59
  %69 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %70 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %69, i32 0, i32 6
  %71 = load i32, i32* %70, align 8
  %72 = zext i32 %71 to i64
  %73 = call i64 @jdiv_round_up(i64 %72, i64 4)
  %74 = trunc i64 %73 to i32
  %75 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %76 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %75, i32 0, i32 26
  store i32 %74, i32* %76, align 8
  %77 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %78 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %77, i32 0, i32 7
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = call i64 @jdiv_round_up(i64 %80, i64 4)
  %82 = trunc i64 %81 to i32
  %83 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %84 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %83, i32 0, i32 27
  store i32 %82, i32* %84, align 4
  %85 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %86 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %85, i32 0, i32 59
  store i32 2, i32* %86, align 4
  br label %129

87:                                               ; preds = %59
  %88 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %89 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %88, i32 0, i32 11
  %90 = load i32, i32* %89, align 4
  %91 = mul i32 %90, 2
  %92 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %93 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %92, i32 0, i32 12
  %94 = load i32, i32* %93, align 8
  %95 = icmp ule i32 %91, %94
  br i1 %95, label %96, label %115

96:                                               ; preds = %87
  %97 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %98 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %97, i32 0, i32 6
  %99 = load i32, i32* %98, align 8
  %100 = zext i32 %99 to i64
  %101 = call i64 @jdiv_round_up(i64 %100, i64 2)
  %102 = trunc i64 %101 to i32
  %103 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %104 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %103, i32 0, i32 26
  store i32 %102, i32* %104, align 8
  %105 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %106 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %105, i32 0, i32 7
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  %109 = call i64 @jdiv_round_up(i64 %108, i64 2)
  %110 = trunc i64 %109 to i32
  %111 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %112 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %111, i32 0, i32 27
  store i32 %110, i32* %112, align 4
  %113 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %114 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %113, i32 0, i32 59
  store i32 4, i32* %114, align 4
  br label %128

115:                                              ; preds = %87
  %116 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %117 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %116, i32 0, i32 6
  %118 = load i32, i32* %117, align 8
  %119 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %120 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %119, i32 0, i32 26
  store i32 %118, i32* %120, align 8
  %121 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %122 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %121, i32 0, i32 7
  %123 = load i32, i32* %122, align 4
  %124 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %125 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %124, i32 0, i32 27
  store i32 %123, i32* %125, align 4
  %126 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %127 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %126, i32 0, i32 59
  store i32 8, i32* %127, align 4
  br label %128

128:                                              ; preds = %115, %96
  br label %129

129:                                              ; preds = %128, %68
  br label %130

130:                                              ; preds = %129, %40
  store i32 0, i32* %3, align 4
  %131 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %132 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %131, i32 0, i32 43
  %133 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %132, align 8
  store %struct.jpeg_component_info* %133, %struct.jpeg_component_info** %4, align 8
  br label %134

134:                                              ; preds = %186, %130
  %135 = load i32, i32* %3, align 4
  %136 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %137 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %136, i32 0, i32 8
  %138 = load i32, i32* %137, align 8
  %139 = icmp slt i32 %135, %138
  br i1 %139, label %140, label %191

140:                                              ; preds = %134
  %141 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %142 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %141, i32 0, i32 59
  %143 = load i32, i32* %142, align 4
  store i32 %143, i32* %5, align 4
  br label %144

144:                                              ; preds = %179, %140
  %145 = load i32, i32* %5, align 4
  %146 = icmp slt i32 %145, 8
  br i1 %146, label %147, label %177

147:                                              ; preds = %144
  %148 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %149 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %148, i32 0, i32 2
  %150 = load i32, i32* %149, align 8
  %151 = load i32, i32* %5, align 4
  %152 = mul nsw i32 %150, %151
  %153 = mul nsw i32 %152, 2
  %154 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %155 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %154, i32 0, i32 57
  %156 = load i32, i32* %155, align 4
  %157 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %158 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %157, i32 0, i32 59
  %159 = load i32, i32* %158, align 4
  %160 = mul nsw i32 %156, %159
  %161 = icmp sle i32 %153, %160
  br i1 %161, label %162, label %177

162:                                              ; preds = %147
  %163 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %164 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %163, i32 0, i32 3
  %165 = load i32, i32* %164, align 4
  %166 = load i32, i32* %5, align 4
  %167 = mul nsw i32 %165, %166
  %168 = mul nsw i32 %167, 2
  %169 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %170 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %169, i32 0, i32 58
  %171 = load i32, i32* %170, align 8
  %172 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %173 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %172, i32 0, i32 59
  %174 = load i32, i32* %173, align 4
  %175 = mul nsw i32 %171, %174
  %176 = icmp sle i32 %168, %175
  br label %177

177:                                              ; preds = %162, %147, %144
  %178 = phi i1 [ false, %147 ], [ false, %144 ], [ %176, %162 ]
  br i1 %178, label %179, label %182

179:                                              ; preds = %177
  %180 = load i32, i32* %5, align 4
  %181 = mul nsw i32 %180, 2
  store i32 %181, i32* %5, align 4
  br label %144

182:                                              ; preds = %177
  %183 = load i32, i32* %5, align 4
  %184 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %185 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %184, i32 0, i32 9
  store i32 %183, i32* %185, align 4
  br label %186

186:                                              ; preds = %182
  %187 = load i32, i32* %3, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* %3, align 4
  %189 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %190 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %189, i32 1
  store %struct.jpeg_component_info* %190, %struct.jpeg_component_info** %4, align 8
  br label %134

191:                                              ; preds = %134
  store i32 0, i32* %3, align 4
  %192 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %193 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %192, i32 0, i32 43
  %194 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %193, align 8
  store %struct.jpeg_component_info* %194, %struct.jpeg_component_info** %4, align 8
  br label %195

195:                                              ; preds = %246, %191
  %196 = load i32, i32* %3, align 4
  %197 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %198 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %197, i32 0, i32 8
  %199 = load i32, i32* %198, align 8
  %200 = icmp slt i32 %196, %199
  br i1 %200, label %201, label %251

201:                                              ; preds = %195
  %202 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %203 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %202, i32 0, i32 6
  %204 = load i32, i32* %203, align 8
  %205 = zext i32 %204 to i64
  %206 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %207 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %206, i32 0, i32 2
  %208 = load i32, i32* %207, align 8
  %209 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %210 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %209, i32 0, i32 9
  %211 = load i32, i32* %210, align 4
  %212 = mul nsw i32 %208, %211
  %213 = sext i32 %212 to i64
  %214 = mul nsw i64 %205, %213
  %215 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %216 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %215, i32 0, i32 57
  %217 = load i32, i32* %216, align 4
  %218 = mul nsw i32 %217, 8
  %219 = sext i32 %218 to i64
  %220 = call i64 @jdiv_round_up(i64 %214, i64 %219)
  %221 = trunc i64 %220 to i32
  %222 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %223 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %222, i32 0, i32 10
  store i32 %221, i32* %223, align 8
  %224 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %225 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %224, i32 0, i32 7
  %226 = load i32, i32* %225, align 4
  %227 = zext i32 %226 to i64
  %228 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %229 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %228, i32 0, i32 3
  %230 = load i32, i32* %229, align 4
  %231 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %232 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %231, i32 0, i32 9
  %233 = load i32, i32* %232, align 4
  %234 = mul nsw i32 %230, %233
  %235 = sext i32 %234 to i64
  %236 = mul nsw i64 %227, %235
  %237 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %238 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %237, i32 0, i32 58
  %239 = load i32, i32* %238, align 8
  %240 = mul nsw i32 %239, 8
  %241 = sext i32 %240 to i64
  %242 = call i64 @jdiv_round_up(i64 %236, i64 %241)
  %243 = trunc i64 %242 to i32
  %244 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %245 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %244, i32 0, i32 11
  store i32 %243, i32* %245, align 4
  br label %246

246:                                              ; preds = %201
  %247 = load i32, i32* %3, align 4
  %248 = add nsw i32 %247, 1
  store i32 %248, i32* %3, align 4
  %249 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %4, align 8
  %250 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %249, i32 1
  store %struct.jpeg_component_info* %250, %struct.jpeg_component_info** %4, align 8
  br label %195

251:                                              ; preds = %195
  %252 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %253 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %252, i32 0, i32 10
  %254 = load i32, i32* %253, align 8
  switch i32 %254, label %264 [
    i32 1, label %255
    i32 2, label %258
    i32 3, label %258
    i32 4, label %261
    i32 5, label %261
  ]

255:                                              ; preds = %251
  %256 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %257 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %256, i32 0, i32 28
  store i32 1, i32* %257, align 8
  br label %270

258:                                              ; preds = %251, %251
  %259 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %260 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %259, i32 0, i32 28
  store i32 3, i32* %260, align 8
  br label %270

261:                                              ; preds = %251, %251
  %262 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %263 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %262, i32 0, i32 28
  store i32 4, i32* %263, align 8
  br label %270

264:                                              ; preds = %251
  %265 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %266 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %265, i32 0, i32 8
  %267 = load i32, i32* %266, align 8
  %268 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %269 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %268, i32 0, i32 28
  store i32 %267, i32* %269, align 8
  br label %270

270:                                              ; preds = %264, %261, %258, %255
  %271 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %272 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %271, i32 0, i32 19
  %273 = load i32, i32* %272, align 4
  %274 = icmp ne i32 %273, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %270
  br label %280

276:                                              ; preds = %270
  %277 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %278 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %277, i32 0, i32 28
  %279 = load i32, i32* %278, align 8
  br label %280

280:                                              ; preds = %276, %275
  %281 = phi i32 [ 1, %275 ], [ %279, %276 ]
  %282 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %283 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %282, i32 0, i32 29
  store i32 %281, i32* %283, align 4
  %284 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %285 = call i32 @use_merged_upsample(%struct.jpeg_decompress_struct.469* %284)
  %286 = icmp ne i32 %285, 0
  br i1 %286, label %287, label %293

287:                                              ; preds = %280
  %288 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %289 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %288, i32 0, i32 58
  %290 = load i32, i32* %289, align 8
  %291 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %292 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %291, i32 0, i32 30
  store i32 %290, i32* %292, align 8
  br label %296

293:                                              ; preds = %280
  %294 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %295 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %294, i32 0, i32 30
  store i32 1, i32* %295, align 8
  br label %296

296:                                              ; preds = %293, %287
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @use_merged_upsample(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.469*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %3, align 8
  %4 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %4, i32 0, i32 17
  %6 = load i32, i32* %5, align 4
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %9, i32 0, i32 56
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %8, %1
  store i32 0, i32* %2, align 4
  br label %119

14:                                               ; preds = %8
  %15 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %15, i32 0, i32 9
  %17 = load i32, i32* %16, align 4
  %18 = icmp ne i32 %17, 3
  br i1 %18, label %34, label %19

19:                                               ; preds = %14
  %20 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %20, i32 0, i32 8
  %22 = load i32, i32* %21, align 8
  %23 = icmp ne i32 %22, 3
  br i1 %23, label %34, label %24

24:                                               ; preds = %19
  %25 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %25, i32 0, i32 10
  %27 = load i32, i32* %26, align 8
  %28 = icmp ne i32 %27, 2
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %30, i32 0, i32 28
  %32 = load i32, i32* %31, align 8
  %33 = icmp ne i32 %32, 3
  br i1 %33, label %34, label %35

34:                                               ; preds = %29, %24, %19, %14
  store i32 0, i32* %2, align 4
  br label %119

35:                                               ; preds = %29
  %36 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %36, i32 0, i32 43
  %38 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %37, align 8
  %39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %38, i64 0
  %40 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %39, i32 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = icmp ne i32 %41, 2
  br i1 %42, label %83, label %43

43:                                               ; preds = %35
  %44 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %45 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %44, i32 0, i32 43
  %46 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %45, align 8
  %47 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %46, i64 1
  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i32 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = icmp ne i32 %49, 1
  br i1 %50, label %83, label %51

51:                                               ; preds = %43
  %52 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %52, i32 0, i32 43
  %54 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %53, align 8
  %55 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %54, i64 2
  %56 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %55, i32 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = icmp ne i32 %57, 1
  br i1 %58, label %83, label %59

59:                                               ; preds = %51
  %60 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %61 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %60, i32 0, i32 43
  %62 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %61, align 8
  %63 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 0
  %64 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %63, i32 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %65, 2
  br i1 %66, label %83, label %67

67:                                               ; preds = %59
  %68 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %69 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %68, i32 0, i32 43
  %70 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %69, align 8
  %71 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %70, i64 1
  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %71, i32 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = icmp ne i32 %73, 1
  br i1 %74, label %83, label %75

75:                                               ; preds = %67
  %76 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %77 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %76, i32 0, i32 43
  %78 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %77, align 8
  %79 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %78, i64 2
  %80 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %79, i32 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = icmp ne i32 %81, 1
  br i1 %82, label %83, label %84

83:                                               ; preds = %75, %67, %59, %51, %43, %35
  store i32 0, i32* %2, align 4
  br label %119

84:                                               ; preds = %75
  %85 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %86 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %85, i32 0, i32 43
  %87 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %86, align 8
  %88 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %87, i64 0
  %89 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %88, i32 0, i32 9
  %90 = load i32, i32* %89, align 4
  %91 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %92 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %91, i32 0, i32 59
  %93 = load i32, i32* %92, align 4
  %94 = icmp ne i32 %90, %93
  br i1 %94, label %117, label %95

95:                                               ; preds = %84
  %96 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %97 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %96, i32 0, i32 43
  %98 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %97, align 8
  %99 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %98, i64 1
  %100 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %99, i32 0, i32 9
  %101 = load i32, i32* %100, align 4
  %102 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %103 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %102, i32 0, i32 59
  %104 = load i32, i32* %103, align 4
  %105 = icmp ne i32 %101, %104
  br i1 %105, label %117, label %106

106:                                              ; preds = %95
  %107 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %108 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %107, i32 0, i32 43
  %109 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %108, align 8
  %110 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %109, i64 2
  %111 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %110, i32 0, i32 9
  %112 = load i32, i32* %111, align 4
  %113 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %114 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %113, i32 0, i32 59
  %115 = load i32, i32* %114, align 4
  %116 = icmp ne i32 %112, %115
  br i1 %116, label %117, label %118

117:                                              ; preds = %106, %95, %84
  store i32 0, i32* %2, align 4
  br label %119

118:                                              ; preds = %106
  store i32 1, i32* %2, align 4
  br label %119

119:                                              ; preds = %118, %117, %83, %34, %13
  %120 = load i32, i32* %2, align 4
  ret i32 %120
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_new_colormap(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_decomp_master*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %4 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %4, i32 0, i32 73
  %6 = load %struct.jpeg_decomp_master.477*, %struct.jpeg_decomp_master.477** %5, align 8
  %7 = bitcast %struct.jpeg_decomp_master.477* %6 to %struct.my_decomp_master*
  store %struct.my_decomp_master* %7, %struct.my_decomp_master** %3, align 8
  %8 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %8, i32 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 207
  br i1 %11, label %12, label %33

12:                                               ; preds = %1
  %13 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %13, i32 0, i32 0
  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i32 0, i32 5
  store i32 18, i32* %16, align 8
  %17 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %17, i32 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %20, i32 0, i32 0
  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %21, align 8
  %23 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i32 0, i32 6
  %24 = bitcast %union.anon* %23 to [8 x i32]*
  %25 = getelementptr inbounds [8 x i32], [8 x i32]* %24, i64 0, i64 0
  store i32 %19, i32* %25, align 4
  %26 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %26, i32 0, i32 0
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i32 0, i32 0
  %30 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %29, align 8
  %31 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %32 = bitcast %struct.jpeg_decompress_struct.469* %31 to %struct.jpeg_common_struct*
  call void %30(%struct.jpeg_common_struct* %32)
  br label %33

33:                                               ; preds = %12, %1
  %34 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %34, i32 0, i32 19
  %36 = load i32, i32* %35, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %64

38:                                               ; preds = %33
  %39 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %39, i32 0, i32 24
  %41 = load i32, i32* %40, align 8
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %64

43:                                               ; preds = %38
  %44 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %45 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %44, i32 0, i32 32
  %46 = load i8**, i8*** %45, align 8
  %47 = icmp ne i8** %46, null
  br i1 %47, label %48, label %64

48:                                               ; preds = %43
  %49 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %50 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %49, i32 0, i32 4
  %51 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %50, align 8
  %52 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %52, i32 0, i32 83
  store %struct.jpeg_color_quantizer.487* %51, %struct.jpeg_color_quantizer.487** %53, align 8
  %54 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %54, i32 0, i32 83
  %56 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %55, align 8
  %57 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %56, i32 0, i32 3
  %58 = bitcast {}** %57 to void (%struct.jpeg_decompress_struct.469*)**
  %59 = load void (%struct.jpeg_decompress_struct.469*)*, void (%struct.jpeg_decompress_struct.469*)** %58, align 8
  %60 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void %59(%struct.jpeg_decompress_struct.469* %60)
  %61 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %62 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %61, i32 0, i32 0
  %63 = getelementptr inbounds %struct.jpeg_decomp_master.477, %struct.jpeg_decomp_master.477* %62, i32 0, i32 2
  store i32 0, i32* %63, align 8
  br label %76

64:                                               ; preds = %43, %38, %33
  %65 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %66 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %65, i32 0, i32 0
  %67 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %66, align 8
  %68 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %67, i32 0, i32 5
  store i32 45, i32* %68, align 8
  %69 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %70 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %69, i32 0, i32 0
  %71 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %70, align 8
  %72 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %71, i32 0, i32 0
  %73 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %72, align 8
  %74 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %75 = bitcast %struct.jpeg_decompress_struct.469* %74 to %struct.jpeg_common_struct*
  call void %73(%struct.jpeg_common_struct* %75)
  br label %76

76:                                               ; preds = %64, %48
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_master_decompress(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_decomp_master*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %4 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %4, i32 0, i32 1
  %6 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %6, i32 0, i32 0
  %8 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %7, align 8
  %9 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %10 = bitcast %struct.jpeg_decompress_struct.469* %9 to %struct.jpeg_common_struct*
  %11 = call i8* %8(%struct.jpeg_common_struct* %10, i32 1, i64 48)
  %12 = bitcast i8* %11 to %struct.my_decomp_master*
  store %struct.my_decomp_master* %12, %struct.my_decomp_master** %3, align 8
  %13 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %14 = bitcast %struct.my_decomp_master* %13 to %struct.jpeg_decomp_master.477*
  %15 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %15, i32 0, i32 73
  store %struct.jpeg_decomp_master.477* %14, %struct.jpeg_decomp_master.477** %16, align 8
  %17 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %18 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %17, i32 0, i32 0
  %19 = getelementptr inbounds %struct.jpeg_decomp_master.477, %struct.jpeg_decomp_master.477* %18, i32 0, i32 0
  %20 = bitcast {}** %19 to void (%struct.jpeg_decompress_struct.469*)**
  store void (%struct.jpeg_decompress_struct.469*)* @prepare_for_output_pass, void (%struct.jpeg_decompress_struct.469*)** %20, align 8
  %21 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %22 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %21, i32 0, i32 0
  %23 = getelementptr inbounds %struct.jpeg_decomp_master.477, %struct.jpeg_decomp_master.477* %22, i32 0, i32 1
  %24 = bitcast {}** %23 to void (%struct.jpeg_decompress_struct.469*)**
  store void (%struct.jpeg_decompress_struct.469*)* @finish_output_pass, void (%struct.jpeg_decompress_struct.469*)** %24, align 8
  %25 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %26 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %25, i32 0, i32 0
  %27 = getelementptr inbounds %struct.jpeg_decomp_master.477, %struct.jpeg_decomp_master.477* %26, i32 0, i32 2
  store i32 0, i32* %27, align 8
  %28 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void @master_selection(%struct.jpeg_decompress_struct.469* %28)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @prepare_for_output_pass(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_decomp_master*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %4 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %4, i32 0, i32 73
  %6 = load %struct.jpeg_decomp_master.477*, %struct.jpeg_decomp_master.477** %5, align 8
  %7 = bitcast %struct.jpeg_decomp_master.477* %6 to %struct.my_decomp_master*
  store %struct.my_decomp_master* %7, %struct.my_decomp_master** %3, align 8
  %8 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %9 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %8, i32 0, i32 0
  %10 = getelementptr inbounds %struct.jpeg_decomp_master.477, %struct.jpeg_decomp_master.477* %9, i32 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %35

13:                                               ; preds = %1
  %14 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %15 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %14, i32 0, i32 0
  %16 = getelementptr inbounds %struct.jpeg_decomp_master.477, %struct.jpeg_decomp_master.477* %15, i32 0, i32 2
  store i32 0, i32* %16, align 8
  %17 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %17, i32 0, i32 83
  %19 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %19, i32 0, i32 0
  %21 = load void (%struct.jpeg_decompress_struct.469*, i32)*, void (%struct.jpeg_decompress_struct.469*, i32)** %20, align 8
  %22 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void %21(%struct.jpeg_decompress_struct.469* %22, i32 0)
  %23 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %23, i32 0, i32 76
  %25 = load %struct.jpeg_d_post_controller.480*, %struct.jpeg_d_post_controller.480** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_d_post_controller.480, %struct.jpeg_d_post_controller.480* %25, i32 0, i32 0
  %27 = load void (%struct.jpeg_decompress_struct.469*, i32)*, void (%struct.jpeg_decompress_struct.469*, i32)** %26, align 8
  %28 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void %27(%struct.jpeg_decompress_struct.469* %28, i32 2)
  %29 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %29, i32 0, i32 74
  %31 = load %struct.jpeg_d_main_controller.478*, %struct.jpeg_d_main_controller.478** %30, align 8
  %32 = getelementptr inbounds %struct.jpeg_d_main_controller.478, %struct.jpeg_d_main_controller.478* %31, i32 0, i32 0
  %33 = load void (%struct.jpeg_decompress_struct.469*, i32)*, void (%struct.jpeg_decompress_struct.469*, i32)** %32, align 8
  %34 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void %33(%struct.jpeg_decompress_struct.469* %34, i32 2)
  br label %165

35:                                               ; preds = %1
  %36 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %36, i32 0, i32 19
  %38 = load i32, i32* %37, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %89

40:                                               ; preds = %35
  %41 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %42 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %41, i32 0, i32 32
  %43 = load i8**, i8*** %42, align 8
  %44 = icmp eq i8** %43, null
  br i1 %44, label %45, label %89

45:                                               ; preds = %40
  %46 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %46, i32 0, i32 21
  %48 = load i32, i32* %47, align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %64

50:                                               ; preds = %45
  %51 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %51, i32 0, i32 25
  %53 = load i32, i32* %52, align 4
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %64

55:                                               ; preds = %50
  %56 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %57 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %56, i32 0, i32 4
  %58 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %57, align 8
  %59 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %59, i32 0, i32 83
  store %struct.jpeg_color_quantizer.487* %58, %struct.jpeg_color_quantizer.487** %60, align 8
  %61 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %62 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %61, i32 0, i32 0
  %63 = getelementptr inbounds %struct.jpeg_decomp_master.477, %struct.jpeg_decomp_master.477* %62, i32 0, i32 2
  store i32 1, i32* %63, align 8
  br label %88

64:                                               ; preds = %50, %45
  %65 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %66 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %65, i32 0, i32 23
  %67 = load i32, i32* %66, align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %75

69:                                               ; preds = %64
  %70 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %71 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %70, i32 0, i32 3
  %72 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %71, align 8
  %73 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %74 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %73, i32 0, i32 83
  store %struct.jpeg_color_quantizer.487* %72, %struct.jpeg_color_quantizer.487** %74, align 8
  br label %87

75:                                               ; preds = %64
  %76 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %77 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %76, i32 0, i32 0
  %78 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %77, align 8
  %79 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %78, i32 0, i32 5
  store i32 45, i32* %79, align 8
  %80 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %81 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %80, i32 0, i32 0
  %82 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %81, align 8
  %83 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %82, i32 0, i32 0
  %84 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %83, align 8
  %85 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %86 = bitcast %struct.jpeg_decompress_struct.469* %85 to %struct.jpeg_common_struct*
  call void %84(%struct.jpeg_common_struct* %86)
  br label %87

87:                                               ; preds = %75, %69
  br label %88

88:                                               ; preds = %87, %55
  br label %89

89:                                               ; preds = %88, %40, %35
  %90 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %91 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %90, i32 0, i32 80
  %92 = load %struct.jpeg_inverse_dct.484*, %struct.jpeg_inverse_dct.484** %91, align 8
  %93 = getelementptr inbounds %struct.jpeg_inverse_dct.484, %struct.jpeg_inverse_dct.484* %92, i32 0, i32 0
  %94 = bitcast {}** %93 to void (%struct.jpeg_decompress_struct.469*)**
  %95 = load void (%struct.jpeg_decompress_struct.469*)*, void (%struct.jpeg_decompress_struct.469*)** %94, align 8
  %96 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void %95(%struct.jpeg_decompress_struct.469* %96)
  %97 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %98 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %97, i32 0, i32 75
  %99 = load %struct.jpeg_d_coef_controller.479*, %struct.jpeg_d_coef_controller.479** %98, align 8
  %100 = getelementptr inbounds %struct.jpeg_d_coef_controller.479, %struct.jpeg_d_coef_controller.479* %99, i32 0, i32 2
  %101 = bitcast {}** %100 to void (%struct.jpeg_decompress_struct.469*)**
  %102 = load void (%struct.jpeg_decompress_struct.469*)*, void (%struct.jpeg_decompress_struct.469*)** %101, align 8
  %103 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void %102(%struct.jpeg_decompress_struct.469* %103)
  %104 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %105 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %104, i32 0, i32 15
  %106 = load i32, i32* %105, align 4
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %164, label %108

108:                                              ; preds = %89
  %109 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %110 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %109, i32 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = icmp ne i32 %111, 0
  br i1 %112, label %121, label %113

113:                                              ; preds = %108
  %114 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %115 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %114, i32 0, i32 82
  %116 = load %struct.jpeg_color_deconverter.486*, %struct.jpeg_color_deconverter.486** %115, align 8
  %117 = getelementptr inbounds %struct.jpeg_color_deconverter.486, %struct.jpeg_color_deconverter.486* %116, i32 0, i32 0
  %118 = bitcast {}** %117 to void (%struct.jpeg_decompress_struct.469*)**
  %119 = load void (%struct.jpeg_decompress_struct.469*)*, void (%struct.jpeg_decompress_struct.469*)** %118, align 8
  %120 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void %119(%struct.jpeg_decompress_struct.469* %120)
  br label %121

121:                                              ; preds = %113, %108
  %122 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %123 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %122, i32 0, i32 81
  %124 = load %struct.jpeg_upsampler.485*, %struct.jpeg_upsampler.485** %123, align 8
  %125 = getelementptr inbounds %struct.jpeg_upsampler.485, %struct.jpeg_upsampler.485* %124, i32 0, i32 0
  %126 = bitcast {}** %125 to void (%struct.jpeg_decompress_struct.469*)**
  %127 = load void (%struct.jpeg_decompress_struct.469*)*, void (%struct.jpeg_decompress_struct.469*)** %126, align 8
  %128 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void %127(%struct.jpeg_decompress_struct.469* %128)
  %129 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %130 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %129, i32 0, i32 19
  %131 = load i32, i32* %130, align 4
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %133, label %144

133:                                              ; preds = %121
  %134 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %135 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %134, i32 0, i32 83
  %136 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %135, align 8
  %137 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %136, i32 0, i32 0
  %138 = load void (%struct.jpeg_decompress_struct.469*, i32)*, void (%struct.jpeg_decompress_struct.469*, i32)** %137, align 8
  %139 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %140 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %141 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %140, i32 0, i32 0
  %142 = getelementptr inbounds %struct.jpeg_decomp_master.477, %struct.jpeg_decomp_master.477* %141, i32 0, i32 2
  %143 = load i32, i32* %142, align 8
  call void %138(%struct.jpeg_decompress_struct.469* %139, i32 %143)
  br label %144

144:                                              ; preds = %133, %121
  %145 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %146 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %145, i32 0, i32 76
  %147 = load %struct.jpeg_d_post_controller.480*, %struct.jpeg_d_post_controller.480** %146, align 8
  %148 = getelementptr inbounds %struct.jpeg_d_post_controller.480, %struct.jpeg_d_post_controller.480* %147, i32 0, i32 0
  %149 = load void (%struct.jpeg_decompress_struct.469*, i32)*, void (%struct.jpeg_decompress_struct.469*, i32)** %148, align 8
  %150 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %151 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %152 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %151, i32 0, i32 0
  %153 = getelementptr inbounds %struct.jpeg_decomp_master.477, %struct.jpeg_decomp_master.477* %152, i32 0, i32 2
  %154 = load i32, i32* %153, align 8
  %155 = icmp ne i32 %154, 0
  %156 = zext i1 %155 to i64
  %157 = select i1 %155, i32 3, i32 0
  call void %149(%struct.jpeg_decompress_struct.469* %150, i32 %157)
  %158 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %159 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %158, i32 0, i32 74
  %160 = load %struct.jpeg_d_main_controller.478*, %struct.jpeg_d_main_controller.478** %159, align 8
  %161 = getelementptr inbounds %struct.jpeg_d_main_controller.478, %struct.jpeg_d_main_controller.478* %160, i32 0, i32 0
  %162 = load void (%struct.jpeg_decompress_struct.469*, i32)*, void (%struct.jpeg_decompress_struct.469*, i32)** %161, align 8
  %163 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void %162(%struct.jpeg_decompress_struct.469* %163, i32 0)
  br label %164

164:                                              ; preds = %144, %89
  br label %165

165:                                              ; preds = %164, %13
  %166 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %167 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %166, i32 0, i32 2
  %168 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %167, align 8
  %169 = icmp ne %struct.jpeg_progress_mgr* %168, null
  br i1 %169, label %170, label %218

170:                                              ; preds = %165
  %171 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %172 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %171, i32 0, i32 1
  %173 = load i32, i32* %172, align 8
  %174 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %175 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %174, i32 0, i32 2
  %176 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %175, align 8
  %177 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %176, i32 0, i32 3
  store i32 %173, i32* %177, align 8
  %178 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %179 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %178, i32 0, i32 1
  %180 = load i32, i32* %179, align 8
  %181 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %182 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %181, i32 0, i32 0
  %183 = getelementptr inbounds %struct.jpeg_decomp_master.477, %struct.jpeg_decomp_master.477* %182, i32 0, i32 2
  %184 = load i32, i32* %183, align 8
  %185 = icmp ne i32 %184, 0
  %186 = zext i1 %185 to i64
  %187 = select i1 %185, i32 2, i32 1
  %188 = add nsw i32 %180, %187
  %189 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %190 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %189, i32 0, i32 2
  %191 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %190, align 8
  %192 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %191, i32 0, i32 4
  store i32 %188, i32* %192, align 4
  %193 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %194 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %193, i32 0, i32 14
  %195 = load i32, i32* %194, align 8
  %196 = icmp ne i32 %195, 0
  br i1 %196, label %197, label %217

197:                                              ; preds = %170
  %198 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %199 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %198, i32 0, i32 77
  %200 = load %struct.jpeg_input_controller.481*, %struct.jpeg_input_controller.481** %199, align 8
  %201 = getelementptr inbounds %struct.jpeg_input_controller.481, %struct.jpeg_input_controller.481* %200, i32 0, i32 5
  %202 = load i32, i32* %201, align 4
  %203 = icmp ne i32 %202, 0
  br i1 %203, label %217, label %204

204:                                              ; preds = %197
  %205 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %206 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %205, i32 0, i32 25
  %207 = load i32, i32* %206, align 4
  %208 = icmp ne i32 %207, 0
  %209 = zext i1 %208 to i64
  %210 = select i1 %208, i32 2, i32 1
  %211 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %212 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %211, i32 0, i32 2
  %213 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %212, align 8
  %214 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %213, i32 0, i32 4
  %215 = load i32, i32* %214, align 4
  %216 = add nsw i32 %215, %210
  store i32 %216, i32* %214, align 4
  br label %217

217:                                              ; preds = %204, %197, %170
  br label %218

218:                                              ; preds = %217, %165
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_output_pass(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_decomp_master*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %4 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %4, i32 0, i32 73
  %6 = load %struct.jpeg_decomp_master.477*, %struct.jpeg_decomp_master.477** %5, align 8
  %7 = bitcast %struct.jpeg_decomp_master.477* %6 to %struct.my_decomp_master*
  store %struct.my_decomp_master* %7, %struct.my_decomp_master** %3, align 8
  %8 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %8, i32 0, i32 19
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %20

12:                                               ; preds = %1
  %13 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %13, i32 0, i32 83
  %15 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %15, i32 0, i32 2
  %17 = bitcast {}** %16 to void (%struct.jpeg_decompress_struct.469*)**
  %18 = load void (%struct.jpeg_decompress_struct.469*)*, void (%struct.jpeg_decompress_struct.469*)** %17, align 8
  %19 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void %18(%struct.jpeg_decompress_struct.469* %19)
  br label %20

20:                                               ; preds = %12, %1
  %21 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %22 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %22, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @master_selection(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_decomp_master*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %8 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %8, i32 0, i32 73
  %10 = load %struct.jpeg_decomp_master.477*, %struct.jpeg_decomp_master.477** %9, align 8
  %11 = bitcast %struct.jpeg_decomp_master.477* %10 to %struct.my_decomp_master*
  store %struct.my_decomp_master* %11, %struct.my_decomp_master** %3, align 8
  %12 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void @jpeg_calc_output_dimensions(%struct.jpeg_decompress_struct.469* %12)
  %13 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void @prepare_range_limit_table(%struct.jpeg_decompress_struct.469* %13)
  %14 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %14, i32 0, i32 26
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %18, i32 0, i32 28
  %20 = load i32, i32* %19, align 8
  %21 = sext i32 %20 to i64
  %22 = mul nsw i64 %17, %21
  store i64 %22, i64* %5, align 8
  %23 = load i64, i64* %5, align 8
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %6, align 4
  %25 = load i32, i32* %6, align 4
  %26 = zext i32 %25 to i64
  %27 = load i64, i64* %5, align 8
  %28 = icmp ne i64 %26, %27
  br i1 %28, label %29, label %41

29:                                               ; preds = %1
  %30 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %30, i32 0, i32 0
  %32 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %31, align 8
  %33 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %32, i32 0, i32 5
  store i32 69, i32* %33, align 8
  %34 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %34, i32 0, i32 0
  %36 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %36, i32 0, i32 0
  %38 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %37, align 8
  %39 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %40 = bitcast %struct.jpeg_decompress_struct.469* %39 to %struct.jpeg_common_struct*
  call void %38(%struct.jpeg_common_struct* %40)
  br label %41

41:                                               ; preds = %29, %1
  %42 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %43 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %42, i32 0, i32 1
  store i32 0, i32* %43, align 8
  %44 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %45 = call i32 @use_merged_upsample(%struct.jpeg_decompress_struct.469* %44)
  %46 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %47 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %46, i32 0, i32 2
  store i32 %45, i32* %47, align 4
  %48 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %49 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %48, i32 0, i32 3
  store %struct.jpeg_color_quantizer.487* null, %struct.jpeg_color_quantizer.487** %49, align 8
  %50 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %51 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %50, i32 0, i32 4
  store %struct.jpeg_color_quantizer.487* null, %struct.jpeg_color_quantizer.487** %51, align 8
  %52 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %52, i32 0, i32 19
  %54 = load i32, i32* %53, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %61

56:                                               ; preds = %41
  %57 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %58 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %57, i32 0, i32 14
  %59 = load i32, i32* %58, align 8
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %56, %41
  %62 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %62, i32 0, i32 23
  store i32 0, i32* %63, align 4
  %64 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %65 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %64, i32 0, i32 24
  store i32 0, i32* %65, align 8
  %66 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %67 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %66, i32 0, i32 25
  store i32 0, i32* %67, align 4
  br label %68

68:                                               ; preds = %61, %56
  %69 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %70 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %69, i32 0, i32 19
  %71 = load i32, i32* %70, align 4
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %155

73:                                               ; preds = %68
  %74 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %75 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %74, i32 0, i32 15
  %76 = load i32, i32* %75, align 4
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %78, label %90

78:                                               ; preds = %73
  %79 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %80 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %79, i32 0, i32 0
  %81 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %82 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %81, i32 0, i32 5
  store i32 46, i32* %82, align 8
  %83 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %84 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %83, i32 0, i32 0
  %85 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %84, align 8
  %86 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %85, i32 0, i32 0
  %87 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %86, align 8
  %88 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %89 = bitcast %struct.jpeg_decompress_struct.469* %88 to %struct.jpeg_common_struct*
  call void %87(%struct.jpeg_common_struct* %89)
  br label %90

90:                                               ; preds = %78, %73
  %91 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %92 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %91, i32 0, i32 28
  %93 = load i32, i32* %92, align 8
  %94 = icmp ne i32 %93, 3
  br i1 %94, label %95, label %104

95:                                               ; preds = %90
  %96 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %97 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %96, i32 0, i32 23
  store i32 1, i32* %97, align 4
  %98 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %99 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %98, i32 0, i32 24
  store i32 0, i32* %99, align 8
  %100 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %101 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %100, i32 0, i32 25
  store i32 0, i32* %101, align 4
  %102 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %103 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %102, i32 0, i32 32
  store i8** null, i8*** %103, align 8
  br label %125

104:                                              ; preds = %90
  %105 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %106 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %105, i32 0, i32 32
  %107 = load i8**, i8*** %106, align 8
  %108 = icmp ne i8** %107, null
  br i1 %108, label %109, label %112

109:                                              ; preds = %104
  %110 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %111 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %110, i32 0, i32 24
  store i32 1, i32* %111, align 8
  br label %124

112:                                              ; preds = %104
  %113 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %114 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %113, i32 0, i32 21
  %115 = load i32, i32* %114, align 4
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %112
  %118 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %119 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %118, i32 0, i32 25
  store i32 1, i32* %119, align 4
  br label %123

120:                                              ; preds = %112
  %121 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %122 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %121, i32 0, i32 23
  store i32 1, i32* %122, align 4
  br label %123

123:                                              ; preds = %120, %117
  br label %124

124:                                              ; preds = %123, %109
  br label %125

125:                                              ; preds = %124, %95
  %126 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %127 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %126, i32 0, i32 23
  %128 = load i32, i32* %127, align 4
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %130, label %137

130:                                              ; preds = %125
  %131 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void @jinit_1pass_quantizer(%struct.jpeg_decompress_struct.469* %131)
  %132 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %133 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %132, i32 0, i32 83
  %134 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %133, align 8
  %135 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %136 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %135, i32 0, i32 3
  store %struct.jpeg_color_quantizer.487* %134, %struct.jpeg_color_quantizer.487** %136, align 8
  br label %137

137:                                              ; preds = %130, %125
  %138 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %139 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %138, i32 0, i32 25
  %140 = load i32, i32* %139, align 4
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %147, label %142

142:                                              ; preds = %137
  %143 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %144 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %143, i32 0, i32 24
  %145 = load i32, i32* %144, align 8
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %147, label %154

147:                                              ; preds = %142, %137
  %148 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void @jinit_2pass_quantizer(%struct.jpeg_decompress_struct.469* %148)
  %149 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %150 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %149, i32 0, i32 83
  %151 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %150, align 8
  %152 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %153 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %152, i32 0, i32 4
  store %struct.jpeg_color_quantizer.487* %151, %struct.jpeg_color_quantizer.487** %153, align 8
  br label %154

154:                                              ; preds = %147, %142
  br label %155

155:                                              ; preds = %154, %68
  %156 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %157 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %156, i32 0, i32 15
  %158 = load i32, i32* %157, align 4
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %175, label %160

160:                                              ; preds = %155
  %161 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %162 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %161, i32 0, i32 2
  %163 = load i32, i32* %162, align 4
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %160
  %166 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void @jinit_merged_upsampler(%struct.jpeg_decompress_struct.469* %166)
  br label %170

167:                                              ; preds = %160
  %168 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void @jinit_color_deconverter(%struct.jpeg_decompress_struct.469* %168)
  %169 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void @jinit_upsampler(%struct.jpeg_decompress_struct.469* %169)
  br label %170

170:                                              ; preds = %167, %165
  %171 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %172 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %173 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %172, i32 0, i32 25
  %174 = load i32, i32* %173, align 4
  call void bitcast (void (%struct.jpeg_decompress_struct.682*, i32)* @jinit_d_post_controller to void (%struct.jpeg_decompress_struct.469*, i32)*)(%struct.jpeg_decompress_struct.469* %171, i32 %174)
  br label %175

175:                                              ; preds = %170, %155
  %176 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void bitcast (void (%struct.jpeg_decompress_struct.492*)* @jinit_inverse_dct to void (%struct.jpeg_decompress_struct.469*)*)(%struct.jpeg_decompress_struct.469* %176)
  %177 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %178 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %177, i32 0, i32 45
  %179 = load i32, i32* %178, align 4
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %181, label %193

181:                                              ; preds = %175
  %182 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %183 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %182, i32 0, i32 0
  %184 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %183, align 8
  %185 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %184, i32 0, i32 5
  store i32 1, i32* %185, align 8
  %186 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %187 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %186, i32 0, i32 0
  %188 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %187, align 8
  %189 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %188, i32 0, i32 0
  %190 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %189, align 8
  %191 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %192 = bitcast %struct.jpeg_decompress_struct.469* %191 to %struct.jpeg_common_struct*
  call void %190(%struct.jpeg_common_struct* %192)
  br label %203

193:                                              ; preds = %175
  %194 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %195 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %194, i32 0, i32 44
  %196 = load i32, i32* %195, align 8
  %197 = icmp ne i32 %196, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %193
  %199 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void @jinit_phuff_decoder(%struct.jpeg_decompress_struct.469* %199)
  br label %202

200:                                              ; preds = %193
  %201 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void bitcast (void (%struct.jpeg_decompress_struct*)* @jinit_huff_decoder to void (%struct.jpeg_decompress_struct.469*)*)(%struct.jpeg_decompress_struct.469* %201)
  br label %202

202:                                              ; preds = %200, %198
  br label %203

203:                                              ; preds = %202, %181
  %204 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %205 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %204, i32 0, i32 77
  %206 = load %struct.jpeg_input_controller.481*, %struct.jpeg_input_controller.481** %205, align 8
  %207 = getelementptr inbounds %struct.jpeg_input_controller.481, %struct.jpeg_input_controller.481* %206, i32 0, i32 4
  %208 = load i32, i32* %207, align 8
  %209 = icmp ne i32 %208, 0
  br i1 %209, label %215, label %210

210:                                              ; preds = %203
  %211 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %212 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %211, i32 0, i32 14
  %213 = load i32, i32* %212, align 8
  %214 = icmp ne i32 %213, 0
  br label %215

215:                                              ; preds = %210, %203
  %216 = phi i1 [ true, %203 ], [ %214, %210 ]
  %217 = zext i1 %216 to i32
  store i32 %217, i32* %4, align 4
  %218 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %219 = load i32, i32* %4, align 4
  call void bitcast (void (%struct.jpeg_decompress_struct.445*, i32)* @jinit_d_coef_controller to void (%struct.jpeg_decompress_struct.469*, i32)*)(%struct.jpeg_decompress_struct.469* %218, i32 %219)
  %220 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %221 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %220, i32 0, i32 15
  %222 = load i32, i32* %221, align 4
  %223 = icmp ne i32 %222, 0
  br i1 %223, label %226, label %224

224:                                              ; preds = %215
  %225 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void bitcast (void (%struct.jpeg_decompress_struct.562*, i32)* @jinit_d_main_controller to void (%struct.jpeg_decompress_struct.469*, i32)*)(%struct.jpeg_decompress_struct.469* %225, i32 0)
  br label %226

226:                                              ; preds = %224, %215
  %227 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %228 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %227, i32 0, i32 1
  %229 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %228, align 8
  %230 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %229, i32 0, i32 6
  %231 = bitcast {}** %230 to void (%struct.jpeg_common_struct*)**
  %232 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %231, align 8
  %233 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %234 = bitcast %struct.jpeg_decompress_struct.469* %233 to %struct.jpeg_common_struct*
  call void %232(%struct.jpeg_common_struct* %234)
  %235 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %236 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %235, i32 0, i32 77
  %237 = load %struct.jpeg_input_controller.481*, %struct.jpeg_input_controller.481** %236, align 8
  %238 = getelementptr inbounds %struct.jpeg_input_controller.481, %struct.jpeg_input_controller.481* %237, i32 0, i32 2
  %239 = bitcast {}** %238 to void (%struct.jpeg_decompress_struct.469*)**
  %240 = load void (%struct.jpeg_decompress_struct.469*)*, void (%struct.jpeg_decompress_struct.469*)** %239, align 8
  %241 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void %240(%struct.jpeg_decompress_struct.469* %241)
  %242 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %243 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %242, i32 0, i32 2
  %244 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %243, align 8
  %245 = icmp ne %struct.jpeg_progress_mgr* %244, null
  br i1 %245, label %246, label %307

246:                                              ; preds = %226
  %247 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %248 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %247, i32 0, i32 14
  %249 = load i32, i32* %248, align 8
  %250 = icmp ne i32 %249, 0
  br i1 %250, label %307, label %251

251:                                              ; preds = %246
  %252 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %253 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %252, i32 0, i32 77
  %254 = load %struct.jpeg_input_controller.481*, %struct.jpeg_input_controller.481** %253, align 8
  %255 = getelementptr inbounds %struct.jpeg_input_controller.481, %struct.jpeg_input_controller.481* %254, i32 0, i32 4
  %256 = load i32, i32* %255, align 8
  %257 = icmp ne i32 %256, 0
  br i1 %257, label %258, label %307

258:                                              ; preds = %251
  %259 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %260 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %259, i32 0, i32 44
  %261 = load i32, i32* %260, align 8
  %262 = icmp ne i32 %261, 0
  br i1 %262, label %263, label %269

263:                                              ; preds = %258
  %264 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %265 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %264, i32 0, i32 8
  %266 = load i32, i32* %265, align 8
  %267 = mul nsw i32 3, %266
  %268 = add nsw i32 2, %267
  store i32 %268, i32* %7, align 4
  br label %273

269:                                              ; preds = %258
  %270 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %271 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %270, i32 0, i32 8
  %272 = load i32, i32* %271, align 8
  store i32 %272, i32* %7, align 4
  br label %273

273:                                              ; preds = %269, %263
  %274 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %275 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %274, i32 0, i32 2
  %276 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %275, align 8
  %277 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %276, i32 0, i32 1
  store i64 0, i64* %277, align 8
  %278 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %279 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %278, i32 0, i32 60
  %280 = load i32, i32* %279, align 8
  %281 = zext i32 %280 to i64
  %282 = load i32, i32* %7, align 4
  %283 = sext i32 %282 to i64
  %284 = mul nsw i64 %281, %283
  %285 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %286 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %285, i32 0, i32 2
  %287 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %286, align 8
  %288 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %287, i32 0, i32 2
  store i64 %284, i64* %288, align 8
  %289 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %290 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %289, i32 0, i32 2
  %291 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %290, align 8
  %292 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %291, i32 0, i32 3
  store i32 0, i32* %292, align 8
  %293 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %294 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %293, i32 0, i32 25
  %295 = load i32, i32* %294, align 4
  %296 = icmp ne i32 %295, 0
  %297 = zext i1 %296 to i64
  %298 = select i1 %296, i32 3, i32 2
  %299 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %300 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %299, i32 0, i32 2
  %301 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %300, align 8
  %302 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %301, i32 0, i32 4
  store i32 %298, i32* %302, align 4
  %303 = load %struct.my_decomp_master*, %struct.my_decomp_master** %3, align 8
  %304 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %303, i32 0, i32 1
  %305 = load i32, i32* %304, align 8
  %306 = add nsw i32 %305, 1
  store i32 %306, i32* %304, align 8
  br label %307

307:                                              ; preds = %273, %251, %246, %226
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @prepare_range_limit_table(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %5 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %5, i32 0, i32 1
  %7 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %7, i32 0, i32 0
  %9 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %8, align 8
  %10 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %11 = bitcast %struct.jpeg_decompress_struct.469* %10 to %struct.jpeg_common_struct*
  %12 = call i8* %9(%struct.jpeg_common_struct* %11, i32 1, i64 1408)
  store i8* %12, i8** %3, align 8
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 256
  store i8* %14, i8** %3, align 8
  %15 = load i8*, i8** %3, align 8
  %16 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %16, i32 0, i32 61
  store i8* %15, i8** %17, align 8
  %18 = load i8*, i8** %3, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 -256
  call void @llvm.memset.p0i8.i64(i8* align 1 %19, i8 0, i64 256, i1 false)
  store i32 0, i32* %4, align 4
  br label %20

20:                                               ; preds = %30, %1
  %21 = load i32, i32* %4, align 4
  %22 = icmp sle i32 %21, 255
  br i1 %22, label %23, label %33

23:                                               ; preds = %20
  %24 = load i32, i32* %4, align 4
  %25 = trunc i32 %24 to i8
  %26 = load i8*, i8** %3, align 8
  %27 = load i32, i32* %4, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  store i8 %25, i8* %29, align 1
  br label %30

30:                                               ; preds = %23
  %31 = load i32, i32* %4, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %4, align 4
  br label %20

33:                                               ; preds = %20
  %34 = load i8*, i8** %3, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 128
  store i8* %35, i8** %3, align 8
  store i32 128, i32* %4, align 4
  br label %36

36:                                               ; preds = %44, %33
  %37 = load i32, i32* %4, align 4
  %38 = icmp slt i32 %37, 512
  br i1 %38, label %39, label %47

39:                                               ; preds = %36
  %40 = load i8*, i8** %3, align 8
  %41 = load i32, i32* %4, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  store i8 -1, i8* %43, align 1
  br label %44

44:                                               ; preds = %39
  %45 = load i32, i32* %4, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %4, align 4
  br label %36

47:                                               ; preds = %36
  %48 = load i8*, i8** %3, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 512
  call void @llvm.memset.p0i8.i64(i8* align 1 %49, i8 0, i64 384, i1 false)
  %50 = load i8*, i8** %3, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 896
  %52 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %52, i32 0, i32 61
  %54 = load i8*, i8** %53, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %54, i64 128, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_merged_upsampler(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_upsampler*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %4 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %4, i32 0, i32 1
  %6 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %6, i32 0, i32 0
  %8 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %7, align 8
  %9 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %10 = bitcast %struct.jpeg_decompress_struct.469* %9 to %struct.jpeg_common_struct*
  %11 = call i8* %8(%struct.jpeg_common_struct* %10, i32 1, i64 88)
  %12 = bitcast i8* %11 to %struct.my_upsampler*
  store %struct.my_upsampler* %12, %struct.my_upsampler** %3, align 8
  %13 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %14 = bitcast %struct.my_upsampler* %13 to %struct.jpeg_upsampler.485*
  %15 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %15, i32 0, i32 81
  store %struct.jpeg_upsampler.485* %14, %struct.jpeg_upsampler.485** %16, align 8
  %17 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %18 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %17, i32 0, i32 0
  %19 = getelementptr inbounds %struct.jpeg_upsampler.485, %struct.jpeg_upsampler.485* %18, i32 0, i32 0
  %20 = bitcast {}** %19 to void (%struct.jpeg_decompress_struct.469*)**
  store void (%struct.jpeg_decompress_struct.469*)* @start_pass_merged_upsample, void (%struct.jpeg_decompress_struct.469*)** %20, align 8
  %21 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %22 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %21, i32 0, i32 0
  %23 = getelementptr inbounds %struct.jpeg_upsampler.485, %struct.jpeg_upsampler.485* %22, i32 0, i32 2
  store i32 0, i32* %23, align 8
  %24 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %24, i32 0, i32 26
  %26 = load i32, i32* %25, align 8
  %27 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %27, i32 0, i32 28
  %29 = load i32, i32* %28, align 8
  %30 = mul i32 %26, %29
  %31 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %32 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %31, i32 0, i32 8
  store i32 %30, i32* %32, align 4
  %33 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %33, i32 0, i32 58
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 2
  br i1 %36, label %37, label %58

37:                                               ; preds = %1
  %38 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %39 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %38, i32 0, i32 0
  %40 = getelementptr inbounds %struct.jpeg_upsampler.485, %struct.jpeg_upsampler.485* %39, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8***, i32*, i32, i8**, i32*, i32)* @merged_2v_upsample, void (%struct.jpeg_decompress_struct.469*, i8***, i32*, i32, i8**, i32*, i32)** %40, align 8
  %41 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %42 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %41, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**)* @h2v2_merged_upsample, void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**)** %42, align 8
  %43 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %43, i32 0, i32 1
  %45 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %45, i32 0, i32 1
  %47 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %46, align 8
  %48 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %49 = bitcast %struct.jpeg_decompress_struct.469* %48 to %struct.jpeg_common_struct*
  %50 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %51 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %50, i32 0, i32 8
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = mul i64 %53, 1
  %55 = call i8* %47(%struct.jpeg_common_struct* %49, i32 1, i64 %54)
  %56 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %57 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %56, i32 0, i32 6
  store i8* %55, i8** %57, align 8
  br label %66

58:                                               ; preds = %1
  %59 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %60 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %59, i32 0, i32 0
  %61 = getelementptr inbounds %struct.jpeg_upsampler.485, %struct.jpeg_upsampler.485* %60, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8***, i32*, i32, i8**, i32*, i32)* @merged_1v_upsample, void (%struct.jpeg_decompress_struct.469*, i8***, i32*, i32, i8**, i32*, i32)** %61, align 8
  %62 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %63 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %62, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**)* @h2v1_merged_upsample, void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**)** %63, align 8
  %64 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %65 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %64, i32 0, i32 6
  store i8* null, i8** %65, align 8
  br label %66

66:                                               ; preds = %58, %37
  %67 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void @build_ycc_rgb_table.62(%struct.jpeg_decompress_struct.469* %67)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_merged_upsample(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_upsampler*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %4 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %4, i32 0, i32 81
  %6 = load %struct.jpeg_upsampler.485*, %struct.jpeg_upsampler.485** %5, align 8
  %7 = bitcast %struct.jpeg_upsampler.485* %6 to %struct.my_upsampler*
  store %struct.my_upsampler* %7, %struct.my_upsampler** %3, align 8
  %8 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %9 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %8, i32 0, i32 7
  store i32 0, i32* %9, align 8
  %10 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %10, i32 0, i32 27
  %12 = load i32, i32* %11, align 4
  %13 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %14 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %13, i32 0, i32 9
  store i32 %12, i32* %14, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @merged_2v_upsample(%struct.jpeg_decompress_struct.469* %0, i8*** %1, i32* %2, i32 %3, i8** %4, i32* %5, i32 %6) #0 {
  %8 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %9 = alloca i8***, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8**, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.my_upsampler*, align 8
  %16 = alloca [2 x i8*], align 16
  %17 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %8, align 8
  store i8*** %1, i8**** %9, align 8
  store i32* %2, i32** %10, align 8
  store i32 %3, i32* %11, align 4
  store i8** %4, i8*** %12, align 8
  store i32* %5, i32** %13, align 8
  store i32 %6, i32* %14, align 4
  %18 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %8, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %18, i32 0, i32 81
  %20 = load %struct.jpeg_upsampler.485*, %struct.jpeg_upsampler.485** %19, align 8
  %21 = bitcast %struct.jpeg_upsampler.485* %20 to %struct.my_upsampler*
  store %struct.my_upsampler* %21, %struct.my_upsampler** %15, align 8
  %22 = load %struct.my_upsampler*, %struct.my_upsampler** %15, align 8
  %23 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %22, i32 0, i32 7
  %24 = load i32, i32* %23, align 8
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %39

26:                                               ; preds = %7
  %27 = load %struct.my_upsampler*, %struct.my_upsampler** %15, align 8
  %28 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %27, i32 0, i32 6
  %29 = load i8**, i8*** %12, align 8
  %30 = load i32*, i32** %13, align 8
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8*, i8** %29, i64 %32
  %34 = load %struct.my_upsampler*, %struct.my_upsampler** %15, align 8
  %35 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %34, i32 0, i32 8
  %36 = load i32, i32* %35, align 4
  call void @jcopy_sample_rows(i8** %28, i32 0, i8** %33, i32 0, i32 1, i32 %36)
  store i32 1, i32* %17, align 4
  %37 = load %struct.my_upsampler*, %struct.my_upsampler** %15, align 8
  %38 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %37, i32 0, i32 7
  store i32 0, i32* %38, align 8
  br label %94

39:                                               ; preds = %7
  store i32 2, i32* %17, align 4
  %40 = load i32, i32* %17, align 4
  %41 = load %struct.my_upsampler*, %struct.my_upsampler** %15, align 8
  %42 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %41, i32 0, i32 9
  %43 = load i32, i32* %42, align 8
  %44 = icmp ugt i32 %40, %43
  br i1 %44, label %45, label %49

45:                                               ; preds = %39
  %46 = load %struct.my_upsampler*, %struct.my_upsampler** %15, align 8
  %47 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %46, i32 0, i32 9
  %48 = load i32, i32* %47, align 8
  store i32 %48, i32* %17, align 4
  br label %49

49:                                               ; preds = %45, %39
  %50 = load i32*, i32** %13, align 8
  %51 = load i32, i32* %50, align 4
  %52 = load i32, i32* %14, align 4
  %53 = sub i32 %52, %51
  store i32 %53, i32* %14, align 4
  %54 = load i32, i32* %17, align 4
  %55 = load i32, i32* %14, align 4
  %56 = icmp ugt i32 %54, %55
  br i1 %56, label %57, label %59

57:                                               ; preds = %49
  %58 = load i32, i32* %14, align 4
  store i32 %58, i32* %17, align 4
  br label %59

59:                                               ; preds = %57, %49
  %60 = load i8**, i8*** %12, align 8
  %61 = load i32*, i32** %13, align 8
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8*, i8** %60, i64 %63
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds [2 x i8*], [2 x i8*]* %16, i64 0, i64 0
  store i8* %65, i8** %66, align 16
  %67 = load i32, i32* %17, align 4
  %68 = icmp ugt i32 %67, 1
  br i1 %68, label %69, label %78

69:                                               ; preds = %59
  %70 = load i8**, i8*** %12, align 8
  %71 = load i32*, i32** %13, align 8
  %72 = load i32, i32* %71, align 4
  %73 = add i32 %72, 1
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds i8*, i8** %70, i64 %74
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds [2 x i8*], [2 x i8*]* %16, i64 0, i64 1
  store i8* %76, i8** %77, align 8
  br label %85

78:                                               ; preds = %59
  %79 = load %struct.my_upsampler*, %struct.my_upsampler** %15, align 8
  %80 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %79, i32 0, i32 6
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds [2 x i8*], [2 x i8*]* %16, i64 0, i64 1
  store i8* %81, i8** %82, align 8
  %83 = load %struct.my_upsampler*, %struct.my_upsampler** %15, align 8
  %84 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %83, i32 0, i32 7
  store i32 1, i32* %84, align 8
  br label %85

85:                                               ; preds = %78, %69
  %86 = load %struct.my_upsampler*, %struct.my_upsampler** %15, align 8
  %87 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %86, i32 0, i32 1
  %88 = load void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**)*, void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**)** %87, align 8
  %89 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %8, align 8
  %90 = load i8***, i8**** %9, align 8
  %91 = load i32*, i32** %10, align 8
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds [2 x i8*], [2 x i8*]* %16, i64 0, i64 0
  call void %88(%struct.jpeg_decompress_struct.469* %89, i8*** %90, i32 %92, i8** %93)
  br label %94

94:                                               ; preds = %85, %26
  %95 = load i32, i32* %17, align 4
  %96 = load i32*, i32** %13, align 8
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %97, %95
  store i32 %98, i32* %96, align 4
  %99 = load i32, i32* %17, align 4
  %100 = load %struct.my_upsampler*, %struct.my_upsampler** %15, align 8
  %101 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %100, i32 0, i32 9
  %102 = load i32, i32* %101, align 8
  %103 = sub i32 %102, %99
  store i32 %103, i32* %101, align 8
  %104 = load %struct.my_upsampler*, %struct.my_upsampler** %15, align 8
  %105 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %104, i32 0, i32 7
  %106 = load i32, i32* %105, align 8
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %112, label %108

108:                                              ; preds = %94
  %109 = load i32*, i32** %10, align 8
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 4
  br label %112

112:                                              ; preds = %108, %94
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @h2v2_merged_upsample(%struct.jpeg_decompress_struct.469* %0, i8*** %1, i32 %2, i8** %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca i8***, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8**, align 8
  %9 = alloca %struct.my_upsampler*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  %24 = alloca i32*, align 8
  %25 = alloca i32*, align 8
  %26 = alloca i64*, align 8
  %27 = alloca i64*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store i8*** %1, i8**** %6, align 8
  store i32 %2, i32* %7, align 4
  store i8** %3, i8*** %8, align 8
  %28 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %28, i32 0, i32 81
  %30 = load %struct.jpeg_upsampler.485*, %struct.jpeg_upsampler.485** %29, align 8
  %31 = bitcast %struct.jpeg_upsampler.485* %30 to %struct.my_upsampler*
  store %struct.my_upsampler* %31, %struct.my_upsampler** %9, align 8
  %32 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %32, i32 0, i32 61
  %34 = load i8*, i8** %33, align 8
  store i8* %34, i8** %23, align 8
  %35 = load %struct.my_upsampler*, %struct.my_upsampler** %9, align 8
  %36 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %35, i32 0, i32 2
  %37 = load i32*, i32** %36, align 8
  store i32* %37, i32** %24, align 8
  %38 = load %struct.my_upsampler*, %struct.my_upsampler** %9, align 8
  %39 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %38, i32 0, i32 3
  %40 = load i32*, i32** %39, align 8
  store i32* %40, i32** %25, align 8
  %41 = load %struct.my_upsampler*, %struct.my_upsampler** %9, align 8
  %42 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %41, i32 0, i32 4
  %43 = load i64*, i64** %42, align 8
  store i64* %43, i64** %26, align 8
  %44 = load %struct.my_upsampler*, %struct.my_upsampler** %9, align 8
  %45 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %44, i32 0, i32 5
  %46 = load i64*, i64** %45, align 8
  store i64* %46, i64** %27, align 8
  %47 = load i8***, i8**** %6, align 8
  %48 = getelementptr inbounds i8**, i8*** %47, i64 0
  %49 = load i8**, i8*** %48, align 8
  %50 = load i32, i32* %7, align 4
  %51 = mul i32 %50, 2
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8*, i8** %49, i64 %52
  %54 = load i8*, i8** %53, align 8
  store i8* %54, i8** %18, align 8
  %55 = load i8***, i8**** %6, align 8
  %56 = getelementptr inbounds i8**, i8*** %55, i64 0
  %57 = load i8**, i8*** %56, align 8
  %58 = load i32, i32* %7, align 4
  %59 = mul i32 %58, 2
  %60 = add i32 %59, 1
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i8*, i8** %57, i64 %61
  %63 = load i8*, i8** %62, align 8
  store i8* %63, i8** %19, align 8
  %64 = load i8***, i8**** %6, align 8
  %65 = getelementptr inbounds i8**, i8*** %64, i64 1
  %66 = load i8**, i8*** %65, align 8
  %67 = load i32, i32* %7, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i8*, i8** %66, i64 %68
  %70 = load i8*, i8** %69, align 8
  store i8* %70, i8** %20, align 8
  %71 = load i8***, i8**** %6, align 8
  %72 = getelementptr inbounds i8**, i8*** %71, i64 2
  %73 = load i8**, i8*** %72, align 8
  %74 = load i32, i32* %7, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i8*, i8** %73, i64 %75
  %77 = load i8*, i8** %76, align 8
  store i8* %77, i8** %21, align 8
  %78 = load i8**, i8*** %8, align 8
  %79 = getelementptr inbounds i8*, i8** %78, i64 0
  %80 = load i8*, i8** %79, align 8
  store i8* %80, i8** %16, align 8
  %81 = load i8**, i8*** %8, align 8
  %82 = getelementptr inbounds i8*, i8** %81, i64 1
  %83 = load i8*, i8** %82, align 8
  store i8* %83, i8** %17, align 8
  %84 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %85 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %84, i32 0, i32 26
  %86 = load i32, i32* %85, align 8
  %87 = lshr i32 %86, 1
  store i32 %87, i32* %22, align 4
  br label %88

88:                                               ; preds = %255, %4
  %89 = load i32, i32* %22, align 4
  %90 = icmp ugt i32 %89, 0
  br i1 %90, label %91, label %258

91:                                               ; preds = %88
  %92 = load i8*, i8** %20, align 8
  %93 = getelementptr inbounds i8, i8* %92, i32 1
  store i8* %93, i8** %20, align 8
  %94 = load i8, i8* %92, align 1
  %95 = zext i8 %94 to i32
  store i32 %95, i32* %14, align 4
  %96 = load i8*, i8** %21, align 8
  %97 = getelementptr inbounds i8, i8* %96, i32 1
  store i8* %97, i8** %21, align 8
  %98 = load i8, i8* %96, align 1
  %99 = zext i8 %98 to i32
  store i32 %99, i32* %15, align 4
  %100 = load i32*, i32** %24, align 8
  %101 = load i32, i32* %15, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i32, i32* %100, i64 %102
  %104 = load i32, i32* %103, align 4
  store i32 %104, i32* %11, align 4
  %105 = load i64*, i64** %27, align 8
  %106 = load i32, i32* %14, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i64, i64* %105, i64 %107
  %109 = load i64, i64* %108, align 8
  %110 = load i64*, i64** %26, align 8
  %111 = load i32, i32* %15, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i64, i64* %110, i64 %112
  %114 = load i64, i64* %113, align 8
  %115 = add nsw i64 %109, %114
  %116 = ashr i64 %115, 16
  %117 = trunc i64 %116 to i32
  store i32 %117, i32* %12, align 4
  %118 = load i32*, i32** %25, align 8
  %119 = load i32, i32* %14, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i32, i32* %118, i64 %120
  %122 = load i32, i32* %121, align 4
  store i32 %122, i32* %13, align 4
  %123 = load i8*, i8** %18, align 8
  %124 = getelementptr inbounds i8, i8* %123, i32 1
  store i8* %124, i8** %18, align 8
  %125 = load i8, i8* %123, align 1
  %126 = zext i8 %125 to i32
  store i32 %126, i32* %10, align 4
  %127 = load i8*, i8** %23, align 8
  %128 = load i32, i32* %10, align 4
  %129 = load i32, i32* %11, align 4
  %130 = add nsw i32 %128, %129
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i8, i8* %127, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = load i8*, i8** %16, align 8
  %135 = getelementptr inbounds i8, i8* %134, i64 0
  store i8 %133, i8* %135, align 1
  %136 = load i8*, i8** %23, align 8
  %137 = load i32, i32* %10, align 4
  %138 = load i32, i32* %12, align 4
  %139 = add nsw i32 %137, %138
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8, i8* %136, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = load i8*, i8** %16, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 1
  store i8 %142, i8* %144, align 1
  %145 = load i8*, i8** %23, align 8
  %146 = load i32, i32* %10, align 4
  %147 = load i32, i32* %13, align 4
  %148 = add nsw i32 %146, %147
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i8, i8* %145, i64 %149
  %151 = load i8, i8* %150, align 1
  %152 = load i8*, i8** %16, align 8
  %153 = getelementptr inbounds i8, i8* %152, i64 2
  store i8 %151, i8* %153, align 1
  %154 = load i8*, i8** %16, align 8
  %155 = getelementptr inbounds i8, i8* %154, i64 3
  store i8* %155, i8** %16, align 8
  %156 = load i8*, i8** %18, align 8
  %157 = getelementptr inbounds i8, i8* %156, i32 1
  store i8* %157, i8** %18, align 8
  %158 = load i8, i8* %156, align 1
  %159 = zext i8 %158 to i32
  store i32 %159, i32* %10, align 4
  %160 = load i8*, i8** %23, align 8
  %161 = load i32, i32* %10, align 4
  %162 = load i32, i32* %11, align 4
  %163 = add nsw i32 %161, %162
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i8, i8* %160, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = load i8*, i8** %16, align 8
  %168 = getelementptr inbounds i8, i8* %167, i64 0
  store i8 %166, i8* %168, align 1
  %169 = load i8*, i8** %23, align 8
  %170 = load i32, i32* %10, align 4
  %171 = load i32, i32* %12, align 4
  %172 = add nsw i32 %170, %171
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i8, i8* %169, i64 %173
  %175 = load i8, i8* %174, align 1
  %176 = load i8*, i8** %16, align 8
  %177 = getelementptr inbounds i8, i8* %176, i64 1
  store i8 %175, i8* %177, align 1
  %178 = load i8*, i8** %23, align 8
  %179 = load i32, i32* %10, align 4
  %180 = load i32, i32* %13, align 4
  %181 = add nsw i32 %179, %180
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds i8, i8* %178, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = load i8*, i8** %16, align 8
  %186 = getelementptr inbounds i8, i8* %185, i64 2
  store i8 %184, i8* %186, align 1
  %187 = load i8*, i8** %16, align 8
  %188 = getelementptr inbounds i8, i8* %187, i64 3
  store i8* %188, i8** %16, align 8
  %189 = load i8*, i8** %19, align 8
  %190 = getelementptr inbounds i8, i8* %189, i32 1
  store i8* %190, i8** %19, align 8
  %191 = load i8, i8* %189, align 1
  %192 = zext i8 %191 to i32
  store i32 %192, i32* %10, align 4
  %193 = load i8*, i8** %23, align 8
  %194 = load i32, i32* %10, align 4
  %195 = load i32, i32* %11, align 4
  %196 = add nsw i32 %194, %195
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds i8, i8* %193, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = load i8*, i8** %17, align 8
  %201 = getelementptr inbounds i8, i8* %200, i64 0
  store i8 %199, i8* %201, align 1
  %202 = load i8*, i8** %23, align 8
  %203 = load i32, i32* %10, align 4
  %204 = load i32, i32* %12, align 4
  %205 = add nsw i32 %203, %204
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds i8, i8* %202, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = load i8*, i8** %17, align 8
  %210 = getelementptr inbounds i8, i8* %209, i64 1
  store i8 %208, i8* %210, align 1
  %211 = load i8*, i8** %23, align 8
  %212 = load i32, i32* %10, align 4
  %213 = load i32, i32* %13, align 4
  %214 = add nsw i32 %212, %213
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds i8, i8* %211, i64 %215
  %217 = load i8, i8* %216, align 1
  %218 = load i8*, i8** %17, align 8
  %219 = getelementptr inbounds i8, i8* %218, i64 2
  store i8 %217, i8* %219, align 1
  %220 = load i8*, i8** %17, align 8
  %221 = getelementptr inbounds i8, i8* %220, i64 3
  store i8* %221, i8** %17, align 8
  %222 = load i8*, i8** %19, align 8
  %223 = getelementptr inbounds i8, i8* %222, i32 1
  store i8* %223, i8** %19, align 8
  %224 = load i8, i8* %222, align 1
  %225 = zext i8 %224 to i32
  store i32 %225, i32* %10, align 4
  %226 = load i8*, i8** %23, align 8
  %227 = load i32, i32* %10, align 4
  %228 = load i32, i32* %11, align 4
  %229 = add nsw i32 %227, %228
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds i8, i8* %226, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = load i8*, i8** %17, align 8
  %234 = getelementptr inbounds i8, i8* %233, i64 0
  store i8 %232, i8* %234, align 1
  %235 = load i8*, i8** %23, align 8
  %236 = load i32, i32* %10, align 4
  %237 = load i32, i32* %12, align 4
  %238 = add nsw i32 %236, %237
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds i8, i8* %235, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = load i8*, i8** %17, align 8
  %243 = getelementptr inbounds i8, i8* %242, i64 1
  store i8 %241, i8* %243, align 1
  %244 = load i8*, i8** %23, align 8
  %245 = load i32, i32* %10, align 4
  %246 = load i32, i32* %13, align 4
  %247 = add nsw i32 %245, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %244, i64 %248
  %250 = load i8, i8* %249, align 1
  %251 = load i8*, i8** %17, align 8
  %252 = getelementptr inbounds i8, i8* %251, i64 2
  store i8 %250, i8* %252, align 1
  %253 = load i8*, i8** %17, align 8
  %254 = getelementptr inbounds i8, i8* %253, i64 3
  store i8* %254, i8** %17, align 8
  br label %255

255:                                              ; preds = %91
  %256 = load i32, i32* %22, align 4
  %257 = add i32 %256, -1
  store i32 %257, i32* %22, align 4
  br label %88

258:                                              ; preds = %88
  %259 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %260 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %259, i32 0, i32 26
  %261 = load i32, i32* %260, align 8
  %262 = and i32 %261, 1
  %263 = icmp ne i32 %262, 0
  br i1 %263, label %264, label %354

264:                                              ; preds = %258
  %265 = load i8*, i8** %20, align 8
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i32
  store i32 %267, i32* %14, align 4
  %268 = load i8*, i8** %21, align 8
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i32
  store i32 %270, i32* %15, align 4
  %271 = load i32*, i32** %24, align 8
  %272 = load i32, i32* %15, align 4
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds i32, i32* %271, i64 %273
  %275 = load i32, i32* %274, align 4
  store i32 %275, i32* %11, align 4
  %276 = load i64*, i64** %27, align 8
  %277 = load i32, i32* %14, align 4
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds i64, i64* %276, i64 %278
  %280 = load i64, i64* %279, align 8
  %281 = load i64*, i64** %26, align 8
  %282 = load i32, i32* %15, align 4
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds i64, i64* %281, i64 %283
  %285 = load i64, i64* %284, align 8
  %286 = add nsw i64 %280, %285
  %287 = ashr i64 %286, 16
  %288 = trunc i64 %287 to i32
  store i32 %288, i32* %12, align 4
  %289 = load i32*, i32** %25, align 8
  %290 = load i32, i32* %14, align 4
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds i32, i32* %289, i64 %291
  %293 = load i32, i32* %292, align 4
  store i32 %293, i32* %13, align 4
  %294 = load i8*, i8** %18, align 8
  %295 = load i8, i8* %294, align 1
  %296 = zext i8 %295 to i32
  store i32 %296, i32* %10, align 4
  %297 = load i8*, i8** %23, align 8
  %298 = load i32, i32* %10, align 4
  %299 = load i32, i32* %11, align 4
  %300 = add nsw i32 %298, %299
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds i8, i8* %297, i64 %301
  %303 = load i8, i8* %302, align 1
  %304 = load i8*, i8** %16, align 8
  %305 = getelementptr inbounds i8, i8* %304, i64 0
  store i8 %303, i8* %305, align 1
  %306 = load i8*, i8** %23, align 8
  %307 = load i32, i32* %10, align 4
  %308 = load i32, i32* %12, align 4
  %309 = add nsw i32 %307, %308
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds i8, i8* %306, i64 %310
  %312 = load i8, i8* %311, align 1
  %313 = load i8*, i8** %16, align 8
  %314 = getelementptr inbounds i8, i8* %313, i64 1
  store i8 %312, i8* %314, align 1
  %315 = load i8*, i8** %23, align 8
  %316 = load i32, i32* %10, align 4
  %317 = load i32, i32* %13, align 4
  %318 = add nsw i32 %316, %317
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds i8, i8* %315, i64 %319
  %321 = load i8, i8* %320, align 1
  %322 = load i8*, i8** %16, align 8
  %323 = getelementptr inbounds i8, i8* %322, i64 2
  store i8 %321, i8* %323, align 1
  %324 = load i8*, i8** %19, align 8
  %325 = load i8, i8* %324, align 1
  %326 = zext i8 %325 to i32
  store i32 %326, i32* %10, align 4
  %327 = load i8*, i8** %23, align 8
  %328 = load i32, i32* %10, align 4
  %329 = load i32, i32* %11, align 4
  %330 = add nsw i32 %328, %329
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds i8, i8* %327, i64 %331
  %333 = load i8, i8* %332, align 1
  %334 = load i8*, i8** %17, align 8
  %335 = getelementptr inbounds i8, i8* %334, i64 0
  store i8 %333, i8* %335, align 1
  %336 = load i8*, i8** %23, align 8
  %337 = load i32, i32* %10, align 4
  %338 = load i32, i32* %12, align 4
  %339 = add nsw i32 %337, %338
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds i8, i8* %336, i64 %340
  %342 = load i8, i8* %341, align 1
  %343 = load i8*, i8** %17, align 8
  %344 = getelementptr inbounds i8, i8* %343, i64 1
  store i8 %342, i8* %344, align 1
  %345 = load i8*, i8** %23, align 8
  %346 = load i32, i32* %10, align 4
  %347 = load i32, i32* %13, align 4
  %348 = add nsw i32 %346, %347
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds i8, i8* %345, i64 %349
  %351 = load i8, i8* %350, align 1
  %352 = load i8*, i8** %17, align 8
  %353 = getelementptr inbounds i8, i8* %352, i64 2
  store i8 %351, i8* %353, align 1
  br label %354

354:                                              ; preds = %264, %258
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @merged_1v_upsample(%struct.jpeg_decompress_struct.469* %0, i8*** %1, i32* %2, i32 %3, i8** %4, i32* %5, i32 %6) #0 {
  %8 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %9 = alloca i8***, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8**, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.my_upsampler*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %8, align 8
  store i8*** %1, i8**** %9, align 8
  store i32* %2, i32** %10, align 8
  store i32 %3, i32* %11, align 4
  store i8** %4, i8*** %12, align 8
  store i32* %5, i32** %13, align 8
  store i32 %6, i32* %14, align 4
  %16 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %8, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %16, i32 0, i32 81
  %18 = load %struct.jpeg_upsampler.485*, %struct.jpeg_upsampler.485** %17, align 8
  %19 = bitcast %struct.jpeg_upsampler.485* %18 to %struct.my_upsampler*
  store %struct.my_upsampler* %19, %struct.my_upsampler** %15, align 8
  %20 = load %struct.my_upsampler*, %struct.my_upsampler** %15, align 8
  %21 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %20, i32 0, i32 1
  %22 = load void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**)*, void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**)** %21, align 8
  %23 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %8, align 8
  %24 = load i8***, i8**** %9, align 8
  %25 = load i32*, i32** %10, align 8
  %26 = load i32, i32* %25, align 4
  %27 = load i8**, i8*** %12, align 8
  %28 = load i32*, i32** %13, align 8
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8*, i8** %27, i64 %30
  call void %22(%struct.jpeg_decompress_struct.469* %23, i8*** %24, i32 %26, i8** %31)
  %32 = load i32*, i32** %13, align 8
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 4
  %35 = load i32*, i32** %10, align 8
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %35, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @h2v1_merged_upsample(%struct.jpeg_decompress_struct.469* %0, i8*** %1, i32 %2, i8** %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca i8***, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8**, align 8
  %9 = alloca %struct.my_upsampler*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i32*, align 8
  %23 = alloca i32*, align 8
  %24 = alloca i64*, align 8
  %25 = alloca i64*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store i8*** %1, i8**** %6, align 8
  store i32 %2, i32* %7, align 4
  store i8** %3, i8*** %8, align 8
  %26 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %26, i32 0, i32 81
  %28 = load %struct.jpeg_upsampler.485*, %struct.jpeg_upsampler.485** %27, align 8
  %29 = bitcast %struct.jpeg_upsampler.485* %28 to %struct.my_upsampler*
  store %struct.my_upsampler* %29, %struct.my_upsampler** %9, align 8
  %30 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %30, i32 0, i32 61
  %32 = load i8*, i8** %31, align 8
  store i8* %32, i8** %21, align 8
  %33 = load %struct.my_upsampler*, %struct.my_upsampler** %9, align 8
  %34 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %33, i32 0, i32 2
  %35 = load i32*, i32** %34, align 8
  store i32* %35, i32** %22, align 8
  %36 = load %struct.my_upsampler*, %struct.my_upsampler** %9, align 8
  %37 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %36, i32 0, i32 3
  %38 = load i32*, i32** %37, align 8
  store i32* %38, i32** %23, align 8
  %39 = load %struct.my_upsampler*, %struct.my_upsampler** %9, align 8
  %40 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %39, i32 0, i32 4
  %41 = load i64*, i64** %40, align 8
  store i64* %41, i64** %24, align 8
  %42 = load %struct.my_upsampler*, %struct.my_upsampler** %9, align 8
  %43 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %42, i32 0, i32 5
  %44 = load i64*, i64** %43, align 8
  store i64* %44, i64** %25, align 8
  %45 = load i8***, i8**** %6, align 8
  %46 = getelementptr inbounds i8**, i8*** %45, i64 0
  %47 = load i8**, i8*** %46, align 8
  %48 = load i32, i32* %7, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8*, i8** %47, i64 %49
  %51 = load i8*, i8** %50, align 8
  store i8* %51, i8** %17, align 8
  %52 = load i8***, i8**** %6, align 8
  %53 = getelementptr inbounds i8**, i8*** %52, i64 1
  %54 = load i8**, i8*** %53, align 8
  %55 = load i32, i32* %7, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i8*, i8** %54, i64 %56
  %58 = load i8*, i8** %57, align 8
  store i8* %58, i8** %18, align 8
  %59 = load i8***, i8**** %6, align 8
  %60 = getelementptr inbounds i8**, i8*** %59, i64 2
  %61 = load i8**, i8*** %60, align 8
  %62 = load i32, i32* %7, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8*, i8** %61, i64 %63
  %65 = load i8*, i8** %64, align 8
  store i8* %65, i8** %19, align 8
  %66 = load i8**, i8*** %8, align 8
  %67 = getelementptr inbounds i8*, i8** %66, i64 0
  %68 = load i8*, i8** %67, align 8
  store i8* %68, i8** %16, align 8
  %69 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %70 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %69, i32 0, i32 26
  %71 = load i32, i32* %70, align 8
  %72 = lshr i32 %71, 1
  store i32 %72, i32* %20, align 4
  br label %73

73:                                               ; preds = %174, %4
  %74 = load i32, i32* %20, align 4
  %75 = icmp ugt i32 %74, 0
  br i1 %75, label %76, label %177

76:                                               ; preds = %73
  %77 = load i8*, i8** %18, align 8
  %78 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %78, i8** %18, align 8
  %79 = load i8, i8* %77, align 1
  %80 = zext i8 %79 to i32
  store i32 %80, i32* %14, align 4
  %81 = load i8*, i8** %19, align 8
  %82 = getelementptr inbounds i8, i8* %81, i32 1
  store i8* %82, i8** %19, align 8
  %83 = load i8, i8* %81, align 1
  %84 = zext i8 %83 to i32
  store i32 %84, i32* %15, align 4
  %85 = load i32*, i32** %22, align 8
  %86 = load i32, i32* %15, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i32, i32* %85, i64 %87
  %89 = load i32, i32* %88, align 4
  store i32 %89, i32* %11, align 4
  %90 = load i64*, i64** %25, align 8
  %91 = load i32, i32* %14, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i64, i64* %90, i64 %92
  %94 = load i64, i64* %93, align 8
  %95 = load i64*, i64** %24, align 8
  %96 = load i32, i32* %15, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i64, i64* %95, i64 %97
  %99 = load i64, i64* %98, align 8
  %100 = add nsw i64 %94, %99
  %101 = ashr i64 %100, 16
  %102 = trunc i64 %101 to i32
  store i32 %102, i32* %12, align 4
  %103 = load i32*, i32** %23, align 8
  %104 = load i32, i32* %14, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i32, i32* %103, i64 %105
  %107 = load i32, i32* %106, align 4
  store i32 %107, i32* %13, align 4
  %108 = load i8*, i8** %17, align 8
  %109 = getelementptr inbounds i8, i8* %108, i32 1
  store i8* %109, i8** %17, align 8
  %110 = load i8, i8* %108, align 1
  %111 = zext i8 %110 to i32
  store i32 %111, i32* %10, align 4
  %112 = load i8*, i8** %21, align 8
  %113 = load i32, i32* %10, align 4
  %114 = load i32, i32* %11, align 4
  %115 = add nsw i32 %113, %114
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i8, i8* %112, i64 %116
  %118 = load i8, i8* %117, align 1
  %119 = load i8*, i8** %16, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 0
  store i8 %118, i8* %120, align 1
  %121 = load i8*, i8** %21, align 8
  %122 = load i32, i32* %10, align 4
  %123 = load i32, i32* %12, align 4
  %124 = add nsw i32 %122, %123
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %121, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = load i8*, i8** %16, align 8
  %129 = getelementptr inbounds i8, i8* %128, i64 1
  store i8 %127, i8* %129, align 1
  %130 = load i8*, i8** %21, align 8
  %131 = load i32, i32* %10, align 4
  %132 = load i32, i32* %13, align 4
  %133 = add nsw i32 %131, %132
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i8, i8* %130, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = load i8*, i8** %16, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 2
  store i8 %136, i8* %138, align 1
  %139 = load i8*, i8** %16, align 8
  %140 = getelementptr inbounds i8, i8* %139, i64 3
  store i8* %140, i8** %16, align 8
  %141 = load i8*, i8** %17, align 8
  %142 = getelementptr inbounds i8, i8* %141, i32 1
  store i8* %142, i8** %17, align 8
  %143 = load i8, i8* %141, align 1
  %144 = zext i8 %143 to i32
  store i32 %144, i32* %10, align 4
  %145 = load i8*, i8** %21, align 8
  %146 = load i32, i32* %10, align 4
  %147 = load i32, i32* %11, align 4
  %148 = add nsw i32 %146, %147
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i8, i8* %145, i64 %149
  %151 = load i8, i8* %150, align 1
  %152 = load i8*, i8** %16, align 8
  %153 = getelementptr inbounds i8, i8* %152, i64 0
  store i8 %151, i8* %153, align 1
  %154 = load i8*, i8** %21, align 8
  %155 = load i32, i32* %10, align 4
  %156 = load i32, i32* %12, align 4
  %157 = add nsw i32 %155, %156
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i8, i8* %154, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = load i8*, i8** %16, align 8
  %162 = getelementptr inbounds i8, i8* %161, i64 1
  store i8 %160, i8* %162, align 1
  %163 = load i8*, i8** %21, align 8
  %164 = load i32, i32* %10, align 4
  %165 = load i32, i32* %13, align 4
  %166 = add nsw i32 %164, %165
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i8, i8* %163, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = load i8*, i8** %16, align 8
  %171 = getelementptr inbounds i8, i8* %170, i64 2
  store i8 %169, i8* %171, align 1
  %172 = load i8*, i8** %16, align 8
  %173 = getelementptr inbounds i8, i8* %172, i64 3
  store i8* %173, i8** %16, align 8
  br label %174

174:                                              ; preds = %76
  %175 = load i32, i32* %20, align 4
  %176 = add i32 %175, -1
  store i32 %176, i32* %20, align 4
  br label %73

177:                                              ; preds = %73
  %178 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %179 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %178, i32 0, i32 26
  %180 = load i32, i32* %179, align 8
  %181 = and i32 %180, 1
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %183, label %243

183:                                              ; preds = %177
  %184 = load i8*, i8** %18, align 8
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  store i32 %186, i32* %14, align 4
  %187 = load i8*, i8** %19, align 8
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  store i32 %189, i32* %15, align 4
  %190 = load i32*, i32** %22, align 8
  %191 = load i32, i32* %15, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i32, i32* %190, i64 %192
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %11, align 4
  %195 = load i64*, i64** %25, align 8
  %196 = load i32, i32* %14, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds i64, i64* %195, i64 %197
  %199 = load i64, i64* %198, align 8
  %200 = load i64*, i64** %24, align 8
  %201 = load i32, i32* %15, align 4
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds i64, i64* %200, i64 %202
  %204 = load i64, i64* %203, align 8
  %205 = add nsw i64 %199, %204
  %206 = ashr i64 %205, 16
  %207 = trunc i64 %206 to i32
  store i32 %207, i32* %12, align 4
  %208 = load i32*, i32** %23, align 8
  %209 = load i32, i32* %14, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds i32, i32* %208, i64 %210
  %212 = load i32, i32* %211, align 4
  store i32 %212, i32* %13, align 4
  %213 = load i8*, i8** %17, align 8
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i32
  store i32 %215, i32* %10, align 4
  %216 = load i8*, i8** %21, align 8
  %217 = load i32, i32* %10, align 4
  %218 = load i32, i32* %11, align 4
  %219 = add nsw i32 %217, %218
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i8, i8* %216, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = load i8*, i8** %16, align 8
  %224 = getelementptr inbounds i8, i8* %223, i64 0
  store i8 %222, i8* %224, align 1
  %225 = load i8*, i8** %21, align 8
  %226 = load i32, i32* %10, align 4
  %227 = load i32, i32* %12, align 4
  %228 = add nsw i32 %226, %227
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds i8, i8* %225, i64 %229
  %231 = load i8, i8* %230, align 1
  %232 = load i8*, i8** %16, align 8
  %233 = getelementptr inbounds i8, i8* %232, i64 1
  store i8 %231, i8* %233, align 1
  %234 = load i8*, i8** %21, align 8
  %235 = load i32, i32* %10, align 4
  %236 = load i32, i32* %13, align 4
  %237 = add nsw i32 %235, %236
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds i8, i8* %234, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = load i8*, i8** %16, align 8
  %242 = getelementptr inbounds i8, i8* %241, i64 2
  store i8 %240, i8* %242, align 1
  br label %243

243:                                              ; preds = %183, %177
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @build_ycc_rgb_table.62(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_upsampler*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %6 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %6, i32 0, i32 81
  %8 = load %struct.jpeg_upsampler.485*, %struct.jpeg_upsampler.485** %7, align 8
  %9 = bitcast %struct.jpeg_upsampler.485* %8 to %struct.my_upsampler*
  store %struct.my_upsampler* %9, %struct.my_upsampler** %3, align 8
  %10 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %10, i32 0, i32 1
  %12 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %12, i32 0, i32 0
  %14 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %13, align 8
  %15 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %16 = bitcast %struct.jpeg_decompress_struct.469* %15 to %struct.jpeg_common_struct*
  %17 = call i8* %14(%struct.jpeg_common_struct* %16, i32 1, i64 1024)
  %18 = bitcast i8* %17 to i32*
  %19 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %20 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %19, i32 0, i32 2
  store i32* %18, i32** %20, align 8
  %21 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %21, i32 0, i32 1
  %23 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %23, i32 0, i32 0
  %25 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %24, align 8
  %26 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %27 = bitcast %struct.jpeg_decompress_struct.469* %26 to %struct.jpeg_common_struct*
  %28 = call i8* %25(%struct.jpeg_common_struct* %27, i32 1, i64 1024)
  %29 = bitcast i8* %28 to i32*
  %30 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %31 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %30, i32 0, i32 3
  store i32* %29, i32** %31, align 8
  %32 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %32, i32 0, i32 1
  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %33, align 8
  %35 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %34, i32 0, i32 0
  %36 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %35, align 8
  %37 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %38 = bitcast %struct.jpeg_decompress_struct.469* %37 to %struct.jpeg_common_struct*
  %39 = call i8* %36(%struct.jpeg_common_struct* %38, i32 1, i64 2048)
  %40 = bitcast i8* %39 to i64*
  %41 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %42 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %41, i32 0, i32 4
  store i64* %40, i64** %42, align 8
  %43 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %43, i32 0, i32 1
  %45 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %45, i32 0, i32 0
  %47 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %46, align 8
  %48 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %49 = bitcast %struct.jpeg_decompress_struct.469* %48 to %struct.jpeg_common_struct*
  %50 = call i8* %47(%struct.jpeg_common_struct* %49, i32 1, i64 2048)
  %51 = bitcast i8* %50 to i64*
  %52 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %53 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %52, i32 0, i32 5
  store i64* %51, i64** %53, align 8
  store i32 0, i32* %4, align 4
  store i64 -128, i64* %5, align 8
  br label %54

54:                                               ; preds = %97, %1
  %55 = load i32, i32* %4, align 4
  %56 = icmp sle i32 %55, 255
  br i1 %56, label %57, label %102

57:                                               ; preds = %54
  %58 = load i64, i64* %5, align 8
  %59 = mul nsw i64 91881, %58
  %60 = add nsw i64 %59, 32768
  %61 = ashr i64 %60, 16
  %62 = trunc i64 %61 to i32
  %63 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %64 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %63, i32 0, i32 2
  %65 = load i32*, i32** %64, align 8
  %66 = load i32, i32* %4, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %65, i64 %67
  store i32 %62, i32* %68, align 4
  %69 = load i64, i64* %5, align 8
  %70 = mul nsw i64 116130, %69
  %71 = add nsw i64 %70, 32768
  %72 = ashr i64 %71, 16
  %73 = trunc i64 %72 to i32
  %74 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %75 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %74, i32 0, i32 3
  %76 = load i32*, i32** %75, align 8
  %77 = load i32, i32* %4, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i32, i32* %76, i64 %78
  store i32 %73, i32* %79, align 4
  %80 = load i64, i64* %5, align 8
  %81 = mul nsw i64 -46802, %80
  %82 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %83 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %82, i32 0, i32 4
  %84 = load i64*, i64** %83, align 8
  %85 = load i32, i32* %4, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i64, i64* %84, i64 %86
  store i64 %81, i64* %87, align 8
  %88 = load i64, i64* %5, align 8
  %89 = mul nsw i64 -22554, %88
  %90 = add nsw i64 %89, 32768
  %91 = load %struct.my_upsampler*, %struct.my_upsampler** %3, align 8
  %92 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %91, i32 0, i32 5
  %93 = load i64*, i64** %92, align 8
  %94 = load i32, i32* %4, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i64, i64* %93, i64 %95
  store i64 %90, i64* %96, align 8
  br label %97

97:                                               ; preds = %57
  %98 = load i32, i32* %4, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %4, align 4
  %100 = load i64, i64* %5, align 8
  %101 = add nsw i64 %100, 1
  store i64 %101, i64* %5, align 8
  br label %54

102:                                              ; preds = %54
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_phuff_decoder(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.phuff_entropy_decoder*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %7 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %7, i32 0, i32 1
  %9 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %9, i32 0, i32 0
  %11 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %10, align 8
  %12 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %13 = bitcast %struct.jpeg_decompress_struct.469* %12 to %struct.jpeg_common_struct*
  %14 = call i8* %11(%struct.jpeg_common_struct* %13, i32 1, i64 96)
  %15 = bitcast i8* %14 to %struct.phuff_entropy_decoder*
  store %struct.phuff_entropy_decoder* %15, %struct.phuff_entropy_decoder** %3, align 8
  %16 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %17 = bitcast %struct.phuff_entropy_decoder* %16 to %struct.jpeg_entropy_decoder.483*
  %18 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %18, i32 0, i32 79
  store %struct.jpeg_entropy_decoder.483* %17, %struct.jpeg_entropy_decoder.483** %19, align 8
  %20 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %21 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %20, i32 0, i32 0
  %22 = getelementptr inbounds %struct.jpeg_entropy_decoder.483, %struct.jpeg_entropy_decoder.483* %21, i32 0, i32 0
  %23 = bitcast {}** %22 to void (%struct.jpeg_decompress_struct.469*)**
  store void (%struct.jpeg_decompress_struct.469*)* @start_pass_phuff_decoder, void (%struct.jpeg_decompress_struct.469*)** %23, align 8
  store i32 0, i32* %6, align 4
  br label %24

24:                                               ; preds = %33, %1
  %25 = load i32, i32* %6, align 4
  %26 = icmp slt i32 %25, 4
  br i1 %26, label %27, label %36

27:                                               ; preds = %24
  %28 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %29 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %28, i32 0, i32 4
  %30 = load i32, i32* %6, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [4 x %struct.d_derived_tbl*], [4 x %struct.d_derived_tbl*]* %29, i64 0, i64 %31
  store %struct.d_derived_tbl* null, %struct.d_derived_tbl** %32, align 8
  br label %33

33:                                               ; preds = %27
  %34 = load i32, i32* %6, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %6, align 4
  br label %24

36:                                               ; preds = %24
  %37 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %38 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %37, i32 0, i32 1
  %39 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %38, align 8
  %40 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %39, i32 0, i32 0
  %41 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %40, align 8
  %42 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %43 = bitcast %struct.jpeg_decompress_struct.469* %42 to %struct.jpeg_common_struct*
  %44 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %45 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %44, i32 0, i32 8
  %46 = load i32, i32* %45, align 8
  %47 = mul nsw i32 %46, 64
  %48 = sext i32 %47 to i64
  %49 = mul i64 %48, 4
  %50 = call i8* %41(%struct.jpeg_common_struct* %43, i32 1, i64 %49)
  %51 = bitcast i8* %50 to [64 x i32]*
  %52 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %52, i32 0, i32 38
  store [64 x i32]* %51, [64 x i32]** %53, align 8
  %54 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %54, i32 0, i32 38
  %56 = load [64 x i32]*, [64 x i32]** %55, align 8
  %57 = getelementptr inbounds [64 x i32], [64 x i32]* %56, i64 0
  %58 = getelementptr inbounds [64 x i32], [64 x i32]* %57, i64 0, i64 0
  store i32* %58, i32** %4, align 8
  store i32 0, i32* %5, align 4
  br label %59

59:                                               ; preds = %76, %36
  %60 = load i32, i32* %5, align 4
  %61 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %62 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %61, i32 0, i32 8
  %63 = load i32, i32* %62, align 8
  %64 = icmp slt i32 %60, %63
  br i1 %64, label %65, label %79

65:                                               ; preds = %59
  store i32 0, i32* %6, align 4
  br label %66

66:                                               ; preds = %72, %65
  %67 = load i32, i32* %6, align 4
  %68 = icmp slt i32 %67, 64
  br i1 %68, label %69, label %75

69:                                               ; preds = %66
  %70 = load i32*, i32** %4, align 8
  %71 = getelementptr inbounds i32, i32* %70, i32 1
  store i32* %71, i32** %4, align 8
  store i32 -1, i32* %70, align 4
  br label %72

72:                                               ; preds = %69
  %73 = load i32, i32* %6, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %6, align 4
  br label %66

75:                                               ; preds = %66
  br label %76

76:                                               ; preds = %75
  %77 = load i32, i32* %5, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %5, align 4
  br label %59

79:                                               ; preds = %59
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_phuff_decoder(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.phuff_entropy_decoder*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca %struct.jpeg_component_info*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %13 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %13, i32 0, i32 79
  %15 = load %struct.jpeg_entropy_decoder.483*, %struct.jpeg_entropy_decoder.483** %14, align 8
  %16 = bitcast %struct.jpeg_entropy_decoder.483* %15 to %struct.phuff_entropy_decoder*
  store %struct.phuff_entropy_decoder* %16, %struct.phuff_entropy_decoder** %3, align 8
  %17 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %17, i32 0, i32 68
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  %21 = zext i1 %20 to i32
  store i32 %21, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %22 = load i32, i32* %4, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %1
  %25 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %25, i32 0, i32 69
  %27 = load i32, i32* %26, align 8
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  store i32 1, i32* %5, align 4
  br label %30

30:                                               ; preds = %29, %24
  br label %52

31:                                               ; preds = %1
  %32 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %32, i32 0, i32 68
  %34 = load i32, i32* %33, align 4
  %35 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %35, i32 0, i32 69
  %37 = load i32, i32* %36, align 8
  %38 = icmp sgt i32 %34, %37
  br i1 %38, label %44, label %39

39:                                               ; preds = %31
  %40 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %40, i32 0, i32 69
  %42 = load i32, i32* %41, align 8
  %43 = icmp sge i32 %42, 64
  br i1 %43, label %44, label %45

44:                                               ; preds = %39, %31
  store i32 1, i32* %5, align 4
  br label %45

45:                                               ; preds = %44, %39
  %46 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %46, i32 0, i32 62
  %48 = load i32, i32* %47, align 8
  %49 = icmp ne i32 %48, 1
  br i1 %49, label %50, label %51

50:                                               ; preds = %45
  store i32 1, i32* %5, align 4
  br label %51

51:                                               ; preds = %50, %45
  br label %52

52:                                               ; preds = %51, %30
  %53 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %54 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %53, i32 0, i32 70
  %55 = load i32, i32* %54, align 4
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %68

57:                                               ; preds = %52
  %58 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %59 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %58, i32 0, i32 71
  %60 = load i32, i32* %59, align 8
  %61 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %62 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %61, i32 0, i32 70
  %63 = load i32, i32* %62, align 4
  %64 = sub nsw i32 %63, 1
  %65 = icmp ne i32 %60, %64
  br i1 %65, label %66, label %67

66:                                               ; preds = %57
  store i32 1, i32* %5, align 4
  br label %67

67:                                               ; preds = %66, %57
  br label %68

68:                                               ; preds = %67, %52
  %69 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %70 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %69, i32 0, i32 71
  %71 = load i32, i32* %70, align 8
  %72 = icmp sgt i32 %71, 13
  br i1 %72, label %73, label %74

73:                                               ; preds = %68
  store i32 1, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %68
  %75 = load i32, i32* %5, align 4
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %125

77:                                               ; preds = %74
  %78 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %79 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %78, i32 0, i32 0
  %80 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %79, align 8
  %81 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %80, i32 0, i32 5
  store i32 14, i32* %81, align 8
  %82 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %83 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %82, i32 0, i32 68
  %84 = load i32, i32* %83, align 4
  %85 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %86 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %85, i32 0, i32 0
  %87 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %86, align 8
  %88 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %87, i32 0, i32 6
  %89 = bitcast %union.anon* %88 to [8 x i32]*
  %90 = getelementptr inbounds [8 x i32], [8 x i32]* %89, i64 0, i64 0
  store i32 %84, i32* %90, align 4
  %91 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %92 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %91, i32 0, i32 69
  %93 = load i32, i32* %92, align 8
  %94 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %95 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %94, i32 0, i32 0
  %96 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %95, align 8
  %97 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %96, i32 0, i32 6
  %98 = bitcast %union.anon* %97 to [8 x i32]*
  %99 = getelementptr inbounds [8 x i32], [8 x i32]* %98, i64 0, i64 1
  store i32 %93, i32* %99, align 4
  %100 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %101 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %100, i32 0, i32 70
  %102 = load i32, i32* %101, align 4
  %103 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %104 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %103, i32 0, i32 0
  %105 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %104, align 8
  %106 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %105, i32 0, i32 6
  %107 = bitcast %union.anon* %106 to [8 x i32]*
  %108 = getelementptr inbounds [8 x i32], [8 x i32]* %107, i64 0, i64 2
  store i32 %102, i32* %108, align 4
  %109 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %110 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %109, i32 0, i32 71
  %111 = load i32, i32* %110, align 8
  %112 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %113 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %112, i32 0, i32 0
  %114 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %113, align 8
  %115 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %114, i32 0, i32 6
  %116 = bitcast %union.anon* %115 to [8 x i32]*
  %117 = getelementptr inbounds [8 x i32], [8 x i32]* %116, i64 0, i64 3
  store i32 %111, i32* %117, align 4
  %118 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %119 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %118, i32 0, i32 0
  %120 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %119, align 8
  %121 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %120, i32 0, i32 0
  %122 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %121, align 8
  %123 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %124 = bitcast %struct.jpeg_decompress_struct.469* %123 to %struct.jpeg_common_struct*
  call void %122(%struct.jpeg_common_struct* %124)
  br label %125

125:                                              ; preds = %77, %74
  store i32 0, i32* %6, align 4
  br label %126

126:                                              ; preds = %249, %125
  %127 = load i32, i32* %6, align 4
  %128 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %129 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %128, i32 0, i32 62
  %130 = load i32, i32* %129, align 8
  %131 = icmp slt i32 %127, %130
  br i1 %131, label %132, label %252

132:                                              ; preds = %126
  %133 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %134 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %133, i32 0, i32 63
  %135 = load i32, i32* %6, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %134, i64 0, i64 %136
  %138 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %137, align 8
  %139 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %138, i32 0, i32 1
  %140 = load i32, i32* %139, align 4
  store i32 %140, i32* %11, align 4
  %141 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %142 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %141, i32 0, i32 38
  %143 = load [64 x i32]*, [64 x i32]** %142, align 8
  %144 = load i32, i32* %11, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [64 x i32], [64 x i32]* %143, i64 %145
  %147 = getelementptr inbounds [64 x i32], [64 x i32]* %146, i64 0, i64 0
  store i32* %147, i32** %9, align 8
  %148 = load i32, i32* %4, align 4
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %180, label %150

150:                                              ; preds = %132
  %151 = load i32*, i32** %9, align 8
  %152 = getelementptr inbounds i32, i32* %151, i64 0
  %153 = load i32, i32* %152, align 4
  %154 = icmp slt i32 %153, 0
  br i1 %154, label %155, label %180

155:                                              ; preds = %150
  %156 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %157 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %156, i32 0, i32 0
  %158 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %157, align 8
  %159 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %158, i32 0, i32 5
  store i32 111, i32* %159, align 8
  %160 = load i32, i32* %11, align 4
  %161 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %162 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %161, i32 0, i32 0
  %163 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %162, align 8
  %164 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %163, i32 0, i32 6
  %165 = bitcast %union.anon* %164 to [8 x i32]*
  %166 = getelementptr inbounds [8 x i32], [8 x i32]* %165, i64 0, i64 0
  store i32 %160, i32* %166, align 4
  %167 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %168 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %167, i32 0, i32 0
  %169 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %168, align 8
  %170 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %169, i32 0, i32 6
  %171 = bitcast %union.anon* %170 to [8 x i32]*
  %172 = getelementptr inbounds [8 x i32], [8 x i32]* %171, i64 0, i64 1
  store i32 0, i32* %172, align 4
  %173 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %174 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %173, i32 0, i32 0
  %175 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %174, align 8
  %176 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %175, i32 0, i32 1
  %177 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %176, align 8
  %178 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %179 = bitcast %struct.jpeg_decompress_struct.469* %178 to %struct.jpeg_common_struct*
  call void %177(%struct.jpeg_common_struct* %179, i32 -1)
  br label %180

180:                                              ; preds = %155, %150, %132
  %181 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %182 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %181, i32 0, i32 68
  %183 = load i32, i32* %182, align 4
  store i32 %183, i32* %7, align 4
  br label %184

184:                                              ; preds = %245, %180
  %185 = load i32, i32* %7, align 4
  %186 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %187 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %186, i32 0, i32 69
  %188 = load i32, i32* %187, align 8
  %189 = icmp sle i32 %185, %188
  br i1 %189, label %190, label %248

190:                                              ; preds = %184
  %191 = load i32*, i32** %9, align 8
  %192 = load i32, i32* %7, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds i32, i32* %191, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = icmp slt i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %190
  br label %204

198:                                              ; preds = %190
  %199 = load i32*, i32** %9, align 8
  %200 = load i32, i32* %7, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds i32, i32* %199, i64 %201
  %203 = load i32, i32* %202, align 4
  br label %204

204:                                              ; preds = %198, %197
  %205 = phi i32 [ 0, %197 ], [ %203, %198 ]
  store i32 %205, i32* %12, align 4
  %206 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %207 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %206, i32 0, i32 70
  %208 = load i32, i32* %207, align 4
  %209 = load i32, i32* %12, align 4
  %210 = icmp ne i32 %208, %209
  br i1 %210, label %211, label %237

211:                                              ; preds = %204
  %212 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %213 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %212, i32 0, i32 0
  %214 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %213, align 8
  %215 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %214, i32 0, i32 5
  store i32 111, i32* %215, align 8
  %216 = load i32, i32* %11, align 4
  %217 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %218 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %217, i32 0, i32 0
  %219 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %218, align 8
  %220 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %219, i32 0, i32 6
  %221 = bitcast %union.anon* %220 to [8 x i32]*
  %222 = getelementptr inbounds [8 x i32], [8 x i32]* %221, i64 0, i64 0
  store i32 %216, i32* %222, align 4
  %223 = load i32, i32* %7, align 4
  %224 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %225 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %224, i32 0, i32 0
  %226 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %225, align 8
  %227 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %226, i32 0, i32 6
  %228 = bitcast %union.anon* %227 to [8 x i32]*
  %229 = getelementptr inbounds [8 x i32], [8 x i32]* %228, i64 0, i64 1
  store i32 %223, i32* %229, align 4
  %230 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %231 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %230, i32 0, i32 0
  %232 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %231, align 8
  %233 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %232, i32 0, i32 1
  %234 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %233, align 8
  %235 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %236 = bitcast %struct.jpeg_decompress_struct.469* %235 to %struct.jpeg_common_struct*
  call void %234(%struct.jpeg_common_struct* %236, i32 -1)
  br label %237

237:                                              ; preds = %211, %204
  %238 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %239 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %238, i32 0, i32 71
  %240 = load i32, i32* %239, align 8
  %241 = load i32*, i32** %9, align 8
  %242 = load i32, i32* %7, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds i32, i32* %241, i64 %243
  store i32 %240, i32* %244, align 4
  br label %245

245:                                              ; preds = %237
  %246 = load i32, i32* %7, align 4
  %247 = add nsw i32 %246, 1
  store i32 %247, i32* %7, align 4
  br label %184

248:                                              ; preds = %184
  br label %249

249:                                              ; preds = %248
  %250 = load i32, i32* %6, align 4
  %251 = add nsw i32 %250, 1
  store i32 %251, i32* %6, align 4
  br label %126

252:                                              ; preds = %126
  %253 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %254 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %253, i32 0, i32 70
  %255 = load i32, i32* %254, align 4
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %269

257:                                              ; preds = %252
  %258 = load i32, i32* %4, align 4
  %259 = icmp ne i32 %258, 0
  br i1 %259, label %260, label %264

260:                                              ; preds = %257
  %261 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %262 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %261, i32 0, i32 0
  %263 = getelementptr inbounds %struct.jpeg_entropy_decoder.483, %struct.jpeg_entropy_decoder.483* %262, i32 0, i32 1
  store i32 (%struct.jpeg_decompress_struct.469*, [64 x i16]**)* @decode_mcu_DC_first, i32 (%struct.jpeg_decompress_struct.469*, [64 x i16]**)** %263, align 8
  br label %268

264:                                              ; preds = %257
  %265 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %266 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %265, i32 0, i32 0
  %267 = getelementptr inbounds %struct.jpeg_entropy_decoder.483, %struct.jpeg_entropy_decoder.483* %266, i32 0, i32 1
  store i32 (%struct.jpeg_decompress_struct.469*, [64 x i16]**)* @decode_mcu_AC_first, i32 (%struct.jpeg_decompress_struct.469*, [64 x i16]**)** %267, align 8
  br label %268

268:                                              ; preds = %264, %260
  br label %281

269:                                              ; preds = %252
  %270 = load i32, i32* %4, align 4
  %271 = icmp ne i32 %270, 0
  br i1 %271, label %272, label %276

272:                                              ; preds = %269
  %273 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %274 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %273, i32 0, i32 0
  %275 = getelementptr inbounds %struct.jpeg_entropy_decoder.483, %struct.jpeg_entropy_decoder.483* %274, i32 0, i32 1
  store i32 (%struct.jpeg_decompress_struct.469*, [64 x i16]**)* @decode_mcu_DC_refine, i32 (%struct.jpeg_decompress_struct.469*, [64 x i16]**)** %275, align 8
  br label %280

276:                                              ; preds = %269
  %277 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %278 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %277, i32 0, i32 0
  %279 = getelementptr inbounds %struct.jpeg_entropy_decoder.483, %struct.jpeg_entropy_decoder.483* %278, i32 0, i32 1
  store i32 (%struct.jpeg_decompress_struct.469*, [64 x i16]**)* @decode_mcu_AC_refine, i32 (%struct.jpeg_decompress_struct.469*, [64 x i16]**)** %279, align 8
  br label %280

280:                                              ; preds = %276, %272
  br label %281

281:                                              ; preds = %280, %268
  store i32 0, i32* %6, align 4
  br label %282

282:                                              ; preds = %416, %281
  %283 = load i32, i32* %6, align 4
  %284 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %285 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %284, i32 0, i32 62
  %286 = load i32, i32* %285, align 8
  %287 = icmp slt i32 %283, %286
  br i1 %287, label %288, label %419

288:                                              ; preds = %282
  %289 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %290 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %289, i32 0, i32 63
  %291 = load i32, i32* %6, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %290, i64 0, i64 %292
  %294 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %293, align 8
  store %struct.jpeg_component_info* %294, %struct.jpeg_component_info** %10, align 8
  %295 = load i32, i32* %4, align 4
  %296 = icmp ne i32 %295, 0
  br i1 %296, label %297, label %352

297:                                              ; preds = %288
  %298 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %299 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %298, i32 0, i32 70
  %300 = load i32, i32* %299, align 4
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %351

302:                                              ; preds = %297
  %303 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %10, align 8
  %304 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %303, i32 0, i32 5
  %305 = load i32, i32* %304, align 4
  store i32 %305, i32* %8, align 4
  %306 = load i32, i32* %8, align 4
  %307 = icmp slt i32 %306, 0
  br i1 %307, label %319, label %308

308:                                              ; preds = %302
  %309 = load i32, i32* %8, align 4
  %310 = icmp sge i32 %309, 4
  br i1 %310, label %319, label %311

311:                                              ; preds = %308
  %312 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %313 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %312, i32 0, i32 40
  %314 = load i32, i32* %8, align 4
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %313, i64 0, i64 %315
  %317 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %316, align 8
  %318 = icmp eq %struct.JHUFF_TBL* %317, null
  br i1 %318, label %319, label %338

319:                                              ; preds = %311, %308, %302
  %320 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %321 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %320, i32 0, i32 0
  %322 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %321, align 8
  %323 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %322, i32 0, i32 5
  store i32 49, i32* %323, align 8
  %324 = load i32, i32* %8, align 4
  %325 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %326 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %325, i32 0, i32 0
  %327 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %326, align 8
  %328 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %327, i32 0, i32 6
  %329 = bitcast %union.anon* %328 to [8 x i32]*
  %330 = getelementptr inbounds [8 x i32], [8 x i32]* %329, i64 0, i64 0
  store i32 %324, i32* %330, align 4
  %331 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %332 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %331, i32 0, i32 0
  %333 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %332, align 8
  %334 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %333, i32 0, i32 0
  %335 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %334, align 8
  %336 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %337 = bitcast %struct.jpeg_decompress_struct.469* %336 to %struct.jpeg_common_struct*
  call void %335(%struct.jpeg_common_struct* %337)
  br label %338

338:                                              ; preds = %319, %311
  %339 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %340 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %341 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %340, i32 0, i32 40
  %342 = load i32, i32* %8, align 4
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %341, i64 0, i64 %343
  %345 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %344, align 8
  %346 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %347 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %346, i32 0, i32 4
  %348 = load i32, i32* %8, align 4
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds [4 x %struct.d_derived_tbl*], [4 x %struct.d_derived_tbl*]* %347, i64 0, i64 %349
  call void bitcast (void (%struct.jpeg_decompress_struct*, %struct.JHUFF_TBL*, %struct.d_derived_tbl**)* @jpeg_make_d_derived_tbl to void (%struct.jpeg_decompress_struct.469*, %struct.JHUFF_TBL*, %struct.d_derived_tbl**)*)(%struct.jpeg_decompress_struct.469* %339, %struct.JHUFF_TBL* %345, %struct.d_derived_tbl** %350)
  br label %351

351:                                              ; preds = %338, %297
  br label %409

352:                                              ; preds = %288
  %353 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %10, align 8
  %354 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %353, i32 0, i32 6
  %355 = load i32, i32* %354, align 8
  store i32 %355, i32* %8, align 4
  %356 = load i32, i32* %8, align 4
  %357 = icmp slt i32 %356, 0
  br i1 %357, label %369, label %358

358:                                              ; preds = %352
  %359 = load i32, i32* %8, align 4
  %360 = icmp sge i32 %359, 4
  br i1 %360, label %369, label %361

361:                                              ; preds = %358
  %362 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %363 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %362, i32 0, i32 41
  %364 = load i32, i32* %8, align 4
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %363, i64 0, i64 %365
  %367 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %366, align 8
  %368 = icmp eq %struct.JHUFF_TBL* %367, null
  br i1 %368, label %369, label %388

369:                                              ; preds = %361, %358, %352
  %370 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %371 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %370, i32 0, i32 0
  %372 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %371, align 8
  %373 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %372, i32 0, i32 5
  store i32 49, i32* %373, align 8
  %374 = load i32, i32* %8, align 4
  %375 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %376 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %375, i32 0, i32 0
  %377 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %376, align 8
  %378 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %377, i32 0, i32 6
  %379 = bitcast %union.anon* %378 to [8 x i32]*
  %380 = getelementptr inbounds [8 x i32], [8 x i32]* %379, i64 0, i64 0
  store i32 %374, i32* %380, align 4
  %381 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %382 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %381, i32 0, i32 0
  %383 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %382, align 8
  %384 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %383, i32 0, i32 0
  %385 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %384, align 8
  %386 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %387 = bitcast %struct.jpeg_decompress_struct.469* %386 to %struct.jpeg_common_struct*
  call void %385(%struct.jpeg_common_struct* %387)
  br label %388

388:                                              ; preds = %369, %361
  %389 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %390 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %391 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %390, i32 0, i32 41
  %392 = load i32, i32* %8, align 4
  %393 = sext i32 %392 to i64
  %394 = getelementptr inbounds [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*]* %391, i64 0, i64 %393
  %395 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %394, align 8
  %396 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %397 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %396, i32 0, i32 4
  %398 = load i32, i32* %8, align 4
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds [4 x %struct.d_derived_tbl*], [4 x %struct.d_derived_tbl*]* %397, i64 0, i64 %399
  call void bitcast (void (%struct.jpeg_decompress_struct*, %struct.JHUFF_TBL*, %struct.d_derived_tbl**)* @jpeg_make_d_derived_tbl to void (%struct.jpeg_decompress_struct.469*, %struct.JHUFF_TBL*, %struct.d_derived_tbl**)*)(%struct.jpeg_decompress_struct.469* %389, %struct.JHUFF_TBL* %395, %struct.d_derived_tbl** %400)
  %401 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %402 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %401, i32 0, i32 4
  %403 = load i32, i32* %8, align 4
  %404 = sext i32 %403 to i64
  %405 = getelementptr inbounds [4 x %struct.d_derived_tbl*], [4 x %struct.d_derived_tbl*]* %402, i64 0, i64 %404
  %406 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %405, align 8
  %407 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %408 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %407, i32 0, i32 5
  store %struct.d_derived_tbl* %406, %struct.d_derived_tbl** %408, align 8
  br label %409

409:                                              ; preds = %388, %351
  %410 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %411 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %410, i32 0, i32 2
  %412 = getelementptr inbounds %struct.savable_state.679, %struct.savable_state.679* %411, i32 0, i32 1
  %413 = load i32, i32* %6, align 4
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds [4 x i32], [4 x i32]* %412, i64 0, i64 %414
  store i32 0, i32* %415, align 4
  br label %416

416:                                              ; preds = %409
  %417 = load i32, i32* %6, align 4
  %418 = add nsw i32 %417, 1
  store i32 %418, i32* %6, align 4
  br label %282

419:                                              ; preds = %282
  %420 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %421 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %420, i32 0, i32 1
  %422 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %421, i32 0, i32 1
  store i32 0, i32* %422, align 8
  %423 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %424 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %423, i32 0, i32 1
  %425 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %424, i32 0, i32 0
  store i64 0, i64* %425, align 8
  %426 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %427 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %426, i32 0, i32 1
  %428 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %427, i32 0, i32 2
  store i32 0, i32* %428, align 4
  %429 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %430 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %429, i32 0, i32 2
  %431 = getelementptr inbounds %struct.savable_state.679, %struct.savable_state.679* %430, i32 0, i32 0
  store i32 0, i32* %431, align 8
  %432 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %433 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %432, i32 0, i32 49
  %434 = load i32, i32* %433, align 8
  %435 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %3, align 8
  %436 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %435, i32 0, i32 3
  store i32 %434, i32* %436, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decode_mcu_DC_first(%struct.jpeg_decompress_struct.469* %0, [64 x i16]** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %5 = alloca [64 x i16]**, align 8
  %6 = alloca %struct.phuff_entropy_decoder*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [64 x i16]*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.bitread_working_state.681, align 8
  %16 = alloca %struct.savable_state.679, align 4
  %17 = alloca %struct.d_derived_tbl*, align 8
  %18 = alloca %struct.jpeg_component_info*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %4, align 8
  store [64 x i16]** %1, [64 x i16]*** %5, align 8
  %21 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %21, i32 0, i32 79
  %23 = load %struct.jpeg_entropy_decoder.483*, %struct.jpeg_entropy_decoder.483** %22, align 8
  %24 = bitcast %struct.jpeg_entropy_decoder.483* %23 to %struct.phuff_entropy_decoder*
  store %struct.phuff_entropy_decoder* %24, %struct.phuff_entropy_decoder** %6, align 8
  %25 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %25, i32 0, i32 71
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %7, align 4
  %28 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %28, i32 0, i32 49
  %30 = load i32, i32* %29, align 8
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %2
  %33 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %34 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %33, i32 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %32
  %38 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %39 = call i32 @process_restart.65(%struct.jpeg_decompress_struct.469* %38)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %37
  store i32 0, i32* %3, align 4
  br label %271

42:                                               ; preds = %37
  br label %43

43:                                               ; preds = %42, %32
  br label %44

44:                                               ; preds = %43, %2
  %45 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %46 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %15, i32 0, i32 5
  store %struct.jpeg_decompress_struct.469* %45, %struct.jpeg_decompress_struct.469** %46, align 8
  %47 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %47, i32 0, i32 5
  %49 = load %struct.jpeg_source_mgr.473*, %struct.jpeg_source_mgr.473** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_source_mgr.473, %struct.jpeg_source_mgr.473* %49, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %15, i32 0, i32 0
  store i8* %51, i8** %52, align 8
  %53 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %54 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %53, i32 0, i32 5
  %55 = load %struct.jpeg_source_mgr.473*, %struct.jpeg_source_mgr.473** %54, align 8
  %56 = getelementptr inbounds %struct.jpeg_source_mgr.473, %struct.jpeg_source_mgr.473* %55, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %15, i32 0, i32 1
  store i64 %57, i64* %58, align 8
  %59 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %59, i32 0, i32 72
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %15, i32 0, i32 2
  store i32 %61, i32* %62, align 8
  %63 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %64 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %63, i32 0, i32 1
  %65 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %64, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %13, align 8
  %67 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %68 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %67, i32 0, i32 1
  %69 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %68, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %14, align 4
  %71 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %72 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %71, i32 0, i32 1
  %73 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %72, i32 0, i32 2
  %74 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %15, i32 0, i32 6
  store i32* %73, i32** %74, align 8
  %75 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %76 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %75, i32 0, i32 2
  %77 = bitcast %struct.savable_state.679* %16 to i8*
  %78 = bitcast %struct.savable_state.679* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 8 %78, i64 20, i1 false)
  store i32 0, i32* %10, align 4
  br label %79

79:                                               ; preds = %235, %44
  %80 = load i32, i32* %10, align 4
  %81 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %82 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %81, i32 0, i32 66
  %83 = load i32, i32* %82, align 8
  %84 = icmp slt i32 %80, %83
  br i1 %84, label %85, label %238

85:                                               ; preds = %79
  %86 = load [64 x i16]**, [64 x i16]*** %5, align 8
  %87 = load i32, i32* %10, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [64 x i16]*, [64 x i16]** %86, i64 %88
  %90 = load [64 x i16]*, [64 x i16]** %89, align 8
  store [64 x i16]* %90, [64 x i16]** %12, align 8
  %91 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %92 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %91, i32 0, i32 67
  %93 = load i32, i32* %10, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds [10 x i32], [10 x i32]* %92, i64 0, i64 %94
  %96 = load i32, i32* %95, align 4
  store i32 %96, i32* %11, align 4
  %97 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %98 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %97, i32 0, i32 63
  %99 = load i32, i32* %11, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %98, i64 0, i64 %100
  %102 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %101, align 8
  store %struct.jpeg_component_info* %102, %struct.jpeg_component_info** %18, align 8
  %103 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %104 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %103, i32 0, i32 4
  %105 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8
  %106 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %105, i32 0, i32 5
  %107 = load i32, i32* %106, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [4 x %struct.d_derived_tbl*], [4 x %struct.d_derived_tbl*]* %104, i64 0, i64 %108
  %110 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %109, align 8
  store %struct.d_derived_tbl* %110, %struct.d_derived_tbl** %17, align 8
  %111 = load i32, i32* %14, align 4
  %112 = icmp slt i32 %111, 8
  br i1 %112, label %113, label %128

113:                                              ; preds = %85
  %114 = load i64, i64* %13, align 8
  %115 = load i32, i32* %14, align 4
  %116 = call i32 bitcast (i32 (%struct.bitread_working_state*, i64, i32, i32)* @jpeg_fill_bit_buffer to i32 (%struct.bitread_working_state.681*, i64, i32, i32)*)(%struct.bitread_working_state.681* %15, i64 %114, i32 %115, i32 0)
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %119, label %118

118:                                              ; preds = %113
  store i32 0, i32* %3, align 4
  br label %271

119:                                              ; preds = %113
  %120 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %15, i32 0, i32 3
  %121 = load i64, i64* %120, align 8
  store i64 %121, i64* %13, align 8
  %122 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %15, i32 0, i32 4
  %123 = load i32, i32* %122, align 8
  store i32 %123, i32* %14, align 4
  %124 = load i32, i32* %14, align 4
  %125 = icmp slt i32 %124, 8
  br i1 %125, label %126, label %127

126:                                              ; preds = %119
  store i32 1, i32* %19, align 4
  br label %155

127:                                              ; preds = %119
  br label %128

128:                                              ; preds = %127, %85
  %129 = load i64, i64* %13, align 8
  %130 = load i32, i32* %14, align 4
  %131 = sub nsw i32 %130, 8
  %132 = zext i32 %131 to i64
  %133 = ashr i64 %129, %132
  %134 = trunc i64 %133 to i32
  %135 = and i32 %134, 255
  store i32 %135, i32* %20, align 4
  %136 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %17, align 8
  %137 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %136, i32 0, i32 4
  %138 = load i32, i32* %20, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [256 x i32], [256 x i32]* %137, i64 0, i64 %139
  %141 = load i32, i32* %140, align 4
  store i32 %141, i32* %19, align 4
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %143, label %154

143:                                              ; preds = %128
  %144 = load i32, i32* %19, align 4
  %145 = load i32, i32* %14, align 4
  %146 = sub nsw i32 %145, %144
  store i32 %146, i32* %14, align 4
  %147 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %17, align 8
  %148 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %147, i32 0, i32 5
  %149 = load i32, i32* %20, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [256 x i8], [256 x i8]* %148, i64 0, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  store i32 %153, i32* %8, align 4
  br label %168

154:                                              ; preds = %128
  store i32 9, i32* %19, align 4
  br label %155

155:                                              ; preds = %154, %126
  %156 = load i64, i64* %13, align 8
  %157 = load i32, i32* %14, align 4
  %158 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %17, align 8
  %159 = load i32, i32* %19, align 4
  %160 = call i32 bitcast (i32 (%struct.bitread_working_state*, i64, i32, %struct.d_derived_tbl*, i32)* @jpeg_huff_decode to i32 (%struct.bitread_working_state.681*, i64, i32, %struct.d_derived_tbl*, i32)*)(%struct.bitread_working_state.681* %15, i64 %156, i32 %157, %struct.d_derived_tbl* %158, i32 %159)
  store i32 %160, i32* %8, align 4
  %161 = icmp slt i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %155
  store i32 0, i32* %3, align 4
  br label %271

163:                                              ; preds = %155
  %164 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %15, i32 0, i32 3
  %165 = load i64, i64* %164, align 8
  store i64 %165, i64* %13, align 8
  %166 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %15, i32 0, i32 4
  %167 = load i32, i32* %166, align 8
  store i32 %167, i32* %14, align 4
  br label %168

168:                                              ; preds = %163, %143
  %169 = load i32, i32* %8, align 4
  %170 = icmp ne i32 %169, 0
  br i1 %170, label %171, label %216

171:                                              ; preds = %168
  %172 = load i32, i32* %14, align 4
  %173 = load i32, i32* %8, align 4
  %174 = icmp slt i32 %172, %173
  br i1 %174, label %175, label %187

175:                                              ; preds = %171
  %176 = load i64, i64* %13, align 8
  %177 = load i32, i32* %14, align 4
  %178 = load i32, i32* %8, align 4
  %179 = call i32 bitcast (i32 (%struct.bitread_working_state*, i64, i32, i32)* @jpeg_fill_bit_buffer to i32 (%struct.bitread_working_state.681*, i64, i32, i32)*)(%struct.bitread_working_state.681* %15, i64 %176, i32 %177, i32 %178)
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %182, label %181

181:                                              ; preds = %175
  store i32 0, i32* %3, align 4
  br label %271

182:                                              ; preds = %175
  %183 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %15, i32 0, i32 3
  %184 = load i64, i64* %183, align 8
  store i64 %184, i64* %13, align 8
  %185 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %15, i32 0, i32 4
  %186 = load i32, i32* %185, align 8
  store i32 %186, i32* %14, align 4
  br label %187

187:                                              ; preds = %182, %171
  %188 = load i64, i64* %13, align 8
  %189 = load i32, i32* %8, align 4
  %190 = load i32, i32* %14, align 4
  %191 = sub nsw i32 %190, %189
  store i32 %191, i32* %14, align 4
  %192 = zext i32 %191 to i64
  %193 = ashr i64 %188, %192
  %194 = trunc i64 %193 to i32
  %195 = load i32, i32* %8, align 4
  %196 = shl i32 1, %195
  %197 = sub nsw i32 %196, 1
  %198 = and i32 %194, %197
  store i32 %198, i32* %9, align 4
  %199 = load i32, i32* %9, align 4
  %200 = load i32, i32* %8, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [16 x i32], [16 x i32]* @extend_test.66, i64 0, i64 %201
  %203 = load i32, i32* %202, align 4
  %204 = icmp slt i32 %199, %203
  br i1 %204, label %205, label %212

205:                                              ; preds = %187
  %206 = load i32, i32* %9, align 4
  %207 = load i32, i32* %8, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [16 x i32], [16 x i32]* @extend_offset.67, i64 0, i64 %208
  %210 = load i32, i32* %209, align 4
  %211 = add nsw i32 %206, %210
  br label %214

212:                                              ; preds = %187
  %213 = load i32, i32* %9, align 4
  br label %214

214:                                              ; preds = %212, %205
  %215 = phi i32 [ %211, %205 ], [ %213, %212 ]
  store i32 %215, i32* %8, align 4
  br label %216

216:                                              ; preds = %214, %168
  %217 = getelementptr inbounds %struct.savable_state.679, %struct.savable_state.679* %16, i32 0, i32 1
  %218 = load i32, i32* %11, align 4
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds [4 x i32], [4 x i32]* %217, i64 0, i64 %219
  %221 = load i32, i32* %220, align 4
  %222 = load i32, i32* %8, align 4
  %223 = add nsw i32 %222, %221
  store i32 %223, i32* %8, align 4
  %224 = load i32, i32* %8, align 4
  %225 = getelementptr inbounds %struct.savable_state.679, %struct.savable_state.679* %16, i32 0, i32 1
  %226 = load i32, i32* %11, align 4
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds [4 x i32], [4 x i32]* %225, i64 0, i64 %227
  store i32 %224, i32* %228, align 4
  %229 = load i32, i32* %8, align 4
  %230 = load i32, i32* %7, align 4
  %231 = shl i32 %229, %230
  %232 = trunc i32 %231 to i16
  %233 = load [64 x i16]*, [64 x i16]** %12, align 8
  %234 = getelementptr inbounds [64 x i16], [64 x i16]* %233, i64 0, i64 0
  store i16 %232, i16* %234, align 2
  br label %235

235:                                              ; preds = %216
  %236 = load i32, i32* %10, align 4
  %237 = add nsw i32 %236, 1
  store i32 %237, i32* %10, align 4
  br label %79

238:                                              ; preds = %79
  %239 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %15, i32 0, i32 0
  %240 = load i8*, i8** %239, align 8
  %241 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %242 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %241, i32 0, i32 5
  %243 = load %struct.jpeg_source_mgr.473*, %struct.jpeg_source_mgr.473** %242, align 8
  %244 = getelementptr inbounds %struct.jpeg_source_mgr.473, %struct.jpeg_source_mgr.473* %243, i32 0, i32 0
  store i8* %240, i8** %244, align 8
  %245 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %15, i32 0, i32 1
  %246 = load i64, i64* %245, align 8
  %247 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %248 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %247, i32 0, i32 5
  %249 = load %struct.jpeg_source_mgr.473*, %struct.jpeg_source_mgr.473** %248, align 8
  %250 = getelementptr inbounds %struct.jpeg_source_mgr.473, %struct.jpeg_source_mgr.473* %249, i32 0, i32 1
  store i64 %246, i64* %250, align 8
  %251 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %15, i32 0, i32 2
  %252 = load i32, i32* %251, align 8
  %253 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %254 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %253, i32 0, i32 72
  store i32 %252, i32* %254, align 4
  %255 = load i64, i64* %13, align 8
  %256 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %257 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %256, i32 0, i32 1
  %258 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %257, i32 0, i32 0
  store i64 %255, i64* %258, align 8
  %259 = load i32, i32* %14, align 4
  %260 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %261 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %260, i32 0, i32 1
  %262 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %261, i32 0, i32 1
  store i32 %259, i32* %262, align 8
  %263 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %264 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %263, i32 0, i32 2
  %265 = bitcast %struct.savable_state.679* %264 to i8*
  %266 = bitcast %struct.savable_state.679* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %265, i8* align 4 %266, i64 20, i1 false)
  %267 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %268 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %267, i32 0, i32 3
  %269 = load i32, i32* %268, align 4
  %270 = add i32 %269, -1
  store i32 %270, i32* %268, align 4
  store i32 1, i32* %3, align 4
  br label %271

271:                                              ; preds = %238, %181, %162, %118, %41
  %272 = load i32, i32* %3, align 4
  ret i32 %272
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decode_mcu_AC_first(%struct.jpeg_decompress_struct.469* %0, [64 x i16]** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %5 = alloca [64 x i16]**, align 8
  %6 = alloca %struct.phuff_entropy_decoder*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [64 x i16]*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.bitread_working_state.681, align 8
  %17 = alloca %struct.d_derived_tbl*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %4, align 8
  store [64 x i16]** %1, [64 x i16]*** %5, align 8
  %20 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %20, i32 0, i32 79
  %22 = load %struct.jpeg_entropy_decoder.483*, %struct.jpeg_entropy_decoder.483** %21, align 8
  %23 = bitcast %struct.jpeg_entropy_decoder.483* %22 to %struct.phuff_entropy_decoder*
  store %struct.phuff_entropy_decoder* %23, %struct.phuff_entropy_decoder** %6, align 8
  %24 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %24, i32 0, i32 69
  %26 = load i32, i32* %25, align 8
  store i32 %26, i32* %7, align 4
  %27 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %27, i32 0, i32 71
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %8, align 4
  %30 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %30, i32 0, i32 49
  %32 = load i32, i32* %31, align 8
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %2
  %35 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %36 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %35, i32 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %34
  %40 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %41 = call i32 @process_restart.65(%struct.jpeg_decompress_struct.469* %40)
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  store i32 0, i32* %3, align 4
  br label %308

44:                                               ; preds = %39
  br label %45

45:                                               ; preds = %44, %34
  br label %46

46:                                               ; preds = %45, %2
  %47 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %48 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %47, i32 0, i32 2
  %49 = getelementptr inbounds %struct.savable_state.679, %struct.savable_state.679* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  store i32 %50, i32* %12, align 4
  %51 = load i32, i32* %12, align 4
  %52 = icmp ugt i32 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %46
  %54 = load i32, i32* %12, align 4
  %55 = add i32 %54, -1
  store i32 %55, i32* %12, align 4
  br label %299

56:                                               ; preds = %46
  %57 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %58 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %16, i32 0, i32 5
  store %struct.jpeg_decompress_struct.469* %57, %struct.jpeg_decompress_struct.469** %58, align 8
  %59 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %59, i32 0, i32 5
  %61 = load %struct.jpeg_source_mgr.473*, %struct.jpeg_source_mgr.473** %60, align 8
  %62 = getelementptr inbounds %struct.jpeg_source_mgr.473, %struct.jpeg_source_mgr.473* %61, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %16, i32 0, i32 0
  store i8* %63, i8** %64, align 8
  %65 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %66 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %65, i32 0, i32 5
  %67 = load %struct.jpeg_source_mgr.473*, %struct.jpeg_source_mgr.473** %66, align 8
  %68 = getelementptr inbounds %struct.jpeg_source_mgr.473, %struct.jpeg_source_mgr.473* %67, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %16, i32 0, i32 1
  store i64 %69, i64* %70, align 8
  %71 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %71, i32 0, i32 72
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %16, i32 0, i32 2
  store i32 %73, i32* %74, align 8
  %75 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %76 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %75, i32 0, i32 1
  %77 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %76, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  store i64 %78, i64* %14, align 8
  %79 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %80 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %79, i32 0, i32 1
  %81 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 8
  store i32 %82, i32* %15, align 4
  %83 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %84 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %83, i32 0, i32 1
  %85 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %84, i32 0, i32 2
  %86 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %16, i32 0, i32 6
  store i32* %85, i32** %86, align 8
  %87 = load [64 x i16]**, [64 x i16]*** %5, align 8
  %88 = getelementptr inbounds [64 x i16]*, [64 x i16]** %87, i64 0
  %89 = load [64 x i16]*, [64 x i16]** %88, align 8
  store [64 x i16]* %89, [64 x i16]** %13, align 8
  %90 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %91 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %90, i32 0, i32 5
  %92 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %91, align 8
  store %struct.d_derived_tbl* %92, %struct.d_derived_tbl** %17, align 8
  %93 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %94 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %93, i32 0, i32 68
  %95 = load i32, i32* %94, align 4
  store i32 %95, i32* %10, align 4
  br label %96

96:                                               ; preds = %271, %56
  %97 = load i32, i32* %10, align 4
  %98 = load i32, i32* %7, align 4
  %99 = icmp sle i32 %97, %98
  br i1 %99, label %100, label %274

100:                                              ; preds = %96
  %101 = load i32, i32* %15, align 4
  %102 = icmp slt i32 %101, 8
  br i1 %102, label %103, label %118

103:                                              ; preds = %100
  %104 = load i64, i64* %14, align 8
  %105 = load i32, i32* %15, align 4
  %106 = call i32 bitcast (i32 (%struct.bitread_working_state*, i64, i32, i32)* @jpeg_fill_bit_buffer to i32 (%struct.bitread_working_state.681*, i64, i32, i32)*)(%struct.bitread_working_state.681* %16, i64 %104, i32 %105, i32 0)
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %109, label %108

108:                                              ; preds = %103
  store i32 0, i32* %3, align 4
  br label %308

109:                                              ; preds = %103
  %110 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %16, i32 0, i32 3
  %111 = load i64, i64* %110, align 8
  store i64 %111, i64* %14, align 8
  %112 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %16, i32 0, i32 4
  %113 = load i32, i32* %112, align 8
  store i32 %113, i32* %15, align 4
  %114 = load i32, i32* %15, align 4
  %115 = icmp slt i32 %114, 8
  br i1 %115, label %116, label %117

116:                                              ; preds = %109
  store i32 1, i32* %18, align 4
  br label %145

117:                                              ; preds = %109
  br label %118

118:                                              ; preds = %117, %100
  %119 = load i64, i64* %14, align 8
  %120 = load i32, i32* %15, align 4
  %121 = sub nsw i32 %120, 8
  %122 = zext i32 %121 to i64
  %123 = ashr i64 %119, %122
  %124 = trunc i64 %123 to i32
  %125 = and i32 %124, 255
  store i32 %125, i32* %19, align 4
  %126 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %17, align 8
  %127 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %126, i32 0, i32 4
  %128 = load i32, i32* %19, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [256 x i32], [256 x i32]* %127, i64 0, i64 %129
  %131 = load i32, i32* %130, align 4
  store i32 %131, i32* %18, align 4
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %133, label %144

133:                                              ; preds = %118
  %134 = load i32, i32* %18, align 4
  %135 = load i32, i32* %15, align 4
  %136 = sub nsw i32 %135, %134
  store i32 %136, i32* %15, align 4
  %137 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %17, align 8
  %138 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %137, i32 0, i32 5
  %139 = load i32, i32* %19, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds [256 x i8], [256 x i8]* %138, i64 0, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  store i32 %143, i32* %9, align 4
  br label %158

144:                                              ; preds = %118
  store i32 9, i32* %18, align 4
  br label %145

145:                                              ; preds = %144, %116
  %146 = load i64, i64* %14, align 8
  %147 = load i32, i32* %15, align 4
  %148 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %17, align 8
  %149 = load i32, i32* %18, align 4
  %150 = call i32 bitcast (i32 (%struct.bitread_working_state*, i64, i32, %struct.d_derived_tbl*, i32)* @jpeg_huff_decode to i32 (%struct.bitread_working_state.681*, i64, i32, %struct.d_derived_tbl*, i32)*)(%struct.bitread_working_state.681* %16, i64 %146, i32 %147, %struct.d_derived_tbl* %148, i32 %149)
  store i32 %150, i32* %9, align 4
  %151 = icmp slt i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %145
  store i32 0, i32* %3, align 4
  br label %308

153:                                              ; preds = %145
  %154 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %16, i32 0, i32 3
  %155 = load i64, i64* %154, align 8
  store i64 %155, i64* %14, align 8
  %156 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %16, i32 0, i32 4
  %157 = load i32, i32* %156, align 8
  store i32 %157, i32* %15, align 4
  br label %158

158:                                              ; preds = %153, %133
  %159 = load i32, i32* %9, align 4
  %160 = ashr i32 %159, 4
  store i32 %160, i32* %11, align 4
  %161 = load i32, i32* %9, align 4
  %162 = and i32 %161, 15
  store i32 %162, i32* %9, align 4
  %163 = load i32, i32* %9, align 4
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %165, label %224

165:                                              ; preds = %158
  %166 = load i32, i32* %11, align 4
  %167 = load i32, i32* %10, align 4
  %168 = add nsw i32 %167, %166
  store i32 %168, i32* %10, align 4
  %169 = load i32, i32* %15, align 4
  %170 = load i32, i32* %9, align 4
  %171 = icmp slt i32 %169, %170
  br i1 %171, label %172, label %184

172:                                              ; preds = %165
  %173 = load i64, i64* %14, align 8
  %174 = load i32, i32* %15, align 4
  %175 = load i32, i32* %9, align 4
  %176 = call i32 bitcast (i32 (%struct.bitread_working_state*, i64, i32, i32)* @jpeg_fill_bit_buffer to i32 (%struct.bitread_working_state.681*, i64, i32, i32)*)(%struct.bitread_working_state.681* %16, i64 %173, i32 %174, i32 %175)
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %179, label %178

178:                                              ; preds = %172
  store i32 0, i32* %3, align 4
  br label %308

179:                                              ; preds = %172
  %180 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %16, i32 0, i32 3
  %181 = load i64, i64* %180, align 8
  store i64 %181, i64* %14, align 8
  %182 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %16, i32 0, i32 4
  %183 = load i32, i32* %182, align 8
  store i32 %183, i32* %15, align 4
  br label %184

184:                                              ; preds = %179, %165
  %185 = load i64, i64* %14, align 8
  %186 = load i32, i32* %9, align 4
  %187 = load i32, i32* %15, align 4
  %188 = sub nsw i32 %187, %186
  store i32 %188, i32* %15, align 4
  %189 = zext i32 %188 to i64
  %190 = ashr i64 %185, %189
  %191 = trunc i64 %190 to i32
  %192 = load i32, i32* %9, align 4
  %193 = shl i32 1, %192
  %194 = sub nsw i32 %193, 1
  %195 = and i32 %191, %194
  store i32 %195, i32* %11, align 4
  %196 = load i32, i32* %11, align 4
  %197 = load i32, i32* %9, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [16 x i32], [16 x i32]* @extend_test.66, i64 0, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = icmp slt i32 %196, %200
  br i1 %201, label %202, label %209

202:                                              ; preds = %184
  %203 = load i32, i32* %11, align 4
  %204 = load i32, i32* %9, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [16 x i32], [16 x i32]* @extend_offset.67, i64 0, i64 %205
  %207 = load i32, i32* %206, align 4
  %208 = add nsw i32 %203, %207
  br label %211

209:                                              ; preds = %184
  %210 = load i32, i32* %11, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i32 [ %208, %202 ], [ %210, %209 ]
  store i32 %212, i32* %9, align 4
  %213 = load i32, i32* %9, align 4
  %214 = load i32, i32* %8, align 4
  %215 = shl i32 %213, %214
  %216 = trunc i32 %215 to i16
  %217 = load [64 x i16]*, [64 x i16]** %13, align 8
  %218 = load i32, i32* %10, align 4
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %219
  %221 = load i32, i32* %220, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds [64 x i16], [64 x i16]* %217, i64 0, i64 %222
  store i16 %216, i16* %223, align 2
  br label %270

224:                                              ; preds = %158
  %225 = load i32, i32* %11, align 4
  %226 = icmp eq i32 %225, 15
  br i1 %226, label %227, label %230

227:                                              ; preds = %224
  %228 = load i32, i32* %10, align 4
  %229 = add nsw i32 %228, 15
  store i32 %229, i32* %10, align 4
  br label %269

230:                                              ; preds = %224
  %231 = load i32, i32* %11, align 4
  %232 = shl i32 1, %231
  store i32 %232, i32* %12, align 4
  %233 = load i32, i32* %11, align 4
  %234 = icmp ne i32 %233, 0
  br i1 %234, label %235, label %266

235:                                              ; preds = %230
  %236 = load i32, i32* %15, align 4
  %237 = load i32, i32* %11, align 4
  %238 = icmp slt i32 %236, %237
  br i1 %238, label %239, label %251

239:                                              ; preds = %235
  %240 = load i64, i64* %14, align 8
  %241 = load i32, i32* %15, align 4
  %242 = load i32, i32* %11, align 4
  %243 = call i32 bitcast (i32 (%struct.bitread_working_state*, i64, i32, i32)* @jpeg_fill_bit_buffer to i32 (%struct.bitread_working_state.681*, i64, i32, i32)*)(%struct.bitread_working_state.681* %16, i64 %240, i32 %241, i32 %242)
  %244 = icmp ne i32 %243, 0
  br i1 %244, label %246, label %245

245:                                              ; preds = %239
  store i32 0, i32* %3, align 4
  br label %308

246:                                              ; preds = %239
  %247 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %16, i32 0, i32 3
  %248 = load i64, i64* %247, align 8
  store i64 %248, i64* %14, align 8
  %249 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %16, i32 0, i32 4
  %250 = load i32, i32* %249, align 8
  store i32 %250, i32* %15, align 4
  br label %251

251:                                              ; preds = %246, %235
  %252 = load i64, i64* %14, align 8
  %253 = load i32, i32* %11, align 4
  %254 = load i32, i32* %15, align 4
  %255 = sub nsw i32 %254, %253
  store i32 %255, i32* %15, align 4
  %256 = zext i32 %255 to i64
  %257 = ashr i64 %252, %256
  %258 = trunc i64 %257 to i32
  %259 = load i32, i32* %11, align 4
  %260 = shl i32 1, %259
  %261 = sub nsw i32 %260, 1
  %262 = and i32 %258, %261
  store i32 %262, i32* %11, align 4
  %263 = load i32, i32* %11, align 4
  %264 = load i32, i32* %12, align 4
  %265 = add i32 %264, %263
  store i32 %265, i32* %12, align 4
  br label %266

266:                                              ; preds = %251, %230
  %267 = load i32, i32* %12, align 4
  %268 = add i32 %267, -1
  store i32 %268, i32* %12, align 4
  br label %274

269:                                              ; preds = %227
  br label %270

270:                                              ; preds = %269, %211
  br label %271

271:                                              ; preds = %270
  %272 = load i32, i32* %10, align 4
  %273 = add nsw i32 %272, 1
  store i32 %273, i32* %10, align 4
  br label %96

274:                                              ; preds = %266, %96
  %275 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %16, i32 0, i32 0
  %276 = load i8*, i8** %275, align 8
  %277 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %278 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %277, i32 0, i32 5
  %279 = load %struct.jpeg_source_mgr.473*, %struct.jpeg_source_mgr.473** %278, align 8
  %280 = getelementptr inbounds %struct.jpeg_source_mgr.473, %struct.jpeg_source_mgr.473* %279, i32 0, i32 0
  store i8* %276, i8** %280, align 8
  %281 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %16, i32 0, i32 1
  %282 = load i64, i64* %281, align 8
  %283 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %284 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %283, i32 0, i32 5
  %285 = load %struct.jpeg_source_mgr.473*, %struct.jpeg_source_mgr.473** %284, align 8
  %286 = getelementptr inbounds %struct.jpeg_source_mgr.473, %struct.jpeg_source_mgr.473* %285, i32 0, i32 1
  store i64 %282, i64* %286, align 8
  %287 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %16, i32 0, i32 2
  %288 = load i32, i32* %287, align 8
  %289 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %290 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %289, i32 0, i32 72
  store i32 %288, i32* %290, align 4
  %291 = load i64, i64* %14, align 8
  %292 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %293 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %292, i32 0, i32 1
  %294 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %293, i32 0, i32 0
  store i64 %291, i64* %294, align 8
  %295 = load i32, i32* %15, align 4
  %296 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %297 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %296, i32 0, i32 1
  %298 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %297, i32 0, i32 1
  store i32 %295, i32* %298, align 8
  br label %299

299:                                              ; preds = %274, %53
  %300 = load i32, i32* %12, align 4
  %301 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %302 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %301, i32 0, i32 2
  %303 = getelementptr inbounds %struct.savable_state.679, %struct.savable_state.679* %302, i32 0, i32 0
  store i32 %300, i32* %303, align 8
  %304 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %305 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %304, i32 0, i32 3
  %306 = load i32, i32* %305, align 4
  %307 = add i32 %306, -1
  store i32 %307, i32* %305, align 4
  store i32 1, i32* %3, align 4
  br label %308

308:                                              ; preds = %299, %245, %178, %152, %108, %43
  %309 = load i32, i32* %3, align 4
  ret i32 %309
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decode_mcu_DC_refine(%struct.jpeg_decompress_struct.469* %0, [64 x i16]** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %5 = alloca [64 x i16]**, align 8
  %6 = alloca %struct.phuff_entropy_decoder*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [64 x i16]*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.bitread_working_state.681, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %4, align 8
  store [64 x i16]** %1, [64 x i16]*** %5, align 8
  %13 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %13, i32 0, i32 79
  %15 = load %struct.jpeg_entropy_decoder.483*, %struct.jpeg_entropy_decoder.483** %14, align 8
  %16 = bitcast %struct.jpeg_entropy_decoder.483* %15 to %struct.phuff_entropy_decoder*
  store %struct.phuff_entropy_decoder* %16, %struct.phuff_entropy_decoder** %6, align 8
  %17 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %17, i32 0, i32 71
  %19 = load i32, i32* %18, align 8
  %20 = shl i32 1, %19
  store i32 %20, i32* %7, align 4
  %21 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %21, i32 0, i32 49
  %23 = load i32, i32* %22, align 8
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %2
  %26 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %27 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %26, i32 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %25
  %31 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %32 = call i32 @process_restart.65(%struct.jpeg_decompress_struct.469* %31)
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %30
  store i32 0, i32* %3, align 4
  br label %143

35:                                               ; preds = %30
  br label %36

36:                                               ; preds = %35, %25
  br label %37

37:                                               ; preds = %36, %2
  %38 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %39 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %12, i32 0, i32 5
  store %struct.jpeg_decompress_struct.469* %38, %struct.jpeg_decompress_struct.469** %39, align 8
  %40 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %40, i32 0, i32 5
  %42 = load %struct.jpeg_source_mgr.473*, %struct.jpeg_source_mgr.473** %41, align 8
  %43 = getelementptr inbounds %struct.jpeg_source_mgr.473, %struct.jpeg_source_mgr.473* %42, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %12, i32 0, i32 0
  store i8* %44, i8** %45, align 8
  %46 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %46, i32 0, i32 5
  %48 = load %struct.jpeg_source_mgr.473*, %struct.jpeg_source_mgr.473** %47, align 8
  %49 = getelementptr inbounds %struct.jpeg_source_mgr.473, %struct.jpeg_source_mgr.473* %48, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %12, i32 0, i32 1
  store i64 %50, i64* %51, align 8
  %52 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %52, i32 0, i32 72
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %12, i32 0, i32 2
  store i32 %54, i32* %55, align 8
  %56 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %57 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %56, i32 0, i32 1
  %58 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %57, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %10, align 8
  %60 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %61 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %60, i32 0, i32 1
  %62 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 8
  store i32 %63, i32* %11, align 4
  %64 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %65 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %64, i32 0, i32 1
  %66 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %65, i32 0, i32 2
  %67 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %12, i32 0, i32 6
  store i32* %66, i32** %67, align 8
  store i32 0, i32* %8, align 4
  br label %68

68:                                               ; preds = %111, %37
  %69 = load i32, i32* %8, align 4
  %70 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %71 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %70, i32 0, i32 66
  %72 = load i32, i32* %71, align 8
  %73 = icmp slt i32 %69, %72
  br i1 %73, label %74, label %114

74:                                               ; preds = %68
  %75 = load [64 x i16]**, [64 x i16]*** %5, align 8
  %76 = load i32, i32* %8, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [64 x i16]*, [64 x i16]** %75, i64 %77
  %79 = load [64 x i16]*, [64 x i16]** %78, align 8
  store [64 x i16]* %79, [64 x i16]** %9, align 8
  %80 = load i32, i32* %11, align 4
  %81 = icmp slt i32 %80, 1
  br i1 %81, label %82, label %93

82:                                               ; preds = %74
  %83 = load i64, i64* %10, align 8
  %84 = load i32, i32* %11, align 4
  %85 = call i32 bitcast (i32 (%struct.bitread_working_state*, i64, i32, i32)* @jpeg_fill_bit_buffer to i32 (%struct.bitread_working_state.681*, i64, i32, i32)*)(%struct.bitread_working_state.681* %12, i64 %83, i32 %84, i32 1)
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %88, label %87

87:                                               ; preds = %82
  store i32 0, i32* %3, align 4
  br label %143

88:                                               ; preds = %82
  %89 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %12, i32 0, i32 3
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %10, align 8
  %91 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %12, i32 0, i32 4
  %92 = load i32, i32* %91, align 8
  store i32 %92, i32* %11, align 4
  br label %93

93:                                               ; preds = %88, %74
  %94 = load i64, i64* %10, align 8
  %95 = load i32, i32* %11, align 4
  %96 = sub nsw i32 %95, 1
  store i32 %96, i32* %11, align 4
  %97 = zext i32 %96 to i64
  %98 = ashr i64 %94, %97
  %99 = trunc i64 %98 to i32
  %100 = and i32 %99, 1
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %102, label %110

102:                                              ; preds = %93
  %103 = load i32, i32* %7, align 4
  %104 = load [64 x i16]*, [64 x i16]** %9, align 8
  %105 = getelementptr inbounds [64 x i16], [64 x i16]* %104, i64 0, i64 0
  %106 = load i16, i16* %105, align 2
  %107 = sext i16 %106 to i32
  %108 = or i32 %107, %103
  %109 = trunc i32 %108 to i16
  store i16 %109, i16* %105, align 2
  br label %110

110:                                              ; preds = %102, %93
  br label %111

111:                                              ; preds = %110
  %112 = load i32, i32* %8, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %8, align 4
  br label %68

114:                                              ; preds = %68
  %115 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %12, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %118 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %117, i32 0, i32 5
  %119 = load %struct.jpeg_source_mgr.473*, %struct.jpeg_source_mgr.473** %118, align 8
  %120 = getelementptr inbounds %struct.jpeg_source_mgr.473, %struct.jpeg_source_mgr.473* %119, i32 0, i32 0
  store i8* %116, i8** %120, align 8
  %121 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %12, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %124 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %123, i32 0, i32 5
  %125 = load %struct.jpeg_source_mgr.473*, %struct.jpeg_source_mgr.473** %124, align 8
  %126 = getelementptr inbounds %struct.jpeg_source_mgr.473, %struct.jpeg_source_mgr.473* %125, i32 0, i32 1
  store i64 %122, i64* %126, align 8
  %127 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %12, i32 0, i32 2
  %128 = load i32, i32* %127, align 8
  %129 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %130 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %129, i32 0, i32 72
  store i32 %128, i32* %130, align 4
  %131 = load i64, i64* %10, align 8
  %132 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %133 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %132, i32 0, i32 1
  %134 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %133, i32 0, i32 0
  store i64 %131, i64* %134, align 8
  %135 = load i32, i32* %11, align 4
  %136 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %137 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %136, i32 0, i32 1
  %138 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %137, i32 0, i32 1
  store i32 %135, i32* %138, align 8
  %139 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %140 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %139, i32 0, i32 3
  %141 = load i32, i32* %140, align 4
  %142 = add i32 %141, -1
  store i32 %142, i32* %140, align 4
  store i32 1, i32* %3, align 4
  br label %143

143:                                              ; preds = %114, %87, %34
  %144 = load i32, i32* %3, align 4
  ret i32 %144
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decode_mcu_AC_refine(%struct.jpeg_decompress_struct.469* %0, [64 x i16]** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %5 = alloca [64 x i16]**, align 8
  %6 = alloca %struct.phuff_entropy_decoder*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca [64 x i16]*, align 8
  %15 = alloca i16*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.bitread_working_state.681, align 8
  %19 = alloca %struct.d_derived_tbl*, align 8
  %20 = alloca i32, align 4
  %21 = alloca [64 x i32], align 16
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %4, align 8
  store [64 x i16]** %1, [64 x i16]*** %5, align 8
  %25 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %25, i32 0, i32 79
  %27 = load %struct.jpeg_entropy_decoder.483*, %struct.jpeg_entropy_decoder.483** %26, align 8
  %28 = bitcast %struct.jpeg_entropy_decoder.483* %27 to %struct.phuff_entropy_decoder*
  store %struct.phuff_entropy_decoder* %28, %struct.phuff_entropy_decoder** %6, align 8
  %29 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %29, i32 0, i32 69
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %7, align 4
  %32 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %32, i32 0, i32 71
  %34 = load i32, i32* %33, align 8
  %35 = shl i32 1, %34
  store i32 %35, i32* %8, align 4
  %36 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %36, i32 0, i32 71
  %38 = load i32, i32* %37, align 8
  %39 = shl i32 -1, %38
  store i32 %39, i32* %9, align 4
  %40 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %40, i32 0, i32 49
  %42 = load i32, i32* %41, align 8
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %2
  %45 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %46 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %45, i32 0, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %55

49:                                               ; preds = %44
  %50 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %51 = call i32 @process_restart.65(%struct.jpeg_decompress_struct.469* %50)
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  store i32 0, i32* %3, align 4
  br label %486

54:                                               ; preds = %49
  br label %55

55:                                               ; preds = %54, %44
  br label %56

56:                                               ; preds = %55, %2
  %57 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %58 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 5
  store %struct.jpeg_decompress_struct.469* %57, %struct.jpeg_decompress_struct.469** %58, align 8
  %59 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %59, i32 0, i32 5
  %61 = load %struct.jpeg_source_mgr.473*, %struct.jpeg_source_mgr.473** %60, align 8
  %62 = getelementptr inbounds %struct.jpeg_source_mgr.473, %struct.jpeg_source_mgr.473* %61, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 0
  store i8* %63, i8** %64, align 8
  %65 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %66 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %65, i32 0, i32 5
  %67 = load %struct.jpeg_source_mgr.473*, %struct.jpeg_source_mgr.473** %66, align 8
  %68 = getelementptr inbounds %struct.jpeg_source_mgr.473, %struct.jpeg_source_mgr.473* %67, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 1
  store i64 %69, i64* %70, align 8
  %71 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %71, i32 0, i32 72
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 2
  store i32 %73, i32* %74, align 8
  %75 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %76 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %75, i32 0, i32 1
  %77 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %76, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  store i64 %78, i64* %16, align 8
  %79 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %80 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %79, i32 0, i32 1
  %81 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 8
  store i32 %82, i32* %17, align 4
  %83 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %84 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %83, i32 0, i32 1
  %85 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %84, i32 0, i32 2
  %86 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 6
  store i32* %85, i32** %86, align 8
  %87 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %88 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %87, i32 0, i32 2
  %89 = getelementptr inbounds %struct.savable_state.679, %struct.savable_state.679* %88, i32 0, i32 0
  %90 = load i32, i32* %89, align 8
  store i32 %90, i32* %13, align 4
  %91 = load [64 x i16]**, [64 x i16]*** %5, align 8
  %92 = getelementptr inbounds [64 x i16]*, [64 x i16]** %91, i64 0
  %93 = load [64 x i16]*, [64 x i16]** %92, align 8
  store [64 x i16]* %93, [64 x i16]** %14, align 8
  %94 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %95 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %94, i32 0, i32 5
  %96 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %95, align 8
  store %struct.d_derived_tbl* %96, %struct.d_derived_tbl** %19, align 8
  store i32 0, i32* %20, align 4
  %97 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %98 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %97, i32 0, i32 68
  %99 = load i32, i32* %98, align 4
  store i32 %99, i32* %11, align 4
  %100 = load i32, i32* %13, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %359

102:                                              ; preds = %56
  br label %103

103:                                              ; preds = %355, %102
  %104 = load i32, i32* %11, align 4
  %105 = load i32, i32* %7, align 4
  %106 = icmp sle i32 %104, %105
  br i1 %106, label %107, label %358

107:                                              ; preds = %103
  %108 = load i32, i32* %17, align 4
  %109 = icmp slt i32 %108, 8
  br i1 %109, label %110, label %125

110:                                              ; preds = %107
  %111 = load i64, i64* %16, align 8
  %112 = load i32, i32* %17, align 4
  %113 = call i32 bitcast (i32 (%struct.bitread_working_state*, i64, i32, i32)* @jpeg_fill_bit_buffer to i32 (%struct.bitread_working_state.681*, i64, i32, i32)*)(%struct.bitread_working_state.681* %18, i64 %111, i32 %112, i32 0)
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %110
  br label %472

116:                                              ; preds = %110
  %117 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 3
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %16, align 8
  %119 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 4
  %120 = load i32, i32* %119, align 8
  store i32 %120, i32* %17, align 4
  %121 = load i32, i32* %17, align 4
  %122 = icmp slt i32 %121, 8
  br i1 %122, label %123, label %124

123:                                              ; preds = %116
  store i32 1, i32* %22, align 4
  br label %152

124:                                              ; preds = %116
  br label %125

125:                                              ; preds = %124, %107
  %126 = load i64, i64* %16, align 8
  %127 = load i32, i32* %17, align 4
  %128 = sub nsw i32 %127, 8
  %129 = zext i32 %128 to i64
  %130 = ashr i64 %126, %129
  %131 = trunc i64 %130 to i32
  %132 = and i32 %131, 255
  store i32 %132, i32* %23, align 4
  %133 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %19, align 8
  %134 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %133, i32 0, i32 4
  %135 = load i32, i32* %23, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds [256 x i32], [256 x i32]* %134, i64 0, i64 %136
  %138 = load i32, i32* %137, align 4
  store i32 %138, i32* %22, align 4
  %139 = icmp ne i32 %138, 0
  br i1 %139, label %140, label %151

140:                                              ; preds = %125
  %141 = load i32, i32* %22, align 4
  %142 = load i32, i32* %17, align 4
  %143 = sub nsw i32 %142, %141
  store i32 %143, i32* %17, align 4
  %144 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %19, align 8
  %145 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %144, i32 0, i32 5
  %146 = load i32, i32* %23, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [256 x i8], [256 x i8]* %145, i64 0, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  store i32 %150, i32* %10, align 4
  br label %165

151:                                              ; preds = %125
  store i32 9, i32* %22, align 4
  br label %152

152:                                              ; preds = %151, %123
  %153 = load i64, i64* %16, align 8
  %154 = load i32, i32* %17, align 4
  %155 = load %struct.d_derived_tbl*, %struct.d_derived_tbl** %19, align 8
  %156 = load i32, i32* %22, align 4
  %157 = call i32 bitcast (i32 (%struct.bitread_working_state*, i64, i32, %struct.d_derived_tbl*, i32)* @jpeg_huff_decode to i32 (%struct.bitread_working_state.681*, i64, i32, %struct.d_derived_tbl*, i32)*)(%struct.bitread_working_state.681* %18, i64 %153, i32 %154, %struct.d_derived_tbl* %155, i32 %156)
  store i32 %157, i32* %10, align 4
  %158 = icmp slt i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %152
  br label %472

160:                                              ; preds = %152
  %161 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 3
  %162 = load i64, i64* %161, align 8
  store i64 %162, i64* %16, align 8
  %163 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 4
  %164 = load i32, i32* %163, align 8
  store i32 %164, i32* %17, align 4
  br label %165

165:                                              ; preds = %160, %140
  %166 = load i32, i32* %10, align 4
  %167 = ashr i32 %166, 4
  store i32 %167, i32* %12, align 4
  %168 = load i32, i32* %10, align 4
  %169 = and i32 %168, 15
  store i32 %169, i32* %10, align 4
  %170 = load i32, i32* %10, align 4
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %172, label %215

172:                                              ; preds = %165
  %173 = load i32, i32* %10, align 4
  %174 = icmp ne i32 %173, 1
  br i1 %174, label %175, label %187

175:                                              ; preds = %172
  %176 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %177 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %176, i32 0, i32 0
  %178 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %177, align 8
  %179 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %178, i32 0, i32 5
  store i32 114, i32* %179, align 8
  %180 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %181 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %180, i32 0, i32 0
  %182 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %181, align 8
  %183 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %182, i32 0, i32 1
  %184 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %183, align 8
  %185 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %186 = bitcast %struct.jpeg_decompress_struct.469* %185 to %struct.jpeg_common_struct*
  call void %184(%struct.jpeg_common_struct* %186, i32 -1)
  br label %187

187:                                              ; preds = %175, %172
  %188 = load i32, i32* %17, align 4
  %189 = icmp slt i32 %188, 1
  br i1 %189, label %190, label %201

190:                                              ; preds = %187
  %191 = load i64, i64* %16, align 8
  %192 = load i32, i32* %17, align 4
  %193 = call i32 bitcast (i32 (%struct.bitread_working_state*, i64, i32, i32)* @jpeg_fill_bit_buffer to i32 (%struct.bitread_working_state.681*, i64, i32, i32)*)(%struct.bitread_working_state.681* %18, i64 %191, i32 %192, i32 1)
  %194 = icmp ne i32 %193, 0
  br i1 %194, label %196, label %195

195:                                              ; preds = %190
  br label %472

196:                                              ; preds = %190
  %197 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 3
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %16, align 8
  %199 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 4
  %200 = load i32, i32* %199, align 8
  store i32 %200, i32* %17, align 4
  br label %201

201:                                              ; preds = %196, %187
  %202 = load i64, i64* %16, align 8
  %203 = load i32, i32* %17, align 4
  %204 = sub nsw i32 %203, 1
  store i32 %204, i32* %17, align 4
  %205 = zext i32 %204 to i64
  %206 = ashr i64 %202, %205
  %207 = trunc i64 %206 to i32
  %208 = and i32 %207, 1
  %209 = icmp ne i32 %208, 0
  br i1 %209, label %210, label %212

210:                                              ; preds = %201
  %211 = load i32, i32* %8, align 4
  store i32 %211, i32* %10, align 4
  br label %214

212:                                              ; preds = %201
  %213 = load i32, i32* %9, align 4
  store i32 %213, i32* %10, align 4
  br label %214

214:                                              ; preds = %212, %210
  br label %256

215:                                              ; preds = %165
  %216 = load i32, i32* %12, align 4
  %217 = icmp ne i32 %216, 15
  br i1 %217, label %218, label %255

218:                                              ; preds = %215
  %219 = load i32, i32* %12, align 4
  %220 = shl i32 1, %219
  store i32 %220, i32* %13, align 4
  %221 = load i32, i32* %12, align 4
  %222 = icmp ne i32 %221, 0
  br i1 %222, label %223, label %254

223:                                              ; preds = %218
  %224 = load i32, i32* %17, align 4
  %225 = load i32, i32* %12, align 4
  %226 = icmp slt i32 %224, %225
  br i1 %226, label %227, label %239

227:                                              ; preds = %223
  %228 = load i64, i64* %16, align 8
  %229 = load i32, i32* %17, align 4
  %230 = load i32, i32* %12, align 4
  %231 = call i32 bitcast (i32 (%struct.bitread_working_state*, i64, i32, i32)* @jpeg_fill_bit_buffer to i32 (%struct.bitread_working_state.681*, i64, i32, i32)*)(%struct.bitread_working_state.681* %18, i64 %228, i32 %229, i32 %230)
  %232 = icmp ne i32 %231, 0
  br i1 %232, label %234, label %233

233:                                              ; preds = %227
  br label %472

234:                                              ; preds = %227
  %235 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 3
  %236 = load i64, i64* %235, align 8
  store i64 %236, i64* %16, align 8
  %237 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 4
  %238 = load i32, i32* %237, align 8
  store i32 %238, i32* %17, align 4
  br label %239

239:                                              ; preds = %234, %223
  %240 = load i64, i64* %16, align 8
  %241 = load i32, i32* %12, align 4
  %242 = load i32, i32* %17, align 4
  %243 = sub nsw i32 %242, %241
  store i32 %243, i32* %17, align 4
  %244 = zext i32 %243 to i64
  %245 = ashr i64 %240, %244
  %246 = trunc i64 %245 to i32
  %247 = load i32, i32* %12, align 4
  %248 = shl i32 1, %247
  %249 = sub nsw i32 %248, 1
  %250 = and i32 %246, %249
  store i32 %250, i32* %12, align 4
  %251 = load i32, i32* %12, align 4
  %252 = load i32, i32* %13, align 4
  %253 = add i32 %252, %251
  store i32 %253, i32* %13, align 4
  br label %254

254:                                              ; preds = %239, %218
  br label %358

255:                                              ; preds = %215
  br label %256

256:                                              ; preds = %255, %214
  br label %257

257:                                              ; preds = %331, %256
  %258 = load [64 x i16]*, [64 x i16]** %14, align 8
  %259 = getelementptr inbounds [64 x i16], [64 x i16]* %258, i64 0, i64 0
  %260 = load i32, i32* %11, align 4
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %261
  %263 = load i32, i32* %262, align 4
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds i16, i16* %259, i64 %264
  store i16* %265, i16** %15, align 8
  %266 = load i16*, i16** %15, align 8
  %267 = load i16, i16* %266, align 2
  %268 = sext i16 %267 to i32
  %269 = icmp ne i32 %268, 0
  br i1 %269, label %270, label %322

270:                                              ; preds = %257
  %271 = load i32, i32* %17, align 4
  %272 = icmp slt i32 %271, 1
  br i1 %272, label %273, label %284

273:                                              ; preds = %270
  %274 = load i64, i64* %16, align 8
  %275 = load i32, i32* %17, align 4
  %276 = call i32 bitcast (i32 (%struct.bitread_working_state*, i64, i32, i32)* @jpeg_fill_bit_buffer to i32 (%struct.bitread_working_state.681*, i64, i32, i32)*)(%struct.bitread_working_state.681* %18, i64 %274, i32 %275, i32 1)
  %277 = icmp ne i32 %276, 0
  br i1 %277, label %279, label %278

278:                                              ; preds = %273
  br label %472

279:                                              ; preds = %273
  %280 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 3
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %16, align 8
  %282 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 4
  %283 = load i32, i32* %282, align 8
  store i32 %283, i32* %17, align 4
  br label %284

284:                                              ; preds = %279, %270
  %285 = load i64, i64* %16, align 8
  %286 = load i32, i32* %17, align 4
  %287 = sub nsw i32 %286, 1
  store i32 %287, i32* %17, align 4
  %288 = zext i32 %287 to i64
  %289 = ashr i64 %285, %288
  %290 = trunc i64 %289 to i32
  %291 = and i32 %290, 1
  %292 = icmp ne i32 %291, 0
  br i1 %292, label %293, label %321

293:                                              ; preds = %284
  %294 = load i16*, i16** %15, align 8
  %295 = load i16, i16* %294, align 2
  %296 = sext i16 %295 to i32
  %297 = load i32, i32* %8, align 4
  %298 = and i32 %296, %297
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %320

300:                                              ; preds = %293
  %301 = load i16*, i16** %15, align 8
  %302 = load i16, i16* %301, align 2
  %303 = sext i16 %302 to i32
  %304 = icmp sge i32 %303, 0
  br i1 %304, label %305, label %312

305:                                              ; preds = %300
  %306 = load i32, i32* %8, align 4
  %307 = load i16*, i16** %15, align 8
  %308 = load i16, i16* %307, align 2
  %309 = sext i16 %308 to i32
  %310 = add nsw i32 %309, %306
  %311 = trunc i32 %310 to i16
  store i16 %311, i16* %307, align 2
  br label %319

312:                                              ; preds = %300
  %313 = load i32, i32* %9, align 4
  %314 = load i16*, i16** %15, align 8
  %315 = load i16, i16* %314, align 2
  %316 = sext i16 %315 to i32
  %317 = add nsw i32 %316, %313
  %318 = trunc i32 %317 to i16
  store i16 %318, i16* %314, align 2
  br label %319

319:                                              ; preds = %312, %305
  br label %320

320:                                              ; preds = %319, %293
  br label %321

321:                                              ; preds = %320, %284
  br label %328

322:                                              ; preds = %257
  %323 = load i32, i32* %12, align 4
  %324 = add nsw i32 %323, -1
  store i32 %324, i32* %12, align 4
  %325 = icmp slt i32 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %322
  br label %335

327:                                              ; preds = %322
  br label %328

328:                                              ; preds = %327, %321
  %329 = load i32, i32* %11, align 4
  %330 = add nsw i32 %329, 1
  store i32 %330, i32* %11, align 4
  br label %331

331:                                              ; preds = %328
  %332 = load i32, i32* %11, align 4
  %333 = load i32, i32* %7, align 4
  %334 = icmp sle i32 %332, %333
  br i1 %334, label %257, label %335

335:                                              ; preds = %331, %326
  %336 = load i32, i32* %10, align 4
  %337 = icmp ne i32 %336, 0
  br i1 %337, label %338, label %354

338:                                              ; preds = %335
  %339 = load i32, i32* %11, align 4
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %340
  %342 = load i32, i32* %341, align 4
  store i32 %342, i32* %24, align 4
  %343 = load i32, i32* %10, align 4
  %344 = trunc i32 %343 to i16
  %345 = load [64 x i16]*, [64 x i16]** %14, align 8
  %346 = load i32, i32* %24, align 4
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds [64 x i16], [64 x i16]* %345, i64 0, i64 %347
  store i16 %344, i16* %348, align 2
  %349 = load i32, i32* %24, align 4
  %350 = load i32, i32* %20, align 4
  %351 = add nsw i32 %350, 1
  store i32 %351, i32* %20, align 4
  %352 = sext i32 %350 to i64
  %353 = getelementptr inbounds [64 x i32], [64 x i32]* %21, i64 0, i64 %352
  store i32 %349, i32* %353, align 4
  br label %354

354:                                              ; preds = %338, %335
  br label %355

355:                                              ; preds = %354
  %356 = load i32, i32* %11, align 4
  %357 = add nsw i32 %356, 1
  store i32 %357, i32* %11, align 4
  br label %103

358:                                              ; preds = %254, %103
  br label %359

359:                                              ; preds = %358, %56
  %360 = load i32, i32* %13, align 4
  %361 = icmp ugt i32 %360, 0
  br i1 %361, label %362, label %439

362:                                              ; preds = %359
  br label %363

363:                                              ; preds = %433, %362
  %364 = load i32, i32* %11, align 4
  %365 = load i32, i32* %7, align 4
  %366 = icmp sle i32 %364, %365
  br i1 %366, label %367, label %436

367:                                              ; preds = %363
  %368 = load [64 x i16]*, [64 x i16]** %14, align 8
  %369 = getelementptr inbounds [64 x i16], [64 x i16]* %368, i64 0, i64 0
  %370 = load i32, i32* %11, align 4
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %371
  %373 = load i32, i32* %372, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds i16, i16* %369, i64 %374
  store i16* %375, i16** %15, align 8
  %376 = load i16*, i16** %15, align 8
  %377 = load i16, i16* %376, align 2
  %378 = sext i16 %377 to i32
  %379 = icmp ne i32 %378, 0
  br i1 %379, label %380, label %432

380:                                              ; preds = %367
  %381 = load i32, i32* %17, align 4
  %382 = icmp slt i32 %381, 1
  br i1 %382, label %383, label %394

383:                                              ; preds = %380
  %384 = load i64, i64* %16, align 8
  %385 = load i32, i32* %17, align 4
  %386 = call i32 bitcast (i32 (%struct.bitread_working_state*, i64, i32, i32)* @jpeg_fill_bit_buffer to i32 (%struct.bitread_working_state.681*, i64, i32, i32)*)(%struct.bitread_working_state.681* %18, i64 %384, i32 %385, i32 1)
  %387 = icmp ne i32 %386, 0
  br i1 %387, label %389, label %388

388:                                              ; preds = %383
  br label %472

389:                                              ; preds = %383
  %390 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 3
  %391 = load i64, i64* %390, align 8
  store i64 %391, i64* %16, align 8
  %392 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 4
  %393 = load i32, i32* %392, align 8
  store i32 %393, i32* %17, align 4
  br label %394

394:                                              ; preds = %389, %380
  %395 = load i64, i64* %16, align 8
  %396 = load i32, i32* %17, align 4
  %397 = sub nsw i32 %396, 1
  store i32 %397, i32* %17, align 4
  %398 = zext i32 %397 to i64
  %399 = ashr i64 %395, %398
  %400 = trunc i64 %399 to i32
  %401 = and i32 %400, 1
  %402 = icmp ne i32 %401, 0
  br i1 %402, label %403, label %431

403:                                              ; preds = %394
  %404 = load i16*, i16** %15, align 8
  %405 = load i16, i16* %404, align 2
  %406 = sext i16 %405 to i32
  %407 = load i32, i32* %8, align 4
  %408 = and i32 %406, %407
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %410, label %430

410:                                              ; preds = %403
  %411 = load i16*, i16** %15, align 8
  %412 = load i16, i16* %411, align 2
  %413 = sext i16 %412 to i32
  %414 = icmp sge i32 %413, 0
  br i1 %414, label %415, label %422

415:                                              ; preds = %410
  %416 = load i32, i32* %8, align 4
  %417 = load i16*, i16** %15, align 8
  %418 = load i16, i16* %417, align 2
  %419 = sext i16 %418 to i32
  %420 = add nsw i32 %419, %416
  %421 = trunc i32 %420 to i16
  store i16 %421, i16* %417, align 2
  br label %429

422:                                              ; preds = %410
  %423 = load i32, i32* %9, align 4
  %424 = load i16*, i16** %15, align 8
  %425 = load i16, i16* %424, align 2
  %426 = sext i16 %425 to i32
  %427 = add nsw i32 %426, %423
  %428 = trunc i32 %427 to i16
  store i16 %428, i16* %424, align 2
  br label %429

429:                                              ; preds = %422, %415
  br label %430

430:                                              ; preds = %429, %403
  br label %431

431:                                              ; preds = %430, %394
  br label %432

432:                                              ; preds = %431, %367
  br label %433

433:                                              ; preds = %432
  %434 = load i32, i32* %11, align 4
  %435 = add nsw i32 %434, 1
  store i32 %435, i32* %11, align 4
  br label %363

436:                                              ; preds = %363
  %437 = load i32, i32* %13, align 4
  %438 = add i32 %437, -1
  store i32 %438, i32* %13, align 4
  br label %439

439:                                              ; preds = %436, %359
  %440 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 0
  %441 = load i8*, i8** %440, align 8
  %442 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %443 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %442, i32 0, i32 5
  %444 = load %struct.jpeg_source_mgr.473*, %struct.jpeg_source_mgr.473** %443, align 8
  %445 = getelementptr inbounds %struct.jpeg_source_mgr.473, %struct.jpeg_source_mgr.473* %444, i32 0, i32 0
  store i8* %441, i8** %445, align 8
  %446 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 1
  %447 = load i64, i64* %446, align 8
  %448 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %449 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %448, i32 0, i32 5
  %450 = load %struct.jpeg_source_mgr.473*, %struct.jpeg_source_mgr.473** %449, align 8
  %451 = getelementptr inbounds %struct.jpeg_source_mgr.473, %struct.jpeg_source_mgr.473* %450, i32 0, i32 1
  store i64 %447, i64* %451, align 8
  %452 = getelementptr inbounds %struct.bitread_working_state.681, %struct.bitread_working_state.681* %18, i32 0, i32 2
  %453 = load i32, i32* %452, align 8
  %454 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %455 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %454, i32 0, i32 72
  store i32 %453, i32* %455, align 4
  %456 = load i64, i64* %16, align 8
  %457 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %458 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %457, i32 0, i32 1
  %459 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %458, i32 0, i32 0
  store i64 %456, i64* %459, align 8
  %460 = load i32, i32* %17, align 4
  %461 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %462 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %461, i32 0, i32 1
  %463 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %462, i32 0, i32 1
  store i32 %460, i32* %463, align 8
  %464 = load i32, i32* %13, align 4
  %465 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %466 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %465, i32 0, i32 2
  %467 = getelementptr inbounds %struct.savable_state.679, %struct.savable_state.679* %466, i32 0, i32 0
  store i32 %464, i32* %467, align 8
  %468 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %6, align 8
  %469 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %468, i32 0, i32 3
  %470 = load i32, i32* %469, align 4
  %471 = add i32 %470, -1
  store i32 %471, i32* %469, align 4
  store i32 1, i32* %3, align 4
  br label %486

472:                                              ; preds = %388, %278, %233, %195, %159, %115
  br label %473

473:                                              ; preds = %476, %472
  %474 = load i32, i32* %20, align 4
  %475 = icmp sgt i32 %474, 0
  br i1 %475, label %476, label %485

476:                                              ; preds = %473
  %477 = load [64 x i16]*, [64 x i16]** %14, align 8
  %478 = load i32, i32* %20, align 4
  %479 = add nsw i32 %478, -1
  store i32 %479, i32* %20, align 4
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds [64 x i32], [64 x i32]* %21, i64 0, i64 %480
  %482 = load i32, i32* %481, align 4
  %483 = sext i32 %482 to i64
  %484 = getelementptr inbounds [64 x i16], [64 x i16]* %477, i64 0, i64 %483
  store i16 0, i16* %484, align 2
  br label %473

485:                                              ; preds = %473
  store i32 0, i32* %3, align 4
  br label %486

486:                                              ; preds = %485, %439, %53
  %487 = load i32, i32* %3, align 4
  ret i32 %487
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @process_restart.65(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %4 = alloca %struct.phuff_entropy_decoder*, align 8
  %5 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %3, align 8
  %6 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %6, i32 0, i32 79
  %8 = load %struct.jpeg_entropy_decoder.483*, %struct.jpeg_entropy_decoder.483** %7, align 8
  %9 = bitcast %struct.jpeg_entropy_decoder.483* %8 to %struct.phuff_entropy_decoder*
  store %struct.phuff_entropy_decoder* %9, %struct.phuff_entropy_decoder** %4, align 8
  %10 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %4, align 8
  %11 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = sdiv i32 %13, 8
  %15 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %15, i32 0, i32 78
  %17 = load %struct.jpeg_marker_reader.482*, %struct.jpeg_marker_reader.482** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_marker_reader.482, %struct.jpeg_marker_reader.482* %17, i32 0, i32 8
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, %14
  store i32 %20, i32* %18, align 4
  %21 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %4, align 8
  %22 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %21, i32 0, i32 1
  %23 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %22, i32 0, i32 1
  store i32 0, i32* %23, align 8
  %24 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %24, i32 0, i32 78
  %26 = load %struct.jpeg_marker_reader.482*, %struct.jpeg_marker_reader.482** %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_marker_reader.482, %struct.jpeg_marker_reader.482* %26, i32 0, i32 2
  %28 = load i32 (%struct.jpeg_decompress_struct.469*)*, i32 (%struct.jpeg_decompress_struct.469*)** %27, align 8
  %29 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %30 = call i32 %28(%struct.jpeg_decompress_struct.469* %29)
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  br label %62

33:                                               ; preds = %1
  store i32 0, i32* %5, align 4
  br label %34

34:                                               ; preds = %47, %33
  %35 = load i32, i32* %5, align 4
  %36 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %36, i32 0, i32 62
  %38 = load i32, i32* %37, align 8
  %39 = icmp slt i32 %35, %38
  br i1 %39, label %40, label %50

40:                                               ; preds = %34
  %41 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %4, align 8
  %42 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %41, i32 0, i32 2
  %43 = getelementptr inbounds %struct.savable_state.679, %struct.savable_state.679* %42, i32 0, i32 1
  %44 = load i32, i32* %5, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [4 x i32], [4 x i32]* %43, i64 0, i64 %45
  store i32 0, i32* %46, align 4
  br label %47

47:                                               ; preds = %40
  %48 = load i32, i32* %5, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %5, align 4
  br label %34

50:                                               ; preds = %34
  %51 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %4, align 8
  %52 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %51, i32 0, i32 2
  %53 = getelementptr inbounds %struct.savable_state.679, %struct.savable_state.679* %52, i32 0, i32 0
  store i32 0, i32* %53, align 8
  %54 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %54, i32 0, i32 49
  %56 = load i32, i32* %55, align 8
  %57 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %4, align 8
  %58 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %57, i32 0, i32 3
  store i32 %56, i32* %58, align 4
  %59 = load %struct.phuff_entropy_decoder*, %struct.phuff_entropy_decoder** %4, align 8
  %60 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %59, i32 0, i32 1
  %61 = getelementptr inbounds %struct.bitread_perm_state, %struct.bitread_perm_state* %60, i32 0, i32 2
  store i32 0, i32* %61, align 4
  store i32 1, i32* %2, align 4
  br label %62

62:                                               ; preds = %50, %32
  %63 = load i32, i32* %2, align 4
  ret i32 %63
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_d_post_controller(%struct.jpeg_decompress_struct.682* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct.682*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.my_post_controller*, align 8
  store %struct.jpeg_decompress_struct.682* %0, %struct.jpeg_decompress_struct.682** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %6, i32 0, i32 1
  %8 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %7, align 8
  %9 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %8, i32 0, i32 0
  %10 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %9, align 8
  %11 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %12 = bitcast %struct.jpeg_decompress_struct.682* %11 to %struct.jpeg_common_struct*
  %13 = call i8* %10(%struct.jpeg_common_struct* %12, i32 1, i64 48)
  %14 = bitcast i8* %13 to %struct.my_post_controller*
  store %struct.my_post_controller* %14, %struct.my_post_controller** %5, align 8
  %15 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %16 = bitcast %struct.my_post_controller* %15 to %struct.jpeg_d_post_controller.693*
  %17 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %17, i32 0, i32 76
  store %struct.jpeg_d_post_controller.693* %16, %struct.jpeg_d_post_controller.693** %18, align 8
  %19 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %20 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %19, i32 0, i32 0
  %21 = getelementptr inbounds %struct.jpeg_d_post_controller.693, %struct.jpeg_d_post_controller.693* %20, i32 0, i32 0
  store void (%struct.jpeg_decompress_struct.682*, i32)* @start_pass_dpost, void (%struct.jpeg_decompress_struct.682*, i32)** %21, align 8
  %22 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %23 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %22, i32 0, i32 1
  store %struct.jvirt_sarray_control* null, %struct.jvirt_sarray_control** %23, align 8
  %24 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %25 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %24, i32 0, i32 2
  store i8** null, i8*** %25, align 8
  %26 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %26, i32 0, i32 19
  %28 = load i32, i32* %27, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %91

30:                                               ; preds = %2
  %31 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %31, i32 0, i32 58
  %33 = load i32, i32* %32, align 8
  %34 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %35 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %34, i32 0, i32 3
  store i32 %33, i32* %35, align 8
  %36 = load i32, i32* %4, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %69

38:                                               ; preds = %30
  %39 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %39, i32 0, i32 1
  %41 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %41, i32 0, i32 4
  %43 = load %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)** %42, align 8
  %44 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %45 = bitcast %struct.jpeg_decompress_struct.682* %44 to %struct.jpeg_common_struct*
  %46 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %46, i32 0, i32 26
  %48 = load i32, i32* %47, align 8
  %49 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %49, i32 0, i32 28
  %51 = load i32, i32* %50, align 8
  %52 = mul i32 %48, %51
  %53 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %54 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %53, i32 0, i32 27
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  %57 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %58 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %57, i32 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = zext i32 %59 to i64
  %61 = call i64 @jround_up(i64 %56, i64 %60)
  %62 = trunc i64 %61 to i32
  %63 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %64 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %63, i32 0, i32 3
  %65 = load i32, i32* %64, align 8
  %66 = call %struct.jvirt_sarray_control* %43(%struct.jpeg_common_struct* %45, i32 1, i32 0, i32 %52, i32 %62, i32 %65)
  %67 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %68 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %67, i32 0, i32 1
  store %struct.jvirt_sarray_control* %66, %struct.jvirt_sarray_control** %68, align 8
  br label %90

69:                                               ; preds = %30
  %70 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %71 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %70, i32 0, i32 1
  %72 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %71, align 8
  %73 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %72, i32 0, i32 2
  %74 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %73, align 8
  %75 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %76 = bitcast %struct.jpeg_decompress_struct.682* %75 to %struct.jpeg_common_struct*
  %77 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %78 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %77, i32 0, i32 26
  %79 = load i32, i32* %78, align 8
  %80 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %81 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %80, i32 0, i32 28
  %82 = load i32, i32* %81, align 8
  %83 = mul i32 %79, %82
  %84 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %85 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %84, i32 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = call i8** %74(%struct.jpeg_common_struct* %76, i32 1, i32 %83, i32 %86)
  %88 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %89 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %88, i32 0, i32 2
  store i8** %87, i8*** %89, align 8
  br label %90

90:                                               ; preds = %69, %38
  br label %91

91:                                               ; preds = %90, %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_dpost(%struct.jpeg_decompress_struct.682* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct.682*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.my_post_controller*, align 8
  store %struct.jpeg_decompress_struct.682* %0, %struct.jpeg_decompress_struct.682** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %6, i32 0, i32 76
  %8 = load %struct.jpeg_d_post_controller.693*, %struct.jpeg_d_post_controller.693** %7, align 8
  %9 = bitcast %struct.jpeg_d_post_controller.693* %8 to %struct.my_post_controller*
  store %struct.my_post_controller* %9, %struct.my_post_controller** %5, align 8
  %10 = load i32, i32* %4, align 4
  switch i32 %10, label %94 [
    i32 0, label %11
    i32 3, label %52
    i32 2, label %73
  ]

11:                                               ; preds = %2
  %12 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %12, i32 0, i32 19
  %14 = load i32, i32* %13, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %42

16:                                               ; preds = %11
  %17 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %18 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %17, i32 0, i32 0
  %19 = getelementptr inbounds %struct.jpeg_d_post_controller.693, %struct.jpeg_d_post_controller.693* %18, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.682*, i8***, i32*, i32, i8**, i32*, i32)* @post_process_1pass, void (%struct.jpeg_decompress_struct.682*, i8***, i32*, i32, i8**, i32*, i32)** %19, align 8
  %20 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %21 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %20, i32 0, i32 2
  %22 = load i8**, i8*** %21, align 8
  %23 = icmp eq i8** %22, null
  br i1 %23, label %24, label %41

24:                                               ; preds = %16
  %25 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %25, i32 0, i32 1
  %27 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %26, align 8
  %28 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %27, i32 0, i32 7
  %29 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)** %28, align 8
  %30 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %31 = bitcast %struct.jpeg_decompress_struct.682* %30 to %struct.jpeg_common_struct*
  %32 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %33 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %32, i32 0, i32 1
  %34 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %33, align 8
  %35 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %36 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %35, i32 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = call i8** %29(%struct.jpeg_common_struct* %31, %struct.jvirt_sarray_control* %34, i32 0, i32 %37, i32 1)
  %39 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %40 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %39, i32 0, i32 2
  store i8** %38, i8*** %40, align 8
  br label %41

41:                                               ; preds = %24, %16
  br label %51

42:                                               ; preds = %11
  %43 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %43, i32 0, i32 81
  %45 = load %struct.jpeg_upsampler.698*, %struct.jpeg_upsampler.698** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_upsampler.698, %struct.jpeg_upsampler.698* %45, i32 0, i32 1
  %47 = load void (%struct.jpeg_decompress_struct.682*, i8***, i32*, i32, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.682*, i8***, i32*, i32, i8**, i32*, i32)** %46, align 8
  %48 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %49 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %48, i32 0, i32 0
  %50 = getelementptr inbounds %struct.jpeg_d_post_controller.693, %struct.jpeg_d_post_controller.693* %49, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.682*, i8***, i32*, i32, i8**, i32*, i32)* %47, void (%struct.jpeg_decompress_struct.682*, i8***, i32*, i32, i8**, i32*, i32)** %50, align 8
  br label %51

51:                                               ; preds = %42, %41
  br label %106

52:                                               ; preds = %2
  %53 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %54 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %53, i32 0, i32 1
  %55 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %54, align 8
  %56 = icmp eq %struct.jvirt_sarray_control* %55, null
  br i1 %56, label %57, label %69

57:                                               ; preds = %52
  %58 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %59 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %58, i32 0, i32 0
  %60 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %59, align 8
  %61 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %60, i32 0, i32 5
  store i32 4, i32* %61, align 8
  %62 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %62, i32 0, i32 0
  %64 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %63, align 8
  %65 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %64, i32 0, i32 0
  %66 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %65, align 8
  %67 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %68 = bitcast %struct.jpeg_decompress_struct.682* %67 to %struct.jpeg_common_struct*
  call void %66(%struct.jpeg_common_struct* %68)
  br label %69

69:                                               ; preds = %57, %52
  %70 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %71 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %70, i32 0, i32 0
  %72 = getelementptr inbounds %struct.jpeg_d_post_controller.693, %struct.jpeg_d_post_controller.693* %71, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.682*, i8***, i32*, i32, i8**, i32*, i32)* @post_process_prepass, void (%struct.jpeg_decompress_struct.682*, i8***, i32*, i32, i8**, i32*, i32)** %72, align 8
  br label %106

73:                                               ; preds = %2
  %74 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %75 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %74, i32 0, i32 1
  %76 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %75, align 8
  %77 = icmp eq %struct.jvirt_sarray_control* %76, null
  br i1 %77, label %78, label %90

78:                                               ; preds = %73
  %79 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %80 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %79, i32 0, i32 0
  %81 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %82 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %81, i32 0, i32 5
  store i32 4, i32* %82, align 8
  %83 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %84 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %83, i32 0, i32 0
  %85 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %84, align 8
  %86 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %85, i32 0, i32 0
  %87 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %86, align 8
  %88 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %89 = bitcast %struct.jpeg_decompress_struct.682* %88 to %struct.jpeg_common_struct*
  call void %87(%struct.jpeg_common_struct* %89)
  br label %90

90:                                               ; preds = %78, %73
  %91 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %92 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %91, i32 0, i32 0
  %93 = getelementptr inbounds %struct.jpeg_d_post_controller.693, %struct.jpeg_d_post_controller.693* %92, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.682*, i8***, i32*, i32, i8**, i32*, i32)* @post_process_2pass, void (%struct.jpeg_decompress_struct.682*, i8***, i32*, i32, i8**, i32*, i32)** %93, align 8
  br label %106

94:                                               ; preds = %2
  %95 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %96 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %95, i32 0, i32 0
  %97 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %96, align 8
  %98 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %97, i32 0, i32 5
  store i32 4, i32* %98, align 8
  %99 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %100 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %99, i32 0, i32 0
  %101 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %100, align 8
  %102 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %101, i32 0, i32 0
  %103 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %102, align 8
  %104 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %3, align 8
  %105 = bitcast %struct.jpeg_decompress_struct.682* %104 to %struct.jpeg_common_struct*
  call void %103(%struct.jpeg_common_struct* %105)
  br label %106

106:                                              ; preds = %94, %90, %69, %51
  %107 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %108 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %107, i32 0, i32 5
  store i32 0, i32* %108, align 8
  %109 = load %struct.my_post_controller*, %struct.my_post_controller** %5, align 8
  %110 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %109, i32 0, i32 4
  store i32 0, i32* %110, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @post_process_1pass(%struct.jpeg_decompress_struct.682* %0, i8*** %1, i32* %2, i32 %3, i8** %4, i32* %5, i32 %6) #0 {
  %8 = alloca %struct.jpeg_decompress_struct.682*, align 8
  %9 = alloca i8***, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8**, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.my_post_controller*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.682* %0, %struct.jpeg_decompress_struct.682** %8, align 8
  store i8*** %1, i8**** %9, align 8
  store i32* %2, i32** %10, align 8
  store i32 %3, i32* %11, align 4
  store i8** %4, i8*** %12, align 8
  store i32* %5, i32** %13, align 8
  store i32 %6, i32* %14, align 4
  %18 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %18, i32 0, i32 76
  %20 = load %struct.jpeg_d_post_controller.693*, %struct.jpeg_d_post_controller.693** %19, align 8
  %21 = bitcast %struct.jpeg_d_post_controller.693* %20 to %struct.my_post_controller*
  store %struct.my_post_controller* %21, %struct.my_post_controller** %15, align 8
  %22 = load i32, i32* %14, align 4
  %23 = load i32*, i32** %13, align 8
  %24 = load i32, i32* %23, align 4
  %25 = sub i32 %22, %24
  store i32 %25, i32* %17, align 4
  %26 = load i32, i32* %17, align 4
  %27 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %28 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = icmp ugt i32 %26, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %7
  %32 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %33 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %32, i32 0, i32 3
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %17, align 4
  br label %35

35:                                               ; preds = %31, %7
  store i32 0, i32* %16, align 4
  %36 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %36, i32 0, i32 81
  %38 = load %struct.jpeg_upsampler.698*, %struct.jpeg_upsampler.698** %37, align 8
  %39 = getelementptr inbounds %struct.jpeg_upsampler.698, %struct.jpeg_upsampler.698* %38, i32 0, i32 1
  %40 = load void (%struct.jpeg_decompress_struct.682*, i8***, i32*, i32, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.682*, i8***, i32*, i32, i8**, i32*, i32)** %39, align 8
  %41 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %42 = load i8***, i8**** %9, align 8
  %43 = load i32*, i32** %10, align 8
  %44 = load i32, i32* %11, align 4
  %45 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %46 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %45, i32 0, i32 2
  %47 = load i8**, i8*** %46, align 8
  %48 = load i32, i32* %17, align 4
  call void %40(%struct.jpeg_decompress_struct.682* %41, i8*** %42, i32* %43, i32 %44, i8** %47, i32* %16, i32 %48)
  %49 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %49, i32 0, i32 83
  %51 = load %struct.jpeg_color_quantizer.700*, %struct.jpeg_color_quantizer.700** %50, align 8
  %52 = getelementptr inbounds %struct.jpeg_color_quantizer.700, %struct.jpeg_color_quantizer.700* %51, i32 0, i32 1
  %53 = load void (%struct.jpeg_decompress_struct.682*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct.682*, i8**, i8**, i32)** %52, align 8
  %54 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %55 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %56 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %55, i32 0, i32 2
  %57 = load i8**, i8*** %56, align 8
  %58 = load i8**, i8*** %12, align 8
  %59 = load i32*, i32** %13, align 8
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i8*, i8** %58, i64 %61
  %63 = load i32, i32* %16, align 4
  call void %53(%struct.jpeg_decompress_struct.682* %54, i8** %57, i8** %62, i32 %63)
  %64 = load i32, i32* %16, align 4
  %65 = load i32*, i32** %13, align 8
  %66 = load i32, i32* %65, align 4
  %67 = add i32 %66, %64
  store i32 %67, i32* %65, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @post_process_prepass(%struct.jpeg_decompress_struct.682* %0, i8*** %1, i32* %2, i32 %3, i8** %4, i32* %5, i32 %6) #0 {
  %8 = alloca %struct.jpeg_decompress_struct.682*, align 8
  %9 = alloca i8***, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8**, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.my_post_controller*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.682* %0, %struct.jpeg_decompress_struct.682** %8, align 8
  store i8*** %1, i8**** %9, align 8
  store i32* %2, i32** %10, align 8
  store i32 %3, i32* %11, align 4
  store i8** %4, i8*** %12, align 8
  store i32* %5, i32** %13, align 8
  store i32 %6, i32* %14, align 4
  %18 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %18, i32 0, i32 76
  %20 = load %struct.jpeg_d_post_controller.693*, %struct.jpeg_d_post_controller.693** %19, align 8
  %21 = bitcast %struct.jpeg_d_post_controller.693* %20 to %struct.my_post_controller*
  store %struct.my_post_controller* %21, %struct.my_post_controller** %15, align 8
  %22 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %23 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %22, i32 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %46

26:                                               ; preds = %7
  %27 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %27, i32 0, i32 1
  %29 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %29, i32 0, i32 7
  %31 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)** %30, align 8
  %32 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %33 = bitcast %struct.jpeg_decompress_struct.682* %32 to %struct.jpeg_common_struct*
  %34 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %35 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %34, i32 0, i32 1
  %36 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %35, align 8
  %37 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %38 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %37, i32 0, i32 4
  %39 = load i32, i32* %38, align 4
  %40 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %41 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %40, i32 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = call i8** %31(%struct.jpeg_common_struct* %33, %struct.jvirt_sarray_control* %36, i32 %39, i32 %42, i32 1)
  %44 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %45 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %44, i32 0, i32 2
  store i8** %43, i8*** %45, align 8
  br label %46

46:                                               ; preds = %26, %7
  %47 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %48 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %47, i32 0, i32 5
  %49 = load i32, i32* %48, align 8
  store i32 %49, i32* %16, align 4
  %50 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %51 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %50, i32 0, i32 81
  %52 = load %struct.jpeg_upsampler.698*, %struct.jpeg_upsampler.698** %51, align 8
  %53 = getelementptr inbounds %struct.jpeg_upsampler.698, %struct.jpeg_upsampler.698* %52, i32 0, i32 1
  %54 = load void (%struct.jpeg_decompress_struct.682*, i8***, i32*, i32, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.682*, i8***, i32*, i32, i8**, i32*, i32)** %53, align 8
  %55 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %56 = load i8***, i8**** %9, align 8
  %57 = load i32*, i32** %10, align 8
  %58 = load i32, i32* %11, align 4
  %59 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %60 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %59, i32 0, i32 2
  %61 = load i8**, i8*** %60, align 8
  %62 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %63 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %62, i32 0, i32 5
  %64 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %65 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %64, i32 0, i32 3
  %66 = load i32, i32* %65, align 8
  call void %54(%struct.jpeg_decompress_struct.682* %55, i8*** %56, i32* %57, i32 %58, i8** %61, i32* %63, i32 %66)
  %67 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %68 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %67, i32 0, i32 5
  %69 = load i32, i32* %68, align 8
  %70 = load i32, i32* %16, align 4
  %71 = icmp ugt i32 %69, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %46
  %73 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %74 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %73, i32 0, i32 5
  %75 = load i32, i32* %74, align 8
  %76 = load i32, i32* %16, align 4
  %77 = sub i32 %75, %76
  store i32 %77, i32* %17, align 4
  %78 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %79 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %78, i32 0, i32 83
  %80 = load %struct.jpeg_color_quantizer.700*, %struct.jpeg_color_quantizer.700** %79, align 8
  %81 = getelementptr inbounds %struct.jpeg_color_quantizer.700, %struct.jpeg_color_quantizer.700* %80, i32 0, i32 1
  %82 = load void (%struct.jpeg_decompress_struct.682*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct.682*, i8**, i8**, i32)** %81, align 8
  %83 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %84 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %85 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %84, i32 0, i32 2
  %86 = load i8**, i8*** %85, align 8
  %87 = load i32, i32* %16, align 4
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i8*, i8** %86, i64 %88
  %90 = load i32, i32* %17, align 4
  call void %82(%struct.jpeg_decompress_struct.682* %83, i8** %89, i8** null, i32 %90)
  %91 = load i32, i32* %17, align 4
  %92 = load i32*, i32** %13, align 8
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, %91
  store i32 %94, i32* %92, align 4
  br label %95

95:                                               ; preds = %72, %46
  %96 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %97 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %96, i32 0, i32 5
  %98 = load i32, i32* %97, align 8
  %99 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %100 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %99, i32 0, i32 3
  %101 = load i32, i32* %100, align 8
  %102 = icmp uge i32 %98, %101
  br i1 %102, label %103, label %113

103:                                              ; preds = %95
  %104 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %105 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %104, i32 0, i32 3
  %106 = load i32, i32* %105, align 8
  %107 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %108 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %107, i32 0, i32 4
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, %106
  store i32 %110, i32* %108, align 4
  %111 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %112 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %111, i32 0, i32 5
  store i32 0, i32* %112, align 8
  br label %113

113:                                              ; preds = %103, %95
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @post_process_2pass(%struct.jpeg_decompress_struct.682* %0, i8*** %1, i32* %2, i32 %3, i8** %4, i32* %5, i32 %6) #0 {
  %8 = alloca %struct.jpeg_decompress_struct.682*, align 8
  %9 = alloca i8***, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8**, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.my_post_controller*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.682* %0, %struct.jpeg_decompress_struct.682** %8, align 8
  store i8*** %1, i8**** %9, align 8
  store i32* %2, i32** %10, align 8
  store i32 %3, i32* %11, align 4
  store i8** %4, i8*** %12, align 8
  store i32* %5, i32** %13, align 8
  store i32 %6, i32* %14, align 4
  %18 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %18, i32 0, i32 76
  %20 = load %struct.jpeg_d_post_controller.693*, %struct.jpeg_d_post_controller.693** %19, align 8
  %21 = bitcast %struct.jpeg_d_post_controller.693* %20 to %struct.my_post_controller*
  store %struct.my_post_controller* %21, %struct.my_post_controller** %15, align 8
  %22 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %23 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %22, i32 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %46

26:                                               ; preds = %7
  %27 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %27, i32 0, i32 1
  %29 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %29, i32 0, i32 7
  %31 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)** %30, align 8
  %32 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %33 = bitcast %struct.jpeg_decompress_struct.682* %32 to %struct.jpeg_common_struct*
  %34 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %35 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %34, i32 0, i32 1
  %36 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %35, align 8
  %37 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %38 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %37, i32 0, i32 4
  %39 = load i32, i32* %38, align 4
  %40 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %41 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %40, i32 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = call i8** %31(%struct.jpeg_common_struct* %33, %struct.jvirt_sarray_control* %36, i32 %39, i32 %42, i32 0)
  %44 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %45 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %44, i32 0, i32 2
  store i8** %43, i8*** %45, align 8
  br label %46

46:                                               ; preds = %26, %7
  %47 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %48 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %47, i32 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %51 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %50, i32 0, i32 5
  %52 = load i32, i32* %51, align 8
  %53 = sub i32 %49, %52
  store i32 %53, i32* %16, align 4
  %54 = load i32, i32* %14, align 4
  %55 = load i32*, i32** %13, align 8
  %56 = load i32, i32* %55, align 4
  %57 = sub i32 %54, %56
  store i32 %57, i32* %17, align 4
  %58 = load i32, i32* %16, align 4
  %59 = load i32, i32* %17, align 4
  %60 = icmp ugt i32 %58, %59
  br i1 %60, label %61, label %63

61:                                               ; preds = %46
  %62 = load i32, i32* %17, align 4
  store i32 %62, i32* %16, align 4
  br label %63

63:                                               ; preds = %61, %46
  %64 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %65 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %64, i32 0, i32 27
  %66 = load i32, i32* %65, align 4
  %67 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %68 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %67, i32 0, i32 4
  %69 = load i32, i32* %68, align 4
  %70 = sub i32 %66, %69
  store i32 %70, i32* %17, align 4
  %71 = load i32, i32* %16, align 4
  %72 = load i32, i32* %17, align 4
  %73 = icmp ugt i32 %71, %72
  br i1 %73, label %74, label %76

74:                                               ; preds = %63
  %75 = load i32, i32* %17, align 4
  store i32 %75, i32* %16, align 4
  br label %76

76:                                               ; preds = %74, %63
  %77 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %78 = getelementptr inbounds %struct.jpeg_decompress_struct.682, %struct.jpeg_decompress_struct.682* %77, i32 0, i32 83
  %79 = load %struct.jpeg_color_quantizer.700*, %struct.jpeg_color_quantizer.700** %78, align 8
  %80 = getelementptr inbounds %struct.jpeg_color_quantizer.700, %struct.jpeg_color_quantizer.700* %79, i32 0, i32 1
  %81 = load void (%struct.jpeg_decompress_struct.682*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct.682*, i8**, i8**, i32)** %80, align 8
  %82 = load %struct.jpeg_decompress_struct.682*, %struct.jpeg_decompress_struct.682** %8, align 8
  %83 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %84 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %83, i32 0, i32 2
  %85 = load i8**, i8*** %84, align 8
  %86 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %87 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %86, i32 0, i32 5
  %88 = load i32, i32* %87, align 8
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i8*, i8** %85, i64 %89
  %91 = load i8**, i8*** %12, align 8
  %92 = load i32*, i32** %13, align 8
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i8*, i8** %91, i64 %94
  %96 = load i32, i32* %16, align 4
  call void %81(%struct.jpeg_decompress_struct.682* %82, i8** %90, i8** %95, i32 %96)
  %97 = load i32, i32* %16, align 4
  %98 = load i32*, i32** %13, align 8
  %99 = load i32, i32* %98, align 4
  %100 = add i32 %99, %97
  store i32 %100, i32* %98, align 4
  %101 = load i32, i32* %16, align 4
  %102 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %103 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %102, i32 0, i32 5
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, %101
  store i32 %105, i32* %103, align 8
  %106 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %107 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %106, i32 0, i32 5
  %108 = load i32, i32* %107, align 8
  %109 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %110 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %109, i32 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = icmp uge i32 %108, %111
  br i1 %112, label %113, label %123

113:                                              ; preds = %76
  %114 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %115 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %114, i32 0, i32 3
  %116 = load i32, i32* %115, align 8
  %117 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %118 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %117, i32 0, i32 4
  %119 = load i32, i32* %118, align 4
  %120 = add i32 %119, %116
  store i32 %120, i32* %118, align 4
  %121 = load %struct.my_post_controller*, %struct.my_post_controller** %15, align 8
  %122 = getelementptr inbounds %struct.my_post_controller, %struct.my_post_controller* %121, i32 0, i32 5
  store i32 0, i32* %122, align 8
  br label %123

123:                                              ; preds = %113, %76
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_upsampler(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_upsampler.728*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.jpeg_component_info*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %12 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %12, i32 0, i32 1
  %14 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %13, align 8
  %15 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %14, i32 0, i32 0
  %16 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %15, align 8
  %17 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %18 = bitcast %struct.jpeg_decompress_struct.469* %17 to %struct.jpeg_common_struct*
  %19 = call i8* %16(%struct.jpeg_common_struct* %18, i32 1, i64 256)
  %20 = bitcast i8* %19 to %struct.my_upsampler.728*
  store %struct.my_upsampler.728* %20, %struct.my_upsampler.728** %3, align 8
  %21 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %22 = bitcast %struct.my_upsampler.728* %21 to %struct.jpeg_upsampler.485*
  %23 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %23, i32 0, i32 81
  store %struct.jpeg_upsampler.485* %22, %struct.jpeg_upsampler.485** %24, align 8
  %25 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %26 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %25, i32 0, i32 0
  %27 = getelementptr inbounds %struct.jpeg_upsampler.485, %struct.jpeg_upsampler.485* %26, i32 0, i32 0
  %28 = bitcast {}** %27 to void (%struct.jpeg_decompress_struct.469*)**
  store void (%struct.jpeg_decompress_struct.469*)* @start_pass_upsample, void (%struct.jpeg_decompress_struct.469*)** %28, align 8
  %29 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %30 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %29, i32 0, i32 0
  %31 = getelementptr inbounds %struct.jpeg_upsampler.485, %struct.jpeg_upsampler.485* %30, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8***, i32*, i32, i8**, i32*, i32)* @sep_upsample, void (%struct.jpeg_decompress_struct.469*, i8***, i32*, i32, i8**, i32*, i32)** %31, align 8
  %32 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %33 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %32, i32 0, i32 0
  %34 = getelementptr inbounds %struct.jpeg_upsampler.485, %struct.jpeg_upsampler.485* %33, i32 0, i32 2
  store i32 0, i32* %34, align 8
  %35 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %35, i32 0, i32 56
  %37 = load i32, i32* %36, align 8
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %1
  %40 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %40, i32 0, i32 0
  %42 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %41, align 8
  %43 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %42, i32 0, i32 5
  store i32 23, i32* %43, align 8
  %44 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %45 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %44, i32 0, i32 0
  %46 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %45, align 8
  %47 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %46, i32 0, i32 0
  %48 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %47, align 8
  %49 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %50 = bitcast %struct.jpeg_decompress_struct.469* %49 to %struct.jpeg_common_struct*
  call void %48(%struct.jpeg_common_struct* %50)
  br label %51

51:                                               ; preds = %39, %1
  %52 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %52, i32 0, i32 17
  %54 = load i32, i32* %53, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %61

56:                                               ; preds = %51
  %57 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %58 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %57, i32 0, i32 59
  %59 = load i32, i32* %58, align 4
  %60 = icmp sgt i32 %59, 1
  br label %61

61:                                               ; preds = %56, %51
  %62 = phi i1 [ false, %51 ], [ %60, %56 ]
  %63 = zext i1 %62 to i32
  store i32 %63, i32* %7, align 4
  store i32 0, i32* %4, align 4
  %64 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %65 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %64, i32 0, i32 43
  %66 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %65, align 8
  store %struct.jpeg_component_info* %66, %struct.jpeg_component_info** %5, align 8
  br label %67

67:                                               ; preds = %277, %61
  %68 = load i32, i32* %4, align 4
  %69 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %70 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %69, i32 0, i32 8
  %71 = load i32, i32* %70, align 8
  %72 = icmp slt i32 %68, %71
  br i1 %72, label %73, label %282

73:                                               ; preds = %67
  %74 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %75 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %74, i32 0, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %78 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %77, i32 0, i32 9
  %79 = load i32, i32* %78, align 4
  %80 = mul nsw i32 %76, %79
  %81 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %82 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %81, i32 0, i32 59
  %83 = load i32, i32* %82, align 4
  %84 = sdiv i32 %80, %83
  store i32 %84, i32* %8, align 4
  %85 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %86 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %85, i32 0, i32 3
  %87 = load i32, i32* %86, align 4
  %88 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %89 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %88, i32 0, i32 9
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %87, %90
  %92 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %93 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %92, i32 0, i32 59
  %94 = load i32, i32* %93, align 4
  %95 = sdiv i32 %91, %94
  store i32 %95, i32* %9, align 4
  %96 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %97 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %96, i32 0, i32 57
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %10, align 4
  %99 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %100 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %99, i32 0, i32 58
  %101 = load i32, i32* %100, align 8
  store i32 %101, i32* %11, align 4
  %102 = load i32, i32* %9, align 4
  %103 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %104 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %103, i32 0, i32 5
  %105 = load i32, i32* %4, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [10 x i32], [10 x i32]* %104, i64 0, i64 %106
  store i32 %102, i32* %107, align 4
  store i32 1, i32* %6, align 4
  %108 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %109 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %108, i32 0, i32 12
  %110 = load i32, i32* %109, align 8
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %118, label %112

112:                                              ; preds = %73
  %113 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %114 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %113, i32 0, i32 2
  %115 = load i32, i32* %4, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*], [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*]* %114, i64 0, i64 %116
  store void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)* @noop_upsample, void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)** %117, align 8
  store i32 0, i32* %6, align 4
  br label %246

118:                                              ; preds = %73
  %119 = load i32, i32* %8, align 4
  %120 = load i32, i32* %10, align 4
  %121 = icmp eq i32 %119, %120
  br i1 %121, label %122, label %132

122:                                              ; preds = %118
  %123 = load i32, i32* %9, align 4
  %124 = load i32, i32* %11, align 4
  %125 = icmp eq i32 %123, %124
  br i1 %125, label %126, label %132

126:                                              ; preds = %122
  %127 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %128 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %127, i32 0, i32 2
  %129 = load i32, i32* %4, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*], [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*]* %128, i64 0, i64 %130
  store void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)* @fullsize_upsample, void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)** %131, align 8
  store i32 0, i32* %6, align 4
  br label %245

132:                                              ; preds = %122, %118
  %133 = load i32, i32* %8, align 4
  %134 = mul nsw i32 %133, 2
  %135 = load i32, i32* %10, align 4
  %136 = icmp eq i32 %134, %135
  br i1 %136, label %137, label %162

137:                                              ; preds = %132
  %138 = load i32, i32* %9, align 4
  %139 = load i32, i32* %11, align 4
  %140 = icmp eq i32 %138, %139
  br i1 %140, label %141, label %162

141:                                              ; preds = %137
  %142 = load i32, i32* %7, align 4
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %144, label %155

144:                                              ; preds = %141
  %145 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %146 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %145, i32 0, i32 10
  %147 = load i32, i32* %146, align 8
  %148 = icmp ugt i32 %147, 2
  br i1 %148, label %149, label %155

149:                                              ; preds = %144
  %150 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %151 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %150, i32 0, i32 2
  %152 = load i32, i32* %4, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*], [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*]* %151, i64 0, i64 %153
  store void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)* @h2v1_fancy_upsample, void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)** %154, align 8
  br label %161

155:                                              ; preds = %144, %141
  %156 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %157 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %156, i32 0, i32 2
  %158 = load i32, i32* %4, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*], [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*]* %157, i64 0, i64 %159
  store void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)* @h2v1_upsample, void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)** %160, align 8
  br label %161

161:                                              ; preds = %155, %149
  br label %244

162:                                              ; preds = %137, %132
  %163 = load i32, i32* %8, align 4
  %164 = mul nsw i32 %163, 2
  %165 = load i32, i32* %10, align 4
  %166 = icmp eq i32 %164, %165
  br i1 %166, label %167, label %196

167:                                              ; preds = %162
  %168 = load i32, i32* %9, align 4
  %169 = mul nsw i32 %168, 2
  %170 = load i32, i32* %11, align 4
  %171 = icmp eq i32 %169, %170
  br i1 %171, label %172, label %196

172:                                              ; preds = %167
  %173 = load i32, i32* %7, align 4
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %175, label %189

175:                                              ; preds = %172
  %176 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %177 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %176, i32 0, i32 10
  %178 = load i32, i32* %177, align 8
  %179 = icmp ugt i32 %178, 2
  br i1 %179, label %180, label %189

180:                                              ; preds = %175
  %181 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %182 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %181, i32 0, i32 2
  %183 = load i32, i32* %4, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*], [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*]* %182, i64 0, i64 %184
  store void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)* @h2v2_fancy_upsample, void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)** %185, align 8
  %186 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %187 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %186, i32 0, i32 0
  %188 = getelementptr inbounds %struct.jpeg_upsampler.485, %struct.jpeg_upsampler.485* %187, i32 0, i32 2
  store i32 1, i32* %188, align 8
  br label %195

189:                                              ; preds = %175, %172
  %190 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %191 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %190, i32 0, i32 2
  %192 = load i32, i32* %4, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*], [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*]* %191, i64 0, i64 %193
  store void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)* @h2v2_upsample, void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)** %194, align 8
  br label %195

195:                                              ; preds = %189, %180
  br label %243

196:                                              ; preds = %167, %162
  %197 = load i32, i32* %10, align 4
  %198 = load i32, i32* %8, align 4
  %199 = srem i32 %197, %198
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %230

201:                                              ; preds = %196
  %202 = load i32, i32* %11, align 4
  %203 = load i32, i32* %9, align 4
  %204 = srem i32 %202, %203
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %230

206:                                              ; preds = %201
  %207 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %208 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %207, i32 0, i32 2
  %209 = load i32, i32* %4, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*], [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*]* %208, i64 0, i64 %210
  store void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)* @int_upsample, void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)** %211, align 8
  %212 = load i32, i32* %10, align 4
  %213 = load i32, i32* %8, align 4
  %214 = sdiv i32 %212, %213
  %215 = trunc i32 %214 to i8
  %216 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %217 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %216, i32 0, i32 6
  %218 = load i32, i32* %4, align 4
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds [10 x i8], [10 x i8]* %217, i64 0, i64 %219
  store i8 %215, i8* %220, align 1
  %221 = load i32, i32* %11, align 4
  %222 = load i32, i32* %9, align 4
  %223 = sdiv i32 %221, %222
  %224 = trunc i32 %223 to i8
  %225 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %226 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %225, i32 0, i32 7
  %227 = load i32, i32* %4, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds [10 x i8], [10 x i8]* %226, i64 0, i64 %228
  store i8 %224, i8* %229, align 1
  br label %242

230:                                              ; preds = %201, %196
  %231 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %232 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %231, i32 0, i32 0
  %233 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %232, align 8
  %234 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %233, i32 0, i32 5
  store i32 37, i32* %234, align 8
  %235 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %236 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %235, i32 0, i32 0
  %237 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %236, align 8
  %238 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %237, i32 0, i32 0
  %239 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %238, align 8
  %240 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %241 = bitcast %struct.jpeg_decompress_struct.469* %240 to %struct.jpeg_common_struct*
  call void %239(%struct.jpeg_common_struct* %241)
  br label %242

242:                                              ; preds = %230, %206
  br label %243

243:                                              ; preds = %242, %195
  br label %244

244:                                              ; preds = %243, %161
  br label %245

245:                                              ; preds = %244, %126
  br label %246

246:                                              ; preds = %245, %112
  %247 = load i32, i32* %6, align 4
  %248 = icmp ne i32 %247, 0
  br i1 %248, label %249, label %276

249:                                              ; preds = %246
  %250 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %251 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %250, i32 0, i32 1
  %252 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %251, align 8
  %253 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %252, i32 0, i32 2
  %254 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %253, align 8
  %255 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %256 = bitcast %struct.jpeg_decompress_struct.469* %255 to %struct.jpeg_common_struct*
  %257 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %258 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %257, i32 0, i32 26
  %259 = load i32, i32* %258, align 8
  %260 = zext i32 %259 to i64
  %261 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %262 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %261, i32 0, i32 57
  %263 = load i32, i32* %262, align 4
  %264 = sext i32 %263 to i64
  %265 = call i64 @jround_up(i64 %260, i64 %264)
  %266 = trunc i64 %265 to i32
  %267 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %268 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %267, i32 0, i32 58
  %269 = load i32, i32* %268, align 8
  %270 = call i8** %254(%struct.jpeg_common_struct* %256, i32 1, i32 %266, i32 %269)
  %271 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %272 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %271, i32 0, i32 1
  %273 = load i32, i32* %4, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds [10 x i8**], [10 x i8**]* %272, i64 0, i64 %274
  store i8** %270, i8*** %275, align 8
  br label %276

276:                                              ; preds = %249, %246
  br label %277

277:                                              ; preds = %276
  %278 = load i32, i32* %4, align 4
  %279 = add nsw i32 %278, 1
  store i32 %279, i32* %4, align 4
  %280 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %281 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %280, i32 1
  store %struct.jpeg_component_info* %281, %struct.jpeg_component_info** %5, align 8
  br label %67

282:                                              ; preds = %67
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_upsample(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_upsampler.728*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %4 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %4, i32 0, i32 81
  %6 = load %struct.jpeg_upsampler.485*, %struct.jpeg_upsampler.485** %5, align 8
  %7 = bitcast %struct.jpeg_upsampler.485* %6 to %struct.my_upsampler.728*
  store %struct.my_upsampler.728* %7, %struct.my_upsampler.728** %3, align 8
  %8 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %8, i32 0, i32 58
  %10 = load i32, i32* %9, align 8
  %11 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %12 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %11, i32 0, i32 3
  store i32 %10, i32* %12, align 8
  %13 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %13, i32 0, i32 27
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %3, align 8
  %17 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %16, i32 0, i32 4
  store i32 %15, i32* %17, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @sep_upsample(%struct.jpeg_decompress_struct.469* %0, i8*** %1, i32* %2, i32 %3, i8** %4, i32* %5, i32 %6) #0 {
  %8 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %9 = alloca i8***, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8**, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.my_upsampler.728*, align 8
  %16 = alloca i32, align 4
  %17 = alloca %struct.jpeg_component_info*, align 8
  %18 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %8, align 8
  store i8*** %1, i8**** %9, align 8
  store i32* %2, i32** %10, align 8
  store i32 %3, i32* %11, align 4
  store i8** %4, i8*** %12, align 8
  store i32* %5, i32** %13, align 8
  store i32 %6, i32* %14, align 4
  %19 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %8, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %19, i32 0, i32 81
  %21 = load %struct.jpeg_upsampler.485*, %struct.jpeg_upsampler.485** %20, align 8
  %22 = bitcast %struct.jpeg_upsampler.485* %21 to %struct.my_upsampler.728*
  store %struct.my_upsampler.728* %22, %struct.my_upsampler.728** %15, align 8
  %23 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %15, align 8
  %24 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %23, i32 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %8, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %26, i32 0, i32 58
  %28 = load i32, i32* %27, align 8
  %29 = icmp sge i32 %25, %28
  br i1 %29, label %30, label %79

30:                                               ; preds = %7
  store i32 0, i32* %16, align 4
  %31 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %8, align 8
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %31, i32 0, i32 43
  %33 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %32, align 8
  store %struct.jpeg_component_info* %33, %struct.jpeg_component_info** %17, align 8
  br label %34

34:                                               ; preds = %71, %30
  %35 = load i32, i32* %16, align 4
  %36 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %8, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %36, i32 0, i32 8
  %38 = load i32, i32* %37, align 8
  %39 = icmp slt i32 %35, %38
  br i1 %39, label %40, label %76

40:                                               ; preds = %34
  %41 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %15, align 8
  %42 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %41, i32 0, i32 2
  %43 = load i32, i32* %16, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*], [10 x void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*]* %42, i64 0, i64 %44
  %46 = load void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)*, void (%struct.jpeg_decompress_struct.469*, %struct.jpeg_component_info*, i8**, i8***)** %45, align 8
  %47 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %8, align 8
  %48 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %17, align 8
  %49 = load i8***, i8**** %9, align 8
  %50 = load i32, i32* %16, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8**, i8*** %49, i64 %51
  %53 = load i8**, i8*** %52, align 8
  %54 = load i32*, i32** %10, align 8
  %55 = load i32, i32* %54, align 4
  %56 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %15, align 8
  %57 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %56, i32 0, i32 5
  %58 = load i32, i32* %16, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [10 x i32], [10 x i32]* %57, i64 0, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = mul i32 %55, %61
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8*, i8** %53, i64 %63
  %65 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %15, align 8
  %66 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %65, i32 0, i32 1
  %67 = getelementptr inbounds [10 x i8**], [10 x i8**]* %66, i64 0, i64 0
  %68 = load i32, i32* %16, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8**, i8*** %67, i64 %69
  call void %46(%struct.jpeg_decompress_struct.469* %47, %struct.jpeg_component_info* %48, i8** %64, i8*** %70)
  br label %71

71:                                               ; preds = %40
  %72 = load i32, i32* %16, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %16, align 4
  %74 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %17, align 8
  %75 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %74, i32 1
  store %struct.jpeg_component_info* %75, %struct.jpeg_component_info** %17, align 8
  br label %34

76:                                               ; preds = %34
  %77 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %15, align 8
  %78 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %77, i32 0, i32 3
  store i32 0, i32* %78, align 8
  br label %79

79:                                               ; preds = %76, %7
  %80 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %8, align 8
  %81 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %80, i32 0, i32 58
  %82 = load i32, i32* %81, align 8
  %83 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %15, align 8
  %84 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %83, i32 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = sub nsw i32 %82, %85
  store i32 %86, i32* %18, align 4
  %87 = load i32, i32* %18, align 4
  %88 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %15, align 8
  %89 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %88, i32 0, i32 4
  %90 = load i32, i32* %89, align 4
  %91 = icmp ugt i32 %87, %90
  br i1 %91, label %92, label %96

92:                                               ; preds = %79
  %93 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %15, align 8
  %94 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %93, i32 0, i32 4
  %95 = load i32, i32* %94, align 4
  store i32 %95, i32* %18, align 4
  br label %96

96:                                               ; preds = %92, %79
  %97 = load i32*, i32** %13, align 8
  %98 = load i32, i32* %97, align 4
  %99 = load i32, i32* %14, align 4
  %100 = sub i32 %99, %98
  store i32 %100, i32* %14, align 4
  %101 = load i32, i32* %18, align 4
  %102 = load i32, i32* %14, align 4
  %103 = icmp ugt i32 %101, %102
  br i1 %103, label %104, label %106

104:                                              ; preds = %96
  %105 = load i32, i32* %14, align 4
  store i32 %105, i32* %18, align 4
  br label %106

106:                                              ; preds = %104, %96
  %107 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %8, align 8
  %108 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %107, i32 0, i32 82
  %109 = load %struct.jpeg_color_deconverter.486*, %struct.jpeg_color_deconverter.486** %108, align 8
  %110 = getelementptr inbounds %struct.jpeg_color_deconverter.486, %struct.jpeg_color_deconverter.486* %109, i32 0, i32 1
  %111 = load void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**, i32)*, void (%struct.jpeg_decompress_struct.469*, i8***, i32, i8**, i32)** %110, align 8
  %112 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %8, align 8
  %113 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %15, align 8
  %114 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %113, i32 0, i32 1
  %115 = getelementptr inbounds [10 x i8**], [10 x i8**]* %114, i64 0, i64 0
  %116 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %15, align 8
  %117 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %116, i32 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = load i8**, i8*** %12, align 8
  %120 = load i32*, i32** %13, align 8
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i8*, i8** %119, i64 %122
  %124 = load i32, i32* %18, align 4
  call void %111(%struct.jpeg_decompress_struct.469* %112, i8*** %115, i32 %118, i8** %123, i32 %124)
  %125 = load i32, i32* %18, align 4
  %126 = load i32*, i32** %13, align 8
  %127 = load i32, i32* %126, align 4
  %128 = add i32 %127, %125
  store i32 %128, i32* %126, align 4
  %129 = load i32, i32* %18, align 4
  %130 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %15, align 8
  %131 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %130, i32 0, i32 4
  %132 = load i32, i32* %131, align 4
  %133 = sub i32 %132, %129
  store i32 %133, i32* %131, align 4
  %134 = load i32, i32* %18, align 4
  %135 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %15, align 8
  %136 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %135, i32 0, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = add i32 %137, %134
  store i32 %138, i32* %136, align 8
  %139 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %15, align 8
  %140 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %139, i32 0, i32 3
  %141 = load i32, i32* %140, align 8
  %142 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %8, align 8
  %143 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %142, i32 0, i32 58
  %144 = load i32, i32* %143, align 8
  %145 = icmp sge i32 %141, %144
  br i1 %145, label %146, label %150

146:                                              ; preds = %106
  %147 = load i32*, i32** %10, align 8
  %148 = load i32, i32* %147, align 4
  %149 = add i32 %148, 1
  store i32 %149, i32* %147, align 4
  br label %150

150:                                              ; preds = %146, %106
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @noop_upsample(%struct.jpeg_decompress_struct.469* %0, %struct.jpeg_component_info* %1, i8** %2, i8*** %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8***, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i8*** %3, i8**** %8, align 8
  %9 = load i8***, i8**** %8, align 8
  store i8** null, i8*** %9, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @fullsize_upsample(%struct.jpeg_decompress_struct.469* %0, %struct.jpeg_component_info* %1, i8** %2, i8*** %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8***, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i8*** %3, i8**** %8, align 8
  %9 = load i8**, i8*** %7, align 8
  %10 = load i8***, i8**** %8, align 8
  store i8** %9, i8*** %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @h2v1_fancy_upsample(%struct.jpeg_decompress_struct.469* %0, %struct.jpeg_component_info* %1, i8** %2, i8*** %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8***, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i8*** %3, i8**** %8, align 8
  %15 = load i8***, i8**** %8, align 8
  %16 = load i8**, i8*** %15, align 8
  store i8** %16, i8*** %9, align 8
  store i32 0, i32* %14, align 4
  br label %17

17:                                               ; preds = %110, %4
  %18 = load i32, i32* %14, align 4
  %19 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %19, i32 0, i32 58
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %18, %21
  br i1 %22, label %23, label %113

23:                                               ; preds = %17
  %24 = load i8**, i8*** %7, align 8
  %25 = load i32, i32* %14, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8*, i8** %24, i64 %26
  %28 = load i8*, i8** %27, align 8
  store i8* %28, i8** %10, align 8
  %29 = load i8**, i8*** %9, align 8
  %30 = load i32, i32* %14, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8*, i8** %29, i64 %31
  %33 = load i8*, i8** %32, align 8
  store i8* %33, i8** %11, align 8
  %34 = load i8*, i8** %10, align 8
  %35 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %35, i8** %10, align 8
  %36 = load i8, i8* %34, align 1
  %37 = zext i8 %36 to i32
  store i32 %37, i32* %12, align 4
  %38 = load i32, i32* %12, align 4
  %39 = trunc i32 %38 to i8
  %40 = load i8*, i8** %11, align 8
  %41 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %41, i8** %11, align 8
  store i8 %39, i8* %40, align 1
  %42 = load i32, i32* %12, align 4
  %43 = mul nsw i32 %42, 3
  %44 = load i8*, i8** %10, align 8
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = add nsw i32 %43, %46
  %48 = add nsw i32 %47, 2
  %49 = ashr i32 %48, 2
  %50 = trunc i32 %49 to i8
  %51 = load i8*, i8** %11, align 8
  %52 = getelementptr inbounds i8, i8* %51, i32 1
  store i8* %52, i8** %11, align 8
  store i8 %50, i8* %51, align 1
  %53 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %54 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %53, i32 0, i32 10
  %55 = load i32, i32* %54, align 8
  %56 = sub i32 %55, 2
  store i32 %56, i32* %13, align 4
  br label %57

57:                                               ; preds = %87, %23
  %58 = load i32, i32* %13, align 4
  %59 = icmp ugt i32 %58, 0
  br i1 %59, label %60, label %90

60:                                               ; preds = %57
  %61 = load i8*, i8** %10, align 8
  %62 = getelementptr inbounds i8, i8* %61, i32 1
  store i8* %62, i8** %10, align 8
  %63 = load i8, i8* %61, align 1
  %64 = zext i8 %63 to i32
  %65 = mul nsw i32 %64, 3
  store i32 %65, i32* %12, align 4
  %66 = load i32, i32* %12, align 4
  %67 = load i8*, i8** %10, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 -2
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = add nsw i32 %66, %70
  %72 = add nsw i32 %71, 1
  %73 = ashr i32 %72, 2
  %74 = trunc i32 %73 to i8
  %75 = load i8*, i8** %11, align 8
  %76 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %76, i8** %11, align 8
  store i8 %74, i8* %75, align 1
  %77 = load i32, i32* %12, align 4
  %78 = load i8*, i8** %10, align 8
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = add nsw i32 %77, %80
  %82 = add nsw i32 %81, 2
  %83 = ashr i32 %82, 2
  %84 = trunc i32 %83 to i8
  %85 = load i8*, i8** %11, align 8
  %86 = getelementptr inbounds i8, i8* %85, i32 1
  store i8* %86, i8** %11, align 8
  store i8 %84, i8* %85, align 1
  br label %87

87:                                               ; preds = %60
  %88 = load i32, i32* %13, align 4
  %89 = add i32 %88, -1
  store i32 %89, i32* %13, align 4
  br label %57

90:                                               ; preds = %57
  %91 = load i8*, i8** %10, align 8
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  store i32 %93, i32* %12, align 4
  %94 = load i32, i32* %12, align 4
  %95 = mul nsw i32 %94, 3
  %96 = load i8*, i8** %10, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 -1
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = add nsw i32 %95, %99
  %101 = add nsw i32 %100, 1
  %102 = ashr i32 %101, 2
  %103 = trunc i32 %102 to i8
  %104 = load i8*, i8** %11, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %105, i8** %11, align 8
  store i8 %103, i8* %104, align 1
  %106 = load i32, i32* %12, align 4
  %107 = trunc i32 %106 to i8
  %108 = load i8*, i8** %11, align 8
  %109 = getelementptr inbounds i8, i8* %108, i32 1
  store i8* %109, i8** %11, align 8
  store i8 %107, i8* %108, align 1
  br label %110

110:                                              ; preds = %90
  %111 = load i32, i32* %14, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %14, align 4
  br label %17

113:                                              ; preds = %17
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @h2v1_upsample(%struct.jpeg_decompress_struct.469* %0, %struct.jpeg_component_info* %1, i8** %2, i8*** %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8***, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i8*** %3, i8**** %8, align 8
  %15 = load i8***, i8**** %8, align 8
  %16 = load i8**, i8*** %15, align 8
  store i8** %16, i8*** %9, align 8
  store i32 0, i32* %14, align 4
  br label %17

17:                                               ; preds = %55, %4
  %18 = load i32, i32* %14, align 4
  %19 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %19, i32 0, i32 58
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %18, %21
  br i1 %22, label %23, label %58

23:                                               ; preds = %17
  %24 = load i8**, i8*** %7, align 8
  %25 = load i32, i32* %14, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8*, i8** %24, i64 %26
  %28 = load i8*, i8** %27, align 8
  store i8* %28, i8** %10, align 8
  %29 = load i8**, i8*** %9, align 8
  %30 = load i32, i32* %14, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8*, i8** %29, i64 %31
  %33 = load i8*, i8** %32, align 8
  store i8* %33, i8** %11, align 8
  %34 = load i8*, i8** %11, align 8
  %35 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %35, i32 0, i32 26
  %37 = load i32, i32* %36, align 8
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %34, i64 %38
  store i8* %39, i8** %13, align 8
  br label %40

40:                                               ; preds = %44, %23
  %41 = load i8*, i8** %11, align 8
  %42 = load i8*, i8** %13, align 8
  %43 = icmp ult i8* %41, %42
  br i1 %43, label %44, label %54

44:                                               ; preds = %40
  %45 = load i8*, i8** %10, align 8
  %46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %46, i8** %10, align 8
  %47 = load i8, i8* %45, align 1
  store i8 %47, i8* %12, align 1
  %48 = load i8, i8* %12, align 1
  %49 = load i8*, i8** %11, align 8
  %50 = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %50, i8** %11, align 8
  store i8 %48, i8* %49, align 1
  %51 = load i8, i8* %12, align 1
  %52 = load i8*, i8** %11, align 8
  %53 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %53, i8** %11, align 8
  store i8 %51, i8* %52, align 1
  br label %40

54:                                               ; preds = %40
  br label %55

55:                                               ; preds = %54
  %56 = load i32, i32* %14, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %14, align 4
  br label %17

58:                                               ; preds = %17
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @h2v2_fancy_upsample(%struct.jpeg_decompress_struct.469* %0, %struct.jpeg_component_info* %1, i8** %2, i8*** %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8***, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i8*** %3, i8**** %8, align 8
  %20 = load i8***, i8**** %8, align 8
  %21 = load i8**, i8*** %20, align 8
  store i8** %21, i8*** %9, align 8
  store i32 0, i32* %18, align 4
  store i32 0, i32* %17, align 4
  br label %22

22:                                               ; preds = %160, %4
  %23 = load i32, i32* %18, align 4
  %24 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %24, i32 0, i32 58
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %23, %26
  br i1 %27, label %28, label %163

28:                                               ; preds = %22
  store i32 0, i32* %19, align 4
  br label %29

29:                                               ; preds = %157, %28
  %30 = load i32, i32* %19, align 4
  %31 = icmp slt i32 %30, 2
  br i1 %31, label %32, label %160

32:                                               ; preds = %29
  %33 = load i8**, i8*** %7, align 8
  %34 = load i32, i32* %17, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8*, i8** %33, i64 %35
  %37 = load i8*, i8** %36, align 8
  store i8* %37, i8** %10, align 8
  %38 = load i32, i32* %19, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %32
  %41 = load i8**, i8*** %7, align 8
  %42 = load i32, i32* %17, align 4
  %43 = sub nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8*, i8** %41, i64 %44
  %46 = load i8*, i8** %45, align 8
  store i8* %46, i8** %11, align 8
  br label %54

47:                                               ; preds = %32
  %48 = load i8**, i8*** %7, align 8
  %49 = load i32, i32* %17, align 4
  %50 = add nsw i32 %49, 1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8*, i8** %48, i64 %51
  %53 = load i8*, i8** %52, align 8
  store i8* %53, i8** %11, align 8
  br label %54

54:                                               ; preds = %47, %40
  %55 = load i8**, i8*** %9, align 8
  %56 = load i32, i32* %18, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %18, align 4
  %58 = sext i32 %56 to i64
  %59 = getelementptr inbounds i8*, i8** %55, i64 %58
  %60 = load i8*, i8** %59, align 8
  store i8* %60, i8** %12, align 8
  %61 = load i8*, i8** %10, align 8
  %62 = getelementptr inbounds i8, i8* %61, i32 1
  store i8* %62, i8** %10, align 8
  %63 = load i8, i8* %61, align 1
  %64 = zext i8 %63 to i32
  %65 = mul nsw i32 %64, 3
  %66 = load i8*, i8** %11, align 8
  %67 = getelementptr inbounds i8, i8* %66, i32 1
  store i8* %67, i8** %11, align 8
  %68 = load i8, i8* %66, align 1
  %69 = zext i8 %68 to i32
  %70 = add nsw i32 %65, %69
  store i32 %70, i32* %13, align 4
  %71 = load i8*, i8** %10, align 8
  %72 = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %72, i8** %10, align 8
  %73 = load i8, i8* %71, align 1
  %74 = zext i8 %73 to i32
  %75 = mul nsw i32 %74, 3
  %76 = load i8*, i8** %11, align 8
  %77 = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %77, i8** %11, align 8
  %78 = load i8, i8* %76, align 1
  %79 = zext i8 %78 to i32
  %80 = add nsw i32 %75, %79
  store i32 %80, i32* %15, align 4
  %81 = load i32, i32* %13, align 4
  %82 = mul nsw i32 %81, 4
  %83 = add nsw i32 %82, 8
  %84 = ashr i32 %83, 4
  %85 = trunc i32 %84 to i8
  %86 = load i8*, i8** %12, align 8
  %87 = getelementptr inbounds i8, i8* %86, i32 1
  store i8* %87, i8** %12, align 8
  store i8 %85, i8* %86, align 1
  %88 = load i32, i32* %13, align 4
  %89 = mul nsw i32 %88, 3
  %90 = load i32, i32* %15, align 4
  %91 = add nsw i32 %89, %90
  %92 = add nsw i32 %91, 7
  %93 = ashr i32 %92, 4
  %94 = trunc i32 %93 to i8
  %95 = load i8*, i8** %12, align 8
  %96 = getelementptr inbounds i8, i8* %95, i32 1
  store i8* %96, i8** %12, align 8
  store i8 %94, i8* %95, align 1
  %97 = load i32, i32* %13, align 4
  store i32 %97, i32* %14, align 4
  %98 = load i32, i32* %15, align 4
  store i32 %98, i32* %13, align 4
  %99 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %100 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %99, i32 0, i32 10
  %101 = load i32, i32* %100, align 8
  %102 = sub i32 %101, 2
  store i32 %102, i32* %16, align 4
  br label %103

103:                                              ; preds = %137, %54
  %104 = load i32, i32* %16, align 4
  %105 = icmp ugt i32 %104, 0
  br i1 %105, label %106, label %140

106:                                              ; preds = %103
  %107 = load i8*, i8** %10, align 8
  %108 = getelementptr inbounds i8, i8* %107, i32 1
  store i8* %108, i8** %10, align 8
  %109 = load i8, i8* %107, align 1
  %110 = zext i8 %109 to i32
  %111 = mul nsw i32 %110, 3
  %112 = load i8*, i8** %11, align 8
  %113 = getelementptr inbounds i8, i8* %112, i32 1
  store i8* %113, i8** %11, align 8
  %114 = load i8, i8* %112, align 1
  %115 = zext i8 %114 to i32
  %116 = add nsw i32 %111, %115
  store i32 %116, i32* %15, align 4
  %117 = load i32, i32* %13, align 4
  %118 = mul nsw i32 %117, 3
  %119 = load i32, i32* %14, align 4
  %120 = add nsw i32 %118, %119
  %121 = add nsw i32 %120, 8
  %122 = ashr i32 %121, 4
  %123 = trunc i32 %122 to i8
  %124 = load i8*, i8** %12, align 8
  %125 = getelementptr inbounds i8, i8* %124, i32 1
  store i8* %125, i8** %12, align 8
  store i8 %123, i8* %124, align 1
  %126 = load i32, i32* %13, align 4
  %127 = mul nsw i32 %126, 3
  %128 = load i32, i32* %15, align 4
  %129 = add nsw i32 %127, %128
  %130 = add nsw i32 %129, 7
  %131 = ashr i32 %130, 4
  %132 = trunc i32 %131 to i8
  %133 = load i8*, i8** %12, align 8
  %134 = getelementptr inbounds i8, i8* %133, i32 1
  store i8* %134, i8** %12, align 8
  store i8 %132, i8* %133, align 1
  %135 = load i32, i32* %13, align 4
  store i32 %135, i32* %14, align 4
  %136 = load i32, i32* %15, align 4
  store i32 %136, i32* %13, align 4
  br label %137

137:                                              ; preds = %106
  %138 = load i32, i32* %16, align 4
  %139 = add i32 %138, -1
  store i32 %139, i32* %16, align 4
  br label %103

140:                                              ; preds = %103
  %141 = load i32, i32* %13, align 4
  %142 = mul nsw i32 %141, 3
  %143 = load i32, i32* %14, align 4
  %144 = add nsw i32 %142, %143
  %145 = add nsw i32 %144, 8
  %146 = ashr i32 %145, 4
  %147 = trunc i32 %146 to i8
  %148 = load i8*, i8** %12, align 8
  %149 = getelementptr inbounds i8, i8* %148, i32 1
  store i8* %149, i8** %12, align 8
  store i8 %147, i8* %148, align 1
  %150 = load i32, i32* %13, align 4
  %151 = mul nsw i32 %150, 4
  %152 = add nsw i32 %151, 7
  %153 = ashr i32 %152, 4
  %154 = trunc i32 %153 to i8
  %155 = load i8*, i8** %12, align 8
  %156 = getelementptr inbounds i8, i8* %155, i32 1
  store i8* %156, i8** %12, align 8
  store i8 %154, i8* %155, align 1
  br label %157

157:                                              ; preds = %140
  %158 = load i32, i32* %19, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %19, align 4
  br label %29

160:                                              ; preds = %29
  %161 = load i32, i32* %17, align 4
  %162 = add nsw i32 %161, 1
  store i32 %162, i32* %17, align 4
  br label %22

163:                                              ; preds = %22
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @h2v2_upsample(%struct.jpeg_decompress_struct.469* %0, %struct.jpeg_component_info* %1, i8** %2, i8*** %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8***, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i8*** %3, i8**** %8, align 8
  %16 = load i8***, i8**** %8, align 8
  %17 = load i8**, i8*** %16, align 8
  store i8** %17, i8*** %9, align 8
  store i32 0, i32* %15, align 4
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %55, %4
  %19 = load i32, i32* %15, align 4
  %20 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %20, i32 0, i32 58
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %19, %22
  br i1 %23, label %24, label %68

24:                                               ; preds = %18
  %25 = load i8**, i8*** %7, align 8
  %26 = load i32, i32* %14, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8*, i8** %25, i64 %27
  %29 = load i8*, i8** %28, align 8
  store i8* %29, i8** %10, align 8
  %30 = load i8**, i8*** %9, align 8
  %31 = load i32, i32* %15, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8*, i8** %30, i64 %32
  %34 = load i8*, i8** %33, align 8
  store i8* %34, i8** %11, align 8
  %35 = load i8*, i8** %11, align 8
  %36 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %36, i32 0, i32 26
  %38 = load i32, i32* %37, align 8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %35, i64 %39
  store i8* %40, i8** %13, align 8
  br label %41

41:                                               ; preds = %45, %24
  %42 = load i8*, i8** %11, align 8
  %43 = load i8*, i8** %13, align 8
  %44 = icmp ult i8* %42, %43
  br i1 %44, label %45, label %55

45:                                               ; preds = %41
  %46 = load i8*, i8** %10, align 8
  %47 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %47, i8** %10, align 8
  %48 = load i8, i8* %46, align 1
  store i8 %48, i8* %12, align 1
  %49 = load i8, i8* %12, align 1
  %50 = load i8*, i8** %11, align 8
  %51 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %51, i8** %11, align 8
  store i8 %49, i8* %50, align 1
  %52 = load i8, i8* %12, align 1
  %53 = load i8*, i8** %11, align 8
  %54 = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %54, i8** %11, align 8
  store i8 %52, i8* %53, align 1
  br label %41

55:                                               ; preds = %41
  %56 = load i8**, i8*** %9, align 8
  %57 = load i32, i32* %15, align 4
  %58 = load i8**, i8*** %9, align 8
  %59 = load i32, i32* %15, align 4
  %60 = add nsw i32 %59, 1
  %61 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %62 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %61, i32 0, i32 26
  %63 = load i32, i32* %62, align 8
  call void @jcopy_sample_rows(i8** %56, i32 %57, i8** %58, i32 %60, i32 1, i32 %63)
  %64 = load i32, i32* %14, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %14, align 4
  %66 = load i32, i32* %15, align 4
  %67 = add nsw i32 %66, 2
  store i32 %67, i32* %15, align 4
  br label %18

68:                                               ; preds = %18
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @int_upsample(%struct.jpeg_decompress_struct.469* %0, %struct.jpeg_component_info* %1, i8** %2, i8*** %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8***, align 8
  %9 = alloca %struct.my_upsampler.728*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i8*** %3, i8**** %8, align 8
  %20 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %20, i32 0, i32 81
  %22 = load %struct.jpeg_upsampler.485*, %struct.jpeg_upsampler.485** %21, align 8
  %23 = bitcast %struct.jpeg_upsampler.485* %22 to %struct.my_upsampler.728*
  store %struct.my_upsampler.728* %23, %struct.my_upsampler.728** %9, align 8
  %24 = load i8***, i8**** %8, align 8
  %25 = load i8**, i8*** %24, align 8
  store i8** %25, i8*** %10, align 8
  %26 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %9, align 8
  %27 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %26, i32 0, i32 6
  %28 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [10 x i8], [10 x i8]* %27, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  store i32 %34, i32* %16, align 4
  %35 = load %struct.my_upsampler.728*, %struct.my_upsampler.728** %9, align 8
  %36 = getelementptr inbounds %struct.my_upsampler.728, %struct.my_upsampler.728* %35, i32 0, i32 7
  %37 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %38 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %37, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [10 x i8], [10 x i8]* %36, i64 0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  store i32 %43, i32* %17, align 4
  store i32 0, i32* %19, align 4
  store i32 0, i32* %18, align 4
  br label %44

44:                                               ; preds = %101, %4
  %45 = load i32, i32* %19, align 4
  %46 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %46, i32 0, i32 58
  %48 = load i32, i32* %47, align 8
  %49 = icmp slt i32 %45, %48
  br i1 %49, label %50, label %107

50:                                               ; preds = %44
  %51 = load i8**, i8*** %7, align 8
  %52 = load i32, i32* %18, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8*, i8** %51, i64 %53
  %55 = load i8*, i8** %54, align 8
  store i8* %55, i8** %11, align 8
  %56 = load i8**, i8*** %10, align 8
  %57 = load i32, i32* %19, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8*, i8** %56, i64 %58
  %60 = load i8*, i8** %59, align 8
  store i8* %60, i8** %12, align 8
  %61 = load i8*, i8** %12, align 8
  %62 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %62, i32 0, i32 26
  %64 = load i32, i32* %63, align 8
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %61, i64 %65
  store i8* %66, i8** %15, align 8
  br label %67

67:                                               ; preds = %86, %50
  %68 = load i8*, i8** %12, align 8
  %69 = load i8*, i8** %15, align 8
  %70 = icmp ult i8* %68, %69
  br i1 %70, label %71, label %87

71:                                               ; preds = %67
  %72 = load i8*, i8** %11, align 8
  %73 = getelementptr inbounds i8, i8* %72, i32 1
  store i8* %73, i8** %11, align 8
  %74 = load i8, i8* %72, align 1
  store i8 %74, i8* %13, align 1
  %75 = load i32, i32* %16, align 4
  store i32 %75, i32* %14, align 4
  br label %76

76:                                               ; preds = %83, %71
  %77 = load i32, i32* %14, align 4
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %86

79:                                               ; preds = %76
  %80 = load i8, i8* %13, align 1
  %81 = load i8*, i8** %12, align 8
  %82 = getelementptr inbounds i8, i8* %81, i32 1
  store i8* %82, i8** %12, align 8
  store i8 %80, i8* %81, align 1
  br label %83

83:                                               ; preds = %79
  %84 = load i32, i32* %14, align 4
  %85 = add nsw i32 %84, -1
  store i32 %85, i32* %14, align 4
  br label %76

86:                                               ; preds = %76
  br label %67

87:                                               ; preds = %67
  %88 = load i32, i32* %17, align 4
  %89 = icmp sgt i32 %88, 1
  br i1 %89, label %90, label %101

90:                                               ; preds = %87
  %91 = load i8**, i8*** %10, align 8
  %92 = load i32, i32* %19, align 4
  %93 = load i8**, i8*** %10, align 8
  %94 = load i32, i32* %19, align 4
  %95 = add nsw i32 %94, 1
  %96 = load i32, i32* %17, align 4
  %97 = sub nsw i32 %96, 1
  %98 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %99 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %98, i32 0, i32 26
  %100 = load i32, i32* %99, align 8
  call void @jcopy_sample_rows(i8** %91, i32 %92, i8** %93, i32 %95, i32 %97, i32 %100)
  br label %101

101:                                              ; preds = %90, %87
  %102 = load i32, i32* %18, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %18, align 4
  %104 = load i32, i32* %17, align 4
  %105 = load i32, i32* %19, align 4
  %106 = add nsw i32 %105, %104
  store i32 %106, i32* %19, align 4
  br label %44

107:                                              ; preds = %44
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.jvirt_barray_control** @jpeg_read_coefficients(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jvirt_barray_control**, align 8
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  %5 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %5, i32 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 202
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  call void @transdecode_master_selection(%struct.jpeg_decompress_struct* %10)
  %11 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %11, i32 0, i32 4
  store i32 209, i32* %12, align 4
  br label %40

13:                                               ; preds = %1
  %14 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %14, i32 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = icmp ne i32 %16, 209
  br i1 %17, label %18, label %39

18:                                               ; preds = %13
  %19 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %19, i32 0, i32 0
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i32 0, i32 5
  store i32 18, i32* %22, align 8
  %23 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %23, i32 0, i32 4
  %25 = load i32, i32* %24, align 4
  %26 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %26, i32 0, i32 0
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i32 0, i32 6
  %30 = bitcast %union.anon* %29 to [8 x i32]*
  %31 = getelementptr inbounds [8 x i32], [8 x i32]* %30, i64 0, i64 0
  store i32 %25, i32* %31, align 4
  %32 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %32, i32 0, i32 0
  %34 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %33, align 8
  %35 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %34, i32 0, i32 0
  %36 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %35, align 8
  %37 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %38 = bitcast %struct.jpeg_decompress_struct* %37 to %struct.jpeg_common_struct*
  call void %36(%struct.jpeg_common_struct* %38)
  br label %39

39:                                               ; preds = %18, %13
  br label %40

40:                                               ; preds = %39, %9
  br label %41

41:                                               ; preds = %106, %40
  %42 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %43 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %42, i32 0, i32 2
  %44 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %43, align 8
  %45 = icmp ne %struct.jpeg_progress_mgr* %44, null
  br i1 %45, label %46, label %55

46:                                               ; preds = %41
  %47 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %47, i32 0, i32 2
  %49 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %49, i32 0, i32 0
  %51 = bitcast {}** %50 to void (%struct.jpeg_common_struct*)**
  %52 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %51, align 8
  %53 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %54 = bitcast %struct.jpeg_decompress_struct* %53 to %struct.jpeg_common_struct*
  call void %52(%struct.jpeg_common_struct* %54)
  br label %55

55:                                               ; preds = %46, %41
  %56 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %57 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %56, i32 0, i32 77
  %58 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %57, align 8
  %59 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %58, i32 0, i32 0
  %60 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %59, align 8
  %61 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %62 = call i32 %60(%struct.jpeg_decompress_struct* %61)
  store i32 %62, i32* %4, align 4
  %63 = load i32, i32* %4, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %55
  store %struct.jvirt_barray_control** null, %struct.jvirt_barray_control*** %2, align 8
  br label %115

66:                                               ; preds = %55
  %67 = load i32, i32* %4, align 4
  %68 = icmp eq i32 %67, 2
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  br label %107

70:                                               ; preds = %66
  %71 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %72 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %71, i32 0, i32 2
  %73 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %72, align 8
  %74 = icmp ne %struct.jpeg_progress_mgr* %73, null
  br i1 %74, label %75, label %106

75:                                               ; preds = %70
  %76 = load i32, i32* %4, align 4
  %77 = icmp eq i32 %76, 3
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  %79 = load i32, i32* %4, align 4
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %106

81:                                               ; preds = %78, %75
  %82 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %83 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %82, i32 0, i32 2
  %84 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %83, align 8
  %85 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %84, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = add nsw i64 %86, 1
  store i64 %87, i64* %85, align 8
  %88 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %89 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %88, i32 0, i32 2
  %90 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %89, align 8
  %91 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %90, i32 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = icmp sge i64 %87, %92
  br i1 %93, label %94, label %105

94:                                               ; preds = %81
  %95 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %96 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %95, i32 0, i32 60
  %97 = load i32, i32* %96, align 8
  %98 = zext i32 %97 to i64
  %99 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %100 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %99, i32 0, i32 2
  %101 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %100, align 8
  %102 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %101, i32 0, i32 2
  %103 = load i64, i64* %102, align 8
  %104 = add nsw i64 %103, %98
  store i64 %104, i64* %102, align 8
  br label %105

105:                                              ; preds = %94, %81
  br label %106

106:                                              ; preds = %105, %78, %70
  br label %41

107:                                              ; preds = %69
  %108 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %109 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %108, i32 0, i32 4
  store i32 210, i32* %109, align 4
  %110 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %111 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %110, i32 0, i32 75
  %112 = load %struct.jpeg_d_coef_controller*, %struct.jpeg_d_coef_controller** %111, align 8
  %113 = getelementptr inbounds %struct.jpeg_d_coef_controller, %struct.jpeg_d_coef_controller* %112, i32 0, i32 4
  %114 = load %struct.jvirt_barray_control**, %struct.jvirt_barray_control*** %113, align 8
  store %struct.jvirt_barray_control** %114, %struct.jvirt_barray_control*** %2, align 8
  br label %115

115:                                              ; preds = %107, %65
  %116 = load %struct.jvirt_barray_control**, %struct.jvirt_barray_control*** %2, align 8
  ret %struct.jvirt_barray_control** %116
}

; Function Attrs: noinline nounwind uwtable
define internal void @transdecode_master_selection(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  %3 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i32 0, i32 45
  %6 = load i32, i32* %5, align 4
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %20

8:                                                ; preds = %1
  %9 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %9, i32 0, i32 0
  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %10, align 8
  %12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i32 0, i32 5
  store i32 1, i32* %12, align 8
  %13 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %13, i32 0, i32 0
  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i32 0, i32 0
  %17 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %16, align 8
  %18 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %19 = bitcast %struct.jpeg_decompress_struct* %18 to %struct.jpeg_common_struct*
  call void %17(%struct.jpeg_common_struct* %19)
  br label %30

20:                                               ; preds = %1
  %21 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %21, i32 0, i32 44
  %23 = load i32, i32* %22, align 8
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  call void bitcast (void (%struct.jpeg_decompress_struct.469*)* @jinit_phuff_decoder to void (%struct.jpeg_decompress_struct*)*)(%struct.jpeg_decompress_struct* %26)
  br label %29

27:                                               ; preds = %20
  %28 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  call void @jinit_huff_decoder(%struct.jpeg_decompress_struct* %28)
  br label %29

29:                                               ; preds = %27, %25
  br label %30

30:                                               ; preds = %29, %8
  %31 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  call void bitcast (void (%struct.jpeg_decompress_struct.445*, i32)* @jinit_d_coef_controller to void (%struct.jpeg_decompress_struct*, i32)*)(%struct.jpeg_decompress_struct* %31, i32 1)
  %32 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %32, i32 0, i32 1
  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %33, align 8
  %35 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %34, i32 0, i32 6
  %36 = bitcast {}** %35 to void (%struct.jpeg_common_struct*)**
  %37 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %36, align 8
  %38 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %39 = bitcast %struct.jpeg_decompress_struct* %38 to %struct.jpeg_common_struct*
  call void %37(%struct.jpeg_common_struct* %39)
  %40 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %40, i32 0, i32 77
  %42 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %41, align 8
  %43 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %42, i32 0, i32 2
  %44 = load void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)** %43, align 8
  %45 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  call void %44(%struct.jpeg_decompress_struct* %45)
  %46 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %46, i32 0, i32 2
  %48 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %47, align 8
  %49 = icmp ne %struct.jpeg_progress_mgr* %48, null
  br i1 %49, label %50, label %98

50:                                               ; preds = %30
  %51 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %51, i32 0, i32 44
  %53 = load i32, i32* %52, align 8
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %61

55:                                               ; preds = %50
  %56 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %57 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %56, i32 0, i32 8
  %58 = load i32, i32* %57, align 8
  %59 = mul nsw i32 3, %58
  %60 = add nsw i32 2, %59
  store i32 %60, i32* %3, align 4
  br label %74

61:                                               ; preds = %50
  %62 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %63 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %62, i32 0, i32 77
  %64 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %63, align 8
  %65 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %64, i32 0, i32 4
  %66 = load i32, i32* %65, align 8
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %61
  %69 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %70 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %69, i32 0, i32 8
  %71 = load i32, i32* %70, align 8
  store i32 %71, i32* %3, align 4
  br label %73

72:                                               ; preds = %61
  store i32 1, i32* %3, align 4
  br label %73

73:                                               ; preds = %72, %68
  br label %74

74:                                               ; preds = %73, %55
  %75 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %76 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %75, i32 0, i32 2
  %77 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %76, align 8
  %78 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %77, i32 0, i32 1
  store i64 0, i64* %78, align 8
  %79 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %80 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %79, i32 0, i32 60
  %81 = load i32, i32* %80, align 8
  %82 = zext i32 %81 to i64
  %83 = load i32, i32* %3, align 4
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %82, %84
  %86 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %87 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %86, i32 0, i32 2
  %88 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %87, align 8
  %89 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %88, i32 0, i32 2
  store i64 %85, i64* %89, align 8
  %90 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %91 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %90, i32 0, i32 2
  %92 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %91, align 8
  %93 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %92, i32 0, i32 3
  store i32 0, i32* %93, align 8
  %94 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %95 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %94, i32 0, i32 2
  %96 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %95, align 8
  %97 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %96, i32 0, i32 4
  store i32 1, i32* %97, align 4
  br label %98

98:                                               ; preds = %74, %30
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.jpeg_error_mgr* @jpeg_std_error(%struct.jpeg_error_mgr* %0) #0 {
  %2 = alloca %struct.jpeg_error_mgr*, align 8
  store %struct.jpeg_error_mgr* %0, %struct.jpeg_error_mgr** %2, align 8
  %3 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %3, i32 0, i32 0
  store void (%struct.jpeg_common_struct*)* @error_exit, void (%struct.jpeg_common_struct*)** %4, align 8
  %5 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8
  %6 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %5, i32 0, i32 1
  store void (%struct.jpeg_common_struct*, i32)* @emit_message, void (%struct.jpeg_common_struct*, i32)** %6, align 8
  %7 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %7, i32 0, i32 2
  store void (%struct.jpeg_common_struct*)* @output_message, void (%struct.jpeg_common_struct*)** %8, align 8
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i32 0, i32 3
  store void (%struct.jpeg_common_struct*, i8*)* @format_message, void (%struct.jpeg_common_struct*, i8*)** %10, align 8
  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8
  %12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i32 0, i32 4
  store void (%struct.jpeg_common_struct*)* @reset_error_mgr, void (%struct.jpeg_common_struct*)** %12, align 8
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i32 0, i32 7
  store i32 0, i32* %14, align 4
  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i32 0, i32 8
  store i64 0, i64* %16, align 8
  %17 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %17, i32 0, i32 5
  store i32 0, i32* %18, align 8
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i32 0, i32 9
  store i8** getelementptr inbounds ([121 x i8*], [121 x i8*]* @jpeg_std_message_table, i64 0, i64 0), i8*** %20, align 8
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i32 0, i32 10
  store i32 119, i32* %22, align 8
  %23 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %23, i32 0, i32 11
  store i8** null, i8*** %24, align 8
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i32 0, i32 12
  store i32 0, i32* %26, align 8
  %27 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8
  %28 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %27, i32 0, i32 13
  store i32 0, i32* %28, align 4
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8
  ret %struct.jpeg_error_mgr* %29
}

; Function Attrs: noinline nounwind uwtable
define internal void @error_exit(%struct.jpeg_common_struct* %0) #0 {
  %2 = alloca %struct.jpeg_common_struct*, align 8
  store %struct.jpeg_common_struct* %0, %struct.jpeg_common_struct** %2, align 8
  %3 = load %struct.jpeg_common_struct*, %struct.jpeg_common_struct** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %3, i32 0, i32 0
  %5 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %4, align 8
  %6 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %5, i32 0, i32 2
  %7 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %6, align 8
  %8 = load %struct.jpeg_common_struct*, %struct.jpeg_common_struct** %2, align 8
  call void %7(%struct.jpeg_common_struct* %8)
  %9 = load %struct.jpeg_common_struct*, %struct.jpeg_common_struct** %2, align 8
  call void bitcast (void (%struct.jpeg_common_struct.212*)* @jpeg_destroy to void (%struct.jpeg_common_struct*)*)(%struct.jpeg_common_struct* %9)
  call void @exit(i32 1) #9
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_message(%struct.jpeg_common_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_common_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.jpeg_error_mgr*, align 8
  store %struct.jpeg_common_struct* %0, %struct.jpeg_common_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.jpeg_common_struct*, %struct.jpeg_common_struct** %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %6, i32 0, i32 0
  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  store %struct.jpeg_error_mgr* %8, %struct.jpeg_error_mgr** %5, align 8
  %9 = load i32, i32* %4, align 4
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %11, label %31

11:                                               ; preds = %2
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i32 0, i32 8
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %18 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %17, i32 0, i32 7
  %19 = load i32, i32* %18, align 4
  %20 = icmp sge i32 %19, 3
  br i1 %20, label %21, label %26

21:                                               ; preds = %16, %11
  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %23 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i32 0, i32 2
  %24 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %23, align 8
  %25 = load %struct.jpeg_common_struct*, %struct.jpeg_common_struct** %3, align 8
  call void %24(%struct.jpeg_common_struct* %25)
  br label %26

26:                                               ; preds = %21, %16
  %27 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %28 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %27, i32 0, i32 8
  %29 = load i64, i64* %28, align 8
  %30 = add nsw i64 %29, 1
  store i64 %30, i64* %28, align 8
  br label %43

31:                                               ; preds = %2
  %32 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %33 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %32, i32 0, i32 7
  %34 = load i32, i32* %33, align 4
  %35 = load i32, i32* %4, align 4
  %36 = icmp sge i32 %34, %35
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %39 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %38, i32 0, i32 2
  %40 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %39, align 8
  %41 = load %struct.jpeg_common_struct*, %struct.jpeg_common_struct** %3, align 8
  call void %40(%struct.jpeg_common_struct* %41)
  br label %42

42:                                               ; preds = %37, %31
  br label %43

43:                                               ; preds = %42, %26
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @output_message(%struct.jpeg_common_struct* %0) #0 {
  %2 = alloca %struct.jpeg_common_struct*, align 8
  %3 = alloca [200 x i8], align 16
  store %struct.jpeg_common_struct* %0, %struct.jpeg_common_struct** %2, align 8
  %4 = load %struct.jpeg_common_struct*, %struct.jpeg_common_struct** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %4, i32 0, i32 0
  %6 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %6, i32 0, i32 3
  %8 = load void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*, i8*)** %7, align 8
  %9 = load %struct.jpeg_common_struct*, %struct.jpeg_common_struct** %2, align 8
  %10 = getelementptr inbounds [200 x i8], [200 x i8]* %3, i64 0, i64 0
  call void %8(%struct.jpeg_common_struct* %9, i8* %10)
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %12 = getelementptr inbounds [200 x i8], [200 x i8]* %3, i64 0, i64 0
  %13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.120, i64 0, i64 0), i8* %12)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @format_message(%struct.jpeg_common_struct* %0, i8* %1) #0 {
  %3 = alloca %struct.jpeg_common_struct*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.jpeg_error_mgr*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  store %struct.jpeg_common_struct* %0, %struct.jpeg_common_struct** %3, align 8
  store i8* %1, i8** %4, align 8
  %11 = load %struct.jpeg_common_struct*, %struct.jpeg_common_struct** %3, align 8
  %12 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %11, i32 0, i32 0
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %12, align 8
  store %struct.jpeg_error_mgr* %13, %struct.jpeg_error_mgr** %5, align 8
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i32 0, i32 5
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %6, align 4
  store i8* null, i8** %7, align 8
  %17 = load i32, i32* %6, align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %33

19:                                               ; preds = %2
  %20 = load i32, i32* %6, align 4
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i32 0, i32 10
  %23 = load i32, i32* %22, align 8
  %24 = icmp sle i32 %20, %23
  br i1 %24, label %25, label %33

25:                                               ; preds = %19
  %26 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %27 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i32 0, i32 9
  %28 = load i8**, i8*** %27, align 8
  %29 = load i32, i32* %6, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8*, i8** %28, i64 %30
  %32 = load i8*, i8** %31, align 8
  store i8* %32, i8** %7, align 8
  br label %63

33:                                               ; preds = %19, %2
  %34 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %35 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %34, i32 0, i32 11
  %36 = load i8**, i8*** %35, align 8
  %37 = icmp ne i8** %36, null
  br i1 %37, label %38, label %62

38:                                               ; preds = %33
  %39 = load i32, i32* %6, align 4
  %40 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %41 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %40, i32 0, i32 12
  %42 = load i32, i32* %41, align 8
  %43 = icmp sge i32 %39, %42
  br i1 %43, label %44, label %62

44:                                               ; preds = %38
  %45 = load i32, i32* %6, align 4
  %46 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %47 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %46, i32 0, i32 13
  %48 = load i32, i32* %47, align 4
  %49 = icmp sle i32 %45, %48
  br i1 %49, label %50, label %62

50:                                               ; preds = %44
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %52 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i32 0, i32 11
  %53 = load i8**, i8*** %52, align 8
  %54 = load i32, i32* %6, align 4
  %55 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %56 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %55, i32 0, i32 12
  %57 = load i32, i32* %56, align 8
  %58 = sub nsw i32 %54, %57
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8*, i8** %53, i64 %59
  %61 = load i8*, i8** %60, align 8
  store i8* %61, i8** %7, align 8
  br label %62

62:                                               ; preds = %50, %44, %38, %33
  br label %63

63:                                               ; preds = %62, %25
  %64 = load i8*, i8** %7, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %66, label %77

66:                                               ; preds = %63
  %67 = load i32, i32* %6, align 4
  %68 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %69 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %68, i32 0, i32 6
  %70 = bitcast %union.anon* %69 to [8 x i32]*
  %71 = getelementptr inbounds [8 x i32], [8 x i32]* %70, i64 0, i64 0
  store i32 %67, i32* %71, align 4
  %72 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %73 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %72, i32 0, i32 9
  %74 = load i8**, i8*** %73, align 8
  %75 = getelementptr inbounds i8*, i8** %74, i64 0
  %76 = load i8*, i8** %75, align 8
  store i8* %76, i8** %7, align 8
  br label %77

77:                                               ; preds = %66, %63
  store i32 0, i32* %10, align 4
  %78 = load i8*, i8** %7, align 8
  store i8* %78, i8** %8, align 8
  br label %79

79:                                               ; preds = %96, %77
  %80 = load i8*, i8** %8, align 8
  %81 = getelementptr inbounds i8, i8* %80, i32 1
  store i8* %81, i8** %8, align 8
  %82 = load i8, i8* %80, align 1
  store i8 %82, i8* %9, align 1
  %83 = sext i8 %82 to i32
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %97

85:                                               ; preds = %79
  %86 = load i8, i8* %9, align 1
  %87 = sext i8 %86 to i32
  %88 = icmp eq i32 %87, 37
  br i1 %88, label %89, label %96

89:                                               ; preds = %85
  %90 = load i8*, i8** %8, align 8
  %91 = load i8, i8* %90, align 1
  %92 = sext i8 %91 to i32
  %93 = icmp eq i32 %92, 115
  br i1 %93, label %94, label %95

94:                                               ; preds = %89
  store i32 1, i32* %10, align 4
  br label %95

95:                                               ; preds = %94, %89
  br label %97

96:                                               ; preds = %85
  br label %79

97:                                               ; preds = %95, %79
  %98 = load i32, i32* %10, align 4
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %108

100:                                              ; preds = %97
  %101 = load i8*, i8** %4, align 8
  %102 = load i8*, i8** %7, align 8
  %103 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %104 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %103, i32 0, i32 6
  %105 = bitcast %union.anon* %104 to [80 x i8]*
  %106 = getelementptr inbounds [80 x i8], [80 x i8]* %105, i64 0, i64 0
  %107 = call i32 (i8*, i8*, ...) @sprintf(i8* %101, i8* %102, i8* %106) #10
  br label %152

108:                                              ; preds = %97
  %109 = load i8*, i8** %4, align 8
  %110 = load i8*, i8** %7, align 8
  %111 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %112 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %111, i32 0, i32 6
  %113 = bitcast %union.anon* %112 to [8 x i32]*
  %114 = getelementptr inbounds [8 x i32], [8 x i32]* %113, i64 0, i64 0
  %115 = load i32, i32* %114, align 4
  %116 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %117 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %116, i32 0, i32 6
  %118 = bitcast %union.anon* %117 to [8 x i32]*
  %119 = getelementptr inbounds [8 x i32], [8 x i32]* %118, i64 0, i64 1
  %120 = load i32, i32* %119, align 4
  %121 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %122 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %121, i32 0, i32 6
  %123 = bitcast %union.anon* %122 to [8 x i32]*
  %124 = getelementptr inbounds [8 x i32], [8 x i32]* %123, i64 0, i64 2
  %125 = load i32, i32* %124, align 4
  %126 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %127 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %126, i32 0, i32 6
  %128 = bitcast %union.anon* %127 to [8 x i32]*
  %129 = getelementptr inbounds [8 x i32], [8 x i32]* %128, i64 0, i64 3
  %130 = load i32, i32* %129, align 4
  %131 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %132 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %131, i32 0, i32 6
  %133 = bitcast %union.anon* %132 to [8 x i32]*
  %134 = getelementptr inbounds [8 x i32], [8 x i32]* %133, i64 0, i64 4
  %135 = load i32, i32* %134, align 4
  %136 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %137 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %136, i32 0, i32 6
  %138 = bitcast %union.anon* %137 to [8 x i32]*
  %139 = getelementptr inbounds [8 x i32], [8 x i32]* %138, i64 0, i64 5
  %140 = load i32, i32* %139, align 4
  %141 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %142 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %141, i32 0, i32 6
  %143 = bitcast %union.anon* %142 to [8 x i32]*
  %144 = getelementptr inbounds [8 x i32], [8 x i32]* %143, i64 0, i64 6
  %145 = load i32, i32* %144, align 4
  %146 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %147 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %146, i32 0, i32 6
  %148 = bitcast %union.anon* %147 to [8 x i32]*
  %149 = getelementptr inbounds [8 x i32], [8 x i32]* %148, i64 0, i64 7
  %150 = load i32, i32* %149, align 4
  %151 = call i32 (i8*, i8*, ...) @sprintf(i8* %109, i8* %110, i32 %115, i32 %120, i32 %125, i32 %130, i32 %135, i32 %140, i32 %145, i32 %150) #10
  br label %152

152:                                              ; preds = %108, %100
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @reset_error_mgr(%struct.jpeg_common_struct* %0) #0 {
  %2 = alloca %struct.jpeg_common_struct*, align 8
  store %struct.jpeg_common_struct* %0, %struct.jpeg_common_struct** %2, align 8
  %3 = load %struct.jpeg_common_struct*, %struct.jpeg_common_struct** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %3, i32 0, i32 0
  %5 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %4, align 8
  %6 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %5, i32 0, i32 8
  store i64 0, i64* %6, align 8
  %7 = load %struct.jpeg_common_struct*, %struct.jpeg_common_struct** %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %7, i32 0, i32 0
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i32 0, i32 5
  store i32 0, i32* %10, align 8
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_fdct_float(float* %0) #0 {
  %2 = alloca float*, align 8
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = alloca float, align 4
  %14 = alloca float, align 4
  %15 = alloca float, align 4
  %16 = alloca float, align 4
  %17 = alloca float, align 4
  %18 = alloca float, align 4
  %19 = alloca float, align 4
  %20 = alloca float, align 4
  %21 = alloca float, align 4
  %22 = alloca float*, align 8
  %23 = alloca i32, align 4
  store float* %0, float** %2, align 8
  %24 = load float*, float** %2, align 8
  store float* %24, float** %22, align 8
  store i32 7, i32* %23, align 4
  br label %25

25:                                               ; preds = %172, %1
  %26 = load i32, i32* %23, align 4
  %27 = icmp sge i32 %26, 0
  br i1 %27, label %28, label %175

28:                                               ; preds = %25
  %29 = load float*, float** %22, align 8
  %30 = getelementptr inbounds float, float* %29, i64 0
  %31 = load float, float* %30, align 4
  %32 = load float*, float** %22, align 8
  %33 = getelementptr inbounds float, float* %32, i64 7
  %34 = load float, float* %33, align 4
  %35 = fadd float %31, %34
  store float %35, float* %3, align 4
  %36 = load float*, float** %22, align 8
  %37 = getelementptr inbounds float, float* %36, i64 0
  %38 = load float, float* %37, align 4
  %39 = load float*, float** %22, align 8
  %40 = getelementptr inbounds float, float* %39, i64 7
  %41 = load float, float* %40, align 4
  %42 = fsub float %38, %41
  store float %42, float* %10, align 4
  %43 = load float*, float** %22, align 8
  %44 = getelementptr inbounds float, float* %43, i64 1
  %45 = load float, float* %44, align 4
  %46 = load float*, float** %22, align 8
  %47 = getelementptr inbounds float, float* %46, i64 6
  %48 = load float, float* %47, align 4
  %49 = fadd float %45, %48
  store float %49, float* %4, align 4
  %50 = load float*, float** %22, align 8
  %51 = getelementptr inbounds float, float* %50, i64 1
  %52 = load float, float* %51, align 4
  %53 = load float*, float** %22, align 8
  %54 = getelementptr inbounds float, float* %53, i64 6
  %55 = load float, float* %54, align 4
  %56 = fsub float %52, %55
  store float %56, float* %9, align 4
  %57 = load float*, float** %22, align 8
  %58 = getelementptr inbounds float, float* %57, i64 2
  %59 = load float, float* %58, align 4
  %60 = load float*, float** %22, align 8
  %61 = getelementptr inbounds float, float* %60, i64 5
  %62 = load float, float* %61, align 4
  %63 = fadd float %59, %62
  store float %63, float* %5, align 4
  %64 = load float*, float** %22, align 8
  %65 = getelementptr inbounds float, float* %64, i64 2
  %66 = load float, float* %65, align 4
  %67 = load float*, float** %22, align 8
  %68 = getelementptr inbounds float, float* %67, i64 5
  %69 = load float, float* %68, align 4
  %70 = fsub float %66, %69
  store float %70, float* %8, align 4
  %71 = load float*, float** %22, align 8
  %72 = getelementptr inbounds float, float* %71, i64 3
  %73 = load float, float* %72, align 4
  %74 = load float*, float** %22, align 8
  %75 = getelementptr inbounds float, float* %74, i64 4
  %76 = load float, float* %75, align 4
  %77 = fadd float %73, %76
  store float %77, float* %6, align 4
  %78 = load float*, float** %22, align 8
  %79 = getelementptr inbounds float, float* %78, i64 3
  %80 = load float, float* %79, align 4
  %81 = load float*, float** %22, align 8
  %82 = getelementptr inbounds float, float* %81, i64 4
  %83 = load float, float* %82, align 4
  %84 = fsub float %80, %83
  store float %84, float* %7, align 4
  %85 = load float, float* %3, align 4
  %86 = load float, float* %6, align 4
  %87 = fadd float %85, %86
  store float %87, float* %11, align 4
  %88 = load float, float* %3, align 4
  %89 = load float, float* %6, align 4
  %90 = fsub float %88, %89
  store float %90, float* %14, align 4
  %91 = load float, float* %4, align 4
  %92 = load float, float* %5, align 4
  %93 = fadd float %91, %92
  store float %93, float* %12, align 4
  %94 = load float, float* %4, align 4
  %95 = load float, float* %5, align 4
  %96 = fsub float %94, %95
  store float %96, float* %13, align 4
  %97 = load float, float* %11, align 4
  %98 = load float, float* %12, align 4
  %99 = fadd float %97, %98
  %100 = load float*, float** %22, align 8
  %101 = getelementptr inbounds float, float* %100, i64 0
  store float %99, float* %101, align 4
  %102 = load float, float* %11, align 4
  %103 = load float, float* %12, align 4
  %104 = fsub float %102, %103
  %105 = load float*, float** %22, align 8
  %106 = getelementptr inbounds float, float* %105, i64 4
  store float %104, float* %106, align 4
  %107 = load float, float* %13, align 4
  %108 = load float, float* %14, align 4
  %109 = fadd float %107, %108
  %110 = fmul float %109, 0x3FE6A09E60000000
  store float %110, float* %15, align 4
  %111 = load float, float* %14, align 4
  %112 = load float, float* %15, align 4
  %113 = fadd float %111, %112
  %114 = load float*, float** %22, align 8
  %115 = getelementptr inbounds float, float* %114, i64 2
  store float %113, float* %115, align 4
  %116 = load float, float* %14, align 4
  %117 = load float, float* %15, align 4
  %118 = fsub float %116, %117
  %119 = load float*, float** %22, align 8
  %120 = getelementptr inbounds float, float* %119, i64 6
  store float %118, float* %120, align 4
  %121 = load float, float* %7, align 4
  %122 = load float, float* %8, align 4
  %123 = fadd float %121, %122
  store float %123, float* %11, align 4
  %124 = load float, float* %8, align 4
  %125 = load float, float* %9, align 4
  %126 = fadd float %124, %125
  store float %126, float* %12, align 4
  %127 = load float, float* %9, align 4
  %128 = load float, float* %10, align 4
  %129 = fadd float %127, %128
  store float %129, float* %13, align 4
  %130 = load float, float* %11, align 4
  %131 = load float, float* %13, align 4
  %132 = fsub float %130, %131
  %133 = fmul float %132, 0x3FD87DE2A0000000
  store float %133, float* %19, align 4
  %134 = load float, float* %11, align 4
  %135 = fmul float 0x3FE1517A80000000, %134
  %136 = load float, float* %19, align 4
  %137 = fadd float %135, %136
  store float %137, float* %16, align 4
  %138 = load float, float* %13, align 4
  %139 = fmul float 0x3FF4E7AEA0000000, %138
  %140 = load float, float* %19, align 4
  %141 = fadd float %139, %140
  store float %141, float* %18, align 4
  %142 = load float, float* %12, align 4
  %143 = fmul float %142, 0x3FE6A09E60000000
  store float %143, float* %17, align 4
  %144 = load float, float* %10, align 4
  %145 = load float, float* %17, align 4
  %146 = fadd float %144, %145
  store float %146, float* %20, align 4
  %147 = load float, float* %10, align 4
  %148 = load float, float* %17, align 4
  %149 = fsub float %147, %148
  store float %149, float* %21, align 4
  %150 = load float, float* %21, align 4
  %151 = load float, float* %16, align 4
  %152 = fadd float %150, %151
  %153 = load float*, float** %22, align 8
  %154 = getelementptr inbounds float, float* %153, i64 5
  store float %152, float* %154, align 4
  %155 = load float, float* %21, align 4
  %156 = load float, float* %16, align 4
  %157 = fsub float %155, %156
  %158 = load float*, float** %22, align 8
  %159 = getelementptr inbounds float, float* %158, i64 3
  store float %157, float* %159, align 4
  %160 = load float, float* %20, align 4
  %161 = load float, float* %18, align 4
  %162 = fadd float %160, %161
  %163 = load float*, float** %22, align 8
  %164 = getelementptr inbounds float, float* %163, i64 1
  store float %162, float* %164, align 4
  %165 = load float, float* %20, align 4
  %166 = load float, float* %18, align 4
  %167 = fsub float %165, %166
  %168 = load float*, float** %22, align 8
  %169 = getelementptr inbounds float, float* %168, i64 7
  store float %167, float* %169, align 4
  %170 = load float*, float** %22, align 8
  %171 = getelementptr inbounds float, float* %170, i64 8
  store float* %171, float** %22, align 8
  br label %172

172:                                              ; preds = %28
  %173 = load i32, i32* %23, align 4
  %174 = add nsw i32 %173, -1
  store i32 %174, i32* %23, align 4
  br label %25

175:                                              ; preds = %25
  %176 = load float*, float** %2, align 8
  store float* %176, float** %22, align 8
  store i32 7, i32* %23, align 4
  br label %177

177:                                              ; preds = %324, %175
  %178 = load i32, i32* %23, align 4
  %179 = icmp sge i32 %178, 0
  br i1 %179, label %180, label %327

180:                                              ; preds = %177
  %181 = load float*, float** %22, align 8
  %182 = getelementptr inbounds float, float* %181, i64 0
  %183 = load float, float* %182, align 4
  %184 = load float*, float** %22, align 8
  %185 = getelementptr inbounds float, float* %184, i64 56
  %186 = load float, float* %185, align 4
  %187 = fadd float %183, %186
  store float %187, float* %3, align 4
  %188 = load float*, float** %22, align 8
  %189 = getelementptr inbounds float, float* %188, i64 0
  %190 = load float, float* %189, align 4
  %191 = load float*, float** %22, align 8
  %192 = getelementptr inbounds float, float* %191, i64 56
  %193 = load float, float* %192, align 4
  %194 = fsub float %190, %193
  store float %194, float* %10, align 4
  %195 = load float*, float** %22, align 8
  %196 = getelementptr inbounds float, float* %195, i64 8
  %197 = load float, float* %196, align 4
  %198 = load float*, float** %22, align 8
  %199 = getelementptr inbounds float, float* %198, i64 48
  %200 = load float, float* %199, align 4
  %201 = fadd float %197, %200
  store float %201, float* %4, align 4
  %202 = load float*, float** %22, align 8
  %203 = getelementptr inbounds float, float* %202, i64 8
  %204 = load float, float* %203, align 4
  %205 = load float*, float** %22, align 8
  %206 = getelementptr inbounds float, float* %205, i64 48
  %207 = load float, float* %206, align 4
  %208 = fsub float %204, %207
  store float %208, float* %9, align 4
  %209 = load float*, float** %22, align 8
  %210 = getelementptr inbounds float, float* %209, i64 16
  %211 = load float, float* %210, align 4
  %212 = load float*, float** %22, align 8
  %213 = getelementptr inbounds float, float* %212, i64 40
  %214 = load float, float* %213, align 4
  %215 = fadd float %211, %214
  store float %215, float* %5, align 4
  %216 = load float*, float** %22, align 8
  %217 = getelementptr inbounds float, float* %216, i64 16
  %218 = load float, float* %217, align 4
  %219 = load float*, float** %22, align 8
  %220 = getelementptr inbounds float, float* %219, i64 40
  %221 = load float, float* %220, align 4
  %222 = fsub float %218, %221
  store float %222, float* %8, align 4
  %223 = load float*, float** %22, align 8
  %224 = getelementptr inbounds float, float* %223, i64 24
  %225 = load float, float* %224, align 4
  %226 = load float*, float** %22, align 8
  %227 = getelementptr inbounds float, float* %226, i64 32
  %228 = load float, float* %227, align 4
  %229 = fadd float %225, %228
  store float %229, float* %6, align 4
  %230 = load float*, float** %22, align 8
  %231 = getelementptr inbounds float, float* %230, i64 24
  %232 = load float, float* %231, align 4
  %233 = load float*, float** %22, align 8
  %234 = getelementptr inbounds float, float* %233, i64 32
  %235 = load float, float* %234, align 4
  %236 = fsub float %232, %235
  store float %236, float* %7, align 4
  %237 = load float, float* %3, align 4
  %238 = load float, float* %6, align 4
  %239 = fadd float %237, %238
  store float %239, float* %11, align 4
  %240 = load float, float* %3, align 4
  %241 = load float, float* %6, align 4
  %242 = fsub float %240, %241
  store float %242, float* %14, align 4
  %243 = load float, float* %4, align 4
  %244 = load float, float* %5, align 4
  %245 = fadd float %243, %244
  store float %245, float* %12, align 4
  %246 = load float, float* %4, align 4
  %247 = load float, float* %5, align 4
  %248 = fsub float %246, %247
  store float %248, float* %13, align 4
  %249 = load float, float* %11, align 4
  %250 = load float, float* %12, align 4
  %251 = fadd float %249, %250
  %252 = load float*, float** %22, align 8
  %253 = getelementptr inbounds float, float* %252, i64 0
  store float %251, float* %253, align 4
  %254 = load float, float* %11, align 4
  %255 = load float, float* %12, align 4
  %256 = fsub float %254, %255
  %257 = load float*, float** %22, align 8
  %258 = getelementptr inbounds float, float* %257, i64 32
  store float %256, float* %258, align 4
  %259 = load float, float* %13, align 4
  %260 = load float, float* %14, align 4
  %261 = fadd float %259, %260
  %262 = fmul float %261, 0x3FE6A09E60000000
  store float %262, float* %15, align 4
  %263 = load float, float* %14, align 4
  %264 = load float, float* %15, align 4
  %265 = fadd float %263, %264
  %266 = load float*, float** %22, align 8
  %267 = getelementptr inbounds float, float* %266, i64 16
  store float %265, float* %267, align 4
  %268 = load float, float* %14, align 4
  %269 = load float, float* %15, align 4
  %270 = fsub float %268, %269
  %271 = load float*, float** %22, align 8
  %272 = getelementptr inbounds float, float* %271, i64 48
  store float %270, float* %272, align 4
  %273 = load float, float* %7, align 4
  %274 = load float, float* %8, align 4
  %275 = fadd float %273, %274
  store float %275, float* %11, align 4
  %276 = load float, float* %8, align 4
  %277 = load float, float* %9, align 4
  %278 = fadd float %276, %277
  store float %278, float* %12, align 4
  %279 = load float, float* %9, align 4
  %280 = load float, float* %10, align 4
  %281 = fadd float %279, %280
  store float %281, float* %13, align 4
  %282 = load float, float* %11, align 4
  %283 = load float, float* %13, align 4
  %284 = fsub float %282, %283
  %285 = fmul float %284, 0x3FD87DE2A0000000
  store float %285, float* %19, align 4
  %286 = load float, float* %11, align 4
  %287 = fmul float 0x3FE1517A80000000, %286
  %288 = load float, float* %19, align 4
  %289 = fadd float %287, %288
  store float %289, float* %16, align 4
  %290 = load float, float* %13, align 4
  %291 = fmul float 0x3FF4E7AEA0000000, %290
  %292 = load float, float* %19, align 4
  %293 = fadd float %291, %292
  store float %293, float* %18, align 4
  %294 = load float, float* %12, align 4
  %295 = fmul float %294, 0x3FE6A09E60000000
  store float %295, float* %17, align 4
  %296 = load float, float* %10, align 4
  %297 = load float, float* %17, align 4
  %298 = fadd float %296, %297
  store float %298, float* %20, align 4
  %299 = load float, float* %10, align 4
  %300 = load float, float* %17, align 4
  %301 = fsub float %299, %300
  store float %301, float* %21, align 4
  %302 = load float, float* %21, align 4
  %303 = load float, float* %16, align 4
  %304 = fadd float %302, %303
  %305 = load float*, float** %22, align 8
  %306 = getelementptr inbounds float, float* %305, i64 40
  store float %304, float* %306, align 4
  %307 = load float, float* %21, align 4
  %308 = load float, float* %16, align 4
  %309 = fsub float %307, %308
  %310 = load float*, float** %22, align 8
  %311 = getelementptr inbounds float, float* %310, i64 24
  store float %309, float* %311, align 4
  %312 = load float, float* %20, align 4
  %313 = load float, float* %18, align 4
  %314 = fadd float %312, %313
  %315 = load float*, float** %22, align 8
  %316 = getelementptr inbounds float, float* %315, i64 8
  store float %314, float* %316, align 4
  %317 = load float, float* %20, align 4
  %318 = load float, float* %18, align 4
  %319 = fsub float %317, %318
  %320 = load float*, float** %22, align 8
  %321 = getelementptr inbounds float, float* %320, i64 56
  store float %319, float* %321, align 4
  %322 = load float*, float** %22, align 8
  %323 = getelementptr inbounds float, float* %322, i32 1
  store float* %323, float** %22, align 8
  br label %324

324:                                              ; preds = %180
  %325 = load i32, i32* %23, align 4
  %326 = add nsw i32 %325, -1
  store i32 %326, i32* %23, align 4
  br label %177

327:                                              ; preds = %177
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_fdct_ifast(i32* %0) #0 {
  %2 = alloca i32*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32*, align 8
  %23 = alloca i32, align 4
  store i32* %0, i32** %2, align 8
  %24 = load i32*, i32** %2, align 8
  store i32* %24, i32** %22, align 8
  store i32 7, i32* %23, align 4
  br label %25

25:                                               ; preds = %187, %1
  %26 = load i32, i32* %23, align 4
  %27 = icmp sge i32 %26, 0
  br i1 %27, label %28, label %190

28:                                               ; preds = %25
  %29 = load i32*, i32** %22, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 0
  %31 = load i32, i32* %30, align 4
  %32 = load i32*, i32** %22, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 7
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %31, %34
  store i32 %35, i32* %3, align 4
  %36 = load i32*, i32** %22, align 8
  %37 = getelementptr inbounds i32, i32* %36, i64 0
  %38 = load i32, i32* %37, align 4
  %39 = load i32*, i32** %22, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 7
  %41 = load i32, i32* %40, align 4
  %42 = sub nsw i32 %38, %41
  store i32 %42, i32* %10, align 4
  %43 = load i32*, i32** %22, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 1
  %45 = load i32, i32* %44, align 4
  %46 = load i32*, i32** %22, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 6
  %48 = load i32, i32* %47, align 4
  %49 = add nsw i32 %45, %48
  store i32 %49, i32* %4, align 4
  %50 = load i32*, i32** %22, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 1
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %22, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 6
  %55 = load i32, i32* %54, align 4
  %56 = sub nsw i32 %52, %55
  store i32 %56, i32* %9, align 4
  %57 = load i32*, i32** %22, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 2
  %59 = load i32, i32* %58, align 4
  %60 = load i32*, i32** %22, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 5
  %62 = load i32, i32* %61, align 4
  %63 = add nsw i32 %59, %62
  store i32 %63, i32* %5, align 4
  %64 = load i32*, i32** %22, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 2
  %66 = load i32, i32* %65, align 4
  %67 = load i32*, i32** %22, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 5
  %69 = load i32, i32* %68, align 4
  %70 = sub nsw i32 %66, %69
  store i32 %70, i32* %8, align 4
  %71 = load i32*, i32** %22, align 8
  %72 = getelementptr inbounds i32, i32* %71, i64 3
  %73 = load i32, i32* %72, align 4
  %74 = load i32*, i32** %22, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 4
  %76 = load i32, i32* %75, align 4
  %77 = add nsw i32 %73, %76
  store i32 %77, i32* %6, align 4
  %78 = load i32*, i32** %22, align 8
  %79 = getelementptr inbounds i32, i32* %78, i64 3
  %80 = load i32, i32* %79, align 4
  %81 = load i32*, i32** %22, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 4
  %83 = load i32, i32* %82, align 4
  %84 = sub nsw i32 %80, %83
  store i32 %84, i32* %7, align 4
  %85 = load i32, i32* %3, align 4
  %86 = load i32, i32* %6, align 4
  %87 = add nsw i32 %85, %86
  store i32 %87, i32* %11, align 4
  %88 = load i32, i32* %3, align 4
  %89 = load i32, i32* %6, align 4
  %90 = sub nsw i32 %88, %89
  store i32 %90, i32* %14, align 4
  %91 = load i32, i32* %4, align 4
  %92 = load i32, i32* %5, align 4
  %93 = add nsw i32 %91, %92
  store i32 %93, i32* %12, align 4
  %94 = load i32, i32* %4, align 4
  %95 = load i32, i32* %5, align 4
  %96 = sub nsw i32 %94, %95
  store i32 %96, i32* %13, align 4
  %97 = load i32, i32* %11, align 4
  %98 = load i32, i32* %12, align 4
  %99 = add nsw i32 %97, %98
  %100 = load i32*, i32** %22, align 8
  %101 = getelementptr inbounds i32, i32* %100, i64 0
  store i32 %99, i32* %101, align 4
  %102 = load i32, i32* %11, align 4
  %103 = load i32, i32* %12, align 4
  %104 = sub nsw i32 %102, %103
  %105 = load i32*, i32** %22, align 8
  %106 = getelementptr inbounds i32, i32* %105, i64 4
  store i32 %104, i32* %106, align 4
  %107 = load i32, i32* %13, align 4
  %108 = load i32, i32* %14, align 4
  %109 = add nsw i32 %107, %108
  %110 = sext i32 %109 to i64
  %111 = mul nsw i64 %110, 181
  %112 = ashr i64 %111, 8
  %113 = trunc i64 %112 to i32
  store i32 %113, i32* %15, align 4
  %114 = load i32, i32* %14, align 4
  %115 = load i32, i32* %15, align 4
  %116 = add nsw i32 %114, %115
  %117 = load i32*, i32** %22, align 8
  %118 = getelementptr inbounds i32, i32* %117, i64 2
  store i32 %116, i32* %118, align 4
  %119 = load i32, i32* %14, align 4
  %120 = load i32, i32* %15, align 4
  %121 = sub nsw i32 %119, %120
  %122 = load i32*, i32** %22, align 8
  %123 = getelementptr inbounds i32, i32* %122, i64 6
  store i32 %121, i32* %123, align 4
  %124 = load i32, i32* %7, align 4
  %125 = load i32, i32* %8, align 4
  %126 = add nsw i32 %124, %125
  store i32 %126, i32* %11, align 4
  %127 = load i32, i32* %8, align 4
  %128 = load i32, i32* %9, align 4
  %129 = add nsw i32 %127, %128
  store i32 %129, i32* %12, align 4
  %130 = load i32, i32* %9, align 4
  %131 = load i32, i32* %10, align 4
  %132 = add nsw i32 %130, %131
  store i32 %132, i32* %13, align 4
  %133 = load i32, i32* %11, align 4
  %134 = load i32, i32* %13, align 4
  %135 = sub nsw i32 %133, %134
  %136 = sext i32 %135 to i64
  %137 = mul nsw i64 %136, 98
  %138 = ashr i64 %137, 8
  %139 = trunc i64 %138 to i32
  store i32 %139, i32* %19, align 4
  %140 = load i32, i32* %11, align 4
  %141 = sext i32 %140 to i64
  %142 = mul nsw i64 %141, 139
  %143 = ashr i64 %142, 8
  %144 = trunc i64 %143 to i32
  %145 = load i32, i32* %19, align 4
  %146 = add nsw i32 %144, %145
  store i32 %146, i32* %16, align 4
  %147 = load i32, i32* %13, align 4
  %148 = sext i32 %147 to i64
  %149 = mul nsw i64 %148, 334
  %150 = ashr i64 %149, 8
  %151 = trunc i64 %150 to i32
  %152 = load i32, i32* %19, align 4
  %153 = add nsw i32 %151, %152
  store i32 %153, i32* %18, align 4
  %154 = load i32, i32* %12, align 4
  %155 = sext i32 %154 to i64
  %156 = mul nsw i64 %155, 181
  %157 = ashr i64 %156, 8
  %158 = trunc i64 %157 to i32
  store i32 %158, i32* %17, align 4
  %159 = load i32, i32* %10, align 4
  %160 = load i32, i32* %17, align 4
  %161 = add nsw i32 %159, %160
  store i32 %161, i32* %20, align 4
  %162 = load i32, i32* %10, align 4
  %163 = load i32, i32* %17, align 4
  %164 = sub nsw i32 %162, %163
  store i32 %164, i32* %21, align 4
  %165 = load i32, i32* %21, align 4
  %166 = load i32, i32* %16, align 4
  %167 = add nsw i32 %165, %166
  %168 = load i32*, i32** %22, align 8
  %169 = getelementptr inbounds i32, i32* %168, i64 5
  store i32 %167, i32* %169, align 4
  %170 = load i32, i32* %21, align 4
  %171 = load i32, i32* %16, align 4
  %172 = sub nsw i32 %170, %171
  %173 = load i32*, i32** %22, align 8
  %174 = getelementptr inbounds i32, i32* %173, i64 3
  store i32 %172, i32* %174, align 4
  %175 = load i32, i32* %20, align 4
  %176 = load i32, i32* %18, align 4
  %177 = add nsw i32 %175, %176
  %178 = load i32*, i32** %22, align 8
  %179 = getelementptr inbounds i32, i32* %178, i64 1
  store i32 %177, i32* %179, align 4
  %180 = load i32, i32* %20, align 4
  %181 = load i32, i32* %18, align 4
  %182 = sub nsw i32 %180, %181
  %183 = load i32*, i32** %22, align 8
  %184 = getelementptr inbounds i32, i32* %183, i64 7
  store i32 %182, i32* %184, align 4
  %185 = load i32*, i32** %22, align 8
  %186 = getelementptr inbounds i32, i32* %185, i64 8
  store i32* %186, i32** %22, align 8
  br label %187

187:                                              ; preds = %28
  %188 = load i32, i32* %23, align 4
  %189 = add nsw i32 %188, -1
  store i32 %189, i32* %23, align 4
  br label %25

190:                                              ; preds = %25
  %191 = load i32*, i32** %2, align 8
  store i32* %191, i32** %22, align 8
  store i32 7, i32* %23, align 4
  br label %192

192:                                              ; preds = %354, %190
  %193 = load i32, i32* %23, align 4
  %194 = icmp sge i32 %193, 0
  br i1 %194, label %195, label %357

195:                                              ; preds = %192
  %196 = load i32*, i32** %22, align 8
  %197 = getelementptr inbounds i32, i32* %196, i64 0
  %198 = load i32, i32* %197, align 4
  %199 = load i32*, i32** %22, align 8
  %200 = getelementptr inbounds i32, i32* %199, i64 56
  %201 = load i32, i32* %200, align 4
  %202 = add nsw i32 %198, %201
  store i32 %202, i32* %3, align 4
  %203 = load i32*, i32** %22, align 8
  %204 = getelementptr inbounds i32, i32* %203, i64 0
  %205 = load i32, i32* %204, align 4
  %206 = load i32*, i32** %22, align 8
  %207 = getelementptr inbounds i32, i32* %206, i64 56
  %208 = load i32, i32* %207, align 4
  %209 = sub nsw i32 %205, %208
  store i32 %209, i32* %10, align 4
  %210 = load i32*, i32** %22, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 8
  %212 = load i32, i32* %211, align 4
  %213 = load i32*, i32** %22, align 8
  %214 = getelementptr inbounds i32, i32* %213, i64 48
  %215 = load i32, i32* %214, align 4
  %216 = add nsw i32 %212, %215
  store i32 %216, i32* %4, align 4
  %217 = load i32*, i32** %22, align 8
  %218 = getelementptr inbounds i32, i32* %217, i64 8
  %219 = load i32, i32* %218, align 4
  %220 = load i32*, i32** %22, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 48
  %222 = load i32, i32* %221, align 4
  %223 = sub nsw i32 %219, %222
  store i32 %223, i32* %9, align 4
  %224 = load i32*, i32** %22, align 8
  %225 = getelementptr inbounds i32, i32* %224, i64 16
  %226 = load i32, i32* %225, align 4
  %227 = load i32*, i32** %22, align 8
  %228 = getelementptr inbounds i32, i32* %227, i64 40
  %229 = load i32, i32* %228, align 4
  %230 = add nsw i32 %226, %229
  store i32 %230, i32* %5, align 4
  %231 = load i32*, i32** %22, align 8
  %232 = getelementptr inbounds i32, i32* %231, i64 16
  %233 = load i32, i32* %232, align 4
  %234 = load i32*, i32** %22, align 8
  %235 = getelementptr inbounds i32, i32* %234, i64 40
  %236 = load i32, i32* %235, align 4
  %237 = sub nsw i32 %233, %236
  store i32 %237, i32* %8, align 4
  %238 = load i32*, i32** %22, align 8
  %239 = getelementptr inbounds i32, i32* %238, i64 24
  %240 = load i32, i32* %239, align 4
  %241 = load i32*, i32** %22, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 32
  %243 = load i32, i32* %242, align 4
  %244 = add nsw i32 %240, %243
  store i32 %244, i32* %6, align 4
  %245 = load i32*, i32** %22, align 8
  %246 = getelementptr inbounds i32, i32* %245, i64 24
  %247 = load i32, i32* %246, align 4
  %248 = load i32*, i32** %22, align 8
  %249 = getelementptr inbounds i32, i32* %248, i64 32
  %250 = load i32, i32* %249, align 4
  %251 = sub nsw i32 %247, %250
  store i32 %251, i32* %7, align 4
  %252 = load i32, i32* %3, align 4
  %253 = load i32, i32* %6, align 4
  %254 = add nsw i32 %252, %253
  store i32 %254, i32* %11, align 4
  %255 = load i32, i32* %3, align 4
  %256 = load i32, i32* %6, align 4
  %257 = sub nsw i32 %255, %256
  store i32 %257, i32* %14, align 4
  %258 = load i32, i32* %4, align 4
  %259 = load i32, i32* %5, align 4
  %260 = add nsw i32 %258, %259
  store i32 %260, i32* %12, align 4
  %261 = load i32, i32* %4, align 4
  %262 = load i32, i32* %5, align 4
  %263 = sub nsw i32 %261, %262
  store i32 %263, i32* %13, align 4
  %264 = load i32, i32* %11, align 4
  %265 = load i32, i32* %12, align 4
  %266 = add nsw i32 %264, %265
  %267 = load i32*, i32** %22, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 0
  store i32 %266, i32* %268, align 4
  %269 = load i32, i32* %11, align 4
  %270 = load i32, i32* %12, align 4
  %271 = sub nsw i32 %269, %270
  %272 = load i32*, i32** %22, align 8
  %273 = getelementptr inbounds i32, i32* %272, i64 32
  store i32 %271, i32* %273, align 4
  %274 = load i32, i32* %13, align 4
  %275 = load i32, i32* %14, align 4
  %276 = add nsw i32 %274, %275
  %277 = sext i32 %276 to i64
  %278 = mul nsw i64 %277, 181
  %279 = ashr i64 %278, 8
  %280 = trunc i64 %279 to i32
  store i32 %280, i32* %15, align 4
  %281 = load i32, i32* %14, align 4
  %282 = load i32, i32* %15, align 4
  %283 = add nsw i32 %281, %282
  %284 = load i32*, i32** %22, align 8
  %285 = getelementptr inbounds i32, i32* %284, i64 16
  store i32 %283, i32* %285, align 4
  %286 = load i32, i32* %14, align 4
  %287 = load i32, i32* %15, align 4
  %288 = sub nsw i32 %286, %287
  %289 = load i32*, i32** %22, align 8
  %290 = getelementptr inbounds i32, i32* %289, i64 48
  store i32 %288, i32* %290, align 4
  %291 = load i32, i32* %7, align 4
  %292 = load i32, i32* %8, align 4
  %293 = add nsw i32 %291, %292
  store i32 %293, i32* %11, align 4
  %294 = load i32, i32* %8, align 4
  %295 = load i32, i32* %9, align 4
  %296 = add nsw i32 %294, %295
  store i32 %296, i32* %12, align 4
  %297 = load i32, i32* %9, align 4
  %298 = load i32, i32* %10, align 4
  %299 = add nsw i32 %297, %298
  store i32 %299, i32* %13, align 4
  %300 = load i32, i32* %11, align 4
  %301 = load i32, i32* %13, align 4
  %302 = sub nsw i32 %300, %301
  %303 = sext i32 %302 to i64
  %304 = mul nsw i64 %303, 98
  %305 = ashr i64 %304, 8
  %306 = trunc i64 %305 to i32
  store i32 %306, i32* %19, align 4
  %307 = load i32, i32* %11, align 4
  %308 = sext i32 %307 to i64
  %309 = mul nsw i64 %308, 139
  %310 = ashr i64 %309, 8
  %311 = trunc i64 %310 to i32
  %312 = load i32, i32* %19, align 4
  %313 = add nsw i32 %311, %312
  store i32 %313, i32* %16, align 4
  %314 = load i32, i32* %13, align 4
  %315 = sext i32 %314 to i64
  %316 = mul nsw i64 %315, 334
  %317 = ashr i64 %316, 8
  %318 = trunc i64 %317 to i32
  %319 = load i32, i32* %19, align 4
  %320 = add nsw i32 %318, %319
  store i32 %320, i32* %18, align 4
  %321 = load i32, i32* %12, align 4
  %322 = sext i32 %321 to i64
  %323 = mul nsw i64 %322, 181
  %324 = ashr i64 %323, 8
  %325 = trunc i64 %324 to i32
  store i32 %325, i32* %17, align 4
  %326 = load i32, i32* %10, align 4
  %327 = load i32, i32* %17, align 4
  %328 = add nsw i32 %326, %327
  store i32 %328, i32* %20, align 4
  %329 = load i32, i32* %10, align 4
  %330 = load i32, i32* %17, align 4
  %331 = sub nsw i32 %329, %330
  store i32 %331, i32* %21, align 4
  %332 = load i32, i32* %21, align 4
  %333 = load i32, i32* %16, align 4
  %334 = add nsw i32 %332, %333
  %335 = load i32*, i32** %22, align 8
  %336 = getelementptr inbounds i32, i32* %335, i64 40
  store i32 %334, i32* %336, align 4
  %337 = load i32, i32* %21, align 4
  %338 = load i32, i32* %16, align 4
  %339 = sub nsw i32 %337, %338
  %340 = load i32*, i32** %22, align 8
  %341 = getelementptr inbounds i32, i32* %340, i64 24
  store i32 %339, i32* %341, align 4
  %342 = load i32, i32* %20, align 4
  %343 = load i32, i32* %18, align 4
  %344 = add nsw i32 %342, %343
  %345 = load i32*, i32** %22, align 8
  %346 = getelementptr inbounds i32, i32* %345, i64 8
  store i32 %344, i32* %346, align 4
  %347 = load i32, i32* %20, align 4
  %348 = load i32, i32* %18, align 4
  %349 = sub nsw i32 %347, %348
  %350 = load i32*, i32** %22, align 8
  %351 = getelementptr inbounds i32, i32* %350, i64 56
  store i32 %349, i32* %351, align 4
  %352 = load i32*, i32** %22, align 8
  %353 = getelementptr inbounds i32, i32* %352, i32 1
  store i32* %353, i32** %22, align 8
  br label %354

354:                                              ; preds = %195
  %355 = load i32, i32* %23, align 4
  %356 = add nsw i32 %355, -1
  store i32 %356, i32* %23, align 4
  br label %192

357:                                              ; preds = %192
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_fdct_islow(i32* %0) #0 {
  %2 = alloca i32*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i32*, align 8
  %21 = alloca i32, align 4
  store i32* %0, i32** %2, align 8
  %22 = load i32*, i32** %2, align 8
  store i32* %22, i32** %20, align 8
  store i32 7, i32* %21, align 4
  br label %23

23:                                               ; preds = %219, %1
  %24 = load i32, i32* %21, align 4
  %25 = icmp sge i32 %24, 0
  br i1 %25, label %26, label %222

26:                                               ; preds = %23
  %27 = load i32*, i32** %20, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 0
  %29 = load i32, i32* %28, align 4
  %30 = load i32*, i32** %20, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 7
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %29, %32
  %34 = sext i32 %33 to i64
  store i64 %34, i64* %3, align 8
  %35 = load i32*, i32** %20, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 0
  %37 = load i32, i32* %36, align 4
  %38 = load i32*, i32** %20, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 7
  %40 = load i32, i32* %39, align 4
  %41 = sub nsw i32 %37, %40
  %42 = sext i32 %41 to i64
  store i64 %42, i64* %10, align 8
  %43 = load i32*, i32** %20, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 1
  %45 = load i32, i32* %44, align 4
  %46 = load i32*, i32** %20, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 6
  %48 = load i32, i32* %47, align 4
  %49 = add nsw i32 %45, %48
  %50 = sext i32 %49 to i64
  store i64 %50, i64* %4, align 8
  %51 = load i32*, i32** %20, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 1
  %53 = load i32, i32* %52, align 4
  %54 = load i32*, i32** %20, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 6
  %56 = load i32, i32* %55, align 4
  %57 = sub nsw i32 %53, %56
  %58 = sext i32 %57 to i64
  store i64 %58, i64* %9, align 8
  %59 = load i32*, i32** %20, align 8
  %60 = getelementptr inbounds i32, i32* %59, i64 2
  %61 = load i32, i32* %60, align 4
  %62 = load i32*, i32** %20, align 8
  %63 = getelementptr inbounds i32, i32* %62, i64 5
  %64 = load i32, i32* %63, align 4
  %65 = add nsw i32 %61, %64
  %66 = sext i32 %65 to i64
  store i64 %66, i64* %5, align 8
  %67 = load i32*, i32** %20, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 2
  %69 = load i32, i32* %68, align 4
  %70 = load i32*, i32** %20, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 5
  %72 = load i32, i32* %71, align 4
  %73 = sub nsw i32 %69, %72
  %74 = sext i32 %73 to i64
  store i64 %74, i64* %8, align 8
  %75 = load i32*, i32** %20, align 8
  %76 = getelementptr inbounds i32, i32* %75, i64 3
  %77 = load i32, i32* %76, align 4
  %78 = load i32*, i32** %20, align 8
  %79 = getelementptr inbounds i32, i32* %78, i64 4
  %80 = load i32, i32* %79, align 4
  %81 = add nsw i32 %77, %80
  %82 = sext i32 %81 to i64
  store i64 %82, i64* %6, align 8
  %83 = load i32*, i32** %20, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 3
  %85 = load i32, i32* %84, align 4
  %86 = load i32*, i32** %20, align 8
  %87 = getelementptr inbounds i32, i32* %86, i64 4
  %88 = load i32, i32* %87, align 4
  %89 = sub nsw i32 %85, %88
  %90 = sext i32 %89 to i64
  store i64 %90, i64* %7, align 8
  %91 = load i64, i64* %3, align 8
  %92 = load i64, i64* %6, align 8
  %93 = add nsw i64 %91, %92
  store i64 %93, i64* %11, align 8
  %94 = load i64, i64* %3, align 8
  %95 = load i64, i64* %6, align 8
  %96 = sub nsw i64 %94, %95
  store i64 %96, i64* %14, align 8
  %97 = load i64, i64* %4, align 8
  %98 = load i64, i64* %5, align 8
  %99 = add nsw i64 %97, %98
  store i64 %99, i64* %12, align 8
  %100 = load i64, i64* %4, align 8
  %101 = load i64, i64* %5, align 8
  %102 = sub nsw i64 %100, %101
  store i64 %102, i64* %13, align 8
  %103 = load i64, i64* %11, align 8
  %104 = load i64, i64* %12, align 8
  %105 = add nsw i64 %103, %104
  %106 = shl i64 %105, 2
  %107 = trunc i64 %106 to i32
  %108 = load i32*, i32** %20, align 8
  %109 = getelementptr inbounds i32, i32* %108, i64 0
  store i32 %107, i32* %109, align 4
  %110 = load i64, i64* %11, align 8
  %111 = load i64, i64* %12, align 8
  %112 = sub nsw i64 %110, %111
  %113 = shl i64 %112, 2
  %114 = trunc i64 %113 to i32
  %115 = load i32*, i32** %20, align 8
  %116 = getelementptr inbounds i32, i32* %115, i64 4
  store i32 %114, i32* %116, align 4
  %117 = load i64, i64* %13, align 8
  %118 = load i64, i64* %14, align 8
  %119 = add nsw i64 %117, %118
  %120 = mul nsw i64 %119, 4433
  store i64 %120, i64* %15, align 8
  %121 = load i64, i64* %15, align 8
  %122 = load i64, i64* %14, align 8
  %123 = mul nsw i64 %122, 6270
  %124 = add nsw i64 %121, %123
  %125 = add nsw i64 %124, 1024
  %126 = ashr i64 %125, 11
  %127 = trunc i64 %126 to i32
  %128 = load i32*, i32** %20, align 8
  %129 = getelementptr inbounds i32, i32* %128, i64 2
  store i32 %127, i32* %129, align 4
  %130 = load i64, i64* %15, align 8
  %131 = load i64, i64* %13, align 8
  %132 = mul nsw i64 %131, -15137
  %133 = add nsw i64 %130, %132
  %134 = add nsw i64 %133, 1024
  %135 = ashr i64 %134, 11
  %136 = trunc i64 %135 to i32
  %137 = load i32*, i32** %20, align 8
  %138 = getelementptr inbounds i32, i32* %137, i64 6
  store i32 %136, i32* %138, align 4
  %139 = load i64, i64* %7, align 8
  %140 = load i64, i64* %10, align 8
  %141 = add nsw i64 %139, %140
  store i64 %141, i64* %15, align 8
  %142 = load i64, i64* %8, align 8
  %143 = load i64, i64* %9, align 8
  %144 = add nsw i64 %142, %143
  store i64 %144, i64* %16, align 8
  %145 = load i64, i64* %7, align 8
  %146 = load i64, i64* %9, align 8
  %147 = add nsw i64 %145, %146
  store i64 %147, i64* %17, align 8
  %148 = load i64, i64* %8, align 8
  %149 = load i64, i64* %10, align 8
  %150 = add nsw i64 %148, %149
  store i64 %150, i64* %18, align 8
  %151 = load i64, i64* %17, align 8
  %152 = load i64, i64* %18, align 8
  %153 = add nsw i64 %151, %152
  %154 = mul nsw i64 %153, 9633
  store i64 %154, i64* %19, align 8
  %155 = load i64, i64* %7, align 8
  %156 = mul nsw i64 %155, 2446
  store i64 %156, i64* %7, align 8
  %157 = load i64, i64* %8, align 8
  %158 = mul nsw i64 %157, 16819
  store i64 %158, i64* %8, align 8
  %159 = load i64, i64* %9, align 8
  %160 = mul nsw i64 %159, 25172
  store i64 %160, i64* %9, align 8
  %161 = load i64, i64* %10, align 8
  %162 = mul nsw i64 %161, 12299
  store i64 %162, i64* %10, align 8
  %163 = load i64, i64* %15, align 8
  %164 = mul nsw i64 %163, -7373
  store i64 %164, i64* %15, align 8
  %165 = load i64, i64* %16, align 8
  %166 = mul nsw i64 %165, -20995
  store i64 %166, i64* %16, align 8
  %167 = load i64, i64* %17, align 8
  %168 = mul nsw i64 %167, -16069
  store i64 %168, i64* %17, align 8
  %169 = load i64, i64* %18, align 8
  %170 = mul nsw i64 %169, -3196
  store i64 %170, i64* %18, align 8
  %171 = load i64, i64* %19, align 8
  %172 = load i64, i64* %17, align 8
  %173 = add nsw i64 %172, %171
  store i64 %173, i64* %17, align 8
  %174 = load i64, i64* %19, align 8
  %175 = load i64, i64* %18, align 8
  %176 = add nsw i64 %175, %174
  store i64 %176, i64* %18, align 8
  %177 = load i64, i64* %7, align 8
  %178 = load i64, i64* %15, align 8
  %179 = add nsw i64 %177, %178
  %180 = load i64, i64* %17, align 8
  %181 = add nsw i64 %179, %180
  %182 = add nsw i64 %181, 1024
  %183 = ashr i64 %182, 11
  %184 = trunc i64 %183 to i32
  %185 = load i32*, i32** %20, align 8
  %186 = getelementptr inbounds i32, i32* %185, i64 7
  store i32 %184, i32* %186, align 4
  %187 = load i64, i64* %8, align 8
  %188 = load i64, i64* %16, align 8
  %189 = add nsw i64 %187, %188
  %190 = load i64, i64* %18, align 8
  %191 = add nsw i64 %189, %190
  %192 = add nsw i64 %191, 1024
  %193 = ashr i64 %192, 11
  %194 = trunc i64 %193 to i32
  %195 = load i32*, i32** %20, align 8
  %196 = getelementptr inbounds i32, i32* %195, i64 5
  store i32 %194, i32* %196, align 4
  %197 = load i64, i64* %9, align 8
  %198 = load i64, i64* %16, align 8
  %199 = add nsw i64 %197, %198
  %200 = load i64, i64* %17, align 8
  %201 = add nsw i64 %199, %200
  %202 = add nsw i64 %201, 1024
  %203 = ashr i64 %202, 11
  %204 = trunc i64 %203 to i32
  %205 = load i32*, i32** %20, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 3
  store i32 %204, i32* %206, align 4
  %207 = load i64, i64* %10, align 8
  %208 = load i64, i64* %15, align 8
  %209 = add nsw i64 %207, %208
  %210 = load i64, i64* %18, align 8
  %211 = add nsw i64 %209, %210
  %212 = add nsw i64 %211, 1024
  %213 = ashr i64 %212, 11
  %214 = trunc i64 %213 to i32
  %215 = load i32*, i32** %20, align 8
  %216 = getelementptr inbounds i32, i32* %215, i64 1
  store i32 %214, i32* %216, align 4
  %217 = load i32*, i32** %20, align 8
  %218 = getelementptr inbounds i32, i32* %217, i64 8
  store i32* %218, i32** %20, align 8
  br label %219

219:                                              ; preds = %26
  %220 = load i32, i32* %21, align 4
  %221 = add nsw i32 %220, -1
  store i32 %221, i32* %21, align 4
  br label %23

222:                                              ; preds = %23
  %223 = load i32*, i32** %2, align 8
  store i32* %223, i32** %20, align 8
  store i32 7, i32* %21, align 4
  br label %224

224:                                              ; preds = %422, %222
  %225 = load i32, i32* %21, align 4
  %226 = icmp sge i32 %225, 0
  br i1 %226, label %227, label %425

227:                                              ; preds = %224
  %228 = load i32*, i32** %20, align 8
  %229 = getelementptr inbounds i32, i32* %228, i64 0
  %230 = load i32, i32* %229, align 4
  %231 = load i32*, i32** %20, align 8
  %232 = getelementptr inbounds i32, i32* %231, i64 56
  %233 = load i32, i32* %232, align 4
  %234 = add nsw i32 %230, %233
  %235 = sext i32 %234 to i64
  store i64 %235, i64* %3, align 8
  %236 = load i32*, i32** %20, align 8
  %237 = getelementptr inbounds i32, i32* %236, i64 0
  %238 = load i32, i32* %237, align 4
  %239 = load i32*, i32** %20, align 8
  %240 = getelementptr inbounds i32, i32* %239, i64 56
  %241 = load i32, i32* %240, align 4
  %242 = sub nsw i32 %238, %241
  %243 = sext i32 %242 to i64
  store i64 %243, i64* %10, align 8
  %244 = load i32*, i32** %20, align 8
  %245 = getelementptr inbounds i32, i32* %244, i64 8
  %246 = load i32, i32* %245, align 4
  %247 = load i32*, i32** %20, align 8
  %248 = getelementptr inbounds i32, i32* %247, i64 48
  %249 = load i32, i32* %248, align 4
  %250 = add nsw i32 %246, %249
  %251 = sext i32 %250 to i64
  store i64 %251, i64* %4, align 8
  %252 = load i32*, i32** %20, align 8
  %253 = getelementptr inbounds i32, i32* %252, i64 8
  %254 = load i32, i32* %253, align 4
  %255 = load i32*, i32** %20, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 48
  %257 = load i32, i32* %256, align 4
  %258 = sub nsw i32 %254, %257
  %259 = sext i32 %258 to i64
  store i64 %259, i64* %9, align 8
  %260 = load i32*, i32** %20, align 8
  %261 = getelementptr inbounds i32, i32* %260, i64 16
  %262 = load i32, i32* %261, align 4
  %263 = load i32*, i32** %20, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 40
  %265 = load i32, i32* %264, align 4
  %266 = add nsw i32 %262, %265
  %267 = sext i32 %266 to i64
  store i64 %267, i64* %5, align 8
  %268 = load i32*, i32** %20, align 8
  %269 = getelementptr inbounds i32, i32* %268, i64 16
  %270 = load i32, i32* %269, align 4
  %271 = load i32*, i32** %20, align 8
  %272 = getelementptr inbounds i32, i32* %271, i64 40
  %273 = load i32, i32* %272, align 4
  %274 = sub nsw i32 %270, %273
  %275 = sext i32 %274 to i64
  store i64 %275, i64* %8, align 8
  %276 = load i32*, i32** %20, align 8
  %277 = getelementptr inbounds i32, i32* %276, i64 24
  %278 = load i32, i32* %277, align 4
  %279 = load i32*, i32** %20, align 8
  %280 = getelementptr inbounds i32, i32* %279, i64 32
  %281 = load i32, i32* %280, align 4
  %282 = add nsw i32 %278, %281
  %283 = sext i32 %282 to i64
  store i64 %283, i64* %6, align 8
  %284 = load i32*, i32** %20, align 8
  %285 = getelementptr inbounds i32, i32* %284, i64 24
  %286 = load i32, i32* %285, align 4
  %287 = load i32*, i32** %20, align 8
  %288 = getelementptr inbounds i32, i32* %287, i64 32
  %289 = load i32, i32* %288, align 4
  %290 = sub nsw i32 %286, %289
  %291 = sext i32 %290 to i64
  store i64 %291, i64* %7, align 8
  %292 = load i64, i64* %3, align 8
  %293 = load i64, i64* %6, align 8
  %294 = add nsw i64 %292, %293
  store i64 %294, i64* %11, align 8
  %295 = load i64, i64* %3, align 8
  %296 = load i64, i64* %6, align 8
  %297 = sub nsw i64 %295, %296
  store i64 %297, i64* %14, align 8
  %298 = load i64, i64* %4, align 8
  %299 = load i64, i64* %5, align 8
  %300 = add nsw i64 %298, %299
  store i64 %300, i64* %12, align 8
  %301 = load i64, i64* %4, align 8
  %302 = load i64, i64* %5, align 8
  %303 = sub nsw i64 %301, %302
  store i64 %303, i64* %13, align 8
  %304 = load i64, i64* %11, align 8
  %305 = load i64, i64* %12, align 8
  %306 = add nsw i64 %304, %305
  %307 = add nsw i64 %306, 2
  %308 = ashr i64 %307, 2
  %309 = trunc i64 %308 to i32
  %310 = load i32*, i32** %20, align 8
  %311 = getelementptr inbounds i32, i32* %310, i64 0
  store i32 %309, i32* %311, align 4
  %312 = load i64, i64* %11, align 8
  %313 = load i64, i64* %12, align 8
  %314 = sub nsw i64 %312, %313
  %315 = add nsw i64 %314, 2
  %316 = ashr i64 %315, 2
  %317 = trunc i64 %316 to i32
  %318 = load i32*, i32** %20, align 8
  %319 = getelementptr inbounds i32, i32* %318, i64 32
  store i32 %317, i32* %319, align 4
  %320 = load i64, i64* %13, align 8
  %321 = load i64, i64* %14, align 8
  %322 = add nsw i64 %320, %321
  %323 = mul nsw i64 %322, 4433
  store i64 %323, i64* %15, align 8
  %324 = load i64, i64* %15, align 8
  %325 = load i64, i64* %14, align 8
  %326 = mul nsw i64 %325, 6270
  %327 = add nsw i64 %324, %326
  %328 = add nsw i64 %327, 16384
  %329 = ashr i64 %328, 15
  %330 = trunc i64 %329 to i32
  %331 = load i32*, i32** %20, align 8
  %332 = getelementptr inbounds i32, i32* %331, i64 16
  store i32 %330, i32* %332, align 4
  %333 = load i64, i64* %15, align 8
  %334 = load i64, i64* %13, align 8
  %335 = mul nsw i64 %334, -15137
  %336 = add nsw i64 %333, %335
  %337 = add nsw i64 %336, 16384
  %338 = ashr i64 %337, 15
  %339 = trunc i64 %338 to i32
  %340 = load i32*, i32** %20, align 8
  %341 = getelementptr inbounds i32, i32* %340, i64 48
  store i32 %339, i32* %341, align 4
  %342 = load i64, i64* %7, align 8
  %343 = load i64, i64* %10, align 8
  %344 = add nsw i64 %342, %343
  store i64 %344, i64* %15, align 8
  %345 = load i64, i64* %8, align 8
  %346 = load i64, i64* %9, align 8
  %347 = add nsw i64 %345, %346
  store i64 %347, i64* %16, align 8
  %348 = load i64, i64* %7, align 8
  %349 = load i64, i64* %9, align 8
  %350 = add nsw i64 %348, %349
  store i64 %350, i64* %17, align 8
  %351 = load i64, i64* %8, align 8
  %352 = load i64, i64* %10, align 8
  %353 = add nsw i64 %351, %352
  store i64 %353, i64* %18, align 8
  %354 = load i64, i64* %17, align 8
  %355 = load i64, i64* %18, align 8
  %356 = add nsw i64 %354, %355
  %357 = mul nsw i64 %356, 9633
  store i64 %357, i64* %19, align 8
  %358 = load i64, i64* %7, align 8
  %359 = mul nsw i64 %358, 2446
  store i64 %359, i64* %7, align 8
  %360 = load i64, i64* %8, align 8
  %361 = mul nsw i64 %360, 16819
  store i64 %361, i64* %8, align 8
  %362 = load i64, i64* %9, align 8
  %363 = mul nsw i64 %362, 25172
  store i64 %363, i64* %9, align 8
  %364 = load i64, i64* %10, align 8
  %365 = mul nsw i64 %364, 12299
  store i64 %365, i64* %10, align 8
  %366 = load i64, i64* %15, align 8
  %367 = mul nsw i64 %366, -7373
  store i64 %367, i64* %15, align 8
  %368 = load i64, i64* %16, align 8
  %369 = mul nsw i64 %368, -20995
  store i64 %369, i64* %16, align 8
  %370 = load i64, i64* %17, align 8
  %371 = mul nsw i64 %370, -16069
  store i64 %371, i64* %17, align 8
  %372 = load i64, i64* %18, align 8
  %373 = mul nsw i64 %372, -3196
  store i64 %373, i64* %18, align 8
  %374 = load i64, i64* %19, align 8
  %375 = load i64, i64* %17, align 8
  %376 = add nsw i64 %375, %374
  store i64 %376, i64* %17, align 8
  %377 = load i64, i64* %19, align 8
  %378 = load i64, i64* %18, align 8
  %379 = add nsw i64 %378, %377
  store i64 %379, i64* %18, align 8
  %380 = load i64, i64* %7, align 8
  %381 = load i64, i64* %15, align 8
  %382 = add nsw i64 %380, %381
  %383 = load i64, i64* %17, align 8
  %384 = add nsw i64 %382, %383
  %385 = add nsw i64 %384, 16384
  %386 = ashr i64 %385, 15
  %387 = trunc i64 %386 to i32
  %388 = load i32*, i32** %20, align 8
  %389 = getelementptr inbounds i32, i32* %388, i64 56
  store i32 %387, i32* %389, align 4
  %390 = load i64, i64* %8, align 8
  %391 = load i64, i64* %16, align 8
  %392 = add nsw i64 %390, %391
  %393 = load i64, i64* %18, align 8
  %394 = add nsw i64 %392, %393
  %395 = add nsw i64 %394, 16384
  %396 = ashr i64 %395, 15
  %397 = trunc i64 %396 to i32
  %398 = load i32*, i32** %20, align 8
  %399 = getelementptr inbounds i32, i32* %398, i64 40
  store i32 %397, i32* %399, align 4
  %400 = load i64, i64* %9, align 8
  %401 = load i64, i64* %16, align 8
  %402 = add nsw i64 %400, %401
  %403 = load i64, i64* %17, align 8
  %404 = add nsw i64 %402, %403
  %405 = add nsw i64 %404, 16384
  %406 = ashr i64 %405, 15
  %407 = trunc i64 %406 to i32
  %408 = load i32*, i32** %20, align 8
  %409 = getelementptr inbounds i32, i32* %408, i64 24
  store i32 %407, i32* %409, align 4
  %410 = load i64, i64* %10, align 8
  %411 = load i64, i64* %15, align 8
  %412 = add nsw i64 %410, %411
  %413 = load i64, i64* %18, align 8
  %414 = add nsw i64 %412, %413
  %415 = add nsw i64 %414, 16384
  %416 = ashr i64 %415, 15
  %417 = trunc i64 %416 to i32
  %418 = load i32*, i32** %20, align 8
  %419 = getelementptr inbounds i32, i32* %418, i64 8
  store i32 %417, i32* %419, align 4
  %420 = load i32*, i32** %20, align 8
  %421 = getelementptr inbounds i32, i32* %420, i32 1
  store i32* %421, i32** %20, align 8
  br label %422

422:                                              ; preds = %227
  %423 = load i32, i32* %21, align 4
  %424 = add nsw i32 %423, -1
  store i32 %424, i32* %21, align 4
  br label %224

425:                                              ; preds = %224
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_idct_float(%struct.jpeg_decompress_struct.763* %0, %struct.jpeg_component_info* %1, i16* %2, i8** %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_decompress_struct.763*, align 8
  %7 = alloca %struct.jpeg_component_info*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = alloca float, align 4
  %14 = alloca float, align 4
  %15 = alloca float, align 4
  %16 = alloca float, align 4
  %17 = alloca float, align 4
  %18 = alloca float, align 4
  %19 = alloca float, align 4
  %20 = alloca float, align 4
  %21 = alloca float, align 4
  %22 = alloca float, align 4
  %23 = alloca float, align 4
  %24 = alloca float, align 4
  %25 = alloca float, align 4
  %26 = alloca float, align 4
  %27 = alloca float, align 4
  %28 = alloca i16*, align 8
  %29 = alloca float*, align 8
  %30 = alloca float*, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i8*, align 8
  %33 = alloca i32, align 4
  %34 = alloca [64 x float], align 16
  %35 = alloca float, align 4
  store %struct.jpeg_decompress_struct.763* %0, %struct.jpeg_decompress_struct.763** %6, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %7, align 8
  store i16* %2, i16** %8, align 8
  store i8** %3, i8*** %9, align 8
  store i32 %4, i32* %10, align 4
  %36 = load %struct.jpeg_decompress_struct.763*, %struct.jpeg_decompress_struct.763** %6, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct.763, %struct.jpeg_decompress_struct.763* %36, i32 0, i32 61
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 128
  store i8* %39, i8** %32, align 8
  %40 = load i16*, i16** %8, align 8
  store i16* %40, i16** %28, align 8
  %41 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %42 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %41, i32 0, i32 20
  %43 = load i8*, i8** %42, align 8
  %44 = bitcast i8* %43 to float*
  store float* %44, float** %29, align 8
  %45 = getelementptr inbounds [64 x float], [64 x float]* %34, i64 0, i64 0
  store float* %45, float** %30, align 8
  store i32 8, i32* %33, align 4
  br label %46

46:                                               ; preds = %302, %5
  %47 = load i32, i32* %33, align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %305

49:                                               ; preds = %46
  %50 = load i16*, i16** %28, align 8
  %51 = getelementptr inbounds i16, i16* %50, i64 8
  %52 = load i16, i16* %51, align 2
  %53 = sext i16 %52 to i32
  %54 = load i16*, i16** %28, align 8
  %55 = getelementptr inbounds i16, i16* %54, i64 16
  %56 = load i16, i16* %55, align 2
  %57 = sext i16 %56 to i32
  %58 = or i32 %53, %57
  %59 = load i16*, i16** %28, align 8
  %60 = getelementptr inbounds i16, i16* %59, i64 24
  %61 = load i16, i16* %60, align 2
  %62 = sext i16 %61 to i32
  %63 = or i32 %58, %62
  %64 = load i16*, i16** %28, align 8
  %65 = getelementptr inbounds i16, i16* %64, i64 32
  %66 = load i16, i16* %65, align 2
  %67 = sext i16 %66 to i32
  %68 = or i32 %63, %67
  %69 = load i16*, i16** %28, align 8
  %70 = getelementptr inbounds i16, i16* %69, i64 40
  %71 = load i16, i16* %70, align 2
  %72 = sext i16 %71 to i32
  %73 = or i32 %68, %72
  %74 = load i16*, i16** %28, align 8
  %75 = getelementptr inbounds i16, i16* %74, i64 48
  %76 = load i16, i16* %75, align 2
  %77 = sext i16 %76 to i32
  %78 = or i32 %73, %77
  %79 = load i16*, i16** %28, align 8
  %80 = getelementptr inbounds i16, i16* %79, i64 56
  %81 = load i16, i16* %80, align 2
  %82 = sext i16 %81 to i32
  %83 = or i32 %78, %82
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %124

85:                                               ; preds = %49
  %86 = load i16*, i16** %28, align 8
  %87 = getelementptr inbounds i16, i16* %86, i64 0
  %88 = load i16, i16* %87, align 2
  %89 = sitofp i16 %88 to float
  %90 = load float*, float** %29, align 8
  %91 = getelementptr inbounds float, float* %90, i64 0
  %92 = load float, float* %91, align 4
  %93 = fmul float %89, %92
  store float %93, float* %35, align 4
  %94 = load float, float* %35, align 4
  %95 = load float*, float** %30, align 8
  %96 = getelementptr inbounds float, float* %95, i64 0
  store float %94, float* %96, align 4
  %97 = load float, float* %35, align 4
  %98 = load float*, float** %30, align 8
  %99 = getelementptr inbounds float, float* %98, i64 8
  store float %97, float* %99, align 4
  %100 = load float, float* %35, align 4
  %101 = load float*, float** %30, align 8
  %102 = getelementptr inbounds float, float* %101, i64 16
  store float %100, float* %102, align 4
  %103 = load float, float* %35, align 4
  %104 = load float*, float** %30, align 8
  %105 = getelementptr inbounds float, float* %104, i64 24
  store float %103, float* %105, align 4
  %106 = load float, float* %35, align 4
  %107 = load float*, float** %30, align 8
  %108 = getelementptr inbounds float, float* %107, i64 32
  store float %106, float* %108, align 4
  %109 = load float, float* %35, align 4
  %110 = load float*, float** %30, align 8
  %111 = getelementptr inbounds float, float* %110, i64 40
  store float %109, float* %111, align 4
  %112 = load float, float* %35, align 4
  %113 = load float*, float** %30, align 8
  %114 = getelementptr inbounds float, float* %113, i64 48
  store float %112, float* %114, align 4
  %115 = load float, float* %35, align 4
  %116 = load float*, float** %30, align 8
  %117 = getelementptr inbounds float, float* %116, i64 56
  store float %115, float* %117, align 4
  %118 = load i16*, i16** %28, align 8
  %119 = getelementptr inbounds i16, i16* %118, i32 1
  store i16* %119, i16** %28, align 8
  %120 = load float*, float** %29, align 8
  %121 = getelementptr inbounds float, float* %120, i32 1
  store float* %121, float** %29, align 8
  %122 = load float*, float** %30, align 8
  %123 = getelementptr inbounds float, float* %122, i32 1
  store float* %123, float** %30, align 8
  br label %302

124:                                              ; preds = %49
  %125 = load i16*, i16** %28, align 8
  %126 = getelementptr inbounds i16, i16* %125, i64 0
  %127 = load i16, i16* %126, align 2
  %128 = sitofp i16 %127 to float
  %129 = load float*, float** %29, align 8
  %130 = getelementptr inbounds float, float* %129, i64 0
  %131 = load float, float* %130, align 4
  %132 = fmul float %128, %131
  store float %132, float* %11, align 4
  %133 = load i16*, i16** %28, align 8
  %134 = getelementptr inbounds i16, i16* %133, i64 16
  %135 = load i16, i16* %134, align 2
  %136 = sitofp i16 %135 to float
  %137 = load float*, float** %29, align 8
  %138 = getelementptr inbounds float, float* %137, i64 16
  %139 = load float, float* %138, align 4
  %140 = fmul float %136, %139
  store float %140, float* %12, align 4
  %141 = load i16*, i16** %28, align 8
  %142 = getelementptr inbounds i16, i16* %141, i64 32
  %143 = load i16, i16* %142, align 2
  %144 = sitofp i16 %143 to float
  %145 = load float*, float** %29, align 8
  %146 = getelementptr inbounds float, float* %145, i64 32
  %147 = load float, float* %146, align 4
  %148 = fmul float %144, %147
  store float %148, float* %13, align 4
  %149 = load i16*, i16** %28, align 8
  %150 = getelementptr inbounds i16, i16* %149, i64 48
  %151 = load i16, i16* %150, align 2
  %152 = sitofp i16 %151 to float
  %153 = load float*, float** %29, align 8
  %154 = getelementptr inbounds float, float* %153, i64 48
  %155 = load float, float* %154, align 4
  %156 = fmul float %152, %155
  store float %156, float* %14, align 4
  %157 = load float, float* %11, align 4
  %158 = load float, float* %13, align 4
  %159 = fadd float %157, %158
  store float %159, float* %19, align 4
  %160 = load float, float* %11, align 4
  %161 = load float, float* %13, align 4
  %162 = fsub float %160, %161
  store float %162, float* %20, align 4
  %163 = load float, float* %12, align 4
  %164 = load float, float* %14, align 4
  %165 = fadd float %163, %164
  store float %165, float* %22, align 4
  %166 = load float, float* %12, align 4
  %167 = load float, float* %14, align 4
  %168 = fsub float %166, %167
  %169 = fmul float %168, 0x3FF6A09E60000000
  %170 = load float, float* %22, align 4
  %171 = fsub float %169, %170
  store float %171, float* %21, align 4
  %172 = load float, float* %19, align 4
  %173 = load float, float* %22, align 4
  %174 = fadd float %172, %173
  store float %174, float* %11, align 4
  %175 = load float, float* %19, align 4
  %176 = load float, float* %22, align 4
  %177 = fsub float %175, %176
  store float %177, float* %14, align 4
  %178 = load float, float* %20, align 4
  %179 = load float, float* %21, align 4
  %180 = fadd float %178, %179
  store float %180, float* %12, align 4
  %181 = load float, float* %20, align 4
  %182 = load float, float* %21, align 4
  %183 = fsub float %181, %182
  store float %183, float* %13, align 4
  %184 = load i16*, i16** %28, align 8
  %185 = getelementptr inbounds i16, i16* %184, i64 8
  %186 = load i16, i16* %185, align 2
  %187 = sitofp i16 %186 to float
  %188 = load float*, float** %29, align 8
  %189 = getelementptr inbounds float, float* %188, i64 8
  %190 = load float, float* %189, align 4
  %191 = fmul float %187, %190
  store float %191, float* %15, align 4
  %192 = load i16*, i16** %28, align 8
  %193 = getelementptr inbounds i16, i16* %192, i64 24
  %194 = load i16, i16* %193, align 2
  %195 = sitofp i16 %194 to float
  %196 = load float*, float** %29, align 8
  %197 = getelementptr inbounds float, float* %196, i64 24
  %198 = load float, float* %197, align 4
  %199 = fmul float %195, %198
  store float %199, float* %16, align 4
  %200 = load i16*, i16** %28, align 8
  %201 = getelementptr inbounds i16, i16* %200, i64 40
  %202 = load i16, i16* %201, align 2
  %203 = sitofp i16 %202 to float
  %204 = load float*, float** %29, align 8
  %205 = getelementptr inbounds float, float* %204, i64 40
  %206 = load float, float* %205, align 4
  %207 = fmul float %203, %206
  store float %207, float* %17, align 4
  %208 = load i16*, i16** %28, align 8
  %209 = getelementptr inbounds i16, i16* %208, i64 56
  %210 = load i16, i16* %209, align 2
  %211 = sitofp i16 %210 to float
  %212 = load float*, float** %29, align 8
  %213 = getelementptr inbounds float, float* %212, i64 56
  %214 = load float, float* %213, align 4
  %215 = fmul float %211, %214
  store float %215, float* %18, align 4
  %216 = load float, float* %17, align 4
  %217 = load float, float* %16, align 4
  %218 = fadd float %216, %217
  store float %218, float* %27, align 4
  %219 = load float, float* %17, align 4
  %220 = load float, float* %16, align 4
  %221 = fsub float %219, %220
  store float %221, float* %24, align 4
  %222 = load float, float* %15, align 4
  %223 = load float, float* %18, align 4
  %224 = fadd float %222, %223
  store float %224, float* %25, align 4
  %225 = load float, float* %15, align 4
  %226 = load float, float* %18, align 4
  %227 = fsub float %225, %226
  store float %227, float* %26, align 4
  %228 = load float, float* %25, align 4
  %229 = load float, float* %27, align 4
  %230 = fadd float %228, %229
  store float %230, float* %18, align 4
  %231 = load float, float* %25, align 4
  %232 = load float, float* %27, align 4
  %233 = fsub float %231, %232
  %234 = fmul float %233, 0x3FF6A09E60000000
  store float %234, float* %20, align 4
  %235 = load float, float* %24, align 4
  %236 = load float, float* %26, align 4
  %237 = fadd float %235, %236
  %238 = fmul float %237, 0x3FFD906BC0000000
  store float %238, float* %23, align 4
  %239 = load float, float* %26, align 4
  %240 = fmul float 0x3FF1517A80000000, %239
  %241 = load float, float* %23, align 4
  %242 = fsub float %240, %241
  store float %242, float* %19, align 4
  %243 = load float, float* %24, align 4
  %244 = fmul float 0xC004E7AEA0000000, %243
  %245 = load float, float* %23, align 4
  %246 = fadd float %244, %245
  store float %246, float* %21, align 4
  %247 = load float, float* %21, align 4
  %248 = load float, float* %18, align 4
  %249 = fsub float %247, %248
  store float %249, float* %17, align 4
  %250 = load float, float* %20, align 4
  %251 = load float, float* %17, align 4
  %252 = fsub float %250, %251
  store float %252, float* %16, align 4
  %253 = load float, float* %19, align 4
  %254 = load float, float* %16, align 4
  %255 = fadd float %253, %254
  store float %255, float* %15, align 4
  %256 = load float, float* %11, align 4
  %257 = load float, float* %18, align 4
  %258 = fadd float %256, %257
  %259 = load float*, float** %30, align 8
  %260 = getelementptr inbounds float, float* %259, i64 0
  store float %258, float* %260, align 4
  %261 = load float, float* %11, align 4
  %262 = load float, float* %18, align 4
  %263 = fsub float %261, %262
  %264 = load float*, float** %30, align 8
  %265 = getelementptr inbounds float, float* %264, i64 56
  store float %263, float* %265, align 4
  %266 = load float, float* %12, align 4
  %267 = load float, float* %17, align 4
  %268 = fadd float %266, %267
  %269 = load float*, float** %30, align 8
  %270 = getelementptr inbounds float, float* %269, i64 8
  store float %268, float* %270, align 4
  %271 = load float, float* %12, align 4
  %272 = load float, float* %17, align 4
  %273 = fsub float %271, %272
  %274 = load float*, float** %30, align 8
  %275 = getelementptr inbounds float, float* %274, i64 48
  store float %273, float* %275, align 4
  %276 = load float, float* %13, align 4
  %277 = load float, float* %16, align 4
  %278 = fadd float %276, %277
  %279 = load float*, float** %30, align 8
  %280 = getelementptr inbounds float, float* %279, i64 16
  store float %278, float* %280, align 4
  %281 = load float, float* %13, align 4
  %282 = load float, float* %16, align 4
  %283 = fsub float %281, %282
  %284 = load float*, float** %30, align 8
  %285 = getelementptr inbounds float, float* %284, i64 40
  store float %283, float* %285, align 4
  %286 = load float, float* %14, align 4
  %287 = load float, float* %15, align 4
  %288 = fadd float %286, %287
  %289 = load float*, float** %30, align 8
  %290 = getelementptr inbounds float, float* %289, i64 32
  store float %288, float* %290, align 4
  %291 = load float, float* %14, align 4
  %292 = load float, float* %15, align 4
  %293 = fsub float %291, %292
  %294 = load float*, float** %30, align 8
  %295 = getelementptr inbounds float, float* %294, i64 24
  store float %293, float* %295, align 4
  %296 = load i16*, i16** %28, align 8
  %297 = getelementptr inbounds i16, i16* %296, i32 1
  store i16* %297, i16** %28, align 8
  %298 = load float*, float** %29, align 8
  %299 = getelementptr inbounds float, float* %298, i32 1
  store float* %299, float** %29, align 8
  %300 = load float*, float** %30, align 8
  %301 = getelementptr inbounds float, float* %300, i32 1
  store float* %301, float** %30, align 8
  br label %302

302:                                              ; preds = %124, %85
  %303 = load i32, i32* %33, align 4
  %304 = add nsw i32 %303, -1
  store i32 %304, i32* %33, align 4
  br label %46

305:                                              ; preds = %46
  %306 = getelementptr inbounds [64 x float], [64 x float]* %34, i64 0, i64 0
  store float* %306, float** %30, align 8
  store i32 0, i32* %33, align 4
  br label %307

307:                                              ; preds = %532, %305
  %308 = load i32, i32* %33, align 4
  %309 = icmp slt i32 %308, 8
  br i1 %309, label %310, label %535

310:                                              ; preds = %307
  %311 = load i8**, i8*** %9, align 8
  %312 = load i32, i32* %33, align 4
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds i8*, i8** %311, i64 %313
  %315 = load i8*, i8** %314, align 8
  %316 = load i32, i32* %10, align 4
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds i8, i8* %315, i64 %317
  store i8* %318, i8** %31, align 8
  %319 = load float*, float** %30, align 8
  %320 = getelementptr inbounds float, float* %319, i64 0
  %321 = load float, float* %320, align 4
  %322 = load float*, float** %30, align 8
  %323 = getelementptr inbounds float, float* %322, i64 4
  %324 = load float, float* %323, align 4
  %325 = fadd float %321, %324
  store float %325, float* %19, align 4
  %326 = load float*, float** %30, align 8
  %327 = getelementptr inbounds float, float* %326, i64 0
  %328 = load float, float* %327, align 4
  %329 = load float*, float** %30, align 8
  %330 = getelementptr inbounds float, float* %329, i64 4
  %331 = load float, float* %330, align 4
  %332 = fsub float %328, %331
  store float %332, float* %20, align 4
  %333 = load float*, float** %30, align 8
  %334 = getelementptr inbounds float, float* %333, i64 2
  %335 = load float, float* %334, align 4
  %336 = load float*, float** %30, align 8
  %337 = getelementptr inbounds float, float* %336, i64 6
  %338 = load float, float* %337, align 4
  %339 = fadd float %335, %338
  store float %339, float* %22, align 4
  %340 = load float*, float** %30, align 8
  %341 = getelementptr inbounds float, float* %340, i64 2
  %342 = load float, float* %341, align 4
  %343 = load float*, float** %30, align 8
  %344 = getelementptr inbounds float, float* %343, i64 6
  %345 = load float, float* %344, align 4
  %346 = fsub float %342, %345
  %347 = fmul float %346, 0x3FF6A09E60000000
  %348 = load float, float* %22, align 4
  %349 = fsub float %347, %348
  store float %349, float* %21, align 4
  %350 = load float, float* %19, align 4
  %351 = load float, float* %22, align 4
  %352 = fadd float %350, %351
  store float %352, float* %11, align 4
  %353 = load float, float* %19, align 4
  %354 = load float, float* %22, align 4
  %355 = fsub float %353, %354
  store float %355, float* %14, align 4
  %356 = load float, float* %20, align 4
  %357 = load float, float* %21, align 4
  %358 = fadd float %356, %357
  store float %358, float* %12, align 4
  %359 = load float, float* %20, align 4
  %360 = load float, float* %21, align 4
  %361 = fsub float %359, %360
  store float %361, float* %13, align 4
  %362 = load float*, float** %30, align 8
  %363 = getelementptr inbounds float, float* %362, i64 5
  %364 = load float, float* %363, align 4
  %365 = load float*, float** %30, align 8
  %366 = getelementptr inbounds float, float* %365, i64 3
  %367 = load float, float* %366, align 4
  %368 = fadd float %364, %367
  store float %368, float* %27, align 4
  %369 = load float*, float** %30, align 8
  %370 = getelementptr inbounds float, float* %369, i64 5
  %371 = load float, float* %370, align 4
  %372 = load float*, float** %30, align 8
  %373 = getelementptr inbounds float, float* %372, i64 3
  %374 = load float, float* %373, align 4
  %375 = fsub float %371, %374
  store float %375, float* %24, align 4
  %376 = load float*, float** %30, align 8
  %377 = getelementptr inbounds float, float* %376, i64 1
  %378 = load float, float* %377, align 4
  %379 = load float*, float** %30, align 8
  %380 = getelementptr inbounds float, float* %379, i64 7
  %381 = load float, float* %380, align 4
  %382 = fadd float %378, %381
  store float %382, float* %25, align 4
  %383 = load float*, float** %30, align 8
  %384 = getelementptr inbounds float, float* %383, i64 1
  %385 = load float, float* %384, align 4
  %386 = load float*, float** %30, align 8
  %387 = getelementptr inbounds float, float* %386, i64 7
  %388 = load float, float* %387, align 4
  %389 = fsub float %385, %388
  store float %389, float* %26, align 4
  %390 = load float, float* %25, align 4
  %391 = load float, float* %27, align 4
  %392 = fadd float %390, %391
  store float %392, float* %18, align 4
  %393 = load float, float* %25, align 4
  %394 = load float, float* %27, align 4
  %395 = fsub float %393, %394
  %396 = fmul float %395, 0x3FF6A09E60000000
  store float %396, float* %20, align 4
  %397 = load float, float* %24, align 4
  %398 = load float, float* %26, align 4
  %399 = fadd float %397, %398
  %400 = fmul float %399, 0x3FFD906BC0000000
  store float %400, float* %23, align 4
  %401 = load float, float* %26, align 4
  %402 = fmul float 0x3FF1517A80000000, %401
  %403 = load float, float* %23, align 4
  %404 = fsub float %402, %403
  store float %404, float* %19, align 4
  %405 = load float, float* %24, align 4
  %406 = fmul float 0xC004E7AEA0000000, %405
  %407 = load float, float* %23, align 4
  %408 = fadd float %406, %407
  store float %408, float* %21, align 4
  %409 = load float, float* %21, align 4
  %410 = load float, float* %18, align 4
  %411 = fsub float %409, %410
  store float %411, float* %17, align 4
  %412 = load float, float* %20, align 4
  %413 = load float, float* %17, align 4
  %414 = fsub float %412, %413
  store float %414, float* %16, align 4
  %415 = load float, float* %19, align 4
  %416 = load float, float* %16, align 4
  %417 = fadd float %415, %416
  store float %417, float* %15, align 4
  %418 = load i8*, i8** %32, align 8
  %419 = load float, float* %11, align 4
  %420 = load float, float* %18, align 4
  %421 = fadd float %419, %420
  %422 = fptosi float %421 to i64
  %423 = add nsw i64 %422, 4
  %424 = ashr i64 %423, 3
  %425 = trunc i64 %424 to i32
  %426 = and i32 %425, 1023
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds i8, i8* %418, i64 %427
  %429 = load i8, i8* %428, align 1
  %430 = load i8*, i8** %31, align 8
  %431 = getelementptr inbounds i8, i8* %430, i64 0
  store i8 %429, i8* %431, align 1
  %432 = load i8*, i8** %32, align 8
  %433 = load float, float* %11, align 4
  %434 = load float, float* %18, align 4
  %435 = fsub float %433, %434
  %436 = fptosi float %435 to i64
  %437 = add nsw i64 %436, 4
  %438 = ashr i64 %437, 3
  %439 = trunc i64 %438 to i32
  %440 = and i32 %439, 1023
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds i8, i8* %432, i64 %441
  %443 = load i8, i8* %442, align 1
  %444 = load i8*, i8** %31, align 8
  %445 = getelementptr inbounds i8, i8* %444, i64 7
  store i8 %443, i8* %445, align 1
  %446 = load i8*, i8** %32, align 8
  %447 = load float, float* %12, align 4
  %448 = load float, float* %17, align 4
  %449 = fadd float %447, %448
  %450 = fptosi float %449 to i64
  %451 = add nsw i64 %450, 4
  %452 = ashr i64 %451, 3
  %453 = trunc i64 %452 to i32
  %454 = and i32 %453, 1023
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds i8, i8* %446, i64 %455
  %457 = load i8, i8* %456, align 1
  %458 = load i8*, i8** %31, align 8
  %459 = getelementptr inbounds i8, i8* %458, i64 1
  store i8 %457, i8* %459, align 1
  %460 = load i8*, i8** %32, align 8
  %461 = load float, float* %12, align 4
  %462 = load float, float* %17, align 4
  %463 = fsub float %461, %462
  %464 = fptosi float %463 to i64
  %465 = add nsw i64 %464, 4
  %466 = ashr i64 %465, 3
  %467 = trunc i64 %466 to i32
  %468 = and i32 %467, 1023
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds i8, i8* %460, i64 %469
  %471 = load i8, i8* %470, align 1
  %472 = load i8*, i8** %31, align 8
  %473 = getelementptr inbounds i8, i8* %472, i64 6
  store i8 %471, i8* %473, align 1
  %474 = load i8*, i8** %32, align 8
  %475 = load float, float* %13, align 4
  %476 = load float, float* %16, align 4
  %477 = fadd float %475, %476
  %478 = fptosi float %477 to i64
  %479 = add nsw i64 %478, 4
  %480 = ashr i64 %479, 3
  %481 = trunc i64 %480 to i32
  %482 = and i32 %481, 1023
  %483 = sext i32 %482 to i64
  %484 = getelementptr inbounds i8, i8* %474, i64 %483
  %485 = load i8, i8* %484, align 1
  %486 = load i8*, i8** %31, align 8
  %487 = getelementptr inbounds i8, i8* %486, i64 2
  store i8 %485, i8* %487, align 1
  %488 = load i8*, i8** %32, align 8
  %489 = load float, float* %13, align 4
  %490 = load float, float* %16, align 4
  %491 = fsub float %489, %490
  %492 = fptosi float %491 to i64
  %493 = add nsw i64 %492, 4
  %494 = ashr i64 %493, 3
  %495 = trunc i64 %494 to i32
  %496 = and i32 %495, 1023
  %497 = sext i32 %496 to i64
  %498 = getelementptr inbounds i8, i8* %488, i64 %497
  %499 = load i8, i8* %498, align 1
  %500 = load i8*, i8** %31, align 8
  %501 = getelementptr inbounds i8, i8* %500, i64 5
  store i8 %499, i8* %501, align 1
  %502 = load i8*, i8** %32, align 8
  %503 = load float, float* %14, align 4
  %504 = load float, float* %15, align 4
  %505 = fadd float %503, %504
  %506 = fptosi float %505 to i64
  %507 = add nsw i64 %506, 4
  %508 = ashr i64 %507, 3
  %509 = trunc i64 %508 to i32
  %510 = and i32 %509, 1023
  %511 = sext i32 %510 to i64
  %512 = getelementptr inbounds i8, i8* %502, i64 %511
  %513 = load i8, i8* %512, align 1
  %514 = load i8*, i8** %31, align 8
  %515 = getelementptr inbounds i8, i8* %514, i64 4
  store i8 %513, i8* %515, align 1
  %516 = load i8*, i8** %32, align 8
  %517 = load float, float* %14, align 4
  %518 = load float, float* %15, align 4
  %519 = fsub float %517, %518
  %520 = fptosi float %519 to i64
  %521 = add nsw i64 %520, 4
  %522 = ashr i64 %521, 3
  %523 = trunc i64 %522 to i32
  %524 = and i32 %523, 1023
  %525 = sext i32 %524 to i64
  %526 = getelementptr inbounds i8, i8* %516, i64 %525
  %527 = load i8, i8* %526, align 1
  %528 = load i8*, i8** %31, align 8
  %529 = getelementptr inbounds i8, i8* %528, i64 3
  store i8 %527, i8* %529, align 1
  %530 = load float*, float** %30, align 8
  %531 = getelementptr inbounds float, float* %530, i64 8
  store float* %531, float** %30, align 8
  br label %532

532:                                              ; preds = %310
  %533 = load i32, i32* %33, align 4
  %534 = add nsw i32 %533, 1
  store i32 %534, i32* %33, align 4
  br label %307

535:                                              ; preds = %307
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_idct_ifast(%struct.jpeg_decompress_struct.786* %0, %struct.jpeg_component_info* %1, i16* %2, i8** %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_decompress_struct.786*, align 8
  %7 = alloca %struct.jpeg_component_info*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i16*, align 8
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i8*, align 8
  %33 = alloca i32, align 4
  %34 = alloca [64 x i32], align 16
  %35 = alloca i32, align 4
  %36 = alloca i8, align 1
  store %struct.jpeg_decompress_struct.786* %0, %struct.jpeg_decompress_struct.786** %6, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %7, align 8
  store i16* %2, i16** %8, align 8
  store i8** %3, i8*** %9, align 8
  store i32 %4, i32* %10, align 4
  %37 = load %struct.jpeg_decompress_struct.786*, %struct.jpeg_decompress_struct.786** %6, align 8
  %38 = getelementptr inbounds %struct.jpeg_decompress_struct.786, %struct.jpeg_decompress_struct.786* %37, i32 0, i32 61
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 128
  store i8* %40, i8** %32, align 8
  %41 = load i16*, i16** %8, align 8
  store i16* %41, i16** %28, align 8
  %42 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %43 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %42, i32 0, i32 20
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast i8* %44 to i32*
  store i32* %45, i32** %29, align 8
  %46 = getelementptr inbounds [64 x i32], [64 x i32]* %34, i64 0, i64 0
  store i32* %46, i32** %30, align 8
  store i32 8, i32* %33, align 4
  br label %47

47:                                               ; preds = %318, %5
  %48 = load i32, i32* %33, align 4
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %321

50:                                               ; preds = %47
  %51 = load i16*, i16** %28, align 8
  %52 = getelementptr inbounds i16, i16* %51, i64 8
  %53 = load i16, i16* %52, align 2
  %54 = sext i16 %53 to i32
  %55 = load i16*, i16** %28, align 8
  %56 = getelementptr inbounds i16, i16* %55, i64 16
  %57 = load i16, i16* %56, align 2
  %58 = sext i16 %57 to i32
  %59 = or i32 %54, %58
  %60 = load i16*, i16** %28, align 8
  %61 = getelementptr inbounds i16, i16* %60, i64 24
  %62 = load i16, i16* %61, align 2
  %63 = sext i16 %62 to i32
  %64 = or i32 %59, %63
  %65 = load i16*, i16** %28, align 8
  %66 = getelementptr inbounds i16, i16* %65, i64 32
  %67 = load i16, i16* %66, align 2
  %68 = sext i16 %67 to i32
  %69 = or i32 %64, %68
  %70 = load i16*, i16** %28, align 8
  %71 = getelementptr inbounds i16, i16* %70, i64 40
  %72 = load i16, i16* %71, align 2
  %73 = sext i16 %72 to i32
  %74 = or i32 %69, %73
  %75 = load i16*, i16** %28, align 8
  %76 = getelementptr inbounds i16, i16* %75, i64 48
  %77 = load i16, i16* %76, align 2
  %78 = sext i16 %77 to i32
  %79 = or i32 %74, %78
  %80 = load i16*, i16** %28, align 8
  %81 = getelementptr inbounds i16, i16* %80, i64 56
  %82 = load i16, i16* %81, align 2
  %83 = sext i16 %82 to i32
  %84 = or i32 %79, %83
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %125

86:                                               ; preds = %50
  %87 = load i16*, i16** %28, align 8
  %88 = getelementptr inbounds i16, i16* %87, i64 0
  %89 = load i16, i16* %88, align 2
  %90 = sext i16 %89 to i32
  %91 = load i32*, i32** %29, align 8
  %92 = getelementptr inbounds i32, i32* %91, i64 0
  %93 = load i32, i32* %92, align 4
  %94 = mul nsw i32 %90, %93
  store i32 %94, i32* %35, align 4
  %95 = load i32, i32* %35, align 4
  %96 = load i32*, i32** %30, align 8
  %97 = getelementptr inbounds i32, i32* %96, i64 0
  store i32 %95, i32* %97, align 4
  %98 = load i32, i32* %35, align 4
  %99 = load i32*, i32** %30, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 8
  store i32 %98, i32* %100, align 4
  %101 = load i32, i32* %35, align 4
  %102 = load i32*, i32** %30, align 8
  %103 = getelementptr inbounds i32, i32* %102, i64 16
  store i32 %101, i32* %103, align 4
  %104 = load i32, i32* %35, align 4
  %105 = load i32*, i32** %30, align 8
  %106 = getelementptr inbounds i32, i32* %105, i64 24
  store i32 %104, i32* %106, align 4
  %107 = load i32, i32* %35, align 4
  %108 = load i32*, i32** %30, align 8
  %109 = getelementptr inbounds i32, i32* %108, i64 32
  store i32 %107, i32* %109, align 4
  %110 = load i32, i32* %35, align 4
  %111 = load i32*, i32** %30, align 8
  %112 = getelementptr inbounds i32, i32* %111, i64 40
  store i32 %110, i32* %112, align 4
  %113 = load i32, i32* %35, align 4
  %114 = load i32*, i32** %30, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 48
  store i32 %113, i32* %115, align 4
  %116 = load i32, i32* %35, align 4
  %117 = load i32*, i32** %30, align 8
  %118 = getelementptr inbounds i32, i32* %117, i64 56
  store i32 %116, i32* %118, align 4
  %119 = load i16*, i16** %28, align 8
  %120 = getelementptr inbounds i16, i16* %119, i32 1
  store i16* %120, i16** %28, align 8
  %121 = load i32*, i32** %29, align 8
  %122 = getelementptr inbounds i32, i32* %121, i32 1
  store i32* %122, i32** %29, align 8
  %123 = load i32*, i32** %30, align 8
  %124 = getelementptr inbounds i32, i32* %123, i32 1
  store i32* %124, i32** %30, align 8
  br label %318

125:                                              ; preds = %50
  %126 = load i16*, i16** %28, align 8
  %127 = getelementptr inbounds i16, i16* %126, i64 0
  %128 = load i16, i16* %127, align 2
  %129 = sext i16 %128 to i32
  %130 = load i32*, i32** %29, align 8
  %131 = getelementptr inbounds i32, i32* %130, i64 0
  %132 = load i32, i32* %131, align 4
  %133 = mul nsw i32 %129, %132
  store i32 %133, i32* %11, align 4
  %134 = load i16*, i16** %28, align 8
  %135 = getelementptr inbounds i16, i16* %134, i64 16
  %136 = load i16, i16* %135, align 2
  %137 = sext i16 %136 to i32
  %138 = load i32*, i32** %29, align 8
  %139 = getelementptr inbounds i32, i32* %138, i64 16
  %140 = load i32, i32* %139, align 4
  %141 = mul nsw i32 %137, %140
  store i32 %141, i32* %12, align 4
  %142 = load i16*, i16** %28, align 8
  %143 = getelementptr inbounds i16, i16* %142, i64 32
  %144 = load i16, i16* %143, align 2
  %145 = sext i16 %144 to i32
  %146 = load i32*, i32** %29, align 8
  %147 = getelementptr inbounds i32, i32* %146, i64 32
  %148 = load i32, i32* %147, align 4
  %149 = mul nsw i32 %145, %148
  store i32 %149, i32* %13, align 4
  %150 = load i16*, i16** %28, align 8
  %151 = getelementptr inbounds i16, i16* %150, i64 48
  %152 = load i16, i16* %151, align 2
  %153 = sext i16 %152 to i32
  %154 = load i32*, i32** %29, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 48
  %156 = load i32, i32* %155, align 4
  %157 = mul nsw i32 %153, %156
  store i32 %157, i32* %14, align 4
  %158 = load i32, i32* %11, align 4
  %159 = load i32, i32* %13, align 4
  %160 = add nsw i32 %158, %159
  store i32 %160, i32* %19, align 4
  %161 = load i32, i32* %11, align 4
  %162 = load i32, i32* %13, align 4
  %163 = sub nsw i32 %161, %162
  store i32 %163, i32* %20, align 4
  %164 = load i32, i32* %12, align 4
  %165 = load i32, i32* %14, align 4
  %166 = add nsw i32 %164, %165
  store i32 %166, i32* %22, align 4
  %167 = load i32, i32* %12, align 4
  %168 = load i32, i32* %14, align 4
  %169 = sub nsw i32 %167, %168
  %170 = sext i32 %169 to i64
  %171 = mul nsw i64 %170, 362
  %172 = ashr i64 %171, 8
  %173 = trunc i64 %172 to i32
  %174 = load i32, i32* %22, align 4
  %175 = sub nsw i32 %173, %174
  store i32 %175, i32* %21, align 4
  %176 = load i32, i32* %19, align 4
  %177 = load i32, i32* %22, align 4
  %178 = add nsw i32 %176, %177
  store i32 %178, i32* %11, align 4
  %179 = load i32, i32* %19, align 4
  %180 = load i32, i32* %22, align 4
  %181 = sub nsw i32 %179, %180
  store i32 %181, i32* %14, align 4
  %182 = load i32, i32* %20, align 4
  %183 = load i32, i32* %21, align 4
  %184 = add nsw i32 %182, %183
  store i32 %184, i32* %12, align 4
  %185 = load i32, i32* %20, align 4
  %186 = load i32, i32* %21, align 4
  %187 = sub nsw i32 %185, %186
  store i32 %187, i32* %13, align 4
  %188 = load i16*, i16** %28, align 8
  %189 = getelementptr inbounds i16, i16* %188, i64 8
  %190 = load i16, i16* %189, align 2
  %191 = sext i16 %190 to i32
  %192 = load i32*, i32** %29, align 8
  %193 = getelementptr inbounds i32, i32* %192, i64 8
  %194 = load i32, i32* %193, align 4
  %195 = mul nsw i32 %191, %194
  store i32 %195, i32* %15, align 4
  %196 = load i16*, i16** %28, align 8
  %197 = getelementptr inbounds i16, i16* %196, i64 24
  %198 = load i16, i16* %197, align 2
  %199 = sext i16 %198 to i32
  %200 = load i32*, i32** %29, align 8
  %201 = getelementptr inbounds i32, i32* %200, i64 24
  %202 = load i32, i32* %201, align 4
  %203 = mul nsw i32 %199, %202
  store i32 %203, i32* %16, align 4
  %204 = load i16*, i16** %28, align 8
  %205 = getelementptr inbounds i16, i16* %204, i64 40
  %206 = load i16, i16* %205, align 2
  %207 = sext i16 %206 to i32
  %208 = load i32*, i32** %29, align 8
  %209 = getelementptr inbounds i32, i32* %208, i64 40
  %210 = load i32, i32* %209, align 4
  %211 = mul nsw i32 %207, %210
  store i32 %211, i32* %17, align 4
  %212 = load i16*, i16** %28, align 8
  %213 = getelementptr inbounds i16, i16* %212, i64 56
  %214 = load i16, i16* %213, align 2
  %215 = sext i16 %214 to i32
  %216 = load i32*, i32** %29, align 8
  %217 = getelementptr inbounds i32, i32* %216, i64 56
  %218 = load i32, i32* %217, align 4
  %219 = mul nsw i32 %215, %218
  store i32 %219, i32* %18, align 4
  %220 = load i32, i32* %17, align 4
  %221 = load i32, i32* %16, align 4
  %222 = add nsw i32 %220, %221
  store i32 %222, i32* %27, align 4
  %223 = load i32, i32* %17, align 4
  %224 = load i32, i32* %16, align 4
  %225 = sub nsw i32 %223, %224
  store i32 %225, i32* %24, align 4
  %226 = load i32, i32* %15, align 4
  %227 = load i32, i32* %18, align 4
  %228 = add nsw i32 %226, %227
  store i32 %228, i32* %25, align 4
  %229 = load i32, i32* %15, align 4
  %230 = load i32, i32* %18, align 4
  %231 = sub nsw i32 %229, %230
  store i32 %231, i32* %26, align 4
  %232 = load i32, i32* %25, align 4
  %233 = load i32, i32* %27, align 4
  %234 = add nsw i32 %232, %233
  store i32 %234, i32* %18, align 4
  %235 = load i32, i32* %25, align 4
  %236 = load i32, i32* %27, align 4
  %237 = sub nsw i32 %235, %236
  %238 = sext i32 %237 to i64
  %239 = mul nsw i64 %238, 362
  %240 = ashr i64 %239, 8
  %241 = trunc i64 %240 to i32
  store i32 %241, i32* %20, align 4
  %242 = load i32, i32* %24, align 4
  %243 = load i32, i32* %26, align 4
  %244 = add nsw i32 %242, %243
  %245 = sext i32 %244 to i64
  %246 = mul nsw i64 %245, 473
  %247 = ashr i64 %246, 8
  %248 = trunc i64 %247 to i32
  store i32 %248, i32* %23, align 4
  %249 = load i32, i32* %26, align 4
  %250 = sext i32 %249 to i64
  %251 = mul nsw i64 %250, 277
  %252 = ashr i64 %251, 8
  %253 = trunc i64 %252 to i32
  %254 = load i32, i32* %23, align 4
  %255 = sub nsw i32 %253, %254
  store i32 %255, i32* %19, align 4
  %256 = load i32, i32* %24, align 4
  %257 = sext i32 %256 to i64
  %258 = mul nsw i64 %257, -669
  %259 = ashr i64 %258, 8
  %260 = trunc i64 %259 to i32
  %261 = load i32, i32* %23, align 4
  %262 = add nsw i32 %260, %261
  store i32 %262, i32* %21, align 4
  %263 = load i32, i32* %21, align 4
  %264 = load i32, i32* %18, align 4
  %265 = sub nsw i32 %263, %264
  store i32 %265, i32* %17, align 4
  %266 = load i32, i32* %20, align 4
  %267 = load i32, i32* %17, align 4
  %268 = sub nsw i32 %266, %267
  store i32 %268, i32* %16, align 4
  %269 = load i32, i32* %19, align 4
  %270 = load i32, i32* %16, align 4
  %271 = add nsw i32 %269, %270
  store i32 %271, i32* %15, align 4
  %272 = load i32, i32* %11, align 4
  %273 = load i32, i32* %18, align 4
  %274 = add nsw i32 %272, %273
  %275 = load i32*, i32** %30, align 8
  %276 = getelementptr inbounds i32, i32* %275, i64 0
  store i32 %274, i32* %276, align 4
  %277 = load i32, i32* %11, align 4
  %278 = load i32, i32* %18, align 4
  %279 = sub nsw i32 %277, %278
  %280 = load i32*, i32** %30, align 8
  %281 = getelementptr inbounds i32, i32* %280, i64 56
  store i32 %279, i32* %281, align 4
  %282 = load i32, i32* %12, align 4
  %283 = load i32, i32* %17, align 4
  %284 = add nsw i32 %282, %283
  %285 = load i32*, i32** %30, align 8
  %286 = getelementptr inbounds i32, i32* %285, i64 8
  store i32 %284, i32* %286, align 4
  %287 = load i32, i32* %12, align 4
  %288 = load i32, i32* %17, align 4
  %289 = sub nsw i32 %287, %288
  %290 = load i32*, i32** %30, align 8
  %291 = getelementptr inbounds i32, i32* %290, i64 48
  store i32 %289, i32* %291, align 4
  %292 = load i32, i32* %13, align 4
  %293 = load i32, i32* %16, align 4
  %294 = add nsw i32 %292, %293
  %295 = load i32*, i32** %30, align 8
  %296 = getelementptr inbounds i32, i32* %295, i64 16
  store i32 %294, i32* %296, align 4
  %297 = load i32, i32* %13, align 4
  %298 = load i32, i32* %16, align 4
  %299 = sub nsw i32 %297, %298
  %300 = load i32*, i32** %30, align 8
  %301 = getelementptr inbounds i32, i32* %300, i64 40
  store i32 %299, i32* %301, align 4
  %302 = load i32, i32* %14, align 4
  %303 = load i32, i32* %15, align 4
  %304 = add nsw i32 %302, %303
  %305 = load i32*, i32** %30, align 8
  %306 = getelementptr inbounds i32, i32* %305, i64 32
  store i32 %304, i32* %306, align 4
  %307 = load i32, i32* %14, align 4
  %308 = load i32, i32* %15, align 4
  %309 = sub nsw i32 %307, %308
  %310 = load i32*, i32** %30, align 8
  %311 = getelementptr inbounds i32, i32* %310, i64 24
  store i32 %309, i32* %311, align 4
  %312 = load i16*, i16** %28, align 8
  %313 = getelementptr inbounds i16, i16* %312, i32 1
  store i16* %313, i16** %28, align 8
  %314 = load i32*, i32** %29, align 8
  %315 = getelementptr inbounds i32, i32* %314, i32 1
  store i32* %315, i32** %29, align 8
  %316 = load i32*, i32** %30, align 8
  %317 = getelementptr inbounds i32, i32* %316, i32 1
  store i32* %317, i32** %30, align 8
  br label %318

318:                                              ; preds = %125, %86
  %319 = load i32, i32* %33, align 4
  %320 = add nsw i32 %319, -1
  store i32 %320, i32* %33, align 4
  br label %47

321:                                              ; preds = %47
  %322 = getelementptr inbounds [64 x i32], [64 x i32]* %34, i64 0, i64 0
  store i32* %322, i32** %30, align 8
  store i32 0, i32* %33, align 4
  br label %323

323:                                              ; preds = %604, %321
  %324 = load i32, i32* %33, align 4
  %325 = icmp slt i32 %324, 8
  br i1 %325, label %326, label %607

326:                                              ; preds = %323
  %327 = load i8**, i8*** %9, align 8
  %328 = load i32, i32* %33, align 4
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds i8*, i8** %327, i64 %329
  %331 = load i8*, i8** %330, align 8
  %332 = load i32, i32* %10, align 4
  %333 = zext i32 %332 to i64
  %334 = getelementptr inbounds i8, i8* %331, i64 %333
  store i8* %334, i8** %31, align 8
  %335 = load i32*, i32** %30, align 8
  %336 = getelementptr inbounds i32, i32* %335, i64 1
  %337 = load i32, i32* %336, align 4
  %338 = load i32*, i32** %30, align 8
  %339 = getelementptr inbounds i32, i32* %338, i64 2
  %340 = load i32, i32* %339, align 4
  %341 = or i32 %337, %340
  %342 = load i32*, i32** %30, align 8
  %343 = getelementptr inbounds i32, i32* %342, i64 3
  %344 = load i32, i32* %343, align 4
  %345 = or i32 %341, %344
  %346 = load i32*, i32** %30, align 8
  %347 = getelementptr inbounds i32, i32* %346, i64 4
  %348 = load i32, i32* %347, align 4
  %349 = or i32 %345, %348
  %350 = load i32*, i32** %30, align 8
  %351 = getelementptr inbounds i32, i32* %350, i64 5
  %352 = load i32, i32* %351, align 4
  %353 = or i32 %349, %352
  %354 = load i32*, i32** %30, align 8
  %355 = getelementptr inbounds i32, i32* %354, i64 6
  %356 = load i32, i32* %355, align 4
  %357 = or i32 %353, %356
  %358 = load i32*, i32** %30, align 8
  %359 = getelementptr inbounds i32, i32* %358, i64 7
  %360 = load i32, i32* %359, align 4
  %361 = or i32 %357, %360
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %399

363:                                              ; preds = %326
  %364 = load i8*, i8** %32, align 8
  %365 = load i32*, i32** %30, align 8
  %366 = getelementptr inbounds i32, i32* %365, i64 0
  %367 = load i32, i32* %366, align 4
  %368 = ashr i32 %367, 5
  %369 = and i32 %368, 1023
  %370 = sext i32 %369 to i64
  %371 = getelementptr inbounds i8, i8* %364, i64 %370
  %372 = load i8, i8* %371, align 1
  store i8 %372, i8* %36, align 1
  %373 = load i8, i8* %36, align 1
  %374 = load i8*, i8** %31, align 8
  %375 = getelementptr inbounds i8, i8* %374, i64 0
  store i8 %373, i8* %375, align 1
  %376 = load i8, i8* %36, align 1
  %377 = load i8*, i8** %31, align 8
  %378 = getelementptr inbounds i8, i8* %377, i64 1
  store i8 %376, i8* %378, align 1
  %379 = load i8, i8* %36, align 1
  %380 = load i8*, i8** %31, align 8
  %381 = getelementptr inbounds i8, i8* %380, i64 2
  store i8 %379, i8* %381, align 1
  %382 = load i8, i8* %36, align 1
  %383 = load i8*, i8** %31, align 8
  %384 = getelementptr inbounds i8, i8* %383, i64 3
  store i8 %382, i8* %384, align 1
  %385 = load i8, i8* %36, align 1
  %386 = load i8*, i8** %31, align 8
  %387 = getelementptr inbounds i8, i8* %386, i64 4
  store i8 %385, i8* %387, align 1
  %388 = load i8, i8* %36, align 1
  %389 = load i8*, i8** %31, align 8
  %390 = getelementptr inbounds i8, i8* %389, i64 5
  store i8 %388, i8* %390, align 1
  %391 = load i8, i8* %36, align 1
  %392 = load i8*, i8** %31, align 8
  %393 = getelementptr inbounds i8, i8* %392, i64 6
  store i8 %391, i8* %393, align 1
  %394 = load i8, i8* %36, align 1
  %395 = load i8*, i8** %31, align 8
  %396 = getelementptr inbounds i8, i8* %395, i64 7
  store i8 %394, i8* %396, align 1
  %397 = load i32*, i32** %30, align 8
  %398 = getelementptr inbounds i32, i32* %397, i64 8
  store i32* %398, i32** %30, align 8
  br label %604

399:                                              ; preds = %326
  %400 = load i32*, i32** %30, align 8
  %401 = getelementptr inbounds i32, i32* %400, i64 0
  %402 = load i32, i32* %401, align 4
  %403 = load i32*, i32** %30, align 8
  %404 = getelementptr inbounds i32, i32* %403, i64 4
  %405 = load i32, i32* %404, align 4
  %406 = add nsw i32 %402, %405
  store i32 %406, i32* %19, align 4
  %407 = load i32*, i32** %30, align 8
  %408 = getelementptr inbounds i32, i32* %407, i64 0
  %409 = load i32, i32* %408, align 4
  %410 = load i32*, i32** %30, align 8
  %411 = getelementptr inbounds i32, i32* %410, i64 4
  %412 = load i32, i32* %411, align 4
  %413 = sub nsw i32 %409, %412
  store i32 %413, i32* %20, align 4
  %414 = load i32*, i32** %30, align 8
  %415 = getelementptr inbounds i32, i32* %414, i64 2
  %416 = load i32, i32* %415, align 4
  %417 = load i32*, i32** %30, align 8
  %418 = getelementptr inbounds i32, i32* %417, i64 6
  %419 = load i32, i32* %418, align 4
  %420 = add nsw i32 %416, %419
  store i32 %420, i32* %22, align 4
  %421 = load i32*, i32** %30, align 8
  %422 = getelementptr inbounds i32, i32* %421, i64 2
  %423 = load i32, i32* %422, align 4
  %424 = load i32*, i32** %30, align 8
  %425 = getelementptr inbounds i32, i32* %424, i64 6
  %426 = load i32, i32* %425, align 4
  %427 = sub nsw i32 %423, %426
  %428 = sext i32 %427 to i64
  %429 = mul nsw i64 %428, 362
  %430 = ashr i64 %429, 8
  %431 = trunc i64 %430 to i32
  %432 = load i32, i32* %22, align 4
  %433 = sub nsw i32 %431, %432
  store i32 %433, i32* %21, align 4
  %434 = load i32, i32* %19, align 4
  %435 = load i32, i32* %22, align 4
  %436 = add nsw i32 %434, %435
  store i32 %436, i32* %11, align 4
  %437 = load i32, i32* %19, align 4
  %438 = load i32, i32* %22, align 4
  %439 = sub nsw i32 %437, %438
  store i32 %439, i32* %14, align 4
  %440 = load i32, i32* %20, align 4
  %441 = load i32, i32* %21, align 4
  %442 = add nsw i32 %440, %441
  store i32 %442, i32* %12, align 4
  %443 = load i32, i32* %20, align 4
  %444 = load i32, i32* %21, align 4
  %445 = sub nsw i32 %443, %444
  store i32 %445, i32* %13, align 4
  %446 = load i32*, i32** %30, align 8
  %447 = getelementptr inbounds i32, i32* %446, i64 5
  %448 = load i32, i32* %447, align 4
  %449 = load i32*, i32** %30, align 8
  %450 = getelementptr inbounds i32, i32* %449, i64 3
  %451 = load i32, i32* %450, align 4
  %452 = add nsw i32 %448, %451
  store i32 %452, i32* %27, align 4
  %453 = load i32*, i32** %30, align 8
  %454 = getelementptr inbounds i32, i32* %453, i64 5
  %455 = load i32, i32* %454, align 4
  %456 = load i32*, i32** %30, align 8
  %457 = getelementptr inbounds i32, i32* %456, i64 3
  %458 = load i32, i32* %457, align 4
  %459 = sub nsw i32 %455, %458
  store i32 %459, i32* %24, align 4
  %460 = load i32*, i32** %30, align 8
  %461 = getelementptr inbounds i32, i32* %460, i64 1
  %462 = load i32, i32* %461, align 4
  %463 = load i32*, i32** %30, align 8
  %464 = getelementptr inbounds i32, i32* %463, i64 7
  %465 = load i32, i32* %464, align 4
  %466 = add nsw i32 %462, %465
  store i32 %466, i32* %25, align 4
  %467 = load i32*, i32** %30, align 8
  %468 = getelementptr inbounds i32, i32* %467, i64 1
  %469 = load i32, i32* %468, align 4
  %470 = load i32*, i32** %30, align 8
  %471 = getelementptr inbounds i32, i32* %470, i64 7
  %472 = load i32, i32* %471, align 4
  %473 = sub nsw i32 %469, %472
  store i32 %473, i32* %26, align 4
  %474 = load i32, i32* %25, align 4
  %475 = load i32, i32* %27, align 4
  %476 = add nsw i32 %474, %475
  store i32 %476, i32* %18, align 4
  %477 = load i32, i32* %25, align 4
  %478 = load i32, i32* %27, align 4
  %479 = sub nsw i32 %477, %478
  %480 = sext i32 %479 to i64
  %481 = mul nsw i64 %480, 362
  %482 = ashr i64 %481, 8
  %483 = trunc i64 %482 to i32
  store i32 %483, i32* %20, align 4
  %484 = load i32, i32* %24, align 4
  %485 = load i32, i32* %26, align 4
  %486 = add nsw i32 %484, %485
  %487 = sext i32 %486 to i64
  %488 = mul nsw i64 %487, 473
  %489 = ashr i64 %488, 8
  %490 = trunc i64 %489 to i32
  store i32 %490, i32* %23, align 4
  %491 = load i32, i32* %26, align 4
  %492 = sext i32 %491 to i64
  %493 = mul nsw i64 %492, 277
  %494 = ashr i64 %493, 8
  %495 = trunc i64 %494 to i32
  %496 = load i32, i32* %23, align 4
  %497 = sub nsw i32 %495, %496
  store i32 %497, i32* %19, align 4
  %498 = load i32, i32* %24, align 4
  %499 = sext i32 %498 to i64
  %500 = mul nsw i64 %499, -669
  %501 = ashr i64 %500, 8
  %502 = trunc i64 %501 to i32
  %503 = load i32, i32* %23, align 4
  %504 = add nsw i32 %502, %503
  store i32 %504, i32* %21, align 4
  %505 = load i32, i32* %21, align 4
  %506 = load i32, i32* %18, align 4
  %507 = sub nsw i32 %505, %506
  store i32 %507, i32* %17, align 4
  %508 = load i32, i32* %20, align 4
  %509 = load i32, i32* %17, align 4
  %510 = sub nsw i32 %508, %509
  store i32 %510, i32* %16, align 4
  %511 = load i32, i32* %19, align 4
  %512 = load i32, i32* %16, align 4
  %513 = add nsw i32 %511, %512
  store i32 %513, i32* %15, align 4
  %514 = load i8*, i8** %32, align 8
  %515 = load i32, i32* %11, align 4
  %516 = load i32, i32* %18, align 4
  %517 = add nsw i32 %515, %516
  %518 = ashr i32 %517, 5
  %519 = and i32 %518, 1023
  %520 = sext i32 %519 to i64
  %521 = getelementptr inbounds i8, i8* %514, i64 %520
  %522 = load i8, i8* %521, align 1
  %523 = load i8*, i8** %31, align 8
  %524 = getelementptr inbounds i8, i8* %523, i64 0
  store i8 %522, i8* %524, align 1
  %525 = load i8*, i8** %32, align 8
  %526 = load i32, i32* %11, align 4
  %527 = load i32, i32* %18, align 4
  %528 = sub nsw i32 %526, %527
  %529 = ashr i32 %528, 5
  %530 = and i32 %529, 1023
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds i8, i8* %525, i64 %531
  %533 = load i8, i8* %532, align 1
  %534 = load i8*, i8** %31, align 8
  %535 = getelementptr inbounds i8, i8* %534, i64 7
  store i8 %533, i8* %535, align 1
  %536 = load i8*, i8** %32, align 8
  %537 = load i32, i32* %12, align 4
  %538 = load i32, i32* %17, align 4
  %539 = add nsw i32 %537, %538
  %540 = ashr i32 %539, 5
  %541 = and i32 %540, 1023
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds i8, i8* %536, i64 %542
  %544 = load i8, i8* %543, align 1
  %545 = load i8*, i8** %31, align 8
  %546 = getelementptr inbounds i8, i8* %545, i64 1
  store i8 %544, i8* %546, align 1
  %547 = load i8*, i8** %32, align 8
  %548 = load i32, i32* %12, align 4
  %549 = load i32, i32* %17, align 4
  %550 = sub nsw i32 %548, %549
  %551 = ashr i32 %550, 5
  %552 = and i32 %551, 1023
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds i8, i8* %547, i64 %553
  %555 = load i8, i8* %554, align 1
  %556 = load i8*, i8** %31, align 8
  %557 = getelementptr inbounds i8, i8* %556, i64 6
  store i8 %555, i8* %557, align 1
  %558 = load i8*, i8** %32, align 8
  %559 = load i32, i32* %13, align 4
  %560 = load i32, i32* %16, align 4
  %561 = add nsw i32 %559, %560
  %562 = ashr i32 %561, 5
  %563 = and i32 %562, 1023
  %564 = sext i32 %563 to i64
  %565 = getelementptr inbounds i8, i8* %558, i64 %564
  %566 = load i8, i8* %565, align 1
  %567 = load i8*, i8** %31, align 8
  %568 = getelementptr inbounds i8, i8* %567, i64 2
  store i8 %566, i8* %568, align 1
  %569 = load i8*, i8** %32, align 8
  %570 = load i32, i32* %13, align 4
  %571 = load i32, i32* %16, align 4
  %572 = sub nsw i32 %570, %571
  %573 = ashr i32 %572, 5
  %574 = and i32 %573, 1023
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds i8, i8* %569, i64 %575
  %577 = load i8, i8* %576, align 1
  %578 = load i8*, i8** %31, align 8
  %579 = getelementptr inbounds i8, i8* %578, i64 5
  store i8 %577, i8* %579, align 1
  %580 = load i8*, i8** %32, align 8
  %581 = load i32, i32* %14, align 4
  %582 = load i32, i32* %15, align 4
  %583 = add nsw i32 %581, %582
  %584 = ashr i32 %583, 5
  %585 = and i32 %584, 1023
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds i8, i8* %580, i64 %586
  %588 = load i8, i8* %587, align 1
  %589 = load i8*, i8** %31, align 8
  %590 = getelementptr inbounds i8, i8* %589, i64 4
  store i8 %588, i8* %590, align 1
  %591 = load i8*, i8** %32, align 8
  %592 = load i32, i32* %14, align 4
  %593 = load i32, i32* %15, align 4
  %594 = sub nsw i32 %592, %593
  %595 = ashr i32 %594, 5
  %596 = and i32 %595, 1023
  %597 = sext i32 %596 to i64
  %598 = getelementptr inbounds i8, i8* %591, i64 %597
  %599 = load i8, i8* %598, align 1
  %600 = load i8*, i8** %31, align 8
  %601 = getelementptr inbounds i8, i8* %600, i64 3
  store i8 %599, i8* %601, align 1
  %602 = load i32*, i32** %30, align 8
  %603 = getelementptr inbounds i32, i32* %602, i64 8
  store i32* %603, i32** %30, align 8
  br label %604

604:                                              ; preds = %399, %363
  %605 = load i32, i32* %33, align 4
  %606 = add nsw i32 %605, 1
  store i32 %606, i32* %33, align 4
  br label %323

607:                                              ; preds = %323
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_idct_islow(%struct.jpeg_decompress_struct.809* %0, %struct.jpeg_component_info* %1, i16* %2, i8** %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_decompress_struct.809*, align 8
  %7 = alloca %struct.jpeg_component_info*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i16*, align 8
  %25 = alloca i32*, align 8
  %26 = alloca i32*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i32, align 4
  %30 = alloca [64 x i32], align 16
  %31 = alloca i32, align 4
  %32 = alloca i8, align 1
  store %struct.jpeg_decompress_struct.809* %0, %struct.jpeg_decompress_struct.809** %6, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %7, align 8
  store i16* %2, i16** %8, align 8
  store i8** %3, i8*** %9, align 8
  store i32 %4, i32* %10, align 4
  %33 = load %struct.jpeg_decompress_struct.809*, %struct.jpeg_decompress_struct.809** %6, align 8
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct.809, %struct.jpeg_decompress_struct.809* %33, i32 0, i32 61
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 128
  store i8* %36, i8** %28, align 8
  %37 = load i16*, i16** %8, align 8
  store i16* %37, i16** %24, align 8
  %38 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %38, i32 0, i32 20
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast i8* %40 to i32*
  store i32* %41, i32** %25, align 8
  %42 = getelementptr inbounds [64 x i32], [64 x i32]* %30, i64 0, i64 0
  store i32* %42, i32** %26, align 8
  store i32 8, i32* %29, align 4
  br label %43

43:                                               ; preds = %355, %5
  %44 = load i32, i32* %29, align 4
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %358

46:                                               ; preds = %43
  %47 = load i16*, i16** %24, align 8
  %48 = getelementptr inbounds i16, i16* %47, i64 8
  %49 = load i16, i16* %48, align 2
  %50 = sext i16 %49 to i32
  %51 = load i16*, i16** %24, align 8
  %52 = getelementptr inbounds i16, i16* %51, i64 16
  %53 = load i16, i16* %52, align 2
  %54 = sext i16 %53 to i32
  %55 = or i32 %50, %54
  %56 = load i16*, i16** %24, align 8
  %57 = getelementptr inbounds i16, i16* %56, i64 24
  %58 = load i16, i16* %57, align 2
  %59 = sext i16 %58 to i32
  %60 = or i32 %55, %59
  %61 = load i16*, i16** %24, align 8
  %62 = getelementptr inbounds i16, i16* %61, i64 32
  %63 = load i16, i16* %62, align 2
  %64 = sext i16 %63 to i32
  %65 = or i32 %60, %64
  %66 = load i16*, i16** %24, align 8
  %67 = getelementptr inbounds i16, i16* %66, i64 40
  %68 = load i16, i16* %67, align 2
  %69 = sext i16 %68 to i32
  %70 = or i32 %65, %69
  %71 = load i16*, i16** %24, align 8
  %72 = getelementptr inbounds i16, i16* %71, i64 48
  %73 = load i16, i16* %72, align 2
  %74 = sext i16 %73 to i32
  %75 = or i32 %70, %74
  %76 = load i16*, i16** %24, align 8
  %77 = getelementptr inbounds i16, i16* %76, i64 56
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i32
  %80 = or i32 %75, %79
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %122

82:                                               ; preds = %46
  %83 = load i16*, i16** %24, align 8
  %84 = getelementptr inbounds i16, i16* %83, i64 0
  %85 = load i16, i16* %84, align 2
  %86 = sext i16 %85 to i32
  %87 = load i32*, i32** %25, align 8
  %88 = getelementptr inbounds i32, i32* %87, i64 0
  %89 = load i32, i32* %88, align 4
  %90 = mul nsw i32 %86, %89
  %91 = shl i32 %90, 2
  store i32 %91, i32* %31, align 4
  %92 = load i32, i32* %31, align 4
  %93 = load i32*, i32** %26, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 0
  store i32 %92, i32* %94, align 4
  %95 = load i32, i32* %31, align 4
  %96 = load i32*, i32** %26, align 8
  %97 = getelementptr inbounds i32, i32* %96, i64 8
  store i32 %95, i32* %97, align 4
  %98 = load i32, i32* %31, align 4
  %99 = load i32*, i32** %26, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 16
  store i32 %98, i32* %100, align 4
  %101 = load i32, i32* %31, align 4
  %102 = load i32*, i32** %26, align 8
  %103 = getelementptr inbounds i32, i32* %102, i64 24
  store i32 %101, i32* %103, align 4
  %104 = load i32, i32* %31, align 4
  %105 = load i32*, i32** %26, align 8
  %106 = getelementptr inbounds i32, i32* %105, i64 32
  store i32 %104, i32* %106, align 4
  %107 = load i32, i32* %31, align 4
  %108 = load i32*, i32** %26, align 8
  %109 = getelementptr inbounds i32, i32* %108, i64 40
  store i32 %107, i32* %109, align 4
  %110 = load i32, i32* %31, align 4
  %111 = load i32*, i32** %26, align 8
  %112 = getelementptr inbounds i32, i32* %111, i64 48
  store i32 %110, i32* %112, align 4
  %113 = load i32, i32* %31, align 4
  %114 = load i32*, i32** %26, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 56
  store i32 %113, i32* %115, align 4
  %116 = load i16*, i16** %24, align 8
  %117 = getelementptr inbounds i16, i16* %116, i32 1
  store i16* %117, i16** %24, align 8
  %118 = load i32*, i32** %25, align 8
  %119 = getelementptr inbounds i32, i32* %118, i32 1
  store i32* %119, i32** %25, align 8
  %120 = load i32*, i32** %26, align 8
  %121 = getelementptr inbounds i32, i32* %120, i32 1
  store i32* %121, i32** %26, align 8
  br label %355

122:                                              ; preds = %46
  %123 = load i16*, i16** %24, align 8
  %124 = getelementptr inbounds i16, i16* %123, i64 16
  %125 = load i16, i16* %124, align 2
  %126 = sext i16 %125 to i32
  %127 = load i32*, i32** %25, align 8
  %128 = getelementptr inbounds i32, i32* %127, i64 16
  %129 = load i32, i32* %128, align 4
  %130 = mul nsw i32 %126, %129
  %131 = sext i32 %130 to i64
  store i64 %131, i64* %20, align 8
  %132 = load i16*, i16** %24, align 8
  %133 = getelementptr inbounds i16, i16* %132, i64 48
  %134 = load i16, i16* %133, align 2
  %135 = sext i16 %134 to i32
  %136 = load i32*, i32** %25, align 8
  %137 = getelementptr inbounds i32, i32* %136, i64 48
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %135, %138
  %140 = sext i32 %139 to i64
  store i64 %140, i64* %21, align 8
  %141 = load i64, i64* %20, align 8
  %142 = load i64, i64* %21, align 8
  %143 = add nsw i64 %141, %142
  %144 = mul nsw i64 %143, 4433
  store i64 %144, i64* %19, align 8
  %145 = load i64, i64* %19, align 8
  %146 = load i64, i64* %21, align 8
  %147 = mul nsw i64 %146, -15137
  %148 = add nsw i64 %145, %147
  store i64 %148, i64* %13, align 8
  %149 = load i64, i64* %19, align 8
  %150 = load i64, i64* %20, align 8
  %151 = mul nsw i64 %150, 6270
  %152 = add nsw i64 %149, %151
  store i64 %152, i64* %14, align 8
  %153 = load i16*, i16** %24, align 8
  %154 = getelementptr inbounds i16, i16* %153, i64 0
  %155 = load i16, i16* %154, align 2
  %156 = sext i16 %155 to i32
  %157 = load i32*, i32** %25, align 8
  %158 = getelementptr inbounds i32, i32* %157, i64 0
  %159 = load i32, i32* %158, align 4
  %160 = mul nsw i32 %156, %159
  %161 = sext i32 %160 to i64
  store i64 %161, i64* %20, align 8
  %162 = load i16*, i16** %24, align 8
  %163 = getelementptr inbounds i16, i16* %162, i64 32
  %164 = load i16, i16* %163, align 2
  %165 = sext i16 %164 to i32
  %166 = load i32*, i32** %25, align 8
  %167 = getelementptr inbounds i32, i32* %166, i64 32
  %168 = load i32, i32* %167, align 4
  %169 = mul nsw i32 %165, %168
  %170 = sext i32 %169 to i64
  store i64 %170, i64* %21, align 8
  %171 = load i64, i64* %20, align 8
  %172 = load i64, i64* %21, align 8
  %173 = add nsw i64 %171, %172
  %174 = shl i64 %173, 13
  store i64 %174, i64* %11, align 8
  %175 = load i64, i64* %20, align 8
  %176 = load i64, i64* %21, align 8
  %177 = sub nsw i64 %175, %176
  %178 = shl i64 %177, 13
  store i64 %178, i64* %12, align 8
  %179 = load i64, i64* %11, align 8
  %180 = load i64, i64* %14, align 8
  %181 = add nsw i64 %179, %180
  store i64 %181, i64* %15, align 8
  %182 = load i64, i64* %11, align 8
  %183 = load i64, i64* %14, align 8
  %184 = sub nsw i64 %182, %183
  store i64 %184, i64* %18, align 8
  %185 = load i64, i64* %12, align 8
  %186 = load i64, i64* %13, align 8
  %187 = add nsw i64 %185, %186
  store i64 %187, i64* %16, align 8
  %188 = load i64, i64* %12, align 8
  %189 = load i64, i64* %13, align 8
  %190 = sub nsw i64 %188, %189
  store i64 %190, i64* %17, align 8
  %191 = load i16*, i16** %24, align 8
  %192 = getelementptr inbounds i16, i16* %191, i64 56
  %193 = load i16, i16* %192, align 2
  %194 = sext i16 %193 to i32
  %195 = load i32*, i32** %25, align 8
  %196 = getelementptr inbounds i32, i32* %195, i64 56
  %197 = load i32, i32* %196, align 4
  %198 = mul nsw i32 %194, %197
  %199 = sext i32 %198 to i64
  store i64 %199, i64* %11, align 8
  %200 = load i16*, i16** %24, align 8
  %201 = getelementptr inbounds i16, i16* %200, i64 40
  %202 = load i16, i16* %201, align 2
  %203 = sext i16 %202 to i32
  %204 = load i32*, i32** %25, align 8
  %205 = getelementptr inbounds i32, i32* %204, i64 40
  %206 = load i32, i32* %205, align 4
  %207 = mul nsw i32 %203, %206
  %208 = sext i32 %207 to i64
  store i64 %208, i64* %12, align 8
  %209 = load i16*, i16** %24, align 8
  %210 = getelementptr inbounds i16, i16* %209, i64 24
  %211 = load i16, i16* %210, align 2
  %212 = sext i16 %211 to i32
  %213 = load i32*, i32** %25, align 8
  %214 = getelementptr inbounds i32, i32* %213, i64 24
  %215 = load i32, i32* %214, align 4
  %216 = mul nsw i32 %212, %215
  %217 = sext i32 %216 to i64
  store i64 %217, i64* %13, align 8
  %218 = load i16*, i16** %24, align 8
  %219 = getelementptr inbounds i16, i16* %218, i64 8
  %220 = load i16, i16* %219, align 2
  %221 = sext i16 %220 to i32
  %222 = load i32*, i32** %25, align 8
  %223 = getelementptr inbounds i32, i32* %222, i64 8
  %224 = load i32, i32* %223, align 4
  %225 = mul nsw i32 %221, %224
  %226 = sext i32 %225 to i64
  store i64 %226, i64* %14, align 8
  %227 = load i64, i64* %11, align 8
  %228 = load i64, i64* %14, align 8
  %229 = add nsw i64 %227, %228
  store i64 %229, i64* %19, align 8
  %230 = load i64, i64* %12, align 8
  %231 = load i64, i64* %13, align 8
  %232 = add nsw i64 %230, %231
  store i64 %232, i64* %20, align 8
  %233 = load i64, i64* %11, align 8
  %234 = load i64, i64* %13, align 8
  %235 = add nsw i64 %233, %234
  store i64 %235, i64* %21, align 8
  %236 = load i64, i64* %12, align 8
  %237 = load i64, i64* %14, align 8
  %238 = add nsw i64 %236, %237
  store i64 %238, i64* %22, align 8
  %239 = load i64, i64* %21, align 8
  %240 = load i64, i64* %22, align 8
  %241 = add nsw i64 %239, %240
  %242 = mul nsw i64 %241, 9633
  store i64 %242, i64* %23, align 8
  %243 = load i64, i64* %11, align 8
  %244 = mul nsw i64 %243, 2446
  store i64 %244, i64* %11, align 8
  %245 = load i64, i64* %12, align 8
  %246 = mul nsw i64 %245, 16819
  store i64 %246, i64* %12, align 8
  %247 = load i64, i64* %13, align 8
  %248 = mul nsw i64 %247, 25172
  store i64 %248, i64* %13, align 8
  %249 = load i64, i64* %14, align 8
  %250 = mul nsw i64 %249, 12299
  store i64 %250, i64* %14, align 8
  %251 = load i64, i64* %19, align 8
  %252 = mul nsw i64 %251, -7373
  store i64 %252, i64* %19, align 8
  %253 = load i64, i64* %20, align 8
  %254 = mul nsw i64 %253, -20995
  store i64 %254, i64* %20, align 8
  %255 = load i64, i64* %21, align 8
  %256 = mul nsw i64 %255, -16069
  store i64 %256, i64* %21, align 8
  %257 = load i64, i64* %22, align 8
  %258 = mul nsw i64 %257, -3196
  store i64 %258, i64* %22, align 8
  %259 = load i64, i64* %23, align 8
  %260 = load i64, i64* %21, align 8
  %261 = add nsw i64 %260, %259
  store i64 %261, i64* %21, align 8
  %262 = load i64, i64* %23, align 8
  %263 = load i64, i64* %22, align 8
  %264 = add nsw i64 %263, %262
  store i64 %264, i64* %22, align 8
  %265 = load i64, i64* %19, align 8
  %266 = load i64, i64* %21, align 8
  %267 = add nsw i64 %265, %266
  %268 = load i64, i64* %11, align 8
  %269 = add nsw i64 %268, %267
  store i64 %269, i64* %11, align 8
  %270 = load i64, i64* %20, align 8
  %271 = load i64, i64* %22, align 8
  %272 = add nsw i64 %270, %271
  %273 = load i64, i64* %12, align 8
  %274 = add nsw i64 %273, %272
  store i64 %274, i64* %12, align 8
  %275 = load i64, i64* %20, align 8
  %276 = load i64, i64* %21, align 8
  %277 = add nsw i64 %275, %276
  %278 = load i64, i64* %13, align 8
  %279 = add nsw i64 %278, %277
  store i64 %279, i64* %13, align 8
  %280 = load i64, i64* %19, align 8
  %281 = load i64, i64* %22, align 8
  %282 = add nsw i64 %280, %281
  %283 = load i64, i64* %14, align 8
  %284 = add nsw i64 %283, %282
  store i64 %284, i64* %14, align 8
  %285 = load i64, i64* %15, align 8
  %286 = load i64, i64* %14, align 8
  %287 = add nsw i64 %285, %286
  %288 = add nsw i64 %287, 1024
  %289 = ashr i64 %288, 11
  %290 = trunc i64 %289 to i32
  %291 = load i32*, i32** %26, align 8
  %292 = getelementptr inbounds i32, i32* %291, i64 0
  store i32 %290, i32* %292, align 4
  %293 = load i64, i64* %15, align 8
  %294 = load i64, i64* %14, align 8
  %295 = sub nsw i64 %293, %294
  %296 = add nsw i64 %295, 1024
  %297 = ashr i64 %296, 11
  %298 = trunc i64 %297 to i32
  %299 = load i32*, i32** %26, align 8
  %300 = getelementptr inbounds i32, i32* %299, i64 56
  store i32 %298, i32* %300, align 4
  %301 = load i64, i64* %16, align 8
  %302 = load i64, i64* %13, align 8
  %303 = add nsw i64 %301, %302
  %304 = add nsw i64 %303, 1024
  %305 = ashr i64 %304, 11
  %306 = trunc i64 %305 to i32
  %307 = load i32*, i32** %26, align 8
  %308 = getelementptr inbounds i32, i32* %307, i64 8
  store i32 %306, i32* %308, align 4
  %309 = load i64, i64* %16, align 8
  %310 = load i64, i64* %13, align 8
  %311 = sub nsw i64 %309, %310
  %312 = add nsw i64 %311, 1024
  %313 = ashr i64 %312, 11
  %314 = trunc i64 %313 to i32
  %315 = load i32*, i32** %26, align 8
  %316 = getelementptr inbounds i32, i32* %315, i64 48
  store i32 %314, i32* %316, align 4
  %317 = load i64, i64* %17, align 8
  %318 = load i64, i64* %12, align 8
  %319 = add nsw i64 %317, %318
  %320 = add nsw i64 %319, 1024
  %321 = ashr i64 %320, 11
  %322 = trunc i64 %321 to i32
  %323 = load i32*, i32** %26, align 8
  %324 = getelementptr inbounds i32, i32* %323, i64 16
  store i32 %322, i32* %324, align 4
  %325 = load i64, i64* %17, align 8
  %326 = load i64, i64* %12, align 8
  %327 = sub nsw i64 %325, %326
  %328 = add nsw i64 %327, 1024
  %329 = ashr i64 %328, 11
  %330 = trunc i64 %329 to i32
  %331 = load i32*, i32** %26, align 8
  %332 = getelementptr inbounds i32, i32* %331, i64 40
  store i32 %330, i32* %332, align 4
  %333 = load i64, i64* %18, align 8
  %334 = load i64, i64* %11, align 8
  %335 = add nsw i64 %333, %334
  %336 = add nsw i64 %335, 1024
  %337 = ashr i64 %336, 11
  %338 = trunc i64 %337 to i32
  %339 = load i32*, i32** %26, align 8
  %340 = getelementptr inbounds i32, i32* %339, i64 24
  store i32 %338, i32* %340, align 4
  %341 = load i64, i64* %18, align 8
  %342 = load i64, i64* %11, align 8
  %343 = sub nsw i64 %341, %342
  %344 = add nsw i64 %343, 1024
  %345 = ashr i64 %344, 11
  %346 = trunc i64 %345 to i32
  %347 = load i32*, i32** %26, align 8
  %348 = getelementptr inbounds i32, i32* %347, i64 32
  store i32 %346, i32* %348, align 4
  %349 = load i16*, i16** %24, align 8
  %350 = getelementptr inbounds i16, i16* %349, i32 1
  store i16* %350, i16** %24, align 8
  %351 = load i32*, i32** %25, align 8
  %352 = getelementptr inbounds i32, i32* %351, i32 1
  store i32* %352, i32** %25, align 8
  %353 = load i32*, i32** %26, align 8
  %354 = getelementptr inbounds i32, i32* %353, i32 1
  store i32* %354, i32** %26, align 8
  br label %355

355:                                              ; preds = %122, %82
  %356 = load i32, i32* %29, align 4
  %357 = add nsw i32 %356, -1
  store i32 %357, i32* %29, align 4
  br label %43

358:                                              ; preds = %43
  %359 = getelementptr inbounds [64 x i32], [64 x i32]* %30, i64 0, i64 0
  store i32* %359, i32** %26, align 8
  store i32 0, i32* %29, align 4
  br label %360

360:                                              ; preds = %672, %358
  %361 = load i32, i32* %29, align 4
  %362 = icmp slt i32 %361, 8
  br i1 %362, label %363, label %675

363:                                              ; preds = %360
  %364 = load i8**, i8*** %9, align 8
  %365 = load i32, i32* %29, align 4
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds i8*, i8** %364, i64 %366
  %368 = load i8*, i8** %367, align 8
  %369 = load i32, i32* %10, align 4
  %370 = zext i32 %369 to i64
  %371 = getelementptr inbounds i8, i8* %368, i64 %370
  store i8* %371, i8** %27, align 8
  %372 = load i32*, i32** %26, align 8
  %373 = getelementptr inbounds i32, i32* %372, i64 1
  %374 = load i32, i32* %373, align 4
  %375 = load i32*, i32** %26, align 8
  %376 = getelementptr inbounds i32, i32* %375, i64 2
  %377 = load i32, i32* %376, align 4
  %378 = or i32 %374, %377
  %379 = load i32*, i32** %26, align 8
  %380 = getelementptr inbounds i32, i32* %379, i64 3
  %381 = load i32, i32* %380, align 4
  %382 = or i32 %378, %381
  %383 = load i32*, i32** %26, align 8
  %384 = getelementptr inbounds i32, i32* %383, i64 4
  %385 = load i32, i32* %384, align 4
  %386 = or i32 %382, %385
  %387 = load i32*, i32** %26, align 8
  %388 = getelementptr inbounds i32, i32* %387, i64 5
  %389 = load i32, i32* %388, align 4
  %390 = or i32 %386, %389
  %391 = load i32*, i32** %26, align 8
  %392 = getelementptr inbounds i32, i32* %391, i64 6
  %393 = load i32, i32* %392, align 4
  %394 = or i32 %390, %393
  %395 = load i32*, i32** %26, align 8
  %396 = getelementptr inbounds i32, i32* %395, i64 7
  %397 = load i32, i32* %396, align 4
  %398 = or i32 %394, %397
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %400, label %439

400:                                              ; preds = %363
  %401 = load i8*, i8** %28, align 8
  %402 = load i32*, i32** %26, align 8
  %403 = getelementptr inbounds i32, i32* %402, i64 0
  %404 = load i32, i32* %403, align 4
  %405 = sext i32 %404 to i64
  %406 = add nsw i64 %405, 16
  %407 = ashr i64 %406, 5
  %408 = trunc i64 %407 to i32
  %409 = and i32 %408, 1023
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds i8, i8* %401, i64 %410
  %412 = load i8, i8* %411, align 1
  store i8 %412, i8* %32, align 1
  %413 = load i8, i8* %32, align 1
  %414 = load i8*, i8** %27, align 8
  %415 = getelementptr inbounds i8, i8* %414, i64 0
  store i8 %413, i8* %415, align 1
  %416 = load i8, i8* %32, align 1
  %417 = load i8*, i8** %27, align 8
  %418 = getelementptr inbounds i8, i8* %417, i64 1
  store i8 %416, i8* %418, align 1
  %419 = load i8, i8* %32, align 1
  %420 = load i8*, i8** %27, align 8
  %421 = getelementptr inbounds i8, i8* %420, i64 2
  store i8 %419, i8* %421, align 1
  %422 = load i8, i8* %32, align 1
  %423 = load i8*, i8** %27, align 8
  %424 = getelementptr inbounds i8, i8* %423, i64 3
  store i8 %422, i8* %424, align 1
  %425 = load i8, i8* %32, align 1
  %426 = load i8*, i8** %27, align 8
  %427 = getelementptr inbounds i8, i8* %426, i64 4
  store i8 %425, i8* %427, align 1
  %428 = load i8, i8* %32, align 1
  %429 = load i8*, i8** %27, align 8
  %430 = getelementptr inbounds i8, i8* %429, i64 5
  store i8 %428, i8* %430, align 1
  %431 = load i8, i8* %32, align 1
  %432 = load i8*, i8** %27, align 8
  %433 = getelementptr inbounds i8, i8* %432, i64 6
  store i8 %431, i8* %433, align 1
  %434 = load i8, i8* %32, align 1
  %435 = load i8*, i8** %27, align 8
  %436 = getelementptr inbounds i8, i8* %435, i64 7
  store i8 %434, i8* %436, align 1
  %437 = load i32*, i32** %26, align 8
  %438 = getelementptr inbounds i32, i32* %437, i64 8
  store i32* %438, i32** %26, align 8
  br label %672

439:                                              ; preds = %363
  %440 = load i32*, i32** %26, align 8
  %441 = getelementptr inbounds i32, i32* %440, i64 2
  %442 = load i32, i32* %441, align 4
  %443 = sext i32 %442 to i64
  store i64 %443, i64* %20, align 8
  %444 = load i32*, i32** %26, align 8
  %445 = getelementptr inbounds i32, i32* %444, i64 6
  %446 = load i32, i32* %445, align 4
  %447 = sext i32 %446 to i64
  store i64 %447, i64* %21, align 8
  %448 = load i64, i64* %20, align 8
  %449 = load i64, i64* %21, align 8
  %450 = add nsw i64 %448, %449
  %451 = mul nsw i64 %450, 4433
  store i64 %451, i64* %19, align 8
  %452 = load i64, i64* %19, align 8
  %453 = load i64, i64* %21, align 8
  %454 = mul nsw i64 %453, -15137
  %455 = add nsw i64 %452, %454
  store i64 %455, i64* %13, align 8
  %456 = load i64, i64* %19, align 8
  %457 = load i64, i64* %20, align 8
  %458 = mul nsw i64 %457, 6270
  %459 = add nsw i64 %456, %458
  store i64 %459, i64* %14, align 8
  %460 = load i32*, i32** %26, align 8
  %461 = getelementptr inbounds i32, i32* %460, i64 0
  %462 = load i32, i32* %461, align 4
  %463 = sext i32 %462 to i64
  %464 = load i32*, i32** %26, align 8
  %465 = getelementptr inbounds i32, i32* %464, i64 4
  %466 = load i32, i32* %465, align 4
  %467 = sext i32 %466 to i64
  %468 = add nsw i64 %463, %467
  %469 = shl i64 %468, 13
  store i64 %469, i64* %11, align 8
  %470 = load i32*, i32** %26, align 8
  %471 = getelementptr inbounds i32, i32* %470, i64 0
  %472 = load i32, i32* %471, align 4
  %473 = sext i32 %472 to i64
  %474 = load i32*, i32** %26, align 8
  %475 = getelementptr inbounds i32, i32* %474, i64 4
  %476 = load i32, i32* %475, align 4
  %477 = sext i32 %476 to i64
  %478 = sub nsw i64 %473, %477
  %479 = shl i64 %478, 13
  store i64 %479, i64* %12, align 8
  %480 = load i64, i64* %11, align 8
  %481 = load i64, i64* %14, align 8
  %482 = add nsw i64 %480, %481
  store i64 %482, i64* %15, align 8
  %483 = load i64, i64* %11, align 8
  %484 = load i64, i64* %14, align 8
  %485 = sub nsw i64 %483, %484
  store i64 %485, i64* %18, align 8
  %486 = load i64, i64* %12, align 8
  %487 = load i64, i64* %13, align 8
  %488 = add nsw i64 %486, %487
  store i64 %488, i64* %16, align 8
  %489 = load i64, i64* %12, align 8
  %490 = load i64, i64* %13, align 8
  %491 = sub nsw i64 %489, %490
  store i64 %491, i64* %17, align 8
  %492 = load i32*, i32** %26, align 8
  %493 = getelementptr inbounds i32, i32* %492, i64 7
  %494 = load i32, i32* %493, align 4
  %495 = sext i32 %494 to i64
  store i64 %495, i64* %11, align 8
  %496 = load i32*, i32** %26, align 8
  %497 = getelementptr inbounds i32, i32* %496, i64 5
  %498 = load i32, i32* %497, align 4
  %499 = sext i32 %498 to i64
  store i64 %499, i64* %12, align 8
  %500 = load i32*, i32** %26, align 8
  %501 = getelementptr inbounds i32, i32* %500, i64 3
  %502 = load i32, i32* %501, align 4
  %503 = sext i32 %502 to i64
  store i64 %503, i64* %13, align 8
  %504 = load i32*, i32** %26, align 8
  %505 = getelementptr inbounds i32, i32* %504, i64 1
  %506 = load i32, i32* %505, align 4
  %507 = sext i32 %506 to i64
  store i64 %507, i64* %14, align 8
  %508 = load i64, i64* %11, align 8
  %509 = load i64, i64* %14, align 8
  %510 = add nsw i64 %508, %509
  store i64 %510, i64* %19, align 8
  %511 = load i64, i64* %12, align 8
  %512 = load i64, i64* %13, align 8
  %513 = add nsw i64 %511, %512
  store i64 %513, i64* %20, align 8
  %514 = load i64, i64* %11, align 8
  %515 = load i64, i64* %13, align 8
  %516 = add nsw i64 %514, %515
  store i64 %516, i64* %21, align 8
  %517 = load i64, i64* %12, align 8
  %518 = load i64, i64* %14, align 8
  %519 = add nsw i64 %517, %518
  store i64 %519, i64* %22, align 8
  %520 = load i64, i64* %21, align 8
  %521 = load i64, i64* %22, align 8
  %522 = add nsw i64 %520, %521
  %523 = mul nsw i64 %522, 9633
  store i64 %523, i64* %23, align 8
  %524 = load i64, i64* %11, align 8
  %525 = mul nsw i64 %524, 2446
  store i64 %525, i64* %11, align 8
  %526 = load i64, i64* %12, align 8
  %527 = mul nsw i64 %526, 16819
  store i64 %527, i64* %12, align 8
  %528 = load i64, i64* %13, align 8
  %529 = mul nsw i64 %528, 25172
  store i64 %529, i64* %13, align 8
  %530 = load i64, i64* %14, align 8
  %531 = mul nsw i64 %530, 12299
  store i64 %531, i64* %14, align 8
  %532 = load i64, i64* %19, align 8
  %533 = mul nsw i64 %532, -7373
  store i64 %533, i64* %19, align 8
  %534 = load i64, i64* %20, align 8
  %535 = mul nsw i64 %534, -20995
  store i64 %535, i64* %20, align 8
  %536 = load i64, i64* %21, align 8
  %537 = mul nsw i64 %536, -16069
  store i64 %537, i64* %21, align 8
  %538 = load i64, i64* %22, align 8
  %539 = mul nsw i64 %538, -3196
  store i64 %539, i64* %22, align 8
  %540 = load i64, i64* %23, align 8
  %541 = load i64, i64* %21, align 8
  %542 = add nsw i64 %541, %540
  store i64 %542, i64* %21, align 8
  %543 = load i64, i64* %23, align 8
  %544 = load i64, i64* %22, align 8
  %545 = add nsw i64 %544, %543
  store i64 %545, i64* %22, align 8
  %546 = load i64, i64* %19, align 8
  %547 = load i64, i64* %21, align 8
  %548 = add nsw i64 %546, %547
  %549 = load i64, i64* %11, align 8
  %550 = add nsw i64 %549, %548
  store i64 %550, i64* %11, align 8
  %551 = load i64, i64* %20, align 8
  %552 = load i64, i64* %22, align 8
  %553 = add nsw i64 %551, %552
  %554 = load i64, i64* %12, align 8
  %555 = add nsw i64 %554, %553
  store i64 %555, i64* %12, align 8
  %556 = load i64, i64* %20, align 8
  %557 = load i64, i64* %21, align 8
  %558 = add nsw i64 %556, %557
  %559 = load i64, i64* %13, align 8
  %560 = add nsw i64 %559, %558
  store i64 %560, i64* %13, align 8
  %561 = load i64, i64* %19, align 8
  %562 = load i64, i64* %22, align 8
  %563 = add nsw i64 %561, %562
  %564 = load i64, i64* %14, align 8
  %565 = add nsw i64 %564, %563
  store i64 %565, i64* %14, align 8
  %566 = load i8*, i8** %28, align 8
  %567 = load i64, i64* %15, align 8
  %568 = load i64, i64* %14, align 8
  %569 = add nsw i64 %567, %568
  %570 = add nsw i64 %569, 131072
  %571 = ashr i64 %570, 18
  %572 = trunc i64 %571 to i32
  %573 = and i32 %572, 1023
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds i8, i8* %566, i64 %574
  %576 = load i8, i8* %575, align 1
  %577 = load i8*, i8** %27, align 8
  %578 = getelementptr inbounds i8, i8* %577, i64 0
  store i8 %576, i8* %578, align 1
  %579 = load i8*, i8** %28, align 8
  %580 = load i64, i64* %15, align 8
  %581 = load i64, i64* %14, align 8
  %582 = sub nsw i64 %580, %581
  %583 = add nsw i64 %582, 131072
  %584 = ashr i64 %583, 18
  %585 = trunc i64 %584 to i32
  %586 = and i32 %585, 1023
  %587 = sext i32 %586 to i64
  %588 = getelementptr inbounds i8, i8* %579, i64 %587
  %589 = load i8, i8* %588, align 1
  %590 = load i8*, i8** %27, align 8
  %591 = getelementptr inbounds i8, i8* %590, i64 7
  store i8 %589, i8* %591, align 1
  %592 = load i8*, i8** %28, align 8
  %593 = load i64, i64* %16, align 8
  %594 = load i64, i64* %13, align 8
  %595 = add nsw i64 %593, %594
  %596 = add nsw i64 %595, 131072
  %597 = ashr i64 %596, 18
  %598 = trunc i64 %597 to i32
  %599 = and i32 %598, 1023
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds i8, i8* %592, i64 %600
  %602 = load i8, i8* %601, align 1
  %603 = load i8*, i8** %27, align 8
  %604 = getelementptr inbounds i8, i8* %603, i64 1
  store i8 %602, i8* %604, align 1
  %605 = load i8*, i8** %28, align 8
  %606 = load i64, i64* %16, align 8
  %607 = load i64, i64* %13, align 8
  %608 = sub nsw i64 %606, %607
  %609 = add nsw i64 %608, 131072
  %610 = ashr i64 %609, 18
  %611 = trunc i64 %610 to i32
  %612 = and i32 %611, 1023
  %613 = sext i32 %612 to i64
  %614 = getelementptr inbounds i8, i8* %605, i64 %613
  %615 = load i8, i8* %614, align 1
  %616 = load i8*, i8** %27, align 8
  %617 = getelementptr inbounds i8, i8* %616, i64 6
  store i8 %615, i8* %617, align 1
  %618 = load i8*, i8** %28, align 8
  %619 = load i64, i64* %17, align 8
  %620 = load i64, i64* %12, align 8
  %621 = add nsw i64 %619, %620
  %622 = add nsw i64 %621, 131072
  %623 = ashr i64 %622, 18
  %624 = trunc i64 %623 to i32
  %625 = and i32 %624, 1023
  %626 = sext i32 %625 to i64
  %627 = getelementptr inbounds i8, i8* %618, i64 %626
  %628 = load i8, i8* %627, align 1
  %629 = load i8*, i8** %27, align 8
  %630 = getelementptr inbounds i8, i8* %629, i64 2
  store i8 %628, i8* %630, align 1
  %631 = load i8*, i8** %28, align 8
  %632 = load i64, i64* %17, align 8
  %633 = load i64, i64* %12, align 8
  %634 = sub nsw i64 %632, %633
  %635 = add nsw i64 %634, 131072
  %636 = ashr i64 %635, 18
  %637 = trunc i64 %636 to i32
  %638 = and i32 %637, 1023
  %639 = sext i32 %638 to i64
  %640 = getelementptr inbounds i8, i8* %631, i64 %639
  %641 = load i8, i8* %640, align 1
  %642 = load i8*, i8** %27, align 8
  %643 = getelementptr inbounds i8, i8* %642, i64 5
  store i8 %641, i8* %643, align 1
  %644 = load i8*, i8** %28, align 8
  %645 = load i64, i64* %18, align 8
  %646 = load i64, i64* %11, align 8
  %647 = add nsw i64 %645, %646
  %648 = add nsw i64 %647, 131072
  %649 = ashr i64 %648, 18
  %650 = trunc i64 %649 to i32
  %651 = and i32 %650, 1023
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds i8, i8* %644, i64 %652
  %654 = load i8, i8* %653, align 1
  %655 = load i8*, i8** %27, align 8
  %656 = getelementptr inbounds i8, i8* %655, i64 3
  store i8 %654, i8* %656, align 1
  %657 = load i8*, i8** %28, align 8
  %658 = load i64, i64* %18, align 8
  %659 = load i64, i64* %11, align 8
  %660 = sub nsw i64 %658, %659
  %661 = add nsw i64 %660, 131072
  %662 = ashr i64 %661, 18
  %663 = trunc i64 %662 to i32
  %664 = and i32 %663, 1023
  %665 = sext i32 %664 to i64
  %666 = getelementptr inbounds i8, i8* %657, i64 %665
  %667 = load i8, i8* %666, align 1
  %668 = load i8*, i8** %27, align 8
  %669 = getelementptr inbounds i8, i8* %668, i64 4
  store i8 %667, i8* %669, align 1
  %670 = load i32*, i32** %26, align 8
  %671 = getelementptr inbounds i32, i32* %670, i64 8
  store i32* %671, i32** %26, align 8
  br label %672

672:                                              ; preds = %439, %400
  %673 = load i32, i32* %29, align 4
  %674 = add nsw i32 %673, 1
  store i32 %674, i32* %29, align 4
  br label %360

675:                                              ; preds = %360
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_idct_4x4(%struct.jpeg_decompress_struct.832* %0, %struct.jpeg_component_info* %1, i16* %2, i8** %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_decompress_struct.832*, align 8
  %7 = alloca %struct.jpeg_component_info*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i16*, align 8
  %20 = alloca i32*, align 8
  %21 = alloca i32*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  %25 = alloca [32 x i32], align 16
  %26 = alloca i32, align 4
  %27 = alloca i8, align 1
  store %struct.jpeg_decompress_struct.832* %0, %struct.jpeg_decompress_struct.832** %6, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %7, align 8
  store i16* %2, i16** %8, align 8
  store i8** %3, i8*** %9, align 8
  store i32 %4, i32* %10, align 4
  %28 = load %struct.jpeg_decompress_struct.832*, %struct.jpeg_decompress_struct.832** %6, align 8
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct.832, %struct.jpeg_decompress_struct.832* %28, i32 0, i32 61
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 128
  store i8* %31, i8** %23, align 8
  %32 = load i16*, i16** %8, align 8
  store i16* %32, i16** %19, align 8
  %33 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %34 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i32 0, i32 20
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to i32*
  store i32* %36, i32** %20, align 8
  %37 = getelementptr inbounds [32 x i32], [32 x i32]* %25, i64 0, i64 0
  store i32* %37, i32** %21, align 8
  store i32 8, i32* %24, align 4
  br label %38

38:                                               ; preds = %229, %5
  %39 = load i32, i32* %24, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %238

41:                                               ; preds = %38
  %42 = load i32, i32* %24, align 4
  %43 = icmp eq i32 %42, 4
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  br label %229

45:                                               ; preds = %41
  %46 = load i16*, i16** %19, align 8
  %47 = getelementptr inbounds i16, i16* %46, i64 8
  %48 = load i16, i16* %47, align 2
  %49 = sext i16 %48 to i32
  %50 = load i16*, i16** %19, align 8
  %51 = getelementptr inbounds i16, i16* %50, i64 16
  %52 = load i16, i16* %51, align 2
  %53 = sext i16 %52 to i32
  %54 = or i32 %49, %53
  %55 = load i16*, i16** %19, align 8
  %56 = getelementptr inbounds i16, i16* %55, i64 24
  %57 = load i16, i16* %56, align 2
  %58 = sext i16 %57 to i32
  %59 = or i32 %54, %58
  %60 = load i16*, i16** %19, align 8
  %61 = getelementptr inbounds i16, i16* %60, i64 40
  %62 = load i16, i16* %61, align 2
  %63 = sext i16 %62 to i32
  %64 = or i32 %59, %63
  %65 = load i16*, i16** %19, align 8
  %66 = getelementptr inbounds i16, i16* %65, i64 48
  %67 = load i16, i16* %66, align 2
  %68 = sext i16 %67 to i32
  %69 = or i32 %64, %68
  %70 = load i16*, i16** %19, align 8
  %71 = getelementptr inbounds i16, i16* %70, i64 56
  %72 = load i16, i16* %71, align 2
  %73 = sext i16 %72 to i32
  %74 = or i32 %69, %73
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %98

76:                                               ; preds = %45
  %77 = load i16*, i16** %19, align 8
  %78 = getelementptr inbounds i16, i16* %77, i64 0
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i32
  %81 = load i32*, i32** %20, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 0
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %80, %83
  %85 = shl i32 %84, 2
  store i32 %85, i32* %26, align 4
  %86 = load i32, i32* %26, align 4
  %87 = load i32*, i32** %21, align 8
  %88 = getelementptr inbounds i32, i32* %87, i64 0
  store i32 %86, i32* %88, align 4
  %89 = load i32, i32* %26, align 4
  %90 = load i32*, i32** %21, align 8
  %91 = getelementptr inbounds i32, i32* %90, i64 8
  store i32 %89, i32* %91, align 4
  %92 = load i32, i32* %26, align 4
  %93 = load i32*, i32** %21, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 16
  store i32 %92, i32* %94, align 4
  %95 = load i32, i32* %26, align 4
  %96 = load i32*, i32** %21, align 8
  %97 = getelementptr inbounds i32, i32* %96, i64 24
  store i32 %95, i32* %97, align 4
  br label %229

98:                                               ; preds = %45
  %99 = load i16*, i16** %19, align 8
  %100 = getelementptr inbounds i16, i16* %99, i64 0
  %101 = load i16, i16* %100, align 2
  %102 = sext i16 %101 to i32
  %103 = load i32*, i32** %20, align 8
  %104 = getelementptr inbounds i32, i32* %103, i64 0
  %105 = load i32, i32* %104, align 4
  %106 = mul nsw i32 %102, %105
  %107 = sext i32 %106 to i64
  store i64 %107, i64* %11, align 8
  %108 = load i64, i64* %11, align 8
  %109 = shl i64 %108, 14
  store i64 %109, i64* %11, align 8
  %110 = load i16*, i16** %19, align 8
  %111 = getelementptr inbounds i16, i16* %110, i64 16
  %112 = load i16, i16* %111, align 2
  %113 = sext i16 %112 to i32
  %114 = load i32*, i32** %20, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 16
  %116 = load i32, i32* %115, align 4
  %117 = mul nsw i32 %113, %116
  %118 = sext i32 %117 to i64
  store i64 %118, i64* %16, align 8
  %119 = load i16*, i16** %19, align 8
  %120 = getelementptr inbounds i16, i16* %119, i64 48
  %121 = load i16, i16* %120, align 2
  %122 = sext i16 %121 to i32
  %123 = load i32*, i32** %20, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 48
  %125 = load i32, i32* %124, align 4
  %126 = mul nsw i32 %122, %125
  %127 = sext i32 %126 to i64
  store i64 %127, i64* %17, align 8
  %128 = load i64, i64* %16, align 8
  %129 = mul nsw i64 %128, 15137
  %130 = load i64, i64* %17, align 8
  %131 = mul nsw i64 %130, -6270
  %132 = add nsw i64 %129, %131
  store i64 %132, i64* %12, align 8
  %133 = load i64, i64* %11, align 8
  %134 = load i64, i64* %12, align 8
  %135 = add nsw i64 %133, %134
  store i64 %135, i64* %13, align 8
  %136 = load i64, i64* %11, align 8
  %137 = load i64, i64* %12, align 8
  %138 = sub nsw i64 %136, %137
  store i64 %138, i64* %14, align 8
  %139 = load i16*, i16** %19, align 8
  %140 = getelementptr inbounds i16, i16* %139, i64 56
  %141 = load i16, i16* %140, align 2
  %142 = sext i16 %141 to i32
  %143 = load i32*, i32** %20, align 8
  %144 = getelementptr inbounds i32, i32* %143, i64 56
  %145 = load i32, i32* %144, align 4
  %146 = mul nsw i32 %142, %145
  %147 = sext i32 %146 to i64
  store i64 %147, i64* %15, align 8
  %148 = load i16*, i16** %19, align 8
  %149 = getelementptr inbounds i16, i16* %148, i64 40
  %150 = load i16, i16* %149, align 2
  %151 = sext i16 %150 to i32
  %152 = load i32*, i32** %20, align 8
  %153 = getelementptr inbounds i32, i32* %152, i64 40
  %154 = load i32, i32* %153, align 4
  %155 = mul nsw i32 %151, %154
  %156 = sext i32 %155 to i64
  store i64 %156, i64* %16, align 8
  %157 = load i16*, i16** %19, align 8
  %158 = getelementptr inbounds i16, i16* %157, i64 24
  %159 = load i16, i16* %158, align 2
  %160 = sext i16 %159 to i32
  %161 = load i32*, i32** %20, align 8
  %162 = getelementptr inbounds i32, i32* %161, i64 24
  %163 = load i32, i32* %162, align 4
  %164 = mul nsw i32 %160, %163
  %165 = sext i32 %164 to i64
  store i64 %165, i64* %17, align 8
  %166 = load i16*, i16** %19, align 8
  %167 = getelementptr inbounds i16, i16* %166, i64 8
  %168 = load i16, i16* %167, align 2
  %169 = sext i16 %168 to i32
  %170 = load i32*, i32** %20, align 8
  %171 = getelementptr inbounds i32, i32* %170, i64 8
  %172 = load i32, i32* %171, align 4
  %173 = mul nsw i32 %169, %172
  %174 = sext i32 %173 to i64
  store i64 %174, i64* %18, align 8
  %175 = load i64, i64* %15, align 8
  %176 = mul nsw i64 %175, -1730
  %177 = load i64, i64* %16, align 8
  %178 = mul nsw i64 %177, 11893
  %179 = add nsw i64 %176, %178
  %180 = load i64, i64* %17, align 8
  %181 = mul nsw i64 %180, -17799
  %182 = add nsw i64 %179, %181
  %183 = load i64, i64* %18, align 8
  %184 = mul nsw i64 %183, 8697
  %185 = add nsw i64 %182, %184
  store i64 %185, i64* %11, align 8
  %186 = load i64, i64* %15, align 8
  %187 = mul nsw i64 %186, -4176
  %188 = load i64, i64* %16, align 8
  %189 = mul nsw i64 %188, -4926
  %190 = add nsw i64 %187, %189
  %191 = load i64, i64* %17, align 8
  %192 = mul nsw i64 %191, 7373
  %193 = add nsw i64 %190, %192
  %194 = load i64, i64* %18, align 8
  %195 = mul nsw i64 %194, 20995
  %196 = add nsw i64 %193, %195
  store i64 %196, i64* %12, align 8
  %197 = load i64, i64* %13, align 8
  %198 = load i64, i64* %12, align 8
  %199 = add nsw i64 %197, %198
  %200 = add nsw i64 %199, 2048
  %201 = ashr i64 %200, 12
  %202 = trunc i64 %201 to i32
  %203 = load i32*, i32** %21, align 8
  %204 = getelementptr inbounds i32, i32* %203, i64 0
  store i32 %202, i32* %204, align 4
  %205 = load i64, i64* %13, align 8
  %206 = load i64, i64* %12, align 8
  %207 = sub nsw i64 %205, %206
  %208 = add nsw i64 %207, 2048
  %209 = ashr i64 %208, 12
  %210 = trunc i64 %209 to i32
  %211 = load i32*, i32** %21, align 8
  %212 = getelementptr inbounds i32, i32* %211, i64 24
  store i32 %210, i32* %212, align 4
  %213 = load i64, i64* %14, align 8
  %214 = load i64, i64* %11, align 8
  %215 = add nsw i64 %213, %214
  %216 = add nsw i64 %215, 2048
  %217 = ashr i64 %216, 12
  %218 = trunc i64 %217 to i32
  %219 = load i32*, i32** %21, align 8
  %220 = getelementptr inbounds i32, i32* %219, i64 8
  store i32 %218, i32* %220, align 4
  %221 = load i64, i64* %14, align 8
  %222 = load i64, i64* %11, align 8
  %223 = sub nsw i64 %221, %222
  %224 = add nsw i64 %223, 2048
  %225 = ashr i64 %224, 12
  %226 = trunc i64 %225 to i32
  %227 = load i32*, i32** %21, align 8
  %228 = getelementptr inbounds i32, i32* %227, i64 16
  store i32 %226, i32* %228, align 4
  br label %229

229:                                              ; preds = %98, %76, %44
  %230 = load i16*, i16** %19, align 8
  %231 = getelementptr inbounds i16, i16* %230, i32 1
  store i16* %231, i16** %19, align 8
  %232 = load i32*, i32** %20, align 8
  %233 = getelementptr inbounds i32, i32* %232, i32 1
  store i32* %233, i32** %20, align 8
  %234 = load i32*, i32** %21, align 8
  %235 = getelementptr inbounds i32, i32* %234, i32 1
  store i32* %235, i32** %21, align 8
  %236 = load i32, i32* %24, align 4
  %237 = add nsw i32 %236, -1
  store i32 %237, i32* %24, align 4
  br label %38

238:                                              ; preds = %38
  %239 = getelementptr inbounds [32 x i32], [32 x i32]* %25, i64 0, i64 0
  store i32* %239, i32** %21, align 8
  store i32 0, i32* %24, align 4
  br label %240

240:                                              ; preds = %418, %238
  %241 = load i32, i32* %24, align 4
  %242 = icmp slt i32 %241, 4
  br i1 %242, label %243, label %421

243:                                              ; preds = %240
  %244 = load i8**, i8*** %9, align 8
  %245 = load i32, i32* %24, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i8*, i8** %244, i64 %246
  %248 = load i8*, i8** %247, align 8
  %249 = load i32, i32* %10, align 4
  %250 = zext i32 %249 to i64
  %251 = getelementptr inbounds i8, i8* %248, i64 %250
  store i8* %251, i8** %22, align 8
  %252 = load i32*, i32** %21, align 8
  %253 = getelementptr inbounds i32, i32* %252, i64 1
  %254 = load i32, i32* %253, align 4
  %255 = load i32*, i32** %21, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 2
  %257 = load i32, i32* %256, align 4
  %258 = or i32 %254, %257
  %259 = load i32*, i32** %21, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 3
  %261 = load i32, i32* %260, align 4
  %262 = or i32 %258, %261
  %263 = load i32*, i32** %21, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 5
  %265 = load i32, i32* %264, align 4
  %266 = or i32 %262, %265
  %267 = load i32*, i32** %21, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 6
  %269 = load i32, i32* %268, align 4
  %270 = or i32 %266, %269
  %271 = load i32*, i32** %21, align 8
  %272 = getelementptr inbounds i32, i32* %271, i64 7
  %273 = load i32, i32* %272, align 4
  %274 = or i32 %270, %273
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %303

276:                                              ; preds = %243
  %277 = load i8*, i8** %23, align 8
  %278 = load i32*, i32** %21, align 8
  %279 = getelementptr inbounds i32, i32* %278, i64 0
  %280 = load i32, i32* %279, align 4
  %281 = sext i32 %280 to i64
  %282 = add nsw i64 %281, 16
  %283 = ashr i64 %282, 5
  %284 = trunc i64 %283 to i32
  %285 = and i32 %284, 1023
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds i8, i8* %277, i64 %286
  %288 = load i8, i8* %287, align 1
  store i8 %288, i8* %27, align 1
  %289 = load i8, i8* %27, align 1
  %290 = load i8*, i8** %22, align 8
  %291 = getelementptr inbounds i8, i8* %290, i64 0
  store i8 %289, i8* %291, align 1
  %292 = load i8, i8* %27, align 1
  %293 = load i8*, i8** %22, align 8
  %294 = getelementptr inbounds i8, i8* %293, i64 1
  store i8 %292, i8* %294, align 1
  %295 = load i8, i8* %27, align 1
  %296 = load i8*, i8** %22, align 8
  %297 = getelementptr inbounds i8, i8* %296, i64 2
  store i8 %295, i8* %297, align 1
  %298 = load i8, i8* %27, align 1
  %299 = load i8*, i8** %22, align 8
  %300 = getelementptr inbounds i8, i8* %299, i64 3
  store i8 %298, i8* %300, align 1
  %301 = load i32*, i32** %21, align 8
  %302 = getelementptr inbounds i32, i32* %301, i64 8
  store i32* %302, i32** %21, align 8
  br label %418

303:                                              ; preds = %243
  %304 = load i32*, i32** %21, align 8
  %305 = getelementptr inbounds i32, i32* %304, i64 0
  %306 = load i32, i32* %305, align 4
  %307 = sext i32 %306 to i64
  %308 = shl i64 %307, 14
  store i64 %308, i64* %11, align 8
  %309 = load i32*, i32** %21, align 8
  %310 = getelementptr inbounds i32, i32* %309, i64 2
  %311 = load i32, i32* %310, align 4
  %312 = sext i32 %311 to i64
  %313 = mul nsw i64 %312, 15137
  %314 = load i32*, i32** %21, align 8
  %315 = getelementptr inbounds i32, i32* %314, i64 6
  %316 = load i32, i32* %315, align 4
  %317 = sext i32 %316 to i64
  %318 = mul nsw i64 %317, -6270
  %319 = add nsw i64 %313, %318
  store i64 %319, i64* %12, align 8
  %320 = load i64, i64* %11, align 8
  %321 = load i64, i64* %12, align 8
  %322 = add nsw i64 %320, %321
  store i64 %322, i64* %13, align 8
  %323 = load i64, i64* %11, align 8
  %324 = load i64, i64* %12, align 8
  %325 = sub nsw i64 %323, %324
  store i64 %325, i64* %14, align 8
  %326 = load i32*, i32** %21, align 8
  %327 = getelementptr inbounds i32, i32* %326, i64 7
  %328 = load i32, i32* %327, align 4
  %329 = sext i32 %328 to i64
  store i64 %329, i64* %15, align 8
  %330 = load i32*, i32** %21, align 8
  %331 = getelementptr inbounds i32, i32* %330, i64 5
  %332 = load i32, i32* %331, align 4
  %333 = sext i32 %332 to i64
  store i64 %333, i64* %16, align 8
  %334 = load i32*, i32** %21, align 8
  %335 = getelementptr inbounds i32, i32* %334, i64 3
  %336 = load i32, i32* %335, align 4
  %337 = sext i32 %336 to i64
  store i64 %337, i64* %17, align 8
  %338 = load i32*, i32** %21, align 8
  %339 = getelementptr inbounds i32, i32* %338, i64 1
  %340 = load i32, i32* %339, align 4
  %341 = sext i32 %340 to i64
  store i64 %341, i64* %18, align 8
  %342 = load i64, i64* %15, align 8
  %343 = mul nsw i64 %342, -1730
  %344 = load i64, i64* %16, align 8
  %345 = mul nsw i64 %344, 11893
  %346 = add nsw i64 %343, %345
  %347 = load i64, i64* %17, align 8
  %348 = mul nsw i64 %347, -17799
  %349 = add nsw i64 %346, %348
  %350 = load i64, i64* %18, align 8
  %351 = mul nsw i64 %350, 8697
  %352 = add nsw i64 %349, %351
  store i64 %352, i64* %11, align 8
  %353 = load i64, i64* %15, align 8
  %354 = mul nsw i64 %353, -4176
  %355 = load i64, i64* %16, align 8
  %356 = mul nsw i64 %355, -4926
  %357 = add nsw i64 %354, %356
  %358 = load i64, i64* %17, align 8
  %359 = mul nsw i64 %358, 7373
  %360 = add nsw i64 %357, %359
  %361 = load i64, i64* %18, align 8
  %362 = mul nsw i64 %361, 20995
  %363 = add nsw i64 %360, %362
  store i64 %363, i64* %12, align 8
  %364 = load i8*, i8** %23, align 8
  %365 = load i64, i64* %13, align 8
  %366 = load i64, i64* %12, align 8
  %367 = add nsw i64 %365, %366
  %368 = add nsw i64 %367, 262144
  %369 = ashr i64 %368, 19
  %370 = trunc i64 %369 to i32
  %371 = and i32 %370, 1023
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds i8, i8* %364, i64 %372
  %374 = load i8, i8* %373, align 1
  %375 = load i8*, i8** %22, align 8
  %376 = getelementptr inbounds i8, i8* %375, i64 0
  store i8 %374, i8* %376, align 1
  %377 = load i8*, i8** %23, align 8
  %378 = load i64, i64* %13, align 8
  %379 = load i64, i64* %12, align 8
  %380 = sub nsw i64 %378, %379
  %381 = add nsw i64 %380, 262144
  %382 = ashr i64 %381, 19
  %383 = trunc i64 %382 to i32
  %384 = and i32 %383, 1023
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds i8, i8* %377, i64 %385
  %387 = load i8, i8* %386, align 1
  %388 = load i8*, i8** %22, align 8
  %389 = getelementptr inbounds i8, i8* %388, i64 3
  store i8 %387, i8* %389, align 1
  %390 = load i8*, i8** %23, align 8
  %391 = load i64, i64* %14, align 8
  %392 = load i64, i64* %11, align 8
  %393 = add nsw i64 %391, %392
  %394 = add nsw i64 %393, 262144
  %395 = ashr i64 %394, 19
  %396 = trunc i64 %395 to i32
  %397 = and i32 %396, 1023
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds i8, i8* %390, i64 %398
  %400 = load i8, i8* %399, align 1
  %401 = load i8*, i8** %22, align 8
  %402 = getelementptr inbounds i8, i8* %401, i64 1
  store i8 %400, i8* %402, align 1
  %403 = load i8*, i8** %23, align 8
  %404 = load i64, i64* %14, align 8
  %405 = load i64, i64* %11, align 8
  %406 = sub nsw i64 %404, %405
  %407 = add nsw i64 %406, 262144
  %408 = ashr i64 %407, 19
  %409 = trunc i64 %408 to i32
  %410 = and i32 %409, 1023
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds i8, i8* %403, i64 %411
  %413 = load i8, i8* %412, align 1
  %414 = load i8*, i8** %22, align 8
  %415 = getelementptr inbounds i8, i8* %414, i64 2
  store i8 %413, i8* %415, align 1
  %416 = load i32*, i32** %21, align 8
  %417 = getelementptr inbounds i32, i32* %416, i64 8
  store i32* %417, i32** %21, align 8
  br label %418

418:                                              ; preds = %303, %276
  %419 = load i32, i32* %24, align 4
  %420 = add nsw i32 %419, 1
  store i32 %420, i32* %24, align 4
  br label %240

421:                                              ; preds = %240
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_idct_2x2(%struct.jpeg_decompress_struct.832* %0, %struct.jpeg_component_info* %1, i16* %2, i8** %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_decompress_struct.832*, align 8
  %7 = alloca %struct.jpeg_component_info*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i16*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca [16 x i32], align 16
  %21 = alloca i32, align 4
  %22 = alloca i8, align 1
  store %struct.jpeg_decompress_struct.832* %0, %struct.jpeg_decompress_struct.832** %6, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %7, align 8
  store i16* %2, i16** %8, align 8
  store i8** %3, i8*** %9, align 8
  store i32 %4, i32* %10, align 4
  %23 = load %struct.jpeg_decompress_struct.832*, %struct.jpeg_decompress_struct.832** %6, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct.832, %struct.jpeg_decompress_struct.832* %23, i32 0, i32 61
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 128
  store i8* %26, i8** %18, align 8
  %27 = load i16*, i16** %8, align 8
  store i16* %27, i16** %14, align 8
  %28 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i32 0, i32 20
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast i8* %30 to i32*
  store i32* %31, i32** %15, align 8
  %32 = getelementptr inbounds [16 x i32], [16 x i32]* %20, i64 0, i64 0
  store i32* %32, i32** %16, align 8
  store i32 8, i32* %19, align 4
  br label %33

33:                                               ; preds = %161, %5
  %34 = load i32, i32* %19, align 4
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %170

36:                                               ; preds = %33
  %37 = load i32, i32* %19, align 4
  %38 = icmp eq i32 %37, 6
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = load i32, i32* %19, align 4
  %41 = icmp eq i32 %40, 4
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = load i32, i32* %19, align 4
  %44 = icmp eq i32 %43, 2
  br i1 %44, label %45, label %46

45:                                               ; preds = %42, %39, %36
  br label %161

46:                                               ; preds = %42
  %47 = load i16*, i16** %14, align 8
  %48 = getelementptr inbounds i16, i16* %47, i64 8
  %49 = load i16, i16* %48, align 2
  %50 = sext i16 %49 to i32
  %51 = load i16*, i16** %14, align 8
  %52 = getelementptr inbounds i16, i16* %51, i64 24
  %53 = load i16, i16* %52, align 2
  %54 = sext i16 %53 to i32
  %55 = or i32 %50, %54
  %56 = load i16*, i16** %14, align 8
  %57 = getelementptr inbounds i16, i16* %56, i64 40
  %58 = load i16, i16* %57, align 2
  %59 = sext i16 %58 to i32
  %60 = or i32 %55, %59
  %61 = load i16*, i16** %14, align 8
  %62 = getelementptr inbounds i16, i16* %61, i64 56
  %63 = load i16, i16* %62, align 2
  %64 = sext i16 %63 to i32
  %65 = or i32 %60, %64
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %83

67:                                               ; preds = %46
  %68 = load i16*, i16** %14, align 8
  %69 = getelementptr inbounds i16, i16* %68, i64 0
  %70 = load i16, i16* %69, align 2
  %71 = sext i16 %70 to i32
  %72 = load i32*, i32** %15, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 0
  %74 = load i32, i32* %73, align 4
  %75 = mul nsw i32 %71, %74
  %76 = shl i32 %75, 2
  store i32 %76, i32* %21, align 4
  %77 = load i32, i32* %21, align 4
  %78 = load i32*, i32** %16, align 8
  %79 = getelementptr inbounds i32, i32* %78, i64 0
  store i32 %77, i32* %79, align 4
  %80 = load i32, i32* %21, align 4
  %81 = load i32*, i32** %16, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 8
  store i32 %80, i32* %82, align 4
  br label %161

83:                                               ; preds = %46
  %84 = load i16*, i16** %14, align 8
  %85 = getelementptr inbounds i16, i16* %84, i64 0
  %86 = load i16, i16* %85, align 2
  %87 = sext i16 %86 to i32
  %88 = load i32*, i32** %15, align 8
  %89 = getelementptr inbounds i32, i32* %88, i64 0
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %87, %90
  %92 = sext i32 %91 to i64
  store i64 %92, i64* %13, align 8
  %93 = load i64, i64* %13, align 8
  %94 = shl i64 %93, 15
  store i64 %94, i64* %12, align 8
  %95 = load i16*, i16** %14, align 8
  %96 = getelementptr inbounds i16, i16* %95, i64 56
  %97 = load i16, i16* %96, align 2
  %98 = sext i16 %97 to i32
  %99 = load i32*, i32** %15, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 56
  %101 = load i32, i32* %100, align 4
  %102 = mul nsw i32 %98, %101
  %103 = sext i32 %102 to i64
  store i64 %103, i64* %13, align 8
  %104 = load i64, i64* %13, align 8
  %105 = mul nsw i64 %104, -5906
  store i64 %105, i64* %11, align 8
  %106 = load i16*, i16** %14, align 8
  %107 = getelementptr inbounds i16, i16* %106, i64 40
  %108 = load i16, i16* %107, align 2
  %109 = sext i16 %108 to i32
  %110 = load i32*, i32** %15, align 8
  %111 = getelementptr inbounds i32, i32* %110, i64 40
  %112 = load i32, i32* %111, align 4
  %113 = mul nsw i32 %109, %112
  %114 = sext i32 %113 to i64
  store i64 %114, i64* %13, align 8
  %115 = load i64, i64* %13, align 8
  %116 = mul nsw i64 %115, 6967
  %117 = load i64, i64* %11, align 8
  %118 = add nsw i64 %117, %116
  store i64 %118, i64* %11, align 8
  %119 = load i16*, i16** %14, align 8
  %120 = getelementptr inbounds i16, i16* %119, i64 24
  %121 = load i16, i16* %120, align 2
  %122 = sext i16 %121 to i32
  %123 = load i32*, i32** %15, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 24
  %125 = load i32, i32* %124, align 4
  %126 = mul nsw i32 %122, %125
  %127 = sext i32 %126 to i64
  store i64 %127, i64* %13, align 8
  %128 = load i64, i64* %13, align 8
  %129 = mul nsw i64 %128, -10426
  %130 = load i64, i64* %11, align 8
  %131 = add nsw i64 %130, %129
  store i64 %131, i64* %11, align 8
  %132 = load i16*, i16** %14, align 8
  %133 = getelementptr inbounds i16, i16* %132, i64 8
  %134 = load i16, i16* %133, align 2
  %135 = sext i16 %134 to i32
  %136 = load i32*, i32** %15, align 8
  %137 = getelementptr inbounds i32, i32* %136, i64 8
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %135, %138
  %140 = sext i32 %139 to i64
  store i64 %140, i64* %13, align 8
  %141 = load i64, i64* %13, align 8
  %142 = mul nsw i64 %141, 29692
  %143 = load i64, i64* %11, align 8
  %144 = add nsw i64 %143, %142
  store i64 %144, i64* %11, align 8
  %145 = load i64, i64* %12, align 8
  %146 = load i64, i64* %11, align 8
  %147 = add nsw i64 %145, %146
  %148 = add nsw i64 %147, 4096
  %149 = ashr i64 %148, 13
  %150 = trunc i64 %149 to i32
  %151 = load i32*, i32** %16, align 8
  %152 = getelementptr inbounds i32, i32* %151, i64 0
  store i32 %150, i32* %152, align 4
  %153 = load i64, i64* %12, align 8
  %154 = load i64, i64* %11, align 8
  %155 = sub nsw i64 %153, %154
  %156 = add nsw i64 %155, 4096
  %157 = ashr i64 %156, 13
  %158 = trunc i64 %157 to i32
  %159 = load i32*, i32** %16, align 8
  %160 = getelementptr inbounds i32, i32* %159, i64 8
  store i32 %158, i32* %160, align 4
  br label %161

161:                                              ; preds = %83, %67, %45
  %162 = load i16*, i16** %14, align 8
  %163 = getelementptr inbounds i16, i16* %162, i32 1
  store i16* %163, i16** %14, align 8
  %164 = load i32*, i32** %15, align 8
  %165 = getelementptr inbounds i32, i32* %164, i32 1
  store i32* %165, i32** %15, align 8
  %166 = load i32*, i32** %16, align 8
  %167 = getelementptr inbounds i32, i32* %166, i32 1
  store i32* %167, i32** %16, align 8
  %168 = load i32, i32* %19, align 4
  %169 = add nsw i32 %168, -1
  store i32 %169, i32* %19, align 4
  br label %33

170:                                              ; preds = %33
  %171 = getelementptr inbounds [16 x i32], [16 x i32]* %20, i64 0, i64 0
  store i32* %171, i32** %16, align 8
  store i32 0, i32* %19, align 4
  br label %172

172:                                              ; preds = %278, %170
  %173 = load i32, i32* %19, align 4
  %174 = icmp slt i32 %173, 2
  br i1 %174, label %175, label %281

175:                                              ; preds = %172
  %176 = load i8**, i8*** %9, align 8
  %177 = load i32, i32* %19, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds i8*, i8** %176, i64 %178
  %180 = load i8*, i8** %179, align 8
  %181 = load i32, i32* %10, align 4
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds i8, i8* %180, i64 %182
  store i8* %183, i8** %17, align 8
  %184 = load i32*, i32** %16, align 8
  %185 = getelementptr inbounds i32, i32* %184, i64 1
  %186 = load i32, i32* %185, align 4
  %187 = load i32*, i32** %16, align 8
  %188 = getelementptr inbounds i32, i32* %187, i64 3
  %189 = load i32, i32* %188, align 4
  %190 = or i32 %186, %189
  %191 = load i32*, i32** %16, align 8
  %192 = getelementptr inbounds i32, i32* %191, i64 5
  %193 = load i32, i32* %192, align 4
  %194 = or i32 %190, %193
  %195 = load i32*, i32** %16, align 8
  %196 = getelementptr inbounds i32, i32* %195, i64 7
  %197 = load i32, i32* %196, align 4
  %198 = or i32 %194, %197
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %221

200:                                              ; preds = %175
  %201 = load i8*, i8** %18, align 8
  %202 = load i32*, i32** %16, align 8
  %203 = getelementptr inbounds i32, i32* %202, i64 0
  %204 = load i32, i32* %203, align 4
  %205 = sext i32 %204 to i64
  %206 = add nsw i64 %205, 16
  %207 = ashr i64 %206, 5
  %208 = trunc i64 %207 to i32
  %209 = and i32 %208, 1023
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds i8, i8* %201, i64 %210
  %212 = load i8, i8* %211, align 1
  store i8 %212, i8* %22, align 1
  %213 = load i8, i8* %22, align 1
  %214 = load i8*, i8** %17, align 8
  %215 = getelementptr inbounds i8, i8* %214, i64 0
  store i8 %213, i8* %215, align 1
  %216 = load i8, i8* %22, align 1
  %217 = load i8*, i8** %17, align 8
  %218 = getelementptr inbounds i8, i8* %217, i64 1
  store i8 %216, i8* %218, align 1
  %219 = load i32*, i32** %16, align 8
  %220 = getelementptr inbounds i32, i32* %219, i64 8
  store i32* %220, i32** %16, align 8
  br label %278

221:                                              ; preds = %175
  %222 = load i32*, i32** %16, align 8
  %223 = getelementptr inbounds i32, i32* %222, i64 0
  %224 = load i32, i32* %223, align 4
  %225 = sext i32 %224 to i64
  %226 = shl i64 %225, 15
  store i64 %226, i64* %12, align 8
  %227 = load i32*, i32** %16, align 8
  %228 = getelementptr inbounds i32, i32* %227, i64 7
  %229 = load i32, i32* %228, align 4
  %230 = sext i32 %229 to i64
  %231 = mul nsw i64 %230, -5906
  %232 = load i32*, i32** %16, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 5
  %234 = load i32, i32* %233, align 4
  %235 = sext i32 %234 to i64
  %236 = mul nsw i64 %235, 6967
  %237 = add nsw i64 %231, %236
  %238 = load i32*, i32** %16, align 8
  %239 = getelementptr inbounds i32, i32* %238, i64 3
  %240 = load i32, i32* %239, align 4
  %241 = sext i32 %240 to i64
  %242 = mul nsw i64 %241, -10426
  %243 = add nsw i64 %237, %242
  %244 = load i32*, i32** %16, align 8
  %245 = getelementptr inbounds i32, i32* %244, i64 1
  %246 = load i32, i32* %245, align 4
  %247 = sext i32 %246 to i64
  %248 = mul nsw i64 %247, 29692
  %249 = add nsw i64 %243, %248
  store i64 %249, i64* %11, align 8
  %250 = load i8*, i8** %18, align 8
  %251 = load i64, i64* %12, align 8
  %252 = load i64, i64* %11, align 8
  %253 = add nsw i64 %251, %252
  %254 = add nsw i64 %253, 524288
  %255 = ashr i64 %254, 20
  %256 = trunc i64 %255 to i32
  %257 = and i32 %256, 1023
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds i8, i8* %250, i64 %258
  %260 = load i8, i8* %259, align 1
  %261 = load i8*, i8** %17, align 8
  %262 = getelementptr inbounds i8, i8* %261, i64 0
  store i8 %260, i8* %262, align 1
  %263 = load i8*, i8** %18, align 8
  %264 = load i64, i64* %12, align 8
  %265 = load i64, i64* %11, align 8
  %266 = sub nsw i64 %264, %265
  %267 = add nsw i64 %266, 524288
  %268 = ashr i64 %267, 20
  %269 = trunc i64 %268 to i32
  %270 = and i32 %269, 1023
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds i8, i8* %263, i64 %271
  %273 = load i8, i8* %272, align 1
  %274 = load i8*, i8** %17, align 8
  %275 = getelementptr inbounds i8, i8* %274, i64 1
  store i8 %273, i8* %275, align 1
  %276 = load i32*, i32** %16, align 8
  %277 = getelementptr inbounds i32, i32* %276, i64 8
  store i32* %277, i32** %16, align 8
  br label %278

278:                                              ; preds = %221, %200
  %279 = load i32, i32* %19, align 4
  %280 = add nsw i32 %279, 1
  store i32 %280, i32* %19, align 4
  br label %172

281:                                              ; preds = %172
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_idct_1x1(%struct.jpeg_decompress_struct.832* %0, %struct.jpeg_component_info* %1, i16* %2, i8** %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_decompress_struct.832*, align 8
  %7 = alloca %struct.jpeg_component_info*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32*, align 8
  %13 = alloca i8*, align 8
  store %struct.jpeg_decompress_struct.832* %0, %struct.jpeg_decompress_struct.832** %6, align 8
  store %struct.jpeg_component_info* %1, %struct.jpeg_component_info** %7, align 8
  store i16* %2, i16** %8, align 8
  store i8** %3, i8*** %9, align 8
  store i32 %4, i32* %10, align 4
  %14 = load %struct.jpeg_decompress_struct.832*, %struct.jpeg_decompress_struct.832** %6, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.832, %struct.jpeg_decompress_struct.832* %14, i32 0, i32 61
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 128
  store i8* %17, i8** %13, align 8
  %18 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %19 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i32 0, i32 20
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast i8* %20 to i32*
  store i32* %21, i32** %12, align 8
  %22 = load i16*, i16** %8, align 8
  %23 = getelementptr inbounds i16, i16* %22, i64 0
  %24 = load i16, i16* %23, align 2
  %25 = sext i16 %24 to i32
  %26 = load i32*, i32** %12, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 0
  %28 = load i32, i32* %27, align 4
  %29 = mul nsw i32 %25, %28
  store i32 %29, i32* %11, align 4
  %30 = load i32, i32* %11, align 4
  %31 = sext i32 %30 to i64
  %32 = add nsw i64 %31, 4
  %33 = ashr i64 %32, 3
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %11, align 4
  %35 = load i8*, i8** %13, align 8
  %36 = load i32, i32* %11, align 4
  %37 = and i32 %36, 1023
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %35, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = load i8**, i8*** %9, align 8
  %42 = getelementptr inbounds i8*, i8** %41, i64 0
  %43 = load i8*, i8** %42, align 8
  %44 = load i32, i32* %10, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  store i8 %40, i8* %46, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_memory_mgr(%struct.jpeg_common_struct.855* %0) #0 {
  %2 = alloca %struct.jpeg_common_struct.855*, align 8
  %3 = alloca %struct.my_memory_mgr*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  store %struct.jpeg_common_struct.855* %0, %struct.jpeg_common_struct.855** %2, align 8
  %9 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %10 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %9, i32 0, i32 1
  store %struct.jpeg_memory_mgr.857* null, %struct.jpeg_memory_mgr.857** %10, align 8
  store i64 1000000000, i64* %6, align 8
  %11 = load i64, i64* %6, align 8
  %12 = icmp ne i64 %11, 1000000000
  br i1 %12, label %13, label %25

13:                                               ; preds = %1
  %14 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %15 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %14, i32 0, i32 0
  %16 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %15, align 8
  %17 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %16, i32 0, i32 5
  store i32 3, i32* %17, align 8
  %18 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %19 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %18, i32 0, i32 0
  %20 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %20, i32 0, i32 0
  %22 = bitcast {}** %21 to void (%struct.jpeg_common_struct.855*)**
  %23 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %22, align 8
  %24 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  call void %23(%struct.jpeg_common_struct.855* %24)
  br label %25

25:                                               ; preds = %13, %1
  %26 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %27 = call i64 bitcast (i64 (%struct.jpeg_common_struct.866*)* @jpeg_mem_init to i64 (%struct.jpeg_common_struct.855*)*)(%struct.jpeg_common_struct.855* %26)
  store i64 %27, i64* %4, align 8
  %28 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %29 = call i8* bitcast (i8* (%struct.jpeg_common_struct.866*, i64)* @jpeg_get_small to i8* (%struct.jpeg_common_struct.855*, i64)*)(%struct.jpeg_common_struct.855* %28, i64 160)
  %30 = bitcast i8* %29 to %struct.my_memory_mgr*
  store %struct.my_memory_mgr* %30, %struct.my_memory_mgr** %3, align 8
  %31 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %32 = icmp eq %struct.my_memory_mgr* %31, null
  br i1 %32, label %33, label %52

33:                                               ; preds = %25
  %34 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  call void bitcast (void (%struct.jpeg_common_struct.866*)* @jpeg_mem_term to void (%struct.jpeg_common_struct.855*)*)(%struct.jpeg_common_struct.855* %34)
  %35 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %36 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %35, i32 0, i32 0
  %37 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %37, i32 0, i32 5
  store i32 53, i32* %38, align 8
  %39 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %40 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %39, i32 0, i32 0
  %41 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %41, i32 0, i32 6
  %43 = bitcast %union.anon* %42 to [8 x i32]*
  %44 = getelementptr inbounds [8 x i32], [8 x i32]* %43, i64 0, i64 0
  store i32 0, i32* %44, align 4
  %45 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %46 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %45, i32 0, i32 0
  %47 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %46, align 8
  %48 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %47, i32 0, i32 0
  %49 = bitcast {}** %48 to void (%struct.jpeg_common_struct.855*)**
  %50 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %49, align 8
  %51 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  call void %50(%struct.jpeg_common_struct.855* %51)
  br label %52

52:                                               ; preds = %33, %25
  %53 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %54 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %53, i32 0, i32 0
  %55 = getelementptr inbounds %struct.jpeg_memory_mgr.857, %struct.jpeg_memory_mgr.857* %54, i32 0, i32 0
  store i8* (%struct.jpeg_common_struct.855*, i32, i64)* @alloc_small, i8* (%struct.jpeg_common_struct.855*, i32, i64)** %55, align 8
  %56 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %57 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %56, i32 0, i32 0
  %58 = getelementptr inbounds %struct.jpeg_memory_mgr.857, %struct.jpeg_memory_mgr.857* %57, i32 0, i32 1
  store i8* (%struct.jpeg_common_struct.855*, i32, i64)* @alloc_large, i8* (%struct.jpeg_common_struct.855*, i32, i64)** %58, align 8
  %59 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %60 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %59, i32 0, i32 0
  %61 = getelementptr inbounds %struct.jpeg_memory_mgr.857, %struct.jpeg_memory_mgr.857* %60, i32 0, i32 2
  store i8** (%struct.jpeg_common_struct.855*, i32, i32, i32)* @alloc_sarray, i8** (%struct.jpeg_common_struct.855*, i32, i32, i32)** %61, align 8
  %62 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %63 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %62, i32 0, i32 0
  %64 = getelementptr inbounds %struct.jpeg_memory_mgr.857, %struct.jpeg_memory_mgr.857* %63, i32 0, i32 3
  store [64 x i16]** (%struct.jpeg_common_struct.855*, i32, i32, i32)* @alloc_barray, [64 x i16]** (%struct.jpeg_common_struct.855*, i32, i32, i32)** %64, align 8
  %65 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %66 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %65, i32 0, i32 0
  %67 = getelementptr inbounds %struct.jpeg_memory_mgr.857, %struct.jpeg_memory_mgr.857* %66, i32 0, i32 4
  store %struct.jvirt_sarray_control* (%struct.jpeg_common_struct.855*, i32, i32, i32, i32, i32)* @request_virt_sarray, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct.855*, i32, i32, i32, i32, i32)** %67, align 8
  %68 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %69 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %68, i32 0, i32 0
  %70 = getelementptr inbounds %struct.jpeg_memory_mgr.857, %struct.jpeg_memory_mgr.857* %69, i32 0, i32 5
  store %struct.jvirt_barray_control* (%struct.jpeg_common_struct.855*, i32, i32, i32, i32, i32)* @request_virt_barray, %struct.jvirt_barray_control* (%struct.jpeg_common_struct.855*, i32, i32, i32, i32, i32)** %70, align 8
  %71 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %72 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %71, i32 0, i32 0
  %73 = getelementptr inbounds %struct.jpeg_memory_mgr.857, %struct.jpeg_memory_mgr.857* %72, i32 0, i32 6
  %74 = bitcast {}** %73 to void (%struct.jpeg_common_struct.855*)**
  store void (%struct.jpeg_common_struct.855*)* @realize_virt_arrays, void (%struct.jpeg_common_struct.855*)** %74, align 8
  %75 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %76 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %75, i32 0, i32 0
  %77 = getelementptr inbounds %struct.jpeg_memory_mgr.857, %struct.jpeg_memory_mgr.857* %76, i32 0, i32 7
  store i8** (%struct.jpeg_common_struct.855*, %struct.jvirt_sarray_control*, i32, i32, i32)* @access_virt_sarray, i8** (%struct.jpeg_common_struct.855*, %struct.jvirt_sarray_control*, i32, i32, i32)** %77, align 8
  %78 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %79 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %78, i32 0, i32 0
  %80 = getelementptr inbounds %struct.jpeg_memory_mgr.857, %struct.jpeg_memory_mgr.857* %79, i32 0, i32 8
  store [64 x i16]** (%struct.jpeg_common_struct.855*, %struct.jvirt_barray_control*, i32, i32, i32)* @access_virt_barray, [64 x i16]** (%struct.jpeg_common_struct.855*, %struct.jvirt_barray_control*, i32, i32, i32)** %80, align 8
  %81 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %82 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %81, i32 0, i32 0
  %83 = getelementptr inbounds %struct.jpeg_memory_mgr.857, %struct.jpeg_memory_mgr.857* %82, i32 0, i32 9
  store void (%struct.jpeg_common_struct.855*, i32)* @free_pool, void (%struct.jpeg_common_struct.855*, i32)** %83, align 8
  %84 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %85 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %84, i32 0, i32 0
  %86 = getelementptr inbounds %struct.jpeg_memory_mgr.857, %struct.jpeg_memory_mgr.857* %85, i32 0, i32 10
  %87 = bitcast {}** %86 to void (%struct.jpeg_common_struct.855*)**
  store void (%struct.jpeg_common_struct.855*)* @self_destruct, void (%struct.jpeg_common_struct.855*)** %87, align 8
  %88 = load i64, i64* %4, align 8
  %89 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %90 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %89, i32 0, i32 0
  %91 = getelementptr inbounds %struct.jpeg_memory_mgr.857, %struct.jpeg_memory_mgr.857* %90, i32 0, i32 11
  store i64 %88, i64* %91, align 8
  store i32 1, i32* %5, align 4
  br label %92

92:                                               ; preds = %106, %52
  %93 = load i32, i32* %5, align 4
  %94 = icmp sge i32 %93, 0
  br i1 %94, label %95, label %109

95:                                               ; preds = %92
  %96 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %97 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %96, i32 0, i32 1
  %98 = load i32, i32* %5, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds [2 x %union.small_pool_struct*], [2 x %union.small_pool_struct*]* %97, i64 0, i64 %99
  store %union.small_pool_struct* null, %union.small_pool_struct** %100, align 8
  %101 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %102 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %101, i32 0, i32 2
  %103 = load i32, i32* %5, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [2 x %union.large_pool_struct*], [2 x %union.large_pool_struct*]* %102, i64 0, i64 %104
  store %union.large_pool_struct* null, %union.large_pool_struct** %105, align 8
  br label %106

106:                                              ; preds = %95
  %107 = load i32, i32* %5, align 4
  %108 = add nsw i32 %107, -1
  store i32 %108, i32* %5, align 4
  br label %92

109:                                              ; preds = %92
  %110 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %111 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %110, i32 0, i32 3
  store %struct.jvirt_sarray_control* null, %struct.jvirt_sarray_control** %111, align 8
  %112 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %113 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %112, i32 0, i32 4
  store %struct.jvirt_barray_control* null, %struct.jvirt_barray_control** %113, align 8
  %114 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %115 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %114, i32 0, i32 5
  store i64 160, i64* %115, align 8
  %116 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %117 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %116, i32 0, i32 0
  %118 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %119 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %118, i32 0, i32 1
  store %struct.jpeg_memory_mgr.857* %117, %struct.jpeg_memory_mgr.857** %119, align 8
  %120 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.249, i64 0, i64 0)) #10
  store i8* %120, i8** %7, align 8
  %121 = icmp ne i8* %120, null
  br i1 %121, label %122, label %144

122:                                              ; preds = %109
  store i8 120, i8* %8, align 1
  %123 = load i8*, i8** %7, align 8
  %124 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %123, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.250, i64 0, i64 0), i64* %4, i8* %8) #10
  %125 = icmp sgt i32 %124, 0
  br i1 %125, label %126, label %143

126:                                              ; preds = %122
  %127 = load i8, i8* %8, align 1
  %128 = sext i8 %127 to i32
  %129 = icmp eq i32 %128, 109
  br i1 %129, label %134, label %130

130:                                              ; preds = %126
  %131 = load i8, i8* %8, align 1
  %132 = sext i8 %131 to i32
  %133 = icmp eq i32 %132, 77
  br i1 %133, label %134, label %137

134:                                              ; preds = %130, %126
  %135 = load i64, i64* %4, align 8
  %136 = mul nsw i64 %135, 1000
  store i64 %136, i64* %4, align 8
  br label %137

137:                                              ; preds = %134, %130
  %138 = load i64, i64* %4, align 8
  %139 = mul nsw i64 %138, 1000
  %140 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %141 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %140, i32 0, i32 0
  %142 = getelementptr inbounds %struct.jpeg_memory_mgr.857, %struct.jpeg_memory_mgr.857* %141, i32 0, i32 11
  store i64 %139, i64* %142, align 8
  br label %143

143:                                              ; preds = %137, %122
  br label %144

144:                                              ; preds = %143, %109
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @alloc_small(%struct.jpeg_common_struct.855* %0, i32 %1, i64 %2) #0 {
  %4 = alloca %struct.jpeg_common_struct.855*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca %struct.my_memory_mgr*, align 8
  %8 = alloca %union.small_pool_struct*, align 8
  %9 = alloca %union.small_pool_struct*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %struct.jpeg_common_struct.855* %0, %struct.jpeg_common_struct.855** %4, align 8
  store i32 %1, i32* %5, align 4
  store i64 %2, i64* %6, align 8
  %14 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  %15 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %14, i32 0, i32 1
  %16 = load %struct.jpeg_memory_mgr.857*, %struct.jpeg_memory_mgr.857** %15, align 8
  %17 = bitcast %struct.jpeg_memory_mgr.857* %16 to %struct.my_memory_mgr*
  store %struct.my_memory_mgr* %17, %struct.my_memory_mgr** %7, align 8
  %18 = load i64, i64* %6, align 8
  %19 = icmp ugt i64 %18, 999999976
  br i1 %19, label %20, label %22

20:                                               ; preds = %3
  %21 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  call void @out_of_memory(%struct.jpeg_common_struct.855* %21, i32 1)
  br label %22

22:                                               ; preds = %20, %3
  %23 = load i64, i64* %6, align 8
  %24 = urem i64 %23, 8
  store i64 %24, i64* %11, align 8
  %25 = load i64, i64* %11, align 8
  %26 = icmp ugt i64 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %22
  %28 = load i64, i64* %11, align 8
  %29 = sub i64 8, %28
  %30 = load i64, i64* %6, align 8
  %31 = add i64 %30, %29
  store i64 %31, i64* %6, align 8
  br label %32

32:                                               ; preds = %27, %22
  %33 = load i32, i32* %5, align 4
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  %36 = load i32, i32* %5, align 4
  %37 = icmp sge i32 %36, 2
  br i1 %37, label %38, label %57

38:                                               ; preds = %35, %32
  %39 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  %40 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %39, i32 0, i32 0
  %41 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %41, i32 0, i32 5
  store i32 12, i32* %42, align 8
  %43 = load i32, i32* %5, align 4
  %44 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  %45 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %44, i32 0, i32 0
  %46 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %45, align 8
  %47 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %46, i32 0, i32 6
  %48 = bitcast %union.anon* %47 to [8 x i32]*
  %49 = getelementptr inbounds [8 x i32], [8 x i32]* %48, i64 0, i64 0
  store i32 %43, i32* %49, align 4
  %50 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  %51 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %50, i32 0, i32 0
  %52 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %51, align 8
  %53 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %52, i32 0, i32 0
  %54 = bitcast {}** %53 to void (%struct.jpeg_common_struct.855*)**
  %55 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %54, align 8
  %56 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  call void %55(%struct.jpeg_common_struct.855* %56)
  br label %57

57:                                               ; preds = %38, %35
  store %union.small_pool_struct* null, %union.small_pool_struct** %9, align 8
  %58 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %7, align 8
  %59 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %58, i32 0, i32 1
  %60 = load i32, i32* %5, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [2 x %union.small_pool_struct*], [2 x %union.small_pool_struct*]* %59, i64 0, i64 %61
  %63 = load %union.small_pool_struct*, %union.small_pool_struct** %62, align 8
  store %union.small_pool_struct* %63, %union.small_pool_struct** %8, align 8
  br label %64

64:                                               ; preds = %75, %57
  %65 = load %union.small_pool_struct*, %union.small_pool_struct** %8, align 8
  %66 = icmp ne %union.small_pool_struct* %65, null
  br i1 %66, label %67, label %81

67:                                               ; preds = %64
  %68 = load %union.small_pool_struct*, %union.small_pool_struct** %8, align 8
  %69 = bitcast %union.small_pool_struct* %68 to %struct.anon*
  %70 = getelementptr inbounds %struct.anon, %struct.anon* %69, i32 0, i32 2
  %71 = load i64, i64* %70, align 8
  %72 = load i64, i64* %6, align 8
  %73 = icmp uge i64 %71, %72
  br i1 %73, label %74, label %75

74:                                               ; preds = %67
  br label %81

75:                                               ; preds = %67
  %76 = load %union.small_pool_struct*, %union.small_pool_struct** %8, align 8
  store %union.small_pool_struct* %76, %union.small_pool_struct** %9, align 8
  %77 = load %union.small_pool_struct*, %union.small_pool_struct** %8, align 8
  %78 = bitcast %union.small_pool_struct* %77 to %struct.anon*
  %79 = getelementptr inbounds %struct.anon, %struct.anon* %78, i32 0, i32 0
  %80 = load %union.small_pool_struct*, %union.small_pool_struct** %79, align 8
  store %union.small_pool_struct* %80, %union.small_pool_struct** %8, align 8
  br label %64

81:                                               ; preds = %74, %64
  %82 = load %union.small_pool_struct*, %union.small_pool_struct** %8, align 8
  %83 = icmp eq %union.small_pool_struct* %82, null
  br i1 %83, label %84, label %161

84:                                               ; preds = %81
  %85 = load i64, i64* %6, align 8
  %86 = add i64 %85, 24
  store i64 %86, i64* %12, align 8
  %87 = load %union.small_pool_struct*, %union.small_pool_struct** %9, align 8
  %88 = icmp eq %union.small_pool_struct* %87, null
  br i1 %88, label %89, label %94

89:                                               ; preds = %84
  %90 = load i32, i32* %5, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [2 x i64], [2 x i64]* @first_pool_slop, i64 0, i64 %91
  %93 = load i64, i64* %92, align 8
  store i64 %93, i64* %13, align 8
  br label %99

94:                                               ; preds = %84
  %95 = load i32, i32* %5, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [2 x i64], [2 x i64]* @extra_pool_slop, i64 0, i64 %96
  %98 = load i64, i64* %97, align 8
  store i64 %98, i64* %13, align 8
  br label %99

99:                                               ; preds = %94, %89
  %100 = load i64, i64* %13, align 8
  %101 = load i64, i64* %12, align 8
  %102 = sub i64 1000000000, %101
  %103 = icmp ugt i64 %100, %102
  br i1 %103, label %104, label %107

104:                                              ; preds = %99
  %105 = load i64, i64* %12, align 8
  %106 = sub i64 1000000000, %105
  store i64 %106, i64* %13, align 8
  br label %107

107:                                              ; preds = %104, %99
  br label %108

108:                                              ; preds = %125, %107
  %109 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  %110 = load i64, i64* %12, align 8
  %111 = load i64, i64* %13, align 8
  %112 = add i64 %110, %111
  %113 = call i8* bitcast (i8* (%struct.jpeg_common_struct.866*, i64)* @jpeg_get_small to i8* (%struct.jpeg_common_struct.855*, i64)*)(%struct.jpeg_common_struct.855* %109, i64 %112)
  %114 = bitcast i8* %113 to %union.small_pool_struct*
  store %union.small_pool_struct* %114, %union.small_pool_struct** %8, align 8
  %115 = load %union.small_pool_struct*, %union.small_pool_struct** %8, align 8
  %116 = icmp ne %union.small_pool_struct* %115, null
  br i1 %116, label %117, label %118

117:                                              ; preds = %108
  br label %126

118:                                              ; preds = %108
  %119 = load i64, i64* %13, align 8
  %120 = udiv i64 %119, 2
  store i64 %120, i64* %13, align 8
  %121 = load i64, i64* %13, align 8
  %122 = icmp ult i64 %121, 50
  br i1 %122, label %123, label %125

123:                                              ; preds = %118
  %124 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  call void @out_of_memory(%struct.jpeg_common_struct.855* %124, i32 2)
  br label %125

125:                                              ; preds = %123, %118
  br label %108

126:                                              ; preds = %117
  %127 = load i64, i64* %12, align 8
  %128 = load i64, i64* %13, align 8
  %129 = add i64 %127, %128
  %130 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %7, align 8
  %131 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %130, i32 0, i32 5
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %129
  store i64 %133, i64* %131, align 8
  %134 = load %union.small_pool_struct*, %union.small_pool_struct** %8, align 8
  %135 = bitcast %union.small_pool_struct* %134 to %struct.anon*
  %136 = getelementptr inbounds %struct.anon, %struct.anon* %135, i32 0, i32 0
  store %union.small_pool_struct* null, %union.small_pool_struct** %136, align 8
  %137 = load %union.small_pool_struct*, %union.small_pool_struct** %8, align 8
  %138 = bitcast %union.small_pool_struct* %137 to %struct.anon*
  %139 = getelementptr inbounds %struct.anon, %struct.anon* %138, i32 0, i32 1
  store i64 0, i64* %139, align 8
  %140 = load i64, i64* %6, align 8
  %141 = load i64, i64* %13, align 8
  %142 = add i64 %140, %141
  %143 = load %union.small_pool_struct*, %union.small_pool_struct** %8, align 8
  %144 = bitcast %union.small_pool_struct* %143 to %struct.anon*
  %145 = getelementptr inbounds %struct.anon, %struct.anon* %144, i32 0, i32 2
  store i64 %142, i64* %145, align 8
  %146 = load %union.small_pool_struct*, %union.small_pool_struct** %9, align 8
  %147 = icmp eq %union.small_pool_struct* %146, null
  br i1 %147, label %148, label %155

148:                                              ; preds = %126
  %149 = load %union.small_pool_struct*, %union.small_pool_struct** %8, align 8
  %150 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %7, align 8
  %151 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %150, i32 0, i32 1
  %152 = load i32, i32* %5, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [2 x %union.small_pool_struct*], [2 x %union.small_pool_struct*]* %151, i64 0, i64 %153
  store %union.small_pool_struct* %149, %union.small_pool_struct** %154, align 8
  br label %160

155:                                              ; preds = %126
  %156 = load %union.small_pool_struct*, %union.small_pool_struct** %8, align 8
  %157 = load %union.small_pool_struct*, %union.small_pool_struct** %9, align 8
  %158 = bitcast %union.small_pool_struct* %157 to %struct.anon*
  %159 = getelementptr inbounds %struct.anon, %struct.anon* %158, i32 0, i32 0
  store %union.small_pool_struct* %156, %union.small_pool_struct** %159, align 8
  br label %160

160:                                              ; preds = %155, %148
  br label %161

161:                                              ; preds = %160, %81
  %162 = load %union.small_pool_struct*, %union.small_pool_struct** %8, align 8
  %163 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %162, i64 1
  %164 = bitcast %union.small_pool_struct* %163 to i8*
  store i8* %164, i8** %10, align 8
  %165 = load %union.small_pool_struct*, %union.small_pool_struct** %8, align 8
  %166 = bitcast %union.small_pool_struct* %165 to %struct.anon*
  %167 = getelementptr inbounds %struct.anon, %struct.anon* %166, i32 0, i32 1
  %168 = load i64, i64* %167, align 8
  %169 = load i8*, i8** %10, align 8
  %170 = getelementptr inbounds i8, i8* %169, i64 %168
  store i8* %170, i8** %10, align 8
  %171 = load i64, i64* %6, align 8
  %172 = load %union.small_pool_struct*, %union.small_pool_struct** %8, align 8
  %173 = bitcast %union.small_pool_struct* %172 to %struct.anon*
  %174 = getelementptr inbounds %struct.anon, %struct.anon* %173, i32 0, i32 1
  %175 = load i64, i64* %174, align 8
  %176 = add i64 %175, %171
  store i64 %176, i64* %174, align 8
  %177 = load i64, i64* %6, align 8
  %178 = load %union.small_pool_struct*, %union.small_pool_struct** %8, align 8
  %179 = bitcast %union.small_pool_struct* %178 to %struct.anon*
  %180 = getelementptr inbounds %struct.anon, %struct.anon* %179, i32 0, i32 2
  %181 = load i64, i64* %180, align 8
  %182 = sub i64 %181, %177
  store i64 %182, i64* %180, align 8
  %183 = load i8*, i8** %10, align 8
  ret i8* %183
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @alloc_large(%struct.jpeg_common_struct.855* %0, i32 %1, i64 %2) #0 {
  %4 = alloca %struct.jpeg_common_struct.855*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca %struct.my_memory_mgr*, align 8
  %8 = alloca %union.large_pool_struct*, align 8
  %9 = alloca i64, align 8
  store %struct.jpeg_common_struct.855* %0, %struct.jpeg_common_struct.855** %4, align 8
  store i32 %1, i32* %5, align 4
  store i64 %2, i64* %6, align 8
  %10 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  %11 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %10, i32 0, i32 1
  %12 = load %struct.jpeg_memory_mgr.857*, %struct.jpeg_memory_mgr.857** %11, align 8
  %13 = bitcast %struct.jpeg_memory_mgr.857* %12 to %struct.my_memory_mgr*
  store %struct.my_memory_mgr* %13, %struct.my_memory_mgr** %7, align 8
  %14 = load i64, i64* %6, align 8
  %15 = icmp ugt i64 %14, 999999976
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  call void @out_of_memory(%struct.jpeg_common_struct.855* %17, i32 3)
  br label %18

18:                                               ; preds = %16, %3
  %19 = load i64, i64* %6, align 8
  %20 = urem i64 %19, 8
  store i64 %20, i64* %9, align 8
  %21 = load i64, i64* %9, align 8
  %22 = icmp ugt i64 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %18
  %24 = load i64, i64* %9, align 8
  %25 = sub i64 8, %24
  %26 = load i64, i64* %6, align 8
  %27 = add i64 %26, %25
  store i64 %27, i64* %6, align 8
  br label %28

28:                                               ; preds = %23, %18
  %29 = load i32, i32* %5, align 4
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = load i32, i32* %5, align 4
  %33 = icmp sge i32 %32, 2
  br i1 %33, label %34, label %53

34:                                               ; preds = %31, %28
  %35 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  %36 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %35, i32 0, i32 0
  %37 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %37, i32 0, i32 5
  store i32 12, i32* %38, align 8
  %39 = load i32, i32* %5, align 4
  %40 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  %41 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %40, i32 0, i32 0
  %42 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %41, align 8
  %43 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %42, i32 0, i32 6
  %44 = bitcast %union.anon* %43 to [8 x i32]*
  %45 = getelementptr inbounds [8 x i32], [8 x i32]* %44, i64 0, i64 0
  store i32 %39, i32* %45, align 4
  %46 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  %47 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %46, i32 0, i32 0
  %48 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %47, align 8
  %49 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %48, i32 0, i32 0
  %50 = bitcast {}** %49 to void (%struct.jpeg_common_struct.855*)**
  %51 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %50, align 8
  %52 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  call void %51(%struct.jpeg_common_struct.855* %52)
  br label %53

53:                                               ; preds = %34, %31
  %54 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  %55 = load i64, i64* %6, align 8
  %56 = add i64 %55, 24
  %57 = call i8* bitcast (i8* (%struct.jpeg_common_struct.866*, i64)* @jpeg_get_large to i8* (%struct.jpeg_common_struct.855*, i64)*)(%struct.jpeg_common_struct.855* %54, i64 %56)
  %58 = bitcast i8* %57 to %union.large_pool_struct*
  store %union.large_pool_struct* %58, %union.large_pool_struct** %8, align 8
  %59 = load %union.large_pool_struct*, %union.large_pool_struct** %8, align 8
  %60 = icmp eq %union.large_pool_struct* %59, null
  br i1 %60, label %61, label %63

61:                                               ; preds = %53
  %62 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  call void @out_of_memory(%struct.jpeg_common_struct.855* %62, i32 4)
  br label %63

63:                                               ; preds = %61, %53
  %64 = load i64, i64* %6, align 8
  %65 = add i64 %64, 24
  %66 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %7, align 8
  %67 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %66, i32 0, i32 5
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, %65
  store i64 %69, i64* %67, align 8
  %70 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %7, align 8
  %71 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %70, i32 0, i32 2
  %72 = load i32, i32* %5, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [2 x %union.large_pool_struct*], [2 x %union.large_pool_struct*]* %71, i64 0, i64 %73
  %75 = load %union.large_pool_struct*, %union.large_pool_struct** %74, align 8
  %76 = load %union.large_pool_struct*, %union.large_pool_struct** %8, align 8
  %77 = bitcast %union.large_pool_struct* %76 to %struct.anon.0*
  %78 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %77, i32 0, i32 0
  store %union.large_pool_struct* %75, %union.large_pool_struct** %78, align 8
  %79 = load i64, i64* %6, align 8
  %80 = load %union.large_pool_struct*, %union.large_pool_struct** %8, align 8
  %81 = bitcast %union.large_pool_struct* %80 to %struct.anon.0*
  %82 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %81, i32 0, i32 1
  store i64 %79, i64* %82, align 8
  %83 = load %union.large_pool_struct*, %union.large_pool_struct** %8, align 8
  %84 = bitcast %union.large_pool_struct* %83 to %struct.anon.0*
  %85 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %84, i32 0, i32 2
  store i64 0, i64* %85, align 8
  %86 = load %union.large_pool_struct*, %union.large_pool_struct** %8, align 8
  %87 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %7, align 8
  %88 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %87, i32 0, i32 2
  %89 = load i32, i32* %5, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [2 x %union.large_pool_struct*], [2 x %union.large_pool_struct*]* %88, i64 0, i64 %90
  store %union.large_pool_struct* %86, %union.large_pool_struct** %91, align 8
  %92 = load %union.large_pool_struct*, %union.large_pool_struct** %8, align 8
  %93 = getelementptr inbounds %union.large_pool_struct, %union.large_pool_struct* %92, i64 1
  %94 = bitcast %union.large_pool_struct* %93 to i8*
  ret i8* %94
}

; Function Attrs: noinline nounwind uwtable
define internal i8** @alloc_sarray(%struct.jpeg_common_struct.855* %0, i32 %1, i32 %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_common_struct.855*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.my_memory_mgr*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  store %struct.jpeg_common_struct.855* %0, %struct.jpeg_common_struct.855** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %16 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %5, align 8
  %17 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %16, i32 0, i32 1
  %18 = load %struct.jpeg_memory_mgr.857*, %struct.jpeg_memory_mgr.857** %17, align 8
  %19 = bitcast %struct.jpeg_memory_mgr.857* %18 to %struct.my_memory_mgr*
  store %struct.my_memory_mgr* %19, %struct.my_memory_mgr** %9, align 8
  %20 = load i32, i32* %7, align 4
  %21 = zext i32 %20 to i64
  %22 = mul i64 %21, 1
  %23 = udiv i64 999999976, %22
  store i64 %23, i64* %15, align 8
  %24 = load i64, i64* %15, align 8
  %25 = icmp sle i64 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %4
  %27 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %5, align 8
  %28 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %27, i32 0, i32 0
  %29 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %29, i32 0, i32 5
  store i32 69, i32* %30, align 8
  %31 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %5, align 8
  %32 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %31, i32 0, i32 0
  %33 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %33, i32 0, i32 0
  %35 = bitcast {}** %34 to void (%struct.jpeg_common_struct.855*)**
  %36 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %35, align 8
  %37 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %5, align 8
  call void %36(%struct.jpeg_common_struct.855* %37)
  br label %38

38:                                               ; preds = %26, %4
  %39 = load i64, i64* %15, align 8
  %40 = load i32, i32* %8, align 4
  %41 = zext i32 %40 to i64
  %42 = icmp slt i64 %39, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = load i64, i64* %15, align 8
  %45 = trunc i64 %44 to i32
  store i32 %45, i32* %12, align 4
  br label %48

46:                                               ; preds = %38
  %47 = load i32, i32* %8, align 4
  store i32 %47, i32* %12, align 4
  br label %48

48:                                               ; preds = %46, %43
  %49 = load i32, i32* %12, align 4
  %50 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %9, align 8
  %51 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %50, i32 0, i32 6
  store i32 %49, i32* %51, align 8
  %52 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %5, align 8
  %53 = load i32, i32* %6, align 4
  %54 = load i32, i32* %8, align 4
  %55 = zext i32 %54 to i64
  %56 = mul i64 %55, 8
  %57 = call i8* @alloc_small(%struct.jpeg_common_struct.855* %52, i32 %53, i64 %56)
  %58 = bitcast i8* %57 to i8**
  store i8** %58, i8*** %10, align 8
  store i32 0, i32* %13, align 4
  br label %59

59:                                               ; preds = %104, %48
  %60 = load i32, i32* %13, align 4
  %61 = load i32, i32* %8, align 4
  %62 = icmp ult i32 %60, %61
  br i1 %62, label %63, label %105

63:                                               ; preds = %59
  %64 = load i32, i32* %12, align 4
  %65 = load i32, i32* %8, align 4
  %66 = load i32, i32* %13, align 4
  %67 = sub i32 %65, %66
  %68 = icmp ult i32 %64, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = load i32, i32* %12, align 4
  br label %75

71:                                               ; preds = %63
  %72 = load i32, i32* %8, align 4
  %73 = load i32, i32* %13, align 4
  %74 = sub i32 %72, %73
  br label %75

75:                                               ; preds = %71, %69
  %76 = phi i32 [ %70, %69 ], [ %74, %71 ]
  store i32 %76, i32* %12, align 4
  %77 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %5, align 8
  %78 = load i32, i32* %6, align 4
  %79 = load i32, i32* %12, align 4
  %80 = zext i32 %79 to i64
  %81 = load i32, i32* %7, align 4
  %82 = zext i32 %81 to i64
  %83 = mul i64 %80, %82
  %84 = mul i64 %83, 1
  %85 = call i8* @alloc_large(%struct.jpeg_common_struct.855* %77, i32 %78, i64 %84)
  store i8* %85, i8** %11, align 8
  %86 = load i32, i32* %12, align 4
  store i32 %86, i32* %14, align 4
  br label %87

87:                                               ; preds = %101, %75
  %88 = load i32, i32* %14, align 4
  %89 = icmp ugt i32 %88, 0
  br i1 %89, label %90, label %104

90:                                               ; preds = %87
  %91 = load i8*, i8** %11, align 8
  %92 = load i8**, i8*** %10, align 8
  %93 = load i32, i32* %13, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %13, align 4
  %95 = zext i32 %93 to i64
  %96 = getelementptr inbounds i8*, i8** %92, i64 %95
  store i8* %91, i8** %96, align 8
  %97 = load i32, i32* %7, align 4
  %98 = load i8*, i8** %11, align 8
  %99 = zext i32 %97 to i64
  %100 = getelementptr inbounds i8, i8* %98, i64 %99
  store i8* %100, i8** %11, align 8
  br label %101

101:                                              ; preds = %90
  %102 = load i32, i32* %14, align 4
  %103 = add i32 %102, -1
  store i32 %103, i32* %14, align 4
  br label %87

104:                                              ; preds = %87
  br label %59

105:                                              ; preds = %59
  %106 = load i8**, i8*** %10, align 8
  ret i8** %106
}

; Function Attrs: noinline nounwind uwtable
define internal [64 x i16]** @alloc_barray(%struct.jpeg_common_struct.855* %0, i32 %1, i32 %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_common_struct.855*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.my_memory_mgr*, align 8
  %10 = alloca [64 x i16]**, align 8
  %11 = alloca [64 x i16]*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  store %struct.jpeg_common_struct.855* %0, %struct.jpeg_common_struct.855** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %16 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %5, align 8
  %17 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %16, i32 0, i32 1
  %18 = load %struct.jpeg_memory_mgr.857*, %struct.jpeg_memory_mgr.857** %17, align 8
  %19 = bitcast %struct.jpeg_memory_mgr.857* %18 to %struct.my_memory_mgr*
  store %struct.my_memory_mgr* %19, %struct.my_memory_mgr** %9, align 8
  %20 = load i32, i32* %7, align 4
  %21 = zext i32 %20 to i64
  %22 = mul i64 %21, 128
  %23 = udiv i64 999999976, %22
  store i64 %23, i64* %15, align 8
  %24 = load i64, i64* %15, align 8
  %25 = icmp sle i64 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %4
  %27 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %5, align 8
  %28 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %27, i32 0, i32 0
  %29 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %29, i32 0, i32 5
  store i32 69, i32* %30, align 8
  %31 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %5, align 8
  %32 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %31, i32 0, i32 0
  %33 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %33, i32 0, i32 0
  %35 = bitcast {}** %34 to void (%struct.jpeg_common_struct.855*)**
  %36 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %35, align 8
  %37 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %5, align 8
  call void %36(%struct.jpeg_common_struct.855* %37)
  br label %38

38:                                               ; preds = %26, %4
  %39 = load i64, i64* %15, align 8
  %40 = load i32, i32* %8, align 4
  %41 = zext i32 %40 to i64
  %42 = icmp slt i64 %39, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = load i64, i64* %15, align 8
  %45 = trunc i64 %44 to i32
  store i32 %45, i32* %12, align 4
  br label %48

46:                                               ; preds = %38
  %47 = load i32, i32* %8, align 4
  store i32 %47, i32* %12, align 4
  br label %48

48:                                               ; preds = %46, %43
  %49 = load i32, i32* %12, align 4
  %50 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %9, align 8
  %51 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %50, i32 0, i32 6
  store i32 %49, i32* %51, align 8
  %52 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %5, align 8
  %53 = load i32, i32* %6, align 4
  %54 = load i32, i32* %8, align 4
  %55 = zext i32 %54 to i64
  %56 = mul i64 %55, 8
  %57 = call i8* @alloc_small(%struct.jpeg_common_struct.855* %52, i32 %53, i64 %56)
  %58 = bitcast i8* %57 to [64 x i16]**
  store [64 x i16]** %58, [64 x i16]*** %10, align 8
  store i32 0, i32* %13, align 4
  br label %59

59:                                               ; preds = %105, %48
  %60 = load i32, i32* %13, align 4
  %61 = load i32, i32* %8, align 4
  %62 = icmp ult i32 %60, %61
  br i1 %62, label %63, label %106

63:                                               ; preds = %59
  %64 = load i32, i32* %12, align 4
  %65 = load i32, i32* %8, align 4
  %66 = load i32, i32* %13, align 4
  %67 = sub i32 %65, %66
  %68 = icmp ult i32 %64, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = load i32, i32* %12, align 4
  br label %75

71:                                               ; preds = %63
  %72 = load i32, i32* %8, align 4
  %73 = load i32, i32* %13, align 4
  %74 = sub i32 %72, %73
  br label %75

75:                                               ; preds = %71, %69
  %76 = phi i32 [ %70, %69 ], [ %74, %71 ]
  store i32 %76, i32* %12, align 4
  %77 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %5, align 8
  %78 = load i32, i32* %6, align 4
  %79 = load i32, i32* %12, align 4
  %80 = zext i32 %79 to i64
  %81 = load i32, i32* %7, align 4
  %82 = zext i32 %81 to i64
  %83 = mul i64 %80, %82
  %84 = mul i64 %83, 128
  %85 = call i8* @alloc_large(%struct.jpeg_common_struct.855* %77, i32 %78, i64 %84)
  %86 = bitcast i8* %85 to [64 x i16]*
  store [64 x i16]* %86, [64 x i16]** %11, align 8
  %87 = load i32, i32* %12, align 4
  store i32 %87, i32* %14, align 4
  br label %88

88:                                               ; preds = %102, %75
  %89 = load i32, i32* %14, align 4
  %90 = icmp ugt i32 %89, 0
  br i1 %90, label %91, label %105

91:                                               ; preds = %88
  %92 = load [64 x i16]*, [64 x i16]** %11, align 8
  %93 = load [64 x i16]**, [64 x i16]*** %10, align 8
  %94 = load i32, i32* %13, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %13, align 4
  %96 = zext i32 %94 to i64
  %97 = getelementptr inbounds [64 x i16]*, [64 x i16]** %93, i64 %96
  store [64 x i16]* %92, [64 x i16]** %97, align 8
  %98 = load i32, i32* %7, align 4
  %99 = load [64 x i16]*, [64 x i16]** %11, align 8
  %100 = zext i32 %98 to i64
  %101 = getelementptr inbounds [64 x i16], [64 x i16]* %99, i64 %100
  store [64 x i16]* %101, [64 x i16]** %11, align 8
  br label %102

102:                                              ; preds = %91
  %103 = load i32, i32* %14, align 4
  %104 = add i32 %103, -1
  store i32 %104, i32* %14, align 4
  br label %88

105:                                              ; preds = %88
  br label %59

106:                                              ; preds = %59
  %107 = load [64 x i16]**, [64 x i16]*** %10, align 8
  ret [64 x i16]** %107
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.jvirt_sarray_control* @request_virt_sarray(%struct.jpeg_common_struct.855* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) #0 {
  %7 = alloca %struct.jpeg_common_struct.855*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.my_memory_mgr*, align 8
  %14 = alloca %struct.jvirt_sarray_control*, align 8
  store %struct.jpeg_common_struct.855* %0, %struct.jpeg_common_struct.855** %7, align 8
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  %15 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %7, align 8
  %16 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %15, i32 0, i32 1
  %17 = load %struct.jpeg_memory_mgr.857*, %struct.jpeg_memory_mgr.857** %16, align 8
  %18 = bitcast %struct.jpeg_memory_mgr.857* %17 to %struct.my_memory_mgr*
  store %struct.my_memory_mgr* %18, %struct.my_memory_mgr** %13, align 8
  %19 = load i32, i32* %8, align 4
  %20 = icmp ne i32 %19, 1
  br i1 %20, label %21, label %40

21:                                               ; preds = %6
  %22 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %7, align 8
  %23 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %22, i32 0, i32 0
  %24 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %23, align 8
  %25 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %24, i32 0, i32 5
  store i32 12, i32* %25, align 8
  %26 = load i32, i32* %8, align 4
  %27 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %7, align 8
  %28 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %27, i32 0, i32 0
  %29 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %29, i32 0, i32 6
  %31 = bitcast %union.anon* %30 to [8 x i32]*
  %32 = getelementptr inbounds [8 x i32], [8 x i32]* %31, i64 0, i64 0
  store i32 %26, i32* %32, align 4
  %33 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %7, align 8
  %34 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %33, i32 0, i32 0
  %35 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %34, align 8
  %36 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %35, i32 0, i32 0
  %37 = bitcast {}** %36 to void (%struct.jpeg_common_struct.855*)**
  %38 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %37, align 8
  %39 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %7, align 8
  call void %38(%struct.jpeg_common_struct.855* %39)
  br label %40

40:                                               ; preds = %21, %6
  %41 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %7, align 8
  %42 = load i32, i32* %8, align 4
  %43 = call i8* @alloc_small(%struct.jpeg_common_struct.855* %41, i32 %42, i64 152)
  %44 = bitcast i8* %43 to %struct.jvirt_sarray_control*
  store %struct.jvirt_sarray_control* %44, %struct.jvirt_sarray_control** %14, align 8
  %45 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %14, align 8
  %46 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %45, i32 0, i32 0
  store i8** null, i8*** %46, align 8
  %47 = load i32, i32* %11, align 4
  %48 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %14, align 8
  %49 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %48, i32 0, i32 1
  store i32 %47, i32* %49, align 8
  %50 = load i32, i32* %10, align 4
  %51 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %14, align 8
  %52 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %51, i32 0, i32 2
  store i32 %50, i32* %52, align 4
  %53 = load i32, i32* %12, align 4
  %54 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %14, align 8
  %55 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %54, i32 0, i32 3
  store i32 %53, i32* %55, align 8
  %56 = load i32, i32* %9, align 4
  %57 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %14, align 8
  %58 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %57, i32 0, i32 8
  store i32 %56, i32* %58, align 4
  %59 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %14, align 8
  %60 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %59, i32 0, i32 10
  store i32 0, i32* %60, align 4
  %61 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %13, align 8
  %62 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %61, i32 0, i32 3
  %63 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %62, align 8
  %64 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %14, align 8
  %65 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %64, i32 0, i32 11
  store %struct.jvirt_sarray_control* %63, %struct.jvirt_sarray_control** %65, align 8
  %66 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %14, align 8
  %67 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %13, align 8
  %68 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %67, i32 0, i32 3
  store %struct.jvirt_sarray_control* %66, %struct.jvirt_sarray_control** %68, align 8
  %69 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %14, align 8
  ret %struct.jvirt_sarray_control* %69
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.jvirt_barray_control* @request_virt_barray(%struct.jpeg_common_struct.855* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) #0 {
  %7 = alloca %struct.jpeg_common_struct.855*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.my_memory_mgr*, align 8
  %14 = alloca %struct.jvirt_barray_control*, align 8
  store %struct.jpeg_common_struct.855* %0, %struct.jpeg_common_struct.855** %7, align 8
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  %15 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %7, align 8
  %16 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %15, i32 0, i32 1
  %17 = load %struct.jpeg_memory_mgr.857*, %struct.jpeg_memory_mgr.857** %16, align 8
  %18 = bitcast %struct.jpeg_memory_mgr.857* %17 to %struct.my_memory_mgr*
  store %struct.my_memory_mgr* %18, %struct.my_memory_mgr** %13, align 8
  %19 = load i32, i32* %8, align 4
  %20 = icmp ne i32 %19, 1
  br i1 %20, label %21, label %40

21:                                               ; preds = %6
  %22 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %7, align 8
  %23 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %22, i32 0, i32 0
  %24 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %23, align 8
  %25 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %24, i32 0, i32 5
  store i32 12, i32* %25, align 8
  %26 = load i32, i32* %8, align 4
  %27 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %7, align 8
  %28 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %27, i32 0, i32 0
  %29 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %29, i32 0, i32 6
  %31 = bitcast %union.anon* %30 to [8 x i32]*
  %32 = getelementptr inbounds [8 x i32], [8 x i32]* %31, i64 0, i64 0
  store i32 %26, i32* %32, align 4
  %33 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %7, align 8
  %34 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %33, i32 0, i32 0
  %35 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %34, align 8
  %36 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %35, i32 0, i32 0
  %37 = bitcast {}** %36 to void (%struct.jpeg_common_struct.855*)**
  %38 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %37, align 8
  %39 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %7, align 8
  call void %38(%struct.jpeg_common_struct.855* %39)
  br label %40

40:                                               ; preds = %21, %6
  %41 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %7, align 8
  %42 = load i32, i32* %8, align 4
  %43 = call i8* @alloc_small(%struct.jpeg_common_struct.855* %41, i32 %42, i64 152)
  %44 = bitcast i8* %43 to %struct.jvirt_barray_control*
  store %struct.jvirt_barray_control* %44, %struct.jvirt_barray_control** %14, align 8
  %45 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %14, align 8
  %46 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %45, i32 0, i32 0
  store [64 x i16]** null, [64 x i16]*** %46, align 8
  %47 = load i32, i32* %11, align 4
  %48 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %14, align 8
  %49 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %48, i32 0, i32 1
  store i32 %47, i32* %49, align 8
  %50 = load i32, i32* %10, align 4
  %51 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %14, align 8
  %52 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %51, i32 0, i32 2
  store i32 %50, i32* %52, align 4
  %53 = load i32, i32* %12, align 4
  %54 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %14, align 8
  %55 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %54, i32 0, i32 3
  store i32 %53, i32* %55, align 8
  %56 = load i32, i32* %9, align 4
  %57 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %14, align 8
  %58 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %57, i32 0, i32 8
  store i32 %56, i32* %58, align 4
  %59 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %14, align 8
  %60 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %59, i32 0, i32 10
  store i32 0, i32* %60, align 4
  %61 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %13, align 8
  %62 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %61, i32 0, i32 4
  %63 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %62, align 8
  %64 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %14, align 8
  %65 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %64, i32 0, i32 11
  store %struct.jvirt_barray_control* %63, %struct.jvirt_barray_control** %65, align 8
  %66 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %14, align 8
  %67 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %13, align 8
  %68 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %67, i32 0, i32 4
  store %struct.jvirt_barray_control* %66, %struct.jvirt_barray_control** %68, align 8
  %69 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %14, align 8
  ret %struct.jvirt_barray_control* %69
}

; Function Attrs: noinline nounwind uwtable
define internal void @realize_virt_arrays(%struct.jpeg_common_struct.855* %0) #0 {
  %2 = alloca %struct.jpeg_common_struct.855*, align 8
  %3 = alloca %struct.my_memory_mgr*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.jvirt_sarray_control*, align 8
  %10 = alloca %struct.jvirt_barray_control*, align 8
  store %struct.jpeg_common_struct.855* %0, %struct.jpeg_common_struct.855** %2, align 8
  %11 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %12 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %11, i32 0, i32 1
  %13 = load %struct.jpeg_memory_mgr.857*, %struct.jpeg_memory_mgr.857** %12, align 8
  %14 = bitcast %struct.jpeg_memory_mgr.857* %13 to %struct.my_memory_mgr*
  store %struct.my_memory_mgr* %14, %struct.my_memory_mgr** %3, align 8
  store i64 0, i64* %4, align 8
  store i64 0, i64* %5, align 8
  %15 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %16 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %15, i32 0, i32 3
  %17 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %16, align 8
  store %struct.jvirt_sarray_control* %17, %struct.jvirt_sarray_control** %9, align 8
  br label %18

18:                                               ; preds = %52, %1
  %19 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %20 = icmp ne %struct.jvirt_sarray_control* %19, null
  br i1 %20, label %21, label %56

21:                                               ; preds = %18
  %22 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %23 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %22, i32 0, i32 0
  %24 = load i8**, i8*** %23, align 8
  %25 = icmp eq i8** %24, null
  br i1 %25, label %26, label %51

26:                                               ; preds = %21
  %27 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %28 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = zext i32 %29 to i64
  %31 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %32 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %31, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = mul nsw i64 %30, %34
  %36 = mul i64 %35, 1
  %37 = load i64, i64* %4, align 8
  %38 = add i64 %37, %36
  store i64 %38, i64* %4, align 8
  %39 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %40 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %39, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = zext i32 %41 to i64
  %43 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %44 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %43, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = mul nsw i64 %42, %46
  %48 = mul i64 %47, 1
  %49 = load i64, i64* %5, align 8
  %50 = add i64 %49, %48
  store i64 %50, i64* %5, align 8
  br label %51

51:                                               ; preds = %26, %21
  br label %52

52:                                               ; preds = %51
  %53 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %54 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %53, i32 0, i32 11
  %55 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %54, align 8
  store %struct.jvirt_sarray_control* %55, %struct.jvirt_sarray_control** %9, align 8
  br label %18

56:                                               ; preds = %18
  %57 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %58 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %57, i32 0, i32 4
  %59 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %58, align 8
  store %struct.jvirt_barray_control* %59, %struct.jvirt_barray_control** %10, align 8
  br label %60

60:                                               ; preds = %94, %56
  %61 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %62 = icmp ne %struct.jvirt_barray_control* %61, null
  br i1 %62, label %63, label %98

63:                                               ; preds = %60
  %64 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %65 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %64, i32 0, i32 0
  %66 = load [64 x i16]**, [64 x i16]*** %65, align 8
  %67 = icmp eq [64 x i16]** %66, null
  br i1 %67, label %68, label %93

68:                                               ; preds = %63
  %69 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %70 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %69, i32 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = zext i32 %71 to i64
  %73 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %74 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %73, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = mul nsw i64 %72, %76
  %78 = mul i64 %77, 128
  %79 = load i64, i64* %4, align 8
  %80 = add i64 %79, %78
  store i64 %80, i64* %4, align 8
  %81 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %82 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %81, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = zext i32 %83 to i64
  %85 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %86 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %85, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i64
  %89 = mul nsw i64 %84, %88
  %90 = mul i64 %89, 128
  %91 = load i64, i64* %5, align 8
  %92 = add i64 %91, %90
  store i64 %92, i64* %5, align 8
  br label %93

93:                                               ; preds = %68, %63
  br label %94

94:                                               ; preds = %93
  %95 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %96 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %95, i32 0, i32 11
  %97 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %96, align 8
  store %struct.jvirt_barray_control* %97, %struct.jvirt_barray_control** %10, align 8
  br label %60

98:                                               ; preds = %60
  %99 = load i64, i64* %4, align 8
  %100 = icmp sle i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  br label %292

102:                                              ; preds = %98
  %103 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %104 = load i64, i64* %4, align 8
  %105 = load i64, i64* %5, align 8
  %106 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %107 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %106, i32 0, i32 5
  %108 = load i64, i64* %107, align 8
  %109 = call i64 bitcast (i64 (%struct.jpeg_common_struct.866*, i64, i64, i64)* @jpeg_mem_available to i64 (%struct.jpeg_common_struct.855*, i64, i64, i64)*)(%struct.jpeg_common_struct.855* %103, i64 %104, i64 %105, i64 %108)
  store i64 %109, i64* %6, align 8
  %110 = load i64, i64* %6, align 8
  %111 = load i64, i64* %5, align 8
  %112 = icmp sge i64 %110, %111
  br i1 %112, label %113, label %114

113:                                              ; preds = %102
  store i64 1000000000, i64* %8, align 8
  br label %122

114:                                              ; preds = %102
  %115 = load i64, i64* %6, align 8
  %116 = load i64, i64* %4, align 8
  %117 = sdiv i64 %115, %116
  store i64 %117, i64* %8, align 8
  %118 = load i64, i64* %8, align 8
  %119 = icmp sle i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %114
  store i64 1, i64* %8, align 8
  br label %121

121:                                              ; preds = %120, %114
  br label %122

122:                                              ; preds = %121, %113
  %123 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %124 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %123, i32 0, i32 3
  %125 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %124, align 8
  store %struct.jvirt_sarray_control* %125, %struct.jvirt_sarray_control** %9, align 8
  br label %126

126:                                              ; preds = %203, %122
  %127 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %128 = icmp ne %struct.jvirt_sarray_control* %127, null
  br i1 %128, label %129, label %207

129:                                              ; preds = %126
  %130 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %131 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %130, i32 0, i32 0
  %132 = load i8**, i8*** %131, align 8
  %133 = icmp eq i8** %132, null
  br i1 %133, label %134, label %202

134:                                              ; preds = %129
  %135 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %136 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %135, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  %138 = zext i32 %137 to i64
  %139 = sub nsw i64 %138, 1
  %140 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %141 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %140, i32 0, i32 3
  %142 = load i32, i32* %141, align 8
  %143 = zext i32 %142 to i64
  %144 = sdiv i64 %139, %143
  %145 = add nsw i64 %144, 1
  store i64 %145, i64* %7, align 8
  %146 = load i64, i64* %7, align 8
  %147 = load i64, i64* %8, align 8
  %148 = icmp sle i64 %146, %147
  br i1 %148, label %149, label %155

149:                                              ; preds = %134
  %150 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %151 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %150, i32 0, i32 1
  %152 = load i32, i32* %151, align 8
  %153 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %154 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %153, i32 0, i32 4
  store i32 %152, i32* %154, align 4
  br label %180

155:                                              ; preds = %134
  %156 = load i64, i64* %8, align 8
  %157 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %158 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %157, i32 0, i32 3
  %159 = load i32, i32* %158, align 8
  %160 = zext i32 %159 to i64
  %161 = mul nsw i64 %156, %160
  %162 = trunc i64 %161 to i32
  %163 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %164 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %163, i32 0, i32 4
  store i32 %162, i32* %164, align 4
  %165 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %166 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %167 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %166, i32 0, i32 12
  %168 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %169 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %168, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = zext i32 %170 to i64
  %172 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %173 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %172, i32 0, i32 2
  %174 = load i32, i32* %173, align 4
  %175 = zext i32 %174 to i64
  %176 = mul nsw i64 %171, %175
  %177 = mul nsw i64 %176, 1
  call void bitcast (void (%struct.jpeg_common_struct.866*, %struct.backing_store_struct.873*, i64)* @jpeg_open_backing_store to void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*, i64)*)(%struct.jpeg_common_struct.855* %165, %struct.backing_store_struct* %167, i64 %177)
  %178 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %179 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %178, i32 0, i32 10
  store i32 1, i32* %179, align 4
  br label %180

180:                                              ; preds = %155, %149
  %181 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %182 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %183 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %182, i32 0, i32 2
  %184 = load i32, i32* %183, align 4
  %185 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %186 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %185, i32 0, i32 4
  %187 = load i32, i32* %186, align 4
  %188 = call i8** @alloc_sarray(%struct.jpeg_common_struct.855* %181, i32 1, i32 %184, i32 %187)
  %189 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %190 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %189, i32 0, i32 0
  store i8** %188, i8*** %190, align 8
  %191 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %192 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %191, i32 0, i32 6
  %193 = load i32, i32* %192, align 8
  %194 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %195 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %194, i32 0, i32 5
  store i32 %193, i32* %195, align 8
  %196 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %197 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %196, i32 0, i32 6
  store i32 0, i32* %197, align 4
  %198 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %199 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %198, i32 0, i32 7
  store i32 0, i32* %199, align 8
  %200 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %201 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %200, i32 0, i32 9
  store i32 0, i32* %201, align 8
  br label %202

202:                                              ; preds = %180, %129
  br label %203

203:                                              ; preds = %202
  %204 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %205 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %204, i32 0, i32 11
  %206 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %205, align 8
  store %struct.jvirt_sarray_control* %206, %struct.jvirt_sarray_control** %9, align 8
  br label %126

207:                                              ; preds = %126
  %208 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %209 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %208, i32 0, i32 4
  %210 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %209, align 8
  store %struct.jvirt_barray_control* %210, %struct.jvirt_barray_control** %10, align 8
  br label %211

211:                                              ; preds = %288, %207
  %212 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %213 = icmp ne %struct.jvirt_barray_control* %212, null
  br i1 %213, label %214, label %292

214:                                              ; preds = %211
  %215 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %216 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %215, i32 0, i32 0
  %217 = load [64 x i16]**, [64 x i16]*** %216, align 8
  %218 = icmp eq [64 x i16]** %217, null
  br i1 %218, label %219, label %287

219:                                              ; preds = %214
  %220 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %221 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %220, i32 0, i32 1
  %222 = load i32, i32* %221, align 8
  %223 = zext i32 %222 to i64
  %224 = sub nsw i64 %223, 1
  %225 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %226 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %225, i32 0, i32 3
  %227 = load i32, i32* %226, align 8
  %228 = zext i32 %227 to i64
  %229 = sdiv i64 %224, %228
  %230 = add nsw i64 %229, 1
  store i64 %230, i64* %7, align 8
  %231 = load i64, i64* %7, align 8
  %232 = load i64, i64* %8, align 8
  %233 = icmp sle i64 %231, %232
  br i1 %233, label %234, label %240

234:                                              ; preds = %219
  %235 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %236 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %235, i32 0, i32 1
  %237 = load i32, i32* %236, align 8
  %238 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %239 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %238, i32 0, i32 4
  store i32 %237, i32* %239, align 4
  br label %265

240:                                              ; preds = %219
  %241 = load i64, i64* %8, align 8
  %242 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %243 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %242, i32 0, i32 3
  %244 = load i32, i32* %243, align 8
  %245 = zext i32 %244 to i64
  %246 = mul nsw i64 %241, %245
  %247 = trunc i64 %246 to i32
  %248 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %249 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %248, i32 0, i32 4
  store i32 %247, i32* %249, align 4
  %250 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %251 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %252 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %251, i32 0, i32 12
  %253 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %254 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %253, i32 0, i32 1
  %255 = load i32, i32* %254, align 8
  %256 = zext i32 %255 to i64
  %257 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %258 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %257, i32 0, i32 2
  %259 = load i32, i32* %258, align 4
  %260 = zext i32 %259 to i64
  %261 = mul nsw i64 %256, %260
  %262 = mul nsw i64 %261, 128
  call void bitcast (void (%struct.jpeg_common_struct.866*, %struct.backing_store_struct.873*, i64)* @jpeg_open_backing_store to void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*, i64)*)(%struct.jpeg_common_struct.855* %250, %struct.backing_store_struct* %252, i64 %262)
  %263 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %264 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %263, i32 0, i32 10
  store i32 1, i32* %264, align 4
  br label %265

265:                                              ; preds = %240, %234
  %266 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %267 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %268 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %267, i32 0, i32 2
  %269 = load i32, i32* %268, align 4
  %270 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %271 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %270, i32 0, i32 4
  %272 = load i32, i32* %271, align 4
  %273 = call [64 x i16]** @alloc_barray(%struct.jpeg_common_struct.855* %266, i32 1, i32 %269, i32 %272)
  %274 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %275 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %274, i32 0, i32 0
  store [64 x i16]** %273, [64 x i16]*** %275, align 8
  %276 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8
  %277 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %276, i32 0, i32 6
  %278 = load i32, i32* %277, align 8
  %279 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %280 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %279, i32 0, i32 5
  store i32 %278, i32* %280, align 8
  %281 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %282 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %281, i32 0, i32 6
  store i32 0, i32* %282, align 4
  %283 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %284 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %283, i32 0, i32 7
  store i32 0, i32* %284, align 8
  %285 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %286 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %285, i32 0, i32 9
  store i32 0, i32* %286, align 8
  br label %287

287:                                              ; preds = %265, %214
  br label %288

288:                                              ; preds = %287
  %289 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %290 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %289, i32 0, i32 11
  %291 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %290, align 8
  store %struct.jvirt_barray_control* %291, %struct.jvirt_barray_control** %10, align 8
  br label %211

292:                                              ; preds = %211, %101
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i8** @access_virt_sarray(%struct.jpeg_common_struct.855* %0, %struct.jvirt_sarray_control* %1, i32 %2, i32 %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_common_struct.855*, align 8
  %7 = alloca %struct.jvirt_sarray_control*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store %struct.jpeg_common_struct.855* %0, %struct.jpeg_common_struct.855** %6, align 8
  store %struct.jvirt_sarray_control* %1, %struct.jvirt_sarray_control** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %15 = load i32, i32* %8, align 4
  %16 = load i32, i32* %9, align 4
  %17 = add i32 %15, %16
  store i32 %17, i32* %11, align 4
  %18 = load i32, i32* %11, align 4
  %19 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %20 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp ugt i32 %18, %21
  br i1 %22, label %34, label %23

23:                                               ; preds = %5
  %24 = load i32, i32* %9, align 4
  %25 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %26 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %25, i32 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = icmp ugt i32 %24, %27
  br i1 %28, label %34, label %29

29:                                               ; preds = %23
  %30 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %31 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %30, i32 0, i32 0
  %32 = load i8**, i8*** %31, align 8
  %33 = icmp eq i8** %32, null
  br i1 %33, label %34, label %46

34:                                               ; preds = %29, %23, %5
  %35 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %36 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %35, i32 0, i32 0
  %37 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %37, i32 0, i32 5
  store i32 20, i32* %38, align 8
  %39 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %40 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %39, i32 0, i32 0
  %41 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %41, i32 0, i32 0
  %43 = bitcast {}** %42 to void (%struct.jpeg_common_struct.855*)**
  %44 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %43, align 8
  %45 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  call void %44(%struct.jpeg_common_struct.855* %45)
  br label %46

46:                                               ; preds = %34, %29
  %47 = load i32, i32* %8, align 4
  %48 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %49 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %48, i32 0, i32 6
  %50 = load i32, i32* %49, align 4
  %51 = icmp ult i32 %47, %50
  br i1 %51, label %62, label %52

52:                                               ; preds = %46
  %53 = load i32, i32* %11, align 4
  %54 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %55 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %54, i32 0, i32 6
  %56 = load i32, i32* %55, align 4
  %57 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %58 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %57, i32 0, i32 4
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %56, %59
  %61 = icmp ugt i32 %53, %60
  br i1 %61, label %62, label %118

62:                                               ; preds = %52, %46
  %63 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %64 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %63, i32 0, i32 10
  %65 = load i32, i32* %64, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %79, label %67

67:                                               ; preds = %62
  %68 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %69 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %68, i32 0, i32 0
  %70 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %69, align 8
  %71 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %70, i32 0, i32 5
  store i32 68, i32* %71, align 8
  %72 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %73 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %72, i32 0, i32 0
  %74 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %73, align 8
  %75 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %74, i32 0, i32 0
  %76 = bitcast {}** %75 to void (%struct.jpeg_common_struct.855*)**
  %77 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %76, align 8
  %78 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  call void %77(%struct.jpeg_common_struct.855* %78)
  br label %79

79:                                               ; preds = %67, %62
  %80 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %81 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %80, i32 0, i32 9
  %82 = load i32, i32* %81, align 8
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %89

84:                                               ; preds = %79
  %85 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %86 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  call void @do_sarray_io(%struct.jpeg_common_struct.855* %85, %struct.jvirt_sarray_control* %86, i32 1)
  %87 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %88 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %87, i32 0, i32 9
  store i32 0, i32* %88, align 8
  br label %89

89:                                               ; preds = %84, %79
  %90 = load i32, i32* %8, align 4
  %91 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %92 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %91, i32 0, i32 6
  %93 = load i32, i32* %92, align 4
  %94 = icmp ugt i32 %90, %93
  br i1 %94, label %95, label %99

95:                                               ; preds = %89
  %96 = load i32, i32* %8, align 4
  %97 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %98 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %97, i32 0, i32 6
  store i32 %96, i32* %98, align 4
  br label %115

99:                                               ; preds = %89
  %100 = load i32, i32* %11, align 4
  %101 = zext i32 %100 to i64
  %102 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %103 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %102, i32 0, i32 4
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i64
  %106 = sub nsw i64 %101, %105
  store i64 %106, i64* %13, align 8
  %107 = load i64, i64* %13, align 8
  %108 = icmp slt i64 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %99
  store i64 0, i64* %13, align 8
  br label %110

110:                                              ; preds = %109, %99
  %111 = load i64, i64* %13, align 8
  %112 = trunc i64 %111 to i32
  %113 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %114 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %113, i32 0, i32 6
  store i32 %112, i32* %114, align 4
  br label %115

115:                                              ; preds = %110, %95
  %116 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %117 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  call void @do_sarray_io(%struct.jpeg_common_struct.855* %116, %struct.jvirt_sarray_control* %117, i32 0)
  br label %118

118:                                              ; preds = %115, %52
  %119 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %120 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %119, i32 0, i32 7
  %121 = load i32, i32* %120, align 8
  %122 = load i32, i32* %11, align 4
  %123 = icmp ult i32 %121, %122
  br i1 %123, label %124, label %212

124:                                              ; preds = %118
  %125 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %126 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %125, i32 0, i32 7
  %127 = load i32, i32* %126, align 8
  %128 = load i32, i32* %8, align 4
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %130, label %147

130:                                              ; preds = %124
  %131 = load i32, i32* %10, align 4
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %133, label %145

133:                                              ; preds = %130
  %134 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %135 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %134, i32 0, i32 0
  %136 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %135, align 8
  %137 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %136, i32 0, i32 5
  store i32 20, i32* %137, align 8
  %138 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %139 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %138, i32 0, i32 0
  %140 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %139, align 8
  %141 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %140, i32 0, i32 0
  %142 = bitcast {}** %141 to void (%struct.jpeg_common_struct.855*)**
  %143 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %142, align 8
  %144 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  call void %143(%struct.jpeg_common_struct.855* %144)
  br label %145

145:                                              ; preds = %133, %130
  %146 = load i32, i32* %8, align 4
  store i32 %146, i32* %12, align 4
  br label %151

147:                                              ; preds = %124
  %148 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %149 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %148, i32 0, i32 7
  %150 = load i32, i32* %149, align 8
  store i32 %150, i32* %12, align 4
  br label %151

151:                                              ; preds = %147, %145
  %152 = load i32, i32* %10, align 4
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %154, label %158

154:                                              ; preds = %151
  %155 = load i32, i32* %11, align 4
  %156 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %157 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %156, i32 0, i32 7
  store i32 %155, i32* %157, align 8
  br label %158

158:                                              ; preds = %154, %151
  %159 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %160 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %159, i32 0, i32 8
  %161 = load i32, i32* %160, align 4
  %162 = icmp ne i32 %161, 0
  br i1 %162, label %163, label %195

163:                                              ; preds = %158
  %164 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %165 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %164, i32 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = zext i32 %166 to i64
  %168 = mul i64 %167, 1
  store i64 %168, i64* %14, align 8
  %169 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %170 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %169, i32 0, i32 6
  %171 = load i32, i32* %170, align 4
  %172 = load i32, i32* %12, align 4
  %173 = sub i32 %172, %171
  store i32 %173, i32* %12, align 4
  %174 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %175 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %174, i32 0, i32 6
  %176 = load i32, i32* %175, align 4
  %177 = load i32, i32* %11, align 4
  %178 = sub i32 %177, %176
  store i32 %178, i32* %11, align 4
  br label %179

179:                                              ; preds = %183, %163
  %180 = load i32, i32* %12, align 4
  %181 = load i32, i32* %11, align 4
  %182 = icmp ult i32 %180, %181
  br i1 %182, label %183, label %194

183:                                              ; preds = %179
  %184 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %185 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %184, i32 0, i32 0
  %186 = load i8**, i8*** %185, align 8
  %187 = load i32, i32* %12, align 4
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds i8*, i8** %186, i64 %188
  %190 = load i8*, i8** %189, align 8
  %191 = load i64, i64* %14, align 8
  call void @jzero_far(i8* %190, i64 %191)
  %192 = load i32, i32* %12, align 4
  %193 = add i32 %192, 1
  store i32 %193, i32* %12, align 4
  br label %179

194:                                              ; preds = %179
  br label %211

195:                                              ; preds = %158
  %196 = load i32, i32* %10, align 4
  %197 = icmp ne i32 %196, 0
  br i1 %197, label %210, label %198

198:                                              ; preds = %195
  %199 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %200 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %199, i32 0, i32 0
  %201 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %200, align 8
  %202 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %201, i32 0, i32 5
  store i32 20, i32* %202, align 8
  %203 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %204 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %203, i32 0, i32 0
  %205 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %204, align 8
  %206 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %205, i32 0, i32 0
  %207 = bitcast {}** %206 to void (%struct.jpeg_common_struct.855*)**
  %208 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %207, align 8
  %209 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  call void %208(%struct.jpeg_common_struct.855* %209)
  br label %210

210:                                              ; preds = %198, %195
  br label %211

211:                                              ; preds = %210, %194
  br label %212

212:                                              ; preds = %211, %118
  %213 = load i32, i32* %10, align 4
  %214 = icmp ne i32 %213, 0
  br i1 %214, label %215, label %218

215:                                              ; preds = %212
  %216 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %217 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %216, i32 0, i32 9
  store i32 1, i32* %217, align 8
  br label %218

218:                                              ; preds = %215, %212
  %219 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %220 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %219, i32 0, i32 0
  %221 = load i8**, i8*** %220, align 8
  %222 = load i32, i32* %8, align 4
  %223 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %7, align 8
  %224 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %223, i32 0, i32 6
  %225 = load i32, i32* %224, align 4
  %226 = sub i32 %222, %225
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds i8*, i8** %221, i64 %227
  ret i8** %228
}

; Function Attrs: noinline nounwind uwtable
define internal [64 x i16]** @access_virt_barray(%struct.jpeg_common_struct.855* %0, %struct.jvirt_barray_control* %1, i32 %2, i32 %3, i32 %4) #0 {
  %6 = alloca %struct.jpeg_common_struct.855*, align 8
  %7 = alloca %struct.jvirt_barray_control*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store %struct.jpeg_common_struct.855* %0, %struct.jpeg_common_struct.855** %6, align 8
  store %struct.jvirt_barray_control* %1, %struct.jvirt_barray_control** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %15 = load i32, i32* %8, align 4
  %16 = load i32, i32* %9, align 4
  %17 = add i32 %15, %16
  store i32 %17, i32* %11, align 4
  %18 = load i32, i32* %11, align 4
  %19 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %20 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp ugt i32 %18, %21
  br i1 %22, label %34, label %23

23:                                               ; preds = %5
  %24 = load i32, i32* %9, align 4
  %25 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %26 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %25, i32 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = icmp ugt i32 %24, %27
  br i1 %28, label %34, label %29

29:                                               ; preds = %23
  %30 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %31 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %30, i32 0, i32 0
  %32 = load [64 x i16]**, [64 x i16]*** %31, align 8
  %33 = icmp eq [64 x i16]** %32, null
  br i1 %33, label %34, label %46

34:                                               ; preds = %29, %23, %5
  %35 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %36 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %35, i32 0, i32 0
  %37 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %37, i32 0, i32 5
  store i32 20, i32* %38, align 8
  %39 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %40 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %39, i32 0, i32 0
  %41 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %41, i32 0, i32 0
  %43 = bitcast {}** %42 to void (%struct.jpeg_common_struct.855*)**
  %44 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %43, align 8
  %45 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  call void %44(%struct.jpeg_common_struct.855* %45)
  br label %46

46:                                               ; preds = %34, %29
  %47 = load i32, i32* %8, align 4
  %48 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %49 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %48, i32 0, i32 6
  %50 = load i32, i32* %49, align 4
  %51 = icmp ult i32 %47, %50
  br i1 %51, label %62, label %52

52:                                               ; preds = %46
  %53 = load i32, i32* %11, align 4
  %54 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %55 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %54, i32 0, i32 6
  %56 = load i32, i32* %55, align 4
  %57 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %58 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %57, i32 0, i32 4
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %56, %59
  %61 = icmp ugt i32 %53, %60
  br i1 %61, label %62, label %118

62:                                               ; preds = %52, %46
  %63 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %64 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %63, i32 0, i32 10
  %65 = load i32, i32* %64, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %79, label %67

67:                                               ; preds = %62
  %68 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %69 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %68, i32 0, i32 0
  %70 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %69, align 8
  %71 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %70, i32 0, i32 5
  store i32 68, i32* %71, align 8
  %72 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %73 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %72, i32 0, i32 0
  %74 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %73, align 8
  %75 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %74, i32 0, i32 0
  %76 = bitcast {}** %75 to void (%struct.jpeg_common_struct.855*)**
  %77 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %76, align 8
  %78 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  call void %77(%struct.jpeg_common_struct.855* %78)
  br label %79

79:                                               ; preds = %67, %62
  %80 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %81 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %80, i32 0, i32 9
  %82 = load i32, i32* %81, align 8
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %89

84:                                               ; preds = %79
  %85 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %86 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  call void @do_barray_io(%struct.jpeg_common_struct.855* %85, %struct.jvirt_barray_control* %86, i32 1)
  %87 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %88 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %87, i32 0, i32 9
  store i32 0, i32* %88, align 8
  br label %89

89:                                               ; preds = %84, %79
  %90 = load i32, i32* %8, align 4
  %91 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %92 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %91, i32 0, i32 6
  %93 = load i32, i32* %92, align 4
  %94 = icmp ugt i32 %90, %93
  br i1 %94, label %95, label %99

95:                                               ; preds = %89
  %96 = load i32, i32* %8, align 4
  %97 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %98 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %97, i32 0, i32 6
  store i32 %96, i32* %98, align 4
  br label %115

99:                                               ; preds = %89
  %100 = load i32, i32* %11, align 4
  %101 = zext i32 %100 to i64
  %102 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %103 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %102, i32 0, i32 4
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i64
  %106 = sub nsw i64 %101, %105
  store i64 %106, i64* %13, align 8
  %107 = load i64, i64* %13, align 8
  %108 = icmp slt i64 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %99
  store i64 0, i64* %13, align 8
  br label %110

110:                                              ; preds = %109, %99
  %111 = load i64, i64* %13, align 8
  %112 = trunc i64 %111 to i32
  %113 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %114 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %113, i32 0, i32 6
  store i32 %112, i32* %114, align 4
  br label %115

115:                                              ; preds = %110, %95
  %116 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %117 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  call void @do_barray_io(%struct.jpeg_common_struct.855* %116, %struct.jvirt_barray_control* %117, i32 0)
  br label %118

118:                                              ; preds = %115, %52
  %119 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %120 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %119, i32 0, i32 7
  %121 = load i32, i32* %120, align 8
  %122 = load i32, i32* %11, align 4
  %123 = icmp ult i32 %121, %122
  br i1 %123, label %124, label %213

124:                                              ; preds = %118
  %125 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %126 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %125, i32 0, i32 7
  %127 = load i32, i32* %126, align 8
  %128 = load i32, i32* %8, align 4
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %130, label %147

130:                                              ; preds = %124
  %131 = load i32, i32* %10, align 4
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %133, label %145

133:                                              ; preds = %130
  %134 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %135 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %134, i32 0, i32 0
  %136 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %135, align 8
  %137 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %136, i32 0, i32 5
  store i32 20, i32* %137, align 8
  %138 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %139 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %138, i32 0, i32 0
  %140 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %139, align 8
  %141 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %140, i32 0, i32 0
  %142 = bitcast {}** %141 to void (%struct.jpeg_common_struct.855*)**
  %143 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %142, align 8
  %144 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  call void %143(%struct.jpeg_common_struct.855* %144)
  br label %145

145:                                              ; preds = %133, %130
  %146 = load i32, i32* %8, align 4
  store i32 %146, i32* %12, align 4
  br label %151

147:                                              ; preds = %124
  %148 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %149 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %148, i32 0, i32 7
  %150 = load i32, i32* %149, align 8
  store i32 %150, i32* %12, align 4
  br label %151

151:                                              ; preds = %147, %145
  %152 = load i32, i32* %10, align 4
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %154, label %158

154:                                              ; preds = %151
  %155 = load i32, i32* %11, align 4
  %156 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %157 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %156, i32 0, i32 7
  store i32 %155, i32* %157, align 8
  br label %158

158:                                              ; preds = %154, %151
  %159 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %160 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %159, i32 0, i32 8
  %161 = load i32, i32* %160, align 4
  %162 = icmp ne i32 %161, 0
  br i1 %162, label %163, label %196

163:                                              ; preds = %158
  %164 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %165 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %164, i32 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = zext i32 %166 to i64
  %168 = mul i64 %167, 128
  store i64 %168, i64* %14, align 8
  %169 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %170 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %169, i32 0, i32 6
  %171 = load i32, i32* %170, align 4
  %172 = load i32, i32* %12, align 4
  %173 = sub i32 %172, %171
  store i32 %173, i32* %12, align 4
  %174 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %175 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %174, i32 0, i32 6
  %176 = load i32, i32* %175, align 4
  %177 = load i32, i32* %11, align 4
  %178 = sub i32 %177, %176
  store i32 %178, i32* %11, align 4
  br label %179

179:                                              ; preds = %183, %163
  %180 = load i32, i32* %12, align 4
  %181 = load i32, i32* %11, align 4
  %182 = icmp ult i32 %180, %181
  br i1 %182, label %183, label %195

183:                                              ; preds = %179
  %184 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %185 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %184, i32 0, i32 0
  %186 = load [64 x i16]**, [64 x i16]*** %185, align 8
  %187 = load i32, i32* %12, align 4
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds [64 x i16]*, [64 x i16]** %186, i64 %188
  %190 = load [64 x i16]*, [64 x i16]** %189, align 8
  %191 = bitcast [64 x i16]* %190 to i8*
  %192 = load i64, i64* %14, align 8
  call void @jzero_far(i8* %191, i64 %192)
  %193 = load i32, i32* %12, align 4
  %194 = add i32 %193, 1
  store i32 %194, i32* %12, align 4
  br label %179

195:                                              ; preds = %179
  br label %212

196:                                              ; preds = %158
  %197 = load i32, i32* %10, align 4
  %198 = icmp ne i32 %197, 0
  br i1 %198, label %211, label %199

199:                                              ; preds = %196
  %200 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %201 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %200, i32 0, i32 0
  %202 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %201, align 8
  %203 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %202, i32 0, i32 5
  store i32 20, i32* %203, align 8
  %204 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  %205 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %204, i32 0, i32 0
  %206 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %205, align 8
  %207 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %206, i32 0, i32 0
  %208 = bitcast {}** %207 to void (%struct.jpeg_common_struct.855*)**
  %209 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %208, align 8
  %210 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %6, align 8
  call void %209(%struct.jpeg_common_struct.855* %210)
  br label %211

211:                                              ; preds = %199, %196
  br label %212

212:                                              ; preds = %211, %195
  br label %213

213:                                              ; preds = %212, %118
  %214 = load i32, i32* %10, align 4
  %215 = icmp ne i32 %214, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %213
  %217 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %218 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %217, i32 0, i32 9
  store i32 1, i32* %218, align 8
  br label %219

219:                                              ; preds = %216, %213
  %220 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %221 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %220, i32 0, i32 0
  %222 = load [64 x i16]**, [64 x i16]*** %221, align 8
  %223 = load i32, i32* %8, align 4
  %224 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %7, align 8
  %225 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %224, i32 0, i32 6
  %226 = load i32, i32* %225, align 4
  %227 = sub i32 %223, %226
  %228 = zext i32 %227 to i64
  %229 = getelementptr inbounds [64 x i16]*, [64 x i16]** %222, i64 %228
  ret [64 x i16]** %229
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_pool(%struct.jpeg_common_struct.855* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_common_struct.855*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.my_memory_mgr*, align 8
  %6 = alloca %union.small_pool_struct*, align 8
  %7 = alloca %union.large_pool_struct*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.jvirt_sarray_control*, align 8
  %10 = alloca %struct.jvirt_barray_control*, align 8
  %11 = alloca %union.large_pool_struct*, align 8
  %12 = alloca %union.small_pool_struct*, align 8
  store %struct.jpeg_common_struct.855* %0, %struct.jpeg_common_struct.855** %3, align 8
  store i32 %1, i32* %4, align 4
  %13 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %3, align 8
  %14 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %13, i32 0, i32 1
  %15 = load %struct.jpeg_memory_mgr.857*, %struct.jpeg_memory_mgr.857** %14, align 8
  %16 = bitcast %struct.jpeg_memory_mgr.857* %15 to %struct.my_memory_mgr*
  store %struct.my_memory_mgr* %16, %struct.my_memory_mgr** %5, align 8
  %17 = load i32, i32* %4, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %2
  %20 = load i32, i32* %4, align 4
  %21 = icmp sge i32 %20, 2
  br i1 %21, label %22, label %41

22:                                               ; preds = %19, %2
  %23 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %3, align 8
  %24 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %23, i32 0, i32 0
  %25 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %25, i32 0, i32 5
  store i32 12, i32* %26, align 8
  %27 = load i32, i32* %4, align 4
  %28 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %3, align 8
  %29 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %28, i32 0, i32 0
  %30 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %29, align 8
  %31 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %30, i32 0, i32 6
  %32 = bitcast %union.anon* %31 to [8 x i32]*
  %33 = getelementptr inbounds [8 x i32], [8 x i32]* %32, i64 0, i64 0
  store i32 %27, i32* %33, align 4
  %34 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %3, align 8
  %35 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %34, i32 0, i32 0
  %36 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %36, i32 0, i32 0
  %38 = bitcast {}** %37 to void (%struct.jpeg_common_struct.855*)**
  %39 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %38, align 8
  %40 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %3, align 8
  call void %39(%struct.jpeg_common_struct.855* %40)
  br label %41

41:                                               ; preds = %22, %19
  %42 = load i32, i32* %4, align 4
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %103

44:                                               ; preds = %41
  %45 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %5, align 8
  %46 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %45, i32 0, i32 3
  %47 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %46, align 8
  store %struct.jvirt_sarray_control* %47, %struct.jvirt_sarray_control** %9, align 8
  br label %48

48:                                               ; preds = %67, %44
  %49 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %50 = icmp ne %struct.jvirt_sarray_control* %49, null
  br i1 %50, label %51, label %71

51:                                               ; preds = %48
  %52 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %53 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %52, i32 0, i32 10
  %54 = load i32, i32* %53, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %66

56:                                               ; preds = %51
  %57 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %58 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %57, i32 0, i32 10
  store i32 0, i32* %58, align 4
  %59 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %60 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %59, i32 0, i32 12
  %61 = getelementptr inbounds %struct.backing_store_struct, %struct.backing_store_struct* %60, i32 0, i32 2
  %62 = load void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*)*, void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*)** %61, align 8
  %63 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %3, align 8
  %64 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %65 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %64, i32 0, i32 12
  call void %62(%struct.jpeg_common_struct.855* %63, %struct.backing_store_struct* %65)
  br label %66

66:                                               ; preds = %56, %51
  br label %67

67:                                               ; preds = %66
  %68 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %9, align 8
  %69 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %68, i32 0, i32 11
  %70 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %69, align 8
  store %struct.jvirt_sarray_control* %70, %struct.jvirt_sarray_control** %9, align 8
  br label %48

71:                                               ; preds = %48
  %72 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %5, align 8
  %73 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %72, i32 0, i32 3
  store %struct.jvirt_sarray_control* null, %struct.jvirt_sarray_control** %73, align 8
  %74 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %5, align 8
  %75 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %74, i32 0, i32 4
  %76 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %75, align 8
  store %struct.jvirt_barray_control* %76, %struct.jvirt_barray_control** %10, align 8
  br label %77

77:                                               ; preds = %96, %71
  %78 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %79 = icmp ne %struct.jvirt_barray_control* %78, null
  br i1 %79, label %80, label %100

80:                                               ; preds = %77
  %81 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %82 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %81, i32 0, i32 10
  %83 = load i32, i32* %82, align 4
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %95

85:                                               ; preds = %80
  %86 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %87 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %86, i32 0, i32 10
  store i32 0, i32* %87, align 4
  %88 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %89 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %88, i32 0, i32 12
  %90 = getelementptr inbounds %struct.backing_store_struct, %struct.backing_store_struct* %89, i32 0, i32 2
  %91 = load void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*)*, void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*)** %90, align 8
  %92 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %3, align 8
  %93 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %94 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %93, i32 0, i32 12
  call void %91(%struct.jpeg_common_struct.855* %92, %struct.backing_store_struct* %94)
  br label %95

95:                                               ; preds = %85, %80
  br label %96

96:                                               ; preds = %95
  %97 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %10, align 8
  %98 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %97, i32 0, i32 11
  %99 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %98, align 8
  store %struct.jvirt_barray_control* %99, %struct.jvirt_barray_control** %10, align 8
  br label %77

100:                                              ; preds = %77
  %101 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %5, align 8
  %102 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %101, i32 0, i32 4
  store %struct.jvirt_barray_control* null, %struct.jvirt_barray_control** %102, align 8
  br label %103

103:                                              ; preds = %100, %41
  %104 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %5, align 8
  %105 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %104, i32 0, i32 2
  %106 = load i32, i32* %4, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [2 x %union.large_pool_struct*], [2 x %union.large_pool_struct*]* %105, i64 0, i64 %107
  %109 = load %union.large_pool_struct*, %union.large_pool_struct** %108, align 8
  store %union.large_pool_struct* %109, %union.large_pool_struct** %7, align 8
  %110 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %5, align 8
  %111 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %110, i32 0, i32 2
  %112 = load i32, i32* %4, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [2 x %union.large_pool_struct*], [2 x %union.large_pool_struct*]* %111, i64 0, i64 %113
  store %union.large_pool_struct* null, %union.large_pool_struct** %114, align 8
  br label %115

115:                                              ; preds = %118, %103
  %116 = load %union.large_pool_struct*, %union.large_pool_struct** %7, align 8
  %117 = icmp ne %union.large_pool_struct* %116, null
  br i1 %117, label %118, label %143

118:                                              ; preds = %115
  %119 = load %union.large_pool_struct*, %union.large_pool_struct** %7, align 8
  %120 = bitcast %union.large_pool_struct* %119 to %struct.anon.0*
  %121 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %120, i32 0, i32 0
  %122 = load %union.large_pool_struct*, %union.large_pool_struct** %121, align 8
  store %union.large_pool_struct* %122, %union.large_pool_struct** %11, align 8
  %123 = load %union.large_pool_struct*, %union.large_pool_struct** %7, align 8
  %124 = bitcast %union.large_pool_struct* %123 to %struct.anon.0*
  %125 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %124, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = load %union.large_pool_struct*, %union.large_pool_struct** %7, align 8
  %128 = bitcast %union.large_pool_struct* %127 to %struct.anon.0*
  %129 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %128, i32 0, i32 2
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %126, %130
  %132 = add i64 %131, 24
  store i64 %132, i64* %8, align 8
  %133 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %3, align 8
  %134 = load %union.large_pool_struct*, %union.large_pool_struct** %7, align 8
  %135 = bitcast %union.large_pool_struct* %134 to i8*
  %136 = load i64, i64* %8, align 8
  call void bitcast (void (%struct.jpeg_common_struct.866*, i8*, i64)* @jpeg_free_large to void (%struct.jpeg_common_struct.855*, i8*, i64)*)(%struct.jpeg_common_struct.855* %133, i8* %135, i64 %136)
  %137 = load i64, i64* %8, align 8
  %138 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %5, align 8
  %139 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %138, i32 0, i32 5
  %140 = load i64, i64* %139, align 8
  %141 = sub i64 %140, %137
  store i64 %141, i64* %139, align 8
  %142 = load %union.large_pool_struct*, %union.large_pool_struct** %11, align 8
  store %union.large_pool_struct* %142, %union.large_pool_struct** %7, align 8
  br label %115

143:                                              ; preds = %115
  %144 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %5, align 8
  %145 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %144, i32 0, i32 1
  %146 = load i32, i32* %4, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [2 x %union.small_pool_struct*], [2 x %union.small_pool_struct*]* %145, i64 0, i64 %147
  %149 = load %union.small_pool_struct*, %union.small_pool_struct** %148, align 8
  store %union.small_pool_struct* %149, %union.small_pool_struct** %6, align 8
  %150 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %5, align 8
  %151 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %150, i32 0, i32 1
  %152 = load i32, i32* %4, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [2 x %union.small_pool_struct*], [2 x %union.small_pool_struct*]* %151, i64 0, i64 %153
  store %union.small_pool_struct* null, %union.small_pool_struct** %154, align 8
  br label %155

155:                                              ; preds = %158, %143
  %156 = load %union.small_pool_struct*, %union.small_pool_struct** %6, align 8
  %157 = icmp ne %union.small_pool_struct* %156, null
  br i1 %157, label %158, label %183

158:                                              ; preds = %155
  %159 = load %union.small_pool_struct*, %union.small_pool_struct** %6, align 8
  %160 = bitcast %union.small_pool_struct* %159 to %struct.anon*
  %161 = getelementptr inbounds %struct.anon, %struct.anon* %160, i32 0, i32 0
  %162 = load %union.small_pool_struct*, %union.small_pool_struct** %161, align 8
  store %union.small_pool_struct* %162, %union.small_pool_struct** %12, align 8
  %163 = load %union.small_pool_struct*, %union.small_pool_struct** %6, align 8
  %164 = bitcast %union.small_pool_struct* %163 to %struct.anon*
  %165 = getelementptr inbounds %struct.anon, %struct.anon* %164, i32 0, i32 1
  %166 = load i64, i64* %165, align 8
  %167 = load %union.small_pool_struct*, %union.small_pool_struct** %6, align 8
  %168 = bitcast %union.small_pool_struct* %167 to %struct.anon*
  %169 = getelementptr inbounds %struct.anon, %struct.anon* %168, i32 0, i32 2
  %170 = load i64, i64* %169, align 8
  %171 = add i64 %166, %170
  %172 = add i64 %171, 24
  store i64 %172, i64* %8, align 8
  %173 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %3, align 8
  %174 = load %union.small_pool_struct*, %union.small_pool_struct** %6, align 8
  %175 = bitcast %union.small_pool_struct* %174 to i8*
  %176 = load i64, i64* %8, align 8
  call void bitcast (void (%struct.jpeg_common_struct.866*, i8*, i64)* @jpeg_free_small to void (%struct.jpeg_common_struct.855*, i8*, i64)*)(%struct.jpeg_common_struct.855* %173, i8* %175, i64 %176)
  %177 = load i64, i64* %8, align 8
  %178 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %5, align 8
  %179 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %178, i32 0, i32 5
  %180 = load i64, i64* %179, align 8
  %181 = sub i64 %180, %177
  store i64 %181, i64* %179, align 8
  %182 = load %union.small_pool_struct*, %union.small_pool_struct** %12, align 8
  store %union.small_pool_struct* %182, %union.small_pool_struct** %6, align 8
  br label %155

183:                                              ; preds = %155
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @self_destruct(%struct.jpeg_common_struct.855* %0) #0 {
  %2 = alloca %struct.jpeg_common_struct.855*, align 8
  %3 = alloca i32, align 4
  store %struct.jpeg_common_struct.855* %0, %struct.jpeg_common_struct.855** %2, align 8
  store i32 1, i32* %3, align 4
  br label %4

4:                                                ; preds = %10, %1
  %5 = load i32, i32* %3, align 4
  %6 = icmp sge i32 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %4
  %8 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %9 = load i32, i32* %3, align 4
  call void @free_pool(%struct.jpeg_common_struct.855* %8, i32 %9)
  br label %10

10:                                               ; preds = %7
  %11 = load i32, i32* %3, align 4
  %12 = add nsw i32 %11, -1
  store i32 %12, i32* %3, align 4
  br label %4

13:                                               ; preds = %4
  %14 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %15 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %15, i32 0, i32 1
  %17 = load %struct.jpeg_memory_mgr.857*, %struct.jpeg_memory_mgr.857** %16, align 8
  %18 = bitcast %struct.jpeg_memory_mgr.857* %17 to i8*
  call void bitcast (void (%struct.jpeg_common_struct.866*, i8*, i64)* @jpeg_free_small to void (%struct.jpeg_common_struct.855*, i8*, i64)*)(%struct.jpeg_common_struct.855* %14, i8* %18, i64 160)
  %19 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %19, i32 0, i32 1
  store %struct.jpeg_memory_mgr.857* null, %struct.jpeg_memory_mgr.857** %20, align 8
  %21 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %2, align 8
  call void bitcast (void (%struct.jpeg_common_struct.866*)* @jpeg_mem_term to void (%struct.jpeg_common_struct.855*)*)(%struct.jpeg_common_struct.855* %21)
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #5

; Function Attrs: noinline nounwind uwtable
define internal void @do_barray_io(%struct.jpeg_common_struct.855* %0, %struct.jvirt_barray_control* %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_common_struct.855*, align 8
  %5 = alloca %struct.jvirt_barray_control*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %struct.jpeg_common_struct.855* %0, %struct.jpeg_common_struct.855** %4, align 8
  store %struct.jvirt_barray_control* %1, %struct.jvirt_barray_control** %5, align 8
  store i32 %2, i32* %6, align 4
  %13 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %14 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %13, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = mul i64 %16, 128
  store i64 %17, i64* %7, align 8
  %18 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %19 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %18, i32 0, i32 6
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %7, align 8
  %23 = mul nsw i64 %21, %22
  store i64 %23, i64* %8, align 8
  store i64 0, i64* %12, align 8
  br label %24

24:                                               ; preds = %148, %3
  %25 = load i64, i64* %12, align 8
  %26 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %27 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %26, i32 0, i32 4
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = icmp slt i64 %25, %29
  br i1 %30, label %31, label %155

31:                                               ; preds = %24
  %32 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %33 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %32, i32 0, i32 5
  %34 = load i32, i32* %33, align 8
  %35 = zext i32 %34 to i64
  %36 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %37 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %36, i32 0, i32 4
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = load i64, i64* %12, align 8
  %41 = sub nsw i64 %39, %40
  %42 = icmp slt i64 %35, %41
  br i1 %42, label %43, label %48

43:                                               ; preds = %31
  %44 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %45 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %44, i32 0, i32 5
  %46 = load i32, i32* %45, align 8
  %47 = zext i32 %46 to i64
  br label %55

48:                                               ; preds = %31
  %49 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %50 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %49, i32 0, i32 4
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = load i64, i64* %12, align 8
  %54 = sub nsw i64 %52, %53
  br label %55

55:                                               ; preds = %48, %43
  %56 = phi i64 [ %47, %43 ], [ %54, %48 ]
  store i64 %56, i64* %10, align 8
  %57 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %58 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %57, i32 0, i32 6
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = load i64, i64* %12, align 8
  %62 = add nsw i64 %60, %61
  store i64 %62, i64* %11, align 8
  %63 = load i64, i64* %10, align 8
  %64 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %65 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %64, i32 0, i32 7
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = load i64, i64* %11, align 8
  %69 = sub nsw i64 %67, %68
  %70 = icmp slt i64 %63, %69
  br i1 %70, label %71, label %73

71:                                               ; preds = %55
  %72 = load i64, i64* %10, align 8
  br label %80

73:                                               ; preds = %55
  %74 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %75 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %74, i32 0, i32 7
  %76 = load i32, i32* %75, align 8
  %77 = zext i32 %76 to i64
  %78 = load i64, i64* %11, align 8
  %79 = sub nsw i64 %77, %78
  br label %80

80:                                               ; preds = %73, %71
  %81 = phi i64 [ %72, %71 ], [ %79, %73 ]
  store i64 %81, i64* %10, align 8
  %82 = load i64, i64* %10, align 8
  %83 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %84 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %83, i32 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = zext i32 %85 to i64
  %87 = load i64, i64* %11, align 8
  %88 = sub nsw i64 %86, %87
  %89 = icmp slt i64 %82, %88
  br i1 %89, label %90, label %92

90:                                               ; preds = %80
  %91 = load i64, i64* %10, align 8
  br label %99

92:                                               ; preds = %80
  %93 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %94 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = zext i32 %95 to i64
  %97 = load i64, i64* %11, align 8
  %98 = sub nsw i64 %96, %97
  br label %99

99:                                               ; preds = %92, %90
  %100 = phi i64 [ %91, %90 ], [ %98, %92 ]
  store i64 %100, i64* %10, align 8
  %101 = load i64, i64* %10, align 8
  %102 = icmp sle i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %99
  br label %155

104:                                              ; preds = %99
  %105 = load i64, i64* %10, align 8
  %106 = load i64, i64* %7, align 8
  %107 = mul nsw i64 %105, %106
  store i64 %107, i64* %9, align 8
  %108 = load i32, i32* %6, align 4
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %110, label %127

110:                                              ; preds = %104
  %111 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %112 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %111, i32 0, i32 12
  %113 = getelementptr inbounds %struct.backing_store_struct, %struct.backing_store_struct* %112, i32 0, i32 1
  %114 = load void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*, i8*, i64, i64)*, void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*, i8*, i64, i64)** %113, align 8
  %115 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  %116 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %117 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %116, i32 0, i32 12
  %118 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %119 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %118, i32 0, i32 0
  %120 = load [64 x i16]**, [64 x i16]*** %119, align 8
  %121 = load i64, i64* %12, align 8
  %122 = getelementptr inbounds [64 x i16]*, [64 x i16]** %120, i64 %121
  %123 = load [64 x i16]*, [64 x i16]** %122, align 8
  %124 = bitcast [64 x i16]* %123 to i8*
  %125 = load i64, i64* %8, align 8
  %126 = load i64, i64* %9, align 8
  call void %114(%struct.jpeg_common_struct.855* %115, %struct.backing_store_struct* %117, i8* %124, i64 %125, i64 %126)
  br label %144

127:                                              ; preds = %104
  %128 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %129 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %128, i32 0, i32 12
  %130 = getelementptr inbounds %struct.backing_store_struct, %struct.backing_store_struct* %129, i32 0, i32 0
  %131 = load void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*, i8*, i64, i64)*, void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*, i8*, i64, i64)** %130, align 8
  %132 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  %133 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %134 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %133, i32 0, i32 12
  %135 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %136 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %135, i32 0, i32 0
  %137 = load [64 x i16]**, [64 x i16]*** %136, align 8
  %138 = load i64, i64* %12, align 8
  %139 = getelementptr inbounds [64 x i16]*, [64 x i16]** %137, i64 %138
  %140 = load [64 x i16]*, [64 x i16]** %139, align 8
  %141 = bitcast [64 x i16]* %140 to i8*
  %142 = load i64, i64* %8, align 8
  %143 = load i64, i64* %9, align 8
  call void %131(%struct.jpeg_common_struct.855* %132, %struct.backing_store_struct* %134, i8* %141, i64 %142, i64 %143)
  br label %144

144:                                              ; preds = %127, %110
  %145 = load i64, i64* %9, align 8
  %146 = load i64, i64* %8, align 8
  %147 = add nsw i64 %146, %145
  store i64 %147, i64* %8, align 8
  br label %148

148:                                              ; preds = %144
  %149 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %5, align 8
  %150 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %149, i32 0, i32 5
  %151 = load i32, i32* %150, align 8
  %152 = zext i32 %151 to i64
  %153 = load i64, i64* %12, align 8
  %154 = add nsw i64 %153, %152
  store i64 %154, i64* %12, align 8
  br label %24

155:                                              ; preds = %103, %24
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_sarray_io(%struct.jpeg_common_struct.855* %0, %struct.jvirt_sarray_control* %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_common_struct.855*, align 8
  %5 = alloca %struct.jvirt_sarray_control*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %struct.jpeg_common_struct.855* %0, %struct.jpeg_common_struct.855** %4, align 8
  store %struct.jvirt_sarray_control* %1, %struct.jvirt_sarray_control** %5, align 8
  store i32 %2, i32* %6, align 4
  %13 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %14 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %13, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = mul i64 %16, 1
  store i64 %17, i64* %7, align 8
  %18 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %19 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %18, i32 0, i32 6
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %7, align 8
  %23 = mul nsw i64 %21, %22
  store i64 %23, i64* %8, align 8
  store i64 0, i64* %12, align 8
  br label %24

24:                                               ; preds = %146, %3
  %25 = load i64, i64* %12, align 8
  %26 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %27 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %26, i32 0, i32 4
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = icmp slt i64 %25, %29
  br i1 %30, label %31, label %153

31:                                               ; preds = %24
  %32 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %33 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %32, i32 0, i32 5
  %34 = load i32, i32* %33, align 8
  %35 = zext i32 %34 to i64
  %36 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %37 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %36, i32 0, i32 4
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = load i64, i64* %12, align 8
  %41 = sub nsw i64 %39, %40
  %42 = icmp slt i64 %35, %41
  br i1 %42, label %43, label %48

43:                                               ; preds = %31
  %44 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %45 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %44, i32 0, i32 5
  %46 = load i32, i32* %45, align 8
  %47 = zext i32 %46 to i64
  br label %55

48:                                               ; preds = %31
  %49 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %50 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %49, i32 0, i32 4
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = load i64, i64* %12, align 8
  %54 = sub nsw i64 %52, %53
  br label %55

55:                                               ; preds = %48, %43
  %56 = phi i64 [ %47, %43 ], [ %54, %48 ]
  store i64 %56, i64* %10, align 8
  %57 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %58 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %57, i32 0, i32 6
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = load i64, i64* %12, align 8
  %62 = add nsw i64 %60, %61
  store i64 %62, i64* %11, align 8
  %63 = load i64, i64* %10, align 8
  %64 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %65 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %64, i32 0, i32 7
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = load i64, i64* %11, align 8
  %69 = sub nsw i64 %67, %68
  %70 = icmp slt i64 %63, %69
  br i1 %70, label %71, label %73

71:                                               ; preds = %55
  %72 = load i64, i64* %10, align 8
  br label %80

73:                                               ; preds = %55
  %74 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %75 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %74, i32 0, i32 7
  %76 = load i32, i32* %75, align 8
  %77 = zext i32 %76 to i64
  %78 = load i64, i64* %11, align 8
  %79 = sub nsw i64 %77, %78
  br label %80

80:                                               ; preds = %73, %71
  %81 = phi i64 [ %72, %71 ], [ %79, %73 ]
  store i64 %81, i64* %10, align 8
  %82 = load i64, i64* %10, align 8
  %83 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %84 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %83, i32 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = zext i32 %85 to i64
  %87 = load i64, i64* %11, align 8
  %88 = sub nsw i64 %86, %87
  %89 = icmp slt i64 %82, %88
  br i1 %89, label %90, label %92

90:                                               ; preds = %80
  %91 = load i64, i64* %10, align 8
  br label %99

92:                                               ; preds = %80
  %93 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %94 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = zext i32 %95 to i64
  %97 = load i64, i64* %11, align 8
  %98 = sub nsw i64 %96, %97
  br label %99

99:                                               ; preds = %92, %90
  %100 = phi i64 [ %91, %90 ], [ %98, %92 ]
  store i64 %100, i64* %10, align 8
  %101 = load i64, i64* %10, align 8
  %102 = icmp sle i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %99
  br label %153

104:                                              ; preds = %99
  %105 = load i64, i64* %10, align 8
  %106 = load i64, i64* %7, align 8
  %107 = mul nsw i64 %105, %106
  store i64 %107, i64* %9, align 8
  %108 = load i32, i32* %6, align 4
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %110, label %126

110:                                              ; preds = %104
  %111 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %112 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %111, i32 0, i32 12
  %113 = getelementptr inbounds %struct.backing_store_struct, %struct.backing_store_struct* %112, i32 0, i32 1
  %114 = load void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*, i8*, i64, i64)*, void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*, i8*, i64, i64)** %113, align 8
  %115 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  %116 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %117 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %116, i32 0, i32 12
  %118 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %119 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %118, i32 0, i32 0
  %120 = load i8**, i8*** %119, align 8
  %121 = load i64, i64* %12, align 8
  %122 = getelementptr inbounds i8*, i8** %120, i64 %121
  %123 = load i8*, i8** %122, align 8
  %124 = load i64, i64* %8, align 8
  %125 = load i64, i64* %9, align 8
  call void %114(%struct.jpeg_common_struct.855* %115, %struct.backing_store_struct* %117, i8* %123, i64 %124, i64 %125)
  br label %142

126:                                              ; preds = %104
  %127 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %128 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %127, i32 0, i32 12
  %129 = getelementptr inbounds %struct.backing_store_struct, %struct.backing_store_struct* %128, i32 0, i32 0
  %130 = load void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*, i8*, i64, i64)*, void (%struct.jpeg_common_struct.855*, %struct.backing_store_struct*, i8*, i64, i64)** %129, align 8
  %131 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %4, align 8
  %132 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %133 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %132, i32 0, i32 12
  %134 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %135 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %134, i32 0, i32 0
  %136 = load i8**, i8*** %135, align 8
  %137 = load i64, i64* %12, align 8
  %138 = getelementptr inbounds i8*, i8** %136, i64 %137
  %139 = load i8*, i8** %138, align 8
  %140 = load i64, i64* %8, align 8
  %141 = load i64, i64* %9, align 8
  call void %130(%struct.jpeg_common_struct.855* %131, %struct.backing_store_struct* %133, i8* %139, i64 %140, i64 %141)
  br label %142

142:                                              ; preds = %126, %110
  %143 = load i64, i64* %9, align 8
  %144 = load i64, i64* %8, align 8
  %145 = add nsw i64 %144, %143
  store i64 %145, i64* %8, align 8
  br label %146

146:                                              ; preds = %142
  %147 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8
  %148 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %147, i32 0, i32 5
  %149 = load i32, i32* %148, align 8
  %150 = zext i32 %149 to i64
  %151 = load i64, i64* %12, align 8
  %152 = add nsw i64 %151, %150
  store i64 %152, i64* %12, align 8
  br label %24

153:                                              ; preds = %103, %24
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @out_of_memory(%struct.jpeg_common_struct.855* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_common_struct.855*, align 8
  %4 = alloca i32, align 4
  store %struct.jpeg_common_struct.855* %0, %struct.jpeg_common_struct.855** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %3, align 8
  %6 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %5, i32 0, i32 0
  %7 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %7, i32 0, i32 5
  store i32 53, i32* %8, align 8
  %9 = load i32, i32* %4, align 4
  %10 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %10, i32 0, i32 0
  %12 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %12, i32 0, i32 6
  %14 = bitcast %union.anon* %13 to [8 x i32]*
  %15 = getelementptr inbounds [8 x i32], [8 x i32]* %14, i64 0, i64 0
  store i32 %9, i32* %15, align 4
  %16 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_common_struct.855, %struct.jpeg_common_struct.855* %16, i32 0, i32 0
  %18 = load %struct.jpeg_error_mgr.856*, %struct.jpeg_error_mgr.856** %17, align 8
  %19 = getelementptr inbounds %struct.jpeg_error_mgr.856, %struct.jpeg_error_mgr.856* %18, i32 0, i32 0
  %20 = bitcast {}** %19 to void (%struct.jpeg_common_struct.855*)**
  %21 = load void (%struct.jpeg_common_struct.855*)*, void (%struct.jpeg_common_struct.855*)** %20, align 8
  %22 = load %struct.jpeg_common_struct.855*, %struct.jpeg_common_struct.855** %3, align 8
  call void %21(%struct.jpeg_common_struct.855* %22)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @jpeg_get_small(%struct.jpeg_common_struct.866* %0, i64 %1) #0 {
  %3 = alloca %struct.jpeg_common_struct.866*, align 8
  %4 = alloca i64, align 8
  store %struct.jpeg_common_struct.866* %0, %struct.jpeg_common_struct.866** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i64, i64* %4, align 8
  %6 = call noalias i8* @malloc(i64 %5) #10
  ret i8* %6
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_free_small(%struct.jpeg_common_struct.866* %0, i8* %1, i64 %2) #0 {
  %4 = alloca %struct.jpeg_common_struct.866*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct.jpeg_common_struct.866* %0, %struct.jpeg_common_struct.866** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load i8*, i8** %5, align 8
  call void @free(i8* %7) #10
  ret void
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #5

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @jpeg_get_large(%struct.jpeg_common_struct.866* %0, i64 %1) #0 {
  %3 = alloca %struct.jpeg_common_struct.866*, align 8
  %4 = alloca i64, align 8
  store %struct.jpeg_common_struct.866* %0, %struct.jpeg_common_struct.866** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i64, i64* %4, align 8
  %6 = call noalias i8* @malloc(i64 %5) #10
  ret i8* %6
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_free_large(%struct.jpeg_common_struct.866* %0, i8* %1, i64 %2) #0 {
  %4 = alloca %struct.jpeg_common_struct.866*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct.jpeg_common_struct.866* %0, %struct.jpeg_common_struct.866** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load i8*, i8** %5, align 8
  call void @free(i8* %7) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @jpeg_mem_available(%struct.jpeg_common_struct.866* %0, i64 %1, i64 %2, i64 %3) #0 {
  %5 = alloca %struct.jpeg_common_struct.866*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %struct.jpeg_common_struct.866* %0, %struct.jpeg_common_struct.866** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load i64, i64* %7, align 8
  ret i64 %9
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_open_backing_store(%struct.jpeg_common_struct.866* %0, %struct.backing_store_struct.873* %1, i64 %2) #0 {
  %4 = alloca %struct.jpeg_common_struct.866*, align 8
  %5 = alloca %struct.backing_store_struct.873*, align 8
  %6 = alloca i64, align 8
  store %struct.jpeg_common_struct.866* %0, %struct.jpeg_common_struct.866** %4, align 8
  store %struct.backing_store_struct.873* %1, %struct.backing_store_struct.873** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %struct.jpeg_common_struct.866*, %struct.jpeg_common_struct.866** %4, align 8
  %8 = getelementptr inbounds %struct.jpeg_common_struct.866, %struct.jpeg_common_struct.866* %7, i32 0, i32 0
  %9 = load %struct.jpeg_error_mgr.867*, %struct.jpeg_error_mgr.867** %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_error_mgr.867, %struct.jpeg_error_mgr.867* %9, i32 0, i32 5
  store i32 48, i32* %10, align 8
  %11 = load %struct.jpeg_common_struct.866*, %struct.jpeg_common_struct.866** %4, align 8
  %12 = getelementptr inbounds %struct.jpeg_common_struct.866, %struct.jpeg_common_struct.866* %11, i32 0, i32 0
  %13 = load %struct.jpeg_error_mgr.867*, %struct.jpeg_error_mgr.867** %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_error_mgr.867, %struct.jpeg_error_mgr.867* %13, i32 0, i32 0
  %15 = load void (%struct.jpeg_common_struct.866*)*, void (%struct.jpeg_common_struct.866*)** %14, align 8
  %16 = load %struct.jpeg_common_struct.866*, %struct.jpeg_common_struct.866** %4, align 8
  call void %15(%struct.jpeg_common_struct.866* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @jpeg_mem_init(%struct.jpeg_common_struct.866* %0) #0 {
  %2 = alloca %struct.jpeg_common_struct.866*, align 8
  store %struct.jpeg_common_struct.866* %0, %struct.jpeg_common_struct.866** %2, align 8
  ret i64 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_mem_term(%struct.jpeg_common_struct.866* %0) #0 {
  %2 = alloca %struct.jpeg_common_struct.866*, align 8
  store %struct.jpeg_common_struct.866* %0, %struct.jpeg_common_struct.866** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_1pass_quantizer(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_cquantizer*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %4 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %4, i32 0, i32 1
  %6 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %6, i32 0, i32 0
  %8 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %7, align 8
  %9 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %10 = bitcast %struct.jpeg_decompress_struct.469* %9 to %struct.jpeg_common_struct*
  %11 = call i8* %8(%struct.jpeg_common_struct* %10, i32 1, i64 152)
  %12 = bitcast i8* %11 to %struct.my_cquantizer*
  store %struct.my_cquantizer* %12, %struct.my_cquantizer** %3, align 8
  %13 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %14 = bitcast %struct.my_cquantizer* %13 to %struct.jpeg_color_quantizer.487*
  %15 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %15, i32 0, i32 83
  store %struct.jpeg_color_quantizer.487* %14, %struct.jpeg_color_quantizer.487** %16, align 8
  %17 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %18 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %17, i32 0, i32 0
  %19 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %18, i32 0, i32 0
  store void (%struct.jpeg_decompress_struct.469*, i32)* @start_pass_1_quant, void (%struct.jpeg_decompress_struct.469*, i32)** %19, align 8
  %20 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %21 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %20, i32 0, i32 0
  %22 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %21, i32 0, i32 2
  %23 = bitcast {}** %22 to void (%struct.jpeg_decompress_struct.469*)**
  store void (%struct.jpeg_decompress_struct.469*)* @finish_pass_1_quant, void (%struct.jpeg_decompress_struct.469*)** %23, align 8
  %24 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %25 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %24, i32 0, i32 0
  %26 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %25, i32 0, i32 3
  %27 = bitcast {}** %26 to void (%struct.jpeg_decompress_struct.469*)**
  store void (%struct.jpeg_decompress_struct.469*)* @new_color_map_1_quant, void (%struct.jpeg_decompress_struct.469*)** %27, align 8
  %28 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %29 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %28, i32 0, i32 8
  %30 = getelementptr inbounds [4 x i16*], [4 x i16*]* %29, i64 0, i64 0
  store i16* null, i16** %30, align 8
  %31 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %32 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %31, i32 0, i32 7
  %33 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %32, i64 0, i64 0
  store [16 x i32]* null, [16 x i32]** %33, align 8
  %34 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %34, i32 0, i32 28
  %36 = load i32, i32* %35, align 8
  %37 = icmp sgt i32 %36, 4
  br i1 %37, label %38, label %56

38:                                               ; preds = %1
  %39 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %39, i32 0, i32 0
  %41 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %41, i32 0, i32 5
  store i32 54, i32* %42, align 8
  %43 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %43, i32 0, i32 0
  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i32 0, i32 6
  %47 = bitcast %union.anon* %46 to [8 x i32]*
  %48 = getelementptr inbounds [8 x i32], [8 x i32]* %47, i64 0, i64 0
  store i32 4, i32* %48, align 4
  %49 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %49, i32 0, i32 0
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %50, align 8
  %52 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i32 0, i32 0
  %53 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %52, align 8
  %54 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %55 = bitcast %struct.jpeg_decompress_struct.469* %54 to %struct.jpeg_common_struct*
  call void %53(%struct.jpeg_common_struct* %55)
  br label %56

56:                                               ; preds = %38, %1
  %57 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %58 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %57, i32 0, i32 22
  %59 = load i32, i32* %58, align 8
  %60 = icmp sgt i32 %59, 256
  br i1 %60, label %61, label %79

61:                                               ; preds = %56
  %62 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %62, i32 0, i32 0
  %64 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %63, align 8
  %65 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %64, i32 0, i32 5
  store i32 56, i32* %65, align 8
  %66 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %67 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %66, i32 0, i32 0
  %68 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %67, align 8
  %69 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %68, i32 0, i32 6
  %70 = bitcast %union.anon* %69 to [8 x i32]*
  %71 = getelementptr inbounds [8 x i32], [8 x i32]* %70, i64 0, i64 0
  store i32 256, i32* %71, align 4
  %72 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %73 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %72, i32 0, i32 0
  %74 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %73, align 8
  %75 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %74, i32 0, i32 0
  %76 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %75, align 8
  %77 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %78 = bitcast %struct.jpeg_decompress_struct.469* %77 to %struct.jpeg_common_struct*
  call void %76(%struct.jpeg_common_struct* %78)
  br label %79

79:                                               ; preds = %61, %56
  %80 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void @create_colormap(%struct.jpeg_decompress_struct.469* %80)
  %81 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void @create_colorindex(%struct.jpeg_decompress_struct.469* %81)
  %82 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %83 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %82, i32 0, i32 20
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 2
  br i1 %85, label %86, label %88

86:                                               ; preds = %79
  %87 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void @alloc_fs_workspace(%struct.jpeg_decompress_struct.469* %87)
  br label %88

88:                                               ; preds = %86, %79
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_1_quant(%struct.jpeg_decompress_struct.469* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.my_cquantizer*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %8, i32 0, i32 83
  %10 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %9, align 8
  %11 = bitcast %struct.jpeg_color_quantizer.487* %10 to %struct.my_cquantizer*
  store %struct.my_cquantizer* %11, %struct.my_cquantizer** %5, align 8
  %12 = load %struct.my_cquantizer*, %struct.my_cquantizer** %5, align 8
  %13 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %12, i32 0, i32 1
  %14 = load i8**, i8*** %13, align 8
  %15 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %15, i32 0, i32 32
  store i8** %14, i8*** %16, align 8
  %17 = load %struct.my_cquantizer*, %struct.my_cquantizer** %5, align 8
  %18 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %17, i32 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %20, i32 0, i32 31
  store i32 %19, i32* %21, align 4
  %22 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %22, i32 0, i32 20
  %24 = load i32, i32* %23, align 8
  switch i32 %24, label %109 [
    i32 0, label %25
    i32 1, label %39
    i32 2, label %70
  ]

25:                                               ; preds = %2
  %26 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %26, i32 0, i32 28
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 3
  br i1 %29, label %30, label %34

30:                                               ; preds = %25
  %31 = load %struct.my_cquantizer*, %struct.my_cquantizer** %5, align 8
  %32 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %31, i32 0, i32 0
  %33 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %32, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)* @color_quantize3, void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)** %33, align 8
  br label %38

34:                                               ; preds = %25
  %35 = load %struct.my_cquantizer*, %struct.my_cquantizer** %5, align 8
  %36 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %35, i32 0, i32 0
  %37 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %36, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)* @color_quantize, void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)** %37, align 8
  br label %38

38:                                               ; preds = %34, %30
  br label %121

39:                                               ; preds = %2
  %40 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %40, i32 0, i32 28
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 3
  br i1 %43, label %44, label %48

44:                                               ; preds = %39
  %45 = load %struct.my_cquantizer*, %struct.my_cquantizer** %5, align 8
  %46 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %45, i32 0, i32 0
  %47 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %46, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)* @quantize3_ord_dither, void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)** %47, align 8
  br label %52

48:                                               ; preds = %39
  %49 = load %struct.my_cquantizer*, %struct.my_cquantizer** %5, align 8
  %50 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %49, i32 0, i32 0
  %51 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %50, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)* @quantize_ord_dither, void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)** %51, align 8
  br label %52

52:                                               ; preds = %48, %44
  %53 = load %struct.my_cquantizer*, %struct.my_cquantizer** %5, align 8
  %54 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %53, i32 0, i32 6
  store i32 0, i32* %54, align 4
  %55 = load %struct.my_cquantizer*, %struct.my_cquantizer** %5, align 8
  %56 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %55, i32 0, i32 4
  %57 = load i32, i32* %56, align 8
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %52
  %60 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  call void @create_colorindex(%struct.jpeg_decompress_struct.469* %60)
  br label %61

61:                                               ; preds = %59, %52
  %62 = load %struct.my_cquantizer*, %struct.my_cquantizer** %5, align 8
  %63 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %62, i32 0, i32 7
  %64 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %63, i64 0, i64 0
  %65 = load [16 x i32]*, [16 x i32]** %64, align 8
  %66 = icmp eq [16 x i32]* %65, null
  br i1 %66, label %67, label %69

67:                                               ; preds = %61
  %68 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  call void @create_odither_tables(%struct.jpeg_decompress_struct.469* %68)
  br label %69

69:                                               ; preds = %67, %61
  br label %121

70:                                               ; preds = %2
  %71 = load %struct.my_cquantizer*, %struct.my_cquantizer** %5, align 8
  %72 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %71, i32 0, i32 0
  %73 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %72, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)* @quantize_fs_dither, void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)** %73, align 8
  %74 = load %struct.my_cquantizer*, %struct.my_cquantizer** %5, align 8
  %75 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %74, i32 0, i32 9
  store i32 0, i32* %75, align 8
  %76 = load %struct.my_cquantizer*, %struct.my_cquantizer** %5, align 8
  %77 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %76, i32 0, i32 8
  %78 = getelementptr inbounds [4 x i16*], [4 x i16*]* %77, i64 0, i64 0
  %79 = load i16*, i16** %78, align 8
  %80 = icmp eq i16* %79, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %70
  %82 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  call void @alloc_fs_workspace(%struct.jpeg_decompress_struct.469* %82)
  br label %83

83:                                               ; preds = %81, %70
  %84 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %85 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %84, i32 0, i32 26
  %86 = load i32, i32* %85, align 8
  %87 = add i32 %86, 2
  %88 = zext i32 %87 to i64
  %89 = mul i64 %88, 2
  store i64 %89, i64* %6, align 8
  store i32 0, i32* %7, align 4
  br label %90

90:                                               ; preds = %105, %83
  %91 = load i32, i32* %7, align 4
  %92 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %93 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %92, i32 0, i32 28
  %94 = load i32, i32* %93, align 8
  %95 = icmp slt i32 %91, %94
  br i1 %95, label %96, label %108

96:                                               ; preds = %90
  %97 = load %struct.my_cquantizer*, %struct.my_cquantizer** %5, align 8
  %98 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %97, i32 0, i32 8
  %99 = load i32, i32* %7, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [4 x i16*], [4 x i16*]* %98, i64 0, i64 %100
  %102 = load i16*, i16** %101, align 8
  %103 = bitcast i16* %102 to i8*
  %104 = load i64, i64* %6, align 8
  call void @jzero_far(i8* %103, i64 %104)
  br label %105

105:                                              ; preds = %96
  %106 = load i32, i32* %7, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %7, align 4
  br label %90

108:                                              ; preds = %90
  br label %121

109:                                              ; preds = %2
  %110 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %111 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %110, i32 0, i32 0
  %112 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %111, align 8
  %113 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %112, i32 0, i32 5
  store i32 47, i32* %113, align 8
  %114 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %115 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %114, i32 0, i32 0
  %116 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %115, align 8
  %117 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %116, i32 0, i32 0
  %118 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %117, align 8
  %119 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %120 = bitcast %struct.jpeg_decompress_struct.469* %119 to %struct.jpeg_common_struct*
  call void %118(%struct.jpeg_common_struct* %120)
  br label %121

121:                                              ; preds = %109, %108, %69, %38
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_pass_1_quant(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @new_color_map_1_quant(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %3 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %3, i32 0, i32 0
  %5 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %4, align 8
  %6 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %5, i32 0, i32 5
  store i32 45, i32* %6, align 8
  %7 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %7, i32 0, i32 0
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i32 0, i32 0
  %11 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %10, align 8
  %12 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %13 = bitcast %struct.jpeg_decompress_struct.469* %12 to %struct.jpeg_common_struct*
  call void %11(%struct.jpeg_common_struct* %13)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @create_colormap(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_cquantizer*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %15 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %15, i32 0, i32 83
  %17 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %16, align 8
  %18 = bitcast %struct.jpeg_color_quantizer.487* %17 to %struct.my_cquantizer*
  store %struct.my_cquantizer* %18, %struct.my_cquantizer** %3, align 8
  %19 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %20 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %21 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %20, i32 0, i32 5
  %22 = getelementptr inbounds [4 x i32], [4 x i32]* %21, i64 0, i64 0
  %23 = call i32 @select_ncolors(%struct.jpeg_decompress_struct.469* %19, i32* %22)
  store i32 %23, i32* %5, align 4
  %24 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %24, i32 0, i32 28
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 3
  br i1 %27, label %28, label %69

28:                                               ; preds = %1
  br label %29

29:                                               ; preds = %28
  %30 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %30, i32 0, i32 0
  %32 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %31, align 8
  %33 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %32, i32 0, i32 6
  %34 = bitcast %union.anon* %33 to [8 x i32]*
  %35 = getelementptr inbounds [8 x i32], [8 x i32]* %34, i64 0, i64 0
  store i32* %35, i32** %14, align 8
  %36 = load i32, i32* %5, align 4
  %37 = load i32*, i32** %14, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 0
  store i32 %36, i32* %38, align 4
  %39 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %40 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %39, i32 0, i32 5
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* %40, i64 0, i64 0
  %42 = load i32, i32* %41, align 4
  %43 = load i32*, i32** %14, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 1
  store i32 %42, i32* %44, align 4
  %45 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %46 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %45, i32 0, i32 5
  %47 = getelementptr inbounds [4 x i32], [4 x i32]* %46, i64 0, i64 1
  %48 = load i32, i32* %47, align 4
  %49 = load i32*, i32** %14, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 2
  store i32 %48, i32* %50, align 4
  %51 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %52 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %51, i32 0, i32 5
  %53 = getelementptr inbounds [4 x i32], [4 x i32]* %52, i64 0, i64 2
  %54 = load i32, i32* %53, align 4
  %55 = load i32*, i32** %14, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 3
  store i32 %54, i32* %56, align 4
  %57 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %58 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %57, i32 0, i32 0
  %59 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %58, align 8
  %60 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %59, i32 0, i32 5
  store i32 93, i32* %60, align 8
  %61 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %62 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %61, i32 0, i32 0
  %63 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %62, align 8
  %64 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %63, i32 0, i32 1
  %65 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %64, align 8
  %66 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %67 = bitcast %struct.jpeg_decompress_struct.469* %66 to %struct.jpeg_common_struct*
  call void %65(%struct.jpeg_common_struct* %67, i32 1)
  br label %68

68:                                               ; preds = %29
  br label %88

69:                                               ; preds = %1
  %70 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %71 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %70, i32 0, i32 0
  %72 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %71, align 8
  %73 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %72, i32 0, i32 5
  store i32 94, i32* %73, align 8
  %74 = load i32, i32* %5, align 4
  %75 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %76 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %75, i32 0, i32 0
  %77 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %76, align 8
  %78 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %77, i32 0, i32 6
  %79 = bitcast %union.anon* %78 to [8 x i32]*
  %80 = getelementptr inbounds [8 x i32], [8 x i32]* %79, i64 0, i64 0
  store i32 %74, i32* %80, align 4
  %81 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %82 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %81, i32 0, i32 0
  %83 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %82, align 8
  %84 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %83, i32 0, i32 1
  %85 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %84, align 8
  %86 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %87 = bitcast %struct.jpeg_decompress_struct.469* %86 to %struct.jpeg_common_struct*
  call void %85(%struct.jpeg_common_struct* %87, i32 1)
  br label %88

88:                                               ; preds = %69, %68
  %89 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %90 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %89, i32 0, i32 1
  %91 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %90, align 8
  %92 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %91, i32 0, i32 2
  %93 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %92, align 8
  %94 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %95 = bitcast %struct.jpeg_decompress_struct.469* %94 to %struct.jpeg_common_struct*
  %96 = load i32, i32* %5, align 4
  %97 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %98 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %97, i32 0, i32 28
  %99 = load i32, i32* %98, align 8
  %100 = call i8** %93(%struct.jpeg_common_struct* %95, i32 1, i32 %96, i32 %99)
  store i8** %100, i8*** %4, align 8
  %101 = load i32, i32* %5, align 4
  store i32 %101, i32* %11, align 4
  store i32 0, i32* %6, align 4
  br label %102

102:                                              ; preds = %168, %88
  %103 = load i32, i32* %6, align 4
  %104 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %105 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %104, i32 0, i32 28
  %106 = load i32, i32* %105, align 8
  %107 = icmp slt i32 %103, %106
  br i1 %107, label %108, label %171

108:                                              ; preds = %102
  %109 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %110 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %109, i32 0, i32 5
  %111 = load i32, i32* %6, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [4 x i32], [4 x i32]* %110, i64 0, i64 %112
  %114 = load i32, i32* %113, align 4
  store i32 %114, i32* %9, align 4
  %115 = load i32, i32* %11, align 4
  %116 = load i32, i32* %9, align 4
  %117 = sdiv i32 %115, %116
  store i32 %117, i32* %10, align 4
  store i32 0, i32* %7, align 4
  br label %118

118:                                              ; preds = %163, %108
  %119 = load i32, i32* %7, align 4
  %120 = load i32, i32* %9, align 4
  %121 = icmp slt i32 %119, %120
  br i1 %121, label %122, label %166

122:                                              ; preds = %118
  %123 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %124 = load i32, i32* %6, align 4
  %125 = load i32, i32* %7, align 4
  %126 = load i32, i32* %9, align 4
  %127 = sub nsw i32 %126, 1
  %128 = call i32 @output_value(%struct.jpeg_decompress_struct.469* %123, i32 %124, i32 %125, i32 %127)
  store i32 %128, i32* %13, align 4
  %129 = load i32, i32* %7, align 4
  %130 = load i32, i32* %10, align 4
  %131 = mul nsw i32 %129, %130
  store i32 %131, i32* %12, align 4
  br label %132

132:                                              ; preds = %158, %122
  %133 = load i32, i32* %12, align 4
  %134 = load i32, i32* %5, align 4
  %135 = icmp slt i32 %133, %134
  br i1 %135, label %136, label %162

136:                                              ; preds = %132
  store i32 0, i32* %8, align 4
  br label %137

137:                                              ; preds = %154, %136
  %138 = load i32, i32* %8, align 4
  %139 = load i32, i32* %10, align 4
  %140 = icmp slt i32 %138, %139
  br i1 %140, label %141, label %157

141:                                              ; preds = %137
  %142 = load i32, i32* %13, align 4
  %143 = trunc i32 %142 to i8
  %144 = load i8**, i8*** %4, align 8
  %145 = load i32, i32* %6, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8*, i8** %144, i64 %146
  %148 = load i8*, i8** %147, align 8
  %149 = load i32, i32* %12, align 4
  %150 = load i32, i32* %8, align 4
  %151 = add nsw i32 %149, %150
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i8, i8* %148, i64 %152
  store i8 %143, i8* %153, align 1
  br label %154

154:                                              ; preds = %141
  %155 = load i32, i32* %8, align 4
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %8, align 4
  br label %137

157:                                              ; preds = %137
  br label %158

158:                                              ; preds = %157
  %159 = load i32, i32* %11, align 4
  %160 = load i32, i32* %12, align 4
  %161 = add nsw i32 %160, %159
  store i32 %161, i32* %12, align 4
  br label %132

162:                                              ; preds = %132
  br label %163

163:                                              ; preds = %162
  %164 = load i32, i32* %7, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %7, align 4
  br label %118

166:                                              ; preds = %118
  %167 = load i32, i32* %10, align 4
  store i32 %167, i32* %11, align 4
  br label %168

168:                                              ; preds = %166
  %169 = load i32, i32* %6, align 4
  %170 = add nsw i32 %169, 1
  store i32 %170, i32* %6, align 4
  br label %102

171:                                              ; preds = %102
  %172 = load i8**, i8*** %4, align 8
  %173 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %174 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %173, i32 0, i32 1
  store i8** %172, i8*** %174, align 8
  %175 = load i32, i32* %5, align 4
  %176 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %177 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %176, i32 0, i32 2
  store i32 %175, i32* %177, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @create_colorindex(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_cquantizer*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %12 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %12, i32 0, i32 83
  %14 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %13, align 8
  %15 = bitcast %struct.jpeg_color_quantizer.487* %14 to %struct.my_cquantizer*
  store %struct.my_cquantizer* %15, %struct.my_cquantizer** %3, align 8
  %16 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %16, i32 0, i32 20
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %23

20:                                               ; preds = %1
  store i32 510, i32* %11, align 4
  %21 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %22 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %21, i32 0, i32 4
  store i32 1, i32* %22, align 8
  br label %26

23:                                               ; preds = %1
  store i32 0, i32* %11, align 4
  %24 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %25 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %24, i32 0, i32 4
  store i32 0, i32* %25, align 8
  br label %26

26:                                               ; preds = %23, %20
  %27 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %27, i32 0, i32 1
  %29 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %29, i32 0, i32 2
  %31 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %30, align 8
  %32 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %33 = bitcast %struct.jpeg_decompress_struct.469* %32 to %struct.jpeg_common_struct*
  %34 = load i32, i32* %11, align 4
  %35 = add nsw i32 256, %34
  %36 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %36, i32 0, i32 28
  %38 = load i32, i32* %37, align 8
  %39 = call i8** %31(%struct.jpeg_common_struct* %33, i32 1, i32 %35, i32 %38)
  %40 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %41 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %40, i32 0, i32 3
  store i8** %39, i8*** %41, align 8
  %42 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %43 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i32 0, i32 2
  %44 = load i32, i32* %43, align 8
  store i32 %44, i32* %9, align 4
  store i32 0, i32* %5, align 4
  br label %45

45:                                               ; preds = %142, %26
  %46 = load i32, i32* %5, align 4
  %47 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %47, i32 0, i32 28
  %49 = load i32, i32* %48, align 8
  %50 = icmp slt i32 %46, %49
  br i1 %50, label %51, label %145

51:                                               ; preds = %45
  %52 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %53 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %52, i32 0, i32 5
  %54 = load i32, i32* %5, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [4 x i32], [4 x i32]* %53, i64 0, i64 %55
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %8, align 4
  %58 = load i32, i32* %9, align 4
  %59 = load i32, i32* %8, align 4
  %60 = sdiv i32 %58, %59
  store i32 %60, i32* %9, align 4
  %61 = load i32, i32* %11, align 4
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %72

63:                                               ; preds = %51
  %64 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %65 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %64, i32 0, i32 3
  %66 = load i8**, i8*** %65, align 8
  %67 = load i32, i32* %5, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8*, i8** %66, i64 %68
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 255
  store i8* %71, i8** %69, align 8
  br label %72

72:                                               ; preds = %63, %51
  %73 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %74 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %73, i32 0, i32 3
  %75 = load i8**, i8*** %74, align 8
  %76 = load i32, i32* %5, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i8*, i8** %75, i64 %77
  %79 = load i8*, i8** %78, align 8
  store i8* %79, i8** %4, align 8
  store i32 0, i32* %10, align 4
  %80 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %81 = load i32, i32* %5, align 4
  %82 = load i32, i32* %8, align 4
  %83 = sub nsw i32 %82, 1
  %84 = call i32 @largest_input_value(%struct.jpeg_decompress_struct.469* %80, i32 %81, i32 0, i32 %83)
  store i32 %84, i32* %7, align 4
  store i32 0, i32* %6, align 4
  br label %85

85:                                               ; preds = %110, %72
  %86 = load i32, i32* %6, align 4
  %87 = icmp sle i32 %86, 255
  br i1 %87, label %88, label %113

88:                                               ; preds = %85
  br label %89

89:                                               ; preds = %93, %88
  %90 = load i32, i32* %6, align 4
  %91 = load i32, i32* %7, align 4
  %92 = icmp sgt i32 %90, %91
  br i1 %92, label %93, label %101

93:                                               ; preds = %89
  %94 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %95 = load i32, i32* %5, align 4
  %96 = load i32, i32* %10, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %10, align 4
  %98 = load i32, i32* %8, align 4
  %99 = sub nsw i32 %98, 1
  %100 = call i32 @largest_input_value(%struct.jpeg_decompress_struct.469* %94, i32 %95, i32 %97, i32 %99)
  store i32 %100, i32* %7, align 4
  br label %89

101:                                              ; preds = %89
  %102 = load i32, i32* %10, align 4
  %103 = load i32, i32* %9, align 4
  %104 = mul nsw i32 %102, %103
  %105 = trunc i32 %104 to i8
  %106 = load i8*, i8** %4, align 8
  %107 = load i32, i32* %6, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  store i8 %105, i8* %109, align 1
  br label %110

110:                                              ; preds = %101
  %111 = load i32, i32* %6, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %6, align 4
  br label %85

113:                                              ; preds = %85
  %114 = load i32, i32* %11, align 4
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %116, label %141

116:                                              ; preds = %113
  store i32 1, i32* %6, align 4
  br label %117

117:                                              ; preds = %137, %116
  %118 = load i32, i32* %6, align 4
  %119 = icmp sle i32 %118, 255
  br i1 %119, label %120, label %140

120:                                              ; preds = %117
  %121 = load i8*, i8** %4, align 8
  %122 = getelementptr inbounds i8, i8* %121, i64 0
  %123 = load i8, i8* %122, align 1
  %124 = load i8*, i8** %4, align 8
  %125 = load i32, i32* %6, align 4
  %126 = sub nsw i32 0, %125
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i8, i8* %124, i64 %127
  store i8 %123, i8* %128, align 1
  %129 = load i8*, i8** %4, align 8
  %130 = getelementptr inbounds i8, i8* %129, i64 255
  %131 = load i8, i8* %130, align 1
  %132 = load i8*, i8** %4, align 8
  %133 = load i32, i32* %6, align 4
  %134 = add nsw i32 255, %133
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i8, i8* %132, i64 %135
  store i8 %131, i8* %136, align 1
  br label %137

137:                                              ; preds = %120
  %138 = load i32, i32* %6, align 4
  %139 = add nsw i32 %138, 1
  store i32 %139, i32* %6, align 4
  br label %117

140:                                              ; preds = %117
  br label %141

141:                                              ; preds = %140, %113
  br label %142

142:                                              ; preds = %141
  %143 = load i32, i32* %5, align 4
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %5, align 4
  br label %45

145:                                              ; preds = %45
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @alloc_fs_workspace(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_cquantizer*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %6 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %6, i32 0, i32 83
  %8 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %7, align 8
  %9 = bitcast %struct.jpeg_color_quantizer.487* %8 to %struct.my_cquantizer*
  store %struct.my_cquantizer* %9, %struct.my_cquantizer** %3, align 8
  %10 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %10, i32 0, i32 26
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, 2
  %14 = zext i32 %13 to i64
  %15 = mul i64 %14, 2
  store i64 %15, i64* %4, align 8
  store i32 0, i32* %5, align 4
  br label %16

16:                                               ; preds = %38, %1
  %17 = load i32, i32* %5, align 4
  %18 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %18, i32 0, i32 28
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %17, %20
  br i1 %21, label %22, label %41

22:                                               ; preds = %16
  %23 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %23, i32 0, i32 1
  %25 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %25, i32 0, i32 1
  %27 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %26, align 8
  %28 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %29 = bitcast %struct.jpeg_decompress_struct.469* %28 to %struct.jpeg_common_struct*
  %30 = load i64, i64* %4, align 8
  %31 = call i8* %27(%struct.jpeg_common_struct* %29, i32 1, i64 %30)
  %32 = bitcast i8* %31 to i16*
  %33 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %34 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %33, i32 0, i32 8
  %35 = load i32, i32* %5, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [4 x i16*], [4 x i16*]* %34, i64 0, i64 %36
  store i16* %32, i16** %37, align 8
  br label %38

38:                                               ; preds = %22
  %39 = load i32, i32* %5, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %5, align 4
  br label %16

41:                                               ; preds = %16
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @largest_input_value(%struct.jpeg_decompress_struct.469* %0, i32 %1, i32 %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load i32, i32* %7, align 4
  %10 = mul nsw i32 2, %9
  %11 = add nsw i32 %10, 1
  %12 = sext i32 %11 to i64
  %13 = mul nsw i64 %12, 255
  %14 = load i32, i32* %8, align 4
  %15 = sext i32 %14 to i64
  %16 = add nsw i64 %13, %15
  %17 = load i32, i32* %8, align 4
  %18 = mul nsw i32 2, %17
  %19 = sext i32 %18 to i64
  %20 = sdiv i64 %16, %19
  %21 = trunc i64 %20 to i32
  ret i32 %21
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @select_ncolors(%struct.jpeg_decompress_struct.469* %0, i32* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %3, align 8
  store i32* %1, i32** %4, align 8
  %13 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %13, i32 0, i32 28
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %5, align 4
  %16 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %16, i32 0, i32 22
  %18 = load i32, i32* %17, align 8
  store i32 %18, i32* %6, align 4
  store i32 1, i32* %8, align 4
  br label %19

19:                                               ; preds = %37, %2
  %20 = load i32, i32* %8, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %8, align 4
  %22 = load i32, i32* %8, align 4
  %23 = sext i32 %22 to i64
  store i64 %23, i64* %12, align 8
  store i32 1, i32* %9, align 4
  br label %24

24:                                               ; preds = %33, %19
  %25 = load i32, i32* %9, align 4
  %26 = load i32, i32* %5, align 4
  %27 = icmp slt i32 %25, %26
  br i1 %27, label %28, label %36

28:                                               ; preds = %24
  %29 = load i32, i32* %8, align 4
  %30 = sext i32 %29 to i64
  %31 = load i64, i64* %12, align 8
  %32 = mul nsw i64 %31, %30
  store i64 %32, i64* %12, align 8
  br label %33

33:                                               ; preds = %28
  %34 = load i32, i32* %9, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %9, align 4
  br label %24

36:                                               ; preds = %24
  br label %37

37:                                               ; preds = %36
  %38 = load i64, i64* %12, align 8
  %39 = load i32, i32* %6, align 4
  %40 = sext i32 %39 to i64
  %41 = icmp sle i64 %38, %40
  br i1 %41, label %19, label %42

42:                                               ; preds = %37
  %43 = load i32, i32* %8, align 4
  %44 = add nsw i32 %43, -1
  store i32 %44, i32* %8, align 4
  %45 = load i32, i32* %8, align 4
  %46 = icmp slt i32 %45, 2
  br i1 %46, label %47, label %67

47:                                               ; preds = %42
  %48 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %49 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %48, i32 0, i32 0
  %50 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %49, align 8
  %51 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %50, i32 0, i32 5
  store i32 55, i32* %51, align 8
  %52 = load i64, i64* %12, align 8
  %53 = trunc i64 %52 to i32
  %54 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %54, i32 0, i32 0
  %56 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %57 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %56, i32 0, i32 6
  %58 = bitcast %union.anon* %57 to [8 x i32]*
  %59 = getelementptr inbounds [8 x i32], [8 x i32]* %58, i64 0, i64 0
  store i32 %53, i32* %59, align 4
  %60 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %61 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %60, i32 0, i32 0
  %62 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %61, align 8
  %63 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %62, i32 0, i32 0
  %64 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %63, align 8
  %65 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %66 = bitcast %struct.jpeg_decompress_struct.469* %65 to %struct.jpeg_common_struct*
  call void %64(%struct.jpeg_common_struct* %66)
  br label %67

67:                                               ; preds = %47, %42
  store i32 1, i32* %7, align 4
  store i32 0, i32* %9, align 4
  br label %68

68:                                               ; preds = %81, %67
  %69 = load i32, i32* %9, align 4
  %70 = load i32, i32* %5, align 4
  %71 = icmp slt i32 %69, %70
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = load i32, i32* %8, align 4
  %74 = load i32*, i32** %4, align 8
  %75 = load i32, i32* %9, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i32, i32* %74, i64 %76
  store i32 %73, i32* %77, align 4
  %78 = load i32, i32* %8, align 4
  %79 = load i32, i32* %7, align 4
  %80 = mul nsw i32 %79, %78
  store i32 %80, i32* %7, align 4
  br label %81

81:                                               ; preds = %72
  %82 = load i32, i32* %9, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %9, align 4
  br label %68

84:                                               ; preds = %68
  br label %85

85:                                               ; preds = %139, %84
  store i32 0, i32* %11, align 4
  store i32 0, i32* %9, align 4
  br label %86

86:                                               ; preds = %135, %85
  %87 = load i32, i32* %9, align 4
  %88 = load i32, i32* %5, align 4
  %89 = icmp slt i32 %87, %88
  br i1 %89, label %90, label %138

90:                                               ; preds = %86
  %91 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %92 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %91, i32 0, i32 10
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 2
  br i1 %94, label %95, label %100

95:                                               ; preds = %90
  %96 = load i32, i32* %9, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [3 x i32], [3 x i32]* @select_ncolors.RGB_order, i64 0, i64 %97
  %99 = load i32, i32* %98, align 4
  br label %102

100:                                              ; preds = %90
  %101 = load i32, i32* %9, align 4
  br label %102

102:                                              ; preds = %100, %95
  %103 = phi i32 [ %99, %95 ], [ %101, %100 ]
  store i32 %103, i32* %10, align 4
  %104 = load i32, i32* %7, align 4
  %105 = load i32*, i32** %4, align 8
  %106 = load i32, i32* %10, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i32, i32* %105, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = sdiv i32 %104, %109
  %111 = sext i32 %110 to i64
  store i64 %111, i64* %12, align 8
  %112 = load i32*, i32** %4, align 8
  %113 = load i32, i32* %10, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %112, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = add nsw i32 %116, 1
  %118 = sext i32 %117 to i64
  %119 = load i64, i64* %12, align 8
  %120 = mul nsw i64 %119, %118
  store i64 %120, i64* %12, align 8
  %121 = load i64, i64* %12, align 8
  %122 = load i32, i32* %6, align 4
  %123 = sext i32 %122 to i64
  %124 = icmp sgt i64 %121, %123
  br i1 %124, label %125, label %126

125:                                              ; preds = %102
  br label %138

126:                                              ; preds = %102
  %127 = load i32*, i32** %4, align 8
  %128 = load i32, i32* %10, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32, i32* %127, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %130, align 4
  %133 = load i64, i64* %12, align 8
  %134 = trunc i64 %133 to i32
  store i32 %134, i32* %7, align 4
  store i32 1, i32* %11, align 4
  br label %135

135:                                              ; preds = %126
  %136 = load i32, i32* %9, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %9, align 4
  br label %86

138:                                              ; preds = %125, %86
  br label %139

139:                                              ; preds = %138
  %140 = load i32, i32* %11, align 4
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %85, label %142

142:                                              ; preds = %139
  %143 = load i32, i32* %7, align 4
  ret i32 %143
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @output_value(%struct.jpeg_decompress_struct.469* %0, i32 %1, i32 %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = mul nsw i64 %10, 255
  %12 = load i32, i32* %8, align 4
  %13 = sdiv i32 %12, 2
  %14 = sext i32 %13 to i64
  %15 = add nsw i64 %11, %14
  %16 = load i32, i32* %8, align 4
  %17 = sext i32 %16 to i64
  %18 = sdiv i64 %15, %17
  %19 = trunc i64 %18 to i32
  ret i32 %19
}

; Function Attrs: noinline nounwind uwtable
define internal void @color_quantize3(%struct.jpeg_decompress_struct.469* %0, i8** %1, i8** %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.my_cquantizer*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i32 %3, i32* %8, align 4
  %19 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %19, i32 0, i32 83
  %21 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %20, align 8
  %22 = bitcast %struct.jpeg_color_quantizer.487* %21 to %struct.my_cquantizer*
  store %struct.my_cquantizer* %22, %struct.my_cquantizer** %9, align 8
  %23 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %24 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %23, i32 0, i32 3
  %25 = load i8**, i8*** %24, align 8
  %26 = getelementptr inbounds i8*, i8** %25, i64 0
  %27 = load i8*, i8** %26, align 8
  store i8* %27, i8** %13, align 8
  %28 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %29 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %28, i32 0, i32 3
  %30 = load i8**, i8*** %29, align 8
  %31 = getelementptr inbounds i8*, i8** %30, i64 1
  %32 = load i8*, i8** %31, align 8
  store i8* %32, i8** %14, align 8
  %33 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %34 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %33, i32 0, i32 3
  %35 = load i8**, i8*** %34, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 2
  %37 = load i8*, i8** %36, align 8
  store i8* %37, i8** %15, align 8
  %38 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %39 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %38, i32 0, i32 26
  %40 = load i32, i32* %39, align 8
  store i32 %40, i32* %18, align 4
  store i32 0, i32* %16, align 4
  br label %41

41:                                               ; preds = %100, %4
  %42 = load i32, i32* %16, align 4
  %43 = load i32, i32* %8, align 4
  %44 = icmp slt i32 %42, %43
  br i1 %44, label %45, label %103

45:                                               ; preds = %41
  %46 = load i8**, i8*** %6, align 8
  %47 = load i32, i32* %16, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8*, i8** %46, i64 %48
  %50 = load i8*, i8** %49, align 8
  store i8* %50, i8** %11, align 8
  %51 = load i8**, i8*** %7, align 8
  %52 = load i32, i32* %16, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8*, i8** %51, i64 %53
  %55 = load i8*, i8** %54, align 8
  store i8* %55, i8** %12, align 8
  %56 = load i32, i32* %18, align 4
  store i32 %56, i32* %17, align 4
  br label %57

57:                                               ; preds = %96, %45
  %58 = load i32, i32* %17, align 4
  %59 = icmp ugt i32 %58, 0
  br i1 %59, label %60, label %99

60:                                               ; preds = %57
  %61 = load i8*, i8** %13, align 8
  %62 = load i8*, i8** %11, align 8
  %63 = getelementptr inbounds i8, i8* %62, i32 1
  store i8* %63, i8** %11, align 8
  %64 = load i8, i8* %62, align 1
  %65 = zext i8 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %61, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  store i32 %69, i32* %10, align 4
  %70 = load i8*, i8** %14, align 8
  %71 = load i8*, i8** %11, align 8
  %72 = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %72, i8** %11, align 8
  %73 = load i8, i8* %71, align 1
  %74 = zext i8 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %70, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = load i32, i32* %10, align 4
  %80 = add nsw i32 %79, %78
  store i32 %80, i32* %10, align 4
  %81 = load i8*, i8** %15, align 8
  %82 = load i8*, i8** %11, align 8
  %83 = getelementptr inbounds i8, i8* %82, i32 1
  store i8* %83, i8** %11, align 8
  %84 = load i8, i8* %82, align 1
  %85 = zext i8 %84 to i32
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %81, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = load i32, i32* %10, align 4
  %91 = add nsw i32 %90, %89
  store i32 %91, i32* %10, align 4
  %92 = load i32, i32* %10, align 4
  %93 = trunc i32 %92 to i8
  %94 = load i8*, i8** %12, align 8
  %95 = getelementptr inbounds i8, i8* %94, i32 1
  store i8* %95, i8** %12, align 8
  store i8 %93, i8* %94, align 1
  br label %96

96:                                               ; preds = %60
  %97 = load i32, i32* %17, align 4
  %98 = add i32 %97, -1
  store i32 %98, i32* %17, align 4
  br label %57

99:                                               ; preds = %57
  br label %100

100:                                              ; preds = %99
  %101 = load i32, i32* %16, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %16, align 4
  br label %41

103:                                              ; preds = %41
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @color_quantize(%struct.jpeg_decompress_struct.469* %0, i8** %1, i8** %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.my_cquantizer*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i32 %3, i32* %8, align 4
  %19 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %19, i32 0, i32 83
  %21 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %20, align 8
  %22 = bitcast %struct.jpeg_color_quantizer.487* %21 to %struct.my_cquantizer*
  store %struct.my_cquantizer* %22, %struct.my_cquantizer** %9, align 8
  %23 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %24 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %23, i32 0, i32 3
  %25 = load i8**, i8*** %24, align 8
  store i8** %25, i8*** %10, align 8
  %26 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %26, i32 0, i32 26
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %17, align 4
  %29 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %29, i32 0, i32 28
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %18, align 4
  store i32 0, i32* %15, align 4
  br label %32

32:                                               ; preds = %84, %4
  %33 = load i32, i32* %15, align 4
  %34 = load i32, i32* %8, align 4
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %36, label %87

36:                                               ; preds = %32
  %37 = load i8**, i8*** %6, align 8
  %38 = load i32, i32* %15, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8*, i8** %37, i64 %39
  %41 = load i8*, i8** %40, align 8
  store i8* %41, i8** %13, align 8
  %42 = load i8**, i8*** %7, align 8
  %43 = load i32, i32* %15, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8*, i8** %42, i64 %44
  %46 = load i8*, i8** %45, align 8
  store i8* %46, i8** %14, align 8
  %47 = load i32, i32* %17, align 4
  store i32 %47, i32* %16, align 4
  br label %48

48:                                               ; preds = %80, %36
  %49 = load i32, i32* %16, align 4
  %50 = icmp ugt i32 %49, 0
  br i1 %50, label %51, label %83

51:                                               ; preds = %48
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  br label %52

52:                                               ; preds = %72, %51
  %53 = load i32, i32* %12, align 4
  %54 = load i32, i32* %18, align 4
  %55 = icmp slt i32 %53, %54
  br i1 %55, label %56, label %75

56:                                               ; preds = %52
  %57 = load i8**, i8*** %10, align 8
  %58 = load i32, i32* %12, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8*, i8** %57, i64 %59
  %61 = load i8*, i8** %60, align 8
  %62 = load i8*, i8** %13, align 8
  %63 = getelementptr inbounds i8, i8* %62, i32 1
  store i8* %63, i8** %13, align 8
  %64 = load i8, i8* %62, align 1
  %65 = zext i8 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %61, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = load i32, i32* %11, align 4
  %71 = add nsw i32 %70, %69
  store i32 %71, i32* %11, align 4
  br label %72

72:                                               ; preds = %56
  %73 = load i32, i32* %12, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %12, align 4
  br label %52

75:                                               ; preds = %52
  %76 = load i32, i32* %11, align 4
  %77 = trunc i32 %76 to i8
  %78 = load i8*, i8** %14, align 8
  %79 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %79, i8** %14, align 8
  store i8 %77, i8* %78, align 1
  br label %80

80:                                               ; preds = %75
  %81 = load i32, i32* %16, align 4
  %82 = add i32 %81, -1
  store i32 %82, i32* %16, align 4
  br label %48

83:                                               ; preds = %48
  br label %84

84:                                               ; preds = %83
  %85 = load i32, i32* %15, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %15, align 4
  br label %32

87:                                               ; preds = %32
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @quantize3_ord_dither(%struct.jpeg_decompress_struct.469* %0, i8** %1, i8** %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.my_cquantizer*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i32 %3, i32* %8, align 4
  %24 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %24, i32 0, i32 83
  %26 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %25, align 8
  %27 = bitcast %struct.jpeg_color_quantizer.487* %26 to %struct.my_cquantizer*
  store %struct.my_cquantizer* %27, %struct.my_cquantizer** %9, align 8
  %28 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %29 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %28, i32 0, i32 3
  %30 = load i8**, i8*** %29, align 8
  %31 = getelementptr inbounds i8*, i8** %30, i64 0
  %32 = load i8*, i8** %31, align 8
  store i8* %32, i8** %13, align 8
  %33 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %34 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %33, i32 0, i32 3
  %35 = load i8**, i8*** %34, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 1
  %37 = load i8*, i8** %36, align 8
  store i8* %37, i8** %14, align 8
  %38 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %39 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %38, i32 0, i32 3
  %40 = load i8**, i8*** %39, align 8
  %41 = getelementptr inbounds i8*, i8** %40, i64 2
  %42 = load i8*, i8** %41, align 8
  store i8* %42, i8** %15, align 8
  %43 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %43, i32 0, i32 26
  %45 = load i32, i32* %44, align 8
  store i32 %45, i32* %23, align 4
  store i32 0, i32* %21, align 4
  br label %46

46:                                               ; preds = %159, %4
  %47 = load i32, i32* %21, align 4
  %48 = load i32, i32* %8, align 4
  %49 = icmp slt i32 %47, %48
  br i1 %49, label %50, label %162

50:                                               ; preds = %46
  %51 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %52 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %51, i32 0, i32 6
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %19, align 4
  %54 = load i8**, i8*** %6, align 8
  %55 = load i32, i32* %21, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8*, i8** %54, i64 %56
  %58 = load i8*, i8** %57, align 8
  store i8* %58, i8** %11, align 8
  %59 = load i8**, i8*** %7, align 8
  %60 = load i32, i32* %21, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i8*, i8** %59, i64 %61
  %63 = load i8*, i8** %62, align 8
  store i8* %63, i8** %12, align 8
  %64 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %65 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %64, i32 0, i32 7
  %66 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %65, i64 0, i64 0
  %67 = load [16 x i32]*, [16 x i32]** %66, align 8
  %68 = load i32, i32* %19, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [16 x i32], [16 x i32]* %67, i64 %69
  %71 = getelementptr inbounds [16 x i32], [16 x i32]* %70, i64 0, i64 0
  store i32* %71, i32** %16, align 8
  %72 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %73 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %72, i32 0, i32 7
  %74 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %73, i64 0, i64 1
  %75 = load [16 x i32]*, [16 x i32]** %74, align 8
  %76 = load i32, i32* %19, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [16 x i32], [16 x i32]* %75, i64 %77
  %79 = getelementptr inbounds [16 x i32], [16 x i32]* %78, i64 0, i64 0
  store i32* %79, i32** %17, align 8
  %80 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %81 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %80, i32 0, i32 7
  %82 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %81, i64 0, i64 2
  %83 = load [16 x i32]*, [16 x i32]** %82, align 8
  %84 = load i32, i32* %19, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [16 x i32], [16 x i32]* %83, i64 %85
  %87 = getelementptr inbounds [16 x i32], [16 x i32]* %86, i64 0, i64 0
  store i32* %87, i32** %18, align 8
  store i32 0, i32* %20, align 4
  %88 = load i32, i32* %23, align 4
  store i32 %88, i32* %22, align 4
  br label %89

89:                                               ; preds = %149, %50
  %90 = load i32, i32* %22, align 4
  %91 = icmp ugt i32 %90, 0
  br i1 %91, label %92, label %152

92:                                               ; preds = %89
  %93 = load i8*, i8** %13, align 8
  %94 = load i8*, i8** %11, align 8
  %95 = getelementptr inbounds i8, i8* %94, i32 1
  store i8* %95, i8** %11, align 8
  %96 = load i8, i8* %94, align 1
  %97 = zext i8 %96 to i32
  %98 = load i32*, i32** %16, align 8
  %99 = load i32, i32* %20, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i32, i32* %98, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = add nsw i32 %97, %102
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i8, i8* %93, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  store i32 %107, i32* %10, align 4
  %108 = load i8*, i8** %14, align 8
  %109 = load i8*, i8** %11, align 8
  %110 = getelementptr inbounds i8, i8* %109, i32 1
  store i8* %110, i8** %11, align 8
  %111 = load i8, i8* %109, align 1
  %112 = zext i8 %111 to i32
  %113 = load i32*, i32** %17, align 8
  %114 = load i32, i32* %20, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i32, i32* %113, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = add nsw i32 %112, %117
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8, i8* %108, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = load i32, i32* %10, align 4
  %124 = add nsw i32 %123, %122
  store i32 %124, i32* %10, align 4
  %125 = load i8*, i8** %15, align 8
  %126 = load i8*, i8** %11, align 8
  %127 = getelementptr inbounds i8, i8* %126, i32 1
  store i8* %127, i8** %11, align 8
  %128 = load i8, i8* %126, align 1
  %129 = zext i8 %128 to i32
  %130 = load i32*, i32** %18, align 8
  %131 = load i32, i32* %20, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i32, i32* %130, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = add nsw i32 %129, %134
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* %125, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = load i32, i32* %10, align 4
  %141 = add nsw i32 %140, %139
  store i32 %141, i32* %10, align 4
  %142 = load i32, i32* %10, align 4
  %143 = trunc i32 %142 to i8
  %144 = load i8*, i8** %12, align 8
  %145 = getelementptr inbounds i8, i8* %144, i32 1
  store i8* %145, i8** %12, align 8
  store i8 %143, i8* %144, align 1
  %146 = load i32, i32* %20, align 4
  %147 = add nsw i32 %146, 1
  %148 = and i32 %147, 15
  store i32 %148, i32* %20, align 4
  br label %149

149:                                              ; preds = %92
  %150 = load i32, i32* %22, align 4
  %151 = add i32 %150, -1
  store i32 %151, i32* %22, align 4
  br label %89

152:                                              ; preds = %89
  %153 = load i32, i32* %19, align 4
  %154 = add nsw i32 %153, 1
  %155 = and i32 %154, 15
  store i32 %155, i32* %19, align 4
  %156 = load i32, i32* %19, align 4
  %157 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %158 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %157, i32 0, i32 6
  store i32 %156, i32* %158, align 4
  br label %159

159:                                              ; preds = %152
  %160 = load i32, i32* %21, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %21, align 4
  br label %46

162:                                              ; preds = %46
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @quantize_ord_dither(%struct.jpeg_decompress_struct.469* %0, i8** %1, i8** %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.my_cquantizer*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i32 %3, i32* %8, align 4
  %21 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %21, i32 0, i32 83
  %23 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %22, align 8
  %24 = bitcast %struct.jpeg_color_quantizer.487* %23 to %struct.my_cquantizer*
  store %struct.my_cquantizer* %24, %struct.my_cquantizer** %9, align 8
  %25 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %25, i32 0, i32 28
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %16, align 4
  %28 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %28, i32 0, i32 26
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %20, align 4
  store i32 0, i32* %18, align 4
  br label %31

31:                                               ; preds = %129, %4
  %32 = load i32, i32* %18, align 4
  %33 = load i32, i32* %8, align 4
  %34 = icmp slt i32 %32, %33
  br i1 %34, label %35, label %132

35:                                               ; preds = %31
  %36 = load i8**, i8*** %7, align 8
  %37 = load i32, i32* %18, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8*, i8** %36, i64 %38
  %40 = load i8*, i8** %39, align 8
  %41 = load i32, i32* %20, align 4
  %42 = zext i32 %41 to i64
  %43 = mul i64 %42, 1
  call void @jzero_far(i8* %40, i64 %43)
  %44 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %45 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %44, i32 0, i32 6
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %14, align 4
  store i32 0, i32* %17, align 4
  br label %47

47:                                               ; preds = %119, %35
  %48 = load i32, i32* %17, align 4
  %49 = load i32, i32* %16, align 4
  %50 = icmp slt i32 %48, %49
  br i1 %50, label %51, label %122

51:                                               ; preds = %47
  %52 = load i8**, i8*** %6, align 8
  %53 = load i32, i32* %18, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8*, i8** %52, i64 %54
  %56 = load i8*, i8** %55, align 8
  %57 = load i32, i32* %17, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %56, i64 %58
  store i8* %59, i8** %10, align 8
  %60 = load i8**, i8*** %7, align 8
  %61 = load i32, i32* %18, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8*, i8** %60, i64 %62
  %64 = load i8*, i8** %63, align 8
  store i8* %64, i8** %11, align 8
  %65 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %66 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %65, i32 0, i32 3
  %67 = load i8**, i8*** %66, align 8
  %68 = load i32, i32* %17, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8*, i8** %67, i64 %69
  %71 = load i8*, i8** %70, align 8
  store i8* %71, i8** %12, align 8
  %72 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %73 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %72, i32 0, i32 7
  %74 = load i32, i32* %17, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %73, i64 0, i64 %75
  %77 = load [16 x i32]*, [16 x i32]** %76, align 8
  %78 = load i32, i32* %14, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [16 x i32], [16 x i32]* %77, i64 %79
  %81 = getelementptr inbounds [16 x i32], [16 x i32]* %80, i64 0, i64 0
  store i32* %81, i32** %13, align 8
  store i32 0, i32* %15, align 4
  %82 = load i32, i32* %20, align 4
  store i32 %82, i32* %19, align 4
  br label %83

83:                                               ; preds = %115, %51
  %84 = load i32, i32* %19, align 4
  %85 = icmp ugt i32 %84, 0
  br i1 %85, label %86, label %118

86:                                               ; preds = %83
  %87 = load i8*, i8** %12, align 8
  %88 = load i8*, i8** %10, align 8
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = load i32*, i32** %13, align 8
  %92 = load i32, i32* %15, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i32, i32* %91, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = add nsw i32 %90, %95
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %87, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = load i8*, i8** %11, align 8
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = add nsw i32 %103, %100
  %105 = trunc i32 %104 to i8
  store i8 %105, i8* %101, align 1
  %106 = load i32, i32* %16, align 4
  %107 = load i8*, i8** %10, align 8
  %108 = sext i32 %106 to i64
  %109 = getelementptr inbounds i8, i8* %107, i64 %108
  store i8* %109, i8** %10, align 8
  %110 = load i8*, i8** %11, align 8
  %111 = getelementptr inbounds i8, i8* %110, i32 1
  store i8* %111, i8** %11, align 8
  %112 = load i32, i32* %15, align 4
  %113 = add nsw i32 %112, 1
  %114 = and i32 %113, 15
  store i32 %114, i32* %15, align 4
  br label %115

115:                                              ; preds = %86
  %116 = load i32, i32* %19, align 4
  %117 = add i32 %116, -1
  store i32 %117, i32* %19, align 4
  br label %83

118:                                              ; preds = %83
  br label %119

119:                                              ; preds = %118
  %120 = load i32, i32* %17, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %17, align 4
  br label %47

122:                                              ; preds = %47
  %123 = load i32, i32* %14, align 4
  %124 = add nsw i32 %123, 1
  %125 = and i32 %124, 15
  store i32 %125, i32* %14, align 4
  %126 = load i32, i32* %14, align 4
  %127 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %128 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %127, i32 0, i32 6
  store i32 %126, i32* %128, align 4
  br label %129

129:                                              ; preds = %122
  %130 = load i32, i32* %18, align 4
  %131 = add nsw i32 %130, 1
  store i32 %131, i32* %18, align 4
  br label %31

132:                                              ; preds = %31
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @create_odither_tables(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_cquantizer*, align 8
  %4 = alloca [16 x i32]*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %8 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %8, i32 0, i32 83
  %10 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %9, align 8
  %11 = bitcast %struct.jpeg_color_quantizer.487* %10 to %struct.my_cquantizer*
  store %struct.my_cquantizer* %11, %struct.my_cquantizer** %3, align 8
  store i32 0, i32* %5, align 4
  br label %12

12:                                               ; preds = %63, %1
  %13 = load i32, i32* %5, align 4
  %14 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %14, i32 0, i32 28
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %13, %16
  br i1 %17, label %18, label %66

18:                                               ; preds = %12
  %19 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %20 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %19, i32 0, i32 5
  %21 = load i32, i32* %5, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [4 x i32], [4 x i32]* %20, i64 0, i64 %22
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %7, align 4
  store [16 x i32]* null, [16 x i32]** %4, align 8
  store i32 0, i32* %6, align 4
  br label %25

25:                                               ; preds = %46, %18
  %26 = load i32, i32* %6, align 4
  %27 = load i32, i32* %5, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %29, label %49

29:                                               ; preds = %25
  %30 = load i32, i32* %7, align 4
  %31 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %32 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %31, i32 0, i32 5
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [4 x i32], [4 x i32]* %32, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %30, %36
  br i1 %37, label %38, label %45

38:                                               ; preds = %29
  %39 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %40 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %39, i32 0, i32 7
  %41 = load i32, i32* %6, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %40, i64 0, i64 %42
  %44 = load [16 x i32]*, [16 x i32]** %43, align 8
  store [16 x i32]* %44, [16 x i32]** %4, align 8
  br label %49

45:                                               ; preds = %29
  br label %46

46:                                               ; preds = %45
  %47 = load i32, i32* %6, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %6, align 4
  br label %25

49:                                               ; preds = %38, %25
  %50 = load [16 x i32]*, [16 x i32]** %4, align 8
  %51 = icmp eq [16 x i32]* %50, null
  br i1 %51, label %52, label %56

52:                                               ; preds = %49
  %53 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %54 = load i32, i32* %7, align 4
  %55 = call [16 x i32]* @make_odither_array(%struct.jpeg_decompress_struct.469* %53, i32 %54)
  store [16 x i32]* %55, [16 x i32]** %4, align 8
  br label %56

56:                                               ; preds = %52, %49
  %57 = load [16 x i32]*, [16 x i32]** %4, align 8
  %58 = load %struct.my_cquantizer*, %struct.my_cquantizer** %3, align 8
  %59 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %58, i32 0, i32 7
  %60 = load i32, i32* %5, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %59, i64 0, i64 %61
  store [16 x i32]* %57, [16 x i32]** %62, align 8
  br label %63

63:                                               ; preds = %56
  %64 = load i32, i32* %5, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %5, align 4
  br label %12

66:                                               ; preds = %12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @quantize_fs_dither(%struct.jpeg_decompress_struct.469* %0, i8** %1, i8** %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.my_cquantizer*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i16*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i32 %3, i32* %8, align 4
  %29 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %29, i32 0, i32 83
  %31 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %30, align 8
  %32 = bitcast %struct.jpeg_color_quantizer.487* %31 to %struct.my_cquantizer*
  store %struct.my_cquantizer* %32, %struct.my_cquantizer** %9, align 8
  %33 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %33, i32 0, i32 28
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %21, align 4
  %36 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %36, i32 0, i32 26
  %38 = load i32, i32* %37, align 8
  store i32 %38, i32* %27, align 4
  %39 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %39, i32 0, i32 61
  %41 = load i8*, i8** %40, align 8
  store i8* %41, i8** %28, align 8
  store i32 0, i32* %25, align 4
  br label %42

42:                                               ; preds = %227, %4
  %43 = load i32, i32* %25, align 4
  %44 = load i32, i32* %8, align 4
  %45 = icmp slt i32 %43, %44
  br i1 %45, label %46, label %230

46:                                               ; preds = %42
  %47 = load i8**, i8*** %7, align 8
  %48 = load i32, i32* %25, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8*, i8** %47, i64 %49
  %51 = load i8*, i8** %50, align 8
  %52 = load i32, i32* %27, align 4
  %53 = zext i32 %52 to i64
  %54 = mul i64 %53, 1
  call void @jzero_far(i8* %51, i64 %54)
  store i32 0, i32* %24, align 4
  br label %55

55:                                               ; preds = %215, %46
  %56 = load i32, i32* %24, align 4
  %57 = load i32, i32* %21, align 4
  %58 = icmp slt i32 %56, %57
  br i1 %58, label %59, label %218

59:                                               ; preds = %55
  %60 = load i8**, i8*** %6, align 8
  %61 = load i32, i32* %25, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8*, i8** %60, i64 %62
  %64 = load i8*, i8** %63, align 8
  %65 = load i32, i32* %24, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %64, i64 %66
  store i8* %67, i8** %16, align 8
  %68 = load i8**, i8*** %7, align 8
  %69 = load i32, i32* %25, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8*, i8** %68, i64 %70
  %72 = load i8*, i8** %71, align 8
  store i8* %72, i8** %17, align 8
  %73 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %74 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %73, i32 0, i32 9
  %75 = load i32, i32* %74, align 8
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %102

77:                                               ; preds = %59
  %78 = load i32, i32* %27, align 4
  %79 = sub i32 %78, 1
  %80 = load i32, i32* %21, align 4
  %81 = mul i32 %79, %80
  %82 = load i8*, i8** %16, align 8
  %83 = zext i32 %81 to i64
  %84 = getelementptr inbounds i8, i8* %82, i64 %83
  store i8* %84, i8** %16, align 8
  %85 = load i32, i32* %27, align 4
  %86 = sub i32 %85, 1
  %87 = load i8*, i8** %17, align 8
  %88 = zext i32 %86 to i64
  %89 = getelementptr inbounds i8, i8* %87, i64 %88
  store i8* %89, i8** %17, align 8
  store i32 -1, i32* %22, align 4
  %90 = load i32, i32* %21, align 4
  %91 = sub nsw i32 0, %90
  store i32 %91, i32* %23, align 4
  %92 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %93 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %92, i32 0, i32 8
  %94 = load i32, i32* %24, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [4 x i16*], [4 x i16*]* %93, i64 0, i64 %95
  %97 = load i16*, i16** %96, align 8
  %98 = load i32, i32* %27, align 4
  %99 = add i32 %98, 1
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds i16, i16* %97, i64 %100
  store i16* %101, i16** %15, align 8
  br label %110

102:                                              ; preds = %59
  store i32 1, i32* %22, align 4
  %103 = load i32, i32* %21, align 4
  store i32 %103, i32* %23, align 4
  %104 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %105 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %104, i32 0, i32 8
  %106 = load i32, i32* %24, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [4 x i16*], [4 x i16*]* %105, i64 0, i64 %107
  %109 = load i16*, i16** %108, align 8
  store i16* %109, i16** %15, align 8
  br label %110

110:                                              ; preds = %102, %77
  %111 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %112 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %111, i32 0, i32 3
  %113 = load i8**, i8*** %112, align 8
  %114 = load i32, i32* %24, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i8*, i8** %113, i64 %115
  %117 = load i8*, i8** %116, align 8
  store i8* %117, i8** %18, align 8
  %118 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %119 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %118, i32 0, i32 1
  %120 = load i8**, i8*** %119, align 8
  %121 = load i32, i32* %24, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8*, i8** %120, i64 %122
  %124 = load i8*, i8** %123, align 8
  store i8* %124, i8** %19, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %12, align 4
  store i32 0, i32* %11, align 4
  %125 = load i32, i32* %27, align 4
  store i32 %125, i32* %26, align 4
  br label %126

126:                                              ; preds = %207, %110
  %127 = load i32, i32* %26, align 4
  %128 = icmp ugt i32 %127, 0
  br i1 %128, label %129, label %210

129:                                              ; preds = %126
  %130 = load i32, i32* %10, align 4
  %131 = load i16*, i16** %15, align 8
  %132 = load i32, i32* %22, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i16, i16* %131, i64 %133
  %135 = load i16, i16* %134, align 2
  %136 = sext i16 %135 to i32
  %137 = add nsw i32 %130, %136
  %138 = add nsw i32 %137, 8
  %139 = ashr i32 %138, 4
  store i32 %139, i32* %10, align 4
  %140 = load i8*, i8** %16, align 8
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = load i32, i32* %10, align 4
  %144 = add nsw i32 %143, %142
  store i32 %144, i32* %10, align 4
  %145 = load i8*, i8** %28, align 8
  %146 = load i32, i32* %10, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i8, i8* %145, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  store i32 %150, i32* %10, align 4
  %151 = load i8*, i8** %18, align 8
  %152 = load i32, i32* %10, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* %151, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  store i32 %156, i32* %20, align 4
  %157 = load i32, i32* %20, align 4
  %158 = trunc i32 %157 to i8
  %159 = zext i8 %158 to i32
  %160 = load i8*, i8** %17, align 8
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  %163 = add nsw i32 %162, %159
  %164 = trunc i32 %163 to i8
  store i8 %164, i8* %160, align 1
  %165 = load i8*, i8** %19, align 8
  %166 = load i32, i32* %20, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i8, i8* %165, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i32
  %171 = load i32, i32* %10, align 4
  %172 = sub nsw i32 %171, %170
  store i32 %172, i32* %10, align 4
  %173 = load i32, i32* %10, align 4
  store i32 %173, i32* %13, align 4
  %174 = load i32, i32* %10, align 4
  %175 = mul nsw i32 %174, 2
  store i32 %175, i32* %14, align 4
  %176 = load i32, i32* %14, align 4
  %177 = load i32, i32* %10, align 4
  %178 = add nsw i32 %177, %176
  store i32 %178, i32* %10, align 4
  %179 = load i32, i32* %12, align 4
  %180 = load i32, i32* %10, align 4
  %181 = add nsw i32 %179, %180
  %182 = trunc i32 %181 to i16
  %183 = load i16*, i16** %15, align 8
  %184 = getelementptr inbounds i16, i16* %183, i64 0
  store i16 %182, i16* %184, align 2
  %185 = load i32, i32* %14, align 4
  %186 = load i32, i32* %10, align 4
  %187 = add nsw i32 %186, %185
  store i32 %187, i32* %10, align 4
  %188 = load i32, i32* %11, align 4
  %189 = load i32, i32* %10, align 4
  %190 = add nsw i32 %188, %189
  store i32 %190, i32* %12, align 4
  %191 = load i32, i32* %13, align 4
  store i32 %191, i32* %11, align 4
  %192 = load i32, i32* %14, align 4
  %193 = load i32, i32* %10, align 4
  %194 = add nsw i32 %193, %192
  store i32 %194, i32* %10, align 4
  %195 = load i32, i32* %23, align 4
  %196 = load i8*, i8** %16, align 8
  %197 = sext i32 %195 to i64
  %198 = getelementptr inbounds i8, i8* %196, i64 %197
  store i8* %198, i8** %16, align 8
  %199 = load i32, i32* %22, align 4
  %200 = load i8*, i8** %17, align 8
  %201 = sext i32 %199 to i64
  %202 = getelementptr inbounds i8, i8* %200, i64 %201
  store i8* %202, i8** %17, align 8
  %203 = load i32, i32* %22, align 4
  %204 = load i16*, i16** %15, align 8
  %205 = sext i32 %203 to i64
  %206 = getelementptr inbounds i16, i16* %204, i64 %205
  store i16* %206, i16** %15, align 8
  br label %207

207:                                              ; preds = %129
  %208 = load i32, i32* %26, align 4
  %209 = add i32 %208, -1
  store i32 %209, i32* %26, align 4
  br label %126

210:                                              ; preds = %126
  %211 = load i32, i32* %12, align 4
  %212 = trunc i32 %211 to i16
  %213 = load i16*, i16** %15, align 8
  %214 = getelementptr inbounds i16, i16* %213, i64 0
  store i16 %212, i16* %214, align 2
  br label %215

215:                                              ; preds = %210
  %216 = load i32, i32* %24, align 4
  %217 = add nsw i32 %216, 1
  store i32 %217, i32* %24, align 4
  br label %55

218:                                              ; preds = %55
  %219 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %220 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %219, i32 0, i32 9
  %221 = load i32, i32* %220, align 8
  %222 = icmp ne i32 %221, 0
  %223 = zext i1 %222 to i64
  %224 = select i1 %222, i32 0, i32 1
  %225 = load %struct.my_cquantizer*, %struct.my_cquantizer** %9, align 8
  %226 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %225, i32 0, i32 9
  store i32 %224, i32* %226, align 8
  br label %227

227:                                              ; preds = %218
  %228 = load i32, i32* %25, align 4
  %229 = add nsw i32 %228, 1
  store i32 %229, i32* %25, align 4
  br label %42

230:                                              ; preds = %42
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal [16 x i32]* @make_odither_array(%struct.jpeg_decompress_struct.469* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %4 = alloca i32, align 4
  %5 = alloca [16 x i32]*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %3, align 8
  store i32 %1, i32* %4, align 4
  %10 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %10, i32 0, i32 1
  %12 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %12, i32 0, i32 0
  %14 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %13, align 8
  %15 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %16 = bitcast %struct.jpeg_decompress_struct.469* %15 to %struct.jpeg_common_struct*
  %17 = call i8* %14(%struct.jpeg_common_struct* %16, i32 1, i64 1024)
  %18 = bitcast i8* %17 to [16 x i32]*
  store [16 x i32]* %18, [16 x i32]** %5, align 8
  %19 = load i32, i32* %4, align 4
  %20 = sub nsw i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = mul nsw i64 512, %21
  store i64 %22, i64* %9, align 8
  store i32 0, i32* %6, align 4
  br label %23

23:                                               ; preds = %69, %2
  %24 = load i32, i32* %6, align 4
  %25 = icmp slt i32 %24, 16
  br i1 %25, label %26, label %72

26:                                               ; preds = %23
  store i32 0, i32* %7, align 4
  br label %27

27:                                               ; preds = %65, %26
  %28 = load i32, i32* %7, align 4
  %29 = icmp slt i32 %28, 16
  br i1 %29, label %30, label %68

30:                                               ; preds = %27
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @base_dither_matrix, i64 0, i64 %32
  %34 = load i32, i32* %7, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* %33, i64 0, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = mul nsw i32 2, %38
  %40 = sub nsw i32 255, %39
  %41 = sext i32 %40 to i64
  %42 = mul nsw i64 %41, 255
  store i64 %42, i64* %8, align 8
  %43 = load i64, i64* %8, align 8
  %44 = icmp slt i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %30
  %46 = load i64, i64* %8, align 8
  %47 = sub nsw i64 0, %46
  %48 = load i64, i64* %9, align 8
  %49 = sdiv i64 %47, %48
  %50 = sub nsw i64 0, %49
  br label %55

51:                                               ; preds = %30
  %52 = load i64, i64* %8, align 8
  %53 = load i64, i64* %9, align 8
  %54 = sdiv i64 %52, %53
  br label %55

55:                                               ; preds = %51, %45
  %56 = phi i64 [ %50, %45 ], [ %54, %51 ]
  %57 = trunc i64 %56 to i32
  %58 = load [16 x i32]*, [16 x i32]** %5, align 8
  %59 = load i32, i32* %6, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [16 x i32], [16 x i32]* %58, i64 %60
  %62 = load i32, i32* %7, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [16 x i32], [16 x i32]* %61, i64 0, i64 %63
  store i32 %57, i32* %64, align 4
  br label %65

65:                                               ; preds = %55
  %66 = load i32, i32* %7, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %7, align 4
  br label %27

68:                                               ; preds = %27
  br label %69

69:                                               ; preds = %68
  %70 = load i32, i32* %6, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %6, align 4
  br label %23

72:                                               ; preds = %23
  %73 = load [16 x i32]*, [16 x i32]** %5, align 8
  ret [16 x i32]* %73
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_2pass_quantizer(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_cquantizer.924*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %6 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %6, i32 0, i32 1
  %8 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %7, align 8
  %9 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %8, i32 0, i32 0
  %10 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %9, align 8
  %11 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %12 = bitcast %struct.jpeg_decompress_struct.469* %11 to %struct.jpeg_common_struct*
  %13 = call i8* %10(%struct.jpeg_common_struct* %12, i32 1, i64 88)
  %14 = bitcast i8* %13 to %struct.my_cquantizer.924*
  store %struct.my_cquantizer.924* %14, %struct.my_cquantizer.924** %3, align 8
  %15 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %16 = bitcast %struct.my_cquantizer.924* %15 to %struct.jpeg_color_quantizer.487*
  %17 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %17, i32 0, i32 83
  store %struct.jpeg_color_quantizer.487* %16, %struct.jpeg_color_quantizer.487** %18, align 8
  %19 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %20 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %19, i32 0, i32 0
  %21 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %20, i32 0, i32 0
  store void (%struct.jpeg_decompress_struct.469*, i32)* @start_pass_2_quant, void (%struct.jpeg_decompress_struct.469*, i32)** %21, align 8
  %22 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %23 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %22, i32 0, i32 0
  %24 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %23, i32 0, i32 3
  %25 = bitcast {}** %24 to void (%struct.jpeg_decompress_struct.469*)**
  store void (%struct.jpeg_decompress_struct.469*)* @new_color_map_2_quant, void (%struct.jpeg_decompress_struct.469*)** %25, align 8
  %26 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %27 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %26, i32 0, i32 5
  store i16* null, i16** %27, align 8
  %28 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %29 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %28, i32 0, i32 7
  store i32* null, i32** %29, align 8
  %30 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %30, i32 0, i32 28
  %32 = load i32, i32* %31, align 8
  %33 = icmp ne i32 %32, 3
  br i1 %33, label %34, label %46

34:                                               ; preds = %1
  %35 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %35, i32 0, i32 0
  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i32 0, i32 5
  store i32 46, i32* %38, align 8
  %39 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %39, i32 0, i32 0
  %41 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %41, i32 0, i32 0
  %43 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %42, align 8
  %44 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %45 = bitcast %struct.jpeg_decompress_struct.469* %44 to %struct.jpeg_common_struct*
  call void %43(%struct.jpeg_common_struct* %45)
  br label %46

46:                                               ; preds = %34, %1
  %47 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %47, i32 0, i32 1
  %49 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %49, i32 0, i32 0
  %51 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %50, align 8
  %52 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %53 = bitcast %struct.jpeg_decompress_struct.469* %52 to %struct.jpeg_common_struct*
  %54 = call i8* %51(%struct.jpeg_common_struct* %53, i32 1, i64 256)
  %55 = bitcast i8* %54 to [32 x i16]**
  %56 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %57 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %56, i32 0, i32 3
  store [32 x i16]** %55, [32 x i16]*** %57, align 8
  store i32 0, i32* %4, align 4
  br label %58

58:                                               ; preds = %77, %46
  %59 = load i32, i32* %4, align 4
  %60 = icmp slt i32 %59, 32
  br i1 %60, label %61, label %80

61:                                               ; preds = %58
  %62 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %62, i32 0, i32 1
  %64 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %63, align 8
  %65 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %64, i32 0, i32 1
  %66 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %65, align 8
  %67 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %68 = bitcast %struct.jpeg_decompress_struct.469* %67 to %struct.jpeg_common_struct*
  %69 = call i8* %66(%struct.jpeg_common_struct* %68, i32 1, i64 4096)
  %70 = bitcast i8* %69 to [32 x i16]*
  %71 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %72 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %71, i32 0, i32 3
  %73 = load [32 x i16]**, [32 x i16]*** %72, align 8
  %74 = load i32, i32* %4, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [32 x i16]*, [32 x i16]** %73, i64 %75
  store [32 x i16]* %70, [32 x i16]** %76, align 8
  br label %77

77:                                               ; preds = %61
  %78 = load i32, i32* %4, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %4, align 4
  br label %58

80:                                               ; preds = %58
  %81 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %82 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %81, i32 0, i32 4
  store i32 1, i32* %82, align 8
  %83 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %84 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %83, i32 0, i32 25
  %85 = load i32, i32* %84, align 4
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %147

87:                                               ; preds = %80
  %88 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %89 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %88, i32 0, i32 22
  %90 = load i32, i32* %89, align 8
  store i32 %90, i32* %5, align 4
  %91 = load i32, i32* %5, align 4
  %92 = icmp slt i32 %91, 8
  br i1 %92, label %93, label %111

93:                                               ; preds = %87
  %94 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %95 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %94, i32 0, i32 0
  %96 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %95, align 8
  %97 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %96, i32 0, i32 5
  store i32 55, i32* %97, align 8
  %98 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %99 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %98, i32 0, i32 0
  %100 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %99, align 8
  %101 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %100, i32 0, i32 6
  %102 = bitcast %union.anon* %101 to [8 x i32]*
  %103 = getelementptr inbounds [8 x i32], [8 x i32]* %102, i64 0, i64 0
  store i32 8, i32* %103, align 4
  %104 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %105 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %104, i32 0, i32 0
  %106 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %105, align 8
  %107 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %106, i32 0, i32 0
  %108 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %107, align 8
  %109 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %110 = bitcast %struct.jpeg_decompress_struct.469* %109 to %struct.jpeg_common_struct*
  call void %108(%struct.jpeg_common_struct* %110)
  br label %111

111:                                              ; preds = %93, %87
  %112 = load i32, i32* %5, align 4
  %113 = icmp sgt i32 %112, 256
  br i1 %113, label %114, label %132

114:                                              ; preds = %111
  %115 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %116 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %115, i32 0, i32 0
  %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %116, align 8
  %118 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %117, i32 0, i32 5
  store i32 56, i32* %118, align 8
  %119 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %120 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %119, i32 0, i32 0
  %121 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %120, align 8
  %122 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %121, i32 0, i32 6
  %123 = bitcast %union.anon* %122 to [8 x i32]*
  %124 = getelementptr inbounds [8 x i32], [8 x i32]* %123, i64 0, i64 0
  store i32 256, i32* %124, align 4
  %125 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %126 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %125, i32 0, i32 0
  %127 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %126, align 8
  %128 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %127, i32 0, i32 0
  %129 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %128, align 8
  %130 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %131 = bitcast %struct.jpeg_decompress_struct.469* %130 to %struct.jpeg_common_struct*
  call void %129(%struct.jpeg_common_struct* %131)
  br label %132

132:                                              ; preds = %114, %111
  %133 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %134 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %133, i32 0, i32 1
  %135 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %134, align 8
  %136 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %135, i32 0, i32 2
  %137 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %136, align 8
  %138 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %139 = bitcast %struct.jpeg_decompress_struct.469* %138 to %struct.jpeg_common_struct*
  %140 = load i32, i32* %5, align 4
  %141 = call i8** %137(%struct.jpeg_common_struct* %139, i32 1, i32 %140, i32 3)
  %142 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %143 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %142, i32 0, i32 1
  store i8** %141, i8*** %143, align 8
  %144 = load i32, i32* %5, align 4
  %145 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %146 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %145, i32 0, i32 2
  store i32 %144, i32* %146, align 8
  br label %150

147:                                              ; preds = %80
  %148 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %149 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %148, i32 0, i32 1
  store i8** null, i8*** %149, align 8
  br label %150

150:                                              ; preds = %147, %132
  %151 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %152 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %151, i32 0, i32 20
  %153 = load i32, i32* %152, align 8
  %154 = icmp ne i32 %153, 0
  br i1 %154, label %155, label %158

155:                                              ; preds = %150
  %156 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %157 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %156, i32 0, i32 20
  store i32 2, i32* %157, align 8
  br label %158

158:                                              ; preds = %155, %150
  %159 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %160 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %159, i32 0, i32 20
  %161 = load i32, i32* %160, align 8
  %162 = icmp eq i32 %161, 2
  br i1 %162, label %163, label %182

163:                                              ; preds = %158
  %164 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %165 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %164, i32 0, i32 1
  %166 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %165, align 8
  %167 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %166, i32 0, i32 1
  %168 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %167, align 8
  %169 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %170 = bitcast %struct.jpeg_decompress_struct.469* %169 to %struct.jpeg_common_struct*
  %171 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %172 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %171, i32 0, i32 26
  %173 = load i32, i32* %172, align 8
  %174 = add i32 %173, 2
  %175 = zext i32 %174 to i64
  %176 = mul i64 %175, 6
  %177 = call i8* %168(%struct.jpeg_common_struct* %170, i32 1, i64 %176)
  %178 = bitcast i8* %177 to i16*
  %179 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %180 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %179, i32 0, i32 5
  store i16* %178, i16** %180, align 8
  %181 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  call void @init_error_limit(%struct.jpeg_decompress_struct.469* %181)
  br label %182

182:                                              ; preds = %163, %158
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_2_quant(%struct.jpeg_decompress_struct.469* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.my_cquantizer.924*, align 8
  %6 = alloca [32 x i16]**, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %3, align 8
  store i32 %1, i32* %4, align 4
  %9 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %9, i32 0, i32 83
  %11 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %10, align 8
  %12 = bitcast %struct.jpeg_color_quantizer.487* %11 to %struct.my_cquantizer.924*
  store %struct.my_cquantizer.924* %12, %struct.my_cquantizer.924** %5, align 8
  %13 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %5, align 8
  %14 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %13, i32 0, i32 3
  %15 = load [32 x i16]**, [32 x i16]*** %14, align 8
  store [32 x i16]** %15, [32 x i16]*** %6, align 8
  %16 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %16, i32 0, i32 20
  %18 = load i32, i32* %17, align 8
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %21, i32 0, i32 20
  store i32 2, i32* %22, align 8
  br label %23

23:                                               ; preds = %20, %2
  %24 = load i32, i32* %4, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %36

26:                                               ; preds = %23
  %27 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %5, align 8
  %28 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %27, i32 0, i32 0
  %29 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %28, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)* @prescan_quantize, void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)** %29, align 8
  %30 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %5, align 8
  %31 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %30, i32 0, i32 0
  %32 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %31, i32 0, i32 2
  %33 = bitcast {}** %32 to void (%struct.jpeg_decompress_struct.469*)**
  store void (%struct.jpeg_decompress_struct.469*)* @finish_pass1, void (%struct.jpeg_decompress_struct.469*)** %33, align 8
  %34 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %5, align 8
  %35 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %34, i32 0, i32 4
  store i32 1, i32* %35, align 8
  br label %143

36:                                               ; preds = %23
  %37 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %38 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %37, i32 0, i32 20
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 2
  br i1 %40, label %41, label %45

41:                                               ; preds = %36
  %42 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %5, align 8
  %43 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %42, i32 0, i32 0
  %44 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %43, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)* @pass2_fs_dither, void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)** %44, align 8
  br label %49

45:                                               ; preds = %36
  %46 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %5, align 8
  %47 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %46, i32 0, i32 0
  %48 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %47, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)* @pass2_no_dither, void (%struct.jpeg_decompress_struct.469*, i8**, i8**, i32)** %48, align 8
  br label %49

49:                                               ; preds = %45, %41
  %50 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %5, align 8
  %51 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %50, i32 0, i32 0
  %52 = getelementptr inbounds %struct.jpeg_color_quantizer.487, %struct.jpeg_color_quantizer.487* %51, i32 0, i32 2
  %53 = bitcast {}** %52 to void (%struct.jpeg_decompress_struct.469*)**
  store void (%struct.jpeg_decompress_struct.469*)* @finish_pass2, void (%struct.jpeg_decompress_struct.469*)** %53, align 8
  %54 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %54, i32 0, i32 31
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* %7, align 4
  %57 = load i32, i32* %7, align 4
  %58 = icmp slt i32 %57, 1
  br i1 %58, label %59, label %77

59:                                               ; preds = %49
  %60 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %61 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %60, i32 0, i32 0
  %62 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %61, align 8
  %63 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %62, i32 0, i32 5
  store i32 55, i32* %63, align 8
  %64 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %65 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %64, i32 0, i32 0
  %66 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %65, align 8
  %67 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %66, i32 0, i32 6
  %68 = bitcast %union.anon* %67 to [8 x i32]*
  %69 = getelementptr inbounds [8 x i32], [8 x i32]* %68, i64 0, i64 0
  store i32 1, i32* %69, align 4
  %70 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %71 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %70, i32 0, i32 0
  %72 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %71, align 8
  %73 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %72, i32 0, i32 0
  %74 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %73, align 8
  %75 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %76 = bitcast %struct.jpeg_decompress_struct.469* %75 to %struct.jpeg_common_struct*
  call void %74(%struct.jpeg_common_struct* %76)
  br label %77

77:                                               ; preds = %59, %49
  %78 = load i32, i32* %7, align 4
  %79 = icmp sgt i32 %78, 256
  br i1 %79, label %80, label %98

80:                                               ; preds = %77
  %81 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %82 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %81, i32 0, i32 0
  %83 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %82, align 8
  %84 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %83, i32 0, i32 5
  store i32 56, i32* %84, align 8
  %85 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %86 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %85, i32 0, i32 0
  %87 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %86, align 8
  %88 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %87, i32 0, i32 6
  %89 = bitcast %union.anon* %88 to [8 x i32]*
  %90 = getelementptr inbounds [8 x i32], [8 x i32]* %89, i64 0, i64 0
  store i32 256, i32* %90, align 4
  %91 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %92 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %91, i32 0, i32 0
  %93 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %92, align 8
  %94 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %93, i32 0, i32 0
  %95 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %94, align 8
  %96 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %97 = bitcast %struct.jpeg_decompress_struct.469* %96 to %struct.jpeg_common_struct*
  call void %95(%struct.jpeg_common_struct* %97)
  br label %98

98:                                               ; preds = %80, %77
  %99 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %100 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %99, i32 0, i32 20
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %101, 2
  br i1 %102, label %103, label %142

103:                                              ; preds = %98
  %104 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %105 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %104, i32 0, i32 26
  %106 = load i32, i32* %105, align 8
  %107 = add i32 %106, 2
  %108 = zext i32 %107 to i64
  %109 = mul i64 %108, 6
  store i64 %109, i64* %8, align 8
  %110 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %5, align 8
  %111 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %110, i32 0, i32 5
  %112 = load i16*, i16** %111, align 8
  %113 = icmp eq i16* %112, null
  br i1 %113, label %114, label %127

114:                                              ; preds = %103
  %115 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %116 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %115, i32 0, i32 1
  %117 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %116, align 8
  %118 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %117, i32 0, i32 1
  %119 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %118, align 8
  %120 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %121 = bitcast %struct.jpeg_decompress_struct.469* %120 to %struct.jpeg_common_struct*
  %122 = load i64, i64* %8, align 8
  %123 = call i8* %119(%struct.jpeg_common_struct* %121, i32 1, i64 %122)
  %124 = bitcast i8* %123 to i16*
  %125 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %5, align 8
  %126 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %125, i32 0, i32 5
  store i16* %124, i16** %126, align 8
  br label %127

127:                                              ; preds = %114, %103
  %128 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %5, align 8
  %129 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %128, i32 0, i32 5
  %130 = load i16*, i16** %129, align 8
  %131 = bitcast i16* %130 to i8*
  %132 = load i64, i64* %8, align 8
  call void @jzero_far(i8* %131, i64 %132)
  %133 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %5, align 8
  %134 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %133, i32 0, i32 7
  %135 = load i32*, i32** %134, align 8
  %136 = icmp eq i32* %135, null
  br i1 %136, label %137, label %139

137:                                              ; preds = %127
  %138 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  call void @init_error_limit(%struct.jpeg_decompress_struct.469* %138)
  br label %139

139:                                              ; preds = %137, %127
  %140 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %5, align 8
  %141 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %140, i32 0, i32 6
  store i32 0, i32* %141, align 8
  br label %142

142:                                              ; preds = %139, %98
  br label %143

143:                                              ; preds = %142, %26
  %144 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %5, align 8
  %145 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %144, i32 0, i32 4
  %146 = load i32, i32* %145, align 8
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %148, label %165

148:                                              ; preds = %143
  store i32 0, i32* %7, align 4
  br label %149

149:                                              ; preds = %159, %148
  %150 = load i32, i32* %7, align 4
  %151 = icmp slt i32 %150, 32
  br i1 %151, label %152, label %162

152:                                              ; preds = %149
  %153 = load [32 x i16]**, [32 x i16]*** %6, align 8
  %154 = load i32, i32* %7, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [32 x i16]*, [32 x i16]** %153, i64 %155
  %157 = load [32 x i16]*, [32 x i16]** %156, align 8
  %158 = bitcast [32 x i16]* %157 to i8*
  call void @jzero_far(i8* %158, i64 4096)
  br label %159

159:                                              ; preds = %152
  %160 = load i32, i32* %7, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %7, align 4
  br label %149

162:                                              ; preds = %149
  %163 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %5, align 8
  %164 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %163, i32 0, i32 4
  store i32 0, i32* %164, align 8
  br label %165

165:                                              ; preds = %162, %143
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @new_color_map_2_quant(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_cquantizer.924*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %4 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %4, i32 0, i32 83
  %6 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %5, align 8
  %7 = bitcast %struct.jpeg_color_quantizer.487* %6 to %struct.my_cquantizer.924*
  store %struct.my_cquantizer.924* %7, %struct.my_cquantizer.924** %3, align 8
  %8 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %9 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %8, i32 0, i32 4
  store i32 1, i32* %9, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_error_limit(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_cquantizer.924*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %7 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %7, i32 0, i32 83
  %9 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %8, align 8
  %10 = bitcast %struct.jpeg_color_quantizer.487* %9 to %struct.my_cquantizer.924*
  store %struct.my_cquantizer.924* %10, %struct.my_cquantizer.924** %3, align 8
  %11 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %11, i32 0, i32 1
  %13 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %13, i32 0, i32 0
  %15 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %14, align 8
  %16 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %17 = bitcast %struct.jpeg_decompress_struct.469* %16 to %struct.jpeg_common_struct*
  %18 = call i8* %15(%struct.jpeg_common_struct* %17, i32 1, i64 2044)
  %19 = bitcast i8* %18 to i32*
  store i32* %19, i32** %4, align 8
  %20 = load i32*, i32** %4, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 255
  store i32* %21, i32** %4, align 8
  %22 = load i32*, i32** %4, align 8
  %23 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %24 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %23, i32 0, i32 7
  store i32* %22, i32** %24, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %5, align 4
  br label %25

25:                                               ; preds = %41, %1
  %26 = load i32, i32* %5, align 4
  %27 = icmp slt i32 %26, 16
  br i1 %27, label %28, label %46

28:                                               ; preds = %25
  %29 = load i32, i32* %6, align 4
  %30 = load i32*, i32** %4, align 8
  %31 = load i32, i32* %5, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i32, i32* %30, i64 %32
  store i32 %29, i32* %33, align 4
  %34 = load i32, i32* %6, align 4
  %35 = sub nsw i32 0, %34
  %36 = load i32*, i32** %4, align 8
  %37 = load i32, i32* %5, align 4
  %38 = sub nsw i32 0, %37
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %36, i64 %39
  store i32 %35, i32* %40, align 4
  br label %41

41:                                               ; preds = %28
  %42 = load i32, i32* %5, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %5, align 4
  %44 = load i32, i32* %6, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %6, align 4
  br label %25

46:                                               ; preds = %25
  br label %47

47:                                               ; preds = %63, %46
  %48 = load i32, i32* %5, align 4
  %49 = icmp slt i32 %48, 48
  br i1 %49, label %50, label %73

50:                                               ; preds = %47
  %51 = load i32, i32* %6, align 4
  %52 = load i32*, i32** %4, align 8
  %53 = load i32, i32* %5, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32* %52, i64 %54
  store i32 %51, i32* %55, align 4
  %56 = load i32, i32* %6, align 4
  %57 = sub nsw i32 0, %56
  %58 = load i32*, i32** %4, align 8
  %59 = load i32, i32* %5, align 4
  %60 = sub nsw i32 0, %59
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i32, i32* %58, i64 %61
  store i32 %57, i32* %62, align 4
  br label %63

63:                                               ; preds = %50
  %64 = load i32, i32* %5, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %5, align 4
  %66 = load i32, i32* %5, align 4
  %67 = and i32 %66, 1
  %68 = icmp ne i32 %67, 0
  %69 = zext i1 %68 to i64
  %70 = select i1 %68, i32 0, i32 1
  %71 = load i32, i32* %6, align 4
  %72 = add nsw i32 %71, %70
  store i32 %72, i32* %6, align 4
  br label %47

73:                                               ; preds = %47
  br label %74

74:                                               ; preds = %90, %73
  %75 = load i32, i32* %5, align 4
  %76 = icmp sle i32 %75, 255
  br i1 %76, label %77, label %93

77:                                               ; preds = %74
  %78 = load i32, i32* %6, align 4
  %79 = load i32*, i32** %4, align 8
  %80 = load i32, i32* %5, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i32, i32* %79, i64 %81
  store i32 %78, i32* %82, align 4
  %83 = load i32, i32* %6, align 4
  %84 = sub nsw i32 0, %83
  %85 = load i32*, i32** %4, align 8
  %86 = load i32, i32* %5, align 4
  %87 = sub nsw i32 0, %86
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i32, i32* %85, i64 %88
  store i32 %84, i32* %89, align 4
  br label %90

90:                                               ; preds = %77
  %91 = load i32, i32* %5, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %5, align 4
  br label %74

93:                                               ; preds = %74
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @prescan_quantize(%struct.jpeg_decompress_struct.469* %0, i8** %1, i8** %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.my_cquantizer.924*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i16*, align 8
  %12 = alloca [32 x i16]**, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i32 %3, i32* %8, align 4
  %16 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %16, i32 0, i32 83
  %18 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %17, align 8
  %19 = bitcast %struct.jpeg_color_quantizer.487* %18 to %struct.my_cquantizer.924*
  store %struct.my_cquantizer.924* %19, %struct.my_cquantizer.924** %9, align 8
  %20 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %9, align 8
  %21 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %20, i32 0, i32 3
  %22 = load [32 x i16]**, [32 x i16]*** %21, align 8
  store [32 x i16]** %22, [32 x i16]*** %12, align 8
  %23 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %23, i32 0, i32 26
  %25 = load i32, i32* %24, align 8
  store i32 %25, i32* %15, align 4
  store i32 0, i32* %13, align 4
  br label %26

26:                                               ; preds = %80, %4
  %27 = load i32, i32* %13, align 4
  %28 = load i32, i32* %8, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %83

30:                                               ; preds = %26
  %31 = load i8**, i8*** %6, align 8
  %32 = load i32, i32* %13, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8*, i8** %31, i64 %33
  %35 = load i8*, i8** %34, align 8
  store i8* %35, i8** %10, align 8
  %36 = load i32, i32* %15, align 4
  store i32 %36, i32* %14, align 4
  br label %37

37:                                               ; preds = %76, %30
  %38 = load i32, i32* %14, align 4
  %39 = icmp ugt i32 %38, 0
  br i1 %39, label %40, label %79

40:                                               ; preds = %37
  %41 = load [32 x i16]**, [32 x i16]*** %12, align 8
  %42 = load i8*, i8** %10, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 0
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = ashr i32 %45, 3
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32 x i16]*, [32 x i16]** %41, i64 %47
  %49 = load [32 x i16]*, [32 x i16]** %48, align 8
  %50 = load i8*, i8** %10, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 1
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = ashr i32 %53, 2
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [32 x i16], [32 x i16]* %49, i64 %55
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 2
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = ashr i32 %60, 3
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [32 x i16], [32 x i16]* %56, i64 0, i64 %62
  store i16* %63, i16** %11, align 8
  %64 = load i16*, i16** %11, align 8
  %65 = load i16, i16* %64, align 2
  %66 = add i16 %65, 1
  store i16 %66, i16* %64, align 2
  %67 = zext i16 %66 to i32
  %68 = icmp sle i32 %67, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %40
  %70 = load i16*, i16** %11, align 8
  %71 = load i16, i16* %70, align 2
  %72 = add i16 %71, -1
  store i16 %72, i16* %70, align 2
  br label %73

73:                                               ; preds = %69, %40
  %74 = load i8*, i8** %10, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 3
  store i8* %75, i8** %10, align 8
  br label %76

76:                                               ; preds = %73
  %77 = load i32, i32* %14, align 4
  %78 = add i32 %77, -1
  store i32 %78, i32* %14, align 4
  br label %37

79:                                               ; preds = %37
  br label %80

80:                                               ; preds = %79
  %81 = load i32, i32* %13, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %13, align 4
  br label %26

83:                                               ; preds = %26
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_pass1(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %3 = alloca %struct.my_cquantizer.924*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  %4 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %4, i32 0, i32 83
  %6 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %5, align 8
  %7 = bitcast %struct.jpeg_color_quantizer.487* %6 to %struct.my_cquantizer.924*
  store %struct.my_cquantizer.924* %7, %struct.my_cquantizer.924** %3, align 8
  %8 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %9 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %8, i32 0, i32 1
  %10 = load i8**, i8*** %9, align 8
  %11 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %11, i32 0, i32 32
  store i8** %10, i8*** %12, align 8
  %13 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %2, align 8
  %14 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %15 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  call void @select_colors(%struct.jpeg_decompress_struct.469* %13, i32 %16)
  %17 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %3, align 8
  %18 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %17, i32 0, i32 4
  store i32 1, i32* %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @pass2_fs_dither(%struct.jpeg_decompress_struct.469* %0, i8** %1, i8** %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.my_cquantizer.924*, align 8
  %10 = alloca [32 x i16]**, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i16*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i16*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i8*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i8*, align 8
  %33 = alloca i8*, align 8
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i32 %3, i32* %8, align 4
  %37 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %38 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %37, i32 0, i32 83
  %39 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %38, align 8
  %40 = bitcast %struct.jpeg_color_quantizer.487* %39 to %struct.my_cquantizer.924*
  store %struct.my_cquantizer.924* %40, %struct.my_cquantizer.924** %9, align 8
  %41 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %9, align 8
  %42 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %41, i32 0, i32 3
  %43 = load [32 x i16]**, [32 x i16]*** %42, align 8
  store [32 x i16]** %43, [32 x i16]*** %10, align 8
  %44 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %45 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %44, i32 0, i32 26
  %46 = load i32, i32* %45, align 8
  store i32 %46, i32* %28, align 4
  %47 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %47, i32 0, i32 61
  %49 = load i8*, i8** %48, align 8
  store i8* %49, i8** %29, align 8
  %50 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %9, align 8
  %51 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %50, i32 0, i32 7
  %52 = load i32*, i32** %51, align 8
  store i32* %52, i32** %30, align 8
  %53 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %54 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %53, i32 0, i32 32
  %55 = load i8**, i8*** %54, align 8
  %56 = getelementptr inbounds i8*, i8** %55, i64 0
  %57 = load i8*, i8** %56, align 8
  store i8* %57, i8** %31, align 8
  %58 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %59 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %58, i32 0, i32 32
  %60 = load i8**, i8*** %59, align 8
  %61 = getelementptr inbounds i8*, i8** %60, i64 1
  %62 = load i8*, i8** %61, align 8
  store i8* %62, i8** %32, align 8
  %63 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %64 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %63, i32 0, i32 32
  %65 = load i8**, i8*** %64, align 8
  %66 = getelementptr inbounds i8*, i8** %65, i64 2
  %67 = load i8*, i8** %66, align 8
  store i8* %67, i8** %33, align 8
  store i32 0, i32* %26, align 4
  br label %68

68:                                               ; preds = %357, %4
  %69 = load i32, i32* %26, align 4
  %70 = load i32, i32* %8, align 4
  %71 = icmp slt i32 %69, %70
  br i1 %71, label %72, label %360

72:                                               ; preds = %68
  %73 = load i8**, i8*** %6, align 8
  %74 = load i32, i32* %26, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8*, i8** %73, i64 %75
  %77 = load i8*, i8** %76, align 8
  store i8* %77, i8** %21, align 8
  %78 = load i8**, i8*** %7, align 8
  %79 = load i32, i32* %26, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i8*, i8** %78, i64 %80
  %82 = load i8*, i8** %81, align 8
  store i8* %82, i8** %22, align 8
  %83 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %9, align 8
  %84 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %83, i32 0, i32 6
  %85 = load i32, i32* %84, align 8
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %109

87:                                               ; preds = %72
  %88 = load i32, i32* %28, align 4
  %89 = sub i32 %88, 1
  %90 = mul i32 %89, 3
  %91 = load i8*, i8** %21, align 8
  %92 = zext i32 %90 to i64
  %93 = getelementptr inbounds i8, i8* %91, i64 %92
  store i8* %93, i8** %21, align 8
  %94 = load i32, i32* %28, align 4
  %95 = sub i32 %94, 1
  %96 = load i8*, i8** %22, align 8
  %97 = zext i32 %95 to i64
  %98 = getelementptr inbounds i8, i8* %96, i64 %97
  store i8* %98, i8** %22, align 8
  store i32 -1, i32* %24, align 4
  store i32 -3, i32* %25, align 4
  %99 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %9, align 8
  %100 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %99, i32 0, i32 5
  %101 = load i16*, i16** %100, align 8
  %102 = load i32, i32* %28, align 4
  %103 = add i32 %102, 1
  %104 = mul i32 %103, 3
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i16, i16* %101, i64 %105
  store i16* %106, i16** %20, align 8
  %107 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %9, align 8
  %108 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %107, i32 0, i32 6
  store i32 0, i32* %108, align 8
  br label %115

109:                                              ; preds = %72
  store i32 1, i32* %24, align 4
  store i32 3, i32* %25, align 4
  %110 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %9, align 8
  %111 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %110, i32 0, i32 5
  %112 = load i16*, i16** %111, align 8
  store i16* %112, i16** %20, align 8
  %113 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %9, align 8
  %114 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %113, i32 0, i32 6
  store i32 1, i32* %114, align 8
  br label %115

115:                                              ; preds = %109, %87
  store i32 0, i32* %13, align 4
  store i32 0, i32* %12, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %16, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %14, align 4
  store i32 0, i32* %19, align 4
  store i32 0, i32* %18, align 4
  store i32 0, i32* %17, align 4
  %116 = load i32, i32* %28, align 4
  store i32 %116, i32* %27, align 4
  br label %117

117:                                              ; preds = %341, %115
  %118 = load i32, i32* %27, align 4
  %119 = icmp ugt i32 %118, 0
  br i1 %119, label %120, label %344

120:                                              ; preds = %117
  %121 = load i32, i32* %11, align 4
  %122 = load i16*, i16** %20, align 8
  %123 = load i32, i32* %25, align 4
  %124 = add nsw i32 %123, 0
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i16, i16* %122, i64 %125
  %127 = load i16, i16* %126, align 2
  %128 = sext i16 %127 to i32
  %129 = add nsw i32 %121, %128
  %130 = add nsw i32 %129, 8
  %131 = ashr i32 %130, 4
  store i32 %131, i32* %11, align 4
  %132 = load i32, i32* %12, align 4
  %133 = load i16*, i16** %20, align 8
  %134 = load i32, i32* %25, align 4
  %135 = add nsw i32 %134, 1
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i16, i16* %133, i64 %136
  %138 = load i16, i16* %137, align 2
  %139 = sext i16 %138 to i32
  %140 = add nsw i32 %132, %139
  %141 = add nsw i32 %140, 8
  %142 = ashr i32 %141, 4
  store i32 %142, i32* %12, align 4
  %143 = load i32, i32* %13, align 4
  %144 = load i16*, i16** %20, align 8
  %145 = load i32, i32* %25, align 4
  %146 = add nsw i32 %145, 2
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %144, i64 %147
  %149 = load i16, i16* %148, align 2
  %150 = sext i16 %149 to i32
  %151 = add nsw i32 %143, %150
  %152 = add nsw i32 %151, 8
  %153 = ashr i32 %152, 4
  store i32 %153, i32* %13, align 4
  %154 = load i32*, i32** %30, align 8
  %155 = load i32, i32* %11, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i32, i32* %154, i64 %156
  %158 = load i32, i32* %157, align 4
  store i32 %158, i32* %11, align 4
  %159 = load i32*, i32** %30, align 8
  %160 = load i32, i32* %12, align 4
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i32, i32* %159, i64 %161
  %163 = load i32, i32* %162, align 4
  store i32 %163, i32* %12, align 4
  %164 = load i32*, i32** %30, align 8
  %165 = load i32, i32* %13, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i32, i32* %164, i64 %166
  %168 = load i32, i32* %167, align 4
  store i32 %168, i32* %13, align 4
  %169 = load i8*, i8** %21, align 8
  %170 = getelementptr inbounds i8, i8* %169, i64 0
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = load i32, i32* %11, align 4
  %174 = add nsw i32 %173, %172
  store i32 %174, i32* %11, align 4
  %175 = load i8*, i8** %21, align 8
  %176 = getelementptr inbounds i8, i8* %175, i64 1
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i32
  %179 = load i32, i32* %12, align 4
  %180 = add nsw i32 %179, %178
  store i32 %180, i32* %12, align 4
  %181 = load i8*, i8** %21, align 8
  %182 = getelementptr inbounds i8, i8* %181, i64 2
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i32
  %185 = load i32, i32* %13, align 4
  %186 = add nsw i32 %185, %184
  store i32 %186, i32* %13, align 4
  %187 = load i8*, i8** %29, align 8
  %188 = load i32, i32* %11, align 4
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds i8, i8* %187, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i32
  store i32 %192, i32* %11, align 4
  %193 = load i8*, i8** %29, align 8
  %194 = load i32, i32* %12, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, i8* %193, i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i32
  store i32 %198, i32* %12, align 4
  %199 = load i8*, i8** %29, align 8
  %200 = load i32, i32* %13, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds i8, i8* %199, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  store i32 %204, i32* %13, align 4
  %205 = load [32 x i16]**, [32 x i16]*** %10, align 8
  %206 = load i32, i32* %11, align 4
  %207 = ashr i32 %206, 3
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [32 x i16]*, [32 x i16]** %205, i64 %208
  %210 = load [32 x i16]*, [32 x i16]** %209, align 8
  %211 = load i32, i32* %12, align 4
  %212 = ashr i32 %211, 2
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [32 x i16], [32 x i16]* %210, i64 %213
  %215 = load i32, i32* %13, align 4
  %216 = ashr i32 %215, 3
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [32 x i16], [32 x i16]* %214, i64 0, i64 %217
  store i16* %218, i16** %23, align 8
  %219 = load i16*, i16** %23, align 8
  %220 = load i16, i16* %219, align 2
  %221 = zext i16 %220 to i32
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %231

223:                                              ; preds = %120
  %224 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %225 = load i32, i32* %11, align 4
  %226 = ashr i32 %225, 3
  %227 = load i32, i32* %12, align 4
  %228 = ashr i32 %227, 2
  %229 = load i32, i32* %13, align 4
  %230 = ashr i32 %229, 3
  call void @fill_inverse_cmap(%struct.jpeg_decompress_struct.469* %224, i32 %226, i32 %228, i32 %230)
  br label %231

231:                                              ; preds = %223, %120
  %232 = load i16*, i16** %23, align 8
  %233 = load i16, i16* %232, align 2
  %234 = zext i16 %233 to i32
  %235 = sub nsw i32 %234, 1
  store i32 %235, i32* %34, align 4
  %236 = load i32, i32* %34, align 4
  %237 = trunc i32 %236 to i8
  %238 = load i8*, i8** %22, align 8
  store i8 %237, i8* %238, align 1
  %239 = load i8*, i8** %31, align 8
  %240 = load i32, i32* %34, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i8, i8* %239, i64 %241
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i32
  %245 = load i32, i32* %11, align 4
  %246 = sub nsw i32 %245, %244
  store i32 %246, i32* %11, align 4
  %247 = load i8*, i8** %32, align 8
  %248 = load i32, i32* %34, align 4
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds i8, i8* %247, i64 %249
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i32
  %253 = load i32, i32* %12, align 4
  %254 = sub nsw i32 %253, %252
  store i32 %254, i32* %12, align 4
  %255 = load i8*, i8** %33, align 8
  %256 = load i32, i32* %34, align 4
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds i8, i8* %255, i64 %257
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i32
  %261 = load i32, i32* %13, align 4
  %262 = sub nsw i32 %261, %260
  store i32 %262, i32* %13, align 4
  %263 = load i32, i32* %11, align 4
  store i32 %263, i32* %35, align 4
  %264 = load i32, i32* %11, align 4
  %265 = mul nsw i32 %264, 2
  store i32 %265, i32* %36, align 4
  %266 = load i32, i32* %36, align 4
  %267 = load i32, i32* %11, align 4
  %268 = add nsw i32 %267, %266
  store i32 %268, i32* %11, align 4
  %269 = load i32, i32* %17, align 4
  %270 = load i32, i32* %11, align 4
  %271 = add nsw i32 %269, %270
  %272 = trunc i32 %271 to i16
  %273 = load i16*, i16** %20, align 8
  %274 = getelementptr inbounds i16, i16* %273, i64 0
  store i16 %272, i16* %274, align 2
  %275 = load i32, i32* %36, align 4
  %276 = load i32, i32* %11, align 4
  %277 = add nsw i32 %276, %275
  store i32 %277, i32* %11, align 4
  %278 = load i32, i32* %14, align 4
  %279 = load i32, i32* %11, align 4
  %280 = add nsw i32 %278, %279
  store i32 %280, i32* %17, align 4
  %281 = load i32, i32* %35, align 4
  store i32 %281, i32* %14, align 4
  %282 = load i32, i32* %36, align 4
  %283 = load i32, i32* %11, align 4
  %284 = add nsw i32 %283, %282
  store i32 %284, i32* %11, align 4
  %285 = load i32, i32* %12, align 4
  store i32 %285, i32* %35, align 4
  %286 = load i32, i32* %12, align 4
  %287 = mul nsw i32 %286, 2
  store i32 %287, i32* %36, align 4
  %288 = load i32, i32* %36, align 4
  %289 = load i32, i32* %12, align 4
  %290 = add nsw i32 %289, %288
  store i32 %290, i32* %12, align 4
  %291 = load i32, i32* %18, align 4
  %292 = load i32, i32* %12, align 4
  %293 = add nsw i32 %291, %292
  %294 = trunc i32 %293 to i16
  %295 = load i16*, i16** %20, align 8
  %296 = getelementptr inbounds i16, i16* %295, i64 1
  store i16 %294, i16* %296, align 2
  %297 = load i32, i32* %36, align 4
  %298 = load i32, i32* %12, align 4
  %299 = add nsw i32 %298, %297
  store i32 %299, i32* %12, align 4
  %300 = load i32, i32* %15, align 4
  %301 = load i32, i32* %12, align 4
  %302 = add nsw i32 %300, %301
  store i32 %302, i32* %18, align 4
  %303 = load i32, i32* %35, align 4
  store i32 %303, i32* %15, align 4
  %304 = load i32, i32* %36, align 4
  %305 = load i32, i32* %12, align 4
  %306 = add nsw i32 %305, %304
  store i32 %306, i32* %12, align 4
  %307 = load i32, i32* %13, align 4
  store i32 %307, i32* %35, align 4
  %308 = load i32, i32* %13, align 4
  %309 = mul nsw i32 %308, 2
  store i32 %309, i32* %36, align 4
  %310 = load i32, i32* %36, align 4
  %311 = load i32, i32* %13, align 4
  %312 = add nsw i32 %311, %310
  store i32 %312, i32* %13, align 4
  %313 = load i32, i32* %19, align 4
  %314 = load i32, i32* %13, align 4
  %315 = add nsw i32 %313, %314
  %316 = trunc i32 %315 to i16
  %317 = load i16*, i16** %20, align 8
  %318 = getelementptr inbounds i16, i16* %317, i64 2
  store i16 %316, i16* %318, align 2
  %319 = load i32, i32* %36, align 4
  %320 = load i32, i32* %13, align 4
  %321 = add nsw i32 %320, %319
  store i32 %321, i32* %13, align 4
  %322 = load i32, i32* %16, align 4
  %323 = load i32, i32* %13, align 4
  %324 = add nsw i32 %322, %323
  store i32 %324, i32* %19, align 4
  %325 = load i32, i32* %35, align 4
  store i32 %325, i32* %16, align 4
  %326 = load i32, i32* %36, align 4
  %327 = load i32, i32* %13, align 4
  %328 = add nsw i32 %327, %326
  store i32 %328, i32* %13, align 4
  %329 = load i32, i32* %25, align 4
  %330 = load i8*, i8** %21, align 8
  %331 = sext i32 %329 to i64
  %332 = getelementptr inbounds i8, i8* %330, i64 %331
  store i8* %332, i8** %21, align 8
  %333 = load i32, i32* %24, align 4
  %334 = load i8*, i8** %22, align 8
  %335 = sext i32 %333 to i64
  %336 = getelementptr inbounds i8, i8* %334, i64 %335
  store i8* %336, i8** %22, align 8
  %337 = load i32, i32* %25, align 4
  %338 = load i16*, i16** %20, align 8
  %339 = sext i32 %337 to i64
  %340 = getelementptr inbounds i16, i16* %338, i64 %339
  store i16* %340, i16** %20, align 8
  br label %341

341:                                              ; preds = %231
  %342 = load i32, i32* %27, align 4
  %343 = add i32 %342, -1
  store i32 %343, i32* %27, align 4
  br label %117

344:                                              ; preds = %117
  %345 = load i32, i32* %17, align 4
  %346 = trunc i32 %345 to i16
  %347 = load i16*, i16** %20, align 8
  %348 = getelementptr inbounds i16, i16* %347, i64 0
  store i16 %346, i16* %348, align 2
  %349 = load i32, i32* %18, align 4
  %350 = trunc i32 %349 to i16
  %351 = load i16*, i16** %20, align 8
  %352 = getelementptr inbounds i16, i16* %351, i64 1
  store i16 %350, i16* %352, align 2
  %353 = load i32, i32* %19, align 4
  %354 = trunc i32 %353 to i16
  %355 = load i16*, i16** %20, align 8
  %356 = getelementptr inbounds i16, i16* %355, i64 2
  store i16 %354, i16* %356, align 2
  br label %357

357:                                              ; preds = %344
  %358 = load i32, i32* %26, align 4
  %359 = add nsw i32 %358, 1
  store i32 %359, i32* %26, align 4
  br label %68

360:                                              ; preds = %68
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @pass2_no_dither(%struct.jpeg_decompress_struct.469* %0, i8** %1, i8** %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.my_cquantizer.924*, align 8
  %10 = alloca [32 x i16]**, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i16*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i32 %3, i32* %8, align 4
  %20 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %20, i32 0, i32 83
  %22 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %21, align 8
  %23 = bitcast %struct.jpeg_color_quantizer.487* %22 to %struct.my_cquantizer.924*
  store %struct.my_cquantizer.924* %23, %struct.my_cquantizer.924** %9, align 8
  %24 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %9, align 8
  %25 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %24, i32 0, i32 3
  %26 = load [32 x i16]**, [32 x i16]*** %25, align 8
  store [32 x i16]** %26, [32 x i16]*** %10, align 8
  %27 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %27, i32 0, i32 26
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %19, align 4
  store i32 0, i32* %17, align 4
  br label %30

30:                                               ; preds = %97, %4
  %31 = load i32, i32* %17, align 4
  %32 = load i32, i32* %8, align 4
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %34, label %100

34:                                               ; preds = %30
  %35 = load i8**, i8*** %6, align 8
  %36 = load i32, i32* %17, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8*, i8** %35, i64 %37
  %39 = load i8*, i8** %38, align 8
  store i8* %39, i8** %11, align 8
  %40 = load i8**, i8*** %7, align 8
  %41 = load i32, i32* %17, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8*, i8** %40, i64 %42
  %44 = load i8*, i8** %43, align 8
  store i8* %44, i8** %12, align 8
  %45 = load i32, i32* %19, align 4
  store i32 %45, i32* %18, align 4
  br label %46

46:                                               ; preds = %93, %34
  %47 = load i32, i32* %18, align 4
  %48 = icmp ugt i32 %47, 0
  br i1 %48, label %49, label %96

49:                                               ; preds = %46
  %50 = load i8*, i8** %11, align 8
  %51 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %51, i8** %11, align 8
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i32
  %54 = ashr i32 %53, 3
  store i32 %54, i32* %14, align 4
  %55 = load i8*, i8** %11, align 8
  %56 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %56, i8** %11, align 8
  %57 = load i8, i8* %55, align 1
  %58 = zext i8 %57 to i32
  %59 = ashr i32 %58, 2
  store i32 %59, i32* %15, align 4
  %60 = load i8*, i8** %11, align 8
  %61 = getelementptr inbounds i8, i8* %60, i32 1
  store i8* %61, i8** %11, align 8
  %62 = load i8, i8* %60, align 1
  %63 = zext i8 %62 to i32
  %64 = ashr i32 %63, 3
  store i32 %64, i32* %16, align 4
  %65 = load [32 x i16]**, [32 x i16]*** %10, align 8
  %66 = load i32, i32* %14, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [32 x i16]*, [32 x i16]** %65, i64 %67
  %69 = load [32 x i16]*, [32 x i16]** %68, align 8
  %70 = load i32, i32* %15, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [32 x i16], [32 x i16]* %69, i64 %71
  %73 = load i32, i32* %16, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [32 x i16], [32 x i16]* %72, i64 0, i64 %74
  store i16* %75, i16** %13, align 8
  %76 = load i16*, i16** %13, align 8
  %77 = load i16, i16* %76, align 2
  %78 = zext i16 %77 to i32
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %49
  %81 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %82 = load i32, i32* %14, align 4
  %83 = load i32, i32* %15, align 4
  %84 = load i32, i32* %16, align 4
  call void @fill_inverse_cmap(%struct.jpeg_decompress_struct.469* %81, i32 %82, i32 %83, i32 %84)
  br label %85

85:                                               ; preds = %80, %49
  %86 = load i16*, i16** %13, align 8
  %87 = load i16, i16* %86, align 2
  %88 = zext i16 %87 to i32
  %89 = sub nsw i32 %88, 1
  %90 = trunc i32 %89 to i8
  %91 = load i8*, i8** %12, align 8
  %92 = getelementptr inbounds i8, i8* %91, i32 1
  store i8* %92, i8** %12, align 8
  store i8 %90, i8* %91, align 1
  br label %93

93:                                               ; preds = %85
  %94 = load i32, i32* %18, align 4
  %95 = add i32 %94, -1
  store i32 %95, i32* %18, align 4
  br label %46

96:                                               ; preds = %46
  br label %97

97:                                               ; preds = %96
  %98 = load i32, i32* %17, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %17, align 4
  br label %30

100:                                              ; preds = %30
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_pass2(%struct.jpeg_decompress_struct.469* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.469*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @fill_inverse_cmap(%struct.jpeg_decompress_struct.469* %0, i32 %1, i32 %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.my_cquantizer.924*, align 8
  %10 = alloca [32 x i16]**, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i16*, align 8
  %19 = alloca [256 x i8], align 16
  %20 = alloca i32, align 4
  %21 = alloca [128 x i8], align 16
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %22 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %22, i32 0, i32 83
  %24 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %23, align 8
  %25 = bitcast %struct.jpeg_color_quantizer.487* %24 to %struct.my_cquantizer.924*
  store %struct.my_cquantizer.924* %25, %struct.my_cquantizer.924** %9, align 8
  %26 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %9, align 8
  %27 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %26, i32 0, i32 3
  %28 = load [32 x i16]**, [32 x i16]*** %27, align 8
  store [32 x i16]** %28, [32 x i16]*** %10, align 8
  %29 = load i32, i32* %6, align 4
  %30 = ashr i32 %29, 2
  store i32 %30, i32* %6, align 4
  %31 = load i32, i32* %7, align 4
  %32 = ashr i32 %31, 3
  store i32 %32, i32* %7, align 4
  %33 = load i32, i32* %8, align 4
  %34 = ashr i32 %33, 2
  store i32 %34, i32* %8, align 4
  %35 = load i32, i32* %6, align 4
  %36 = shl i32 %35, 5
  %37 = add nsw i32 %36, 4
  store i32 %37, i32* %11, align 4
  %38 = load i32, i32* %7, align 4
  %39 = shl i32 %38, 5
  %40 = add nsw i32 %39, 2
  store i32 %40, i32* %12, align 4
  %41 = load i32, i32* %8, align 4
  %42 = shl i32 %41, 5
  %43 = add nsw i32 %42, 4
  store i32 %43, i32* %13, align 4
  %44 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %45 = load i32, i32* %11, align 4
  %46 = load i32, i32* %12, align 4
  %47 = load i32, i32* %13, align 4
  %48 = getelementptr inbounds [256 x i8], [256 x i8]* %19, i64 0, i64 0
  %49 = call i32 @find_nearby_colors(%struct.jpeg_decompress_struct.469* %44, i32 %45, i32 %46, i32 %47, i8* %48)
  store i32 %49, i32* %20, align 4
  %50 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %51 = load i32, i32* %11, align 4
  %52 = load i32, i32* %12, align 4
  %53 = load i32, i32* %13, align 4
  %54 = load i32, i32* %20, align 4
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* %19, i64 0, i64 0
  %56 = getelementptr inbounds [128 x i8], [128 x i8]* %21, i64 0, i64 0
  call void @find_best_colors(%struct.jpeg_decompress_struct.469* %50, i32 %51, i32 %52, i32 %53, i32 %54, i8* %55, i8* %56)
  %57 = load i32, i32* %6, align 4
  %58 = shl i32 %57, 2
  store i32 %58, i32* %6, align 4
  %59 = load i32, i32* %7, align 4
  %60 = shl i32 %59, 3
  store i32 %60, i32* %7, align 4
  %61 = load i32, i32* %8, align 4
  %62 = shl i32 %61, 2
  store i32 %62, i32* %8, align 4
  %63 = getelementptr inbounds [128 x i8], [128 x i8]* %21, i64 0, i64 0
  store i8* %63, i8** %17, align 8
  store i32 0, i32* %14, align 4
  br label %64

64:                                               ; preds = %107, %4
  %65 = load i32, i32* %14, align 4
  %66 = icmp slt i32 %65, 4
  br i1 %66, label %67, label %110

67:                                               ; preds = %64
  store i32 0, i32* %15, align 4
  br label %68

68:                                               ; preds = %103, %67
  %69 = load i32, i32* %15, align 4
  %70 = icmp slt i32 %69, 8
  br i1 %70, label %71, label %106

71:                                               ; preds = %68
  %72 = load [32 x i16]**, [32 x i16]*** %10, align 8
  %73 = load i32, i32* %6, align 4
  %74 = load i32, i32* %14, align 4
  %75 = add nsw i32 %73, %74
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [32 x i16]*, [32 x i16]** %72, i64 %76
  %78 = load [32 x i16]*, [32 x i16]** %77, align 8
  %79 = load i32, i32* %7, align 4
  %80 = load i32, i32* %15, align 4
  %81 = add nsw i32 %79, %80
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [32 x i16], [32 x i16]* %78, i64 %82
  %84 = load i32, i32* %8, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [32 x i16], [32 x i16]* %83, i64 0, i64 %85
  store i16* %86, i16** %18, align 8
  store i32 0, i32* %16, align 4
  br label %87

87:                                               ; preds = %99, %71
  %88 = load i32, i32* %16, align 4
  %89 = icmp slt i32 %88, 4
  br i1 %89, label %90, label %102

90:                                               ; preds = %87
  %91 = load i8*, i8** %17, align 8
  %92 = getelementptr inbounds i8, i8* %91, i32 1
  store i8* %92, i8** %17, align 8
  %93 = load i8, i8* %91, align 1
  %94 = zext i8 %93 to i32
  %95 = add nsw i32 %94, 1
  %96 = trunc i32 %95 to i16
  %97 = load i16*, i16** %18, align 8
  %98 = getelementptr inbounds i16, i16* %97, i32 1
  store i16* %98, i16** %18, align 8
  store i16 %96, i16* %97, align 2
  br label %99

99:                                               ; preds = %90
  %100 = load i32, i32* %16, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %16, align 4
  br label %87

102:                                              ; preds = %87
  br label %103

103:                                              ; preds = %102
  %104 = load i32, i32* %15, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %15, align 4
  br label %68

106:                                              ; preds = %68
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %14, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %14, align 4
  br label %64

110:                                              ; preds = %64
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @find_nearby_colors(%struct.jpeg_decompress_struct.469* %0, i32 %1, i32 %2, i32 %3, i8* %4) #0 {
  %6 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca [256 x i64], align 16
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i8* %4, i8** %10, align 8
  %26 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %6, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %26, i32 0, i32 31
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %11, align 4
  %29 = load i32, i32* %7, align 4
  %30 = add nsw i32 %29, 24
  store i32 %30, i32* %12, align 4
  %31 = load i32, i32* %7, align 4
  %32 = load i32, i32* %12, align 4
  %33 = add nsw i32 %31, %32
  %34 = ashr i32 %33, 1
  store i32 %34, i32* %15, align 4
  %35 = load i32, i32* %8, align 4
  %36 = add nsw i32 %35, 28
  store i32 %36, i32* %13, align 4
  %37 = load i32, i32* %8, align 4
  %38 = load i32, i32* %13, align 4
  %39 = add nsw i32 %37, %38
  %40 = ashr i32 %39, 1
  store i32 %40, i32* %16, align 4
  %41 = load i32, i32* %9, align 4
  %42 = add nsw i32 %41, 24
  store i32 %42, i32* %14, align 4
  %43 = load i32, i32* %9, align 4
  %44 = load i32, i32* %14, align 4
  %45 = add nsw i32 %43, %44
  %46 = ashr i32 %45, 1
  store i32 %46, i32* %17, align 4
  store i64 2147483647, i64* %21, align 8
  store i32 0, i32* %18, align 4
  br label %47

47:                                               ; preds = %314, %5
  %48 = load i32, i32* %18, align 4
  %49 = load i32, i32* %11, align 4
  %50 = icmp slt i32 %48, %49
  br i1 %50, label %51, label %317

51:                                               ; preds = %47
  %52 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %6, align 8
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %52, i32 0, i32 32
  %54 = load i8**, i8*** %53, align 8
  %55 = getelementptr inbounds i8*, i8** %54, i64 0
  %56 = load i8*, i8** %55, align 8
  %57 = load i32, i32* %18, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %56, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  store i32 %61, i32* %19, align 4
  %62 = load i32, i32* %19, align 4
  %63 = load i32, i32* %7, align 4
  %64 = icmp slt i32 %62, %63
  br i1 %64, label %65, label %82

65:                                               ; preds = %51
  %66 = load i32, i32* %19, align 4
  %67 = load i32, i32* %7, align 4
  %68 = sub nsw i32 %66, %67
  %69 = mul nsw i32 %68, 2
  %70 = sext i32 %69 to i64
  store i64 %70, i64* %24, align 8
  %71 = load i64, i64* %24, align 8
  %72 = load i64, i64* %24, align 8
  %73 = mul nsw i64 %71, %72
  store i64 %73, i64* %22, align 8
  %74 = load i32, i32* %19, align 4
  %75 = load i32, i32* %12, align 4
  %76 = sub nsw i32 %74, %75
  %77 = mul nsw i32 %76, 2
  %78 = sext i32 %77 to i64
  store i64 %78, i64* %24, align 8
  %79 = load i64, i64* %24, align 8
  %80 = load i64, i64* %24, align 8
  %81 = mul nsw i64 %79, %80
  store i64 %81, i64* %23, align 8
  br label %127

82:                                               ; preds = %51
  %83 = load i32, i32* %19, align 4
  %84 = load i32, i32* %12, align 4
  %85 = icmp sgt i32 %83, %84
  br i1 %85, label %86, label %103

86:                                               ; preds = %82
  %87 = load i32, i32* %19, align 4
  %88 = load i32, i32* %12, align 4
  %89 = sub nsw i32 %87, %88
  %90 = mul nsw i32 %89, 2
  %91 = sext i32 %90 to i64
  store i64 %91, i64* %24, align 8
  %92 = load i64, i64* %24, align 8
  %93 = load i64, i64* %24, align 8
  %94 = mul nsw i64 %92, %93
  store i64 %94, i64* %22, align 8
  %95 = load i32, i32* %19, align 4
  %96 = load i32, i32* %7, align 4
  %97 = sub nsw i32 %95, %96
  %98 = mul nsw i32 %97, 2
  %99 = sext i32 %98 to i64
  store i64 %99, i64* %24, align 8
  %100 = load i64, i64* %24, align 8
  %101 = load i64, i64* %24, align 8
  %102 = mul nsw i64 %100, %101
  store i64 %102, i64* %23, align 8
  br label %126

103:                                              ; preds = %82
  store i64 0, i64* %22, align 8
  %104 = load i32, i32* %19, align 4
  %105 = load i32, i32* %15, align 4
  %106 = icmp sle i32 %104, %105
  br i1 %106, label %107, label %116

107:                                              ; preds = %103
  %108 = load i32, i32* %19, align 4
  %109 = load i32, i32* %12, align 4
  %110 = sub nsw i32 %108, %109
  %111 = mul nsw i32 %110, 2
  %112 = sext i32 %111 to i64
  store i64 %112, i64* %24, align 8
  %113 = load i64, i64* %24, align 8
  %114 = load i64, i64* %24, align 8
  %115 = mul nsw i64 %113, %114
  store i64 %115, i64* %23, align 8
  br label %125

116:                                              ; preds = %103
  %117 = load i32, i32* %19, align 4
  %118 = load i32, i32* %7, align 4
  %119 = sub nsw i32 %117, %118
  %120 = mul nsw i32 %119, 2
  %121 = sext i32 %120 to i64
  store i64 %121, i64* %24, align 8
  %122 = load i64, i64* %24, align 8
  %123 = load i64, i64* %24, align 8
  %124 = mul nsw i64 %122, %123
  store i64 %124, i64* %23, align 8
  br label %125

125:                                              ; preds = %116, %107
  br label %126

126:                                              ; preds = %125, %86
  br label %127

127:                                              ; preds = %126, %65
  %128 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %6, align 8
  %129 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %128, i32 0, i32 32
  %130 = load i8**, i8*** %129, align 8
  %131 = getelementptr inbounds i8*, i8** %130, i64 1
  %132 = load i8*, i8** %131, align 8
  %133 = load i32, i32* %18, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i8, i8* %132, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  store i32 %137, i32* %19, align 4
  %138 = load i32, i32* %19, align 4
  %139 = load i32, i32* %8, align 4
  %140 = icmp slt i32 %138, %139
  br i1 %140, label %141, label %162

141:                                              ; preds = %127
  %142 = load i32, i32* %19, align 4
  %143 = load i32, i32* %8, align 4
  %144 = sub nsw i32 %142, %143
  %145 = mul nsw i32 %144, 3
  %146 = sext i32 %145 to i64
  store i64 %146, i64* %24, align 8
  %147 = load i64, i64* %24, align 8
  %148 = load i64, i64* %24, align 8
  %149 = mul nsw i64 %147, %148
  %150 = load i64, i64* %22, align 8
  %151 = add nsw i64 %150, %149
  store i64 %151, i64* %22, align 8
  %152 = load i32, i32* %19, align 4
  %153 = load i32, i32* %13, align 4
  %154 = sub nsw i32 %152, %153
  %155 = mul nsw i32 %154, 3
  %156 = sext i32 %155 to i64
  store i64 %156, i64* %24, align 8
  %157 = load i64, i64* %24, align 8
  %158 = load i64, i64* %24, align 8
  %159 = mul nsw i64 %157, %158
  %160 = load i64, i64* %23, align 8
  %161 = add nsw i64 %160, %159
  store i64 %161, i64* %23, align 8
  br label %215

162:                                              ; preds = %127
  %163 = load i32, i32* %19, align 4
  %164 = load i32, i32* %13, align 4
  %165 = icmp sgt i32 %163, %164
  br i1 %165, label %166, label %187

166:                                              ; preds = %162
  %167 = load i32, i32* %19, align 4
  %168 = load i32, i32* %13, align 4
  %169 = sub nsw i32 %167, %168
  %170 = mul nsw i32 %169, 3
  %171 = sext i32 %170 to i64
  store i64 %171, i64* %24, align 8
  %172 = load i64, i64* %24, align 8
  %173 = load i64, i64* %24, align 8
  %174 = mul nsw i64 %172, %173
  %175 = load i64, i64* %22, align 8
  %176 = add nsw i64 %175, %174
  store i64 %176, i64* %22, align 8
  %177 = load i32, i32* %19, align 4
  %178 = load i32, i32* %8, align 4
  %179 = sub nsw i32 %177, %178
  %180 = mul nsw i32 %179, 3
  %181 = sext i32 %180 to i64
  store i64 %181, i64* %24, align 8
  %182 = load i64, i64* %24, align 8
  %183 = load i64, i64* %24, align 8
  %184 = mul nsw i64 %182, %183
  %185 = load i64, i64* %23, align 8
  %186 = add nsw i64 %185, %184
  store i64 %186, i64* %23, align 8
  br label %214

187:                                              ; preds = %162
  %188 = load i32, i32* %19, align 4
  %189 = load i32, i32* %16, align 4
  %190 = icmp sle i32 %188, %189
  br i1 %190, label %191, label %202

191:                                              ; preds = %187
  %192 = load i32, i32* %19, align 4
  %193 = load i32, i32* %13, align 4
  %194 = sub nsw i32 %192, %193
  %195 = mul nsw i32 %194, 3
  %196 = sext i32 %195 to i64
  store i64 %196, i64* %24, align 8
  %197 = load i64, i64* %24, align 8
  %198 = load i64, i64* %24, align 8
  %199 = mul nsw i64 %197, %198
  %200 = load i64, i64* %23, align 8
  %201 = add nsw i64 %200, %199
  store i64 %201, i64* %23, align 8
  br label %213

202:                                              ; preds = %187
  %203 = load i32, i32* %19, align 4
  %204 = load i32, i32* %8, align 4
  %205 = sub nsw i32 %203, %204
  %206 = mul nsw i32 %205, 3
  %207 = sext i32 %206 to i64
  store i64 %207, i64* %24, align 8
  %208 = load i64, i64* %24, align 8
  %209 = load i64, i64* %24, align 8
  %210 = mul nsw i64 %208, %209
  %211 = load i64, i64* %23, align 8
  %212 = add nsw i64 %211, %210
  store i64 %212, i64* %23, align 8
  br label %213

213:                                              ; preds = %202, %191
  br label %214

214:                                              ; preds = %213, %166
  br label %215

215:                                              ; preds = %214, %141
  %216 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %6, align 8
  %217 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %216, i32 0, i32 32
  %218 = load i8**, i8*** %217, align 8
  %219 = getelementptr inbounds i8*, i8** %218, i64 2
  %220 = load i8*, i8** %219, align 8
  %221 = load i32, i32* %18, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i8, i8* %220, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  store i32 %225, i32* %19, align 4
  %226 = load i32, i32* %19, align 4
  %227 = load i32, i32* %9, align 4
  %228 = icmp slt i32 %226, %227
  br i1 %228, label %229, label %250

229:                                              ; preds = %215
  %230 = load i32, i32* %19, align 4
  %231 = load i32, i32* %9, align 4
  %232 = sub nsw i32 %230, %231
  %233 = mul nsw i32 %232, 1
  %234 = sext i32 %233 to i64
  store i64 %234, i64* %24, align 8
  %235 = load i64, i64* %24, align 8
  %236 = load i64, i64* %24, align 8
  %237 = mul nsw i64 %235, %236
  %238 = load i64, i64* %22, align 8
  %239 = add nsw i64 %238, %237
  store i64 %239, i64* %22, align 8
  %240 = load i32, i32* %19, align 4
  %241 = load i32, i32* %14, align 4
  %242 = sub nsw i32 %240, %241
  %243 = mul nsw i32 %242, 1
  %244 = sext i32 %243 to i64
  store i64 %244, i64* %24, align 8
  %245 = load i64, i64* %24, align 8
  %246 = load i64, i64* %24, align 8
  %247 = mul nsw i64 %245, %246
  %248 = load i64, i64* %23, align 8
  %249 = add nsw i64 %248, %247
  store i64 %249, i64* %23, align 8
  br label %303

250:                                              ; preds = %215
  %251 = load i32, i32* %19, align 4
  %252 = load i32, i32* %14, align 4
  %253 = icmp sgt i32 %251, %252
  br i1 %253, label %254, label %275

254:                                              ; preds = %250
  %255 = load i32, i32* %19, align 4
  %256 = load i32, i32* %14, align 4
  %257 = sub nsw i32 %255, %256
  %258 = mul nsw i32 %257, 1
  %259 = sext i32 %258 to i64
  store i64 %259, i64* %24, align 8
  %260 = load i64, i64* %24, align 8
  %261 = load i64, i64* %24, align 8
  %262 = mul nsw i64 %260, %261
  %263 = load i64, i64* %22, align 8
  %264 = add nsw i64 %263, %262
  store i64 %264, i64* %22, align 8
  %265 = load i32, i32* %19, align 4
  %266 = load i32, i32* %9, align 4
  %267 = sub nsw i32 %265, %266
  %268 = mul nsw i32 %267, 1
  %269 = sext i32 %268 to i64
  store i64 %269, i64* %24, align 8
  %270 = load i64, i64* %24, align 8
  %271 = load i64, i64* %24, align 8
  %272 = mul nsw i64 %270, %271
  %273 = load i64, i64* %23, align 8
  %274 = add nsw i64 %273, %272
  store i64 %274, i64* %23, align 8
  br label %302

275:                                              ; preds = %250
  %276 = load i32, i32* %19, align 4
  %277 = load i32, i32* %17, align 4
  %278 = icmp sle i32 %276, %277
  br i1 %278, label %279, label %290

279:                                              ; preds = %275
  %280 = load i32, i32* %19, align 4
  %281 = load i32, i32* %14, align 4
  %282 = sub nsw i32 %280, %281
  %283 = mul nsw i32 %282, 1
  %284 = sext i32 %283 to i64
  store i64 %284, i64* %24, align 8
  %285 = load i64, i64* %24, align 8
  %286 = load i64, i64* %24, align 8
  %287 = mul nsw i64 %285, %286
  %288 = load i64, i64* %23, align 8
  %289 = add nsw i64 %288, %287
  store i64 %289, i64* %23, align 8
  br label %301

290:                                              ; preds = %275
  %291 = load i32, i32* %19, align 4
  %292 = load i32, i32* %9, align 4
  %293 = sub nsw i32 %291, %292
  %294 = mul nsw i32 %293, 1
  %295 = sext i32 %294 to i64
  store i64 %295, i64* %24, align 8
  %296 = load i64, i64* %24, align 8
  %297 = load i64, i64* %24, align 8
  %298 = mul nsw i64 %296, %297
  %299 = load i64, i64* %23, align 8
  %300 = add nsw i64 %299, %298
  store i64 %300, i64* %23, align 8
  br label %301

301:                                              ; preds = %290, %279
  br label %302

302:                                              ; preds = %301, %254
  br label %303

303:                                              ; preds = %302, %229
  %304 = load i64, i64* %22, align 8
  %305 = load i32, i32* %18, align 4
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds [256 x i64], [256 x i64]* %25, i64 0, i64 %306
  store i64 %304, i64* %307, align 8
  %308 = load i64, i64* %23, align 8
  %309 = load i64, i64* %21, align 8
  %310 = icmp slt i64 %308, %309
  br i1 %310, label %311, label %313

311:                                              ; preds = %303
  %312 = load i64, i64* %23, align 8
  store i64 %312, i64* %21, align 8
  br label %313

313:                                              ; preds = %311, %303
  br label %314

314:                                              ; preds = %313
  %315 = load i32, i32* %18, align 4
  %316 = add nsw i32 %315, 1
  store i32 %316, i32* %18, align 4
  br label %47

317:                                              ; preds = %47
  store i32 0, i32* %20, align 4
  store i32 0, i32* %18, align 4
  br label %318

318:                                              ; preds = %338, %317
  %319 = load i32, i32* %18, align 4
  %320 = load i32, i32* %11, align 4
  %321 = icmp slt i32 %319, %320
  br i1 %321, label %322, label %341

322:                                              ; preds = %318
  %323 = load i32, i32* %18, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds [256 x i64], [256 x i64]* %25, i64 0, i64 %324
  %326 = load i64, i64* %325, align 8
  %327 = load i64, i64* %21, align 8
  %328 = icmp sle i64 %326, %327
  br i1 %328, label %329, label %337

329:                                              ; preds = %322
  %330 = load i32, i32* %18, align 4
  %331 = trunc i32 %330 to i8
  %332 = load i8*, i8** %10, align 8
  %333 = load i32, i32* %20, align 4
  %334 = add nsw i32 %333, 1
  store i32 %334, i32* %20, align 4
  %335 = sext i32 %333 to i64
  %336 = getelementptr inbounds i8, i8* %332, i64 %335
  store i8 %331, i8* %336, align 1
  br label %337

337:                                              ; preds = %329, %322
  br label %338

338:                                              ; preds = %337
  %339 = load i32, i32* %18, align 4
  %340 = add nsw i32 %339, 1
  store i32 %340, i32* %18, align 4
  br label %318

341:                                              ; preds = %318
  %342 = load i32, i32* %20, align 4
  ret i32 %342
}

; Function Attrs: noinline nounwind uwtable
define internal void @find_best_colors(%struct.jpeg_decompress_struct.469* %0, i32 %1, i32 %2, i32 %3, i32 %4, i8* %5, i8* %6) #0 {
  %8 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i64*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca [128 x i64], align 16
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %8, align 8
  store i32 %1, i32* %9, align 4
  store i32 %2, i32* %10, align 4
  store i32 %3, i32* %11, align 4
  store i32 %4, i32* %12, align 4
  store i8* %5, i8** %13, align 8
  store i8* %6, i8** %14, align 8
  %32 = getelementptr inbounds [128 x i64], [128 x i64]* %31, i64 0, i64 0
  store i64* %32, i64** %20, align 8
  store i32 127, i32* %18, align 4
  br label %33

33:                                               ; preds = %39, %7
  %34 = load i32, i32* %18, align 4
  %35 = icmp sge i32 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %33
  %37 = load i64*, i64** %20, align 8
  %38 = getelementptr inbounds i64, i64* %37, i32 1
  store i64* %38, i64** %20, align 8
  store i64 2147483647, i64* %37, align 8
  br label %39

39:                                               ; preds = %36
  %40 = load i32, i32* %18, align 4
  %41 = add nsw i32 %40, -1
  store i32 %41, i32* %18, align 4
  br label %33

42:                                               ; preds = %33
  store i32 0, i32* %18, align 4
  br label %43

43:                                               ; preds = %179, %42
  %44 = load i32, i32* %18, align 4
  %45 = load i32, i32* %12, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %47, label %182

47:                                               ; preds = %43
  %48 = load i8*, i8** %13, align 8
  %49 = load i32, i32* %18, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  store i32 %53, i32* %19, align 4
  %54 = load i32, i32* %9, align 4
  %55 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %8, align 8
  %56 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %55, i32 0, i32 32
  %57 = load i8**, i8*** %56, align 8
  %58 = getelementptr inbounds i8*, i8** %57, i64 0
  %59 = load i8*, i8** %58, align 8
  %60 = load i32, i32* %19, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* %59, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = sub nsw i32 %54, %64
  %66 = mul nsw i32 %65, 2
  %67 = sext i32 %66 to i64
  store i64 %67, i64* %28, align 8
  %68 = load i64, i64* %28, align 8
  %69 = load i64, i64* %28, align 8
  %70 = mul nsw i64 %68, %69
  store i64 %70, i64* %22, align 8
  %71 = load i32, i32* %10, align 4
  %72 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %8, align 8
  %73 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %72, i32 0, i32 32
  %74 = load i8**, i8*** %73, align 8
  %75 = getelementptr inbounds i8*, i8** %74, i64 1
  %76 = load i8*, i8** %75, align 8
  %77 = load i32, i32* %19, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = sub nsw i32 %71, %81
  %83 = mul nsw i32 %82, 3
  %84 = sext i32 %83 to i64
  store i64 %84, i64* %29, align 8
  %85 = load i64, i64* %29, align 8
  %86 = load i64, i64* %29, align 8
  %87 = mul nsw i64 %85, %86
  %88 = load i64, i64* %22, align 8
  %89 = add nsw i64 %88, %87
  store i64 %89, i64* %22, align 8
  %90 = load i32, i32* %11, align 4
  %91 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %8, align 8
  %92 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %91, i32 0, i32 32
  %93 = load i8**, i8*** %92, align 8
  %94 = getelementptr inbounds i8*, i8** %93, i64 2
  %95 = load i8*, i8** %94, align 8
  %96 = load i32, i32* %19, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %95, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = sub nsw i32 %90, %100
  %102 = mul nsw i32 %101, 1
  %103 = sext i32 %102 to i64
  store i64 %103, i64* %30, align 8
  %104 = load i64, i64* %30, align 8
  %105 = load i64, i64* %30, align 8
  %106 = mul nsw i64 %104, %105
  %107 = load i64, i64* %22, align 8
  %108 = add nsw i64 %107, %106
  store i64 %108, i64* %22, align 8
  %109 = load i64, i64* %28, align 8
  %110 = mul nsw i64 %109, 32
  %111 = add nsw i64 %110, 256
  store i64 %111, i64* %28, align 8
  %112 = load i64, i64* %29, align 8
  %113 = mul nsw i64 %112, 24
  %114 = add nsw i64 %113, 144
  store i64 %114, i64* %29, align 8
  %115 = load i64, i64* %30, align 8
  %116 = mul nsw i64 %115, 16
  %117 = add nsw i64 %116, 64
  store i64 %117, i64* %30, align 8
  %118 = getelementptr inbounds [128 x i64], [128 x i64]* %31, i64 0, i64 0
  store i64* %118, i64** %20, align 8
  %119 = load i8*, i8** %14, align 8
  store i8* %119, i8** %21, align 8
  %120 = load i64, i64* %28, align 8
  store i64 %120, i64* %25, align 8
  store i32 3, i32* %15, align 4
  br label %121

121:                                              ; preds = %175, %47
  %122 = load i32, i32* %15, align 4
  %123 = icmp sge i32 %122, 0
  br i1 %123, label %124, label %178

124:                                              ; preds = %121
  %125 = load i64, i64* %22, align 8
  store i64 %125, i64* %23, align 8
  %126 = load i64, i64* %29, align 8
  store i64 %126, i64* %26, align 8
  store i32 7, i32* %16, align 4
  br label %127

127:                                              ; preds = %166, %124
  %128 = load i32, i32* %16, align 4
  %129 = icmp sge i32 %128, 0
  br i1 %129, label %130, label %169

130:                                              ; preds = %127
  %131 = load i64, i64* %23, align 8
  store i64 %131, i64* %24, align 8
  %132 = load i64, i64* %30, align 8
  store i64 %132, i64* %27, align 8
  store i32 3, i32* %17, align 4
  br label %133

133:                                              ; preds = %157, %130
  %134 = load i32, i32* %17, align 4
  %135 = icmp sge i32 %134, 0
  br i1 %135, label %136, label %160

136:                                              ; preds = %133
  %137 = load i64, i64* %24, align 8
  %138 = load i64*, i64** %20, align 8
  %139 = load i64, i64* %138, align 8
  %140 = icmp slt i64 %137, %139
  br i1 %140, label %141, label %147

141:                                              ; preds = %136
  %142 = load i64, i64* %24, align 8
  %143 = load i64*, i64** %20, align 8
  store i64 %142, i64* %143, align 8
  %144 = load i32, i32* %19, align 4
  %145 = trunc i32 %144 to i8
  %146 = load i8*, i8** %21, align 8
  store i8 %145, i8* %146, align 1
  br label %147

147:                                              ; preds = %141, %136
  %148 = load i64, i64* %27, align 8
  %149 = load i64, i64* %24, align 8
  %150 = add nsw i64 %149, %148
  store i64 %150, i64* %24, align 8
  %151 = load i64, i64* %27, align 8
  %152 = add nsw i64 %151, 128
  store i64 %152, i64* %27, align 8
  %153 = load i64*, i64** %20, align 8
  %154 = getelementptr inbounds i64, i64* %153, i32 1
  store i64* %154, i64** %20, align 8
  %155 = load i8*, i8** %21, align 8
  %156 = getelementptr inbounds i8, i8* %155, i32 1
  store i8* %156, i8** %21, align 8
  br label %157

157:                                              ; preds = %147
  %158 = load i32, i32* %17, align 4
  %159 = add nsw i32 %158, -1
  store i32 %159, i32* %17, align 4
  br label %133

160:                                              ; preds = %133
  %161 = load i64, i64* %26, align 8
  %162 = load i64, i64* %23, align 8
  %163 = add nsw i64 %162, %161
  store i64 %163, i64* %23, align 8
  %164 = load i64, i64* %26, align 8
  %165 = add nsw i64 %164, 288
  store i64 %165, i64* %26, align 8
  br label %166

166:                                              ; preds = %160
  %167 = load i32, i32* %16, align 4
  %168 = add nsw i32 %167, -1
  store i32 %168, i32* %16, align 4
  br label %127

169:                                              ; preds = %127
  %170 = load i64, i64* %25, align 8
  %171 = load i64, i64* %22, align 8
  %172 = add nsw i64 %171, %170
  store i64 %172, i64* %22, align 8
  %173 = load i64, i64* %25, align 8
  %174 = add nsw i64 %173, 512
  store i64 %174, i64* %25, align 8
  br label %175

175:                                              ; preds = %169
  %176 = load i32, i32* %15, align 4
  %177 = add nsw i32 %176, -1
  store i32 %177, i32* %15, align 4
  br label %121

178:                                              ; preds = %121
  br label %179

179:                                              ; preds = %178
  %180 = load i32, i32* %18, align 4
  %181 = add nsw i32 %180, 1
  store i32 %181, i32* %18, align 4
  br label %43

182:                                              ; preds = %43
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @select_colors(%struct.jpeg_decompress_struct.469* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.box*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %8, i32 0, i32 1
  %10 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %10, i32 0, i32 0
  %12 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %11, align 8
  %13 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %14 = bitcast %struct.jpeg_decompress_struct.469* %13 to %struct.jpeg_common_struct*
  %15 = load i32, i32* %4, align 4
  %16 = sext i32 %15 to i64
  %17 = mul i64 %16, 40
  %18 = call i8* %12(%struct.jpeg_common_struct* %14, i32 1, i64 %17)
  %19 = bitcast i8* %18 to %struct.box*
  store %struct.box* %19, %struct.box** %5, align 8
  store i32 1, i32* %6, align 4
  %20 = load %struct.box*, %struct.box** %5, align 8
  %21 = getelementptr inbounds %struct.box, %struct.box* %20, i64 0
  %22 = getelementptr inbounds %struct.box, %struct.box* %21, i32 0, i32 0
  store i32 0, i32* %22, align 8
  %23 = load %struct.box*, %struct.box** %5, align 8
  %24 = getelementptr inbounds %struct.box, %struct.box* %23, i64 0
  %25 = getelementptr inbounds %struct.box, %struct.box* %24, i32 0, i32 1
  store i32 31, i32* %25, align 4
  %26 = load %struct.box*, %struct.box** %5, align 8
  %27 = getelementptr inbounds %struct.box, %struct.box* %26, i64 0
  %28 = getelementptr inbounds %struct.box, %struct.box* %27, i32 0, i32 2
  store i32 0, i32* %28, align 8
  %29 = load %struct.box*, %struct.box** %5, align 8
  %30 = getelementptr inbounds %struct.box, %struct.box* %29, i64 0
  %31 = getelementptr inbounds %struct.box, %struct.box* %30, i32 0, i32 3
  store i32 63, i32* %31, align 4
  %32 = load %struct.box*, %struct.box** %5, align 8
  %33 = getelementptr inbounds %struct.box, %struct.box* %32, i64 0
  %34 = getelementptr inbounds %struct.box, %struct.box* %33, i32 0, i32 4
  store i32 0, i32* %34, align 8
  %35 = load %struct.box*, %struct.box** %5, align 8
  %36 = getelementptr inbounds %struct.box, %struct.box* %35, i64 0
  %37 = getelementptr inbounds %struct.box, %struct.box* %36, i32 0, i32 5
  store i32 31, i32* %37, align 4
  %38 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %39 = load %struct.box*, %struct.box** %5, align 8
  %40 = getelementptr inbounds %struct.box, %struct.box* %39, i64 0
  call void @update_box(%struct.jpeg_decompress_struct.469* %38, %struct.box* %40)
  %41 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %42 = load %struct.box*, %struct.box** %5, align 8
  %43 = load i32, i32* %6, align 4
  %44 = load i32, i32* %4, align 4
  %45 = call i32 @median_cut(%struct.jpeg_decompress_struct.469* %41, %struct.box* %42, i32 %43, i32 %44)
  store i32 %45, i32* %6, align 4
  store i32 0, i32* %7, align 4
  br label %46

46:                                               ; preds = %57, %2
  %47 = load i32, i32* %7, align 4
  %48 = load i32, i32* %6, align 4
  %49 = icmp slt i32 %47, %48
  br i1 %49, label %50, label %60

50:                                               ; preds = %46
  %51 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %52 = load %struct.box*, %struct.box** %5, align 8
  %53 = load i32, i32* %7, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.box, %struct.box* %52, i64 %54
  %56 = load i32, i32* %7, align 4
  call void @compute_color(%struct.jpeg_decompress_struct.469* %51, %struct.box* %55, i32 %56)
  br label %57

57:                                               ; preds = %50
  %58 = load i32, i32* %7, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %7, align 4
  br label %46

60:                                               ; preds = %46
  %61 = load i32, i32* %6, align 4
  %62 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %62, i32 0, i32 31
  store i32 %61, i32* %63, align 4
  %64 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %65 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %64, i32 0, i32 0
  %66 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %65, align 8
  %67 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %66, i32 0, i32 5
  store i32 95, i32* %67, align 8
  %68 = load i32, i32* %6, align 4
  %69 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %70 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %69, i32 0, i32 0
  %71 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %70, align 8
  %72 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %71, i32 0, i32 6
  %73 = bitcast %union.anon* %72 to [8 x i32]*
  %74 = getelementptr inbounds [8 x i32], [8 x i32]* %73, i64 0, i64 0
  store i32 %68, i32* %74, align 4
  %75 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %76 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %75, i32 0, i32 0
  %77 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %76, align 8
  %78 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %77, i32 0, i32 1
  %79 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %78, align 8
  %80 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %81 = bitcast %struct.jpeg_decompress_struct.469* %80 to %struct.jpeg_common_struct*
  call void %79(%struct.jpeg_common_struct* %81, i32 1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @update_box(%struct.jpeg_decompress_struct.469* %0, %struct.box* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %4 = alloca %struct.box*, align 8
  %5 = alloca %struct.my_cquantizer.924*, align 8
  %6 = alloca [32 x i16]**, align 8
  %7 = alloca i16*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %3, align 8
  store %struct.box* %1, %struct.box** %4, align 8
  %21 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %3, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %21, i32 0, i32 83
  %23 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %22, align 8
  %24 = bitcast %struct.jpeg_color_quantizer.487* %23 to %struct.my_cquantizer.924*
  store %struct.my_cquantizer.924* %24, %struct.my_cquantizer.924** %5, align 8
  %25 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %5, align 8
  %26 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %25, i32 0, i32 3
  %27 = load [32 x i16]**, [32 x i16]*** %26, align 8
  store [32 x i16]** %27, [32 x i16]*** %6, align 8
  %28 = load %struct.box*, %struct.box** %4, align 8
  %29 = getelementptr inbounds %struct.box, %struct.box* %28, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %11, align 4
  %31 = load %struct.box*, %struct.box** %4, align 8
  %32 = getelementptr inbounds %struct.box, %struct.box* %31, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %12, align 4
  %34 = load %struct.box*, %struct.box** %4, align 8
  %35 = getelementptr inbounds %struct.box, %struct.box* %34, i32 0, i32 2
  %36 = load i32, i32* %35, align 8
  store i32 %36, i32* %13, align 4
  %37 = load %struct.box*, %struct.box** %4, align 8
  %38 = getelementptr inbounds %struct.box, %struct.box* %37, i32 0, i32 3
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %14, align 4
  %40 = load %struct.box*, %struct.box** %4, align 8
  %41 = getelementptr inbounds %struct.box, %struct.box* %40, i32 0, i32 4
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %15, align 4
  %43 = load %struct.box*, %struct.box** %4, align 8
  %44 = getelementptr inbounds %struct.box, %struct.box* %43, i32 0, i32 5
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %16, align 4
  %46 = load i32, i32* %12, align 4
  %47 = load i32, i32* %11, align 4
  %48 = icmp sgt i32 %46, %47
  br i1 %48, label %49, label %101

49:                                               ; preds = %2
  %50 = load i32, i32* %11, align 4
  store i32 %50, i32* %8, align 4
  br label %51

51:                                               ; preds = %97, %49
  %52 = load i32, i32* %8, align 4
  %53 = load i32, i32* %12, align 4
  %54 = icmp sle i32 %52, %53
  br i1 %54, label %55, label %100

55:                                               ; preds = %51
  %56 = load i32, i32* %13, align 4
  store i32 %56, i32* %9, align 4
  br label %57

57:                                               ; preds = %93, %55
  %58 = load i32, i32* %9, align 4
  %59 = load i32, i32* %14, align 4
  %60 = icmp sle i32 %58, %59
  br i1 %60, label %61, label %96

61:                                               ; preds = %57
  %62 = load [32 x i16]**, [32 x i16]*** %6, align 8
  %63 = load i32, i32* %8, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [32 x i16]*, [32 x i16]** %62, i64 %64
  %66 = load [32 x i16]*, [32 x i16]** %65, align 8
  %67 = load i32, i32* %9, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [32 x i16], [32 x i16]* %66, i64 %68
  %70 = load i32, i32* %15, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [32 x i16], [32 x i16]* %69, i64 0, i64 %71
  store i16* %72, i16** %7, align 8
  %73 = load i32, i32* %15, align 4
  store i32 %73, i32* %10, align 4
  br label %74

74:                                               ; preds = %89, %61
  %75 = load i32, i32* %10, align 4
  %76 = load i32, i32* %16, align 4
  %77 = icmp sle i32 %75, %76
  br i1 %77, label %78, label %92

78:                                               ; preds = %74
  %79 = load i16*, i16** %7, align 8
  %80 = getelementptr inbounds i16, i16* %79, i32 1
  store i16* %80, i16** %7, align 8
  %81 = load i16, i16* %79, align 2
  %82 = zext i16 %81 to i32
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %88

84:                                               ; preds = %78
  %85 = load i32, i32* %8, align 4
  store i32 %85, i32* %11, align 4
  %86 = load %struct.box*, %struct.box** %4, align 8
  %87 = getelementptr inbounds %struct.box, %struct.box* %86, i32 0, i32 0
  store i32 %85, i32* %87, align 8
  br label %102

88:                                               ; preds = %78
  br label %89

89:                                               ; preds = %88
  %90 = load i32, i32* %10, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %10, align 4
  br label %74

92:                                               ; preds = %74
  br label %93

93:                                               ; preds = %92
  %94 = load i32, i32* %9, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %9, align 4
  br label %57

96:                                               ; preds = %57
  br label %97

97:                                               ; preds = %96
  %98 = load i32, i32* %8, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %8, align 4
  br label %51

100:                                              ; preds = %51
  br label %101

101:                                              ; preds = %100, %2
  br label %102

102:                                              ; preds = %101, %84
  %103 = load i32, i32* %12, align 4
  %104 = load i32, i32* %11, align 4
  %105 = icmp sgt i32 %103, %104
  br i1 %105, label %106, label %158

106:                                              ; preds = %102
  %107 = load i32, i32* %12, align 4
  store i32 %107, i32* %8, align 4
  br label %108

108:                                              ; preds = %154, %106
  %109 = load i32, i32* %8, align 4
  %110 = load i32, i32* %11, align 4
  %111 = icmp sge i32 %109, %110
  br i1 %111, label %112, label %157

112:                                              ; preds = %108
  %113 = load i32, i32* %13, align 4
  store i32 %113, i32* %9, align 4
  br label %114

114:                                              ; preds = %150, %112
  %115 = load i32, i32* %9, align 4
  %116 = load i32, i32* %14, align 4
  %117 = icmp sle i32 %115, %116
  br i1 %117, label %118, label %153

118:                                              ; preds = %114
  %119 = load [32 x i16]**, [32 x i16]*** %6, align 8
  %120 = load i32, i32* %8, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds [32 x i16]*, [32 x i16]** %119, i64 %121
  %123 = load [32 x i16]*, [32 x i16]** %122, align 8
  %124 = load i32, i32* %9, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [32 x i16], [32 x i16]* %123, i64 %125
  %127 = load i32, i32* %15, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds [32 x i16], [32 x i16]* %126, i64 0, i64 %128
  store i16* %129, i16** %7, align 8
  %130 = load i32, i32* %15, align 4
  store i32 %130, i32* %10, align 4
  br label %131

131:                                              ; preds = %146, %118
  %132 = load i32, i32* %10, align 4
  %133 = load i32, i32* %16, align 4
  %134 = icmp sle i32 %132, %133
  br i1 %134, label %135, label %149

135:                                              ; preds = %131
  %136 = load i16*, i16** %7, align 8
  %137 = getelementptr inbounds i16, i16* %136, i32 1
  store i16* %137, i16** %7, align 8
  %138 = load i16, i16* %136, align 2
  %139 = zext i16 %138 to i32
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %141, label %145

141:                                              ; preds = %135
  %142 = load i32, i32* %8, align 4
  store i32 %142, i32* %12, align 4
  %143 = load %struct.box*, %struct.box** %4, align 8
  %144 = getelementptr inbounds %struct.box, %struct.box* %143, i32 0, i32 1
  store i32 %142, i32* %144, align 4
  br label %159

145:                                              ; preds = %135
  br label %146

146:                                              ; preds = %145
  %147 = load i32, i32* %10, align 4
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %10, align 4
  br label %131

149:                                              ; preds = %131
  br label %150

150:                                              ; preds = %149
  %151 = load i32, i32* %9, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %9, align 4
  br label %114

153:                                              ; preds = %114
  br label %154

154:                                              ; preds = %153
  %155 = load i32, i32* %8, align 4
  %156 = add nsw i32 %155, -1
  store i32 %156, i32* %8, align 4
  br label %108

157:                                              ; preds = %108
  br label %158

158:                                              ; preds = %157, %102
  br label %159

159:                                              ; preds = %158, %141
  %160 = load i32, i32* %14, align 4
  %161 = load i32, i32* %13, align 4
  %162 = icmp sgt i32 %160, %161
  br i1 %162, label %163, label %215

163:                                              ; preds = %159
  %164 = load i32, i32* %13, align 4
  store i32 %164, i32* %9, align 4
  br label %165

165:                                              ; preds = %211, %163
  %166 = load i32, i32* %9, align 4
  %167 = load i32, i32* %14, align 4
  %168 = icmp sle i32 %166, %167
  br i1 %168, label %169, label %214

169:                                              ; preds = %165
  %170 = load i32, i32* %11, align 4
  store i32 %170, i32* %8, align 4
  br label %171

171:                                              ; preds = %207, %169
  %172 = load i32, i32* %8, align 4
  %173 = load i32, i32* %12, align 4
  %174 = icmp sle i32 %172, %173
  br i1 %174, label %175, label %210

175:                                              ; preds = %171
  %176 = load [32 x i16]**, [32 x i16]*** %6, align 8
  %177 = load i32, i32* %8, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds [32 x i16]*, [32 x i16]** %176, i64 %178
  %180 = load [32 x i16]*, [32 x i16]** %179, align 8
  %181 = load i32, i32* %9, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds [32 x i16], [32 x i16]* %180, i64 %182
  %184 = load i32, i32* %15, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [32 x i16], [32 x i16]* %183, i64 0, i64 %185
  store i16* %186, i16** %7, align 8
  %187 = load i32, i32* %15, align 4
  store i32 %187, i32* %10, align 4
  br label %188

188:                                              ; preds = %203, %175
  %189 = load i32, i32* %10, align 4
  %190 = load i32, i32* %16, align 4
  %191 = icmp sle i32 %189, %190
  br i1 %191, label %192, label %206

192:                                              ; preds = %188
  %193 = load i16*, i16** %7, align 8
  %194 = getelementptr inbounds i16, i16* %193, i32 1
  store i16* %194, i16** %7, align 8
  %195 = load i16, i16* %193, align 2
  %196 = zext i16 %195 to i32
  %197 = icmp ne i32 %196, 0
  br i1 %197, label %198, label %202

198:                                              ; preds = %192
  %199 = load i32, i32* %9, align 4
  store i32 %199, i32* %13, align 4
  %200 = load %struct.box*, %struct.box** %4, align 8
  %201 = getelementptr inbounds %struct.box, %struct.box* %200, i32 0, i32 2
  store i32 %199, i32* %201, align 8
  br label %216

202:                                              ; preds = %192
  br label %203

203:                                              ; preds = %202
  %204 = load i32, i32* %10, align 4
  %205 = add nsw i32 %204, 1
  store i32 %205, i32* %10, align 4
  br label %188

206:                                              ; preds = %188
  br label %207

207:                                              ; preds = %206
  %208 = load i32, i32* %8, align 4
  %209 = add nsw i32 %208, 1
  store i32 %209, i32* %8, align 4
  br label %171

210:                                              ; preds = %171
  br label %211

211:                                              ; preds = %210
  %212 = load i32, i32* %9, align 4
  %213 = add nsw i32 %212, 1
  store i32 %213, i32* %9, align 4
  br label %165

214:                                              ; preds = %165
  br label %215

215:                                              ; preds = %214, %159
  br label %216

216:                                              ; preds = %215, %198
  %217 = load i32, i32* %14, align 4
  %218 = load i32, i32* %13, align 4
  %219 = icmp sgt i32 %217, %218
  br i1 %219, label %220, label %272

220:                                              ; preds = %216
  %221 = load i32, i32* %14, align 4
  store i32 %221, i32* %9, align 4
  br label %222

222:                                              ; preds = %268, %220
  %223 = load i32, i32* %9, align 4
  %224 = load i32, i32* %13, align 4
  %225 = icmp sge i32 %223, %224
  br i1 %225, label %226, label %271

226:                                              ; preds = %222
  %227 = load i32, i32* %11, align 4
  store i32 %227, i32* %8, align 4
  br label %228

228:                                              ; preds = %264, %226
  %229 = load i32, i32* %8, align 4
  %230 = load i32, i32* %12, align 4
  %231 = icmp sle i32 %229, %230
  br i1 %231, label %232, label %267

232:                                              ; preds = %228
  %233 = load [32 x i16]**, [32 x i16]*** %6, align 8
  %234 = load i32, i32* %8, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds [32 x i16]*, [32 x i16]** %233, i64 %235
  %237 = load [32 x i16]*, [32 x i16]** %236, align 8
  %238 = load i32, i32* %9, align 4
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds [32 x i16], [32 x i16]* %237, i64 %239
  %241 = load i32, i32* %15, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [32 x i16], [32 x i16]* %240, i64 0, i64 %242
  store i16* %243, i16** %7, align 8
  %244 = load i32, i32* %15, align 4
  store i32 %244, i32* %10, align 4
  br label %245

245:                                              ; preds = %260, %232
  %246 = load i32, i32* %10, align 4
  %247 = load i32, i32* %16, align 4
  %248 = icmp sle i32 %246, %247
  br i1 %248, label %249, label %263

249:                                              ; preds = %245
  %250 = load i16*, i16** %7, align 8
  %251 = getelementptr inbounds i16, i16* %250, i32 1
  store i16* %251, i16** %7, align 8
  %252 = load i16, i16* %250, align 2
  %253 = zext i16 %252 to i32
  %254 = icmp ne i32 %253, 0
  br i1 %254, label %255, label %259

255:                                              ; preds = %249
  %256 = load i32, i32* %9, align 4
  store i32 %256, i32* %14, align 4
  %257 = load %struct.box*, %struct.box** %4, align 8
  %258 = getelementptr inbounds %struct.box, %struct.box* %257, i32 0, i32 3
  store i32 %256, i32* %258, align 4
  br label %273

259:                                              ; preds = %249
  br label %260

260:                                              ; preds = %259
  %261 = load i32, i32* %10, align 4
  %262 = add nsw i32 %261, 1
  store i32 %262, i32* %10, align 4
  br label %245

263:                                              ; preds = %245
  br label %264

264:                                              ; preds = %263
  %265 = load i32, i32* %8, align 4
  %266 = add nsw i32 %265, 1
  store i32 %266, i32* %8, align 4
  br label %228

267:                                              ; preds = %228
  br label %268

268:                                              ; preds = %267
  %269 = load i32, i32* %9, align 4
  %270 = add nsw i32 %269, -1
  store i32 %270, i32* %9, align 4
  br label %222

271:                                              ; preds = %222
  br label %272

272:                                              ; preds = %271, %216
  br label %273

273:                                              ; preds = %272, %255
  %274 = load i32, i32* %16, align 4
  %275 = load i32, i32* %15, align 4
  %276 = icmp sgt i32 %274, %275
  br i1 %276, label %277, label %330

277:                                              ; preds = %273
  %278 = load i32, i32* %15, align 4
  store i32 %278, i32* %10, align 4
  br label %279

279:                                              ; preds = %326, %277
  %280 = load i32, i32* %10, align 4
  %281 = load i32, i32* %16, align 4
  %282 = icmp sle i32 %280, %281
  br i1 %282, label %283, label %329

283:                                              ; preds = %279
  %284 = load i32, i32* %11, align 4
  store i32 %284, i32* %8, align 4
  br label %285

285:                                              ; preds = %322, %283
  %286 = load i32, i32* %8, align 4
  %287 = load i32, i32* %12, align 4
  %288 = icmp sle i32 %286, %287
  br i1 %288, label %289, label %325

289:                                              ; preds = %285
  %290 = load [32 x i16]**, [32 x i16]*** %6, align 8
  %291 = load i32, i32* %8, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds [32 x i16]*, [32 x i16]** %290, i64 %292
  %294 = load [32 x i16]*, [32 x i16]** %293, align 8
  %295 = load i32, i32* %13, align 4
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds [32 x i16], [32 x i16]* %294, i64 %296
  %298 = load i32, i32* %10, align 4
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds [32 x i16], [32 x i16]* %297, i64 0, i64 %299
  store i16* %300, i16** %7, align 8
  %301 = load i32, i32* %13, align 4
  store i32 %301, i32* %9, align 4
  br label %302

302:                                              ; preds = %316, %289
  %303 = load i32, i32* %9, align 4
  %304 = load i32, i32* %14, align 4
  %305 = icmp sle i32 %303, %304
  br i1 %305, label %306, label %321

306:                                              ; preds = %302
  %307 = load i16*, i16** %7, align 8
  %308 = load i16, i16* %307, align 2
  %309 = zext i16 %308 to i32
  %310 = icmp ne i32 %309, 0
  br i1 %310, label %311, label %315

311:                                              ; preds = %306
  %312 = load i32, i32* %10, align 4
  store i32 %312, i32* %15, align 4
  %313 = load %struct.box*, %struct.box** %4, align 8
  %314 = getelementptr inbounds %struct.box, %struct.box* %313, i32 0, i32 4
  store i32 %312, i32* %314, align 8
  br label %331

315:                                              ; preds = %306
  br label %316

316:                                              ; preds = %315
  %317 = load i32, i32* %9, align 4
  %318 = add nsw i32 %317, 1
  store i32 %318, i32* %9, align 4
  %319 = load i16*, i16** %7, align 8
  %320 = getelementptr inbounds i16, i16* %319, i64 32
  store i16* %320, i16** %7, align 8
  br label %302

321:                                              ; preds = %302
  br label %322

322:                                              ; preds = %321
  %323 = load i32, i32* %8, align 4
  %324 = add nsw i32 %323, 1
  store i32 %324, i32* %8, align 4
  br label %285

325:                                              ; preds = %285
  br label %326

326:                                              ; preds = %325
  %327 = load i32, i32* %10, align 4
  %328 = add nsw i32 %327, 1
  store i32 %328, i32* %10, align 4
  br label %279

329:                                              ; preds = %279
  br label %330

330:                                              ; preds = %329, %273
  br label %331

331:                                              ; preds = %330, %311
  %332 = load i32, i32* %16, align 4
  %333 = load i32, i32* %15, align 4
  %334 = icmp sgt i32 %332, %333
  br i1 %334, label %335, label %388

335:                                              ; preds = %331
  %336 = load i32, i32* %16, align 4
  store i32 %336, i32* %10, align 4
  br label %337

337:                                              ; preds = %384, %335
  %338 = load i32, i32* %10, align 4
  %339 = load i32, i32* %15, align 4
  %340 = icmp sge i32 %338, %339
  br i1 %340, label %341, label %387

341:                                              ; preds = %337
  %342 = load i32, i32* %11, align 4
  store i32 %342, i32* %8, align 4
  br label %343

343:                                              ; preds = %380, %341
  %344 = load i32, i32* %8, align 4
  %345 = load i32, i32* %12, align 4
  %346 = icmp sle i32 %344, %345
  br i1 %346, label %347, label %383

347:                                              ; preds = %343
  %348 = load [32 x i16]**, [32 x i16]*** %6, align 8
  %349 = load i32, i32* %8, align 4
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds [32 x i16]*, [32 x i16]** %348, i64 %350
  %352 = load [32 x i16]*, [32 x i16]** %351, align 8
  %353 = load i32, i32* %13, align 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds [32 x i16], [32 x i16]* %352, i64 %354
  %356 = load i32, i32* %10, align 4
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds [32 x i16], [32 x i16]* %355, i64 0, i64 %357
  store i16* %358, i16** %7, align 8
  %359 = load i32, i32* %13, align 4
  store i32 %359, i32* %9, align 4
  br label %360

360:                                              ; preds = %374, %347
  %361 = load i32, i32* %9, align 4
  %362 = load i32, i32* %14, align 4
  %363 = icmp sle i32 %361, %362
  br i1 %363, label %364, label %379

364:                                              ; preds = %360
  %365 = load i16*, i16** %7, align 8
  %366 = load i16, i16* %365, align 2
  %367 = zext i16 %366 to i32
  %368 = icmp ne i32 %367, 0
  br i1 %368, label %369, label %373

369:                                              ; preds = %364
  %370 = load i32, i32* %10, align 4
  store i32 %370, i32* %16, align 4
  %371 = load %struct.box*, %struct.box** %4, align 8
  %372 = getelementptr inbounds %struct.box, %struct.box* %371, i32 0, i32 5
  store i32 %370, i32* %372, align 4
  br label %389

373:                                              ; preds = %364
  br label %374

374:                                              ; preds = %373
  %375 = load i32, i32* %9, align 4
  %376 = add nsw i32 %375, 1
  store i32 %376, i32* %9, align 4
  %377 = load i16*, i16** %7, align 8
  %378 = getelementptr inbounds i16, i16* %377, i64 32
  store i16* %378, i16** %7, align 8
  br label %360

379:                                              ; preds = %360
  br label %380

380:                                              ; preds = %379
  %381 = load i32, i32* %8, align 4
  %382 = add nsw i32 %381, 1
  store i32 %382, i32* %8, align 4
  br label %343

383:                                              ; preds = %343
  br label %384

384:                                              ; preds = %383
  %385 = load i32, i32* %10, align 4
  %386 = add nsw i32 %385, -1
  store i32 %386, i32* %10, align 4
  br label %337

387:                                              ; preds = %337
  br label %388

388:                                              ; preds = %387, %331
  br label %389

389:                                              ; preds = %388, %369
  %390 = load i32, i32* %12, align 4
  %391 = load i32, i32* %11, align 4
  %392 = sub nsw i32 %390, %391
  %393 = shl i32 %392, 3
  %394 = mul nsw i32 %393, 2
  %395 = sext i32 %394 to i64
  store i64 %395, i64* %17, align 8
  %396 = load i32, i32* %14, align 4
  %397 = load i32, i32* %13, align 4
  %398 = sub nsw i32 %396, %397
  %399 = shl i32 %398, 2
  %400 = mul nsw i32 %399, 3
  %401 = sext i32 %400 to i64
  store i64 %401, i64* %18, align 8
  %402 = load i32, i32* %16, align 4
  %403 = load i32, i32* %15, align 4
  %404 = sub nsw i32 %402, %403
  %405 = shl i32 %404, 3
  %406 = mul nsw i32 %405, 1
  %407 = sext i32 %406 to i64
  store i64 %407, i64* %19, align 8
  %408 = load i64, i64* %17, align 8
  %409 = load i64, i64* %17, align 8
  %410 = mul nsw i64 %408, %409
  %411 = load i64, i64* %18, align 8
  %412 = load i64, i64* %18, align 8
  %413 = mul nsw i64 %411, %412
  %414 = add nsw i64 %410, %413
  %415 = load i64, i64* %19, align 8
  %416 = load i64, i64* %19, align 8
  %417 = mul nsw i64 %415, %416
  %418 = add nsw i64 %414, %417
  %419 = load %struct.box*, %struct.box** %4, align 8
  %420 = getelementptr inbounds %struct.box, %struct.box* %419, i32 0, i32 6
  store i64 %418, i64* %420, align 8
  store i64 0, i64* %20, align 8
  %421 = load i32, i32* %11, align 4
  store i32 %421, i32* %8, align 4
  br label %422

422:                                              ; preds = %468, %389
  %423 = load i32, i32* %8, align 4
  %424 = load i32, i32* %12, align 4
  %425 = icmp sle i32 %423, %424
  br i1 %425, label %426, label %471

426:                                              ; preds = %422
  %427 = load i32, i32* %13, align 4
  store i32 %427, i32* %9, align 4
  br label %428

428:                                              ; preds = %464, %426
  %429 = load i32, i32* %9, align 4
  %430 = load i32, i32* %14, align 4
  %431 = icmp sle i32 %429, %430
  br i1 %431, label %432, label %467

432:                                              ; preds = %428
  %433 = load [32 x i16]**, [32 x i16]*** %6, align 8
  %434 = load i32, i32* %8, align 4
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds [32 x i16]*, [32 x i16]** %433, i64 %435
  %437 = load [32 x i16]*, [32 x i16]** %436, align 8
  %438 = load i32, i32* %9, align 4
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds [32 x i16], [32 x i16]* %437, i64 %439
  %441 = load i32, i32* %15, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds [32 x i16], [32 x i16]* %440, i64 0, i64 %442
  store i16* %443, i16** %7, align 8
  %444 = load i32, i32* %15, align 4
  store i32 %444, i32* %10, align 4
  br label %445

445:                                              ; preds = %458, %432
  %446 = load i32, i32* %10, align 4
  %447 = load i32, i32* %16, align 4
  %448 = icmp sle i32 %446, %447
  br i1 %448, label %449, label %463

449:                                              ; preds = %445
  %450 = load i16*, i16** %7, align 8
  %451 = load i16, i16* %450, align 2
  %452 = zext i16 %451 to i32
  %453 = icmp ne i32 %452, 0
  br i1 %453, label %454, label %457

454:                                              ; preds = %449
  %455 = load i64, i64* %20, align 8
  %456 = add nsw i64 %455, 1
  store i64 %456, i64* %20, align 8
  br label %457

457:                                              ; preds = %454, %449
  br label %458

458:                                              ; preds = %457
  %459 = load i32, i32* %10, align 4
  %460 = add nsw i32 %459, 1
  store i32 %460, i32* %10, align 4
  %461 = load i16*, i16** %7, align 8
  %462 = getelementptr inbounds i16, i16* %461, i32 1
  store i16* %462, i16** %7, align 8
  br label %445

463:                                              ; preds = %445
  br label %464

464:                                              ; preds = %463
  %465 = load i32, i32* %9, align 4
  %466 = add nsw i32 %465, 1
  store i32 %466, i32* %9, align 4
  br label %428

467:                                              ; preds = %428
  br label %468

468:                                              ; preds = %467
  %469 = load i32, i32* %8, align 4
  %470 = add nsw i32 %469, 1
  store i32 %470, i32* %8, align 4
  br label %422

471:                                              ; preds = %422
  %472 = load i64, i64* %20, align 8
  %473 = load %struct.box*, %struct.box** %4, align 8
  %474 = getelementptr inbounds %struct.box, %struct.box* %473, i32 0, i32 7
  store i64 %472, i64* %474, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @median_cut(%struct.jpeg_decompress_struct.469* %0, %struct.box* %1, i32 %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %6 = alloca %struct.box*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.box*, align 8
  %16 = alloca %struct.box*, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %5, align 8
  store %struct.box* %1, %struct.box** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  br label %17

17:                                               ; preds = %161, %4
  %18 = load i32, i32* %7, align 4
  %19 = load i32, i32* %8, align 4
  %20 = icmp slt i32 %18, %19
  br i1 %20, label %21, label %168

21:                                               ; preds = %17
  %22 = load i32, i32* %7, align 4
  %23 = mul nsw i32 %22, 2
  %24 = load i32, i32* %8, align 4
  %25 = icmp sle i32 %23, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = load %struct.box*, %struct.box** %6, align 8
  %28 = load i32, i32* %7, align 4
  %29 = call %struct.box* @find_biggest_color_pop(%struct.box* %27, i32 %28)
  store %struct.box* %29, %struct.box** %15, align 8
  br label %34

30:                                               ; preds = %21
  %31 = load %struct.box*, %struct.box** %6, align 8
  %32 = load i32, i32* %7, align 4
  %33 = call %struct.box* @find_biggest_volume(%struct.box* %31, i32 %32)
  store %struct.box* %33, %struct.box** %15, align 8
  br label %34

34:                                               ; preds = %30, %26
  %35 = load %struct.box*, %struct.box** %15, align 8
  %36 = icmp eq %struct.box* %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  br label %168

38:                                               ; preds = %34
  %39 = load %struct.box*, %struct.box** %6, align 8
  %40 = load i32, i32* %7, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %struct.box, %struct.box* %39, i64 %41
  store %struct.box* %42, %struct.box** %16, align 8
  %43 = load %struct.box*, %struct.box** %15, align 8
  %44 = getelementptr inbounds %struct.box, %struct.box* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = load %struct.box*, %struct.box** %16, align 8
  %47 = getelementptr inbounds %struct.box, %struct.box* %46, i32 0, i32 1
  store i32 %45, i32* %47, align 4
  %48 = load %struct.box*, %struct.box** %15, align 8
  %49 = getelementptr inbounds %struct.box, %struct.box* %48, i32 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = load %struct.box*, %struct.box** %16, align 8
  %52 = getelementptr inbounds %struct.box, %struct.box* %51, i32 0, i32 3
  store i32 %50, i32* %52, align 4
  %53 = load %struct.box*, %struct.box** %15, align 8
  %54 = getelementptr inbounds %struct.box, %struct.box* %53, i32 0, i32 5
  %55 = load i32, i32* %54, align 4
  %56 = load %struct.box*, %struct.box** %16, align 8
  %57 = getelementptr inbounds %struct.box, %struct.box* %56, i32 0, i32 5
  store i32 %55, i32* %57, align 4
  %58 = load %struct.box*, %struct.box** %15, align 8
  %59 = getelementptr inbounds %struct.box, %struct.box* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = load %struct.box*, %struct.box** %16, align 8
  %62 = getelementptr inbounds %struct.box, %struct.box* %61, i32 0, i32 0
  store i32 %60, i32* %62, align 8
  %63 = load %struct.box*, %struct.box** %15, align 8
  %64 = getelementptr inbounds %struct.box, %struct.box* %63, i32 0, i32 2
  %65 = load i32, i32* %64, align 8
  %66 = load %struct.box*, %struct.box** %16, align 8
  %67 = getelementptr inbounds %struct.box, %struct.box* %66, i32 0, i32 2
  store i32 %65, i32* %67, align 8
  %68 = load %struct.box*, %struct.box** %15, align 8
  %69 = getelementptr inbounds %struct.box, %struct.box* %68, i32 0, i32 4
  %70 = load i32, i32* %69, align 8
  %71 = load %struct.box*, %struct.box** %16, align 8
  %72 = getelementptr inbounds %struct.box, %struct.box* %71, i32 0, i32 4
  store i32 %70, i32* %72, align 8
  %73 = load %struct.box*, %struct.box** %15, align 8
  %74 = getelementptr inbounds %struct.box, %struct.box* %73, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = load %struct.box*, %struct.box** %15, align 8
  %77 = getelementptr inbounds %struct.box, %struct.box* %76, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = sub nsw i32 %75, %78
  %80 = shl i32 %79, 3
  %81 = mul nsw i32 %80, 2
  store i32 %81, i32* %11, align 4
  %82 = load %struct.box*, %struct.box** %15, align 8
  %83 = getelementptr inbounds %struct.box, %struct.box* %82, i32 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = load %struct.box*, %struct.box** %15, align 8
  %86 = getelementptr inbounds %struct.box, %struct.box* %85, i32 0, i32 2
  %87 = load i32, i32* %86, align 8
  %88 = sub nsw i32 %84, %87
  %89 = shl i32 %88, 2
  %90 = mul nsw i32 %89, 3
  store i32 %90, i32* %12, align 4
  %91 = load %struct.box*, %struct.box** %15, align 8
  %92 = getelementptr inbounds %struct.box, %struct.box* %91, i32 0, i32 5
  %93 = load i32, i32* %92, align 4
  %94 = load %struct.box*, %struct.box** %15, align 8
  %95 = getelementptr inbounds %struct.box, %struct.box* %94, i32 0, i32 4
  %96 = load i32, i32* %95, align 8
  %97 = sub nsw i32 %93, %96
  %98 = shl i32 %97, 3
  %99 = mul nsw i32 %98, 1
  store i32 %99, i32* %13, align 4
  %100 = load i32, i32* %12, align 4
  store i32 %100, i32* %14, align 4
  store i32 1, i32* %9, align 4
  %101 = load i32, i32* %11, align 4
  %102 = load i32, i32* %14, align 4
  %103 = icmp sgt i32 %101, %102
  br i1 %103, label %104, label %106

104:                                              ; preds = %38
  %105 = load i32, i32* %11, align 4
  store i32 %105, i32* %14, align 4
  store i32 0, i32* %9, align 4
  br label %106

106:                                              ; preds = %104, %38
  %107 = load i32, i32* %13, align 4
  %108 = load i32, i32* %14, align 4
  %109 = icmp sgt i32 %107, %108
  br i1 %109, label %110, label %111

110:                                              ; preds = %106
  store i32 2, i32* %9, align 4
  br label %111

111:                                              ; preds = %110, %106
  %112 = load i32, i32* %9, align 4
  switch i32 %112, label %161 [
    i32 0, label %113
    i32 1, label %129
    i32 2, label %145
  ]

113:                                              ; preds = %111
  %114 = load %struct.box*, %struct.box** %15, align 8
  %115 = getelementptr inbounds %struct.box, %struct.box* %114, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = load %struct.box*, %struct.box** %15, align 8
  %118 = getelementptr inbounds %struct.box, %struct.box* %117, i32 0, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = add nsw i32 %116, %119
  %121 = sdiv i32 %120, 2
  store i32 %121, i32* %10, align 4
  %122 = load i32, i32* %10, align 4
  %123 = load %struct.box*, %struct.box** %15, align 8
  %124 = getelementptr inbounds %struct.box, %struct.box* %123, i32 0, i32 1
  store i32 %122, i32* %124, align 4
  %125 = load i32, i32* %10, align 4
  %126 = add nsw i32 %125, 1
  %127 = load %struct.box*, %struct.box** %16, align 8
  %128 = getelementptr inbounds %struct.box, %struct.box* %127, i32 0, i32 0
  store i32 %126, i32* %128, align 8
  br label %161

129:                                              ; preds = %111
  %130 = load %struct.box*, %struct.box** %15, align 8
  %131 = getelementptr inbounds %struct.box, %struct.box* %130, i32 0, i32 3
  %132 = load i32, i32* %131, align 4
  %133 = load %struct.box*, %struct.box** %15, align 8
  %134 = getelementptr inbounds %struct.box, %struct.box* %133, i32 0, i32 2
  %135 = load i32, i32* %134, align 8
  %136 = add nsw i32 %132, %135
  %137 = sdiv i32 %136, 2
  store i32 %137, i32* %10, align 4
  %138 = load i32, i32* %10, align 4
  %139 = load %struct.box*, %struct.box** %15, align 8
  %140 = getelementptr inbounds %struct.box, %struct.box* %139, i32 0, i32 3
  store i32 %138, i32* %140, align 4
  %141 = load i32, i32* %10, align 4
  %142 = add nsw i32 %141, 1
  %143 = load %struct.box*, %struct.box** %16, align 8
  %144 = getelementptr inbounds %struct.box, %struct.box* %143, i32 0, i32 2
  store i32 %142, i32* %144, align 8
  br label %161

145:                                              ; preds = %111
  %146 = load %struct.box*, %struct.box** %15, align 8
  %147 = getelementptr inbounds %struct.box, %struct.box* %146, i32 0, i32 5
  %148 = load i32, i32* %147, align 4
  %149 = load %struct.box*, %struct.box** %15, align 8
  %150 = getelementptr inbounds %struct.box, %struct.box* %149, i32 0, i32 4
  %151 = load i32, i32* %150, align 8
  %152 = add nsw i32 %148, %151
  %153 = sdiv i32 %152, 2
  store i32 %153, i32* %10, align 4
  %154 = load i32, i32* %10, align 4
  %155 = load %struct.box*, %struct.box** %15, align 8
  %156 = getelementptr inbounds %struct.box, %struct.box* %155, i32 0, i32 5
  store i32 %154, i32* %156, align 4
  %157 = load i32, i32* %10, align 4
  %158 = add nsw i32 %157, 1
  %159 = load %struct.box*, %struct.box** %16, align 8
  %160 = getelementptr inbounds %struct.box, %struct.box* %159, i32 0, i32 4
  store i32 %158, i32* %160, align 8
  br label %161

161:                                              ; preds = %145, %129, %113, %111
  %162 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %163 = load %struct.box*, %struct.box** %15, align 8
  call void @update_box(%struct.jpeg_decompress_struct.469* %162, %struct.box* %163)
  %164 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %5, align 8
  %165 = load %struct.box*, %struct.box** %16, align 8
  call void @update_box(%struct.jpeg_decompress_struct.469* %164, %struct.box* %165)
  %166 = load i32, i32* %7, align 4
  %167 = add nsw i32 %166, 1
  store i32 %167, i32* %7, align 4
  br label %17

168:                                              ; preds = %37, %17
  %169 = load i32, i32* %7, align 4
  ret i32 %169
}

; Function Attrs: noinline nounwind uwtable
define internal void @compute_color(%struct.jpeg_decompress_struct.469* %0, %struct.box* %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_decompress_struct.469*, align 8
  %5 = alloca %struct.box*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.my_cquantizer.924*, align 8
  %8 = alloca [32 x i16]**, align 8
  %9 = alloca i16*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  store %struct.jpeg_decompress_struct.469* %0, %struct.jpeg_decompress_struct.469** %4, align 8
  store %struct.box* %1, %struct.box** %5, align 8
  store i32 %2, i32* %6, align 4
  %24 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %24, i32 0, i32 83
  %26 = load %struct.jpeg_color_quantizer.487*, %struct.jpeg_color_quantizer.487** %25, align 8
  %27 = bitcast %struct.jpeg_color_quantizer.487* %26 to %struct.my_cquantizer.924*
  store %struct.my_cquantizer.924* %27, %struct.my_cquantizer.924** %7, align 8
  %28 = load %struct.my_cquantizer.924*, %struct.my_cquantizer.924** %7, align 8
  %29 = getelementptr inbounds %struct.my_cquantizer.924, %struct.my_cquantizer.924* %28, i32 0, i32 3
  %30 = load [32 x i16]**, [32 x i16]*** %29, align 8
  store [32 x i16]** %30, [32 x i16]*** %8, align 8
  store i64 0, i64* %20, align 8
  store i64 0, i64* %21, align 8
  store i64 0, i64* %22, align 8
  store i64 0, i64* %23, align 8
  %31 = load %struct.box*, %struct.box** %5, align 8
  %32 = getelementptr inbounds %struct.box, %struct.box* %31, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  store i32 %33, i32* %13, align 4
  %34 = load %struct.box*, %struct.box** %5, align 8
  %35 = getelementptr inbounds %struct.box, %struct.box* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %14, align 4
  %37 = load %struct.box*, %struct.box** %5, align 8
  %38 = getelementptr inbounds %struct.box, %struct.box* %37, i32 0, i32 2
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %15, align 4
  %40 = load %struct.box*, %struct.box** %5, align 8
  %41 = getelementptr inbounds %struct.box, %struct.box* %40, i32 0, i32 3
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %16, align 4
  %43 = load %struct.box*, %struct.box** %5, align 8
  %44 = getelementptr inbounds %struct.box, %struct.box* %43, i32 0, i32 4
  %45 = load i32, i32* %44, align 8
  store i32 %45, i32* %17, align 4
  %46 = load %struct.box*, %struct.box** %5, align 8
  %47 = getelementptr inbounds %struct.box, %struct.box* %46, i32 0, i32 5
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %18, align 4
  %49 = load i32, i32* %13, align 4
  store i32 %49, i32* %10, align 4
  br label %50

50:                                               ; preds = %120, %3
  %51 = load i32, i32* %10, align 4
  %52 = load i32, i32* %14, align 4
  %53 = icmp sle i32 %51, %52
  br i1 %53, label %54, label %123

54:                                               ; preds = %50
  %55 = load i32, i32* %15, align 4
  store i32 %55, i32* %11, align 4
  br label %56

56:                                               ; preds = %116, %54
  %57 = load i32, i32* %11, align 4
  %58 = load i32, i32* %16, align 4
  %59 = icmp sle i32 %57, %58
  br i1 %59, label %60, label %119

60:                                               ; preds = %56
  %61 = load [32 x i16]**, [32 x i16]*** %8, align 8
  %62 = load i32, i32* %10, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [32 x i16]*, [32 x i16]** %61, i64 %63
  %65 = load [32 x i16]*, [32 x i16]** %64, align 8
  %66 = load i32, i32* %11, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [32 x i16], [32 x i16]* %65, i64 %67
  %69 = load i32, i32* %17, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [32 x i16], [32 x i16]* %68, i64 0, i64 %70
  store i16* %71, i16** %9, align 8
  %72 = load i32, i32* %17, align 4
  store i32 %72, i32* %12, align 4
  br label %73

73:                                               ; preds = %112, %60
  %74 = load i32, i32* %12, align 4
  %75 = load i32, i32* %18, align 4
  %76 = icmp sle i32 %74, %75
  br i1 %76, label %77, label %115

77:                                               ; preds = %73
  %78 = load i16*, i16** %9, align 8
  %79 = getelementptr inbounds i16, i16* %78, i32 1
  store i16* %79, i16** %9, align 8
  %80 = load i16, i16* %78, align 2
  %81 = zext i16 %80 to i64
  store i64 %81, i64* %19, align 8
  %82 = icmp ne i64 %81, 0
  br i1 %82, label %83, label %111

83:                                               ; preds = %77
  %84 = load i64, i64* %19, align 8
  %85 = load i64, i64* %20, align 8
  %86 = add nsw i64 %85, %84
  store i64 %86, i64* %20, align 8
  %87 = load i32, i32* %10, align 4
  %88 = shl i32 %87, 3
  %89 = add nsw i32 %88, 4
  %90 = sext i32 %89 to i64
  %91 = load i64, i64* %19, align 8
  %92 = mul nsw i64 %90, %91
  %93 = load i64, i64* %21, align 8
  %94 = add nsw i64 %93, %92
  store i64 %94, i64* %21, align 8
  %95 = load i32, i32* %11, align 4
  %96 = shl i32 %95, 2
  %97 = add nsw i32 %96, 2
  %98 = sext i32 %97 to i64
  %99 = load i64, i64* %19, align 8
  %100 = mul nsw i64 %98, %99
  %101 = load i64, i64* %22, align 8
  %102 = add nsw i64 %101, %100
  store i64 %102, i64* %22, align 8
  %103 = load i32, i32* %12, align 4
  %104 = shl i32 %103, 3
  %105 = add nsw i32 %104, 4
  %106 = sext i32 %105 to i64
  %107 = load i64, i64* %19, align 8
  %108 = mul nsw i64 %106, %107
  %109 = load i64, i64* %23, align 8
  %110 = add nsw i64 %109, %108
  store i64 %110, i64* %23, align 8
  br label %111

111:                                              ; preds = %83, %77
  br label %112

112:                                              ; preds = %111
  %113 = load i32, i32* %12, align 4
  %114 = add nsw i32 %113, 1
  store i32 %114, i32* %12, align 4
  br label %73

115:                                              ; preds = %73
  br label %116

116:                                              ; preds = %115
  %117 = load i32, i32* %11, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %11, align 4
  br label %56

119:                                              ; preds = %56
  br label %120

120:                                              ; preds = %119
  %121 = load i32, i32* %10, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %10, align 4
  br label %50

123:                                              ; preds = %50
  %124 = load i64, i64* %21, align 8
  %125 = load i64, i64* %20, align 8
  %126 = ashr i64 %125, 1
  %127 = add nsw i64 %124, %126
  %128 = load i64, i64* %20, align 8
  %129 = sdiv i64 %127, %128
  %130 = trunc i64 %129 to i8
  %131 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %132 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %131, i32 0, i32 32
  %133 = load i8**, i8*** %132, align 8
  %134 = getelementptr inbounds i8*, i8** %133, i64 0
  %135 = load i8*, i8** %134, align 8
  %136 = load i32, i32* %6, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i8, i8* %135, i64 %137
  store i8 %130, i8* %138, align 1
  %139 = load i64, i64* %22, align 8
  %140 = load i64, i64* %20, align 8
  %141 = ashr i64 %140, 1
  %142 = add nsw i64 %139, %141
  %143 = load i64, i64* %20, align 8
  %144 = sdiv i64 %142, %143
  %145 = trunc i64 %144 to i8
  %146 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %147 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %146, i32 0, i32 32
  %148 = load i8**, i8*** %147, align 8
  %149 = getelementptr inbounds i8*, i8** %148, i64 1
  %150 = load i8*, i8** %149, align 8
  %151 = load i32, i32* %6, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i8, i8* %150, i64 %152
  store i8 %145, i8* %153, align 1
  %154 = load i64, i64* %23, align 8
  %155 = load i64, i64* %20, align 8
  %156 = ashr i64 %155, 1
  %157 = add nsw i64 %154, %156
  %158 = load i64, i64* %20, align 8
  %159 = sdiv i64 %157, %158
  %160 = trunc i64 %159 to i8
  %161 = load %struct.jpeg_decompress_struct.469*, %struct.jpeg_decompress_struct.469** %4, align 8
  %162 = getelementptr inbounds %struct.jpeg_decompress_struct.469, %struct.jpeg_decompress_struct.469* %161, i32 0, i32 32
  %163 = load i8**, i8*** %162, align 8
  %164 = getelementptr inbounds i8*, i8** %163, i64 2
  %165 = load i8*, i8** %164, align 8
  %166 = load i32, i32* %6, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i8, i8* %165, i64 %167
  store i8 %160, i8* %168, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.box* @find_biggest_color_pop(%struct.box* %0, i32 %1) #0 {
  %3 = alloca %struct.box*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.box*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca %struct.box*, align 8
  store %struct.box* %0, %struct.box** %3, align 8
  store i32 %1, i32* %4, align 4
  store i64 0, i64* %7, align 8
  store %struct.box* null, %struct.box** %8, align 8
  store i32 0, i32* %6, align 4
  %9 = load %struct.box*, %struct.box** %3, align 8
  store %struct.box* %9, %struct.box** %5, align 8
  br label %10

10:                                               ; preds = %31, %2
  %11 = load i32, i32* %6, align 4
  %12 = load i32, i32* %4, align 4
  %13 = icmp slt i32 %11, %12
  br i1 %13, label %14, label %36

14:                                               ; preds = %10
  %15 = load %struct.box*, %struct.box** %5, align 8
  %16 = getelementptr inbounds %struct.box, %struct.box* %15, i32 0, i32 7
  %17 = load i64, i64* %16, align 8
  %18 = load i64, i64* %7, align 8
  %19 = icmp sgt i64 %17, %18
  br i1 %19, label %20, label %30

20:                                               ; preds = %14
  %21 = load %struct.box*, %struct.box** %5, align 8
  %22 = getelementptr inbounds %struct.box, %struct.box* %21, i32 0, i32 6
  %23 = load i64, i64* %22, align 8
  %24 = icmp sgt i64 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %20
  %26 = load %struct.box*, %struct.box** %5, align 8
  store %struct.box* %26, %struct.box** %8, align 8
  %27 = load %struct.box*, %struct.box** %5, align 8
  %28 = getelementptr inbounds %struct.box, %struct.box* %27, i32 0, i32 7
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %7, align 8
  br label %30

30:                                               ; preds = %25, %20, %14
  br label %31

31:                                               ; preds = %30
  %32 = load i32, i32* %6, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %6, align 4
  %34 = load %struct.box*, %struct.box** %5, align 8
  %35 = getelementptr inbounds %struct.box, %struct.box* %34, i32 1
  store %struct.box* %35, %struct.box** %5, align 8
  br label %10

36:                                               ; preds = %10
  %37 = load %struct.box*, %struct.box** %8, align 8
  ret %struct.box* %37
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.box* @find_biggest_volume(%struct.box* %0, i32 %1) #0 {
  %3 = alloca %struct.box*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.box*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca %struct.box*, align 8
  store %struct.box* %0, %struct.box** %3, align 8
  store i32 %1, i32* %4, align 4
  store i64 0, i64* %7, align 8
  store %struct.box* null, %struct.box** %8, align 8
  store i32 0, i32* %6, align 4
  %9 = load %struct.box*, %struct.box** %3, align 8
  store %struct.box* %9, %struct.box** %5, align 8
  br label %10

10:                                               ; preds = %26, %2
  %11 = load i32, i32* %6, align 4
  %12 = load i32, i32* %4, align 4
  %13 = icmp slt i32 %11, %12
  br i1 %13, label %14, label %31

14:                                               ; preds = %10
  %15 = load %struct.box*, %struct.box** %5, align 8
  %16 = getelementptr inbounds %struct.box, %struct.box* %15, i32 0, i32 6
  %17 = load i64, i64* %16, align 8
  %18 = load i64, i64* %7, align 8
  %19 = icmp sgt i64 %17, %18
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = load %struct.box*, %struct.box** %5, align 8
  store %struct.box* %21, %struct.box** %8, align 8
  %22 = load %struct.box*, %struct.box** %5, align 8
  %23 = getelementptr inbounds %struct.box, %struct.box* %22, i32 0, i32 6
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %7, align 8
  br label %25

25:                                               ; preds = %20, %14
  br label %26

26:                                               ; preds = %25
  %27 = load i32, i32* %6, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %6, align 4
  %29 = load %struct.box*, %struct.box** %5, align 8
  %30 = getelementptr inbounds %struct.box, %struct.box* %29, i32 1
  store %struct.box* %30, %struct.box** %5, align 8
  br label %10

31:                                               ; preds = %10
  %32 = load %struct.box*, %struct.box** %8, align 8
  ret %struct.box* %32
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @jdiv_round_up(i64 %0, i64 %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i64, i64* %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = add nsw i64 %5, %6
  %8 = sub nsw i64 %7, 1
  %9 = load i64, i64* %4, align 8
  %10 = sdiv i64 %8, %9
  ret i64 %10
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @jround_up(i64 %0, i64 %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i64, i64* %4, align 8
  %6 = sub nsw i64 %5, 1
  %7 = load i64, i64* %3, align 8
  %8 = add nsw i64 %7, %6
  store i64 %8, i64* %3, align 8
  %9 = load i64, i64* %3, align 8
  %10 = load i64, i64* %3, align 8
  %11 = load i64, i64* %4, align 8
  %12 = srem i64 %10, %11
  %13 = sub nsw i64 %9, %12
  ret i64 %13
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jcopy_sample_rows(i8** %0, i32 %1, i8** %2, i32 %3, i32 %4, i32 %5) #0 {
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  store i8** %0, i8*** %7, align 8
  store i32 %1, i32* %8, align 4
  store i8** %2, i8*** %9, align 8
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  %17 = load i32, i32* %12, align 4
  %18 = zext i32 %17 to i64
  %19 = mul i64 %18, 1
  store i64 %19, i64* %15, align 8
  %20 = load i32, i32* %8, align 4
  %21 = load i8**, i8*** %7, align 8
  %22 = sext i32 %20 to i64
  %23 = getelementptr inbounds i8*, i8** %21, i64 %22
  store i8** %23, i8*** %7, align 8
  %24 = load i32, i32* %10, align 4
  %25 = load i8**, i8*** %9, align 8
  %26 = sext i32 %24 to i64
  %27 = getelementptr inbounds i8*, i8** %25, i64 %26
  store i8** %27, i8*** %9, align 8
  %28 = load i32, i32* %11, align 4
  store i32 %28, i32* %16, align 4
  br label %29

29:                                               ; preds = %42, %6
  %30 = load i32, i32* %16, align 4
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %45

32:                                               ; preds = %29
  %33 = load i8**, i8*** %7, align 8
  %34 = getelementptr inbounds i8*, i8** %33, i32 1
  store i8** %34, i8*** %7, align 8
  %35 = load i8*, i8** %33, align 8
  store i8* %35, i8** %13, align 8
  %36 = load i8**, i8*** %9, align 8
  %37 = getelementptr inbounds i8*, i8** %36, i32 1
  store i8** %37, i8*** %9, align 8
  %38 = load i8*, i8** %36, align 8
  store i8* %38, i8** %14, align 8
  %39 = load i8*, i8** %14, align 8
  %40 = load i8*, i8** %13, align 8
  %41 = load i64, i64* %15, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %40, i64 %41, i1 false)
  br label %42

42:                                               ; preds = %32
  %43 = load i32, i32* %16, align 4
  %44 = add nsw i32 %43, -1
  store i32 %44, i32* %16, align 4
  br label %29

45:                                               ; preds = %29
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jcopy_block_row([64 x i16]* %0, [64 x i16]* %1, i32 %2) #0 {
  %4 = alloca [64 x i16]*, align 8
  %5 = alloca [64 x i16]*, align 8
  %6 = alloca i32, align 4
  store [64 x i16]* %0, [64 x i16]** %4, align 8
  store [64 x i16]* %1, [64 x i16]** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load [64 x i16]*, [64 x i16]** %5, align 8
  %8 = bitcast [64 x i16]* %7 to i8*
  %9 = load [64 x i16]*, [64 x i16]** %4, align 8
  %10 = bitcast [64 x i16]* %9 to i8*
  %11 = load i32, i32* %6, align 4
  %12 = zext i32 %11 to i64
  %13 = mul i64 %12, 128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %10, i64 %13, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @jzero_far(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i64, i64* %4, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 0, i64 %6, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @read_color_map(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  %5 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %5, i32 0, i32 1
  %7 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %7, i32 0, i32 2
  %9 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %8, align 8
  %10 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %11 = bitcast %struct.jpeg_decompress_struct* %10 to %struct.jpeg_common_struct*
  %12 = call i8** %9(%struct.jpeg_common_struct* %11, i32 1, i32 256, i32 3)
  %13 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %13, i32 0, i32 32
  store i8** %12, i8*** %14, align 8
  %15 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %15, i32 0, i32 31
  store i32 0, i32* %16, align 4
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %18 = call i32 @getc(%struct._IO_FILE* %17)
  switch i32 %18, label %25 [
    i32 71, label %19
    i32 80, label %22
  ]

19:                                               ; preds = %2
  %20 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  call void @read_gif_map(%struct.jpeg_decompress_struct* %20, %struct._IO_FILE* %21)
  br label %37

22:                                               ; preds = %2
  %23 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  call void @read_ppm_map(%struct.jpeg_decompress_struct* %23, %struct._IO_FILE* %24)
  br label %37

25:                                               ; preds = %2
  %26 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %26, i32 0, i32 0
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i32 0, i32 5
  store i32 1038, i32* %29, align 8
  %30 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %30, i32 0, i32 0
  %32 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %31, align 8
  %33 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %32, i32 0, i32 0
  %34 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %33, align 8
  %35 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %36 = bitcast %struct.jpeg_decompress_struct* %35 to %struct.jpeg_common_struct*
  call void %34(%struct.jpeg_common_struct* %36)
  br label %37

37:                                               ; preds = %25, %22, %19
  ret void
}

declare dso_local i32 @getc(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @read_gif_map(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca [13 x i32], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  store i32 1, i32* %6, align 4
  br label %11

11:                                               ; preds = %34, %2
  %12 = load i32, i32* %6, align 4
  %13 = icmp slt i32 %12, 13
  br i1 %13, label %14, label %37

14:                                               ; preds = %11
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %16 = call i32 @getc(%struct._IO_FILE* %15)
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [13 x i32], [13 x i32]* %5, i64 0, i64 %18
  store i32 %16, i32* %19, align 4
  %20 = icmp eq i32 %16, -1
  br i1 %20, label %21, label %33

21:                                               ; preds = %14
  %22 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %22, i32 0, i32 0
  %24 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %25 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %24, i32 0, i32 5
  store i32 1038, i32* %25, align 8
  %26 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %26, i32 0, i32 0
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i32 0, i32 0
  %30 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %29, align 8
  %31 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %32 = bitcast %struct.jpeg_decompress_struct* %31 to %struct.jpeg_common_struct*
  call void %30(%struct.jpeg_common_struct* %32)
  br label %33

33:                                               ; preds = %21, %14
  br label %34

34:                                               ; preds = %33
  %35 = load i32, i32* %6, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %6, align 4
  br label %11

37:                                               ; preds = %11
  %38 = getelementptr inbounds [13 x i32], [13 x i32]* %5, i64 0, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp ne i32 %39, 73
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds [13 x i32], [13 x i32]* %5, i64 0, i64 2
  %43 = load i32, i32* %42, align 8
  %44 = icmp ne i32 %43, 70
  br i1 %44, label %45, label %57

45:                                               ; preds = %41, %37
  %46 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %46, i32 0, i32 0
  %48 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %47, align 8
  %49 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %48, i32 0, i32 5
  store i32 1038, i32* %49, align 8
  %50 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %51 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %50, i32 0, i32 0
  %52 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %51, align 8
  %53 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %52, i32 0, i32 0
  %54 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %53, align 8
  %55 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %56 = bitcast %struct.jpeg_decompress_struct* %55 to %struct.jpeg_common_struct*
  call void %54(%struct.jpeg_common_struct* %56)
  br label %57

57:                                               ; preds = %45, %41
  %58 = getelementptr inbounds [13 x i32], [13 x i32]* %5, i64 0, i64 10
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, 128
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %64 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %63, i32 0, i32 0
  %65 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %64, align 8
  %66 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %65, i32 0, i32 5
  store i32 1038, i32* %66, align 8
  %67 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %68 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %67, i32 0, i32 0
  %69 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %68, align 8
  %70 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %69, i32 0, i32 0
  %71 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %70, align 8
  %72 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %73 = bitcast %struct.jpeg_decompress_struct* %72 to %struct.jpeg_common_struct*
  call void %71(%struct.jpeg_common_struct* %73)
  br label %74

74:                                               ; preds = %62, %57
  %75 = getelementptr inbounds [13 x i32], [13 x i32]* %5, i64 0, i64 10
  %76 = load i32, i32* %75, align 8
  %77 = and i32 %76, 7
  %78 = shl i32 2, %77
  store i32 %78, i32* %7, align 4
  store i32 0, i32* %6, align 4
  br label %79

79:                                               ; preds = %118, %74
  %80 = load i32, i32* %6, align 4
  %81 = load i32, i32* %7, align 4
  %82 = icmp slt i32 %80, %81
  br i1 %82, label %83, label %121

83:                                               ; preds = %79
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %85 = call i32 @getc(%struct._IO_FILE* %84)
  store i32 %85, i32* %8, align 4
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %87 = call i32 @getc(%struct._IO_FILE* %86)
  store i32 %87, i32* %9, align 4
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %89 = call i32 @getc(%struct._IO_FILE* %88)
  store i32 %89, i32* %10, align 4
  %90 = load i32, i32* %8, align 4
  %91 = icmp eq i32 %90, -1
  br i1 %91, label %98, label %92

92:                                               ; preds = %83
  %93 = load i32, i32* %9, align 4
  %94 = icmp eq i32 %93, -1
  br i1 %94, label %98, label %95

95:                                               ; preds = %92
  %96 = load i32, i32* %10, align 4
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %98, label %110

98:                                               ; preds = %95, %92, %83
  %99 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %100 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %99, i32 0, i32 0
  %101 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %100, align 8
  %102 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %101, i32 0, i32 5
  store i32 1038, i32* %102, align 8
  %103 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %104 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %103, i32 0, i32 0
  %105 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %104, align 8
  %106 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %105, i32 0, i32 0
  %107 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %106, align 8
  %108 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %109 = bitcast %struct.jpeg_decompress_struct* %108 to %struct.jpeg_common_struct*
  call void %107(%struct.jpeg_common_struct* %109)
  br label %110

110:                                              ; preds = %98, %95
  %111 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %112 = load i32, i32* %8, align 4
  %113 = shl i32 %112, 0
  %114 = load i32, i32* %9, align 4
  %115 = shl i32 %114, 0
  %116 = load i32, i32* %10, align 4
  %117 = shl i32 %116, 0
  call void @add_map_entry(%struct.jpeg_decompress_struct* %111, i32 %113, i32 %115, i32 %117)
  br label %118

118:                                              ; preds = %110
  %119 = load i32, i32* %6, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %6, align 4
  br label %79

121:                                              ; preds = %79
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @read_ppm_map(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %15 = call i32 @getc(%struct._IO_FILE* %14)
  store i32 %15, i32* %5, align 4
  %16 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %18 = call i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %16, %struct._IO_FILE* %17)
  store i32 %18, i32* %6, align 4
  %19 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %21 = call i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %19, %struct._IO_FILE* %20)
  store i32 %21, i32* %7, align 4
  %22 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %24 = call i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %22, %struct._IO_FILE* %23)
  store i32 %24, i32* %8, align 4
  %25 = load i32, i32* %6, align 4
  %26 = icmp ule i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %2
  %28 = load i32, i32* %7, align 4
  %29 = icmp ule i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = load i32, i32* %8, align 4
  %32 = icmp ule i32 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %30, %27, %2
  %34 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %34, i32 0, i32 0
  %36 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %36, i32 0, i32 5
  store i32 1038, i32* %37, align 8
  %38 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %39 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %38, i32 0, i32 0
  %40 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %39, align 8
  %41 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %40, i32 0, i32 0
  %42 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %41, align 8
  %43 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %44 = bitcast %struct.jpeg_decompress_struct* %43 to %struct.jpeg_common_struct*
  call void %42(%struct.jpeg_common_struct* %44)
  br label %45

45:                                               ; preds = %33, %30
  %46 = load i32, i32* %8, align 4
  %47 = icmp ne i32 %46, 255
  br i1 %47, label %48, label %60

48:                                               ; preds = %45
  %49 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %49, i32 0, i32 0
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %50, align 8
  %52 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i32 0, i32 5
  store i32 1038, i32* %52, align 8
  %53 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %54 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %53, i32 0, i32 0
  %55 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %54, align 8
  %56 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %55, i32 0, i32 0
  %57 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %56, align 8
  %58 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %59 = bitcast %struct.jpeg_decompress_struct* %58 to %struct.jpeg_common_struct*
  call void %57(%struct.jpeg_common_struct* %59)
  br label %60

60:                                               ; preds = %48, %45
  %61 = load i32, i32* %5, align 4
  switch i32 %61, label %144 [
    i32 51, label %62
    i32 54, label %94
  ]

62:                                               ; preds = %60
  store i32 0, i32* %9, align 4
  br label %63

63:                                               ; preds = %90, %62
  %64 = load i32, i32* %9, align 4
  %65 = load i32, i32* %7, align 4
  %66 = icmp ult i32 %64, %65
  br i1 %66, label %67, label %93

67:                                               ; preds = %63
  store i32 0, i32* %10, align 4
  br label %68

68:                                               ; preds = %86, %67
  %69 = load i32, i32* %10, align 4
  %70 = load i32, i32* %6, align 4
  %71 = icmp ult i32 %69, %70
  br i1 %71, label %72, label %89

72:                                               ; preds = %68
  %73 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %75 = call i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %73, %struct._IO_FILE* %74)
  store i32 %75, i32* %11, align 4
  %76 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %78 = call i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %76, %struct._IO_FILE* %77)
  store i32 %78, i32* %12, align 4
  %79 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %81 = call i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %79, %struct._IO_FILE* %80)
  store i32 %81, i32* %13, align 4
  %82 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %83 = load i32, i32* %11, align 4
  %84 = load i32, i32* %12, align 4
  %85 = load i32, i32* %13, align 4
  call void @add_map_entry(%struct.jpeg_decompress_struct* %82, i32 %83, i32 %84, i32 %85)
  br label %86

86:                                               ; preds = %72
  %87 = load i32, i32* %10, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %10, align 4
  br label %68

89:                                               ; preds = %68
  br label %90

90:                                               ; preds = %89
  %91 = load i32, i32* %9, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %9, align 4
  br label %63

93:                                               ; preds = %63
  br label %156

94:                                               ; preds = %60
  store i32 0, i32* %9, align 4
  br label %95

95:                                               ; preds = %140, %94
  %96 = load i32, i32* %9, align 4
  %97 = load i32, i32* %7, align 4
  %98 = icmp ult i32 %96, %97
  br i1 %98, label %99, label %143

99:                                               ; preds = %95
  store i32 0, i32* %10, align 4
  br label %100

100:                                              ; preds = %136, %99
  %101 = load i32, i32* %10, align 4
  %102 = load i32, i32* %6, align 4
  %103 = icmp ult i32 %101, %102
  br i1 %103, label %104, label %139

104:                                              ; preds = %100
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %106 = call i32 @pbm_getc(%struct._IO_FILE* %105)
  store i32 %106, i32* %11, align 4
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %108 = call i32 @pbm_getc(%struct._IO_FILE* %107)
  store i32 %108, i32* %12, align 4
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %110 = call i32 @pbm_getc(%struct._IO_FILE* %109)
  store i32 %110, i32* %13, align 4
  %111 = load i32, i32* %11, align 4
  %112 = icmp eq i32 %111, -1
  br i1 %112, label %119, label %113

113:                                              ; preds = %104
  %114 = load i32, i32* %12, align 4
  %115 = icmp eq i32 %114, -1
  br i1 %115, label %119, label %116

116:                                              ; preds = %113
  %117 = load i32, i32* %13, align 4
  %118 = icmp eq i32 %117, -1
  br i1 %118, label %119, label %131

119:                                              ; preds = %116, %113, %104
  %120 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %121 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %120, i32 0, i32 0
  %122 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %121, align 8
  %123 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %122, i32 0, i32 5
  store i32 1038, i32* %123, align 8
  %124 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %125 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %124, i32 0, i32 0
  %126 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %125, align 8
  %127 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %126, i32 0, i32 0
  %128 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %127, align 8
  %129 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %130 = bitcast %struct.jpeg_decompress_struct* %129 to %struct.jpeg_common_struct*
  call void %128(%struct.jpeg_common_struct* %130)
  br label %131

131:                                              ; preds = %119, %116
  %132 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %133 = load i32, i32* %11, align 4
  %134 = load i32, i32* %12, align 4
  %135 = load i32, i32* %13, align 4
  call void @add_map_entry(%struct.jpeg_decompress_struct* %132, i32 %133, i32 %134, i32 %135)
  br label %136

136:                                              ; preds = %131
  %137 = load i32, i32* %10, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %10, align 4
  br label %100

139:                                              ; preds = %100
  br label %140

140:                                              ; preds = %139
  %141 = load i32, i32* %9, align 4
  %142 = add i32 %141, 1
  store i32 %142, i32* %9, align 4
  br label %95

143:                                              ; preds = %95
  br label %156

144:                                              ; preds = %60
  %145 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %146 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %145, i32 0, i32 0
  %147 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %146, align 8
  %148 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %147, i32 0, i32 5
  store i32 1038, i32* %148, align 8
  %149 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %150 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %149, i32 0, i32 0
  %151 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %150, align 8
  %152 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %151, i32 0, i32 0
  %153 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %152, align 8
  %154 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %155 = bitcast %struct.jpeg_decompress_struct* %154 to %struct.jpeg_common_struct*
  call void %153(%struct.jpeg_common_struct* %155)
  br label %156

156:                                              ; preds = %144, %143, %93
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  br label %7

7:                                                ; preds = %37, %2
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %9 = call i32 @pbm_getc(%struct._IO_FILE* %8)
  store i32 %9, i32* %5, align 4
  %10 = load i32, i32* %5, align 4
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %13, i32 0, i32 0
  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i32 0, i32 5
  store i32 1038, i32* %16, align 8
  %17 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %17, i32 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i32 0, i32 0
  %21 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %20, align 8
  %22 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %23 = bitcast %struct.jpeg_decompress_struct* %22 to %struct.jpeg_common_struct*
  call void %21(%struct.jpeg_common_struct* %23)
  br label %24

24:                                               ; preds = %12, %7
  br label %25

25:                                               ; preds = %24
  %26 = load i32, i32* %5, align 4
  %27 = icmp eq i32 %26, 32
  br i1 %27, label %37, label %28

28:                                               ; preds = %25
  %29 = load i32, i32* %5, align 4
  %30 = icmp eq i32 %29, 9
  br i1 %30, label %37, label %31

31:                                               ; preds = %28
  %32 = load i32, i32* %5, align 4
  %33 = icmp eq i32 %32, 10
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = load i32, i32* %5, align 4
  %36 = icmp eq i32 %35, 13
  br label %37

37:                                               ; preds = %34, %31, %28, %25
  %38 = phi i1 [ true, %31 ], [ true, %28 ], [ true, %25 ], [ %36, %34 ]
  br i1 %38, label %7, label %39

39:                                               ; preds = %37
  %40 = load i32, i32* %5, align 4
  %41 = icmp slt i32 %40, 48
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = load i32, i32* %5, align 4
  %44 = icmp sgt i32 %43, 57
  br i1 %44, label %45, label %57

45:                                               ; preds = %42, %39
  %46 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %46, i32 0, i32 0
  %48 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %47, align 8
  %49 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %48, i32 0, i32 5
  store i32 1038, i32* %49, align 8
  %50 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %51 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %50, i32 0, i32 0
  %52 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %51, align 8
  %53 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %52, i32 0, i32 0
  %54 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %53, align 8
  %55 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %56 = bitcast %struct.jpeg_decompress_struct* %55 to %struct.jpeg_common_struct*
  call void %54(%struct.jpeg_common_struct* %56)
  br label %57

57:                                               ; preds = %45, %42
  %58 = load i32, i32* %5, align 4
  %59 = sub nsw i32 %58, 48
  store i32 %59, i32* %6, align 4
  br label %60

60:                                               ; preds = %69, %57
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %62 = call i32 @pbm_getc(%struct._IO_FILE* %61)
  store i32 %62, i32* %5, align 4
  %63 = icmp sge i32 %62, 48
  br i1 %63, label %64, label %67

64:                                               ; preds = %60
  %65 = load i32, i32* %5, align 4
  %66 = icmp sle i32 %65, 57
  br label %67

67:                                               ; preds = %64, %60
  %68 = phi i1 [ false, %60 ], [ %66, %64 ]
  br i1 %68, label %69, label %76

69:                                               ; preds = %67
  %70 = load i32, i32* %6, align 4
  %71 = mul i32 %70, 10
  store i32 %71, i32* %6, align 4
  %72 = load i32, i32* %5, align 4
  %73 = sub nsw i32 %72, 48
  %74 = load i32, i32* %6, align 4
  %75 = add i32 %74, %73
  store i32 %75, i32* %6, align 4
  br label %60

76:                                               ; preds = %67
  %77 = load i32, i32* %6, align 4
  ret i32 %77
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_map_entry(%struct.jpeg_decompress_struct* %0, i32 %1, i32 %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %14 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %14, i32 0, i32 32
  %16 = load i8**, i8*** %15, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  store i8* %18, i8** %9, align 8
  %19 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %19, i32 0, i32 32
  %21 = load i8**, i8*** %20, align 8
  %22 = getelementptr inbounds i8*, i8** %21, i64 1
  %23 = load i8*, i8** %22, align 8
  store i8* %23, i8** %10, align 8
  %24 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %24, i32 0, i32 32
  %26 = load i8**, i8*** %25, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 2
  %28 = load i8*, i8** %27, align 8
  store i8* %28, i8** %11, align 8
  %29 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %29, i32 0, i32 31
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %12, align 4
  store i32 0, i32* %13, align 4
  br label %32

32:                                               ; preds = %65, %4
  %33 = load i32, i32* %13, align 4
  %34 = load i32, i32* %12, align 4
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %36, label %68

36:                                               ; preds = %32
  %37 = load i8*, i8** %9, align 8
  %38 = load i32, i32* %13, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %37, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = load i32, i32* %6, align 4
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %45, label %64

45:                                               ; preds = %36
  %46 = load i8*, i8** %10, align 8
  %47 = load i32, i32* %13, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %46, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = load i32, i32* %7, align 4
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %54, label %64

54:                                               ; preds = %45
  %55 = load i8*, i8** %11, align 8
  %56 = load i32, i32* %13, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %55, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = load i32, i32* %8, align 4
  %62 = icmp eq i32 %60, %61
  br i1 %62, label %63, label %64

63:                                               ; preds = %54
  br label %112

64:                                               ; preds = %54, %45, %36
  br label %65

65:                                               ; preds = %64
  %66 = load i32, i32* %13, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %13, align 4
  br label %32

68:                                               ; preds = %32
  %69 = load i32, i32* %12, align 4
  %70 = icmp sge i32 %69, 256
  br i1 %70, label %71, label %89

71:                                               ; preds = %68
  %72 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %73 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %72, i32 0, i32 0
  %74 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %73, align 8
  %75 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %74, i32 0, i32 5
  store i32 56, i32* %75, align 8
  %76 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %77 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %76, i32 0, i32 0
  %78 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %77, align 8
  %79 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %78, i32 0, i32 6
  %80 = bitcast %union.anon* %79 to [8 x i32]*
  %81 = getelementptr inbounds [8 x i32], [8 x i32]* %80, i64 0, i64 0
  store i32 256, i32* %81, align 4
  %82 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %83 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %82, i32 0, i32 0
  %84 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %83, align 8
  %85 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %84, i32 0, i32 0
  %86 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %85, align 8
  %87 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %88 = bitcast %struct.jpeg_decompress_struct* %87 to %struct.jpeg_common_struct*
  call void %86(%struct.jpeg_common_struct* %88)
  br label %89

89:                                               ; preds = %71, %68
  %90 = load i32, i32* %6, align 4
  %91 = trunc i32 %90 to i8
  %92 = load i8*, i8** %9, align 8
  %93 = load i32, i32* %12, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %92, i64 %94
  store i8 %91, i8* %95, align 1
  %96 = load i32, i32* %7, align 4
  %97 = trunc i32 %96 to i8
  %98 = load i8*, i8** %10, align 8
  %99 = load i32, i32* %12, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i8, i8* %98, i64 %100
  store i8 %97, i8* %101, align 1
  %102 = load i32, i32* %8, align 4
  %103 = trunc i32 %102 to i8
  %104 = load i8*, i8** %11, align 8
  %105 = load i32, i32* %12, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i8, i8* %104, i64 %106
  store i8 %103, i8* %107, align 1
  %108 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %109 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %108, i32 0, i32 31
  %110 = load i32, i32* %109, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %109, align 4
  br label %112

112:                                              ; preds = %89, %63
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pbm_getc(%struct._IO_FILE* %0) #0 {
  %2 = alloca %struct._IO_FILE*, align 8
  %3 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %5 = call i32 @getc(%struct._IO_FILE* %4)
  store i32 %5, i32* %3, align 4
  %6 = load i32, i32* %3, align 4
  %7 = icmp eq i32 %6, 35
  br i1 %7, label %8, label %21

8:                                                ; preds = %1
  br label %9

9:                                                ; preds = %18, %8
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %11 = call i32 @getc(%struct._IO_FILE* %10)
  store i32 %11, i32* %3, align 4
  br label %12

12:                                               ; preds = %9
  %13 = load i32, i32* %3, align 4
  %14 = icmp ne i32 %13, 10
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  %16 = load i32, i32* %3, align 4
  %17 = icmp ne i32 %16, -1
  br label %18

18:                                               ; preds = %15, %12
  %19 = phi i1 [ false, %12 ], [ %17, %15 ]
  br i1 %19, label %9, label %20

20:                                               ; preds = %18
  br label %21

21:                                               ; preds = %20, %1
  %22 = load i32, i32* %3, align 4
  ret i32 %22
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.djpeg_dest_struct* @jinit_write_bmp(%struct.jpeg_decompress_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.bmp_dest_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.cdjpeg_progress_mgr*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %8, i32 0, i32 1
  %10 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %10, i32 0, i32 0
  %12 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %11, align 8
  %13 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %14 = bitcast %struct.jpeg_decompress_struct* %13 to %struct.jpeg_common_struct*
  %15 = call i8* %12(%struct.jpeg_common_struct* %14, i32 1, i64 80)
  %16 = bitcast i8* %15 to %struct.bmp_dest_struct*
  store %struct.bmp_dest_struct* %16, %struct.bmp_dest_struct** %5, align 8
  %17 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %18 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %17, i32 0, i32 0
  %19 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %18, i32 0, i32 0
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)* @start_output_bmp, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)** %19, align 8
  %20 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %21 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %20, i32 0, i32 0
  %22 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %21, i32 0, i32 2
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)* @finish_output_bmp, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)** %22, align 8
  %23 = load i32, i32* %4, align 4
  %24 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %25 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %24, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  %26 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %26, i32 0, i32 10
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %34

30:                                               ; preds = %2
  %31 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %32 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %31, i32 0, i32 0
  %33 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %32, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)* @put_gray_rows, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %33, align 8
  br label %66

34:                                               ; preds = %2
  %35 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %35, i32 0, i32 10
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 2
  br i1 %38, label %39, label %53

39:                                               ; preds = %34
  %40 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %40, i32 0, i32 19
  %42 = load i32, i32* %41, align 4
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %48

44:                                               ; preds = %39
  %45 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %46 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %45, i32 0, i32 0
  %47 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %46, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)* @put_gray_rows, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %47, align 8
  br label %52

48:                                               ; preds = %39
  %49 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %50 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %49, i32 0, i32 0
  %51 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %50, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)* @put_pixel_rows, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %51, align 8
  br label %52

52:                                               ; preds = %48, %44
  br label %65

53:                                               ; preds = %34
  %54 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %54, i32 0, i32 0
  %56 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %57 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %56, i32 0, i32 5
  store i32 1005, i32* %57, align 8
  %58 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %59 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %58, i32 0, i32 0
  %60 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %59, align 8
  %61 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %60, i32 0, i32 0
  %62 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %61, align 8
  %63 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %64 = bitcast %struct.jpeg_decompress_struct* %63 to %struct.jpeg_common_struct*
  call void %62(%struct.jpeg_common_struct* %64)
  br label %65

65:                                               ; preds = %53, %52
  br label %66

66:                                               ; preds = %65, %30
  %67 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  call void bitcast (void (%struct.jpeg_decompress_struct.469*)* @jpeg_calc_output_dimensions to void (%struct.jpeg_decompress_struct*)*)(%struct.jpeg_decompress_struct* %67)
  %68 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %69 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %68, i32 0, i32 26
  %70 = load i32, i32* %69, align 8
  %71 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %72 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %71, i32 0, i32 29
  %73 = load i32, i32* %72, align 4
  %74 = mul i32 %70, %73
  store i32 %74, i32* %6, align 4
  %75 = load i32, i32* %6, align 4
  %76 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %77 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %76, i32 0, i32 3
  store i32 %75, i32* %77, align 8
  br label %78

78:                                               ; preds = %82, %66
  %79 = load i32, i32* %6, align 4
  %80 = and i32 %79, 3
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  %83 = load i32, i32* %6, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %6, align 4
  br label %78

85:                                               ; preds = %78
  %86 = load i32, i32* %6, align 4
  %87 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %88 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %87, i32 0, i32 4
  store i32 %86, i32* %88, align 4
  %89 = load i32, i32* %6, align 4
  %90 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %91 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %90, i32 0, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = sub i32 %89, %92
  %94 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %95 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %94, i32 0, i32 5
  store i32 %93, i32* %95, align 8
  %96 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %97 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %96, i32 0, i32 1
  %98 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %97, align 8
  %99 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %98, i32 0, i32 4
  %100 = load %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)** %99, align 8
  %101 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %102 = bitcast %struct.jpeg_decompress_struct* %101 to %struct.jpeg_common_struct*
  %103 = load i32, i32* %6, align 4
  %104 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %105 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %104, i32 0, i32 27
  %106 = load i32, i32* %105, align 4
  %107 = call %struct.jvirt_sarray_control* %100(%struct.jpeg_common_struct* %102, i32 1, i32 0, i32 %103, i32 %106, i32 1)
  %108 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %109 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %108, i32 0, i32 2
  store %struct.jvirt_sarray_control* %107, %struct.jvirt_sarray_control** %109, align 8
  %110 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %111 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %110, i32 0, i32 6
  store i32 0, i32* %111, align 4
  %112 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %113 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %112, i32 0, i32 2
  %114 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %113, align 8
  %115 = icmp ne %struct.jpeg_progress_mgr* %114, null
  br i1 %115, label %116, label %125

116:                                              ; preds = %85
  %117 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %118 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %117, i32 0, i32 2
  %119 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %118, align 8
  %120 = bitcast %struct.jpeg_progress_mgr* %119 to %struct.cdjpeg_progress_mgr*
  store %struct.cdjpeg_progress_mgr* %120, %struct.cdjpeg_progress_mgr** %7, align 8
  %121 = load %struct.cdjpeg_progress_mgr*, %struct.cdjpeg_progress_mgr** %7, align 8
  %122 = getelementptr inbounds %struct.cdjpeg_progress_mgr, %struct.cdjpeg_progress_mgr* %121, i32 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %122, align 4
  br label %125

125:                                              ; preds = %116, %85
  %126 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %127 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %126, i32 0, i32 1
  %128 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %127, align 8
  %129 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %128, i32 0, i32 2
  %130 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %129, align 8
  %131 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %132 = bitcast %struct.jpeg_decompress_struct* %131 to %struct.jpeg_common_struct*
  %133 = load i32, i32* %6, align 4
  %134 = call i8** %130(%struct.jpeg_common_struct* %132, i32 1, i32 %133, i32 1)
  %135 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %136 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %135, i32 0, i32 0
  %137 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %136, i32 0, i32 4
  store i8** %134, i8*** %137, align 8
  %138 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %139 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %138, i32 0, i32 0
  %140 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %139, i32 0, i32 5
  store i32 1, i32* %140, align 8
  %141 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %142 = bitcast %struct.bmp_dest_struct* %141 to %struct.djpeg_dest_struct*
  ret %struct.djpeg_dest_struct* %142
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_output_bmp(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct.djpeg_dest_struct*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_output_bmp(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct.djpeg_dest_struct*, align 8
  %5 = alloca %struct.bmp_dest_struct*, align 8
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.cdjpeg_progress_mgr*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %4, align 8
  %12 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %4, align 8
  %13 = bitcast %struct.djpeg_dest_struct* %12 to %struct.bmp_dest_struct*
  store %struct.bmp_dest_struct* %13, %struct.bmp_dest_struct** %5, align 8
  %14 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %15 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %14, i32 0, i32 0
  %16 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %15, i32 0, i32 3
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %16, align 8
  store %struct._IO_FILE* %17, %struct._IO_FILE** %6, align 8
  %18 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %18, i32 0, i32 2
  %20 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %19, align 8
  %21 = bitcast %struct.jpeg_progress_mgr* %20 to %struct.cdjpeg_progress_mgr*
  store %struct.cdjpeg_progress_mgr* %21, %struct.cdjpeg_progress_mgr** %11, align 8
  %22 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %23 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %2
  %27 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %28 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  call void @write_os2_header(%struct.jpeg_decompress_struct* %27, %struct.bmp_dest_struct* %28)
  br label %32

29:                                               ; preds = %2
  %30 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %31 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  call void @write_bmp_header(%struct.jpeg_decompress_struct* %30, %struct.bmp_dest_struct* %31)
  br label %32

32:                                               ; preds = %29, %26
  %33 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %33, i32 0, i32 27
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %9, align 4
  br label %36

36:                                               ; preds = %101, %32
  %37 = load i32, i32* %9, align 4
  %38 = icmp ugt i32 %37, 0
  br i1 %38, label %39, label %104

39:                                               ; preds = %36
  %40 = load %struct.cdjpeg_progress_mgr*, %struct.cdjpeg_progress_mgr** %11, align 8
  %41 = icmp ne %struct.cdjpeg_progress_mgr* %40, null
  br i1 %41, label %42, label %66

42:                                               ; preds = %39
  %43 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %43, i32 0, i32 27
  %45 = load i32, i32* %44, align 4
  %46 = load i32, i32* %9, align 4
  %47 = sub i32 %45, %46
  %48 = zext i32 %47 to i64
  %49 = load %struct.cdjpeg_progress_mgr*, %struct.cdjpeg_progress_mgr** %11, align 8
  %50 = getelementptr inbounds %struct.cdjpeg_progress_mgr, %struct.cdjpeg_progress_mgr* %49, i32 0, i32 0
  %51 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %50, i32 0, i32 1
  store i64 %48, i64* %51, align 8
  %52 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %52, i32 0, i32 27
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = load %struct.cdjpeg_progress_mgr*, %struct.cdjpeg_progress_mgr** %11, align 8
  %57 = getelementptr inbounds %struct.cdjpeg_progress_mgr, %struct.cdjpeg_progress_mgr* %56, i32 0, i32 0
  %58 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %57, i32 0, i32 2
  store i64 %55, i64* %58, align 8
  %59 = load %struct.cdjpeg_progress_mgr*, %struct.cdjpeg_progress_mgr** %11, align 8
  %60 = getelementptr inbounds %struct.cdjpeg_progress_mgr, %struct.cdjpeg_progress_mgr* %59, i32 0, i32 0
  %61 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %60, i32 0, i32 0
  %62 = bitcast {}** %61 to void (%struct.jpeg_common_struct*)**
  %63 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %62, align 8
  %64 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %65 = bitcast %struct.jpeg_decompress_struct* %64 to %struct.jpeg_common_struct*
  call void %63(%struct.jpeg_common_struct* %65)
  br label %66

66:                                               ; preds = %42, %39
  %67 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %68 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %67, i32 0, i32 1
  %69 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %68, align 8
  %70 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %69, i32 0, i32 7
  %71 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)** %70, align 8
  %72 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %73 = bitcast %struct.jpeg_decompress_struct* %72 to %struct.jpeg_common_struct*
  %74 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %75 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %74, i32 0, i32 2
  %76 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %75, align 8
  %77 = load i32, i32* %9, align 4
  %78 = sub i32 %77, 1
  %79 = call i8** %71(%struct.jpeg_common_struct* %73, %struct.jvirt_sarray_control* %76, i32 %78, i32 1, i32 0)
  store i8** %79, i8*** %7, align 8
  %80 = load i8**, i8*** %7, align 8
  %81 = getelementptr inbounds i8*, i8** %80, i64 0
  %82 = load i8*, i8** %81, align 8
  store i8* %82, i8** %8, align 8
  %83 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %5, align 8
  %84 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %83, i32 0, i32 4
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %10, align 4
  br label %86

86:                                               ; preds = %97, %66
  %87 = load i32, i32* %10, align 4
  %88 = icmp ugt i32 %87, 0
  br i1 %88, label %89, label %100

89:                                               ; preds = %86
  %90 = load i8*, i8** %8, align 8
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %94 = call i32 @putc(i32 %92, %struct._IO_FILE* %93)
  %95 = load i8*, i8** %8, align 8
  %96 = getelementptr inbounds i8, i8* %95, i32 1
  store i8* %96, i8** %8, align 8
  br label %97

97:                                               ; preds = %89
  %98 = load i32, i32* %10, align 4
  %99 = add i32 %98, -1
  store i32 %99, i32* %10, align 4
  br label %86

100:                                              ; preds = %86
  br label %101

101:                                              ; preds = %100
  %102 = load i32, i32* %9, align 4
  %103 = add i32 %102, -1
  store i32 %103, i32* %9, align 4
  br label %36

104:                                              ; preds = %36
  %105 = load %struct.cdjpeg_progress_mgr*, %struct.cdjpeg_progress_mgr** %11, align 8
  %106 = icmp ne %struct.cdjpeg_progress_mgr* %105, null
  br i1 %106, label %107, label %112

107:                                              ; preds = %104
  %108 = load %struct.cdjpeg_progress_mgr*, %struct.cdjpeg_progress_mgr** %11, align 8
  %109 = getelementptr inbounds %struct.cdjpeg_progress_mgr, %struct.cdjpeg_progress_mgr* %108, i32 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %109, align 8
  br label %112

112:                                              ; preds = %107, %104
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %114 = call i32 @fflush(%struct._IO_FILE* %113)
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %116 = call i32 @ferror(%struct._IO_FILE* %115) #10
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %130

118:                                              ; preds = %112
  %119 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %120 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %119, i32 0, i32 0
  %121 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %120, align 8
  %122 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %121, i32 0, i32 5
  store i32 36, i32* %122, align 8
  %123 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %124 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %123, i32 0, i32 0
  %125 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %124, align 8
  %126 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %125, i32 0, i32 0
  %127 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %126, align 8
  %128 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %129 = bitcast %struct.jpeg_decompress_struct* %128 to %struct.jpeg_common_struct*
  call void %127(%struct.jpeg_common_struct* %129)
  br label %130

130:                                              ; preds = %118, %112
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @put_gray_rows(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_decompress_struct*, align 8
  %5 = alloca %struct.djpeg_dest_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.bmp_dest_struct*, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %4, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %5, align 8
  store i32 %2, i32* %6, align 4
  %13 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %5, align 8
  %14 = bitcast %struct.djpeg_dest_struct* %13 to %struct.bmp_dest_struct*
  store %struct.bmp_dest_struct* %14, %struct.bmp_dest_struct** %7, align 8
  %15 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %15, i32 0, i32 1
  %17 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %17, i32 0, i32 7
  %19 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)** %18, align 8
  %20 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %21 = bitcast %struct.jpeg_decompress_struct* %20 to %struct.jpeg_common_struct*
  %22 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %7, align 8
  %23 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %22, i32 0, i32 2
  %24 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %23, align 8
  %25 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %7, align 8
  %26 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %25, i32 0, i32 6
  %27 = load i32, i32* %26, align 4
  %28 = call i8** %19(%struct.jpeg_common_struct* %21, %struct.jvirt_sarray_control* %24, i32 %27, i32 1, i32 1)
  store i8** %28, i8*** %8, align 8
  %29 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %7, align 8
  %30 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %29, i32 0, i32 6
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %30, align 4
  %33 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %7, align 8
  %34 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %33, i32 0, i32 0
  %35 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %34, i32 0, i32 4
  %36 = load i8**, i8*** %35, align 8
  %37 = getelementptr inbounds i8*, i8** %36, i64 0
  %38 = load i8*, i8** %37, align 8
  store i8* %38, i8** %9, align 8
  %39 = load i8**, i8*** %8, align 8
  %40 = getelementptr inbounds i8*, i8** %39, i64 0
  %41 = load i8*, i8** %40, align 8
  store i8* %41, i8** %10, align 8
  %42 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %43 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %42, i32 0, i32 26
  %44 = load i32, i32* %43, align 8
  store i32 %44, i32* %11, align 4
  br label %45

45:                                               ; preds = %54, %3
  %46 = load i32, i32* %11, align 4
  %47 = icmp ugt i32 %46, 0
  br i1 %47, label %48, label %57

48:                                               ; preds = %45
  %49 = load i8*, i8** %9, align 8
  %50 = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %50, i8** %9, align 8
  %51 = load i8, i8* %49, align 1
  %52 = load i8*, i8** %10, align 8
  %53 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %53, i8** %10, align 8
  store i8 %51, i8* %52, align 1
  br label %54

54:                                               ; preds = %48
  %55 = load i32, i32* %11, align 4
  %56 = add i32 %55, -1
  store i32 %56, i32* %11, align 4
  br label %45

57:                                               ; preds = %45
  %58 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %7, align 8
  %59 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %58, i32 0, i32 5
  %60 = load i32, i32* %59, align 8
  store i32 %60, i32* %12, align 4
  br label %61

61:                                               ; preds = %65, %57
  %62 = load i32, i32* %12, align 4
  %63 = add nsw i32 %62, -1
  store i32 %63, i32* %12, align 4
  %64 = icmp sge i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %61
  %66 = load i8*, i8** %10, align 8
  %67 = getelementptr inbounds i8, i8* %66, i32 1
  store i8* %67, i8** %10, align 8
  store i8 0, i8* %66, align 1
  br label %61

68:                                               ; preds = %61
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @put_pixel_rows(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_decompress_struct*, align 8
  %5 = alloca %struct.djpeg_dest_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.bmp_dest_struct*, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %4, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %5, align 8
  store i32 %2, i32* %6, align 4
  %13 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %5, align 8
  %14 = bitcast %struct.djpeg_dest_struct* %13 to %struct.bmp_dest_struct*
  store %struct.bmp_dest_struct* %14, %struct.bmp_dest_struct** %7, align 8
  %15 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %15, i32 0, i32 1
  %17 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %17, i32 0, i32 7
  %19 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)** %18, align 8
  %20 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %21 = bitcast %struct.jpeg_decompress_struct* %20 to %struct.jpeg_common_struct*
  %22 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %7, align 8
  %23 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %22, i32 0, i32 2
  %24 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %23, align 8
  %25 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %7, align 8
  %26 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %25, i32 0, i32 6
  %27 = load i32, i32* %26, align 4
  %28 = call i8** %19(%struct.jpeg_common_struct* %21, %struct.jvirt_sarray_control* %24, i32 %27, i32 1, i32 1)
  store i8** %28, i8*** %8, align 8
  %29 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %7, align 8
  %30 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %29, i32 0, i32 6
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %30, align 4
  %33 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %7, align 8
  %34 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %33, i32 0, i32 0
  %35 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %34, i32 0, i32 4
  %36 = load i8**, i8*** %35, align 8
  %37 = getelementptr inbounds i8*, i8** %36, i64 0
  %38 = load i8*, i8** %37, align 8
  store i8* %38, i8** %9, align 8
  %39 = load i8**, i8*** %8, align 8
  %40 = getelementptr inbounds i8*, i8** %39, i64 0
  %41 = load i8*, i8** %40, align 8
  store i8* %41, i8** %10, align 8
  %42 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %43 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %42, i32 0, i32 26
  %44 = load i32, i32* %43, align 8
  store i32 %44, i32* %11, align 4
  br label %45

45:                                               ; preds = %66, %3
  %46 = load i32, i32* %11, align 4
  %47 = icmp ugt i32 %46, 0
  br i1 %47, label %48, label %69

48:                                               ; preds = %45
  %49 = load i8*, i8** %9, align 8
  %50 = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %50, i8** %9, align 8
  %51 = load i8, i8* %49, align 1
  %52 = load i8*, i8** %10, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 2
  store i8 %51, i8* %53, align 1
  %54 = load i8*, i8** %9, align 8
  %55 = getelementptr inbounds i8, i8* %54, i32 1
  store i8* %55, i8** %9, align 8
  %56 = load i8, i8* %54, align 1
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  store i8 %56, i8* %58, align 1
  %59 = load i8*, i8** %9, align 8
  %60 = getelementptr inbounds i8, i8* %59, i32 1
  store i8* %60, i8** %9, align 8
  %61 = load i8, i8* %59, align 1
  %62 = load i8*, i8** %10, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 0
  store i8 %61, i8* %63, align 1
  %64 = load i8*, i8** %10, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 3
  store i8* %65, i8** %10, align 8
  br label %66

66:                                               ; preds = %48
  %67 = load i32, i32* %11, align 4
  %68 = add i32 %67, -1
  store i32 %68, i32* %11, align 4
  br label %45

69:                                               ; preds = %45
  %70 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %7, align 8
  %71 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %70, i32 0, i32 5
  %72 = load i32, i32* %71, align 8
  store i32 %72, i32* %12, align 4
  br label %73

73:                                               ; preds = %77, %69
  %74 = load i32, i32* %12, align 4
  %75 = add nsw i32 %74, -1
  store i32 %75, i32* %12, align 4
  %76 = icmp sge i32 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %73
  %78 = load i8*, i8** %10, align 8
  %79 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %79, i8** %10, align 8
  store i8 0, i8* %78, align 1
  br label %73

80:                                               ; preds = %73
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_os2_header(%struct.jpeg_decompress_struct* %0, %struct.bmp_dest_struct* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct.bmp_dest_struct*, align 8
  %5 = alloca [14 x i8], align 1
  %6 = alloca [12 x i8], align 1
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store %struct.bmp_dest_struct* %1, %struct.bmp_dest_struct** %4, align 8
  %11 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %11, i32 0, i32 10
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %23

15:                                               ; preds = %2
  %16 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %16, i32 0, i32 19
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  store i32 8, i32* %9, align 4
  store i32 256, i32* %10, align 4
  br label %22

21:                                               ; preds = %15
  store i32 24, i32* %9, align 4
  store i32 0, i32* %10, align 4
  br label %22

22:                                               ; preds = %21, %20
  br label %24

23:                                               ; preds = %2
  store i32 8, i32* %9, align 4
  store i32 256, i32* %10, align 4
  br label %24

24:                                               ; preds = %23, %22
  %25 = load i32, i32* %10, align 4
  %26 = mul nsw i32 %25, 3
  %27 = add nsw i32 26, %26
  %28 = sext i32 %27 to i64
  store i64 %28, i64* %7, align 8
  %29 = load i64, i64* %7, align 8
  %30 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %4, align 8
  %31 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %30, i32 0, i32 4
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %34, i32 0, i32 27
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = mul nsw i64 %33, %37
  %39 = add nsw i64 %29, %38
  store i64 %39, i64* %8, align 8
  %40 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %40, i8 0, i64 14, i1 false)
  %41 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %41, i8 0, i64 12, i1 false)
  %42 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 0
  store i8 66, i8* %42, align 1
  %43 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 1
  store i8 77, i8* %43, align 1
  %44 = load i64, i64* %8, align 8
  %45 = and i64 %44, 255
  %46 = trunc i64 %45 to i8
  %47 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 2
  store i8 %46, i8* %47, align 1
  %48 = load i64, i64* %8, align 8
  %49 = ashr i64 %48, 8
  %50 = and i64 %49, 255
  %51 = trunc i64 %50 to i8
  %52 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 3
  store i8 %51, i8* %52, align 1
  %53 = load i64, i64* %8, align 8
  %54 = ashr i64 %53, 16
  %55 = and i64 %54, 255
  %56 = trunc i64 %55 to i8
  %57 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 4
  store i8 %56, i8* %57, align 1
  %58 = load i64, i64* %8, align 8
  %59 = ashr i64 %58, 24
  %60 = and i64 %59, 255
  %61 = trunc i64 %60 to i8
  %62 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 5
  store i8 %61, i8* %62, align 1
  %63 = load i64, i64* %7, align 8
  %64 = and i64 %63, 255
  %65 = trunc i64 %64 to i8
  %66 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 10
  store i8 %65, i8* %66, align 1
  %67 = load i64, i64* %7, align 8
  %68 = ashr i64 %67, 8
  %69 = and i64 %68, 255
  %70 = trunc i64 %69 to i8
  %71 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 11
  store i8 %70, i8* %71, align 1
  %72 = load i64, i64* %7, align 8
  %73 = ashr i64 %72, 16
  %74 = and i64 %73, 255
  %75 = trunc i64 %74 to i8
  %76 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 12
  store i8 %75, i8* %76, align 1
  %77 = load i64, i64* %7, align 8
  %78 = ashr i64 %77, 24
  %79 = and i64 %78, 255
  %80 = trunc i64 %79 to i8
  %81 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 13
  store i8 %80, i8* %81, align 1
  %82 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 0
  store i8 12, i8* %82, align 1
  %83 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 1
  store i8 0, i8* %83, align 1
  %84 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %85 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %84, i32 0, i32 26
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, 255
  %88 = trunc i32 %87 to i8
  %89 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 4
  store i8 %88, i8* %89, align 1
  %90 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %91 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %90, i32 0, i32 26
  %92 = load i32, i32* %91, align 8
  %93 = lshr i32 %92, 8
  %94 = and i32 %93, 255
  %95 = trunc i32 %94 to i8
  %96 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 5
  store i8 %95, i8* %96, align 1
  %97 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %98 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %97, i32 0, i32 27
  %99 = load i32, i32* %98, align 4
  %100 = and i32 %99, 255
  %101 = trunc i32 %100 to i8
  %102 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 6
  store i8 %101, i8* %102, align 1
  %103 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %104 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %103, i32 0, i32 27
  %105 = load i32, i32* %104, align 4
  %106 = lshr i32 %105, 8
  %107 = and i32 %106, 255
  %108 = trunc i32 %107 to i8
  %109 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 7
  store i8 %108, i8* %109, align 1
  %110 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 8
  store i8 1, i8* %110, align 1
  %111 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 9
  store i8 0, i8* %111, align 1
  %112 = load i32, i32* %9, align 4
  %113 = and i32 %112, 255
  %114 = trunc i32 %113 to i8
  %115 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 10
  store i8 %114, i8* %115, align 1
  %116 = load i32, i32* %9, align 4
  %117 = ashr i32 %116, 8
  %118 = and i32 %117, 255
  %119 = trunc i32 %118 to i8
  %120 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 11
  store i8 %119, i8* %120, align 1
  %121 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 0
  %122 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %4, align 8
  %123 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %122, i32 0, i32 0
  %124 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %123, i32 0, i32 3
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** %124, align 8
  %126 = call i64 @fwrite(i8* %121, i64 1, i64 14, %struct._IO_FILE* %125)
  %127 = icmp ne i64 %126, 14
  br i1 %127, label %128, label %140

128:                                              ; preds = %24
  %129 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %130 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %129, i32 0, i32 0
  %131 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %130, align 8
  %132 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %131, i32 0, i32 5
  store i32 36, i32* %132, align 8
  %133 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %134 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %133, i32 0, i32 0
  %135 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %134, align 8
  %136 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %135, i32 0, i32 0
  %137 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %136, align 8
  %138 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %139 = bitcast %struct.jpeg_decompress_struct* %138 to %struct.jpeg_common_struct*
  call void %137(%struct.jpeg_common_struct* %139)
  br label %140

140:                                              ; preds = %128, %24
  %141 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 0
  %142 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %4, align 8
  %143 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %142, i32 0, i32 0
  %144 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %143, i32 0, i32 3
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** %144, align 8
  %146 = call i64 @fwrite(i8* %141, i64 1, i64 12, %struct._IO_FILE* %145)
  %147 = icmp ne i64 %146, 12
  br i1 %147, label %148, label %160

148:                                              ; preds = %140
  %149 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %150 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %149, i32 0, i32 0
  %151 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %150, align 8
  %152 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %151, i32 0, i32 5
  store i32 36, i32* %152, align 8
  %153 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %154 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %153, i32 0, i32 0
  %155 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %154, align 8
  %156 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %155, i32 0, i32 0
  %157 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %156, align 8
  %158 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %159 = bitcast %struct.jpeg_decompress_struct* %158 to %struct.jpeg_common_struct*
  call void %157(%struct.jpeg_common_struct* %159)
  br label %160

160:                                              ; preds = %148, %140
  %161 = load i32, i32* %10, align 4
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %163, label %167

163:                                              ; preds = %160
  %164 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %165 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %4, align 8
  %166 = load i32, i32* %10, align 4
  call void @write_colormap(%struct.jpeg_decompress_struct* %164, %struct.bmp_dest_struct* %165, i32 %166, i32 3)
  br label %167

167:                                              ; preds = %163, %160
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_bmp_header(%struct.jpeg_decompress_struct* %0, %struct.bmp_dest_struct* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct.bmp_dest_struct*, align 8
  %5 = alloca [14 x i8], align 1
  %6 = alloca [40 x i8], align 16
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store %struct.bmp_dest_struct* %1, %struct.bmp_dest_struct** %4, align 8
  %11 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %11, i32 0, i32 10
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %23

15:                                               ; preds = %2
  %16 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %16, i32 0, i32 19
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  store i32 8, i32* %9, align 4
  store i32 256, i32* %10, align 4
  br label %22

21:                                               ; preds = %15
  store i32 24, i32* %9, align 4
  store i32 0, i32* %10, align 4
  br label %22

22:                                               ; preds = %21, %20
  br label %24

23:                                               ; preds = %2
  store i32 8, i32* %9, align 4
  store i32 256, i32* %10, align 4
  br label %24

24:                                               ; preds = %23, %22
  %25 = load i32, i32* %10, align 4
  %26 = mul nsw i32 %25, 4
  %27 = add nsw i32 54, %26
  %28 = sext i32 %27 to i64
  store i64 %28, i64* %7, align 8
  %29 = load i64, i64* %7, align 8
  %30 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %4, align 8
  %31 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %30, i32 0, i32 4
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %34, i32 0, i32 27
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = mul nsw i64 %33, %37
  %39 = add nsw i64 %29, %38
  store i64 %39, i64* %8, align 8
  %40 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %40, i8 0, i64 14, i1 false)
  %41 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %41, i8 0, i64 40, i1 false)
  %42 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 0
  store i8 66, i8* %42, align 1
  %43 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 1
  store i8 77, i8* %43, align 1
  %44 = load i64, i64* %8, align 8
  %45 = and i64 %44, 255
  %46 = trunc i64 %45 to i8
  %47 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 2
  store i8 %46, i8* %47, align 1
  %48 = load i64, i64* %8, align 8
  %49 = ashr i64 %48, 8
  %50 = and i64 %49, 255
  %51 = trunc i64 %50 to i8
  %52 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 3
  store i8 %51, i8* %52, align 1
  %53 = load i64, i64* %8, align 8
  %54 = ashr i64 %53, 16
  %55 = and i64 %54, 255
  %56 = trunc i64 %55 to i8
  %57 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 4
  store i8 %56, i8* %57, align 1
  %58 = load i64, i64* %8, align 8
  %59 = ashr i64 %58, 24
  %60 = and i64 %59, 255
  %61 = trunc i64 %60 to i8
  %62 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 5
  store i8 %61, i8* %62, align 1
  %63 = load i64, i64* %7, align 8
  %64 = and i64 %63, 255
  %65 = trunc i64 %64 to i8
  %66 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 10
  store i8 %65, i8* %66, align 1
  %67 = load i64, i64* %7, align 8
  %68 = ashr i64 %67, 8
  %69 = and i64 %68, 255
  %70 = trunc i64 %69 to i8
  %71 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 11
  store i8 %70, i8* %71, align 1
  %72 = load i64, i64* %7, align 8
  %73 = ashr i64 %72, 16
  %74 = and i64 %73, 255
  %75 = trunc i64 %74 to i8
  %76 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 12
  store i8 %75, i8* %76, align 1
  %77 = load i64, i64* %7, align 8
  %78 = ashr i64 %77, 24
  %79 = and i64 %78, 255
  %80 = trunc i64 %79 to i8
  %81 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 13
  store i8 %80, i8* %81, align 1
  %82 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 0
  store i8 40, i8* %82, align 16
  %83 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 1
  store i8 0, i8* %83, align 1
  %84 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %85 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %84, i32 0, i32 26
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, 255
  %88 = trunc i32 %87 to i8
  %89 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 4
  store i8 %88, i8* %89, align 4
  %90 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %91 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %90, i32 0, i32 26
  %92 = load i32, i32* %91, align 8
  %93 = lshr i32 %92, 8
  %94 = and i32 %93, 255
  %95 = trunc i32 %94 to i8
  %96 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 5
  store i8 %95, i8* %96, align 1
  %97 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %98 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %97, i32 0, i32 26
  %99 = load i32, i32* %98, align 8
  %100 = lshr i32 %99, 16
  %101 = and i32 %100, 255
  %102 = trunc i32 %101 to i8
  %103 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 6
  store i8 %102, i8* %103, align 2
  %104 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %105 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %104, i32 0, i32 26
  %106 = load i32, i32* %105, align 8
  %107 = lshr i32 %106, 24
  %108 = and i32 %107, 255
  %109 = trunc i32 %108 to i8
  %110 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 7
  store i8 %109, i8* %110, align 1
  %111 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %112 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %111, i32 0, i32 27
  %113 = load i32, i32* %112, align 4
  %114 = and i32 %113, 255
  %115 = trunc i32 %114 to i8
  %116 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 8
  store i8 %115, i8* %116, align 8
  %117 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %118 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %117, i32 0, i32 27
  %119 = load i32, i32* %118, align 4
  %120 = lshr i32 %119, 8
  %121 = and i32 %120, 255
  %122 = trunc i32 %121 to i8
  %123 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 9
  store i8 %122, i8* %123, align 1
  %124 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %125 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %124, i32 0, i32 27
  %126 = load i32, i32* %125, align 4
  %127 = lshr i32 %126, 16
  %128 = and i32 %127, 255
  %129 = trunc i32 %128 to i8
  %130 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 10
  store i8 %129, i8* %130, align 2
  %131 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %132 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %131, i32 0, i32 27
  %133 = load i32, i32* %132, align 4
  %134 = lshr i32 %133, 24
  %135 = and i32 %134, 255
  %136 = trunc i32 %135 to i8
  %137 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 11
  store i8 %136, i8* %137, align 1
  %138 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 12
  store i8 1, i8* %138, align 4
  %139 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 13
  store i8 0, i8* %139, align 1
  %140 = load i32, i32* %9, align 4
  %141 = and i32 %140, 255
  %142 = trunc i32 %141 to i8
  %143 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 14
  store i8 %142, i8* %143, align 2
  %144 = load i32, i32* %9, align 4
  %145 = ashr i32 %144, 8
  %146 = and i32 %145, 255
  %147 = trunc i32 %146 to i8
  %148 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 15
  store i8 %147, i8* %148, align 1
  %149 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %150 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %149, i32 0, i32 51
  %151 = load i8, i8* %150, align 8
  %152 = zext i8 %151 to i32
  %153 = icmp eq i32 %152, 2
  br i1 %153, label %154, label %233

154:                                              ; preds = %24
  %155 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %156 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %155, i32 0, i32 52
  %157 = load i16, i16* %156, align 2
  %158 = zext i16 %157 to i32
  %159 = mul nsw i32 %158, 100
  %160 = sext i32 %159 to i64
  %161 = and i64 %160, 255
  %162 = trunc i64 %161 to i8
  %163 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 24
  store i8 %162, i8* %163, align 8
  %164 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %165 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %164, i32 0, i32 52
  %166 = load i16, i16* %165, align 2
  %167 = zext i16 %166 to i32
  %168 = mul nsw i32 %167, 100
  %169 = sext i32 %168 to i64
  %170 = ashr i64 %169, 8
  %171 = and i64 %170, 255
  %172 = trunc i64 %171 to i8
  %173 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 25
  store i8 %172, i8* %173, align 1
  %174 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %175 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %174, i32 0, i32 52
  %176 = load i16, i16* %175, align 2
  %177 = zext i16 %176 to i32
  %178 = mul nsw i32 %177, 100
  %179 = sext i32 %178 to i64
  %180 = ashr i64 %179, 16
  %181 = and i64 %180, 255
  %182 = trunc i64 %181 to i8
  %183 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 26
  store i8 %182, i8* %183, align 2
  %184 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %185 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %184, i32 0, i32 52
  %186 = load i16, i16* %185, align 2
  %187 = zext i16 %186 to i32
  %188 = mul nsw i32 %187, 100
  %189 = sext i32 %188 to i64
  %190 = ashr i64 %189, 24
  %191 = and i64 %190, 255
  %192 = trunc i64 %191 to i8
  %193 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 27
  store i8 %192, i8* %193, align 1
  %194 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %195 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %194, i32 0, i32 53
  %196 = load i16, i16* %195, align 4
  %197 = zext i16 %196 to i32
  %198 = mul nsw i32 %197, 100
  %199 = sext i32 %198 to i64
  %200 = and i64 %199, 255
  %201 = trunc i64 %200 to i8
  %202 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 28
  store i8 %201, i8* %202, align 4
  %203 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %204 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %203, i32 0, i32 53
  %205 = load i16, i16* %204, align 4
  %206 = zext i16 %205 to i32
  %207 = mul nsw i32 %206, 100
  %208 = sext i32 %207 to i64
  %209 = ashr i64 %208, 8
  %210 = and i64 %209, 255
  %211 = trunc i64 %210 to i8
  %212 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 29
  store i8 %211, i8* %212, align 1
  %213 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %214 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %213, i32 0, i32 53
  %215 = load i16, i16* %214, align 4
  %216 = zext i16 %215 to i32
  %217 = mul nsw i32 %216, 100
  %218 = sext i32 %217 to i64
  %219 = ashr i64 %218, 16
  %220 = and i64 %219, 255
  %221 = trunc i64 %220 to i8
  %222 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 30
  store i8 %221, i8* %222, align 2
  %223 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %224 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %223, i32 0, i32 53
  %225 = load i16, i16* %224, align 4
  %226 = zext i16 %225 to i32
  %227 = mul nsw i32 %226, 100
  %228 = sext i32 %227 to i64
  %229 = ashr i64 %228, 24
  %230 = and i64 %229, 255
  %231 = trunc i64 %230 to i8
  %232 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 31
  store i8 %231, i8* %232, align 1
  br label %233

233:                                              ; preds = %154, %24
  %234 = load i32, i32* %10, align 4
  %235 = and i32 %234, 255
  %236 = trunc i32 %235 to i8
  %237 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 32
  store i8 %236, i8* %237, align 16
  %238 = load i32, i32* %10, align 4
  %239 = ashr i32 %238, 8
  %240 = and i32 %239, 255
  %241 = trunc i32 %240 to i8
  %242 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 33
  store i8 %241, i8* %242, align 1
  %243 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 0
  %244 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %4, align 8
  %245 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %244, i32 0, i32 0
  %246 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %245, i32 0, i32 3
  %247 = load %struct._IO_FILE*, %struct._IO_FILE** %246, align 8
  %248 = call i64 @fwrite(i8* %243, i64 1, i64 14, %struct._IO_FILE* %247)
  %249 = icmp ne i64 %248, 14
  br i1 %249, label %250, label %262

250:                                              ; preds = %233
  %251 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %252 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %251, i32 0, i32 0
  %253 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %252, align 8
  %254 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %253, i32 0, i32 5
  store i32 36, i32* %254, align 8
  %255 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %256 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %255, i32 0, i32 0
  %257 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %256, align 8
  %258 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %257, i32 0, i32 0
  %259 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %258, align 8
  %260 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %261 = bitcast %struct.jpeg_decompress_struct* %260 to %struct.jpeg_common_struct*
  call void %259(%struct.jpeg_common_struct* %261)
  br label %262

262:                                              ; preds = %250, %233
  %263 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 0
  %264 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %4, align 8
  %265 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %264, i32 0, i32 0
  %266 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %265, i32 0, i32 3
  %267 = load %struct._IO_FILE*, %struct._IO_FILE** %266, align 8
  %268 = call i64 @fwrite(i8* %263, i64 1, i64 40, %struct._IO_FILE* %267)
  %269 = icmp ne i64 %268, 40
  br i1 %269, label %270, label %282

270:                                              ; preds = %262
  %271 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %272 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %271, i32 0, i32 0
  %273 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %272, align 8
  %274 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %273, i32 0, i32 5
  store i32 36, i32* %274, align 8
  %275 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %276 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %275, i32 0, i32 0
  %277 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %276, align 8
  %278 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %277, i32 0, i32 0
  %279 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %278, align 8
  %280 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %281 = bitcast %struct.jpeg_decompress_struct* %280 to %struct.jpeg_common_struct*
  call void %279(%struct.jpeg_common_struct* %281)
  br label %282

282:                                              ; preds = %270, %262
  %283 = load i32, i32* %10, align 4
  %284 = icmp sgt i32 %283, 0
  br i1 %284, label %285, label %289

285:                                              ; preds = %282
  %286 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %287 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %4, align 8
  %288 = load i32, i32* %10, align 4
  call void @write_colormap(%struct.jpeg_decompress_struct* %286, %struct.bmp_dest_struct* %287, i32 %288, i32 4)
  br label %289

289:                                              ; preds = %285, %282
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_colormap(%struct.jpeg_decompress_struct* %0, %struct.bmp_dest_struct* %1, i32 %2, i32 %3) #0 {
  %5 = alloca %struct.jpeg_decompress_struct*, align 8
  %6 = alloca %struct.bmp_dest_struct*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %5, align 8
  store %struct.bmp_dest_struct* %1, %struct.bmp_dest_struct** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %13 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %13, i32 0, i32 32
  %15 = load i8**, i8*** %14, align 8
  store i8** %15, i8*** %9, align 8
  %16 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %16, i32 0, i32 31
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %10, align 4
  %19 = load %struct.bmp_dest_struct*, %struct.bmp_dest_struct** %6, align 8
  %20 = getelementptr inbounds %struct.bmp_dest_struct, %struct.bmp_dest_struct* %19, i32 0, i32 0
  %21 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %20, i32 0, i32 3
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8
  store %struct._IO_FILE* %22, %struct._IO_FILE** %11, align 8
  %23 = load i8**, i8*** %9, align 8
  %24 = icmp ne i8** %23, null
  br i1 %24, label %25, label %123

25:                                               ; preds = %4
  %26 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %26, i32 0, i32 28
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 3
  br i1 %29, label %30, label %76

30:                                               ; preds = %25
  store i32 0, i32* %12, align 4
  br label %31

31:                                               ; preds = %72, %30
  %32 = load i32, i32* %12, align 4
  %33 = load i32, i32* %10, align 4
  %34 = icmp slt i32 %32, %33
  br i1 %34, label %35, label %75

35:                                               ; preds = %31
  %36 = load i8**, i8*** %9, align 8
  %37 = getelementptr inbounds i8*, i8** %36, i64 2
  %38 = load i8*, i8** %37, align 8
  %39 = load i32, i32* %12, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %38, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %45 = call i32 @putc(i32 %43, %struct._IO_FILE* %44)
  %46 = load i8**, i8*** %9, align 8
  %47 = getelementptr inbounds i8*, i8** %46, i64 1
  %48 = load i8*, i8** %47, align 8
  %49 = load i32, i32* %12, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %55 = call i32 @putc(i32 %53, %struct._IO_FILE* %54)
  %56 = load i8**, i8*** %9, align 8
  %57 = getelementptr inbounds i8*, i8** %56, i64 0
  %58 = load i8*, i8** %57, align 8
  %59 = load i32, i32* %12, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %58, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %65 = call i32 @putc(i32 %63, %struct._IO_FILE* %64)
  %66 = load i32, i32* %8, align 4
  %67 = icmp eq i32 %66, 4
  br i1 %67, label %68, label %71

68:                                               ; preds = %35
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %70 = call i32 @putc(i32 0, %struct._IO_FILE* %69)
  br label %71

71:                                               ; preds = %68, %35
  br label %72

72:                                               ; preds = %71
  %73 = load i32, i32* %12, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %12, align 4
  br label %31

75:                                               ; preds = %31
  br label %122

76:                                               ; preds = %25
  store i32 0, i32* %12, align 4
  br label %77

77:                                               ; preds = %118, %76
  %78 = load i32, i32* %12, align 4
  %79 = load i32, i32* %10, align 4
  %80 = icmp slt i32 %78, %79
  br i1 %80, label %81, label %121

81:                                               ; preds = %77
  %82 = load i8**, i8*** %9, align 8
  %83 = getelementptr inbounds i8*, i8** %82, i64 0
  %84 = load i8*, i8** %83, align 8
  %85 = load i32, i32* %12, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %84, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %91 = call i32 @putc(i32 %89, %struct._IO_FILE* %90)
  %92 = load i8**, i8*** %9, align 8
  %93 = getelementptr inbounds i8*, i8** %92, i64 0
  %94 = load i8*, i8** %93, align 8
  %95 = load i32, i32* %12, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %94, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %101 = call i32 @putc(i32 %99, %struct._IO_FILE* %100)
  %102 = load i8**, i8*** %9, align 8
  %103 = getelementptr inbounds i8*, i8** %102, i64 0
  %104 = load i8*, i8** %103, align 8
  %105 = load i32, i32* %12, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i8, i8* %104, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %111 = call i32 @putc(i32 %109, %struct._IO_FILE* %110)
  %112 = load i32, i32* %8, align 4
  %113 = icmp eq i32 %112, 4
  br i1 %113, label %114, label %117

114:                                              ; preds = %81
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %116 = call i32 @putc(i32 0, %struct._IO_FILE* %115)
  br label %117

117:                                              ; preds = %114, %81
  br label %118

118:                                              ; preds = %117
  %119 = load i32, i32* %12, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %12, align 4
  br label %77

121:                                              ; preds = %77
  br label %122

122:                                              ; preds = %121, %75
  br label %147

123:                                              ; preds = %4
  store i32 0, i32* %12, align 4
  br label %124

124:                                              ; preds = %143, %123
  %125 = load i32, i32* %12, align 4
  %126 = icmp slt i32 %125, 256
  br i1 %126, label %127, label %146

127:                                              ; preds = %124
  %128 = load i32, i32* %12, align 4
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %130 = call i32 @putc(i32 %128, %struct._IO_FILE* %129)
  %131 = load i32, i32* %12, align 4
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %133 = call i32 @putc(i32 %131, %struct._IO_FILE* %132)
  %134 = load i32, i32* %12, align 4
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %136 = call i32 @putc(i32 %134, %struct._IO_FILE* %135)
  %137 = load i32, i32* %8, align 4
  %138 = icmp eq i32 %137, 4
  br i1 %138, label %139, label %142

139:                                              ; preds = %127
  %140 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %141 = call i32 @putc(i32 0, %struct._IO_FILE* %140)
  br label %142

142:                                              ; preds = %139, %127
  br label %143

143:                                              ; preds = %142
  %144 = load i32, i32* %12, align 4
  %145 = add nsw i32 %144, 1
  store i32 %145, i32* %12, align 4
  br label %124

146:                                              ; preds = %124
  br label %147

147:                                              ; preds = %146, %122
  %148 = load i32, i32* %12, align 4
  %149 = load i32, i32* %7, align 4
  %150 = icmp sgt i32 %148, %149
  br i1 %150, label %151, label %170

151:                                              ; preds = %147
  %152 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %153 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %152, i32 0, i32 0
  %154 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %155 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i32 0, i32 5
  store i32 1039, i32* %155, align 8
  %156 = load i32, i32* %12, align 4
  %157 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %158 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %157, i32 0, i32 0
  %159 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %158, align 8
  %160 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %159, i32 0, i32 6
  %161 = bitcast %union.anon* %160 to [8 x i32]*
  %162 = getelementptr inbounds [8 x i32], [8 x i32]* %161, i64 0, i64 0
  store i32 %156, i32* %162, align 4
  %163 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %164 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %163, i32 0, i32 0
  %165 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %164, align 8
  %166 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %165, i32 0, i32 0
  %167 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %166, align 8
  %168 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %169 = bitcast %struct.jpeg_decompress_struct* %168 to %struct.jpeg_common_struct*
  call void %167(%struct.jpeg_common_struct* %169)
  br label %170

170:                                              ; preds = %151, %147
  br label %171

171:                                              ; preds = %188, %170
  %172 = load i32, i32* %12, align 4
  %173 = load i32, i32* %7, align 4
  %174 = icmp slt i32 %172, %173
  br i1 %174, label %175, label %191

175:                                              ; preds = %171
  %176 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %177 = call i32 @putc(i32 0, %struct._IO_FILE* %176)
  %178 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %179 = call i32 @putc(i32 0, %struct._IO_FILE* %178)
  %180 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %181 = call i32 @putc(i32 0, %struct._IO_FILE* %180)
  %182 = load i32, i32* %8, align 4
  %183 = icmp eq i32 %182, 4
  br i1 %183, label %184, label %187

184:                                              ; preds = %175
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %186 = call i32 @putc(i32 0, %struct._IO_FILE* %185)
  br label %187

187:                                              ; preds = %184, %175
  br label %188

188:                                              ; preds = %187
  %189 = load i32, i32* %12, align 4
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %12, align 4
  br label %171

191:                                              ; preds = %171
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.djpeg_dest_struct* @jinit_write_gif(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  %3 = alloca %struct.gif_dest_struct*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i32 0, i32 1
  %6 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %6, i32 0, i32 0
  %8 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %7, align 8
  %9 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %10 = bitcast %struct.jpeg_decompress_struct* %9 to %struct.jpeg_common_struct*
  %11 = call i8* %8(%struct.jpeg_common_struct* %10, i32 1, i64 384)
  %12 = bitcast i8* %11 to %struct.gif_dest_struct*
  store %struct.gif_dest_struct* %12, %struct.gif_dest_struct** %3, align 8
  %13 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %14 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %15 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %14, i32 0, i32 1
  store %struct.jpeg_decompress_struct* %13, %struct.jpeg_decompress_struct** %15, align 8
  %16 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %17 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %16, i32 0, i32 0
  %18 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %17, i32 0, i32 0
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)* @start_output_gif, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)** %18, align 8
  %19 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %20 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %19, i32 0, i32 0
  %21 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %20, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)* @put_pixel_rows.289, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %21, align 8
  %22 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %23 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %22, i32 0, i32 0
  %24 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %23, i32 0, i32 2
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)* @finish_output_gif, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)** %24, align 8
  %25 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %25, i32 0, i32 10
  %27 = load i32, i32* %26, align 8
  %28 = icmp ne i32 %27, 1
  br i1 %28, label %29, label %46

29:                                               ; preds = %1
  %30 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %30, i32 0, i32 10
  %32 = load i32, i32* %31, align 8
  %33 = icmp ne i32 %32, 2
  br i1 %33, label %34, label %46

34:                                               ; preds = %29
  %35 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %35, i32 0, i32 0
  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i32 0, i32 5
  store i32 1014, i32* %38, align 8
  %39 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %39, i32 0, i32 0
  %41 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %41, i32 0, i32 0
  %43 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %42, align 8
  %44 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %45 = bitcast %struct.jpeg_decompress_struct* %44 to %struct.jpeg_common_struct*
  call void %43(%struct.jpeg_common_struct* %45)
  br label %46

46:                                               ; preds = %34, %29, %1
  %47 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %47, i32 0, i32 10
  %49 = load i32, i32* %48, align 8
  %50 = icmp ne i32 %49, 1
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %52, i32 0, i32 42
  %54 = load i32, i32* %53, align 8
  %55 = icmp sgt i32 %54, 8
  br i1 %55, label %56, label %67

56:                                               ; preds = %51, %46
  %57 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %58 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %57, i32 0, i32 19
  store i32 1, i32* %58, align 4
  %59 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %60 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %59, i32 0, i32 22
  %61 = load i32, i32* %60, align 8
  %62 = icmp sgt i32 %61, 256
  br i1 %62, label %63, label %66

63:                                               ; preds = %56
  %64 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %65 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %64, i32 0, i32 22
  store i32 256, i32* %65, align 8
  br label %66

66:                                               ; preds = %63, %56
  br label %67

67:                                               ; preds = %66, %51
  %68 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  call void bitcast (void (%struct.jpeg_decompress_struct.469*)* @jpeg_calc_output_dimensions to void (%struct.jpeg_decompress_struct*)*)(%struct.jpeg_decompress_struct* %68)
  %69 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %70 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %69, i32 0, i32 29
  %71 = load i32, i32* %70, align 4
  %72 = icmp ne i32 %71, 1
  br i1 %72, label %73, label %85

73:                                               ; preds = %67
  %74 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %75 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %74, i32 0, i32 0
  %76 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %75, align 8
  %77 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %76, i32 0, i32 5
  store i32 1012, i32* %77, align 8
  %78 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %79 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %78, i32 0, i32 0
  %80 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %79, align 8
  %81 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %80, i32 0, i32 0
  %82 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %81, align 8
  %83 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %84 = bitcast %struct.jpeg_decompress_struct* %83 to %struct.jpeg_common_struct*
  call void %82(%struct.jpeg_common_struct* %84)
  br label %85

85:                                               ; preds = %73, %67
  %86 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %87 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %86, i32 0, i32 1
  %88 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %87, align 8
  %89 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %88, i32 0, i32 2
  %90 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %89, align 8
  %91 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %92 = bitcast %struct.jpeg_decompress_struct* %91 to %struct.jpeg_common_struct*
  %93 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %94 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %93, i32 0, i32 26
  %95 = load i32, i32* %94, align 8
  %96 = call i8** %90(%struct.jpeg_common_struct* %92, i32 1, i32 %95, i32 1)
  %97 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %98 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %97, i32 0, i32 0
  %99 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %98, i32 0, i32 4
  store i8** %96, i8*** %99, align 8
  %100 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %101 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %100, i32 0, i32 0
  %102 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %101, i32 0, i32 5
  store i32 1, i32* %102, align 8
  %103 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %104 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %103, i32 0, i32 1
  %105 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %104, align 8
  %106 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %105, i32 0, i32 0
  %107 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %106, align 8
  %108 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %109 = bitcast %struct.jpeg_decompress_struct* %108 to %struct.jpeg_common_struct*
  %110 = call i8* %107(%struct.jpeg_common_struct* %109, i32 1, i64 10006)
  %111 = bitcast i8* %110 to i16*
  %112 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %113 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %112, i32 0, i32 12
  store i16* %111, i16** %113, align 8
  %114 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %115 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %114, i32 0, i32 1
  %116 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %115, align 8
  %117 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %116, i32 0, i32 1
  %118 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %117, align 8
  %119 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %120 = bitcast %struct.jpeg_decompress_struct* %119 to %struct.jpeg_common_struct*
  %121 = call i8* %118(%struct.jpeg_common_struct* %120, i32 1, i64 40024)
  %122 = bitcast i8* %121 to i64*
  %123 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %124 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %123, i32 0, i32 13
  store i64* %122, i64** %124, align 8
  %125 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %126 = bitcast %struct.gif_dest_struct* %125 to %struct.djpeg_dest_struct*
  ret %struct.djpeg_dest_struct* %126
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_output_gif(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct.djpeg_dest_struct*, align 8
  %5 = alloca %struct.gif_dest_struct*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %4, align 8
  %6 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %4, align 8
  %7 = bitcast %struct.djpeg_dest_struct* %6 to %struct.gif_dest_struct*
  store %struct.gif_dest_struct* %7, %struct.gif_dest_struct** %5, align 8
  %8 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %8, i32 0, i32 19
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %20

12:                                               ; preds = %2
  %13 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %5, align 8
  %14 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %14, i32 0, i32 31
  %16 = load i32, i32* %15, align 4
  %17 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %17, i32 0, i32 32
  %19 = load i8**, i8*** %18, align 8
  call void @emit_header(%struct.gif_dest_struct* %13, i32 %16, i8** %19)
  br label %22

20:                                               ; preds = %2
  %21 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %5, align 8
  call void @emit_header(%struct.gif_dest_struct* %21, i32 256, i8** null)
  br label %22

22:                                               ; preds = %20, %12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @put_pixel_rows.289(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_decompress_struct*, align 8
  %5 = alloca %struct.djpeg_dest_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.gif_dest_struct*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %4, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %5, align 8
  store i32 %2, i32* %6, align 4
  %10 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %5, align 8
  %11 = bitcast %struct.djpeg_dest_struct* %10 to %struct.gif_dest_struct*
  store %struct.gif_dest_struct* %11, %struct.gif_dest_struct** %7, align 8
  %12 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %7, align 8
  %13 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %12, i32 0, i32 0
  %14 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %13, i32 0, i32 4
  %15 = load i8**, i8*** %14, align 8
  %16 = getelementptr inbounds i8*, i8** %15, i64 0
  %17 = load i8*, i8** %16, align 8
  store i8* %17, i8** %8, align 8
  %18 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %18, i32 0, i32 26
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %9, align 4
  br label %21

21:                                               ; preds = %30, %3
  %22 = load i32, i32* %9, align 4
  %23 = icmp ugt i32 %22, 0
  br i1 %23, label %24, label %33

24:                                               ; preds = %21
  %25 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %7, align 8
  %26 = load i8*, i8** %8, align 8
  %27 = getelementptr inbounds i8, i8* %26, i32 1
  store i8* %27, i8** %8, align 8
  %28 = load i8, i8* %26, align 1
  %29 = zext i8 %28 to i32
  call void @compress_byte(%struct.gif_dest_struct* %25, i32 %29)
  br label %30

30:                                               ; preds = %24
  %31 = load i32, i32* %9, align 4
  %32 = add i32 %31, -1
  store i32 %32, i32* %9, align 4
  br label %21

33:                                               ; preds = %21
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_output_gif(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct.djpeg_dest_struct*, align 8
  %5 = alloca %struct.gif_dest_struct*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %4, align 8
  %6 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %4, align 8
  %7 = bitcast %struct.djpeg_dest_struct* %6 to %struct.gif_dest_struct*
  store %struct.gif_dest_struct* %7, %struct.gif_dest_struct** %5, align 8
  %8 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %5, align 8
  call void @compress_term(%struct.gif_dest_struct* %8)
  %9 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %5, align 8
  %10 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %9, i32 0, i32 0
  %11 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %10, i32 0, i32 3
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %13 = call i32 @putc(i32 0, %struct._IO_FILE* %12)
  %14 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %5, align 8
  %15 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %14, i32 0, i32 0
  %16 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %15, i32 0, i32 3
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %16, align 8
  %18 = call i32 @putc(i32 59, %struct._IO_FILE* %17)
  %19 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %5, align 8
  %20 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %19, i32 0, i32 0
  %21 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %20, i32 0, i32 3
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8
  %23 = call i32 @fflush(%struct._IO_FILE* %22)
  %24 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %5, align 8
  %25 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %24, i32 0, i32 0
  %26 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %25, i32 0, i32 3
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %28 = call i32 @ferror(%struct._IO_FILE* %27) #10
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %2
  %31 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %31, i32 0, i32 0
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i32 0, i32 5
  store i32 36, i32* %34, align 8
  %35 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %35, i32 0, i32 0
  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i32 0, i32 0
  %39 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %38, align 8
  %40 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %41 = bitcast %struct.jpeg_decompress_struct* %40 to %struct.jpeg_common_struct*
  call void %39(%struct.jpeg_common_struct* %41)
  br label %42

42:                                               ; preds = %30, %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @compress_term(%struct.gif_dest_struct* %0) #0 {
  %2 = alloca %struct.gif_dest_struct*, align 8
  store %struct.gif_dest_struct* %0, %struct.gif_dest_struct** %2, align 8
  %3 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %4 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %3, i32 0, i32 8
  %5 = load i32, i32* %4, align 8
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %9 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %10 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %9, i32 0, i32 7
  %11 = load i16, i16* %10, align 4
  call void @output(%struct.gif_dest_struct* %8, i16 signext %11)
  br label %12

12:                                               ; preds = %7, %1
  %13 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %14 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %15 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %14, i32 0, i32 10
  %16 = load i16, i16* %15, align 2
  call void @output(%struct.gif_dest_struct* %13, i16 signext %16)
  %17 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %18 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %17, i32 0, i32 6
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %42

21:                                               ; preds = %12
  %22 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %23 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %22, i32 0, i32 5
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 255
  %26 = trunc i64 %25 to i8
  %27 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %28 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %27, i32 0, i32 15
  %29 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %30 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %29, i32 0, i32 14
  %31 = load i32, i32* %30, align 8
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %30, align 8
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [256 x i8], [256 x i8]* %28, i64 0, i64 %33
  store i8 %26, i8* %34, align 1
  %35 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %36 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %35, i32 0, i32 14
  %37 = load i32, i32* %36, align 8
  %38 = icmp sge i32 %37, 255
  br i1 %38, label %39, label %41

39:                                               ; preds = %21
  %40 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  call void @flush_packet(%struct.gif_dest_struct* %40)
  br label %41

41:                                               ; preds = %39, %21
  br label %42

42:                                               ; preds = %41, %12
  %43 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  call void @flush_packet(%struct.gif_dest_struct* %43)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @output(%struct.gif_dest_struct* %0, i16 signext %1) #0 {
  %3 = alloca %struct.gif_dest_struct*, align 8
  %4 = alloca i16, align 2
  store %struct.gif_dest_struct* %0, %struct.gif_dest_struct** %3, align 8
  store i16 %1, i16* %4, align 2
  %5 = load i16, i16* %4, align 2
  %6 = sext i16 %5 to i64
  %7 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %8 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %7, i32 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = shl i64 %6, %10
  %12 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %13 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %12, i32 0, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = or i64 %14, %11
  store i64 %15, i64* %13, align 8
  %16 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %17 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %16, i32 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %20 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %19, i32 0, i32 6
  %21 = load i32, i32* %20, align 8
  %22 = add nsw i32 %21, %18
  store i32 %22, i32* %20, align 8
  br label %23

23:                                               ; preds = %48, %2
  %24 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %25 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %24, i32 0, i32 6
  %26 = load i32, i32* %25, align 8
  %27 = icmp sge i32 %26, 8
  br i1 %27, label %28, label %57

28:                                               ; preds = %23
  %29 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %30 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %29, i32 0, i32 5
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 255
  %33 = trunc i64 %32 to i8
  %34 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %35 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %34, i32 0, i32 15
  %36 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %37 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %36, i32 0, i32 14
  %38 = load i32, i32* %37, align 8
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %37, align 8
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [256 x i8], [256 x i8]* %35, i64 0, i64 %40
  store i8 %33, i8* %41, align 1
  %42 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %43 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %42, i32 0, i32 14
  %44 = load i32, i32* %43, align 8
  %45 = icmp sge i32 %44, 255
  br i1 %45, label %46, label %48

46:                                               ; preds = %28
  %47 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  call void @flush_packet(%struct.gif_dest_struct* %47)
  br label %48

48:                                               ; preds = %46, %28
  %49 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %50 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %49, i32 0, i32 5
  %51 = load i64, i64* %50, align 8
  %52 = ashr i64 %51, 8
  store i64 %52, i64* %50, align 8
  %53 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %54 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %53, i32 0, i32 6
  %55 = load i32, i32* %54, align 8
  %56 = sub nsw i32 %55, 8
  store i32 %56, i32* %54, align 8
  br label %23

57:                                               ; preds = %23
  %58 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %59 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %58, i32 0, i32 11
  %60 = load i16, i16* %59, align 8
  %61 = sext i16 %60 to i32
  %62 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %63 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %62, i32 0, i32 3
  %64 = load i16, i16* %63, align 4
  %65 = sext i16 %64 to i32
  %66 = icmp sgt i32 %61, %65
  br i1 %66, label %67, label %89

67:                                               ; preds = %57
  %68 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %69 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %68, i32 0, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %69, align 8
  %72 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %73 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %72, i32 0, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 12
  br i1 %75, label %76, label %79

76:                                               ; preds = %67
  %77 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %78 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %77, i32 0, i32 3
  store i16 4096, i16* %78, align 4
  br label %88

79:                                               ; preds = %67
  %80 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %81 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %80, i32 0, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = shl i32 1, %82
  %84 = sub nsw i32 %83, 1
  %85 = trunc i32 %84 to i16
  %86 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %87 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %86, i32 0, i32 3
  store i16 %85, i16* %87, align 4
  br label %88

88:                                               ; preds = %79, %76
  br label %89

89:                                               ; preds = %88, %57
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @flush_packet(%struct.gif_dest_struct* %0) #0 {
  %2 = alloca %struct.gif_dest_struct*, align 8
  store %struct.gif_dest_struct* %0, %struct.gif_dest_struct** %2, align 8
  %3 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %4 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %3, i32 0, i32 14
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %54

7:                                                ; preds = %1
  %8 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %9 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %8, i32 0, i32 14
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = trunc i32 %10 to i8
  %13 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %14 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %13, i32 0, i32 15
  %15 = getelementptr inbounds [256 x i8], [256 x i8]* %14, i64 0, i64 0
  store i8 %12, i8* %15, align 4
  %16 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %17 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %16, i32 0, i32 15
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* %17, i64 0, i64 0
  %19 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %20 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %19, i32 0, i32 14
  %21 = load i32, i32* %20, align 8
  %22 = sext i32 %21 to i64
  %23 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %24 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %23, i32 0, i32 0
  %25 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %24, i32 0, i32 3
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %25, align 8
  %27 = call i64 @fwrite(i8* %18, i64 1, i64 %22, %struct._IO_FILE* %26)
  %28 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %29 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %28, i32 0, i32 14
  %30 = load i32, i32* %29, align 8
  %31 = sext i32 %30 to i64
  %32 = icmp ne i64 %27, %31
  br i1 %32, label %33, label %51

33:                                               ; preds = %7
  %34 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %35 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %34, i32 0, i32 1
  %36 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %36, i32 0, i32 0
  %38 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %37, align 8
  %39 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %38, i32 0, i32 5
  store i32 36, i32* %39, align 8
  %40 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %41 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %40, i32 0, i32 1
  %42 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %41, align 8
  %43 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %42, i32 0, i32 0
  %44 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %43, align 8
  %45 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %44, i32 0, i32 0
  %46 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %45, align 8
  %47 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %48 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %47, i32 0, i32 1
  %49 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %48, align 8
  %50 = bitcast %struct.jpeg_decompress_struct* %49 to %struct.jpeg_common_struct*
  call void %46(%struct.jpeg_common_struct* %50)
  br label %51

51:                                               ; preds = %33, %7
  %52 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %53 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %52, i32 0, i32 14
  store i32 0, i32* %53, align 8
  br label %54

54:                                               ; preds = %51, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @compress_byte(%struct.gif_dest_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.gif_dest_struct*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  store %struct.gif_dest_struct* %0, %struct.gif_dest_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %9 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %8, i32 0, i32 8
  %10 = load i32, i32* %9, align 8
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %2
  %13 = load i32, i32* %4, align 4
  %14 = trunc i32 %13 to i16
  %15 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %16 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %15, i32 0, i32 7
  store i16 %14, i16* %16, align 4
  %17 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %18 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %17, i32 0, i32 8
  store i32 0, i32* %18, align 8
  br label %155

19:                                               ; preds = %2
  %20 = load i32, i32* %4, align 4
  %21 = shl i32 %20, 4
  %22 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %23 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %22, i32 0, i32 7
  %24 = load i16, i16* %23, align 4
  %25 = sext i16 %24 to i32
  %26 = add nsw i32 %21, %25
  store i32 %26, i32* %5, align 4
  %27 = load i32, i32* %5, align 4
  %28 = icmp sge i32 %27, 5003
  br i1 %28, label %29, label %32

29:                                               ; preds = %19
  %30 = load i32, i32* %5, align 4
  %31 = sub nsw i32 %30, 5003
  store i32 %31, i32* %5, align 4
  br label %32

32:                                               ; preds = %29, %19
  %33 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %34 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %33, i32 0, i32 7
  %35 = load i16, i16* %34, align 4
  %36 = sext i16 %35 to i64
  %37 = shl i64 %36, 8
  %38 = load i32, i32* %4, align 4
  %39 = sext i32 %38 to i64
  %40 = or i64 %37, %39
  store i64 %40, i64* %7, align 8
  %41 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %42 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %41, i32 0, i32 12
  %43 = load i16*, i16** %42, align 8
  %44 = load i32, i32* %5, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i16, i16* %43, i64 %45
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i32
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %120

50:                                               ; preds = %32
  %51 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %52 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %51, i32 0, i32 13
  %53 = load i64*, i64** %52, align 8
  %54 = load i32, i32* %5, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i64, i64* %53, i64 %55
  %57 = load i64, i64* %56, align 8
  %58 = load i64, i64* %7, align 8
  %59 = icmp eq i64 %57, %58
  br i1 %59, label %60, label %70

60:                                               ; preds = %50
  %61 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %62 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %61, i32 0, i32 12
  %63 = load i16*, i16** %62, align 8
  %64 = load i32, i32* %5, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i16, i16* %63, i64 %65
  %67 = load i16, i16* %66, align 2
  %68 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %69 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %68, i32 0, i32 7
  store i16 %67, i16* %69, align 4
  br label %155

70:                                               ; preds = %50
  %71 = load i32, i32* %5, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  store i32 1, i32* %6, align 4
  br label %77

74:                                               ; preds = %70
  %75 = load i32, i32* %5, align 4
  %76 = sub nsw i32 5003, %75
  store i32 %76, i32* %6, align 4
  br label %77

77:                                               ; preds = %74, %73
  br label %78

78:                                               ; preds = %118, %77
  %79 = load i32, i32* %6, align 4
  %80 = load i32, i32* %5, align 4
  %81 = sub nsw i32 %80, %79
  store i32 %81, i32* %5, align 4
  %82 = load i32, i32* %5, align 4
  %83 = icmp slt i32 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %78
  %85 = load i32, i32* %5, align 4
  %86 = add nsw i32 %85, 5003
  store i32 %86, i32* %5, align 4
  br label %87

87:                                               ; preds = %84, %78
  %88 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %89 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %88, i32 0, i32 12
  %90 = load i16*, i16** %89, align 8
  %91 = load i32, i32* %5, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i16, i16* %90, i64 %92
  %94 = load i16, i16* %93, align 2
  %95 = sext i16 %94 to i32
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %87
  br label %119

98:                                               ; preds = %87
  %99 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %100 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %99, i32 0, i32 13
  %101 = load i64*, i64** %100, align 8
  %102 = load i32, i32* %5, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i64, i64* %101, i64 %103
  %105 = load i64, i64* %104, align 8
  %106 = load i64, i64* %7, align 8
  %107 = icmp eq i64 %105, %106
  br i1 %107, label %108, label %118

108:                                              ; preds = %98
  %109 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %110 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %109, i32 0, i32 12
  %111 = load i16*, i16** %110, align 8
  %112 = load i32, i32* %5, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i16, i16* %111, i64 %113
  %115 = load i16, i16* %114, align 2
  %116 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %117 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %116, i32 0, i32 7
  store i16 %115, i16* %117, align 4
  br label %155

118:                                              ; preds = %98
  br label %78

119:                                              ; preds = %97
  br label %120

120:                                              ; preds = %119, %32
  %121 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %122 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %123 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %122, i32 0, i32 7
  %124 = load i16, i16* %123, align 4
  call void @output(%struct.gif_dest_struct* %121, i16 signext %124)
  %125 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %126 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %125, i32 0, i32 11
  %127 = load i16, i16* %126, align 8
  %128 = sext i16 %127 to i32
  %129 = icmp slt i32 %128, 4096
  br i1 %129, label %130, label %148

130:                                              ; preds = %120
  %131 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %132 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %131, i32 0, i32 11
  %133 = load i16, i16* %132, align 8
  %134 = add i16 %133, 1
  store i16 %134, i16* %132, align 8
  %135 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %136 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %135, i32 0, i32 12
  %137 = load i16*, i16** %136, align 8
  %138 = load i32, i32* %5, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i16, i16* %137, i64 %139
  store i16 %133, i16* %140, align 2
  %141 = load i64, i64* %7, align 8
  %142 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %143 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %142, i32 0, i32 13
  %144 = load i64*, i64** %143, align 8
  %145 = load i32, i32* %5, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i64, i64* %144, i64 %146
  store i64 %141, i64* %147, align 8
  br label %150

148:                                              ; preds = %120
  %149 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  call void @clear_block(%struct.gif_dest_struct* %149)
  br label %150

150:                                              ; preds = %148, %130
  %151 = load i32, i32* %4, align 4
  %152 = trunc i32 %151 to i16
  %153 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %154 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %153, i32 0, i32 7
  store i16 %152, i16* %154, align 4
  br label %155

155:                                              ; preds = %150, %108, %60, %12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @clear_block(%struct.gif_dest_struct* %0) #0 {
  %2 = alloca %struct.gif_dest_struct*, align 8
  store %struct.gif_dest_struct* %0, %struct.gif_dest_struct** %2, align 8
  %3 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  call void @clear_hash(%struct.gif_dest_struct* %3)
  %4 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %5 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %4, i32 0, i32 9
  %6 = load i16, i16* %5, align 4
  %7 = sext i16 %6 to i32
  %8 = add nsw i32 %7, 2
  %9 = trunc i32 %8 to i16
  %10 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %11 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %10, i32 0, i32 11
  store i16 %9, i16* %11, align 8
  %12 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %13 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %14 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %13, i32 0, i32 9
  %15 = load i16, i16* %14, align 4
  call void @output(%struct.gif_dest_struct* %12, i16 signext %15)
  %16 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %17 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %16, i32 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %20 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %19, i32 0, i32 2
  store i32 %18, i32* %20, align 8
  %21 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %22 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %21, i32 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = shl i32 1, %23
  %25 = sub nsw i32 %24, 1
  %26 = trunc i32 %25 to i16
  %27 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %28 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %27, i32 0, i32 3
  store i16 %26, i16* %28, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @clear_hash(%struct.gif_dest_struct* %0) #0 {
  %2 = alloca %struct.gif_dest_struct*, align 8
  store %struct.gif_dest_struct* %0, %struct.gif_dest_struct** %2, align 8
  %3 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %2, align 8
  %4 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %3, i32 0, i32 12
  %5 = load i16*, i16** %4, align 8
  %6 = bitcast i16* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %6, i8 0, i64 10006, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_header(%struct.gif_dest_struct* %0, i32 %1, i8** %2) #0 {
  %4 = alloca %struct.gif_dest_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.gif_dest_struct* %0, %struct.gif_dest_struct** %4, align 8
  store i32 %1, i32* %5, align 4
  store i8** %2, i8*** %6, align 8
  %13 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %14 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %13, i32 0, i32 1
  %15 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %15, i32 0, i32 42
  %17 = load i32, i32* %16, align 8
  %18 = sub nsw i32 %17, 8
  store i32 %18, i32* %11, align 4
  %19 = load i32, i32* %5, align 4
  %20 = icmp sgt i32 %19, 256
  br i1 %20, label %21, label %48

21:                                               ; preds = %3
  %22 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %23 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %22, i32 0, i32 1
  %24 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %23, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %24, i32 0, i32 0
  %26 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i32 0, i32 5
  store i32 1039, i32* %27, align 8
  %28 = load i32, i32* %5, align 4
  %29 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %30 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %29, i32 0, i32 1
  %31 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %30, align 8
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %31, i32 0, i32 0
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i32 0, i32 6
  %35 = bitcast %union.anon* %34 to [8 x i32]*
  %36 = getelementptr inbounds [8 x i32], [8 x i32]* %35, i64 0, i64 0
  store i32 %28, i32* %36, align 4
  %37 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %38 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %37, i32 0, i32 1
  %39 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %38, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %39, i32 0, i32 0
  %41 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %41, i32 0, i32 0
  %43 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %42, align 8
  %44 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %45 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %44, i32 0, i32 1
  %46 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %45, align 8
  %47 = bitcast %struct.jpeg_decompress_struct* %46 to %struct.jpeg_common_struct*
  call void %43(%struct.jpeg_common_struct* %47)
  br label %48

48:                                               ; preds = %21, %3
  store i32 1, i32* %7, align 4
  br label %49

49:                                               ; preds = %54, %48
  %50 = load i32, i32* %5, align 4
  %51 = load i32, i32* %7, align 4
  %52 = shl i32 1, %51
  %53 = icmp sgt i32 %50, %52
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = load i32, i32* %7, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %7, align 4
  br label %49

57:                                               ; preds = %49
  %58 = load i32, i32* %7, align 4
  %59 = shl i32 1, %58
  store i32 %59, i32* %8, align 4
  %60 = load i32, i32* %7, align 4
  %61 = icmp sle i32 %60, 1
  br i1 %61, label %62, label %63

62:                                               ; preds = %57
  store i32 2, i32* %9, align 4
  br label %65

63:                                               ; preds = %57
  %64 = load i32, i32* %7, align 4
  store i32 %64, i32* %9, align 4
  br label %65

65:                                               ; preds = %63, %62
  %66 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %67 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %66, i32 0, i32 0
  %68 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %67, i32 0, i32 3
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %68, align 8
  %70 = call i32 @putc(i32 71, %struct._IO_FILE* %69)
  %71 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %72 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %71, i32 0, i32 0
  %73 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %72, i32 0, i32 3
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %73, align 8
  %75 = call i32 @putc(i32 73, %struct._IO_FILE* %74)
  %76 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %77 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %76, i32 0, i32 0
  %78 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %77, i32 0, i32 3
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** %78, align 8
  %80 = call i32 @putc(i32 70, %struct._IO_FILE* %79)
  %81 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %82 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %81, i32 0, i32 0
  %83 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %82, i32 0, i32 3
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** %83, align 8
  %85 = call i32 @putc(i32 56, %struct._IO_FILE* %84)
  %86 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %87 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %86, i32 0, i32 0
  %88 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %87, i32 0, i32 3
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** %88, align 8
  %90 = call i32 @putc(i32 55, %struct._IO_FILE* %89)
  %91 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %92 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %91, i32 0, i32 0
  %93 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %92, i32 0, i32 3
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** %93, align 8
  %95 = call i32 @putc(i32 97, %struct._IO_FILE* %94)
  %96 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %97 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %98 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %97, i32 0, i32 1
  %99 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %98, align 8
  %100 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %99, i32 0, i32 26
  %101 = load i32, i32* %100, align 8
  call void @put_word(%struct.gif_dest_struct* %96, i32 %101)
  %102 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %103 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %104 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %103, i32 0, i32 1
  %105 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %104, align 8
  %106 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %105, i32 0, i32 27
  %107 = load i32, i32* %106, align 4
  call void @put_word(%struct.gif_dest_struct* %102, i32 %107)
  store i32 128, i32* %10, align 4
  %108 = load i32, i32* %7, align 4
  %109 = sub nsw i32 %108, 1
  %110 = shl i32 %109, 4
  %111 = load i32, i32* %10, align 4
  %112 = or i32 %111, %110
  store i32 %112, i32* %10, align 4
  %113 = load i32, i32* %7, align 4
  %114 = sub nsw i32 %113, 1
  %115 = load i32, i32* %10, align 4
  %116 = or i32 %115, %114
  store i32 %116, i32* %10, align 4
  %117 = load i32, i32* %10, align 4
  %118 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %119 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %118, i32 0, i32 0
  %120 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %119, i32 0, i32 3
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** %120, align 8
  %122 = call i32 @putc(i32 %117, %struct._IO_FILE* %121)
  %123 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %124 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %123, i32 0, i32 0
  %125 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %124, i32 0, i32 3
  %126 = load %struct._IO_FILE*, %struct._IO_FILE** %125, align 8
  %127 = call i32 @putc(i32 0, %struct._IO_FILE* %126)
  %128 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %129 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %128, i32 0, i32 0
  %130 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %129, i32 0, i32 3
  %131 = load %struct._IO_FILE*, %struct._IO_FILE** %130, align 8
  %132 = call i32 @putc(i32 0, %struct._IO_FILE* %131)
  store i32 0, i32* %12, align 4
  br label %133

133:                                              ; preds = %225, %65
  %134 = load i32, i32* %12, align 4
  %135 = load i32, i32* %8, align 4
  %136 = icmp slt i32 %134, %135
  br i1 %136, label %137, label %228

137:                                              ; preds = %133
  %138 = load i32, i32* %12, align 4
  %139 = load i32, i32* %5, align 4
  %140 = icmp slt i32 %138, %139
  br i1 %140, label %141, label %222

141:                                              ; preds = %137
  %142 = load i8**, i8*** %6, align 8
  %143 = icmp ne i8** %142, null
  br i1 %143, label %144, label %210

144:                                              ; preds = %141
  %145 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %146 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %145, i32 0, i32 1
  %147 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %146, align 8
  %148 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %147, i32 0, i32 10
  %149 = load i32, i32* %148, align 8
  %150 = icmp eq i32 %149, 2
  br i1 %150, label %151, label %197

151:                                              ; preds = %144
  %152 = load i8**, i8*** %6, align 8
  %153 = getelementptr inbounds i8*, i8** %152, i64 0
  %154 = load i8*, i8** %153, align 8
  %155 = load i32, i32* %12, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i8, i8* %154, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = load i32, i32* %11, align 4
  %161 = ashr i32 %159, %160
  %162 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %163 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %162, i32 0, i32 0
  %164 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %163, i32 0, i32 3
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** %164, align 8
  %166 = call i32 @putc(i32 %161, %struct._IO_FILE* %165)
  %167 = load i8**, i8*** %6, align 8
  %168 = getelementptr inbounds i8*, i8** %167, i64 1
  %169 = load i8*, i8** %168, align 8
  %170 = load i32, i32* %12, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds i8, i8* %169, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i32
  %175 = load i32, i32* %11, align 4
  %176 = ashr i32 %174, %175
  %177 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %178 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %177, i32 0, i32 0
  %179 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %178, i32 0, i32 3
  %180 = load %struct._IO_FILE*, %struct._IO_FILE** %179, align 8
  %181 = call i32 @putc(i32 %176, %struct._IO_FILE* %180)
  %182 = load i8**, i8*** %6, align 8
  %183 = getelementptr inbounds i8*, i8** %182, i64 2
  %184 = load i8*, i8** %183, align 8
  %185 = load i32, i32* %12, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds i8, i8* %184, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = load i32, i32* %11, align 4
  %191 = ashr i32 %189, %190
  %192 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %193 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %192, i32 0, i32 0
  %194 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %193, i32 0, i32 3
  %195 = load %struct._IO_FILE*, %struct._IO_FILE** %194, align 8
  %196 = call i32 @putc(i32 %191, %struct._IO_FILE* %195)
  br label %209

197:                                              ; preds = %144
  %198 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %199 = load i8**, i8*** %6, align 8
  %200 = getelementptr inbounds i8*, i8** %199, i64 0
  %201 = load i8*, i8** %200, align 8
  %202 = load i32, i32* %12, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i8, i8* %201, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i32
  %207 = load i32, i32* %11, align 4
  %208 = ashr i32 %206, %207
  call void @put_3bytes(%struct.gif_dest_struct* %198, i32 %208)
  br label %209

209:                                              ; preds = %197, %151
  br label %221

210:                                              ; preds = %141
  %211 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %212 = load i32, i32* %12, align 4
  %213 = mul nsw i32 %212, 255
  %214 = load i32, i32* %5, align 4
  %215 = sub nsw i32 %214, 1
  %216 = sdiv i32 %215, 2
  %217 = add nsw i32 %213, %216
  %218 = load i32, i32* %5, align 4
  %219 = sub nsw i32 %218, 1
  %220 = sdiv i32 %217, %219
  call void @put_3bytes(%struct.gif_dest_struct* %211, i32 %220)
  br label %221

221:                                              ; preds = %210, %209
  br label %224

222:                                              ; preds = %137
  %223 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  call void @put_3bytes(%struct.gif_dest_struct* %223, i32 0)
  br label %224

224:                                              ; preds = %222, %221
  br label %225

225:                                              ; preds = %224
  %226 = load i32, i32* %12, align 4
  %227 = add nsw i32 %226, 1
  store i32 %227, i32* %12, align 4
  br label %133

228:                                              ; preds = %133
  %229 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %230 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %229, i32 0, i32 0
  %231 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %230, i32 0, i32 3
  %232 = load %struct._IO_FILE*, %struct._IO_FILE** %231, align 8
  %233 = call i32 @putc(i32 44, %struct._IO_FILE* %232)
  %234 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  call void @put_word(%struct.gif_dest_struct* %234, i32 0)
  %235 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  call void @put_word(%struct.gif_dest_struct* %235, i32 0)
  %236 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %237 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %238 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %237, i32 0, i32 1
  %239 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %238, align 8
  %240 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %239, i32 0, i32 26
  %241 = load i32, i32* %240, align 8
  call void @put_word(%struct.gif_dest_struct* %236, i32 %241)
  %242 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %243 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %244 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %243, i32 0, i32 1
  %245 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %244, align 8
  %246 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %245, i32 0, i32 27
  %247 = load i32, i32* %246, align 4
  call void @put_word(%struct.gif_dest_struct* %242, i32 %247)
  %248 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %249 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %248, i32 0, i32 0
  %250 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %249, i32 0, i32 3
  %251 = load %struct._IO_FILE*, %struct._IO_FILE** %250, align 8
  %252 = call i32 @putc(i32 0, %struct._IO_FILE* %251)
  %253 = load i32, i32* %9, align 4
  %254 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %255 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %254, i32 0, i32 0
  %256 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %255, i32 0, i32 3
  %257 = load %struct._IO_FILE*, %struct._IO_FILE** %256, align 8
  %258 = call i32 @putc(i32 %253, %struct._IO_FILE* %257)
  %259 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %4, align 8
  %260 = load i32, i32* %9, align 4
  %261 = add nsw i32 %260, 1
  call void @compress_init(%struct.gif_dest_struct* %259, i32 %261)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @put_word(%struct.gif_dest_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.gif_dest_struct*, align 8
  %4 = alloca i32, align 4
  store %struct.gif_dest_struct* %0, %struct.gif_dest_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 255
  %7 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %8 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %8, i32 0, i32 3
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %11 = call i32 @putc(i32 %6, %struct._IO_FILE* %10)
  %12 = load i32, i32* %4, align 4
  %13 = lshr i32 %12, 8
  %14 = and i32 %13, 255
  %15 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %16 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %15, i32 0, i32 0
  %17 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %16, i32 0, i32 3
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8
  %19 = call i32 @putc(i32 %14, %struct._IO_FILE* %18)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @put_3bytes(%struct.gif_dest_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.gif_dest_struct*, align 8
  %4 = alloca i32, align 4
  store %struct.gif_dest_struct* %0, %struct.gif_dest_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %7 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %6, i32 0, i32 0
  %8 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %7, i32 0, i32 3
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %10 = call i32 @putc(i32 %5, %struct._IO_FILE* %9)
  %11 = load i32, i32* %4, align 4
  %12 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %13 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %12, i32 0, i32 0
  %14 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %13, i32 0, i32 3
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %16 = call i32 @putc(i32 %11, %struct._IO_FILE* %15)
  %17 = load i32, i32* %4, align 4
  %18 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %19 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %18, i32 0, i32 0
  %20 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %19, i32 0, i32 3
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %20, align 8
  %22 = call i32 @putc(i32 %17, %struct._IO_FILE* %21)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @compress_init(%struct.gif_dest_struct* %0, i32 %1) #0 {
  %3 = alloca %struct.gif_dest_struct*, align 8
  %4 = alloca i32, align 4
  store %struct.gif_dest_struct* %0, %struct.gif_dest_struct** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %7 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %6, i32 0, i32 4
  store i32 %5, i32* %7, align 8
  %8 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %9 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %8, i32 0, i32 2
  store i32 %5, i32* %9, align 8
  %10 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %11 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = shl i32 1, %12
  %14 = sub nsw i32 %13, 1
  %15 = trunc i32 %14 to i16
  %16 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %17 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %16, i32 0, i32 3
  store i16 %15, i16* %17, align 4
  %18 = load i32, i32* %4, align 4
  %19 = sub nsw i32 %18, 1
  %20 = shl i32 1, %19
  %21 = trunc i32 %20 to i16
  %22 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %23 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %22, i32 0, i32 9
  store i16 %21, i16* %23, align 4
  %24 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %25 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %24, i32 0, i32 9
  %26 = load i16, i16* %25, align 4
  %27 = sext i16 %26 to i32
  %28 = add nsw i32 %27, 1
  %29 = trunc i32 %28 to i16
  %30 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %31 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %30, i32 0, i32 10
  store i16 %29, i16* %31, align 2
  %32 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %33 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %32, i32 0, i32 9
  %34 = load i16, i16* %33, align 4
  %35 = sext i16 %34 to i32
  %36 = add nsw i32 %35, 2
  %37 = trunc i32 %36 to i16
  %38 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %39 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %38, i32 0, i32 11
  store i16 %37, i16* %39, align 8
  %40 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %41 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %40, i32 0, i32 8
  store i32 1, i32* %41, align 8
  %42 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %43 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %42, i32 0, i32 14
  store i32 0, i32* %43, align 8
  %44 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %45 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %44, i32 0, i32 5
  store i64 0, i64* %45, align 8
  %46 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %47 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %46, i32 0, i32 6
  store i32 0, i32* %47, align 8
  %48 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  call void @clear_hash(%struct.gif_dest_struct* %48)
  %49 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %50 = load %struct.gif_dest_struct*, %struct.gif_dest_struct** %3, align 8
  %51 = getelementptr inbounds %struct.gif_dest_struct, %struct.gif_dest_struct* %50, i32 0, i32 9
  %52 = load i16, i16* %51, align 4
  call void @output(%struct.gif_dest_struct* %49, i16 signext %52)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.djpeg_dest_struct* @jinit_write_ppm(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  %3 = alloca %struct.ppm_dest_struct*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i32 0, i32 1
  %6 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %6, i32 0, i32 0
  %8 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %7, align 8
  %9 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %10 = bitcast %struct.jpeg_decompress_struct* %9 to %struct.jpeg_common_struct*
  %11 = call i8* %8(%struct.jpeg_common_struct* %10, i32 1, i64 80)
  %12 = bitcast i8* %11 to %struct.ppm_dest_struct*
  store %struct.ppm_dest_struct* %12, %struct.ppm_dest_struct** %3, align 8
  %13 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %14 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %14, i32 0, i32 0
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)* @start_output_ppm, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)** %15, align 8
  %16 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %17 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %16, i32 0, i32 0
  %18 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %17, i32 0, i32 2
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)* @finish_output_ppm, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)** %18, align 8
  %19 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  call void bitcast (void (%struct.jpeg_decompress_struct.469*)* @jpeg_calc_output_dimensions to void (%struct.jpeg_decompress_struct*)*)(%struct.jpeg_decompress_struct* %19)
  %20 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %20, i32 0, i32 26
  %22 = load i32, i32* %21, align 8
  %23 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %23, i32 0, i32 28
  %25 = load i32, i32* %24, align 8
  %26 = mul i32 %22, %25
  %27 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %28 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %27, i32 0, i32 4
  store i32 %26, i32* %28, align 8
  %29 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %30 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %29, i32 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = zext i32 %31 to i64
  %33 = mul i64 %32, 1
  %34 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %35 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %34, i32 0, i32 3
  store i64 %33, i64* %35, align 8
  %36 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %36, i32 0, i32 1
  %38 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %37, align 8
  %39 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %38, i32 0, i32 0
  %40 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %39, align 8
  %41 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %42 = bitcast %struct.jpeg_decompress_struct* %41 to %struct.jpeg_common_struct*
  %43 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %44 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %43, i32 0, i32 3
  %45 = load i64, i64* %44, align 8
  %46 = call i8* %40(%struct.jpeg_common_struct* %42, i32 1, i64 %45)
  %47 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %48 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %47, i32 0, i32 1
  store i8* %46, i8** %48, align 8
  %49 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %49, i32 0, i32 19
  %51 = load i32, i32* %50, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %98

53:                                               ; preds = %1
  %54 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %54, i32 0, i32 1
  %56 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %55, align 8
  %57 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %56, i32 0, i32 2
  %58 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %57, align 8
  %59 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %60 = bitcast %struct.jpeg_decompress_struct* %59 to %struct.jpeg_common_struct*
  %61 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %62 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %61, i32 0, i32 26
  %63 = load i32, i32* %62, align 8
  %64 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %65 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %64, i32 0, i32 29
  %66 = load i32, i32* %65, align 4
  %67 = mul i32 %63, %66
  %68 = call i8** %58(%struct.jpeg_common_struct* %60, i32 1, i32 %67, i32 1)
  %69 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %70 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %69, i32 0, i32 0
  %71 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %70, i32 0, i32 4
  store i8** %68, i8*** %71, align 8
  %72 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %73 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %72, i32 0, i32 0
  %74 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %73, i32 0, i32 5
  store i32 1, i32* %74, align 8
  %75 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %76 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %75, i32 0, i32 19
  %77 = load i32, i32* %76, align 4
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %53
  %80 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %81 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %80, i32 0, i32 0
  %82 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %81, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)* @copy_pixel_rows, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %82, align 8
  br label %97

83:                                               ; preds = %53
  %84 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %85 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %84, i32 0, i32 10
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %92

88:                                               ; preds = %83
  %89 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %90 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %89, i32 0, i32 0
  %91 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %90, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)* @put_demapped_gray, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %91, align 8
  br label %96

92:                                               ; preds = %83
  %93 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %94 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %93, i32 0, i32 0
  %95 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %94, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)* @put_demapped_rgb, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %95, align 8
  br label %96

96:                                               ; preds = %92, %88
  br label %97

97:                                               ; preds = %96, %79
  br label %115

98:                                               ; preds = %1
  %99 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %100 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %99, i32 0, i32 1
  %101 = load i8*, i8** %100, align 8
  %102 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %103 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %102, i32 0, i32 2
  store i8* %101, i8** %103, align 8
  %104 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %105 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %104, i32 0, i32 2
  %106 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %107 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %106, i32 0, i32 0
  %108 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %107, i32 0, i32 4
  store i8** %105, i8*** %108, align 8
  %109 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %110 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %109, i32 0, i32 0
  %111 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %110, i32 0, i32 5
  store i32 1, i32* %111, align 8
  %112 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %113 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %112, i32 0, i32 0
  %114 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %113, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)* @put_pixel_rows.292, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %114, align 8
  br label %115

115:                                              ; preds = %98, %97
  %116 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %3, align 8
  %117 = bitcast %struct.ppm_dest_struct* %116 to %struct.djpeg_dest_struct*
  ret %struct.djpeg_dest_struct* %117
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_output_ppm(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct.djpeg_dest_struct*, align 8
  %5 = alloca %struct.ppm_dest_struct*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %4, align 8
  %6 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %4, align 8
  %7 = bitcast %struct.djpeg_dest_struct* %6 to %struct.ppm_dest_struct*
  store %struct.ppm_dest_struct* %7, %struct.ppm_dest_struct** %5, align 8
  %8 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %8, i32 0, i32 10
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %39 [
    i32 1, label %11
    i32 2, label %25
  ]

11:                                               ; preds = %2
  %12 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %5, align 8
  %13 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %12, i32 0, i32 0
  %14 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %13, i32 0, i32 3
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %16 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %16, i32 0, i32 26
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %20, i32 0, i32 27
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.293, i64 0, i64 0), i64 %19, i64 %23, i32 255)
  br label %51

25:                                               ; preds = %2
  %26 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %5, align 8
  %27 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %26, i32 0, i32 0
  %28 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %27, i32 0, i32 3
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %28, align 8
  %30 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %30, i32 0, i32 26
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %34, i32 0, i32 27
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.294, i64 0, i64 0), i64 %33, i64 %37, i32 255)
  br label %51

39:                                               ; preds = %2
  %40 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %40, i32 0, i32 0
  %42 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %41, align 8
  %43 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %42, i32 0, i32 5
  store i32 1025, i32* %43, align 8
  %44 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %45 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %44, i32 0, i32 0
  %46 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %45, align 8
  %47 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %46, i32 0, i32 0
  %48 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %47, align 8
  %49 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %50 = bitcast %struct.jpeg_decompress_struct* %49 to %struct.jpeg_common_struct*
  call void %48(%struct.jpeg_common_struct* %50)
  br label %51

51:                                               ; preds = %39, %25, %11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_output_ppm(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct.djpeg_dest_struct*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %4, align 8
  %5 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %4, align 8
  %6 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %5, i32 0, i32 3
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %8 = call i32 @fflush(%struct._IO_FILE* %7)
  %9 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %4, align 8
  %10 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %9, i32 0, i32 3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @ferror(%struct._IO_FILE* %11) #10
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %2
  %15 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %15, i32 0, i32 0
  %17 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %17, i32 0, i32 5
  store i32 36, i32* %18, align 8
  %19 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %19, i32 0, i32 0
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i32 0, i32 0
  %23 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %22, align 8
  %24 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %25 = bitcast %struct.jpeg_decompress_struct* %24 to %struct.jpeg_common_struct*
  call void %23(%struct.jpeg_common_struct* %25)
  br label %26

26:                                               ; preds = %14, %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_pixel_rows(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_decompress_struct*, align 8
  %5 = alloca %struct.djpeg_dest_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.ppm_dest_struct*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %4, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %5, align 8
  store i32 %2, i32* %6, align 4
  %11 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %5, align 8
  %12 = bitcast %struct.djpeg_dest_struct* %11 to %struct.ppm_dest_struct*
  store %struct.ppm_dest_struct* %12, %struct.ppm_dest_struct** %7, align 8
  %13 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %14 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %14, i32 0, i32 4
  %16 = load i8**, i8*** %15, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  store i8* %18, i8** %9, align 8
  %19 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %20 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %19, i32 0, i32 1
  %21 = load i8*, i8** %20, align 8
  store i8* %21, i8** %8, align 8
  %22 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %23 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %22, i32 0, i32 4
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %10, align 4
  br label %25

25:                                               ; preds = %36, %3
  %26 = load i32, i32* %10, align 4
  %27 = icmp ugt i32 %26, 0
  br i1 %27, label %28, label %39

28:                                               ; preds = %25
  %29 = load i8*, i8** %9, align 8
  %30 = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %30, i8** %9, align 8
  %31 = load i8, i8* %29, align 1
  %32 = zext i8 %31 to i32
  %33 = trunc i32 %32 to i8
  %34 = load i8*, i8** %8, align 8
  %35 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %35, i8** %8, align 8
  store i8 %33, i8* %34, align 1
  br label %36

36:                                               ; preds = %28
  %37 = load i32, i32* %10, align 4
  %38 = add i32 %37, -1
  store i32 %38, i32* %10, align 4
  br label %25

39:                                               ; preds = %25
  %40 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %41 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %40, i32 0, i32 1
  %42 = load i8*, i8** %41, align 8
  %43 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %44 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %43, i32 0, i32 3
  %45 = load i64, i64* %44, align 8
  %46 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %47 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %46, i32 0, i32 0
  %48 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %47, i32 0, i32 3
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** %48, align 8
  %50 = call i64 @fwrite(i8* %42, i64 1, i64 %45, %struct._IO_FILE* %49)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @put_demapped_gray(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_decompress_struct*, align 8
  %5 = alloca %struct.djpeg_dest_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.ppm_dest_struct*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %4, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %5, align 8
  store i32 %2, i32* %6, align 4
  %12 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %5, align 8
  %13 = bitcast %struct.djpeg_dest_struct* %12 to %struct.ppm_dest_struct*
  store %struct.ppm_dest_struct* %13, %struct.ppm_dest_struct** %7, align 8
  %14 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %14, i32 0, i32 32
  %16 = load i8**, i8*** %15, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  store i8* %18, i8** %10, align 8
  %19 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %20 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %19, i32 0, i32 0
  %21 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %20, i32 0, i32 4
  %22 = load i8**, i8*** %21, align 8
  %23 = getelementptr inbounds i8*, i8** %22, i64 0
  %24 = load i8*, i8** %23, align 8
  store i8* %24, i8** %9, align 8
  %25 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %26 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %25, i32 0, i32 1
  %27 = load i8*, i8** %26, align 8
  store i8* %27, i8** %8, align 8
  %28 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %28, i32 0, i32 26
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %11, align 4
  br label %31

31:                                               ; preds = %47, %3
  %32 = load i32, i32* %11, align 4
  %33 = icmp ugt i32 %32, 0
  br i1 %33, label %34, label %50

34:                                               ; preds = %31
  %35 = load i8*, i8** %10, align 8
  %36 = load i8*, i8** %9, align 8
  %37 = getelementptr inbounds i8, i8* %36, i32 1
  store i8* %37, i8** %9, align 8
  %38 = load i8, i8* %36, align 1
  %39 = zext i8 %38 to i32
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %35, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = trunc i32 %43 to i8
  %45 = load i8*, i8** %8, align 8
  %46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %46, i8** %8, align 8
  store i8 %44, i8* %45, align 1
  br label %47

47:                                               ; preds = %34
  %48 = load i32, i32* %11, align 4
  %49 = add i32 %48, -1
  store i32 %49, i32* %11, align 4
  br label %31

50:                                               ; preds = %31
  %51 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %52 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %51, i32 0, i32 1
  %53 = load i8*, i8** %52, align 8
  %54 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %55 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %54, i32 0, i32 3
  %56 = load i64, i64* %55, align 8
  %57 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %58 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %57, i32 0, i32 0
  %59 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %58, i32 0, i32 3
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** %59, align 8
  %61 = call i64 @fwrite(i8* %53, i64 1, i64 %56, %struct._IO_FILE* %60)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @put_demapped_rgb(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_decompress_struct*, align 8
  %5 = alloca %struct.djpeg_dest_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.ppm_dest_struct*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %4, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %5, align 8
  store i32 %2, i32* %6, align 4
  %15 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %5, align 8
  %16 = bitcast %struct.djpeg_dest_struct* %15 to %struct.ppm_dest_struct*
  store %struct.ppm_dest_struct* %16, %struct.ppm_dest_struct** %7, align 8
  %17 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %17, i32 0, i32 32
  %19 = load i8**, i8*** %18, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 0
  %21 = load i8*, i8** %20, align 8
  store i8* %21, i8** %11, align 8
  %22 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %22, i32 0, i32 32
  %24 = load i8**, i8*** %23, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 1
  %26 = load i8*, i8** %25, align 8
  store i8* %26, i8** %12, align 8
  %27 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %27, i32 0, i32 32
  %29 = load i8**, i8*** %28, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 2
  %31 = load i8*, i8** %30, align 8
  store i8* %31, i8** %13, align 8
  %32 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %33 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %32, i32 0, i32 0
  %34 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %33, i32 0, i32 4
  %35 = load i8**, i8*** %34, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 0
  %37 = load i8*, i8** %36, align 8
  store i8* %37, i8** %10, align 8
  %38 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %39 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %38, i32 0, i32 1
  %40 = load i8*, i8** %39, align 8
  store i8* %40, i8** %8, align 8
  %41 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %42 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %41, i32 0, i32 26
  %43 = load i32, i32* %42, align 8
  store i32 %43, i32* %14, align 4
  br label %44

44:                                               ; preds = %79, %3
  %45 = load i32, i32* %14, align 4
  %46 = icmp ugt i32 %45, 0
  br i1 %46, label %47, label %82

47:                                               ; preds = %44
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %49, i8** %10, align 8
  %50 = load i8, i8* %48, align 1
  %51 = zext i8 %50 to i32
  store i32 %51, i32* %9, align 4
  %52 = load i8*, i8** %11, align 8
  %53 = load i32, i32* %9, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %52, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = trunc i32 %57 to i8
  %59 = load i8*, i8** %8, align 8
  %60 = getelementptr inbounds i8, i8* %59, i32 1
  store i8* %60, i8** %8, align 8
  store i8 %58, i8* %59, align 1
  %61 = load i8*, i8** %12, align 8
  %62 = load i32, i32* %9, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %61, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = trunc i32 %66 to i8
  %68 = load i8*, i8** %8, align 8
  %69 = getelementptr inbounds i8, i8* %68, i32 1
  store i8* %69, i8** %8, align 8
  store i8 %67, i8* %68, align 1
  %70 = load i8*, i8** %13, align 8
  %71 = load i32, i32* %9, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %70, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = trunc i32 %75 to i8
  %77 = load i8*, i8** %8, align 8
  %78 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %78, i8** %8, align 8
  store i8 %76, i8* %77, align 1
  br label %79

79:                                               ; preds = %47
  %80 = load i32, i32* %14, align 4
  %81 = add i32 %80, -1
  store i32 %81, i32* %14, align 4
  br label %44

82:                                               ; preds = %44
  %83 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %84 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %83, i32 0, i32 1
  %85 = load i8*, i8** %84, align 8
  %86 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %87 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %86, i32 0, i32 3
  %88 = load i64, i64* %87, align 8
  %89 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %90 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %89, i32 0, i32 0
  %91 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %90, i32 0, i32 3
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** %91, align 8
  %93 = call i64 @fwrite(i8* %85, i64 1, i64 %88, %struct._IO_FILE* %92)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @put_pixel_rows.292(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_decompress_struct*, align 8
  %5 = alloca %struct.djpeg_dest_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.ppm_dest_struct*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %4, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %5, align 8
  %9 = bitcast %struct.djpeg_dest_struct* %8 to %struct.ppm_dest_struct*
  store %struct.ppm_dest_struct* %9, %struct.ppm_dest_struct** %7, align 8
  %10 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %11 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %10, i32 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %14 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %13, i32 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = load %struct.ppm_dest_struct*, %struct.ppm_dest_struct** %7, align 8
  %17 = getelementptr inbounds %struct.ppm_dest_struct, %struct.ppm_dest_struct* %16, i32 0, i32 0
  %18 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %17, i32 0, i32 3
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %18, align 8
  %20 = call i64 @fwrite(i8* %12, i64 1, i64 %15, %struct._IO_FILE* %19)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.djpeg_dest_struct* @jinit_write_targa(%struct.jpeg_decompress_struct* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct*, align 8
  %3 = alloca %struct.tga_dest_struct*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %2, align 8
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i32 0, i32 1
  %6 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %6, i32 0, i32 0
  %8 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %7, align 8
  %9 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %10 = bitcast %struct.jpeg_decompress_struct* %9 to %struct.jpeg_common_struct*
  %11 = call i8* %8(%struct.jpeg_common_struct* %10, i32 1, i64 64)
  %12 = bitcast i8* %11 to %struct.tga_dest_struct*
  store %struct.tga_dest_struct* %12, %struct.tga_dest_struct** %3, align 8
  %13 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %3, align 8
  %14 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %14, i32 0, i32 0
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)* @start_output_tga, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)** %15, align 8
  %16 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %3, align 8
  %17 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %16, i32 0, i32 0
  %18 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %17, i32 0, i32 2
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)* @finish_output_tga, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*)** %18, align 8
  %19 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  call void bitcast (void (%struct.jpeg_decompress_struct.469*)* @jpeg_calc_output_dimensions to void (%struct.jpeg_decompress_struct*)*)(%struct.jpeg_decompress_struct* %19)
  %20 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %20, i32 0, i32 26
  %22 = load i32, i32* %21, align 8
  %23 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %23, i32 0, i32 29
  %25 = load i32, i32* %24, align 4
  %26 = mul i32 %22, %25
  %27 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %3, align 8
  %28 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %27, i32 0, i32 2
  store i32 %26, i32* %28, align 8
  %29 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %29, i32 0, i32 1
  %31 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %30, align 8
  %32 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %31, i32 0, i32 0
  %33 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %32, align 8
  %34 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %35 = bitcast %struct.jpeg_decompress_struct* %34 to %struct.jpeg_common_struct*
  %36 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %3, align 8
  %37 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %36, i32 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = zext i32 %38 to i64
  %40 = mul i64 %39, 1
  %41 = call i8* %33(%struct.jpeg_common_struct* %35, i32 1, i64 %40)
  %42 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %3, align 8
  %43 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %42, i32 0, i32 1
  store i8* %41, i8** %43, align 8
  %44 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %45 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %44, i32 0, i32 1
  %46 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %45, align 8
  %47 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %46, i32 0, i32 2
  %48 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %47, align 8
  %49 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %50 = bitcast %struct.jpeg_decompress_struct* %49 to %struct.jpeg_common_struct*
  %51 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %3, align 8
  %52 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %51, i32 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = call i8** %48(%struct.jpeg_common_struct* %50, i32 1, i32 %53, i32 1)
  %55 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %3, align 8
  %56 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %55, i32 0, i32 0
  %57 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %56, i32 0, i32 4
  store i8** %54, i8*** %57, align 8
  %58 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %3, align 8
  %59 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %58, i32 0, i32 0
  %60 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %59, i32 0, i32 5
  store i32 1, i32* %60, align 8
  %61 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %3, align 8
  %62 = bitcast %struct.tga_dest_struct* %61 to %struct.djpeg_dest_struct*
  ret %struct.djpeg_dest_struct* %62
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_output_tga(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct.djpeg_dest_struct*, align 8
  %5 = alloca %struct.tga_dest_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct._IO_FILE*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %4, align 8
  %9 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %4, align 8
  %10 = bitcast %struct.djpeg_dest_struct* %9 to %struct.tga_dest_struct*
  store %struct.tga_dest_struct* %10, %struct.tga_dest_struct** %5, align 8
  %11 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %11, i32 0, i32 10
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %31

15:                                               ; preds = %2
  %16 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %17 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %4, align 8
  call void @write_header(%struct.jpeg_decompress_struct* %16, %struct.djpeg_dest_struct* %17, i32 0)
  %18 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %18, i32 0, i32 19
  %20 = load i32, i32* %19, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %15
  %23 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %5, align 8
  %24 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %23, i32 0, i32 0
  %25 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %24, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)* @put_demapped_gray.297, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %25, align 8
  br label %30

26:                                               ; preds = %15
  %27 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %5, align 8
  %28 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %27, i32 0, i32 0
  %29 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %28, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)* @put_gray_rows.298, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %29, align 8
  br label %30

30:                                               ; preds = %26, %22
  br label %142

31:                                               ; preds = %2
  %32 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %32, i32 0, i32 10
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 2
  br i1 %35, label %36, label %129

36:                                               ; preds = %31
  %37 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %38 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %37, i32 0, i32 19
  %39 = load i32, i32* %38, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %122

41:                                               ; preds = %36
  %42 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %43 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %42, i32 0, i32 31
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %6, align 4
  %45 = load i32, i32* %6, align 4
  %46 = icmp sgt i32 %45, 256
  br i1 %46, label %47, label %66

47:                                               ; preds = %41
  %48 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %49 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %48, i32 0, i32 0
  %50 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %49, align 8
  %51 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %50, i32 0, i32 5
  store i32 1039, i32* %51, align 8
  %52 = load i32, i32* %6, align 4
  %53 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %54 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %53, i32 0, i32 0
  %55 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %54, align 8
  %56 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %55, i32 0, i32 6
  %57 = bitcast %union.anon* %56 to [8 x i32]*
  %58 = getelementptr inbounds [8 x i32], [8 x i32]* %57, i64 0, i64 0
  store i32 %52, i32* %58, align 4
  %59 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %60 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %59, i32 0, i32 0
  %61 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %60, align 8
  %62 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %61, i32 0, i32 0
  %63 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %62, align 8
  %64 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %65 = bitcast %struct.jpeg_decompress_struct* %64 to %struct.jpeg_common_struct*
  call void %63(%struct.jpeg_common_struct* %65)
  br label %66

66:                                               ; preds = %47, %41
  %67 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %68 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %4, align 8
  %69 = load i32, i32* %6, align 4
  call void @write_header(%struct.jpeg_decompress_struct* %67, %struct.djpeg_dest_struct* %68, i32 %69)
  %70 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %5, align 8
  %71 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %70, i32 0, i32 0
  %72 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %71, i32 0, i32 3
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** %72, align 8
  store %struct._IO_FILE* %73, %struct._IO_FILE** %8, align 8
  store i32 0, i32* %7, align 4
  br label %74

74:                                               ; preds = %115, %66
  %75 = load i32, i32* %7, align 4
  %76 = load i32, i32* %6, align 4
  %77 = icmp slt i32 %75, %76
  br i1 %77, label %78, label %118

78:                                               ; preds = %74
  %79 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %80 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %79, i32 0, i32 32
  %81 = load i8**, i8*** %80, align 8
  %82 = getelementptr inbounds i8*, i8** %81, i64 2
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %7, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %83, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %90 = call i32 @putc(i32 %88, %struct._IO_FILE* %89)
  %91 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %92 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %91, i32 0, i32 32
  %93 = load i8**, i8*** %92, align 8
  %94 = getelementptr inbounds i8*, i8** %93, i64 1
  %95 = load i8*, i8** %94, align 8
  %96 = load i32, i32* %7, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %95, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %102 = call i32 @putc(i32 %100, %struct._IO_FILE* %101)
  %103 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %104 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %103, i32 0, i32 32
  %105 = load i8**, i8*** %104, align 8
  %106 = getelementptr inbounds i8*, i8** %105, i64 0
  %107 = load i8*, i8** %106, align 8
  %108 = load i32, i32* %7, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* %107, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %114 = call i32 @putc(i32 %112, %struct._IO_FILE* %113)
  br label %115

115:                                              ; preds = %78
  %116 = load i32, i32* %7, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %7, align 4
  br label %74

118:                                              ; preds = %74
  %119 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %5, align 8
  %120 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %119, i32 0, i32 0
  %121 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %120, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)* @put_gray_rows.298, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %121, align 8
  br label %128

122:                                              ; preds = %36
  %123 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %124 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %4, align 8
  call void @write_header(%struct.jpeg_decompress_struct* %123, %struct.djpeg_dest_struct* %124, i32 0)
  %125 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %5, align 8
  %126 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %125, i32 0, i32 0
  %127 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %126, i32 0, i32 1
  store void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)* @put_pixel_rows.299, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %127, align 8
  br label %128

128:                                              ; preds = %122, %118
  br label %141

129:                                              ; preds = %31
  %130 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %131 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %130, i32 0, i32 0
  %132 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %131, align 8
  %133 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %132, i32 0, i32 5
  store i32 1034, i32* %133, align 8
  %134 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %135 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %134, i32 0, i32 0
  %136 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %135, align 8
  %137 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %136, i32 0, i32 0
  %138 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %137, align 8
  %139 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %140 = bitcast %struct.jpeg_decompress_struct* %139 to %struct.jpeg_common_struct*
  call void %138(%struct.jpeg_common_struct* %140)
  br label %141

141:                                              ; preds = %129, %128
  br label %142

142:                                              ; preds = %141, %30
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_output_tga(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1) #0 {
  %3 = alloca %struct.jpeg_decompress_struct*, align 8
  %4 = alloca %struct.djpeg_dest_struct*, align 8
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %3, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %4, align 8
  %5 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %4, align 8
  %6 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %5, i32 0, i32 3
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %8 = call i32 @fflush(%struct._IO_FILE* %7)
  %9 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %4, align 8
  %10 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %9, i32 0, i32 3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @ferror(%struct._IO_FILE* %11) #10
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %2
  %15 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %15, i32 0, i32 0
  %17 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %17, i32 0, i32 5
  store i32 36, i32* %18, align 8
  %19 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %19, i32 0, i32 0
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i32 0, i32 0
  %23 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %22, align 8
  %24 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %25 = bitcast %struct.jpeg_decompress_struct* %24 to %struct.jpeg_common_struct*
  call void %23(%struct.jpeg_common_struct* %25)
  br label %26

26:                                               ; preds = %14, %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @write_header(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_decompress_struct*, align 8
  %5 = alloca %struct.djpeg_dest_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [18 x i8], align 16
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %4, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %8, i8 0, i64 18, i1 false)
  %9 = load i32, i32* %6, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %3
  %12 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 1
  store i8 1, i8* %12, align 1
  %13 = load i32, i32* %6, align 4
  %14 = and i32 %13, 255
  %15 = trunc i32 %14 to i8
  %16 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 5
  store i8 %15, i8* %16, align 1
  %17 = load i32, i32* %6, align 4
  %18 = ashr i32 %17, 8
  %19 = trunc i32 %18 to i8
  %20 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 6
  store i8 %19, i8* %20, align 2
  %21 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 7
  store i8 24, i8* %21, align 1
  br label %22

22:                                               ; preds = %11, %3
  %23 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %23, i32 0, i32 26
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 255
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 12
  store i8 %27, i8* %28, align 4
  %29 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %29, i32 0, i32 26
  %31 = load i32, i32* %30, align 8
  %32 = lshr i32 %31, 8
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 13
  store i8 %33, i8* %34, align 1
  %35 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %35, i32 0, i32 27
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 255
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 14
  store i8 %39, i8* %40, align 2
  %41 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %42 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %41, i32 0, i32 27
  %43 = load i32, i32* %42, align 4
  %44 = lshr i32 %43, 8
  %45 = trunc i32 %44 to i8
  %46 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 15
  store i8 %45, i8* %46, align 1
  %47 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 17
  store i8 32, i8* %47, align 1
  %48 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %49 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %48, i32 0, i32 10
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %55

52:                                               ; preds = %22
  %53 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 2
  store i8 3, i8* %53, align 2
  %54 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 16
  store i8 8, i8* %54, align 16
  br label %65

55:                                               ; preds = %22
  %56 = load i32, i32* %6, align 4
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %55
  %59 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 2
  store i8 1, i8* %59, align 2
  %60 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 16
  store i8 8, i8* %60, align 16
  br label %64

61:                                               ; preds = %55
  %62 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 2
  store i8 2, i8* %62, align 2
  %63 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 16
  store i8 24, i8* %63, align 16
  br label %64

64:                                               ; preds = %61, %58
  br label %65

65:                                               ; preds = %64, %52
  %66 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 0
  %67 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %5, align 8
  %68 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %67, i32 0, i32 3
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %68, align 8
  %70 = call i64 @fwrite(i8* %66, i64 1, i64 18, %struct._IO_FILE* %69)
  %71 = icmp ne i64 %70, 18
  br i1 %71, label %72, label %84

72:                                               ; preds = %65
  %73 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %74 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %73, i32 0, i32 0
  %75 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %74, align 8
  %76 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %75, i32 0, i32 5
  store i32 36, i32* %76, align 8
  %77 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %78 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %77, i32 0, i32 0
  %79 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %78, align 8
  %80 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %79, i32 0, i32 0
  %81 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %80, align 8
  %82 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %83 = bitcast %struct.jpeg_decompress_struct* %82 to %struct.jpeg_common_struct*
  call void %81(%struct.jpeg_common_struct* %83)
  br label %84

84:                                               ; preds = %72, %65
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @put_demapped_gray.297(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_decompress_struct*, align 8
  %5 = alloca %struct.djpeg_dest_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.tga_dest_struct*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %4, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %5, align 8
  store i32 %2, i32* %6, align 4
  %12 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %5, align 8
  %13 = bitcast %struct.djpeg_dest_struct* %12 to %struct.tga_dest_struct*
  store %struct.tga_dest_struct* %13, %struct.tga_dest_struct** %7, align 8
  %14 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %14, i32 0, i32 32
  %16 = load i8**, i8*** %15, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  store i8* %18, i8** %10, align 8
  %19 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %7, align 8
  %20 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %19, i32 0, i32 0
  %21 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %20, i32 0, i32 4
  %22 = load i8**, i8*** %21, align 8
  %23 = getelementptr inbounds i8*, i8** %22, i64 0
  %24 = load i8*, i8** %23, align 8
  store i8* %24, i8** %8, align 8
  %25 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %7, align 8
  %26 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %25, i32 0, i32 1
  %27 = load i8*, i8** %26, align 8
  store i8* %27, i8** %9, align 8
  %28 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %28, i32 0, i32 26
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %11, align 4
  br label %31

31:                                               ; preds = %47, %3
  %32 = load i32, i32* %11, align 4
  %33 = icmp ugt i32 %32, 0
  br i1 %33, label %34, label %50

34:                                               ; preds = %31
  %35 = load i8*, i8** %10, align 8
  %36 = load i8*, i8** %8, align 8
  %37 = getelementptr inbounds i8, i8* %36, i32 1
  store i8* %37, i8** %8, align 8
  %38 = load i8, i8* %36, align 1
  %39 = zext i8 %38 to i32
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %35, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = trunc i32 %43 to i8
  %45 = load i8*, i8** %9, align 8
  %46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %46, i8** %9, align 8
  store i8 %44, i8* %45, align 1
  br label %47

47:                                               ; preds = %34
  %48 = load i32, i32* %11, align 4
  %49 = add i32 %48, -1
  store i32 %49, i32* %11, align 4
  br label %31

50:                                               ; preds = %31
  %51 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %7, align 8
  %52 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %51, i32 0, i32 1
  %53 = load i8*, i8** %52, align 8
  %54 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %7, align 8
  %55 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %54, i32 0, i32 2
  %56 = load i32, i32* %55, align 8
  %57 = zext i32 %56 to i64
  %58 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %7, align 8
  %59 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %58, i32 0, i32 0
  %60 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %59, i32 0, i32 3
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %60, align 8
  %62 = call i64 @fwrite(i8* %53, i64 1, i64 %57, %struct._IO_FILE* %61)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @put_gray_rows.298(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_decompress_struct*, align 8
  %5 = alloca %struct.djpeg_dest_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.tga_dest_struct*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %4, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %5, align 8
  store i32 %2, i32* %6, align 4
  %11 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %5, align 8
  %12 = bitcast %struct.djpeg_dest_struct* %11 to %struct.tga_dest_struct*
  store %struct.tga_dest_struct* %12, %struct.tga_dest_struct** %7, align 8
  %13 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %7, align 8
  %14 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %14, i32 0, i32 4
  %16 = load i8**, i8*** %15, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  store i8* %18, i8** %8, align 8
  %19 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %7, align 8
  %20 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %19, i32 0, i32 1
  %21 = load i8*, i8** %20, align 8
  store i8* %21, i8** %9, align 8
  %22 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %22, i32 0, i32 26
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %10, align 4
  br label %25

25:                                               ; preds = %36, %3
  %26 = load i32, i32* %10, align 4
  %27 = icmp ugt i32 %26, 0
  br i1 %27, label %28, label %39

28:                                               ; preds = %25
  %29 = load i8*, i8** %8, align 8
  %30 = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %30, i8** %8, align 8
  %31 = load i8, i8* %29, align 1
  %32 = zext i8 %31 to i32
  %33 = trunc i32 %32 to i8
  %34 = load i8*, i8** %9, align 8
  %35 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %35, i8** %9, align 8
  store i8 %33, i8* %34, align 1
  br label %36

36:                                               ; preds = %28
  %37 = load i32, i32* %10, align 4
  %38 = add i32 %37, -1
  store i32 %38, i32* %10, align 4
  br label %25

39:                                               ; preds = %25
  %40 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %7, align 8
  %41 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %40, i32 0, i32 1
  %42 = load i8*, i8** %41, align 8
  %43 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %7, align 8
  %44 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %43, i32 0, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = zext i32 %45 to i64
  %47 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %7, align 8
  %48 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %47, i32 0, i32 0
  %49 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %48, i32 0, i32 3
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %49, align 8
  %51 = call i64 @fwrite(i8* %42, i64 1, i64 %46, %struct._IO_FILE* %50)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @put_pixel_rows.299(%struct.jpeg_decompress_struct* %0, %struct.djpeg_dest_struct* %1, i32 %2) #0 {
  %4 = alloca %struct.jpeg_decompress_struct*, align 8
  %5 = alloca %struct.djpeg_dest_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.tga_dest_struct*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store %struct.jpeg_decompress_struct* %0, %struct.jpeg_decompress_struct** %4, align 8
  store %struct.djpeg_dest_struct* %1, %struct.djpeg_dest_struct** %5, align 8
  store i32 %2, i32* %6, align 4
  %11 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %5, align 8
  %12 = bitcast %struct.djpeg_dest_struct* %11 to %struct.tga_dest_struct*
  store %struct.tga_dest_struct* %12, %struct.tga_dest_struct** %7, align 8
  %13 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %7, align 8
  %14 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %14, i32 0, i32 4
  %16 = load i8**, i8*** %15, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  store i8* %18, i8** %8, align 8
  %19 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %7, align 8
  %20 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %19, i32 0, i32 1
  %21 = load i8*, i8** %20, align 8
  store i8* %21, i8** %9, align 8
  %22 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %4, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %22, i32 0, i32 26
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %10, align 4
  br label %25

25:                                               ; preds = %54, %3
  %26 = load i32, i32* %10, align 4
  %27 = icmp ugt i32 %26, 0
  br i1 %27, label %28, label %57

28:                                               ; preds = %25
  %29 = load i8*, i8** %8, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 2
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = trunc i32 %32 to i8
  %34 = load i8*, i8** %9, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 0
  store i8 %33, i8* %35, align 1
  %36 = load i8*, i8** %8, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = trunc i32 %39 to i8
  %41 = load i8*, i8** %9, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 1
  store i8 %40, i8* %42, align 1
  %43 = load i8*, i8** %8, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 0
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = trunc i32 %46 to i8
  %48 = load i8*, i8** %9, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 2
  store i8 %47, i8* %49, align 1
  %50 = load i8*, i8** %8, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 3
  store i8* %51, i8** %8, align 8
  %52 = load i8*, i8** %9, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 3
  store i8* %53, i8** %9, align 8
  br label %54

54:                                               ; preds = %28
  %55 = load i32, i32* %10, align 4
  %56 = add i32 %55, -1
  store i32 %56, i32* %10, align 4
  br label %25

57:                                               ; preds = %25
  %58 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %7, align 8
  %59 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %58, i32 0, i32 1
  %60 = load i8*, i8** %59, align 8
  %61 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %7, align 8
  %62 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %61, i32 0, i32 2
  %63 = load i32, i32* %62, align 8
  %64 = zext i32 %63 to i64
  %65 = load %struct.tga_dest_struct*, %struct.tga_dest_struct** %7, align 8
  %66 = getelementptr inbounds %struct.tga_dest_struct, %struct.tga_dest_struct* %65, i32 0, i32 0
  %67 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %66, i32 0, i32 3
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** %67, align 8
  %69 = call i64 @fwrite(i8* %60, i64 1, i64 %64, %struct._IO_FILE* %68)
  ret void
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { nounwind readnone }
attributes #8 = { nounwind readonly }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"Debian clang version 10.0.1-++20200708124224+ef32c611aa2-1~exp1~20200707224822.188 "}
!1 = !{i32 1, !"wchar_size", i32 4}
